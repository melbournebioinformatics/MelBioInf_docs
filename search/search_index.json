{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome-to-mbite","title":"Welcome to MBITE!","text":"<p>MBITE stands for Melbourne BIoinformatics Training and Education. These tutorials have been developed by bioinformaticians at MB, where they are regularly delivered as in-house or online workshops. They are also designed to be used for self-directed learning. Many of the training materials were developed for use on Galaxy Australia, enabling learners to easily transition from learning to doing their own data analysis.</p> <p>To get updates about or attend our workshops, check out our Melbourne Bioinformatics Eventbrite page.</p>"},{"location":"deprecated/","title":"Bioinformatics Tutorials","text":"<ul> <li>Bioinformatics Tutorials<ul> <li>What\u2019s in a tutorial</li> <li>How to contribute<ul> <li>Fork and clone this repository</li> <li>Sync with upstream</li> <li>Set up your environment and build the documentation</li> <li>Deploy to your fork (optional)</li> <li>Pull request</li> </ul> </li> <li>Merging and deploying a pull request</li> <li>Making changes to tutorial instructions</li> <li>Making changes to slides</li> <li>Adding a new tutorial</li> </ul> </li> <li>Travis configuration</li> </ul> <p>These tutorials have been developed by Melbourne Bioinformatics (formerly VLSCI) and are used in Melbourne Bioinformatics hands-on workshops.</p> <p>The tutorials have been deployed here: http://melbournebioinformatics.github.io/MelBioInf_docs/</p> <p>Tutorials are written in Markdown and built with MkDocs. All documentation source files are under <code>docs/</code>. Tutorials are stored under <code>docs/tutorials/</code>.</p> <p>Slides for workshops are currently stored in Google Drive as Google Slides. Slides may optionally be added to this repository as e.g. Markdown or PDF.</p>"},{"location":"deprecated/#whats-in-a-tutorial","title":"What\u2019s in a tutorial","text":"<p>Each tutorial subdirectory under <code>docs/tutorials/</code> should contain:</p> <ul> <li>At least one Markdown (<code>.md</code>) document with tutorial instructions. One of these should be the main tutorial document and be listed in <code>mkdocs.yml</code> in the top directory of this repository.</li> <li>A <code>README.md</code> Markdown document containing suggested PR reviewers and the location of any relevant Google Slides (or any other slides that cannot be stored in the repository directly).</li> <li>A <code>media</code> subdirectory with images that will be used by MkDocs.</li> </ul> <p>Tutorials are built and deployed to the <code>gh-pages</code> branch using MkDocs, and then appear at http://melbournebioinformatics.github.io/MelBioInf_docs/.</p>"},{"location":"deprecated/#how-to-contribute","title":"How to contribute","text":"<p>This section is a guide to contributing edits to the repository. For a guide to which files to edit, see Making changes to tutorial instructions, Making changes to slides, and Adding a new tutorial.</p>"},{"location":"deprecated/#fork-and-clone-this-repository","title":"Fork and clone this repository","text":"<p>You should do your work in a fork under your own github account:</p> <ul> <li>Fork this repository in github using the fork button at https://github.com/melbournebioinformatics/MelBioInf_docs.</li> <li>Clone your fork to your local computer, e.g.: <code>git clone https://github.com/&lt;your_account&gt;/MelBioInf_docs</code></li> </ul> <p>It is often a good idea to make a separate branch in your fork to work on your changes.</p>"},{"location":"deprecated/#sync-with-upstream","title":"Sync with upstream","text":"<p>If the repository has been edited since you forked it, you will need to bring your fork up to date before you can contribute changes:</p> <pre><code>git remote add upstream https://github.com/melbournebioinformatics/MelBioInf_docs\ngit fetch upstream\ngit merge upstream/master\n</code></pre>"},{"location":"deprecated/#set-up-your-environment-and-build-the-documentation","title":"Set up your environment and build the documentation","text":"<p>We are using the Python package MkDocs.</p> <p>I recommend installing MkDocs into a virtualenv:</p> <pre><code>python3 -m venv mkdocs_dev # or python2 -m virtualenv mkdocs_dev\nsource mkdocs_dev/bin/activate\npip install -r requirements.txt\n</code></pre> <p>Once you have mkdocs installed (and in your PATH) then you can preview the website by running the following command in the top directory of this repository:</p> <pre><code>mkdocs serve\n</code></pre> <p>This will start up a web server hosting on a local URL, like so: <pre><code>Running at: http://127.0.0.1:8000/\nLive reload enabled.\nHold ctrl+c to quit.\n</code></pre></p> <p>You can view the site if you point your browser at the specified URL.</p> <p>MkDocs will automatically try to update the local site preview if you edit the documentation pages.</p> <p>Alternatively, you can build the site locally using <code>mkdocs build</code>. This will put all the HTML, CSS, Javascript etcetera for the site in the directory called site, but unlike <code>mkdocs serve</code>, will not run a local webserver or update the build when you make changes.</p> <p>It is a good idea to preview your changes locally before pushing them.</p>"},{"location":"deprecated/#deploy-to-your-fork-optional","title":"Deploy to your fork (optional)","text":"<p>You can deploy changes to your fork. This will allow you (and PR reviewers) to view your changes online prior to merging your pull request.</p> <p>Run:</p> <pre><code>mkdocs gh-deploy\n</code></pre> <p>This will build the Markdown into HTML in your fork\u2019s <code>gh-pages</code> branch, AND immediately push the result without any further chance to review it. Your build should be visible at <code>http://&lt;your_account&gt;.github.io/lscc_docs/tutorials</code>.</p>"},{"location":"deprecated/#pull-request","title":"Pull request","text":"<p>Commit your changes. Then push them to your fork with <code>git push origin master</code>.</p> <p>Open your fork in github at <code>https://github.com/&lt;your_account&gt;/MelBioInf_docs</code> and create a pull request.</p> <p>If your fork is up to date, you should see \u201cThese branches can be automatically merged\u201d while you are creating the pull request. If your fork is not up to date you should bring it up to date (see Sync with upstream)) and resolve any merge conflicts before creating the pull request.</p> <p>Ideally you should have someone else check and merge your pull request rather than do it yourself. Suggested reviewers for each tutorial are in that tutorial\u2019s <code>README.md</code>.</p> <p>Preferably, change one major thing per pull request - e.g. edit one tutorial in one pull request, and make a separate pull request if you want to edit another tutorial.</p>"},{"location":"deprecated/#merging-and-deploying-a-pull-request","title":"Merging and deploying a pull request","text":"<p>If someone has asked you to merge their PR, or if you are merging in your own, you can simply merge it and the documentation will be re-deployed. Best practice is:</p> <ul> <li>Check the changes in github to spot any errors. You should be able to see the diff for the changes if the requester has sent you a link to their Pull Request.</li> <li>Optionally, to view the new docs in their final form:<ul> <li>view the deployed site at the requester\u2019s fork. This will be at <code>http://&lt;requesters_account&gt;.github.io/MelBioInf_docs/</code> if the author has run <code>mkdocs gh-deploy</code> on their fork.</li> <li>or, clone and build the requester\u2019s fork locally, using the instructions above.</li> </ul> </li> <li>Merge the PR in github. If there are merge conflicts, ask the issuer of the pull request to bring their fork up to date (see Sync with upstream) and re-issue the pull request.</li> </ul> <p>It should no longer be necessary to manually re-deploy the documentation to the gh-pages branch. We have a Travis hook configured in <code>.travis.yml</code> which will automatically run <code>mkdocs gh-deploy</code> whenever the master branch changes. After merging a PR or modifying the master branch, after a short delay, the updated tutorial should automatically appear at http://melbournebioinformatics.github.io/MelBioInf_docs/ .</p> <p>If you do need to manually re-deploy the documentation to the gh-pages branch, you can clone or update a local copy of this repository, and re-deploy the updated documentation, like so: <pre><code>git clone https://github.com/melbournebioinformatics/MelBioInf_docs\ncd MelBioInf_docs\nmkdocs gh-deploy\n</code></pre></p>"},{"location":"deprecated/#making-changes-to-tutorial-instructions","title":"Making changes to tutorial instructions","text":"<p>Tutorial instructions are stored as Markdown and fully versioned, so you can just edit the <code>.md</code> files containing those instructions and commit your changes. Follow the instructions above to contribute changes.</p> <p>New media can be added to the tutorial\u2019s <code>media</code> subdirectory and linked in to the Markdown document.</p>"},{"location":"deprecated/#making-changes-to-slides","title":"Making changes to slides","text":"<p>For slides stored in Google Drive, a link should be recorded in <code>docs/tutorials/&lt;tutorialname&gt;/README.md</code>. This link should point to the Google slides source (not PDF) where possible.</p> <p>If you have made an alternate version of the slides for a workshop, you can list the link for it under \u201cOther slides\u201d in the <code>README.md</code>. Give some kind of description for this alternate version, e.g. \u201cslides for a clinical audience\u201d, \u201cslides for bioinformaticians at GCC\u201d, or \u201cClare\u2019s abbreviated 5-minute slides\u201d.</p> <p>If you want to update the latest set of slides for a workshop:</p> <ul> <li>Move the link from \u201cCurrent slides\u201d in <code>README.md</code> to a bullet point under \u201cOther slides\u201d. Give some kind of description for this old version, even if it is just something like \u201cSlides prior to June 2017 edits\u201d.</li> <li>Create the new set of slides. Ideally, it should be stored in the LSCC shared Google Drive folder, in an appropriately named subfolder under either  <code>LSCC_shared/capacity_building/tutorials_workshops/</code> or <code>LSCC_shared/capacity_building/LSCC_NGSschool/</code>.</li> <li>Get a shareable link to your slides from Google Drive. If you do this via \u201cGet shareable link\u201d, you will find that Google will automatically turn on link sharing. You should make sure to turn off edit permissions on link sharing or, if preferred, turn off link sharing completely: the link will still work, and so long as the slides were created in the <code>LSCC_shared</code> folder, they will still be accessible to anyone with access permissions for that folder.</li> <li>Add the link to your new slides after \u201cCurrent slides:\u201d in the <code>README.md</code>.</li> </ul> <p>Don\u2019t be afraid to replace the current slides with your version if you think it is more up to date. The old slides are still accessible.</p>"},{"location":"deprecated/#adding-a-new-tutorial","title":"Adding a new tutorial","text":"<p>To create your new tutorial:</p> <ul> <li> <p>The layout and formatting templates are located here: https://github.com/melbournebioinformatics/MB_training_template (docs/layout_template.md and docs/formatting_template.md).</p> </li> <li> <p>Create a new subdirectory under <code>docs/tutorials</code> with a meaningful name, e.g. <code>docs/tutorials/molecular_modelling</code></p> </li> <li>Copy the layout template into the new subdirectory, rename and edit it to contain the tutorial instructions, e.g. <code>docs/tutorials/molecular_modelling/molecular_modelling.md</code>.</li> <li>Add your main Markdown document to <code>mkdocs.yml</code> in the correct section. This will cause a link to it to appear in the menu of tutorials.</li> <li>Create a <code>media</code> subdirectory, e.g. <code>docs/tutorials/molecular_modelling/media</code>. Copy in any images you need from other tutorials (e.g. logos). You can add any images here that you want to link into your Markdown documents.</li> <li>Create a <code>README.md</code> file in your tutorial subdirectory, e.g. <code>docs/tutorials/molecular_modelling/README.md</code>. You can copy the format of this file from another tutorial. Add your own name as a PR reviewer for future changes.</li> </ul> <p>Add slides:</p> <ul> <li>If you are using Google Slides, ideally store them in a new subdirectory under <code>LSCC_shared/capacity_building/LSCC_NGSschool</code>.</li> <li>Add a link to the slides to your new <code>README.md</code> and label them \u201cCurrent slides\u201d.</li> </ul> <p>Once you\u2019ve created your content:</p> <ul> <li>Before committing changes, add all newly created files to git with <code>git add</code>.</li> <li>Follow the How to contribute instructions above to create a pull request. When previewing your changes, check that the new tutorial appears in the menu and renders correctly.</li> <li>Tell Christina that there is a new workshop available.</li> </ul>"},{"location":"deprecated/#continuous-integration","title":"Continuous Integration","text":"<p>Github actions is used to automatically re-deploy documentation.  When your pull request is merged, the training website is rebuilt to reflect the new changes.  For specific details, see <code>.github/workflows/rebuild_website.yml</code>.</p>"},{"location":"guides/bioinfo/","title":"What is bioinformatics?","text":"<p>Bioinformatics is the analysis of biologial data using computational methods. It includes the study of genes and genomes, RNA, proteins and metabolites.</p>"},{"location":"guides/bioinfo/#getting-started","title":"Getting started","text":"<ul> <li> <p>Look at our guides on the left for a general introduction to several key topics in bioinformatics.</p> </li> <li> <p>Underneath the guides, there are groups of tutorials for common tasks in bioinformatics.</p> </li> <li> <p>To analyse data, we recommend getting started with Galaxy - a free, web-based bioinformatics platform.</p> </li> </ul>"},{"location":"guides/bioinfo/#resources","title":"Resources","text":"<ul> <li> <p>Melbourne Bioinformatics tutorials: see the left hand panel for tutorials covering computing, genomics, RNA-seq, and proteomics.</p> </li> <li> <p>Australian Bioinformatics and Computational Biology Society: www.abacbs.org</p> </li> <li> <p>Student group of ABACBS - COMBINE: www.combine.org.au</p> </li> <li> <p>BioInfo Summer: www.bis.amsi.org.au</p> </li> <li> <p>Software Carpentry: www.software-carpentry.org</p> </li> <li> <p>Bioinformatics problem solving challenges: www.rosalind.info</p> </li> <li> <p>A selelection of key journal papers published recently in BMC Bioinformatics.</p> </li> </ul>"},{"location":"guides/galaxy/","title":"The Galaxy Platform","text":"<p>Galaxy is a web platform for bioinformatics analysis.</p>"},{"location":"guides/galaxy/#which-galaxy-should-i-use","title":"Which Galaxy should I use?","text":"<ul> <li> <p>There are many different Galaxy servers - each one has a different web address.</p> </li> <li> <p>For researchers based in Australia, we recommend you use Galaxy Australia.</p> </li> <li> <p>The main worldwide Galaxy server is https://usegalaxy.org/</p> </li> <li> <p>Other Galaxy servers are listed here.</p> </li> <li> <p>Check the policy for the server you are using so that you know how long your data will be kept.</p> </li> <li> <p>If you use more than one Galaxy server, you need to register and log in separately for each server. They don\u2019t talk to each other.</p> </li> </ul>"},{"location":"guides/galaxy/#tutorials","title":"Tutorials","text":"<p>Galaxy Australia tutorials: https://galaxy-au-training.github.io/tutorials/</p> <p>The Galaxy Training Network also hosts a large collection of useful training material: http://galaxyproject.github.io/training-material/</p>"},{"location":"guides/policy/","title":"Bioinformatics Workshop Attendance Policy","text":"<p>Effective Date: 1<sup>st</sup> August 2025</p>"},{"location":"guides/policy/#1-introduction","title":"1. Introduction","text":"<p>This policy outlines the attendance expectations for participants in our bioinformatics workshops. It aims to ensure fair access to our workshops for all interested parties and to maximize the utilization of our resources.</p>"},{"location":"guides/policy/#2-no-show-policy","title":"2. No-Show Policy","text":""},{"location":"guides/policy/#21-definition-of-a-no-show","title":"2.1 Definition of a No-Show","text":"<p>A \u201cno-show\u201d is defined as:</p> <ul> <li>Failure to attend a workshop without cancelling at least 48 hours in advance</li> <li>Failure to attend at least 50% of a workshop\u2019s duration</li> </ul>"},{"location":"guides/policy/#22-no-show-consequences","title":"2.2 No-Show Consequences","text":"<p>Effective 1<sup>st</sup> August 2025, the following policy will be implemented:</p> <ul> <li>Participants who accumulate two or more no-shows within a 12-month period may be de-prioritised for registration in future workshops that reach full capacity.</li> </ul>"},{"location":"guides/policy/#23-de-prioritisation-process","title":"2.3 De-prioritisation Process","text":"<ul> <li>De-prioritised individuals may be removed from the list of attendees and instructed to join the waitlist.</li> <li>They may still register for other workshops with available spots.</li> <li>The de-prioritisation period will last for 6 months from the date of the second no-show.</li> </ul>"},{"location":"guides/policy/#3-cancellation-policy","title":"3. Cancellation Policy","text":"<p>To avoid being marked as a no-show:</p> <ul> <li>Participants must cancel their registration at least 48 hours before the workshop start time.</li> <li>Cancellations should be made through Eventbrite or by emailing the Melbourne Bioinformatics training email (bioinformatics-training@unimelb.edu.au)</li> </ul>"},{"location":"guides/policy/#4-exceptions","title":"4. Exceptions","text":"<p>Exceptions to this policy may be granted in cases of:</p> <ul> <li>Medical emergencies</li> <li>Family emergencies</li> <li>Unforeseen work conflicts</li> </ul> <p>Documentation may be required for exceptions.</p>"},{"location":"guides/policy/#5-reinstatement","title":"5. Reinstatement","text":"<p>After the 6-month de-prioritisation period, participants will automatically regain normal registration priority status.</p>"},{"location":"guides/policy/#6-workshop-reminders","title":"6. Workshop Reminders","text":"<p>To help participants avoid unintentional no-shows:</p> <ul> <li>Email reminders will be sent the Monday before each workshop.</li> <li>Participants are encouraged to add workshop dates to their personal calendars upon registration.</li> </ul>"},{"location":"guides/policy/#7-policy-review","title":"7. Policy Review","text":"<p>This policy will be reviewed annually to ensure its effectiveness and fairness.</p>"},{"location":"includes/connecting/","title":"Connecting","text":"Mac OS X / Linux  Both Mac OS X and Linux come with a version of ssh (called OpenSSH) that can be used from the command line.  To use OpenSSH you must  first start a terminal program on your computer.  On OS X the standard terminal is called Terminal, and it is installed by default.  On Linux there are many popular terminal programs including: xterm, gnome-terminal, konsole (if you aren't sure, then xterm is a good  default).  When you've started the terminal you should see a command prompt.  To log into *barcoo*, for example, type this command at  the prompt and press return (where the word *username* is replaced with your *barcoo* username):  *$ ssh username@barcoo.vlsci.org.au*  The same procedure works for any other machine where you have an account except that if your Unix computer uses a port other than 22 you will need to specify the port by adding the option *-p PORT* with PORT substituted with the port number.  You may be presented with a message along the lines of:  <pre><code>The authenticity of host 'barcoo.vlsci.org.au (131.172.36.150)' can't be  established.\n...\nAre you sure you want to continue connecting (yes/no)?\n</code></pre>  Although you should never ignore a warning, this particular one is nothing to be concerned about; type **yes** and then **press enter**.  If all goes well you will be asked to enter your password.  Assuming you type the correct username and password the system should  then display a welcome message, and then present you with a Unix prompt.  If you get this far then you are ready to start entering  Unix commands and thus begin using the remote computer.   Windows  On Microsoft Windows (Vista, 7, 8) we recommend that you use the PuTTY ssh client.  PuTTY (putty.exe) can be downloaded  from this web page:  [http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html](http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html)  Documentation for using PuTTY is here:  [http://www.chiark.greenend.org.uk/~sgtatham/putty/docs.html](http://www.chiark.greenend.org.uk/~sgtatham/putty/docs.html)  When you start PuTTY you should see a window which looks something like this:    To connect to *barcoo* you should enter *barcoo.vlsci.org.au* into the box entitled \"Host Name (or IP address)\"  and *22* in the port,  then click on the Open button. All of the settings should remain the same as they were when PuTTY started (which should be the  same as they are in the picture above).  In some circumstances you will be presented with a window entitled PuTTY Security Alert. It will say something along the lines  of *\"The server's host key is not cached in the registry\"*. This is nothing to worry about, and you should agree to continue (by  clicking on Yes). You usually see this message the first time you try to connect to a particular remote computer.  If all goes well, a terminal window will open, showing a prompt with the text *\"login as:\"*. An example terminal window is shown  below. You should type your *barcoo* username and press enter. After entering your username you will be prompted for your  password. Assuming you type the correct username and password the system should then display a welcome message, and then  present you with a Unix prompt. If you get this far then you are ready to start entering Unix commands and thus begin using  the remote computer."},{"location":"tutorials/Genome_browsers/","title":"Templates","text":"<p>This contains templates for overall workshop layout, as well as specific examples of how to incorporate aspects such as code blocks, equations, questions and answers etc.</p>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro/","title":"Introduction to Genome Browsers","text":""},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro/#introduction-to-genome-browsers","title":"Introduction to Genome Browsers","text":"<p>The anticipated workshop duration when delivered to a group of participants is 4 hours. Note that not all the exercises are expected to be completed during the workshop.  </p> <p>For queries relating to this workshop, contact Melbourne Bioinformatics at: bioinformatics-training@unimelb.edu.au.</p>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro/#overview","title":"Overview","text":"<p>This tutorial will introduce you to the genome browser format and illustrate how some freely available genome browsers can be used to interrogate a variety of data types, such as gene expression, genomic variation, methylation and many more.</p>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro/#topic","title":"Topic","text":"<ul> <li> Genomics</li> <li> Transcriptomics</li> <li> Proteomics</li> <li> Metabolomics</li> <li> Statistics and visualisation</li> <li> Structural Modelling</li> <li> Basic skills</li> </ul>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro/#skill-level","title":"Skill level","text":"<ul> <li> Beginner  </li> <li> Intermediate  </li> <li> Advanced  </li> </ul> <p>This workshop is designed for participants with no previous experience of using Genome Browsers and no programming experience.</p>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro/#description","title":"Description","text":"<p>Learn how to make the most of Genome Browsers!</p> <p>By focusing on gene expression, this hands on tutorial will provide beginners with an introduction to both the UCSC Genome browser and IGV (Integrated Genome Viewer).  Tools and public datasets will be used to illustrate how the expression of transcript variants can be investigated in different, tissues and cell types using public data, including human RNAseq data from GTEX and mouse cell type RNAseq data from Tabula Muris, as viewed within the UCSC genome browser. A subset of Single cell RNAseq data from the Allen Brain Atlas Celltax study will also be downloaded from SRA and visualised in IGV. The data and genes used in this workshop are taken from the neuroscience field, however the analysis approaches and tools illustrated can be applied to many research areas.</p> <p> This tutorial is in three parts:</p> <p>Section 1: Introduction to the general features of genome browsers. Section 2: Hands on tutorial of the UCSC Genome Browser. Section 3: Hands on tutorials of the Integrative Genomics Viewer.  </p> <p>This tutorial was developed for use as part a series of workshops for neuroscience researchers, hence the data and example genes are drawn from neuroscience field and focused on analysis and visualisation of expression data. However, the skills taught in this tutorial are applicable to all areas of research.</p> <p>Data: GTEX and Tabular Muris data as represented in the UCSC Genome Browser, and Celltax single cell expression atlas data downloaded from SRA.  </p> <p>Tools: UCSC Genome Browser, Integrative Genomics Viewer (IGV).</p> <p>Workshop instructions  Click here for a printer friendly PDF version of this workshop. </p>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro/#learning-objectives","title":"Learning Objectives","text":"<p>At the end of this introductory workshop, you will:</p> <ul> <li>Understand the how some types of genomics and expression data are represented in Genome browsers.</li> <li>Understand gene models and identify differences between transcripts variants.</li> <li>Determine the tissue/cell type expression profiles of a gene of interest in mouse and human expression data.</li> <li>Know some basic files types used in Genome browsers and upload and view local BAM files.</li> <li>Use the \u2018Blat\u2019 tool to locate genomic regions with similarity to a sequence of interest.</li> <li>Create custom interactive views with multiple datatypes to share with colleagues and generate images for publications.</li> </ul>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro/#requirements-and-preparation","title":"Requirements and preparation","text":"<p>Attendees are required to provide their own laptop computers. </p> <p>If delivered as a workshop, participants should install the software and data files below prior to the workshop. Ensure that you provide sufficient time to liaise with your own IT support should you encounter any IT problems with installing software. Unless stated otherwise, recommended browsers are Firefox or Chrome.</p>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro/#preparing-you-and-your-laptop-prior-to-starting-this-workshop","title":"Preparing you and your laptop prior to starting this workshop","text":""},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro/#required-software","title":"Required software:","text":"<ol> <li>Download and install IGV (Free).</li> <li>Ensure that Chrome or FireFox are installed and up-to-date.</li> <li>Create a user account in the UCSC genome browser.</li> </ol>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro/#required-data","title":"Required Data","text":"<p>No additional data needs to be downloaded prior to this workshop. Required data will be downloaded as part of the tutorial exercises.</p>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro/#mode-of-delivery","title":"Mode of Delivery","text":"<p>This workshop will be run using freely available Web interfaces and free software using graphical user interfaces. See above.</p>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro/#authors-and-review-date","title":"Author(s) and review date","text":"<p>Written by: Victoria Perreau | Melbourne Bioinformatics, University of Melbourne.  </p> <p>Created: October 2020 Reviewed and revised: October 2021  </p>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro/#background","title":"Background","text":""},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro/#genome-browser-background","title":"Genome Browser background","text":"<p>Genome browsers are invaluable for viewing and interpreting the many different types of data that can be anchored to genomic positions. These include variation, transcription, the many types regulatory data such as methylation and transcription factor binding, and disease associations. The larger genome browsers serve as data archives for valuable public datasets facilitating visualisation and analysis of different data types. It is also possible to load your own data into some of the public genome browsers.</p> <p>By enabling viewing of one type of data in the context of another, the use of Genome browsers can reveal important information about gene regulation in both normal development and disease, assist hypothesis development relating to genotype phenotype relationships.</p> <p>All researchers are therefore encouraged to become familiar with the use of some of the main browsers such as:</p> <ul> <li>The UCSC Genome Browser (RRID:SCR_005780)</li> <li>ESEMBL Genome Browser (RRID:SCR_013367)</li> <li>Epigenome browser at WashU (RRID:SCR_006208)</li> <li>Integrative Genomics Viewer (IGV) (RRID:SCR_011793)</li> </ul> <p>They are designed for use by researchers without programming experience and the developers often provide extensive tutorials and cases studies demonstrating the myriad of ways in which data can be loaded and interpreted to assist in develop and supporting your research hypothesis.</p> <p>Many large genomic projects also incorporate genome browsers into their web portals to enable users to easily search and view the data. These include:</p> <ul> <li>GTEx</li> <li>gnomAD</li> </ul>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro/#bdnf-and-trkb-signalling","title":"BDNF and TrkB signalling","text":"<p>This tutorial uses the a well known and important signalling pathway in the central nervous system (CNS) to illustrate some of the Genome browser tools and utility.</p> <p> </p> <p>Brain Derived Neurotrophic factor (BDNF) protein is an important neurotrophin responsible for regulating many aspects of growth and development in different cells within the CNS. TrkB is an important receptor that binds extracellular BDNF and propagates the intracellular signalling response via a tyrosine kinase. This TrkB receptor protein is encoded by the NTRK2 gene.  </p> <p>The NRK2 gene expresses a number of different transcript variants in different cell types. The most well studied of these is the full length TrkB receptor referred to as TrkB, which is mainly expressed in neuronal cell types. The other transcript variants all express the same exons encoding the extracellular domain of the receptor (shown in the fugure here in green) but have truncated intracellular domains, which do not include the tyrosine kinase domain and thus activate different signalling pathways upon binding to BDNF.  None of these truncated protein products have been well studied, but the most highly expressed receptor variant is known as TrkB-T1, and is known to be highly expressed in astocytes.  </p> <p>Since the transcript variants are differently expressed in different cell types within the CNS the NTRK2 gene is a very useful example for exploring cell type specific transcript expression in available public data.</p> <p> Major CNS cell types:</p> <p> </p> <p></p> <ul> <li>Neuron (yellow cell in the image)</li> <li>Astrocyte  </li> <li>Oligodendrocyte  </li> <li>Microglia  </li> <li>Ependymal  </li> </ul> <p></p>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro/#section-1-introduction-to-genome-browsers","title":"Section 1: Introduction to Genome Browsers","text":"<p>Genome browsers rely on a common reference genome for each species in order to map data from different sources to the correct location. A consortium has agreed on a common numbering for each position on the genome for each species. However, this position will vary based on the version of the genome, as error correction and updates can change the numbering. Therefore it is very important to know which version of the genome your data of interest is aligned to.</p> <p>The sequence for the human reference genome was accumulated up over many years from sequence data from many different sources and does not represent the sequence of one single person. Instead it is a composite of fragments of the genome from many different people.  Also, unlike the human genome which is diploid, the human reference genome is haploid.  That is there is only one copy of each chromosome. It therefore does not reflect the variation on the population, or even the most common variants in the human genome. Exploring variation within human genome is very important and facilitated by genome browsers but not covered in this workshop.</p> <p>Genome Build version number - further reading</p> <ul> <li>The Genome reference consortium </li> <li>What does the nomenclature mean?</li> </ul> <p>For further info on Human Genome version updates I recommend you look at the updates and blog pages on the UCSC genome browser.</p>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro/#section-2-the-ucsc-genome-browser-interface","title":"Section 2: The UCSC Genome Browser Interface","text":"<p>In this section we will become familiar with the web interface of the UCSC genome browser and explore some of the tools and public datasets available.</p> <ul> <li>Explore features of particular chromosomal regions</li> <li>Investigate specific genes as well as collections of genes</li> <li>Search for locations of sequences and markers</li> <li>Retrieve annotation information for specific regions or genome-wide</li> <li>View your own data in context of other annotations</li> <li>Compare a region of one genome to genomes of other species</li> </ul> <p>Weekly maintenance of the browser is at 5-6 pm Thursdays Pacific time, which is equivalent to 11am-12pm AEST time. During this time the browser may be down for a few minutes. To ensure uninterrupted browser services for your research during UCSC server maintenance and power outages, bookmark one of the mirror sites that replicates the UCSC genome browser.</p> <p>Accessing the tools: Many of the tools that we will explore can be selected via multiple different routes within the browser interface. One way to access many tools is via from the top toolbar on a pull down list, other tools can be accessed from within the browser window.  In the following instructions a series of blue boxes is used to indicate successive lower levels from the pull down menu when starting with the top toolbar.  For example, the notation below indicates that you should select \u2018Genome Browser\u2019 from the top tool bar and then click on \u2018Reset all user settings\u2019.</p> <p>Toolbar Genome Browser Reset all user settings</p> <p>Accessing help and training: The UCSC genome browser is supported by a rich training resource which has new material added regularly to the YouTube channel. To access training and develop your skills further go to: Toolbar Help Training</p>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro/#getting-started","title":"Getting started","text":"<ol> <li>Open the Browser interface: <ul> <li>Navigate to the UCSC genome Browser and sign in if you have an account. </li> </ul> </li> <li>First reset the browser, so that we all see the same screen: Toolbar Genome Browser Reset all user settings </li> <li> <p>Select and open the human Genome Hg38 at the default position, there are a few different ways to do this </p> <ul> <li>Toolbar Genomes (this takes you to the Genome gateway page)  <ul> <li>Check that GRCh38 is selected in \u2018human assembly\u2019 and click on the blue GO box  </li> </ul> </li> <li>Toolbar Genomes Human GRCh38hg38 (takes you directly to the genome)</li> </ul> <p>You should see a view of the browser similar to the image below, opening at a position on the X chromosome of Human genome version GRCh38 showing the gene model for the ACE2 gene. Some of the default tracks may have been updated since this screen shot was made.  </p> </li> <li> <p>Familiarise yourself with the main areas of the interface and locate:</p> <ul> <li>The main Toolbar</li> <li>Blue bar track collections (data of similar types are collected together under the same \u2018Blue bar\u2019 heading). Scroll down to see additional data collections and which ones are turned on as default.</li> <li>Genome species and version number</li> <li>Position box</li> <li>Navigation tool buttons</li> <li>Chromosome ideogram</li> <li>Genome view window</li> <li>Pre loaded tracks, track titles:<ul> <li>The grey bars on the left of the genome view can be used for selecting and configuring the tracks.</li> <li>You can change the order of the tracks by dragging these grey bars up and down.</li> </ul> </li> <li>Turn tracks on and off:<ul> <li>You can hide tracks by right clicking on the grey bar or by turning them off in the Blue bar collections.</li> <li>You have to click on a \u2018refresh\u2019 button for changes to be reflected in the genome view window.</li> </ul> </li> <li>View the configuration page for one of the tracks.  The configuration page gives you a lot of information about the data track and its colouring. You can open the configuration page for a track by:<ul> <li>clicking on the grey bar for the track or,</li> <li>clicking on the track title in the Blue bar collection. More information and options are usually available by selecting the configuration page for a track via the track title in the Blue Bar collections.</li> </ul> </li> <li>Select \u2018resize\u2019 button under the genome view to fit the genome view window to your screen</li> </ul> </li> <li> <p>Customise your view by using the \u2018Configure\u2019 tool to change the font size to 12. Use either method below to open the Configure tool.</p> <ul> <li>Toolbar View Configure browser text size 12 submit</li> <li>or start by clicking on the configure button below the genome view window.</li> </ul> </li> <li> <p>Practice navigating around the genome view.</p> <ul> <li>move left and right- using both the navigation buttons and your mouse</li> <li>zoom in and out- using navigation buttons</li> <li>zoom in to a region of interest- using \u2018Drag-and-select\u2019:<ul> <li>using your mouse select a region of interest by clicking the ruler (position track) at the very top of the genome view window.</li> </ul> </li> <li>This is also how to access the \u2018highlight tool\u2019 which you will use in a later exercise to highlight a region of interest.<ul> <li>Click on the down arrow next to the highlight colour to select a different colour. </li> </ul> </li> </ul> </li> </ol>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro/#understanding-the-gene-models","title":"Understanding the gene models","text":""},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro/#ntrk2","title":"NTRK2","text":"<p>First we are going to familiarise ourselves with the gene model representation of the different transcripts of NTRK2.  </p> <ol> <li> <p>Navigate to the NTRK2 gene position in GRCh38 and view the gene models</p> <ul> <li>You can navigate to a different region by typing in the position box.<ul> <li>If you know the specific location you are interested in type in the location using the format \u201cchr#:1234-1234\u201d.</li> <li>If you have a gene of interest you can type in the gene name (eg: NTRK2). Note the autocompleted suggestions that appear when  you start typing.  You can select from one of the suggestions or click go and select from a wider range of options.</li> <li>Type (or copy and paste) NTRK2 or chr9:84,665,760-85,030,334 into the position box.</li> </ul> </li> <li>Hide all tracks by selecting the button below the genome view.</li> <li>Turn on only the Gencode V36 Genemodels in \u2018full\u2019 viewing mode by selecting from the blue bar group labelled \u2018Genes and Gene predictions\u2019.</li> <li>Turn on the \u2018Conservation\u2019 track to \u2018full\u2019<ul> <li>Don\u2019t forget to click refresh.</li> </ul> </li> <li>When you have navigated to the NTRK2 gene, zoom out until you can view all of the 5\u2019 UTRs and 3\u2019 UTRs for all transcript variants for this gene. Then drag the view left and right to center (like in Google maps) or \u2018drag and select\u2019 the region to center the gene in the Genome view. You should see something like the image below.</li> </ul> <p></p> <p>Which strand is the gene encoded on / transcribed from? (+ or - strand)</p> <ul> <li> <p>Identify the exons, introns and UTRs  </p> <p>Do regions of conservation only occur were there are coding regions?</p> <p>How many different transcripts variants are there for this gene?</p> <p>How do they differ?</p> </li> <li> <p>Select a coding region (full height boxes) towards the 3\u2019UTR of the gene.</p> <ul> <li>zoom in to the region until you can see the letters of the amino acid sequence.</li> </ul> <p>Why are some amino acid boxes red or green?</p> <ul> <li>Zoom in again until you can see each amino acid number.</li> </ul> <p>Why do different transcripts have different amino acid numbers?</p> </li> <li> <p>Note that one of the transcript names is in white text with a black background, this is the transcript you selected from the autocompleted list or the search results.</p> </li> <li>Change the \u2018view settings\u2019 for the track. Switch between dense squish pack full to see how it changes the representation of the models.<ul> <li>Right click on the track grey bar in the left of the genome window to access view settings.</li> </ul> </li> <li>Go to the configuration  page for the GENCODE V36 track and change check the box to also reveal the \u2018Ensembl ID\u2019 in the label.</li> <li>The transcript names are now too long to fit on the screen. You can use the configuration page (like you did to chane the font size at the beginning of the workshop) and change the number of characters in the label so that you can see the entire transcript label.  </li> <li>Test your understanding of gene model representation by attempting this 6 questions in this quiz.</li> </ul> </li> </ol>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro/#bdnf","title":"BDNF","text":"<p>Now we look at the gene model for BDNF in the same genome. There are some differences that enable us to demonstrate some more tools.</p> <ol> <li>Navigate to the BDNF gene position in GRCh38 and view the gene models</li> </ol> <p></p> <ul> <li>Note that there are blue transcript models encoded on the - strand and green BDNS-AS transcript models on the + strand. BDNF-AS is the antisense gene.</li> <li> <p>Colouring info is specific for each trackand can be obtained from the configuration page, below is the colouring legend for the GENCODE V36 track.   </p> </li> <li> <p>Since the convention is to display genes in the 5\u2019 to 3\u2019 orientation it can be useful for our own interpretation, and also for presentation purposes, to flip the orientation of a gene when viewing it in a Genome Browser.</p> <ul> <li>Use the reverse button under the genome view window to flip the orientation of the gene.</li> </ul> </li> <li>When a gene has many large introns taking up a lot of white space in an image it can be difficult to see if exons in different transcript models or other data tracks align.  The \u2018Multi-Region\u2019 view tool can be used to fold the intronic regions out of the view like a concertina. The Broswer selects which region to fold out based on the gene model track(s) that you have turned on at the time.<ul> <li>Apply the Multi-Region view from the main tool bar view options.<ul> <li>Toolbar View Multi-Region select \u2018Show exons using GENCODE V36\u2019</li> </ul> </li> </ul> </li> </ul> <p></p> <p>It is now a lot easier to view a number of interesting features in the BDNF transcript models:</p> <ul> <li>The transcript variants for the BDNF vary mostly in the genomic position of the 5\u2019UTR.</li> <li>The noncoding AS-BDNF gene transcript includes a region that would be antisense to the coding BDNF transcript.</li> </ul> <p>You may find that using the multi-region tool facilitates visualisation and interpretation of gene expression data later in the workshop.</p>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro/#blat-tool-exercise","title":"Blat tool exercise","text":"<p>The Blat tool is a sequence similarity tool similar to Blast. It can quickly identify region(s) of homology between a genome and a sequence of interest. Due to the presence of orthologs and paralogs a target sequence may have similarity to more than one region in the genome. In this exercise you will use Blat to map the sequences of two different expression probes to their target regions and determine which gene transcripts the probes are likely to detect in an expression study.</p> <p>Microarray expression data is not commonly used now, but some of the data generated from large well orchestrated studies still provide valuable information to researchers. Microarray probes, like in situ hybridisation probes, target a small region of the RNA and do not measure the whole RNA transcript. If you are measuring gene expression it is important to know exactly which region of the gene you are detecting.  In this exercise we will employ the blat tool to determine which region of the NTRK2 gene the microarray probes in the following study are detecting.</p> <p>The study was the Human Brain gene expression atlas generated by the Allen Institute.  Below are sequences of two hybridisation probes that were use in a microarray used to detect expression of the gene NTRK2.  These two probes result in very different hybridisation and expression patterns across different regions of the brain. As we observed in the exercise above NTRK2 has a number of different transcript variants.  The question we have is whether these probes are detecting different or multiple transcripts of NTRK2, and if so which ones?</p> <p>NTRK2 Probe A_23_P216779 sequence: TTCTATACTCTAATCAGCACTGAATTCAGAGGGTTTGACTTTTTCATCTATAACACAGTG </p> <p>Z score of expression level in Human brain (blue = low expression, red = high expression) </p> <p>NTRK2 Probe A_24_P343559 sequence AAGCTGCTCTCCTTCACTCTGACAGTATTAACATCAAAGACTCCGAGAAGCTCTCGAGGG </p> <p>Z score of expression level in Human brain (blue = low expression, red = high expression) </p> <p>The images above are of one of the six donors included in the atlas, and typical of the expression pattern for NTRK2. These images are taken from the NTRK2 gene page of Human Brain Atlas.</p> <p>Most obvious in the images above is the high level of expression signal using Probe A_23_P216779 and low level for A_24_P343559 in the corpus callosum (CC) which is a region of white matter in the brain with relatively few neurons and relatively high proportion of myelinating oligodendrocytes. This expression profile is reversed in the the cortical regions, eg. frontal lobe (FL) and parietal lobe (PL), which have a relatively high density of neuronal cells.</p> <ol> <li> <p>Use Blat tool to find region of homology</p> <ul> <li>Select: Toolbar tools blat</li> <li>Copy the sequence of the first probe above and paste into the search box</li> <li>Select the human GRCh38  for \u2018Assembly\u2019 and click Submit<ul> <li>A_23_P216779 returns 2 hits for different chromosomes.  One of these has 100% homology over the whole 60 base sequence, the other has 87% homology over a 24 base region.</li> </ul> </li> <li>Copy and paste the probe name to use as the label for the \u2018Custom track name\u2019 and \u2018Custom track description\u2019 and click on Build a custom track with these results. It\u2019s not necessary to build a custom track, you could simply click on the browser link to view the results, but creating a \u2018custom track\u2019 from the blat result enables you to give it a unique name.  This is important if you are doing multiple blat searches as you wont be able to tell which one is which.</li> <li>Select browser option for the hit with the highest homology to view the result. Observe which region of the NTRK2 gene this probe will target. Zoom out for context.</li> <li>Note that a new \u2018Blue bar\u2019 heading has appeared for your custom tracks.</li> <li>Repeat for the other probe sequence.</li> </ul> </li> <li> <p>Use the \u2018highlight\u2019 tool to keep track of region of interest in the Genome view. It is easy to loose track of a region you are investigating when navigating around the genome in a browser. So we are going to highlight each region of probe homology within the NTRK2 gene, using a different colour for each probe. Highlight is also useful if you have lots of different tracks loaded and you want to check that a feature on one track lines up with another.</p> <ul> <li>Using your mouse select in the position track at the top to activate \u2018Drag-and-select\u2019. Select only the region of homology for each probe within the NTRK2 gene and use a different highlight for each region. Then zoom out to view the whole gene again.</li> </ul> <p>Do the probes detect coding regions of the NTRK2 gene?</p> <p>Are the probes likely to detect different transcripts?</p> </li> <li> <p>Use \u2018Multiregion view\u2019 to make it easier to compare coding regions of different transcripts</p> <ul> <li>Toolbar View Multi-Region select \u2018Show exons using GENCODE V36\u2019</li> </ul> </li> </ol> <p>I have created a \u2018public session\u2019 of the Blat NTRK2 exercise you can view it from the link in the sessions Toolbar My data Public session search for \u201chg38_NTRK2_blat_probes\u201d.</p>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro/#gene-expression-data","title":"Gene expression data","text":"<ol> <li> <p>Human tissue specific expression data from the GTEX project is available in UCSC genome browser</p> <ul> <li>Gene level expression data from GTEx V6 (570) donors, and GTEx V8 (948) donors can be turned on from Blue bar title for more detailed configuration page. These are displayed as coloured bar plots.</li> <li>Transcript level data is also available for GTEx V6, this is also displayed as bar plots.</li> <li>Transcript level expression data for GTEx V6 is available as coverage plots and is accessed from the \u2018Track hubs\u2019.<ul> <li>click on the \u2018track hubs\u2019 under the genome view window or access from the toolbar under \u2018My data\u2019.</li> <li>scroll down and select \u2018GTEx RNA-seq Signal Hub\u2019.  This can be viewed in either hg19 or hg38 so can be compared with a wide variety of other datasets. </li> </ul> </li> <li> <p>The default settings are:</p> <ul> <li>that all the available data from one individual only is loaded. Data from other subjects in the study can be loaded as desired.  For example you could load all available samples for one tissue region only.</li> <li>the data is \u2018autoscale to data view\u2019 with a track height or 12 pixels for each samples. You can change the height of the track or add a data transformation.</li> <li> <p>you can also change it from a points plot into a density plot by clicking on the track title. </p> </li> <li> <p>Using the selection matrix for female donors aged 2-49 years, deselect the default samples and select only Brain cortex and Pancreas samples. Then navigate to the location for the gene MYRF. You can increase the height of the datatrack to improve visualisation.</p> </li> </ul> </li> </ul> <p>Can you locate an exon in the MYRF gene that is present in transcripts expressed in the brain but not in the pancreas?</p> <p>Does this alternative splicing event result in a frame shift of the coding sequence?</p> <p>How many amino acids are there in the protein products for each MYRF transcript?</p> </li> <li> <p>The FACS derived data from the Tabular Muris cell type data can be visualised as a coverage plot</p> <ul> <li>Start at the view of the NTRK2 gene in the human genome and navigate to the Ntrk2 gene in the mouse genome using the \u2018View in other genomes tool\u2019.<ul> <li>Toolbar View In Other Genomes (Convert)</li> <li>select New Genome:Mouse , New Assembly:GRC38/mm10, click on \u2018Submit\u2019</li> <li>select the region with the greatest homology</li> </ul> </li> <li>Click on the bar chart icon for the Tabular muris data in the default view to see a summary bar chart of the cell type data.</li> <li>To see a copverage plot of the expression data we have to configure the Tabular Muris track by selecting it from the blue bar collection.<ul> <li>Hide \u2018Cell expression\u2019</li> <li>Select \u2018Genome coverage\u2019 to full</li> <li>Select \u2018submit\u2019 This can look a bit overwhelming as there are very many tracks and the default track height is set very high. But it\u2019s easy to simplify it by focusing on a few cell types of interest. </li> </ul> </li> <li>Right click on the grey bar to \u2018configure the track set\u2019.<ul> <li>Change Track height: to 30</li> <li>for Data view scaling: select \u2018group auto-scale\u2019</li> <li>clear all the subtracks and then manually select only these few cell types of interest:<ul> <li>astrocyte Cv</li> <li>Bergmann glial Cv</li> <li>microglia Cv</li> <li>neuron Cv</li> <li>oligodendrocyte Cv</li> <li>OPC Cv</li> </ul> </li> </ul> </li> </ul> <p>Which cell type has the highest level expression of Ntrk2 in this dataset?</p> <ul> <li>Change the \u2018Data view scaling\u2019 to autoscale to dataview.<ul> <li>Export a PDF image of the genome view: Toolbar View PDF/PS select \u2018Download the current browser graphic in PDF\u2019 </li> </ul> </li> </ul> <p>Which cell type(s) express the long and short transcripts of Ntrk2?</p> </li> <li> <p>Mouse CNS cell type expression data can also be validated using an independent single cell dataset of mouse cortex from the Linnarsson lab.</p> <ul> <li>The data that is publicly available for viewing in the UCCS genome browser but is not housed in the UCSC genome browser. You must first access it from the the Linnarsson lab data page.</li> <li>This RNAseq data is stranded, meaning you can see if the transcript data is from the + or - strand.</li> <li>Click here for the Linnarsson lab public data page for this dataset where you can search for cell expression profiles for individual genes.</li> <li>Click on the \u2018Browse the genome\u2019 blue text near the bottom of the page.</li> <li>This loads 18 different tracks, one for each cell type investigated. The default setting for expression range is quite high and most gene expression is not observed with these settings. Each track must be configured individually rather than as a group, which takes a lot of time. I have created a version of this data as a public session in the UCSC genome browser. Where each track is autoscaled which can make it quicker to determine which expression range would be ideal for visualising the expression of an individual gene.  The data is also viewed using \u2018Multi-Region\u2019 which hides the introns in the gene models. The session is illustrated in the screen shot below and you can access this custom track set by clicking on the title in blue text. It is also a publically shared session called mm10 Linnarsson Celltype autoscale which you can access from the database of public sessions.</li> </ul> <p>Linnarsson lab mouse cortex single cell data as autoscaled datatracks</p> <p></p> <ul> <li>As an exercise, select 2 or three cell types and adjust the scale to best reflect differences in gene expression of Ntrk2 between these cells. Save this session and share it.</li> </ul> </li> </ol>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro/#section-3-igv","title":"Section 3: IGV","text":"<p>In this section we will download a BAM file of gene expression data from SRA, and view it in the Integrated Genome Viewer (IGV). BAM files must first be sorted and indexed before they can be loaded into genome viewers and IGV has tools to do this without having to use the command line.</p> <p>The expression data we are using for this exercise is from the mouse Celltax single cell expression atlas published by the Allen Brain Institute. The cell tax vignette has an expression browser that displays gene level expression as a heat map for any gene of interest. The readsets (fastq files) and aligned data (BAM files) for 1809 runs on single cells are also available for download from SRA.</p> <p>The SRA study ID for this study is SRP061902 and individual runs from this study are easily selected by viewing the samples in the \u2018RunSelector\u2019. If you wish to identify particular cell types of interest.  For this exercise I have already identified a few samples that we will download in order to illustrate navigating in IGV by looking at the expression of NTRK2 in the same cell types we have discussed in earlier exercises.  </p> <p>For each cell type we will down load a .BAM file containing only the reads from the chromosome of interest.</p> <p>For each SRA run in the table below open the link to the run to down load the data. Not many raw data sets in SRA have aligned data available for down load but this data set does.</p> Cell type SRA run Vignette Cell ID astrocyte SRR2138962 D1319_V astrocyte SRR2139935 A1643_VL neuron SRR2139989 S467_V4 neuron SRR2140047 S1282_V <ol> <li> <p>Download BAM files from SRA</p> <ul> <li>Click on the \u2018Alignment\u2019 tab</li> <li>Note that the data is aligned to the mouse GRCm38 genome (mm10).</li> <li>Select the chromosome of interest. For NTRK2 in mouse it is chr13</li> <li>For \u2018Output this run in:\u2019 select BAM and click on \u2018format to:\u2019 File</li> <li>Rename the downloaded file to include the cell type, to avoid confusion. eg: SRR2138661_astrocyte_chr13.bam</li> </ul> </li> <li> <p>Use IGV tools to SORT and INDEX the BAM files Store sorted BAM files and index files in the same folder.</p> <ul> <li>Open IGV and select Tools / Run igvtools\u2026 from the pull town menus.</li> <li>Select \u2018Sort\u2019 from the Command options and use the brows options to select the BAM file you just downloaded and click \u2018Run\u2019</li> <li>Without closing the igvtools window now select the command \u2018Index\u2019 and Browse to find the BAM file you just sorted.  It will have the same file name with \u2018sorted\u2019 added to the end. eg SRR2138661_astrocyte_chr13.sorted.bam</li> <li> <p>The resulting index file will have the file name : SRR2138661_astrocyte_chr13.sorted.bam.bai</p> <ul> <li>It is essential that the index file for a BAM file has the same name and is located in the same folder as its BAM file. If not the IVG software will not be able to open the BAM file.</li> </ul> <p></p> </li> </ul> </li> <li> <p>View the BAM files in IGV</p> <ul> <li>Select the Mouse (mm10) genome from the genome box in the top right hand corner.</li> <li>Select File / Load from File\u2026 and select all 4 \u2018_chr13.sorted.bam\u2019 files only (use command to select more then one file at a time).</li> <li>select open - but don\u2019t expect to see any data yet. The genome view window opens on a whole chromosome view as default but it wont show any data until the view region is small enough to show all data in the current view.</li> <li>Type the gene name \u2018NTRK2\u2019 into the search window.</li> <li>Expand the Refseq gene model track by right clicking it to see all the splice variants</li> <li>The gene and thus the genome view is 328kb and the default setting for viewing data is only 100kb.  So unless you have already changed your settings alignment data will not get be showing.</li> <li>zoom into the region of a coding exon by selecting in the numbered location track at the top of the genome view.</li> <li>To see the whole gene in the genome window at the same time you may need to change the preferences.  </li> <li>Go to View / Preferences and select the \u2018Alignments tab\u2019.</li> <li>Change the visibility range threshold to 400kb.</li> </ul> </li> </ol> <p></p> <p>You may need to change this back to a smaller range in the future if you are working with large datasets and/or small amounts of memory on your computer.</p> <p></p> <ol> <li>Export images<ul> <li>The Genome view above can be exported by selecting \u2018File / Save image\u2026\u2019  from the tool bar.</li> <li>To export the Sashimi plot below:<ul> <li>Right click on one of the junction tracks and select \u2018Sashimi Plot\u2019 from the poll down menu.</li> <li>Select the tracks you want in your final image.</li> <li>There are some data filtering and style adjustments you can make to the Sashimi plot. Right click on each track to access the menu options. Some changes apply to each track individually and some to all tracks.</li> </ul> </li> </ul> </li> </ol> <p></p> <ol> <li>Download and install the Gencode gene model annotation track<ul> <li> <p>The refseq gene model track is not as comprehensive as GeneGode gene models. For both Human and Mouse the Gencode gene model gtf annotaion files can be downloaded form Gencode. If you wish to do this be aware that it takes a little time and is not  done as part of a workshop.</p> <ul> <li>Create a folder called \u2018annotations/Mouse\u2019 in the main \u2018igv\u2019 folder that was installed on your computer when you downloaded IGV.</li> <li>Download the GTF file from the link above and save it in this folder.</li> <li> <p>Unpack and then SORT and INDEX the .gtf file using igvtools.</p> </li> <li> <p>in IGV, before you load you data files, load this annotation file and it will replace the refseq one.</p> </li> </ul> </li> </ul> </li> </ol>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro/#additional-reading","title":"Additional reading","text":"<p>IGV https://rockefelleruniversity.github.io/IGV_course/presentations/singlepage/IGV.html</p>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro_short/","title":"GenomeBrowsers Intro short","text":""},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro_short/#introduction-to-genome-browsers","title":"Introduction to Genome Browsers","text":"<p>Anticipated workshop duration when delivered to a group of participants is 1 hour. This is an abbreviated version of a more extensive Genome Browser workshop.  </p> <p>For queries relating to this workshop, contact Melbourne Bioinformatics at: bioinformatics-training@unimelb.edu.au.</p>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro_short/#overview","title":"Overview","text":"<p>This tutorial will introduce you to the genome browser format and illustrate how some freely available genome browsers can be used to interrogate a variety of data types, such as gene expression, genomic variation, methylation and many more.</p>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro_short/#topic","title":"Topic","text":"<ul> <li> Genomics</li> <li> Transcriptomics</li> <li> Proteomics</li> <li> Metabolomics</li> <li> Statistics and visualisation</li> <li> Structural Modelling</li> <li> Basic skills</li> </ul>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro_short/#skill-level","title":"Skill level","text":"<ul> <li> Beginner  </li> <li> Intermediate  </li> <li> Advanced  </li> </ul> <p>This workshop is designed for participants with no previous experience of using Genome Browsers and no programming experience.</p>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro_short/#description","title":"Description","text":"<p>Learn how to make the most of Genome Browsers !</p> <p>By focusing on gene expression, this hands on tutorial will provide beginners with an introduction to both the UCSC Genome browser and IGV (Integrated Genome Viewer).  Tools and public datasets will be used to illustrate how the expression of transcript variants can be investigated in different, tissues and cell types using public data, including human RNAseq data from GTEX and mouse cell type RNAseq data from Tabula Muris, as viewed within the UCSC genome browser. A subset of Single cell RNAseq data from the Allen Brain Atlas Celltax study will also be downloaded from SRA and visualised in IGV. The data and genes used in this workshop are taken from the neuroscience field, however the analysis approaches and tools illustrated can be applied to many research areas.</p> <p>This tutorial is in three parts:</p> <ul> <li>Section 1 Introduction to the general features of genome browsers. </li> <li>Section 2 Hands on tutorial of the UCSC Genome Browser</li> <li>Section 3 Hands on tutorials of the Integrative Genomics Viewer</li> </ul> <p>This tutorial was developed for use as part a series of workshops for neuroscience researchers, hence the data and example genes are drawn from neuroscience field and focused on analysis and visualisation  of expression data. However, the skills taught in this tutorial are applicable to all areas of research.</p> <p>Data:</p> <ul> <li>Single cell mouse cortex data from the Linnarsson lab</li> <li>Tabular Muris data as represented in the UCSC Genome Browser</li> <li>Celltax single cell expression atlas data downloaded from SRA</li> </ul> <p>Tools:</p> <ul> <li>UCSC genome Browser</li> <li>Integrative Genomics Viewer</li> </ul>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro_short/#learning-objectives","title":"Learning Objectives","text":"<p>At the end of this introductory workshop, you will :</p> <ul> <li>Understand the how some types of genomics and expression data are represented in Genome browsers.</li> <li>Understand gene models and identify differences between transcripts variants.</li> <li>Examine the tissue/cell type expression profiles of a gene of interest in expression data.</li> <li>Know some basic files types used in Genome browsers and upload and view local BAM files.</li> </ul>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro_short/#requirements-and-preparation","title":"Requirements and preparation","text":"<p>Attendees are required to provide their own laptop computers. </p> <p>If delivered as a workshop, participants should install the software and data files below prior to the workshop. Ensure that you provide sufficient time to liaise with your own IT support should you encounter any IT problems with installing software. Unless stated otherwise, recommended browsers are Firefox or Chrome.</p>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro_short/#preparing-you-and-your-laptop-prior-to-starting-this-workshop","title":"Preparing you and your laptop prior to starting this workshop","text":"<ol> <li>Recomended software: Download and install IGV (Free)  * Ensure that (Chrome or FireFox are installed and upto date)  * Create a user account in the UCSC genome browser.  * Required data is downloaded as part of the tutorial exercises.</li> </ol>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro_short/#required-data","title":"Required Data","text":"<ul> <li>No additional data needs to be downloaded prior to this workshop.</li> </ul>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro_short/#authors-and-review-date","title":"Author(s) and review date","text":"<p>Written by: Victoria Perreau | Melbourne Bioinformatics, University of Melbourne.</p> <p>Created: October 2020 Reviewed and revised: March 2021</p>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro_short/#genome-browser-background","title":"Genome Browser background","text":"<p>Genome browsers are invaluable for viewing and interpreting the many different types of data that can be anchored to genomic positions.  These include variation, transcription, the many types regulatory data such as methylation and transcription factor binding, and disease associations. The larger genome browsers serve as data archives for valuable public datasets facilitating visualisation and analysis of different data types. It is also possible to load your own data into some of the public genome browsers.</p> <p>By enabling viewing of one type of data in the context of another, the use of Genome browsers can reveal important information about gene regulation in both normal development and disease, assist hypothesis development relating to genotype phenotype relationships.</p> <p>All researchers are therefore encouraged to become familiar with the use of some of the main browsers such as:</p> <ul> <li>The UCSC Genome Browser, (RRID:SCR_005780)</li> <li>ESEMBL Genome Browser, (RRID:SCR_013367)</li> <li>Epigenome browser at WashU, (RRID:SCR_006208)</li> <li>Integrative Genomics Viewer (IGV), RRID:SCR_011793).</li> </ul> <p>They are designed for use by researchers without programming experience and the developers often provide extensive tutorials and cases studies demonstrating the myriad of ways in which data can be loaded and interpreted to assist in develop and supporting your research hypothesis.</p> <ul> <li>The UCSC Genome Browser Youtube channel</li> <li>Ensemble Browser webinar course</li> </ul> <p>Many large genomic projects also incorporate genome browsers into their web portals to enable users to easily search and view the data. These include:</p> <ul> <li>GTEx</li> <li>gnomAD</li> </ul>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro_short/#bdnf-and-trkb-signalling","title":"BDNF and TrkB signalling","text":"<p>This tutorial uses the a well known and important signalling pathway in the central nervous system (CNS) to illustrate some of the Genome browser tools and utility.</p> <p> </p> <p>Brain Derived Neurotrophic factor (BDNF) protein is an important neurotrophin responsible for regulating many aspects of growth and development in different cells within the CNS. TrkB is an important receptor that binds extracellular BDNF and propagates the intracellular signalling response via a tyrosine kinase. This TrkB receptor protein is encoded by the NTRK2 gene.  </p> <p>The NRK2 gene expresses a number of different transcript variants in different cell types. The most well studied of these is the full length TrkB receptor referred to as TrkB, which is mainly expressed in neuronal cell types. The other transcript variants all express the same exons encoding the extracellular domain of the receptor (shown in the fugure here in green) but have truncated intracellular domains, which do not include the tyrosine kinase domain and thus activate different signalling pathways upon binding to BDNF.  None of these truncated protein products have been well studied, but the most highly expressed receptor variant is known as TrkB-T1, and is known to be highly expressed in astocytes.  </p> <p>Since the transcript variants are differently expressed in different cell types within the CNS the NTRK2 gene is a very useful example for exploring cell type specific transcript expression in available public data.</p> <p>Major CNS cell types:</p> <ul> <li>Neuron  (yellow cell in the image below)</li> <li>Astrocyte  </li> <li>Oligodendrocyte  </li> <li>Microglia  </li> <li>Ependymal  </li> </ul> <p></p>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro_short/#section-1-introduction-to-genome-browsers","title":"Section 1: Introduction to Genome Browsers","text":"<p>Genome browsers rely on a common reference genome for each species in order to map data from different sources to the correct location. A consortium has agreed on a common numbering for each position on the genome for each species. However, this position will vary based on the version of the genome, as error correction and updates can change the numbering. Therefore it is very important to know which version of the genome your data of interest is aligned to.</p> <p>The sequence for the human reference genome was accumulated up over many years from sequence data from many different sources and does not represent the sequence of one single person. Instead it is a composite of fragments of the genome from many different people.  Also, unlike the human genome which is diploid, the human genome is haploid.  That is there is only one copy of each chromosome. It therefore does not reflect the variation on the population, or even the most common variants in the human genome. Exploring variation within human genome is very important and facilitated by genome browsers but not covered in this workshop.</p>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro_short/#genome-build-version-number-further-reading","title":"Genome Build version number- further reading","text":"<ul> <li>The Genome reference consortium</li> <li>What does the nomenclature mean?</li> </ul> <p>For further info on Human Genome version updates I recommend you look at the updates and blog pages on the UCSC genome browser.</p>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro_short/#section-2-the-ucsc-genome-browser-interface","title":"Section 2: The UCSC genome Browser interface","text":"<p>In this section we will become familiar with the web interface of the UCSC genome browser and explore some of the tools and public datasets available.</p> <ul> <li>Explore features of particular chromosomal regions</li> <li>Investigate specific genes as well as collections of genes</li> <li>Search for locations of sequences and markers</li> <li>Retrieve annotation information for specific regions or genome-wide</li> <li>View your own data in context of other annotations</li> <li>Compare a region of one genome to genomes of other species</li> </ul> <p>Weekly maintenance of the browser is at 5-6 pm Thursdays Pacific time, which is equivalent to 11am-12pm AEST time. During this time the browser may be down for a few minutes. To ensure uninterrupted browser services for your research during UCSC server maintenance and power outages, bookmark one of the mirror sites that replicates the UCSC genome browser.</p> <p>Accessing the tools: Many of the tools that we will explore can be selected via multiple different routes within the browser interface. One way to access many tools is via from the top toolbar on a pull down list, other tools can be accessed from within the browser window.  In the following instructions a series of blue boxes is used to indicate successive lower levels from the pull down menu when starting with the top toolbar.  For example, the notation below indicates that you should select \u2018Genome Browser\u2019 from the top tool bar and then click on \u2018Reset all user settings\u2019.</p> <p>Toolbar Genome Browser Reset all user settings</p> <p>Accessing help and training: This workshop the UCSC genome browser is supported by rich training resource which has new material added regularly youtube channel. To access training to further develop your skills and go to: Toolbar Help Training</p>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro_short/#getting-started","title":"Getting started","text":"<ol> <li>Open the Browser interface: <ul> <li>Navigate to the UCSC genome Browser and sign in if you have an account. </li> </ul> </li> <li>First reset the browser, so that we all see the same screen: Toolbar Genome Browser Reset all user settings</li> <li> <p>Select and open the human Genome Hg38 at the default position, there are a few different ways to do this </p> <ul> <li>Toolbar Genomes (this takes you to the Genome gateway page)  <ul> <li>Check that GRCh38 is selected in \u2018human assembly\u2019 and click on the blue GO box  </li> </ul> </li> <li>Toolbar Genomes Human GRCh38hg38 (takes you directly to the genome)</li> </ul> <p>You should see this screen, opening at a position on the X chromosome of Human genome version GRCh38 showing the gene model for the ACE2 gene. </p> </li> <li> <p>Familiarise yourself with the main areas of the interface and locate:</p> <ul> <li>The main Toolbar</li> <li>Blue bar track collections (data of similar types are collected together under the same \u2018Blue bar\u2019 heading). Scroll down to see additional data collections and which ones are turned on as default.</li> <li>Genome species and version number</li> <li>Position box</li> <li>Navigation tool buttons</li> <li>Chromosome ideogram</li> <li>Genome view window</li> <li>Pre loaded tracks, track titles:<ul> <li>The grey bars on the left of the genome view can be used for selecting and configuring the tracks.</li> <li>You can change the order of the tracks by dragging these grey bars up and down.</li> </ul> </li> <li>Turn tracks on and off:<ul> <li>You can hide tracks by right clicking on the grey bar or by turning them off in the Blue bar collections.</li> <li>You have to click on a \u2018refresh\u2019 button to the changes to be reflected in the the genome view window.</li> </ul> </li> <li>View the configuration page specific to a track.  The configuration page gives you a lot of information about the data track and its colouring. You can open the configuration page for a track by:<ul> <li>clicking on the grey bar for the track or,</li> <li>clicking on the track title in the Blue bar collection. More information and options is usually available by selecting the configuration page for a track via the track title in the Blue Bar collections.</li> </ul> </li> <li>Select white \u2018resize\u2019 button to fit the genome view window to your screen</li> </ul> </li> <li> <p>Customise your view by using the \u2018Configure\u2019 tool to change the font size to 12. Use either method below to open the Configure tool.</p> <ul> <li>Toolbar View Configure browser text size 12 submit</li> <li>or start by clicking on white configure button below the genome view window.</li> </ul> </li> <li> <p>Practice navigating around the genome view.</p> <ul> <li>move left and right both the navigation buttons and your mouse</li> <li>zoom in and out using navigation buttons</li> <li>zoom in to a region of interest using \u2018Drag-and-select\u2019:<ul> <li>using your mouse select a region of interest by clicking the ruler (position track) at the very top of the genome view window.</li> </ul> </li> <li>This is also how to access the \u2018highlight tool\u2019 which you will use in a later exercise to highlight a region of interest.<ul> <li>Click on the down arrow next to the highlight colour to select a different colour. </li> </ul> </li> </ul> </li> </ol>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro_short/#understanding-the-gene-models","title":"Understanding the gene models","text":""},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro_short/#ntrk2","title":"NTRK2","text":"<p>First we are going to familiarise ourselves with the gene model representation of the different transcripts of NTRK2.  </p> <ol> <li> <p>Navigate to the NTRK2 gene position in GRCh38 and view the gene models</p> <ul> <li>You can navigate to a different region by typing in the position box.<ul> <li>If you know the specific location you are interested in type in the location using the format \u201cchr#:1234-1234\u201d.</li> <li>If you have a gene of interest you can type in the gene name (eg: NTRK2). Note the autocompleted suggestions that appear when  you start typing.  You can select from one of the suggestions or click go and select from a wider range of options.</li> <li>Type (or copy and paste) NTRK2 or chr9:84,665,760-85,030,334 into the position box.</li> </ul> </li> <li>Hide all tracks by selecting the white button below the genome view.</li> <li>Turn on only the \u2018Genecode v32 Genemodels\u2019 in \u2018full\u2019 viewing mode by selecting from the blue bar group labelled \u2018Genes and Gene predictions\u2019.</li> <li>Turn on \u2018Conservation\u2019 track to \u2018full\u2019<ul> <li>Dont forget to click refresh.</li> </ul> </li> <li> <p>When you have navigated to the NTRK2 gene, zoom out until you can view all of the 5\u2019 UTRs and 3\u2019 UTRs for all transcript variants for this gene. Then drag the view left and right to center (like in Google maps) or \u2018drag and select\u2019 the region to center the gene in the Genome view. You should see something like the image below. </p> </li> <li> <p>Which strand is the gene encoded on / transcribed from? (+ or - strand)</p> </li> <li>Identify the exons, introns and UTRs<ul> <li>Do regions of conservation only occur were there are coding regions?</li> <li>How many different transcripts variants are there for this gene?</li> <li>How do they differ?</li> </ul> </li> <li>Select a coding region (full height boxes) towards the 3\u2019UTR of the gene.<ul> <li>zoom in to the region until you can see the letters of the amino acid sequence.<ul> <li>Why are some amino acid boxes red or green?</li> </ul> </li> <li>Zoom in again until you can see each amino acid number.  <ul> <li>Why do different transcripts have different amino acid numbers?</li> </ul> </li> </ul> </li> <li>Note that one of the transcript names is in white text with a black background, this is the transcript you selected from the autocompleted list or the search results.</li> <li>Change the \u2018view settings\u2019 for the track. Switch between dense squish pack full to see how it changes the representation of the models.<ul> <li>Right click on the track grey bar in the left of the genome window to access view settings.</li> </ul> </li> <li>Go to the configuration  page for the Gencode v32 track and change the gene names to also reveal the \u2018Gencode transcript ID\u2019 in the label.</li> <li>The transcript names are now too long to fit on the screen. Go to the genome view configuration page (like you did to chane the font size at the beginning of the workshop) and change the number of characters in the label so that you can see the entire transcript label.  </li> </ul> </li> </ol>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro_short/#gene-model-revision-quiz","title":"Gene model revision Quiz","text":"<p>Test your understanding of gene model representation by attempting this 6 questions in this quiz.</p>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro_short/#gene-expression-data","title":"Gene expression data","text":"<ol> <li> <p>The FACS derived data from the Tabular Muris cell type data is also availble in the UCSC genome browser and can be visualised as a coverage plot</p> <ul> <li>Start at the view of the NTRK2 gene in the human genome and navigate to the Ntrk2 gene in the mouse genome using the \u2018View in other genomes tool\u2019.<ul> <li>Toolbar View In Other Genomes (Convert)</li> <li>select New Genome:Mouse , New Assembly:GRC38/mm10, click on \u2018Submit\u2019</li> <li>select the region with the greatest homology</li> </ul> </li> <li>Configure the Tabular Muris track by selecting it from the blue bar collection.<ul> <li>Hide \u2018Cell expression\u2019</li> <li>Select \u2018Genome coverage\u2019 to full</li> <li>Select \u2018submit\u2019 This can look like a bit too much data to manage as there are very many tracks and the default track height is set very high. But its easy to simplify it by filtering to show only a few cell types of interest.</li> </ul> </li> <li>Right click on the grey bar to \u2018configure the track set\u2019.<ul> <li>Change track height to 30</li> <li>for \u2018data view scaling\u2019 select group autoscale</li> <li>clear all the subtracks and then manually select only a few cell types of interest:<ul> <li>astrocyte Cv</li> <li>Bergmann glial Cv</li> <li>microglia Cv</li> <li>neuron Cv</li> <li>oligodendrocyte Cv</li> <li>OPC Cv</li> </ul> </li> </ul> </li> <li>Which cell type has the highest level expression in this dataset?</li> <li>Change the \u2018Data view scaling\u2019 to autoscale to dataview.<ul> <li>Export a PDF image of the genome view: Toolbar View PDF/PS select \u2018Download the current browser graphic in PDF\u2019 </li> </ul> </li> <li>Which cell type(s) express the long and short transcripts for NTRK2?</li> </ul> </li> <li> <p>We are going to examine the expression of transcript variants of NTRK2 in different cell types in the mouse brain cortex Linnarsson lab</p> <ul> <li>The data that is publicly available for viewing in the UCCS genome browser but is not housed in the UCSC genome browser. You must first access it from the the Linnarsson lab data page.</li> <li>This RNAseq data is stranded, meaning you can see if the transcript data is from the + or - strand.</li> <li>Go to the Public data page where you can search for cell expression profiles for individual genes.</li> <li>Click on the \u2018Browse the genome\u2019 blue text near the bottom of the page.</li> <li>This loads 18 different tracks, one for each cell type. The default setting for expression range is quite high and most gene expression cannot be visualised with these settings. Each track must be also be configured individually rather than as a group, which I will demonstrate but it takes a lot of time.</li> <li>I have created a version of this data where each track autoscales which can make it quicker to determine what expression range would be ideal for visualising the expression of an individual gene.  You can access this custom track set at this link.</li> <li>For an exercise, select 2 or three cell types and adjust the scale to best reflect differences in gene expression of Ntrk2 between these cells. Save this session and share it.</li> </ul> </li> </ol>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro_short/#section-3-igv","title":"Section 3: IGV","text":"<p>In this section we will download a BAM file of gene expression data from SRA and view it in the Integrated Genome Viewer (IGV).  </p> <p>For simplicity, and in order to save time if you have not yet installed IGV on your computer, you can view the BAM files  the IVG web browser application. However you cannot generate the Sashimi plot view in the web browser version of IGV.</p> <p>BAM files must first be sorted and indexed before they can be loaded into genome viewers and IGV has tools to do this in the desktop app without having to use command line. However these tools are not available in the IGV web app. Therefore I have also provided the sorted BAM and index files for download, but I encourage you to download them yourself from SRA and sort and index them using the instructions below when you have time. BAM and Bai file download link</p> <p>The expression data we are using for this exercise is from the mouse Celltax single cell expression atlas published by the Allen Brain Institute.  The cell tax vignette has an expression browser that displays gene level expression as a heat map for any gene of interest,  The readsets (fastq files) and aligned data (BAM files) for 1809 runs on single cells are also available for down load from SRA.</p> <p>The SRA study ID for this study is SRP061902 and individual runs from this study are easily selected by viewing the samples in the \u2018RunSelector\u2019, if you wish to identify particular cell types of interest.  For this exercise, I have already identified a few samples that we will download in order to illustrate navigating data in IGV by looking at the expression of NTRK2 in the same cell types we have discussed in earlier exercises.</p> <p>For each cell type we will down load a .BAM file containing only the reads from a single chromosome of interest. Using a reduced dataset for demonstrations cuts down on data transfer and processing time.</p> <p>For each SRA run in the table below open the link in a new tab to down load the data. Not many readsets in SRA have aligned data available for down load but this data set does.</p> Cell type SRA run Vignette Cell ID astrocyte SRR2138962 D1319_V astrocyte SRR2139935 A1643_VL neuron SRR2139989 S467_V4 neuron SRR2140047 S1282_V <ol> <li> <p>Download BAM files from SRA</p> <ul> <li>Click on the \u2018Alignment\u2019 tab</li> <li>Note that the data is aligned to the mouse GRCm38 genome (mm10).</li> <li>Select the chromosome of interest. For NTRK2 in mouse it is chr13</li> <li>For \u2018Output this run in:\u2019 select BAM and click on \u2018format to:\u2019 File</li> <li>Rename the downloaded file to include the cell type, to avoid confusion. eg: SRR2138661_astrocyte_chr13.bam</li> </ul> </li> <li> <p>Use IGV tools to SORT and INDEX the BAM files Store sorted BAM files and index files in the same folder.</p> <ul> <li>Open IGV and select Tools / Run igvtools\u2026 from the pull town menus.</li> <li>Select \u2018Sort\u2019 from the Command options and use the brows options to select the BAM file you just downloaded and click \u2018Run\u2019</li> <li>Without closing the igvtools window now select the command \u2018Index\u2019 and Browse to find the BAM file you just sorted.  It will have the same file name with \u2018sorted\u2019 added to the end. eg SRR2138661_astrocyte_chr13.sorted.bam</li> <li>The resulting index file will have the file name : SRR2138661_astrocyte_chr13.sorted.bam.bai<ul> <li>It is essential that the index file for a BAM file has the same name and is located in the same folder as its BAM file. If not the IVG software will not be able to open the BAM file.</li> </ul> </li> </ul> </li> </ol> <p></p> <ol> <li>View the BAM files in IGV<ul> <li>Select the Mouse (mm10) genome from the genome box in the top right hand corner.</li> <li>Select File / Load from File\u2026 and select all 4 \u2018_chr13.sorted.bam\u2019 files only (use command to select more then one file at a time).</li> <li>select open - but don\u2019t expect to see any data yet. The genome view window opens on a whole chromosome view as default but it wont show any data until the view region is small enough to show all data in the current view.</li> <li>Type the gene name \u2018NTRK2\u2019 into the search window.</li> <li>Expand the Refseq gene model track by right clicking it to see all the splice variants</li> <li>The gene and thus the genome view is 328kb and the default setting for viewing data is only 100kb.  So unless you have already changed your settings alignment data will not get be showing.</li> <li>zoom into the region of a coding exon by selecting in the numbered location track at the top of the genome view.</li> <li>To see the whole gene in the genome window at the same time you may need to change the preferences.  </li> <li>Go to View / Preferences and select the \u2018Alignments tab\u2019.</li> <li>Change the visibility range threshold to 400kb.</li> </ul> </li> </ol> <p></p> <p>You may need to change this back to a smaller range in the future if you are working with large datasets and/or small amounts of memory on your computer.</p> <p></p> <ol> <li>Export images<ul> <li>The Genome view above can be exported by selecting \u2018File / Save image\u2026\u2019  from the tool bar.</li> <li>To export the Sashimi plot below:<ul> <li>Right click on one of the junction tracks and select \u2018Sashimi Plot\u2019 from the poll down menu.</li> <li>Select the tracks you want in your final image.</li> <li>There are some data filtering and style adjustments you can make to the Sashimi plot. Right click on each track to access the menu options. Some changes apply to each track individually and some to all tracks.     * </li> </ul> </li> </ul> </li> </ol>"},{"location":"tutorials/Genome_browsers/GenomeBrowsers_Intro_short/#additional-reading","title":"Additional reading","text":"<p>IGV https://rockefelleruniversity.github.io/IGV_course/presentations/singlepage/IGV.html</p>"},{"location":"tutorials/Genome_browsers/formatting_template/","title":"Formats to use","text":""},{"location":"tutorials/Genome_browsers/formatting_template/#text-formatting","title":"Text formatting","text":"<p>Bold Italics Bold Italics</p>"},{"location":"tutorials/Genome_browsers/formatting_template/#headings-this-is-2nd-level","title":"Headings (This is 2<sup>nd</sup> level)","text":""},{"location":"tutorials/Genome_browsers/formatting_template/#the-3rd-level","title":"The 3<sup>rd</sup> level","text":""},{"location":"tutorials/Genome_browsers/formatting_template/#the-4th-level","title":"The 4<sup>th</sup> level","text":""},{"location":"tutorials/Genome_browsers/formatting_template/#the-5th-level","title":"The 5<sup>th</sup> level","text":""},{"location":"tutorials/Genome_browsers/formatting_template/#the-6th-level","title":"The 6<sup>th</sup> level","text":""},{"location":"tutorials/Genome_browsers/formatting_template/#code-blocks-and-inline-code","title":"Code Blocks and inline code","text":"<p>They can be added like this. Many different languages are supported.</p>"},{"location":"tutorials/Genome_browsers/formatting_template/#blocks","title":"Blocks","text":"<pre><code>$ ls\nexp01  file01  muscle.fq\n</code></pre> <p>or</p> <pre><code>import tensorflow as tf\n</code></pre>"},{"location":"tutorials/Genome_browsers/formatting_template/#inline-code","title":"Inline code","text":"<p>Code can also be shown as an inline snippet like this <code>import tensorflow as tf</code>.</p>"},{"location":"tutorials/Genome_browsers/formatting_template/#lists","title":"Lists","text":"<p>If you need to add a list:  </p>"},{"location":"tutorials/Genome_browsers/formatting_template/#unordered-lists","title":"Unordered Lists","text":"<ul> <li>Some information</li> <li>Some more information</li> </ul>"},{"location":"tutorials/Genome_browsers/formatting_template/#ordered-lists","title":"Ordered Lists","text":"<ol> <li> <p>Some point</p> </li> <li> <p>Another point</p> <ol> <li>Subpoint<ol> <li>Sub-subpoint</li> </ol> </li> </ol> </li> </ol>"},{"location":"tutorials/Genome_browsers/formatting_template/#images","title":"Images","text":"<p>How to add an image:  </p> <p></p>"},{"location":"tutorials/Genome_browsers/formatting_template/#tables","title":"Tables","text":"<p>Tables can have text that is left, centred or right aligned.</p> Left Center Right Lorem dolor <code>amet</code> ipsum sit"},{"location":"tutorials/Genome_browsers/formatting_template/#questions-and-answers","title":"Questions and Answers","text":"<p>It is useful to number questions with the section number they appear in so participants can easily refer to the number when asking a question. Indentation is important to display correctly.</p> <p>Question 1.1</p> <p>What is the full path name of your home directory?</p> Hint <p>Remember your Current Working Directory starts in your home directory.</p> Answer <p>You can find out the full path name of the current working directory with the <code>pwd</code> command. Your home directory will look something like this:</p> <pre><code>$ pwd\n/home/trainingXX\n</code></pre> <p>Question 1.1</p> <p>What is the full path name of your home directory?</p> Answer <p>You can find out the full path name of the current working directory with the <code>pwd</code> command. Your home directory will look something like this:</p>"},{"location":"tutorials/Genome_browsers/formatting_template/#line-breaks","title":"Line Breaks","text":"<p>To create a line break (\\&lt;br&gt;), end a line with two or more spaces, and then type return.</p>"},{"location":"tutorials/Genome_browsers/formatting_template/#links","title":"Links","text":"<p>Please see the link.</p>"},{"location":"tutorials/Genome_browsers/formatting_template/#blockquotes","title":"Blockquotes","text":"<p>This is a quote. Two spaces are needed at the end of this to make next line of quote appear on a different line.   This is the second line of quote.</p>"},{"location":"tutorials/Genome_browsers/formatting_template/#text-including-commands-to-type","title":"Text including commands to type","text":"<p>Type <code>ls</code> and press <code>ENTER</code>.</p>"},{"location":"tutorials/Genome_browsers/formatting_template/#when-referring-to-a-filename","title":"When referring to a filename","text":"<p>canu.contigs.fasta contains the assembled sequences.</p>"},{"location":"tutorials/Genome_browsers/formatting_template/#showing-that-a-button-needs-clicking","title":"Showing that a button needs clicking","text":"<p>Click Start</p>"},{"location":"tutorials/Genome_browsers/formatting_template/#highlighting-text","title":"Highlighting text","text":"<p>This text is highlighted.</p>"},{"location":"tutorials/Genome_browsers/formatting_template/#equations","title":"Equations","text":"<p>Equations can be added as a block or inline.</p>"},{"location":"tutorials/Genome_browsers/formatting_template/#block-equations","title":"Block equations","text":"\\[ \\frac{n!}{k!(n-k)!} = \\binom{n}{k} \\]"},{"location":"tutorials/Genome_browsers/formatting_template/#inline-equations","title":"Inline equations","text":"<p>This equation will appear in line with this text: \\(p(x|y) = \\frac{p(y|x)p(x)}{p(y)}\\)</p>"},{"location":"tutorials/Genome_browsers/formatting_template/#to-do","title":"To do","text":"<p>Pdf printing Survey Slides?  </p>"},{"location":"tutorials/alignment/","title":"Index","text":"<p>NB: This tutorial is from a lab and probably obsolete; alignment is covered by variant calling workshops.</p> <p>PR reviewers and advice: Clare Sloggett</p> <p>Current slides: None</p> <p>Other slides:</p> <ul> <li>None yet</li> </ul>"},{"location":"tutorials/alignment/alignment/","title":"Alignment","text":""},{"location":"tutorials/alignment/alignment/#alignment-tutorial","title":"Alignment Tutorial","text":"<p>In this tutorial we will be performing some alignments of short reads to a longer reference (as outlined in earlier lectures.) It is split into two sections. You will perform the same analysis in both sections. The first is Alignment using the Galaxy bioinformatics workflow environment, the second is Alignment using the Unix/Linux command line. Both sections use the same tools.</p> <p>We\u2019ll be using some data and steps from the Genomics Virtual Lab Variant Detection tutorials. You can follow these links if interested to see the full Introductory Variant Detection and Advanced Variant Detection tutorials.</p>"},{"location":"tutorials/alignment/alignment/#section-1-alignment-using-galaxy","title":"Section 1: Alignment using Galaxy","text":""},{"location":"tutorials/alignment/alignment/#preparation","title":"Preparation","text":"<ol> <li> <p>Open Galaxy using the IP address of your Cloud instance in Firefox or Chrome (whichever)</p> <ul> <li>Unless you already have, create a log-in for yourself</li> <li>On the top menu select: User -&gt; Register<ul> <li>Enter your email address, choose a password, repeat it and add an (all lower case) one word name</li> <li>Click Submit.</li> </ul> </li> <li>If you have already registered previously, just log in.</li> </ul> </li> <li> <p>Create a new history and load the required data files</p> <ul> <li>Click the  icon in the History pane and Create New.</li> </ul> </li> <li> <p>There\u2019s only one input file, so instead of importing a History, let\u2019s import the file directly:</p> <ul> <li> <p>From the tool panel, click on Get Data -&gt; Upload File</p> <ul> <li>Click on the Paste/Fetch Data button</li> <li>Copy and paste the following web address into the URL/Text box:       https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/variantCalling_BASIC/NA12878.GAIIx.exome_chr22.1E6reads.76bp.fastq</li> <li>Set the file format to fastqsanger (not fastqcsanger)</li> <li>Click Start<ul> <li>Once the progress bar has reached 100%, click Close</li> </ul> </li> </ul> </li> </ul> </li> <li> <p>Once the file is imported, you may want to give it a shorter name by clicking the  icon on the dataset in the History pane.</p> </li> <li> <p>Examine the input data.</p> <ul> <li>In the History pane on the right, you should see a FASTQ file in the History. Click the  icon to view the contents.</li> </ul> </li> </ol> <p>The data for this workshop is the same as that used in the GVL Introductory Variant Detection tutorial. It is short read data from the exome of chromosome 22 of a single human individual. There are one million 76bp reads in the dataset, produced on an Illumina GAIIx from exome-enriched DNA. This data was generated as part of the 1000 Genomes project: http://www.1000genomes.org/.</p>"},{"location":"tutorials/alignment/alignment/#alignment","title":"Alignment","text":""},{"location":"tutorials/alignment/alignment/#run-bwa","title":"Run BWA","text":"<p>For our alignment, we will use the tool BWA, which stands for \u201cBurrows-Wheeler Aligner\u201d. You can see its website, if interested, at http://bio-bwa.sourceforge.net/. We will be using the bwa mem variant.</p> <p>Hopefully, everything will be working fine, so the first thing we need to do is run BWA.. To do this, use the following steps.</p> <ol> <li> <p>In the Galaxy tool pane on the left, under NGS: Mapping select the tool Map with BWA-MEM.</p> <ul> <li>We want to align this data to the human genome. Have a look under Using reference genome. Choose hg19. This is Human reference genome 19 (UCSC hg19).</li> <li>Set Single or Paired-end reads to Single</li> <li>Specify the FASTQ file as input - it may be automatically selected already.</li> <li>For our alignment, it will be ok to use the default alignment parameters. However, have a look at the options you can change by setting Select analysis mode to Full list of options. Look through the parameters and see if you understand from lectures what they are for. You can also read documentation on these options by scrolling down the Galaxy BWA tool page.</li> <li>Put the Select analysis mode back to Simple Illumina Mode</li> <li>Click Execute and wait for your job to run.</li> </ul> </li> </ol> <p>This may take a few minutes and will produce a BAM file. While waiting you can have a look at the SAM/BAM format specification. Look at this document, which gives you information on FASTQ, SAM, pileup and BED formats. You can also view the SAM/BAM format specification itself at http://samtools.github.io/hts-specs/SAMv1.pdf.</p> <p>Now we will convert the compressed BAM file to an uncompressed SAM file so we can see what it looks like.</p> <ol> <li> <p>In the Galaxy tool pane on the left, under NGS: SAM tools select the tool BAM to SAM.</p> <ul> <li>For BAM File to Convert select your BAM file.</li> <li>Click Execute.</li> </ul> </li> </ol> <p>Browse the resulting SAM file. To view the data click on the  icon next to the \u201cBAM to SAM on \u2026 converted SAM\u201d dataset in the History panel on the right-hand-side of the display. You should see header lines which begin with \u201c@\u201d, followed by one alignment row per read. Refer to the docs above to understand what you\u2019re seeing.</p> <p>One thing to notice is that the SAM file might be sorted in different ways, or might not be sorted at all. Two common ways of sorting a SAM or BAM file are:</p> <ul> <li>Alphabetically by the names of the reads. The read names are the first column of the SAM file, and come from the \u201c&gt;\u201d lines in the FASTQ file.</li> <li>In order of genomic position, so that all the reads aligned to chromosome 1 are listed first (in coordinate order), followed by reads aligned to chromosome 2, etc. This information is in the third and fourth columns of the SAM file. This sort order is usually more useful for algorithms which need to access data that\u2019s aligned to a particular region of the genome.</li> </ul>"},{"location":"tutorials/alignment/alignment/#section-2-view-the-alignment","title":"Section 2: View the alignment","text":""},{"location":"tutorials/alignment/alignment/#load-the-vnc-interface","title":"Load the VNC interface","text":"<p>We will use a Genome Browser called IGV to view the BAM alignment. It is installed on your cloud computer. To use it, we need to log in to your cloud computer\u2019s VNC interface.</p> <ol> <li>Point your web browser at http://your-ip-address</li> <li>This is the GVL dashboard. Half way down the page there is a link to the Lubuntu desktop. It is, http://your-ip-address/vnc, click on it.</li> <li>You\u2019ll need to log in to the web page using the username: Ubuntu, password: SummerCamp2016. This will display the desktop of the cloud computer in your web browser. (You may need to reload the page for it to work properly.)</li> <li>Login to the desktop as the researcher user (not ubuntu) using the same password.</li> </ol> <p>Now we have logged into the cloud computer\u2019s visual desktop. You\u2019ll notice two icons on the desktop. A terminal and a shortcut to IGV.</p>"},{"location":"tutorials/alignment/alignment/#download-the-data","title":"Download the data","text":"<p>The next thing we need to do is get the BAM files out of Galaxy and into the normal unix filesystem. To do this we need to load Galaxy within the VNC interface.</p> <ol> <li>From the Linux menu button on the bottom left of the vnc interface, select Internet-&gt;Firefox</li> <li>Point the resultant web browser (within the VNC interface) at http://localhost/galaxy</li> <li>Login to this Galaxy interface via the User menu using the same login details you set up earlier. You should now see the history that you hve been working on.</li> <li>Click on the file name of the BAM file in your history. This will expand it to show some additional details.</li> <li>Click on the Download () button. You\u2019ll need to download both the BAM file and BAM index file.</li> </ol>"},{"location":"tutorials/alignment/alignment/#view-the-bam-file-in-igv","title":"View the BAM file in IGV","text":"<p>Now we will open IGV to view the bam file and browse the alignment.</p> <ol> <li>Double click the IGV icon on the VNC desktop. Note that it will take some time to open.</li> <li>We need to make sure we have the correct reference genome loaded that matches the one we used in our alignment. Make sure that the dropdown box on the top-left shows hg19.</li> <li>Load the BAM you downloaded from Galaxy. Select File -&gt; Load from File and supply the BAM file. (It is in the researcher user\u2019s Downloads directory.)</li> </ol> <p>Now explore the visualisation of the BAM file!</p> <p>Recall that our example data is from chromosome 22 only. In the contig drop-down menu, which says \u201cAll\u201d, instead select \u201c22\u201d. Zoom in. If you\u2019re still having trouble finding the area the reads are mapped to, paste these coordinates into the box in the top bar of IGV: 22:17,432,499-17,502,283 . Then click \u201cGo\u201d.</p> <p>At the bottom, you should see an annotation track that is loaded into IGV by default, showing transcripts. Right click on the \u201cGenes\u201d track and select \u201cExpanded\u201d.</p> <p>Zoom in to look at individual reads. Compare them to the gene annotation track, do you understand what is going on? Try zooming in far enough to see the reference genome sequence. Browse around and see if you can find some errors in the alignments. You can also explore IGV\u2019s features - try right-clicking on a read to change the display options.</p>"},{"location":"tutorials/alignment/alignment/#section-3-alignment-using-the-command-line","title":"Section 3: Alignment using the command line","text":"<p>In this section of the tutorial we will perform the same alignment as before on the command line. We will use the same data and tools.</p> <p>To use the command-line on your Research Cloud instance, ssh in to your instance as researcher@ using ssh or Putty."},{"location":"tutorials/alignment/alignment/#get-the-data","title":"Get the data","text":"<p>Once you are in the unix shell, you can get the input data for the tutorial using a command like <code>wget</code> or <code>curl</code>:</p> <pre><code>wget https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/variantCalling_BASIC/NA12878.GAIIx.exome_chr22.1E6reads.76bp.fastq\n</code></pre> <p>This will download the datafile to the current directory.</p>"},{"location":"tutorials/alignment/alignment/#set-up-the-environment","title":"Set up the environment","text":"<p>Now you\u2019ll need to load the bwa and samtools modules. Try</p> <pre><code>module avail\n</code></pre> <p>This command will show you a list of command line tool modules available to you. To use any of the tools, you need to load them into the current compute environment. You use the <code>module load</code> command for this. We need bwa and samtools so the commands are:</p> <pre><code>module load bwa\nmodule load samtools/1.2\n</code></pre> <p>Then, run bwa with the command: <code>bwa</code> to see some information on BWA usage. This will list BWA commands, such as bwa index, which indexes a reference genome, and bwa mem, which performs alignment. Type a command to see information on its usage. Try <code>bwa mem</code> to see how to run bwa mem.</p> <p>Similarly, try just <code>samtools</code> to see a list of samtools commands.</p>"},{"location":"tutorials/alignment/alignment/#perform-the-alignment","title":"Perform the alignment","text":"<p>The Galaxy BWA tool actually wraps three commands; bwa mem, which performs alignment and produces a SAM file; samtools view which produces a BAM file from the SAM file and finally samtools sort which sorts the bam file so it is in reference position order.</p> <p>We will replicate that process here.</p> <p>How can you get an indexed reference genome? You could download a FASTA file and index it with <code>bwa index</code>. The human genome is fairly large and we won\u2019t have time to index it during the lab, but your instance should already have access to an indexed genome. Try</p> <pre><code>ls galaxy_genomes\nls galaxy_genomes/hg19\nls galaxy_genomes/hg19/bwa_mem_index\nls galaxy_genomes/hg19/bwa_mem_index/hg19/\n</code></pre> <p>Under galaxy_genomes are directories for different reference genomes, and each has pre-built indices for various tools including BWA. You may also need galaxy_genomes/hg19/sam_index when using some samtools commands.</p> <p>You need to give BWA the prefix of the reference genome index files, which is galaxy_genomes/hg19/bwa_index/hg19/hg19.fa</p> <p>So as the genome has already been indexed for us, we just need to point bwa at it.</p> <p>So, now we can run bwa to align the reads to the reference.</p> <p>We use the form of the command bwa mem index_file reads_file &gt; aligned_reads.sam</p> <p>To do this from your home directory, run the command:</p> <pre><code>bwa mem galaxy_genomes/hg19/bwa_mem_index/hg19/hg19.fa NA12878.GAIIx.exome_chr22.1E6reads.76bp.fastq &gt; aligned_reads.sam\n</code></pre> <p>This will load the reference index, align the reads and produce a SAM file called aligned_reads.sam.</p> <p>Use <code>less</code> to examine it.</p>"},{"location":"tutorials/alignment/alignment/#make-the-bam-file","title":"Make the BAM file","text":"<p>Try to convert your SAM file to a BAM file using samtools view. The command you\u2019ll need is:</p> <pre><code>samtools view -b -h aligned_reads.sam &gt; aligned_reads.bam\n</code></pre> <p>You can look up the effect of all these command line flags by typing the view command by itself, or by reading the samtools documentation.</p>"},{"location":"tutorials/alignment/alignment/#other-sam-tools-commands","title":"Other SAM tools commands","text":"<p>Try some other samtools commands on your BAM file. Again, find out how to use them by typing them by themselves, or by reading the documentation. Some commands are:</p> <ul> <li>samtools sort to sort the BAM file</li> <li>samtools index to produce the index (.bai) file. You need this to visualise the BAM file in IGV.</li> <li>samtools flagstat to get some basic information on mapped reads</li> <li>samtools view to see the BAM files contents; this effectively converts it back to SAM</li> </ul> <p>Now go back to the viewing BAM alignments section above. You\u2019ll need to sort the BAM file and create an index (.bai) file before you load the BAM file into IGV\u2026</p> <p>That\u2019s it, I hope you enjoyed the tutorial!</p>"},{"location":"tutorials/assembly/","title":"Index","text":"<p>PR reviewers and advice: Simon Gladman, Torsten Seemann, Dieter Bulach, Anna Syme</p> <p>Current slides: in folder https://drive.google.com/drive/u/0/folders/0B2iomOA3e6SuZHNxNjlPWG9hdTQ</p> <p>Other slides:</p> <ul> <li>Markdown slides at galaxyproject.github.io : http://galaxyproject.github.io/training-material/topics/assembly/ </li> </ul>"},{"location":"tutorials/assembly/assembly-background/","title":"De novo genome assembly using Velvet","text":""},{"location":"tutorials/assembly/assembly-background/#background","title":"Background","text":""},{"location":"tutorials/assembly/assembly-background/#introduction-to-de-novo-assembly","title":"Introduction to de novo assembly","text":"<p>DNA sequence assembly from short fragments (&lt; 200 bp) is often the first step of any bioinformatic analysis. The goal of assembly is to take the millions of short reads produced by sequencing instruments and re-construct the DNA from which the reads originated.</p> <p>The sequence assembly issue was neatly summed up by the following quote:</p> <p>\u201cThe problem of sequence assembly can be compared to taking many copies of a book, passing them all through a shredder, and piecing a copy of the book back together from only shredded pieces.  The book may have many repeated paragraphs,  and some shreds may be modified to have typos.  Excerpts from another book may be added in, and some shreds may be completely unrecognizable.\u201d \u2013 Wikipedia: Sequence assembly.</p> <p>An addition to the above for paired end sequencing is that now some of the shreds are quite long but only about 10% of the words from both ends of the shred are known.</p> <p>This tutorial describes de novo assembly of Illumina short reads using the Velvet assembler (Zerbino  et al. 2008, 2009) and the Velvet Optimiser (Gladman &amp; Seemann, 2009) from within the Galaxy workflow management system.</p>"},{"location":"tutorials/assembly/assembly-background/#the-galaxy-workflow-platform","title":"The Galaxy workflow platform","text":""},{"location":"tutorials/assembly/assembly-background/#what-is-galaxy","title":"What is Galaxy?","text":"<p>Galaxy is an online bioinformatics workflow management system. Essentially, you upload your files, create various analysis pipelines and run them, then visualise your results.</p> <p>Galaxy is really an interface to the various tools that do the data processing; each of these tools could be run from the command line, outside of Galaxy. Galaxy makes it easier to link up the tools together and visualise the entire analysis pipeline.</p> <p>Galaxy uses the concept of \u2018histories\u2019. Histories are sets of data and workflows that act on that data. The data for this workshop is available in a shared history, which you can import into your own Galaxy account</p> <p>Learn more about Galaxy here</p> <p>Figure 1: The Galaxy interface</p> <p>Tools on the left, data in the middle, analysis workflow on the right.</p> <p></p>"},{"location":"tutorials/assembly/assembly-background/#de-novo-assembly-with-velvet-and-the-velvet-optimiser","title":"De novo assembly with Velvet and the Velvet Optimiser.","text":""},{"location":"tutorials/assembly/assembly-background/#velvet","title":"Velvet","text":"<p>Velvet is software to perform dna assembly from short reads by manipulating de Bruijn graphs. It is capable of forming long contigs (n50 of in excess of 150kb) from paired end short reads. It has several input parameters for controlling the structure of the de Bruijn graph and these must be set optimally to get the best assembly possible. Velvet can read Fasta, FastQ, sam or bam files. However, it ignores any quality scores and simply relies on sequencing depth to resolve errors. The Velvet Optimiser software performs many Velvet assemblies with various parameter sets and searches for the optimal assembly automatically.</p>"},{"location":"tutorials/assembly/assembly-background/#de-bruijn-graphs","title":"de Bruijn graphs","text":"<p>A de Bruijn graph is a directed graph which represents overlaps between sequences of symbols. The size of the sequence contained in the nodes of the graph is called the word-length or k-mer size. In Figure 2, the word length is 3. The two symbols are 1 and 0. Each node in the graph has the last two symbols of the previous node and 1 new symbol. Sequences of symbols can be produced by traversing the graph and adding the \u201cnew\u201d symbol to the growing sequence.</p> <p>Figure 2: A de Bruijn graph of word length 3 for the symbols 1 and 0.</p> <p></p> <p>From: https://cameroncounts.wordpress.com/2015/02/28/1247/</p> <p>Velvet constructs a de Bruijn graph of the reads. It has 4 symbols (A, C, G and T - N\u2019s are converted to A\u2019s) The word length (or k-mer size) is one of Velvet\u2019s prime parameters.</p> <p>Velvet is not the only assembly software that works in this manner. Euler, Edena and SOAP de novo are examples of others.</p>"},{"location":"tutorials/assembly/assembly-background/#the-velvet-algorithm","title":"The Velvet algorithm","text":""},{"location":"tutorials/assembly/assembly-background/#step-1-hashing-the-reads","title":"Step 1: Hashing the reads.","text":"<ul> <li>Velvet breaks up each read into k-mers of length k.</li> <li>A k-mer is a k length subsequence of the read.</li> <li>A 36 base pair long read would have 6 different 31-mers.</li> <li>The k-mers and their reverse complements are added to a hash table to categorize them.</li> <li>Each k-mer is stored once but the number of times it appears is also recorded.</li> <li>This step is performed by \u201cvelveth\u201d - one of the programs in the Velvet suite.</li> </ul>"},{"location":"tutorials/assembly/assembly-background/#step-2-constructing-the-de-bruijn-graph","title":"Step 2: Constructing the de Bruijn graph.","text":"<ul> <li>Velvet adds the k-mers one-by-one to the graph.</li> <li>Adjacent k-mers overlap by k-1 nucleotides.</li> <li>A k-mer which has no k-1 overlaps with any k-mer already on the graph starts a new node.</li> <li>Each node stores the average number of times its k-mers appear in the hash table.</li> <li>Figure 3 shows a section of a de Bruijn graph constructed by Velvet for k=5.</li> <li>Different sequences can be read off the graph by following a different path through it. (Figure 3)</li> </ul> <p>Figure 3: Section of a simple de Bruijn graph of reads with k-mer size 5. Coloured sequences are constructed by following the appropriately coloured line through the graph. (Base figure Zerbino et al 2008.)</p> <p></p>"},{"location":"tutorials/assembly/assembly-background/#step-3-simplification-of-the-graph","title":"Step 3: Simplification of the graph.","text":"<ul> <li>Chain merging: When there are two connected nodes in the graph without a divergence, merge the two nodes.</li> <li>Tip clipping: Tips are short (typically) chains of nodes that are disconnected on one end. They will be clipped if their length is &lt; 2 x k or their average k-mer depth is much less than the continuing path.</li> <li>Bubble removal: Bubbles are redundant paths that start and end at the same nodes (Figure 4.) They are created by sequencing errors, biological variants or slightly varying repeat sequences.</li> <li>Velvet compares the paths using dynamic programming.</li> <li>If they are highly similar, the paths are merged.</li> <li>Error removal: Erroneous connections are removed by using a \u201ccoverage cutoff\u201d. Genuine short nodes which cannot be simplified should have a high coverage. An attempt is made to resolve repeats using the \u201cexpected coverage\u201d of the graph nodes.</li> <li>Paired end read information: Velvet uses algorithms called \u201cPebble\u201d and \u201cRock Band\u201d (Zerbino et al 2009) to order the nodes with respect to one another in order to scaffold them into longer contigs.</li> </ul> <p>Figure 4: Representation of \u201cbubbles\u201d in a Velvet de Bruijn graph. (Base figure Zerbino et al 2008.)</p> <p></p>"},{"location":"tutorials/assembly/assembly-background/#step-4-read-off-the-contigs","title":"Step 4: Read off the contigs.","text":"<ul> <li>Follow the chains of nodes through the graph and \u201cread off\u201d the bases to create the contigs.</li> <li>Where there is an ambiguous divergence/convergence, stop the current contig and start a new one.</li> </ul>"},{"location":"tutorials/assembly/assembly-background/#k-mer-size-and-coverage-cutoff-values","title":"K-mer size and coverage cutoff values","text":"<p>The size of the k-mers that construct the graph is very important and has a large effect on the outcome of the assembly. Generally, small k-mers create a graph with increased connectivity, more ambiguity (more divergences) and less clear \u201cpaths\u201d through the graph. Large k-mers produce graphs with less connectivity but higher specificity. The paths through the graph are clearer but they are less connected and prone to breaking down.</p> <p>The coverage cutoff c used during the error correction step of Velvet also has a significant effect on the output of the assembly process. If c is too low, the assembly will contain nodes of the graph that are the product of sequencing errors and misconnections. If c is too high, it can create mis-assemblies in the contigs and destroys lots of useful data.</p> <p>Each dataset has its own optimum values for the k-mer size and the coverage cutoff used in the error removal step. Choosing them appropriately is one of the challenges faced by new users of the Velvet software.</p>"},{"location":"tutorials/assembly/assembly-background/#velvet-optimiser","title":"Velvet Optimiser","text":"<p>The Velvet Optimiser chooses the optimal values for k and c automatically by performing many runs of Velvet (partially in parallel) and interrogating the subsequent assemblies.  It uses different optimisation functions for k and c and these can be user controlled.</p> <p>It requires the user to input a range of k values to search (to cut down on running time).</p>"},{"location":"tutorials/assembly/assembly-background/#references","title":"References","text":"<p>http://en.wikipedia.org/wiki/Sequence_assembly</p> <p>Zerbino DR, Birney E, Velvet: algorithms for de novo short read assembly using de Bruijn graphs, Genome Research, 2008, 18:821-829</p> <p>Zerbino DR, McEwen GK, Margulies EH, Birney E, Pebble and rock band: heuristic resolution of repeats and scaffolding in the velvet short-read de novo assembler. PLoS One. 2009; 4(12):e8407.</p> <p>Gladman SL, Seemann T, Velvet Optimiser, http://www.vicbioinformatics.com/software.shtml 2009.</p>"},{"location":"tutorials/assembly/assembly-protocol/","title":"Introduction to de novo genome assembly for Illumina reads","text":""},{"location":"tutorials/assembly/assembly-protocol/#de-novo-genome-assembly-for-illumina-data","title":"De novo Genome Assembly for Illumina Data","text":""},{"location":"tutorials/assembly/assembly-protocol/#protocol","title":"Protocol","text":"<p>Written and maintained by Simon Gladman - Melbourne Bioinformatics (formerly VLSCI)</p>"},{"location":"tutorials/assembly/assembly-protocol/#protocol-overview-introduction","title":"Protocol Overview / Introduction","text":"<p>In this protocol we discuss and outline the process of de novo assembly for small to medium sized genomes.</p>"},{"location":"tutorials/assembly/assembly-protocol/#what-is-de-novo-genome-assembly","title":"What is de novo genome assembly?","text":"<p>Genome assembly refers to the process of taking a large number of short DNA sequences and putting them back together to create a representation of the original chromosomes from which the DNA originated [1]. De novo genome assemblies assume no prior knowledge of the source DNA sequence length, layout or composition. In a genome sequencing project, the DNA of the target organism is broken up into millions of small pieces and read on a sequencing machine. These \u201creads\u201d vary from 20 to 1000 nucleotide base pairs (bp) in length depending on the sequencing method used.  Typically for Illumina type short read sequencing, reads of length 36 - 150 bp are produced. These reads can be either \u201csingle ended\u201d as described above or \u201cpaired end.\u201d A good summary of other types of DNA sequencing can be found here.</p> <p>Paired end reads are produced when the fragment size used in the sequencing process is much longer (typically 250 - 500 bp long) and the ends of the fragment are read in towards the middle. This produces two \u201cpaired\u201d reads. One from the left hand end of a fragment and one from the right with a known separation distance between them. (The known separation distance is actually a distribution with a mean and standard deviation as not all original fragments are of the same length.) This extra information contained in the paired end reads can be useful for helping to tie pieces of sequence together during the assembly process.</p> <p>The goal of a sequence assembler is to produce long contiguous pieces of sequence (contigs) from these reads. The contigs are sometimes then ordered and oriented in relation to one another to form scaffolds. The distances between pairs of a set of paired end reads is useful information for this purpose.</p> <p>The mechanisms used by assembly software are varied but the most common type for short reads is assembly by de Bruijn graph. See this document for an explanation of the de Bruijn graph genome assembler \u201cVelvet.\u201d</p> <p>Genome assembly is a very difficult computational problem, made more difficult because many genomes contain large numbers of identical sequences, known as repeats. These repeats can be thousands of nucleotides long, and some occur in thousands of different locations, especially in the large genomes of plants and animals. [1]</p>"},{"location":"tutorials/assembly/assembly-protocol/#why-do-we-want-to-assemble-an-organisms-dna","title":"Why do we want to assemble an organism\u2019s DNA?","text":"<p>Determining the DNA sequence of an organism is useful in fundamental research into why and how they live, as well as in applied subjects. Because of the importance of DNA to living things, knowledge of a DNA sequence may be useful in practically any biological research. For example, in medicine it can be used to identify, diagnose and potentially develop treatments for genetic diseases. Similarly, research into pathogens may lead to treatments for contagious diseases [2].</p>"},{"location":"tutorials/assembly/assembly-protocol/#the-protocol-in-a-nutshell","title":"The protocol in a nutshell:","text":"<ul> <li>Obtain sequence read file(s) from sequencing machine(s).</li> <li>Look at the reads - get an understanding of what you\u2019ve got and what the quality is like.</li> <li>Raw data cleanup/quality trimming if necessary.</li> <li>Choose an appropriate assembly parameter set.</li> <li>Assemble the data into contigs/scaffolds.</li> <li>Examine the output of the assembly and assess assembly quality.</li> </ul> <p>Figure 1: Flowchart of de novo assembly protocol.</p> <p></p>"},{"location":"tutorials/assembly/assembly-protocol/#raw-read-sequence-file-formats","title":"Raw read sequence file formats.","text":"<p>Raw read sequences can be stored in a variety of formats. The reads can be stored as text in a Fasta file or with their qualities as a FastQ file. They can also be stored as alignments to references in other formats such as SAM or its binary compressed implementation BAM. All of the file formats (with the exception of the binary BAM format) can be compressed easily and often are stored so (.gz for gzipped files.)</p> <p>The most common read file format is FastQ as this is what is produced by the Illumina sequencing pipeline. This will be the focus of our discussion henceforth.</p>"},{"location":"tutorials/assembly/assembly-protocol/#bioinformatics-tools-for-this-protocol","title":"Bioinformatics tools for this protocol.","text":"<p>There are a number of tools available for each step in the genome assembly protocol. These tools all have strengths and weaknesses and have their own application space. Suggestions rather than prescriptions for tools will be made for each of the steps. Other tools could be substituted in each case depending on user preference, experience or problem type.</p>"},{"location":"tutorials/assembly/assembly-protocol/#genomics-virtual-laboratory-resources-for-this-protocol","title":"Genomics Virtual Laboratory resources for this protocol.","text":"<p>Depending on your requirements and skill base there are two options for running this protocol using GVL computing resources.</p> <ul> <li> <p>You can use Galaxy-tut or your own GVL server.</p> <ul> <li>All of the suggested tools for this protocol are installed and available. </li> </ul> </li> <li> <p>If you\u2019re happy and comfortable using the command line, you can do this with your own GVL Linux instance on the NeCTAR Research Cloud.</p> <ul> <li>Most of the suggested tools are available on the command line as environment modules.</li> <li>Enter <code>module avail</code> at a command prompt on your instance for details.</li> </ul> </li> </ul> <p>You can also use your own computing resources.</p>"},{"location":"tutorials/assembly/assembly-protocol/#section-1-read-quality-control","title":"Section 1: Read Quality Control","text":""},{"location":"tutorials/assembly/assembly-protocol/#purpose","title":"Purpose:","text":"<p>The purpose of this section of the protocol is to show you how to understand your raw data, make informed decisions on how to handle it and maximise your chances of getting a good quality assembly. Knowledge of the read types, the number of reads, their GC content, possible contamination and other issues are important. This information will give you an idea of any quality issues with the data and guide you on the choice of data trimming/cleanup methods to use. Cleaning up the raw data before assembly can lead to much better assemblies as contamination and low quality error prone reads will have been removed. It will also give you a better guide as to setting appropriate input parameters for the assembly software. It is a good idea to perform these steps on all of your read files as they could have very different qualities.</p>"},{"location":"tutorials/assembly/assembly-protocol/#steps-involved-and-suggested-tools","title":"Steps involved and suggested tools:","text":""},{"location":"tutorials/assembly/assembly-protocol/#examine-the-quality-of-your-raw-read-files","title":"Examine the quality of your raw read files.","text":"<p>For FastQ files (the most common), the suggested tool is FastQC. Details can be found here. FastQC can be run from within Galaxy or by command line. (It has a GUI interface for the command line version.)</p> <p>FastQC on any GVL Galaxy is located in: NGS: QC and Manipulation \u2192 FastQC: Comprehensive QC</p> <p>Command line: <code>fastqc</code></p> <ul> <li>Details on installation and use can be found here.</li> </ul> <p>Some of the important outputs of FastQC for our purposes are:</p> <ul> <li>Read length - Will be important in setting maximum k-mer size value for assembly</li> <li>Quality encoding type - Important for quality trimming software</li> <li>% GC - High GC organisms don\u2019t tend to assemble well and may have an uneven read coverage distribution.</li> <li>Total number of reads - Gives you an idea of coverage..</li> <li>Dips in quality near the beginning, middle or end of the reads - Determines possible trimming/cleanup methods and parameters and may indicate technical problems with the sequencing process/machine run.</li> <li>Presence of highly recurring k-mers - May point to contamination of reads with barcodes, adapter sequences etc.</li> <li>Presence of large numbers of N\u2019s in reads - May point to poor quality sequencing run. You need to trim these reads to remove N\u2019s.</li> </ul>"},{"location":"tutorials/assembly/assembly-protocol/#quality-trimmingcleanup-of-read-files","title":"Quality trimming/cleanup of read files.","text":"<p>Now that you have some knowledge about the raw data, it is important to use this information to clean up and trim the reads to improve its overall quality before assembly. There are a number of tools available in Galaxy and by command line that can perform this step (to varying degrees) but you\u2019ll need one that can handle read pairing if you\u2019ve got paired end reads. If one of the ends of a pair is removed, the orphaned read needs to be put into a separate \u201corphaned reads\u201d file. This maintains the paired ordering of the reads in the paired read files so the assembly software can use them correctly. The suggested tool for this is a pair aware read trimmer called Trimmomatic. Details on Trimmomatic can be found here.</p> <p>Trimmomatic on GVL systems: NGS: QC and Manipulation -&gt; Trimmomatic</p> <p>Command line: details and examples here.</p> <ul> <li><code>java -cp &lt;path to trimmomatic jar&gt; org.usadellab.trimmomatic.TrimmomaticPE</code> for Paired End Files</li> <li><code>java -cp &lt;path to trimmomatic jar&gt; org.usadellab.trimmomatic.TrimmomaticSE</code> for Single End Files</li> </ul> <p>Trimmomatic can perform many read trimming functions sequentially.</p> <p>Suggested Trimmomatic functions to use:</p> <ul> <li>Adapter trimming<ul> <li>This function trims adapters, barcodes and other contaminants from the reads.</li> <li>You need to supply a fasta file of possible adapter sequences, barcodes etc to trim. See Trimmomatic website for detailed instructions.</li> <li>The default quality settings are sensible.</li> <li>This should always be the first trimming step if it is used.</li> </ul> </li> <li>Sliding window trimming<ul> <li>This function uses a sliding window to measure average quality and trims accordingly.</li> <li>The default quality parameters are sensible for this step.</li> </ul> </li> <li>Trailing bases quality trimming<ul> <li>This function trims bases from the end of a read if they drop below a quality threshold. e.g. If base 69 of 75 drops below the threshold, the read is cut to 68 bases.</li> <li>Use FastQC report to decide whether this step is warranted and what quality value to use. A quality threshold value of 10-15 is a good starting point.</li> </ul> </li> <li>Leading bases quality trimming<ul> <li>This function works in a similar fashion to trailing bases trimming except it performs it at the start of the reads.</li> <li>Use FastQC report to determine if this step is warranted. If the quality of bases is poor at the beginning of reads it might be necessary.</li> </ul> </li> <li>Minimum read length<ul> <li>Once all trimming steps are complete, this function makes sure that the reads are still longer than this value. If not, the read is removed from the file and its pair is put into the orphan file.</li> <li>The most appropriate value for this parameter will depend on the FastQC report, specifically the length of the high quality section of the Per Base Sequence Quality graph.</li> </ul> </li> </ul> <p>Things to look for in the output:</p> <ul> <li>Number of reads orphaned by the trimming / cleanup process.</li> <li>Number of pairs lost totally.</li> </ul> <p>Trimmomatic should produce 2 pairs files (1 left and 1 right hand end) and 1 or 2 single \u201corphaned reads\u201d files if you trimmed a pair of read files using paired end mode. It only produces 1 output read file if you used it in single ended mode. Each read library (2 paired files or 1 single ended file) should be trimmed separately with parameters dependent on their own FastQC reports. The output files are the ones you should use for assembly.</p>"},{"location":"tutorials/assembly/assembly-protocol/#possible-alternate-tools","title":"Possible alternate tools:","text":"<p>Read quality trimming: nesoni clip, part of the nesoni suite of bioinformatics tools. Available at http://www.bioinformatics.net.au/software.shtml</p>"},{"location":"tutorials/assembly/assembly-protocol/#section-2-assembly","title":"Section 2: Assembly","text":""},{"location":"tutorials/assembly/assembly-protocol/#purpose_1","title":"Purpose:","text":"<p>The purpose of this section of the protocol is to outline the process of assembling the quality trimmed reads into draft contigs. Most assembly software has a number of input parameters which need to be set prior to running. These parameters can and do have a large effect on the outcome of any assembly. Assemblies can be produced which have less gaps, less or no mis-assemblies, less errors by tweaking the input parameters. Therefore, knowledge of the parameters and their effects is essential to getting good assemblies. In most cases an optimum set of parameters for your data can be found using an iterative method.</p> <p>You shouldn\u2019t just run it once and say, \u201cI\u2019ve assembled!\u201d</p>"},{"location":"tutorials/assembly/assembly-protocol/#steps-involved-and-suggested-tools_1","title":"Steps involved and suggested tools:","text":""},{"location":"tutorials/assembly/assembly-protocol/#assembly-of-the-reads","title":"Assembly of the reads.","text":"<p>The suggested assembly software for this protocol is the Velvet Optimiser which wraps the Velvet Assembler. The Velvet assembler is a short read assembler specifically written for Illumina style reads. It uses the de Bruijn graph approach (see here for details).</p> <p>Velvet and therefore the Velvet Optimiser is capable of taking multiple read files in different formats and types (single ended, paired end, mate pair) simultaneously.</p> <p>The quality of contigs that Velvet outputs is dependent heavily on its parameter settings, and significantly better assemblies can be had by choosing them appropriately. The three most critical parameters to optimize are the hash size (k), the expected coverage (e), and the coverage cutoff \u00a9.</p> <p>Velvet Optimiser is a Velvet wrapper that optimises the values for the input parameters in a fast, easy to use and automatic manner for all datasets. It can be run from within GVL Galaxy servers or by command line.</p> <p>In Galaxy: NGS-Assembly \u2192 Velvet Optimiser</p> <p>Command line: details and examples here.</p> <ul> <li>Example command line for paired end reads in read files reads_R1.fq and reads_R2.fq using a kmer-size search range of 63 - 75.</li> <li><code>VelvetOptimiser.pl -f \"-shortPaired -fastq -separate reads_R1.fq reads_R2.fq\" -s 63 -e 75 -d output_directory</code></li> </ul> <p>The critical inputs for Velvet Optimiser are the read files and the k-mer size search range. The read files need to be supplied in a specific order. Single ended reads first, then by increasing paired end insert size. The k-mer size search range needs a start and end value. Each needs to be an odd integer with start &lt; end. If you set the start hash size to be higher than the length of any of the reads in the read files then those reads will be left out of the assembly. i.e. reads of length 36 with a starting hash value of 39 will give no assembly. The output from FastQC can be a very good tool for determining appropriate start and end of the k-mer size search range. The per base sequence quality graph from FastQC shows where the quality of the reads starts to drop off and going just a bit higher can be a good end value for the k-mer size search range.</p>"},{"location":"tutorials/assembly/assembly-protocol/#examine-the-draft-contigs-and-assessment-of-the-assembly-quality","title":"Examine the draft contigs and assessment of the assembly quality.","text":"<p>The Velvet Optimiser log file contains information about all of the assemblies ran in the optimisation process. At the end of this file is a lot of information regarding the final assembly. This includes some metric data about the draft contigs (n50, maximum length, number of contigs etc) as well as the estimates of the insert lengths for each paired end data set. It also contains information on where to find the final contigs.fa file.</p> <p>The assembly parameters used in the final assembly can also be found as part of the last entry in the log file.</p> <p>The contig_stats.txt file associated with the assembly shows details regarding the coverage depth of each contig (in k-mer coverage terms NOT read coverage) and this can be useful information for finding repeated contigs etc.</p> <p>More detailed metrics on the contigs can be gotten using a fasta statistics tool such as fasta-stats on Galaxy. (Fasta Manipulation \u2192 Fasta Statistics).</p>"},{"location":"tutorials/assembly/assembly-protocol/#possible-alternative-software","title":"Possible alternative software:","text":"<p>Assembly: There are a large number of short read assemblers available. Each with their own strengths and weaknesses. Some of the available assemblers include:</p> <ul> <li>Spades</li> <li>SOAP-denovo</li> <li>MIRA</li> <li>ALLPATHS</li> </ul> <p>See here for a comprehensive list of - and links to - short read assembly programs.</p>"},{"location":"tutorials/assembly/assembly-protocol/#section-3-what-next","title":"Section 3: What next?","text":""},{"location":"tutorials/assembly/assembly-protocol/#purpose_2","title":"Purpose:","text":"<p>Help determine the suitability of a draft set of contigs for the rest of your analysis and what to do with them now.</p> <p>Some things to remember about the contigs you have just produced:</p> <ul> <li>They\u2019re draft contigs.</li> <li>They may contain some gaps or regions of \u201cN\u201ds.</li> <li>There may be some mis-assemblies.</li> </ul> <p>What happens with your contigs next is determined by what you need them for:</p> <ul> <li>You only want to look at certain loci or genes in your genome<ul> <li>Check and see if the regions of interest have been assembled in their entirety.</li> <li>If they have then just use the contigs of interest.</li> <li>If they haven\u2019t, you may need to close gaps or join contigs in these areas. See below for suggestions.</li> <li>Performing an automatic annotation on your draft contigs can help with this.</li> </ul> </li> <li>You want to perform comparative genomics analyses with your contigs<ul> <li>Do your contigs cover all of the regions you are interested in?</li> <li>Some of the larger repeated elements (such as the ribosomal RNA loci) may not have all been resolved correctly. Do you care about this? If so then you\u2019ll need to finish these areas to distinguish between the repeats.</li> <li>Do your contigs show a missing section of the reference genome(s) or a novel section? You may want to check that this is actually the case with some further experiments or by delving deeper into the assembly data. Some tool suggestions for this appear below.</li> </ul> </li> <li>You want to \u201cfinish\u201d the genome and publish it in genbank.<ul> <li>Can your assembly be improved with more and/or different read data?</li> <li>Can you use other tools to improve your assembly with your current read data?</li> </ul> </li> </ul>"},{"location":"tutorials/assembly/assembly-protocol/#possible-tools-for-improving-your-assemblies","title":"Possible tools for improving your assemblies:","text":"<p>Most of these tools are open source and freely available (or at least academically available) but some are commercial software. This is by no means an exhaustive list. No warranties/suitability for purpose supplied or implied!</p> <p>Mis-assembly checking and assembly metric tools:</p> <ul> <li>QUAST - Quality assessment tool for genome assembly http://bioinf.spbau.ru/quast</li> <li>Mauve assembly metrics - http://code.google.com/p/ngopt/wiki/How_To_Score_Genome_Assemblies_with_Mauve</li> <li>InGAP-SV - https://sites.google.com/site/nextgengenomics/ingap and http://ingap.sourceforge.net/<ul> <li>inGAP is also useful for finding structural variants between genomes from read mappings.</li> </ul> </li> </ul> <p>Genome finishing tools:</p> <p>Semi-automated gap fillers:</p> <ul> <li>Gap filler - http://www.baseclear.com/landingpages/basetools-a-wide-range-of-bioinformatics-solutions/gapfiller/</li> <li>IMAGE (V2) - http://sourceforge.net/apps/mediawiki/image2/index.php?title=Main_Page</li> </ul> <p>Genome visualisers and editors</p> <ul> <li>Artemis - http://www.sanger.ac.uk/resources/software/artemis/</li> <li>IGV - http://www.broadinstitute.org/igv/</li> <li>Geneious - http://www.geneious.com/</li> <li>CLC BioWorkbench - http://www.clcbio.com/products/clc-genomics-workbench/</li> </ul> <p>Automated and semi automated annotation tools</p> <ul> <li>Prokka - https://github.com/tseemann/prokka</li> <li>RAST - http://www.nmpdr.org/FIG/wiki/view.cgi/FIG/RapidAnnotationServer</li> <li>JCVI Annotation Service - http://www.jcvi.org/cms/research/projects/annotation-service/</li> </ul>"},{"location":"tutorials/assembly/assembly/","title":"de novo assembly of Illumina reads using Velvet (Galaxy)","text":""},{"location":"tutorials/assembly/assembly/#microbial-de-novo-assembly-for-illumina-data","title":"Microbial de novo Assembly for Illumina Data","text":""},{"location":"tutorials/assembly/assembly/#introductory-tutorial","title":"Introductory Tutorial","text":"<p>Written and maintained by Simon Gladman - Melbourne Bioinformatics (formerly VLSCI)</p>"},{"location":"tutorials/assembly/assembly/#tutorial-overview","title":"Tutorial Overview","text":"<p>In this tutorial we cover the concepts of Microbial de novo assembly using a very small synthetic dataset from a well studied organism.</p> <p>What\u2019s not covered</p> <p>This tutorial covers the basic aspects of microbial de novo assembly from Illumina paired end or single end reads. It does not cover more complicated aspects of assembly such as:</p> <ul> <li>Incorporation of other raw data types (454 reads, Sanger reads)</li> <li>Gap filling techniques for \u201cfinishing\u201d an assembly</li> <li>Measuring the accuracy of assemblies</li> </ul>"},{"location":"tutorials/assembly/assembly/#background","title":"Background","text":"<p>Read the background to the workshop here</p> <p>Where is the data in this tutorial from?</p> <p>The data for this tutorial is from a whole genome sequencing experiment of a multi-drug resistant strain of the bacterium Staphylococcus aureus. The DNA was sequenced using an Illumina GAII sequencing machine. The data we are going to use consists of about 4 million x 75 base-pair, paired end reads (two FASTQ read files, one for each end of a DNA fragment.) The data was downloaded from the NCBI Short Read Archive (SRA) (http://www.ncbi.nlm.nih.gov/sra/). The specific sample is a public dataset published in April 2012 with SRA accession number ERR048396.</p> <p>We will also use a FASTA file containing the sequences of the Illumina adapters used in the sequencing process. It is desirable to remove these as they are artificial sequences and not part of the bacterium that was sequenced.</p> <p>We will use software called Velvet (Zerbino et al 2008) for the main de novo assembly, as well as some other peripheral software for pre- and post-processing of the data. Details of these can be found in the background document linked above.</p> <p>The protocol:</p> <p>We are performing a de novo assembly of the read data into contigs and then into scaffolds (appropriately positioned contigs loosely linked together). We firstly need to check the quality of the input data as this will help us choose the most appropriate range of input parameters for the assembly and will guide us on an appropriate quality trimming/cleanup strategy. We will then use an iterative method to assemble the reads using the Velvet Optimiser (a program that performs lots of Velvet assemblies searching for an optimum outcome.) Once this is complete we will obtain summary statistics on the final results (contigs) of the assembly.</p> <p>Follow this link for an overview of the protocol</p> <p>The protocol in a nutshell:</p> <p>Input: Raw reads from sequencer run on microbial DNA sample.</p> <p>Output: File of assembled scaffolds/contigs and associated information.</p>"},{"location":"tutorials/assembly/assembly/#preparation","title":"Preparation","text":""},{"location":"tutorials/assembly/assembly/#login-to-galaxy","title":"Login to Galaxy","text":"<ol> <li>Open a browser and go to a Galaxy server. (what is Galaxy?)<ul> <li>You can use a galaxy server of your own or</li> <li>Galaxy Tute at genome.edu.au</li> </ul> </li> <li>Register as a new user if you don\u2019t already have an account on that particular server</li> </ol> <p>   NOTE: Firefox/Safari/Chrome all work well, Internet Explorer not so well.</p>"},{"location":"tutorials/assembly/assembly/#import-the-dna-read-data-for-the-tutorial","title":"Import the DNA read data for the tutorial.","text":"<p>You can do this in a few ways. If you\u2019re using galaxy-tut.genome.edu.au:</p> <ol> <li>Go to Shared Data -&gt; Published Histories and click on \u201cMicrobial_assembly_input_data\u201d. Then click \u2018Import History\u2019 at top right, wait for the history to be imported to your account, and then \u2018start using this history\u2019.</li> <li>This will create a new Galaxy history in your account with all of the required data files.</li> <li>Proceed to step 4.</li> </ol> <p>If you are using a different Galaxy server, you can upload the data directly to Galaxy using the file URLs.</p> <ol> <li>On the Galaxy tools panel, click on Get data -&gt; Upload File.</li> <li>Click on the Paste/Fetch Data button.</li> <li>Paste the URL: https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Assembly/ERR048396_1.fastq.gz into the text box. Change the type to fastqsanger (Not fastqcsanger).</li> <li>Click on the Paste/Fetch Data button again.</li> <li>Paste the URL: https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Assembly/ERR048396_2.fastq.gz into the text box and change it\u2019s type to fastqsanger as well.</li> <li>Repeat the process for the last URL: https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/Assembly/illumina_adapters.fna , but make it\u2019s type fasta</li> <li>Click on the Start button. Once all of the uploads are at 100%, click on the Close button.</li> <li>When the files have finished uploading, rename them to \u2018ERR048396_1.fastq\u2019, \u2018ERR048396_2.fastq\u2019 and \u2018illumina_adapters.fna\u2019 respectively by clicking on the  icon to the top right of the file name in the right hand Galaxy panel (the history panel)</li> </ol> <p>You should now have the following files in your Galaxy history:</p> <ul> <li>ERR048396_1.fastq - forward reads in fastq format</li> <li>ERR048396_2.fastq - reverse reads in fastq format</li> <li>illumina_adapters.fa - Illumina adapter sequences in fasta format</li> </ul>"},{"location":"tutorials/assembly/assembly/#view-the-fastq-files","title":"View the fastq files","text":"<p>Click on the   icon to the top right of each fastq file to view the first part of the file If you\u2019re not familiar with the FASTQ format, click here for an overview</p> <p>NOTE: If you log out of Galaxy and log back in at a later time your data and results from previous experiments will be available in the right panel of your screen called the \u2018History.\u2019</p>"},{"location":"tutorials/assembly/assembly/#section-1-quality-control","title":"Section 1: Quality control","text":"<p>The basic process here is to collect statistics about the quality of the reads in the sample FASTQ readsets. We will then evaluate their quality and choose an appropriate regime for quality filtering using Trimmomatic (a fastq read quality trimmer.)</p> <p>More detailed description of FastQC quality analysis can be found here.</p> <p>More detailed description of Trimmomatic read quality filtering can be found here.</p>"},{"location":"tutorials/assembly/assembly/#run-fastqc-on-both-input-read-files","title":"Run FastQC on both input read files","text":"<ol> <li>From the tools menu in the left hand panel of Galaxy, select NGS QC and manipulation &gt; FastQC: Comprehensive QC (down the bottom of this category) and run with these parameters:<ul> <li>\u201cFASTQ reads\u201d: ERR048396_1.fastq</li> <li>Use default for other fields</li> </ul> </li> <li>Click Execute</li> <li>Now repeat the above process on the second read file: ERR048396_2.fastq</li> </ol> <p> Note: This may take a few minutes, depending on how busy Galaxy is.</p> <p>It is important to do both read files as the quality can be very different between them.</p>"},{"location":"tutorials/assembly/assembly/#figure-1-screenshot-of-fastqc-interface-in-galaxy","title":"Figure 1: Screenshot of FastQC interface in Galaxy","text":""},{"location":"tutorials/assembly/assembly/#examine-the-fastqc-output","title":"Examine the FastQC output","text":"<p>You should have two output objects from the first step:</p> <ul> <li>FastQC_ERR048396_1.fastqc.html</li> <li>FastQC_ERR048396_2.fastqc.html</li> </ul> <p>These are a html outputs which show the results of all of the tests FastQC performed on the read files.</p> <ol> <li>Click on the  icon of each of these objects in turn to see the FastQC output.</li> </ol> <p>The main parts of the output to evaluate are:</p> <ul> <li>Basic statistics. This section tells us that the ASCII quality encoding format used was Sanger/Illumina 1.9 and the reads are length 75 and the percent GC content of the entire file is 35%.</li> <li>Per base sequence quality. In the plot you should see that most of the early bases are up around the \u201832\u2019 mark and then increase to 38-40, which is very high quality; The spread of quality values for the last few bases increases and some of the outliers have quality scores of less than 30. This is a very good quality dataset. 20 is often used as a cutoff for reliable quality.</li> </ul>"},{"location":"tutorials/assembly/assembly/#figure-2-screenshot-of-fastqc-output-in-galaxy","title":"Figure 2: Screenshot of FastQC output in Galaxy","text":""},{"location":"tutorials/assembly/assembly/#quality-trim-the-reads-using-trimmomatic","title":"Quality trim the reads using Trimmomatic.","text":"<ol> <li> <p>From the tools menu in the left hand panel of Galaxy, select NGS QC and manipulation &gt; Trimmomatic and run with these parameters (only the non-default selections are listed here):</p> <ul> <li>\u201cInput FASTQ file (R1/first of pair)\u201d: ERR048396_1.fastq</li> <li>\u201cInput FASTQ file (R2/second of pair)\u201d: ERR048396_2.fastq</li> <li>\u201cPerform initial ILLUMINACLIP step?\u201d: Yes</li> <li>\u201cAdapter sequences to use\u201d: TruSeq3 (additional seqs) (paired end, for MiSeq and HiSeq)</li> <li>\u201cHow accurate \u2026 read alignment\u201d: 40</li> <li>\u201cHow accurate \u2026 against a read\u201d: 15</li> <li>We will use the default settings for the SLIDING_WINDOW operation but we need to add a few more Trimmomatic operations.</li> <li>Click Insert Trimmomatic Operation<ul> <li>Add Cut bases \u2026 (LEADING)</li> <li>\u201cMinimum quality required to keep a base\u201d: 15</li> </ul> </li> <li>Repeat the Insert Trimmomatic Operation for:<ul> <li>Trim trailing bases, minimum quality: 15</li> <li>Minimum length read: 35</li> </ul> </li> </ul> </li> <li> <p>Click Execute </p> </li> </ol>"},{"location":"tutorials/assembly/assembly/#figure-3-screenshot-of-trimmomatic-inputs-in-galaxy","title":"Figure 3: Screenshot of Trimmomatic inputs in Galaxy","text":""},{"location":"tutorials/assembly/assembly/#examine-the-trimmomatic-output-fastq-files","title":"Examine the Trimmomatic output FastQ files.","text":"<p>You should have 4 new objects in your history from the output of Trimmomatic:</p> <ul> <li>Trimmomatic on data 2 and data 1 (R1 Paired)</li> <li>Trimmomatic on data 2 and data 1 (R1 Unpaired)</li> <li>Trimmomatic on data 2 and data 1 (R2 Paired)</li> <li>Trimmomatic on data 2 and data 1 (R2 Unpaired)</li> </ul> <p>Click on the  on one of the objects to look at its contents. You\u2019ll notice that not all of the reads are the same length now, as they have had the illumina adapters cut out of them and they\u2019ve been quality trimmed.</p>"},{"location":"tutorials/assembly/assembly/#section-2-assemble-reads-into-contigs-with-velvet-and-the-velvet-optimiser","title":"Section 2: Assemble reads into contigs with Velvet and the Velvet Optimiser","text":"<p>The aim here is to assemble the trimmed reads into contigs/scaffolds using Velvet and the Velvet Optimiser.</p> <p>We will use a single tool, Velvet Optimiser, which takes the trimmed reads from Trimmomatic and performs numerous Velvet assemblies to find the best one. We need to add the reads in two separate libraries. One for the still paired reads and the other for the singleton reads orphaned from their pairs by the trimming process.</p> <p>Click here for a more detailed explanation of Velvet assemblies and the Velvet Optimiser</p>"},{"location":"tutorials/assembly/assembly/#de-novo-assembly-of-the-reads-into-contigs","title":"De novo assembly of the reads into contigs","text":"<ol> <li>From the tools menu in the left hand panel of Galaxy, select NGS: Assembly -&gt; Velvet Optimiser and run with these parameters (only the non-default selections are listed here):<ul> <li>\u201cStart k-mer value\u201d: 55</li> <li>\u201cEnd k-mer value\u201d: 69</li> <li>In the input files section:<ul> <li>\u201cSelect first set of reads\u201d: Trimmomatic on data 2 and data 1 (R1 paired)</li> <li>\u201cSelect second set of reads\u201d: Trimmomatic on data 2 and data 1 (R2 paired)</li> </ul> </li> <li>Click the Insert Input Files button and add the following:<ul> <li>\u201cSingle or paired end reads\u201d: Single</li> <li>\u201cSelect the reads\u201d: Trimmomatic on data 2 and data 1 (R1 unpaired)</li> </ul> </li> <li>Repeat the above process to add the other unpaired read set Trimmomatic on data 2 and data 1 (R2 unpaired) as well.</li> </ul> </li> <li>Click Execute.</li> </ol>"},{"location":"tutorials/assembly/assembly/#figure-4-screenshot-of-velvet-optimiser-inputs-in-galaxy","title":"Figure 4: Screenshot of Velvet Optimiser inputs in Galaxy","text":""},{"location":"tutorials/assembly/assembly/#examine-assembly-output","title":"Examine assembly output","text":"<p>Once step 1 is complete, you should now have 2 new objects in your history: * VelvetOptimiser on data 9, data 7, and others: Contigs * VelvetOptimiser on data 9, data 7, and others: Contig Stats</p> <p>Click on the  icon of the various objects.</p> <ul> <li> <p>Contigs: You\u2019ll see the first MB of the file. Note that the contigs are named NODE_XX_length_XXXX_cov_XXX.XXX. This information tells you how long (in k-mer length) each contig is and what it\u2019s average k-mer coverage is. (See detailed explanation of Velvet and Velvet Optimiser for explanation of k-mer coverage and k-mer length.)</p> </li> <li> <p>Contig stats: This shows a table of the contigs and their k-mer coverages and which read library contributed to the coverage. It is interesting to note that some of them have much higher coverage than the average. These are most likely to be repeated contigs. (Things like ribosomal RNA and IS elements.)</p> </li> </ul>"},{"location":"tutorials/assembly/assembly/#figure-5-screenshot-of-assembled-contigs-a-and-contig-stats-b","title":"Figure 5: Screenshot of assembled contigs (a) and contig stats (b)","text":""},{"location":"tutorials/assembly/assembly/#a","title":"a","text":""},{"location":"tutorials/assembly/assembly/#b","title":"b","text":""},{"location":"tutorials/assembly/assembly/#calculate-some-statistics-on-the-assembled-contigs","title":"Calculate some statistics on the assembled contigs","text":"<ol> <li>From the tools menu in the left hand panel of Galaxy, select FASTA Manipulation -&gt; Fasta Statistics and run with these parameters:<ul> <li>\u201cFasta or multifasta file\u201d: Velvet Optimiser \u2026 Contigs</li> </ul> </li> <li>Click Execute</li> <li>Examine the Fasta Stats output</li> </ol> <p>You should now have one more object in your history: Fasta Statistics on data 10: Fasta summary stats</p> <p>Click on the  icon next to this object and have a look at the output. You\u2019ll see a statistical summary of the contigs including various length stats, the % GC content, the n50 as well as the number of contigs and the number of N bases contained in them.</p>"},{"location":"tutorials/assembly/assembly/#section-3-extension","title":"Section 3: Extension.","text":"<p>Examine the contig coverage depth and blast a high coverage contig against a protein database.</p>"},{"location":"tutorials/assembly/assembly/#examine-the-contig-coverage-depth","title":"Examine the contig coverage depth.","text":"<p>Look at the Contig Stats data (Velvet Optimiser vlsci on data 8, data 9, and data 7: Contig stats) by clicking on the  icon. Note that column 2 contig length (lgth), shows a number of very short contigs (some are length 1).</p> <ul> <li>We can easily filter out these short contigs from this information list by using the Filter and Sort -&gt; Filter tool.</li> <li>Set the following:<ul> <li>\u201cFilter\u201d: Velvet Optimiser on data 8, data 7 and others: Contig stats</li> <li>\u201cWith the following condition\u201d: c2 &gt; 100</li> </ul> </li> <li>Click Execute</li> </ul> <p>The new data object in the history is called: Filter on data 11.</p> <p>Click on its  icon to view it. Look through the list taking note of the coverages. Note that the average of the coverages (column 6) seems to be somewhere between 16 and 32.  There are a lot of contigs with coverage 16. We could say that these contigs only appear once in the genome of the bacteria. Therefore, contigs with double this coverage would appear twice. Note that some of the coverages are &gt;400! These contigs will appear in the genome more than 20 times!</p> <p>Lets have a look at one of these contigs and see if we can find out what it is.</p>"},{"location":"tutorials/assembly/assembly/#extract-a-single-sequence-from-the-contigs-file","title":"Extract a single sequence from the contigs file.","text":"<p>Note the contig number (column 1 in the Contig stats file) of a contig with a coverage of over 300. There should be a few of them. We need to extract the fasta sequence of this contig from the contigs multifasta so we can see it more easily.</p> <p>To do this we will use the tool:</p> <ul> <li>Fasta manipulation -&gt; Fasta Extract Sequence</li> <li>Set the following:<ul> <li>\u201cFasta or multifasta file\u201d: Velvet Optimiser \u2026 : Contigs</li> <li>\u201cSequence ID (or partial): NODE_1_\u2026 (for example)</li> </ul> </li> <li>Click Execute</li> </ul> <p>The new data object in the history is called: Fasta Extract Sequence on data 10: Fasta.</p> <p>Click on its  icon to view it. It is a single sequence in fasta format.</p>"},{"location":"tutorials/assembly/assembly/#blast-sequence-to-determine-what-it-contains","title":"Blast sequence to determine what it contains.","text":"<p>We want to find out what this contig is or what kind of coding sequence (if any) it contains. So we will blast the sequence using the NCBI blast website. (External to Galaxy). To do this:</p> <ul> <li>Bring up the sequence of the contig into the main window of the browser by clicking on the  icon if it isn\u2019t already.</li> <li>Select the entire sequence by clicking and dragging with the mouse or by pressing ctrl-a in the browser.</li> <li>Copy the selected sequence to the clipboard.</li> <li>Open a new tab of your browser and point it to: http://blast.ncbi.nlm.nih.gov/Blast.cgi</li> <li>Under the BASIC BLAST section, click \u201cblastx\u201d.</li> <li>Paste the sequence into the large text box labelled: Enter Accession number(s), gi(s) or FASTA sequence(s).</li> <li>Change the Genetic code to: Bacteria and Archaea (11)</li> <li>Click the button labelled: BLAST</li> </ul> <p>After a while the website will present a report of the blast run. Note that the sequence we blasted (if you chose NODE_1) is identical to part of a transposase gene (IS256) from a similar Staphylococcus aureus bacteria. These transposases occur frequently as repeats in bacterial genomes and so we shouldn\u2019t be surprised at its very high coverage.</p>"},{"location":"tutorials/assembly/assembly/#figure-6-screenshot-of-the-output-from-the-ncbi-blast-website","title":"Figure 6: Screenshot of the output from the NCBI Blast website","text":""},{"location":"tutorials/assembly/spades/","title":"Assembly using Spades","text":""},{"location":"tutorials/assembly/spades/#background","title":"Background","text":"<p>Spades is one of a number of de novo assemblers that use short read sets as input (e.g. Illumina Reads), and the assembly method is based on de Bruijn graphs. For information about Spades see this link.</p>"},{"location":"tutorials/assembly/spades/#learning-objectives","title":"Learning objectives","text":"<p>At the end of this tutorial you should be able to:</p> <ol> <li>assemble the reads using Spades, and</li> <li>examine the output assembly.</li> </ol>"},{"location":"tutorials/assembly/spades/#import-and-view-data","title":"Import and view data","text":""},{"location":"tutorials/assembly/spades/#galaxy","title":"Galaxy","text":"<p>If you are using Galaxy-Mel or Galaxy-Qld, import the files:</p> <ul> <li>In your browser, go to Galaxy-Mel or Galaxy-Qld </li> <li>In the top Galaxy panel, go to User and log in (or register, and then log in)</li> <li>In the top Galaxy panel, go to Shared Data and click on the drop down arrow</li> <li>Click on Histories <li>Click on Genomics-workshop and then (over in the top right) Import history</li> <li>The files will now be listed in the right hand panel (your current history).</li> <p>(Alternatively, see here for information about how to start with Galaxy, and here for the link to import the Galaxy history for this tutorial, if you don\u2019t already have them in your history.)</p>"},{"location":"tutorials/assembly/spades/#the-data","title":"The data","text":"<p>The read set for today is from an imaginary Staphylococcus aureus bacterium with a miniature genome.</p> <ul> <li> <p>The whole genome shotgun method used to sequence our mutant strain read set was produced on an Illumina DNA sequencing instrument.</p> </li> <li> <p>The files we need for assembly are the mutant_R1.fastq and mutant_R2.fastq.</p> </li> <li> <p>(We don\u2019t need the reference genome sequences for this tutorial).</p> </li> <li> <p>The reads are paired-end.</p> </li> <li> <p>Each read is 150 bases long. </p> </li> <li> <p>The number of bases sequenced is equivalent to 19x the genome sequence of the wildtype strain. (Read coverage 19x - rather low!).</p> </li> </ul> <ul> <li>Click on the View Data button (the ) next to one of the FASTQ sequence files.</li> </ul>"},{"location":"tutorials/assembly/spades/#assemble-reads-with-spades","title":"Assemble reads with Spades","text":"<ul> <li> <p>We will perform a de novo assembly of the mutant FASTQ reads into long contiguous sequences (in FASTA format.)</p> </li> <li> <p>Go to Tools \u2192 NGS Analysis \u2192 NGS: Assembly \u2192 spades</p> </li> <li> <p>Set the following parameters (leave other settings as they are):</p> <ul> <li>Run only Assembly: Yes [the Yes button should be darker grey]</li> <li>Kmers to use separated by commas: 33,55,91  [note: no spaces]  </li> <li>Coverage cutoff: auto </li> <li>Files \u2192 Forward reads: mutant_R1.fastq </li> <li>Files \u2192 Reverse reads: mutant_R2.fastq </li> </ul> </li> <li> <p>Your tool interface should look like this:</p> </li> </ul> <p></p> <ul> <li>Click Execute</li> </ul>"},{"location":"tutorials/assembly/spades/#examine-the-output","title":"Examine the output","text":"<ul> <li>Galaxy is now running Spades on the reads for you.</li> <li> <p>When it is finished, you will have five (or more) new files in your history, including:</p> <ul> <li>two FASTA files of the resulting contigs and scaffolds</li> <li>two files for statistics about these</li> <li>the Spades logfile</li> </ul> </li> </ul> <p></p> <ul> <li>Click on the View Data button  on each of the files.</li> <li>Note that the short reads have been assembled into much longer contigs.</li> <li>(However, in this case, the contigs have not been assembled into larger scaffolds.)</li> <li>The stats files will give you the length of each of the contigs, and the file should look something like this:</li> </ul> <p></p>"},{"location":"tutorials/bioinformatics-bench-scientists/bfb-intro/","title":"Templates","text":"<p>This contains templates for overall workshop layout, as well as specific examples of how to incorporate aspects such as code blocks, equations, questions and answers etc.</p>"},{"location":"tutorials/bioinformatics-bench-scientists/bfb-intro/bfb-intro/","title":"Bfb intro","text":""},{"location":"tutorials/bioinformatics-bench-scientists/bfb-intro/bfb-intro/#workshop-title","title":"Workshop title","text":"<p>Anticipated workshop duration when delivered to a group of participants is 2 hours.  </p> <p>For queries relating to this workshop, contact Melbourne Bioinformatics (bioinformatics-training@unimelb.edu.au).</p>"},{"location":"tutorials/bioinformatics-bench-scientists/bfb-intro/bfb-intro/#overview","title":"Overview","text":""},{"location":"tutorials/bioinformatics-bench-scientists/bfb-intro/bfb-intro/#topic","title":"Topic","text":"<ul> <li> Genomics</li> <li> Transcriptomics</li> <li> Proteomics</li> <li> Metabolomics</li> <li> Statistics and visualisation</li> <li> Structural Modelling</li> <li> Basic skills</li> </ul>"},{"location":"tutorials/bioinformatics-bench-scientists/bfb-intro/bfb-intro/#skill-level","title":"Skill level","text":"<ul> <li> Beginner  </li> <li> Intermediate  </li> <li> Advanced  </li> </ul> <p>This workshop is designed for participants with \u2026</p>"},{"location":"tutorials/bioinformatics-bench-scientists/bfb-intro/bfb-intro/#description","title":"Description","text":"<p>Punchline\u2026 Get the skills to advance your own research!</p> <p>This tutorial uses \u201cTool\u201d to implement a pipeline for analysis of data \u2026</p> <p>Data \u2026 Pipeline \u2026 Tools \u2026</p> <p>Section 1 covers one part and in Section 2 you will learn something additional.</p>"},{"location":"tutorials/bioinformatics-bench-scientists/bfb-intro/bfb-intro/#learning-objectives","title":"Learning Objectives","text":"<p>At the end of this introductory workshop, you will :</p> <ul> <li>Understand the \u2026</li> <li>Be familiar with \u2026</li> <li>Know how to \u2026</li> </ul>"},{"location":"tutorials/bioinformatics-bench-scientists/bfb-intro/bfb-intro/#requirements-and-preparation","title":"Requirements and preparation","text":"<p>Important</p> <p>Attendees are required to bring their own laptop computers. </p> <p>At least one week before the workshop, participants should install the software and data files below.  This should provide sufficient time for participants to liaise with their own IT support should they encounter any IT problems.  </p>"},{"location":"tutorials/bioinformatics-bench-scientists/bfb-intro/bfb-intro/#preparing-your-laptop-prior-to-starting-this-workshop","title":"Preparing your laptop prior to starting this workshop","text":"<ol> <li>Go to: https://www.</li> <li>Download and install the required software (free) on your laptop.</li> <li>Download and install the required data on your laptop.</li> <li>Check that the software and data are correctly installed by executing this test:  \u2026</li> </ol>"},{"location":"tutorials/bioinformatics-bench-scientists/bfb-intro/bfb-intro/#required-software","title":"Required Software","text":"<ul> <li>IGV</li> <li>Software x</li> </ul> <p>or</p> <ul> <li>No additional software needs to be installed for this workshop.</li> </ul>"},{"location":"tutorials/bioinformatics-bench-scientists/bfb-intro/bfb-intro/#required-data","title":"Required Data","text":"<ul> <li>Data file</li> </ul> <p>or</p> <ul> <li>No additional data needs to be downloaded for this workshop.</li> </ul>"},{"location":"tutorials/bioinformatics-bench-scientists/bfb-intro/bfb-intro/#author-information","title":"Author Information","text":"<p>Written by: Victoria Perreau Melbourne Bioinformatics, University of Melbourne</p> <p>Created/Reviewed: July 2019</p>"},{"location":"tutorials/bioinformatics-bench-scientists/bfb-intro/bfb-intro/#background","title":"Background","text":"<p>Little bit of history and context. Why is this important/useful\u2026</p>"},{"location":"tutorials/bioinformatics-bench-scientists/bfb-intro/bfb-intro/#section-1-title-of-section-1","title":"Section 1: Title of section 1","text":"<p>In this section you will \u2026</p> <p>Important</p> <p>Please look at the formatting template to see examples for formatting your documentation in line with Melbourne Bioinformatics training material e.g Questions and answers, code blocks, images etc. </p>"},{"location":"tutorials/bioinformatics-bench-scientists/bfb-intro/bfb-intro/#section-2-title-of-section-2","title":"Section 2: Title of section 2","text":"<p>In this section we will \u2026</p>"},{"location":"tutorials/bioinformatics-bench-scientists/bfb-intro/bfb-intro/#additional-reading","title":"Additional reading","text":"<p>Links to additional recommended reading and suggestions for related tutorials.</p>"},{"location":"tutorials/bioinformatics-bench-scientists/cell-type-expression/","title":"Templates","text":"<p>This contains templates for overall workshop layout, as well as specific examples of how to incorporate aspects such as code blocks, equations, questions and answers etc.</p>"},{"location":"tutorials/bioinformatics-bench-scientists/cell-type-expression/cell-type-expression/","title":"Cell type expression","text":""},{"location":"tutorials/bioinformatics-bench-scientists/cell-type-expression/cell-type-expression/#workshop-title","title":"Workshop title","text":"<p>Anticipated workshop duration when delivered to a group of participants is 2 hours.  </p> <p>For queries relating to this workshop, contact Melbourne Bioinformatics (bioinformatics-training@unimelb.edu.au).</p>"},{"location":"tutorials/bioinformatics-bench-scientists/cell-type-expression/cell-type-expression/#overview","title":"Overview","text":""},{"location":"tutorials/bioinformatics-bench-scientists/cell-type-expression/cell-type-expression/#topic","title":"Topic","text":"<ul> <li> Genomics</li> <li> Transcriptomics</li> <li> Proteomics</li> <li> Metabolomics</li> <li> Statistics and visualisation</li> <li> Structural Modelling</li> <li> Basic skills</li> </ul>"},{"location":"tutorials/bioinformatics-bench-scientists/cell-type-expression/cell-type-expression/#skill-level","title":"Skill level","text":"<ul> <li> Beginner  </li> <li> Intermediate  </li> <li> Advanced  </li> </ul> <p>This workshop is designed for participants with \u2026</p>"},{"location":"tutorials/bioinformatics-bench-scientists/cell-type-expression/cell-type-expression/#description","title":"Description","text":"<p>Punchline\u2026 Get the skills to advance your own research!</p> <p>This tutorial uses \u201cTool\u201d to implement a pipeline for analysis of data \u2026</p> <p>Data \u2026 Pipeline \u2026 Tools \u2026</p> <p>Section 1 covers one part and in Section 2 you will learn something additional.</p>"},{"location":"tutorials/bioinformatics-bench-scientists/cell-type-expression/cell-type-expression/#learning-objectives","title":"Learning Objectives","text":"<p>At the end of this introductory workshop, you will :</p> <ul> <li>Understand the \u2026</li> <li>Be familiar with \u2026</li> <li>Know how to \u2026</li> </ul>"},{"location":"tutorials/bioinformatics-bench-scientists/cell-type-expression/cell-type-expression/#requirements-and-preparation","title":"Requirements and preparation","text":"<p>Important</p> <p>Attendees are required to bring their own laptop computers. </p> <p>At least one week before the workshop, participants should install the software and data files below.  This should provide sufficient time for participants to liaise with their own IT support should they encounter any IT problems.  </p>"},{"location":"tutorials/bioinformatics-bench-scientists/cell-type-expression/cell-type-expression/#preparing-your-laptop-prior-to-starting-this-workshop","title":"Preparing your laptop prior to starting this workshop","text":"<ol> <li>Go to: https://www.</li> <li>Download and install the required software (free) on your laptop.</li> <li>Download and install the required data on your laptop.</li> <li>Check that the software and data are correctly installed by executing this test:  \u2026</li> </ol>"},{"location":"tutorials/bioinformatics-bench-scientists/cell-type-expression/cell-type-expression/#required-software","title":"Required Software","text":"<ul> <li>IGV</li> <li>Software x</li> </ul> <p>or</p> <ul> <li>No additional software needs to be installed for this workshop.</li> </ul>"},{"location":"tutorials/bioinformatics-bench-scientists/cell-type-expression/cell-type-expression/#required-data","title":"Required Data","text":"<ul> <li>Data file</li> </ul> <p>or</p> <ul> <li>No additional data needs to be downloaded for this workshop.</li> </ul>"},{"location":"tutorials/bioinformatics-bench-scientists/cell-type-expression/cell-type-expression/#author-information","title":"Author Information","text":"<p>Written by: Victoria Perreau Melbourne Bioinformatics, University of Melbourne</p> <p>Created/Reviewed: July 2019</p>"},{"location":"tutorials/bioinformatics-bench-scientists/cell-type-expression/cell-type-expression/#background","title":"Background","text":"<p>Little bit of history and context. Why is this important/useful\u2026</p>"},{"location":"tutorials/bioinformatics-bench-scientists/cell-type-expression/cell-type-expression/#section-1-title-of-section-1","title":"Section 1: Title of section 1","text":"<p>In this section you will \u2026</p> <p>Important</p> <p>Please look at the formatting template to see examples for formatting your documentation in line with Melbourne Bioinformatics training material e.g Questions and answers, code blocks, images etc. </p>"},{"location":"tutorials/bioinformatics-bench-scientists/cell-type-expression/cell-type-expression/#section-2-title-of-section-2","title":"Section 2: Title of section 2","text":"<p>In this section we will \u2026</p>"},{"location":"tutorials/bioinformatics-bench-scientists/cell-type-expression/cell-type-expression/#additional-reading","title":"Additional reading","text":"<p>Links to additional recommended reading and suggestions for related tutorials.</p>"},{"location":"tutorials/bioinformatics-bench-scientists/temporal-spatial-gene-expression/","title":"Templates","text":"<p>This contains templates for overall workshop layout, as well as specific examples of how to incorporate aspects such as code blocks, equations, questions and answers etc.</p>"},{"location":"tutorials/bioinformatics-bench-scientists/temporal-spatial-gene-expression/temporal-spatial-gene-expression/","title":"Temporal spatial gene expression","text":""},{"location":"tutorials/bioinformatics-bench-scientists/temporal-spatial-gene-expression/temporal-spatial-gene-expression/#workshop-title","title":"Workshop title","text":"<p>Anticipated workshop duration when delivered to a group of participants is 2 hours.  </p> <p>For queries relating to this workshop, contact Melbourne Bioinformatics (bioinformatics-training@unimelb.edu.au).</p>"},{"location":"tutorials/bioinformatics-bench-scientists/temporal-spatial-gene-expression/temporal-spatial-gene-expression/#overview","title":"Overview","text":""},{"location":"tutorials/bioinformatics-bench-scientists/temporal-spatial-gene-expression/temporal-spatial-gene-expression/#topic","title":"Topic","text":"<ul> <li> Genomics</li> <li> Transcriptomics</li> <li> Proteomics</li> <li> Metabolomics</li> <li> Statistics and visualisation</li> <li> Structural Modelling</li> <li> Basic skills</li> </ul>"},{"location":"tutorials/bioinformatics-bench-scientists/temporal-spatial-gene-expression/temporal-spatial-gene-expression/#skill-level","title":"Skill level","text":"<ul> <li> Beginner  </li> <li> Intermediate  </li> <li> Advanced  </li> </ul> <p>This workshop is designed for participants with \u2026</p>"},{"location":"tutorials/bioinformatics-bench-scientists/temporal-spatial-gene-expression/temporal-spatial-gene-expression/#description","title":"Description","text":"<p>Punchline\u2026 Get the skills to advance your own research!</p> <p>This tutorial uses \u201cTool\u201d to implement a pipeline for analysis of data \u2026</p> <p>Data \u2026 Pipeline \u2026 Tools \u2026</p> <p>Section 1 covers one part and in Section 2 you will learn something additional.</p>"},{"location":"tutorials/bioinformatics-bench-scientists/temporal-spatial-gene-expression/temporal-spatial-gene-expression/#learning-objectives","title":"Learning Objectives","text":"<p>At the end of this introductory workshop, you will :</p> <ul> <li>Understand the \u2026</li> <li>Be familiar with \u2026</li> <li>Know how to \u2026</li> </ul>"},{"location":"tutorials/bioinformatics-bench-scientists/temporal-spatial-gene-expression/temporal-spatial-gene-expression/#requirements-and-preparation","title":"Requirements and preparation","text":"<p>Important</p> <p>Attendees are required to bring their own laptop computers. </p> <p>At least one week before the workshop, participants should install the software and data files below.  This should provide sufficient time for participants to liaise with their own IT support should they encounter any IT problems.  </p>"},{"location":"tutorials/bioinformatics-bench-scientists/temporal-spatial-gene-expression/temporal-spatial-gene-expression/#preparing-your-laptop-prior-to-starting-this-workshop","title":"Preparing your laptop prior to starting this workshop","text":"<ol> <li>Go to: https://www.</li> <li>Download and install the required software (free) on your laptop.</li> <li>Download and install the required data on your laptop.</li> <li>Check that the software and data are correctly installed by executing this test:  \u2026</li> </ol>"},{"location":"tutorials/bioinformatics-bench-scientists/temporal-spatial-gene-expression/temporal-spatial-gene-expression/#required-software","title":"Required Software","text":"<ul> <li>IGV</li> <li>Software x</li> </ul> <p>or</p> <ul> <li>No additional software needs to be installed for this workshop.</li> </ul>"},{"location":"tutorials/bioinformatics-bench-scientists/temporal-spatial-gene-expression/temporal-spatial-gene-expression/#required-data","title":"Required Data","text":"<ul> <li>Data file</li> </ul> <p>or</p> <ul> <li>No additional data needs to be downloaded for this workshop.</li> </ul>"},{"location":"tutorials/bioinformatics-bench-scientists/temporal-spatial-gene-expression/temporal-spatial-gene-expression/#author-information","title":"Author Information","text":"<p>Written by: Victoria Perreau Melbourne Bioinformatics, University of Melbourne</p> <p>Created/Reviewed: July 2019</p>"},{"location":"tutorials/bioinformatics-bench-scientists/temporal-spatial-gene-expression/temporal-spatial-gene-expression/#background","title":"Background","text":"<p>Little bit of history and context. Why is this important/useful\u2026</p>"},{"location":"tutorials/bioinformatics-bench-scientists/temporal-spatial-gene-expression/temporal-spatial-gene-expression/#section-1-title-of-section-1","title":"Section 1: Title of section 1","text":"<p>In this section you will \u2026</p> <p>Important</p> <p>Please look at the formatting template to see examples for formatting your documentation in line with Melbourne Bioinformatics training material e.g Questions and answers, code blocks, images etc. </p>"},{"location":"tutorials/bioinformatics-bench-scientists/temporal-spatial-gene-expression/temporal-spatial-gene-expression/#section-2-title-of-section-2","title":"Section 2: Title of section 2","text":"<p>In this section we will \u2026</p>"},{"location":"tutorials/bioinformatics-bench-scientists/temporal-spatial-gene-expression/temporal-spatial-gene-expression/#additional-reading","title":"Additional reading","text":"<p>Links to additional recommended reading and suggestions for related tutorials.</p>"},{"location":"tutorials/bionitio/bionitio/","title":"Command-line software development","text":"<p>To set up a new bioinformatics tool, we recommend that you follow best practice in software development. Many of these best-practice features are implemented in a template called \u201cBionitio\u201d. You can set up the template in one of many programming languages and then modify/extend your tool.</p> <ul> <li> <p>Link to Bionitio: https://github.com/bionitio-team/bionitio</p> </li> <li> <p>See the README for an overview, and see the Wiki for a step-by-step guide to project setup.</p> </li> </ul>"},{"location":"tutorials/cwl/cwl/","title":"Introduction to CWL","text":""},{"location":"tutorials/cwl/cwl/#introduction-to-cwl","title":"Introduction to CWL","text":"<p>Important This material is no longer maintained and may be out of date. Please go to this link below for a current Introduction to CWL</p>"},{"location":"tutorials/cwl/cwl/#summary","title":"Summary","text":"<p>Common Workflow Language (or CWL), is a growing language for defining workflows in a cross-platform and cross-domain manner. In biology in particular, we need workflows to automate complex analyses such as DNA variant calling, RNA sequencing, and genome assembly. CWL provides a simple and well-defined format for automating these analysis by specifying their stages and connections using readable CWL documents.</p> <p>CWL makes use of a number of existing standards, including support for cluster computing using SLURM or PBS, containerisation using Docker, and deployment using common packaging formats. In addition, the CWL ecosystem has grown to include workflow visualisation tools, graphical workflow editors, libraries for interacting with CWL programatically and tools that convert to and from CWL and other workflow formats.</p>"},{"location":"tutorials/cwl/cwl/#outcomes","title":"Outcomes","text":"<p>At the end of the course, you will be able to:</p> <ul> <li>Find and use CWL tool definitions online</li> <li>Use the Rabix Composer, a graphical editor for CWL</li> <li>Understand how to write CWL tool definitions for command line tools</li> <li>Use Docker with CWL to provide software dependencies and ensure reproducibility</li> <li>Join CWL tools into a workflow</li> <li>Read and write CWL files written in YAML</li> <li>Understand advanced CWL features like secondary files, parameter references and subworkflows</li> <li>Run CWL workflows on local and HPC systems </li> </ul>"},{"location":"tutorials/cwl/cwl/#requirements","title":"Requirements","text":""},{"location":"tutorials/cwl/cwl/#general","title":"General","text":"<ul> <li>This workshop is aimed at anyone with basic Unix command-line experience</li> <li>Attendees are required to bring their own laptop computers</li> </ul>"},{"location":"tutorials/cwl/cwl/#software","title":"Software","text":"<p>All of this software is free, and should run on any operating system (Mac, Windows, or Linux):</p> <ul> <li>Rabix Composer: <ul> <li>A GUI for writing CWL</li> <li>https://github.com/rabix/composer/releases</li> <li>Download the .dmg (Mac), .exe (Windows) or .AppImage (Linux)</li> </ul> </li> <li>Docker<ul> <li>A system for managing containers</li> <li>https://store.docker.com/search?type=edition&amp;offering=community</li> </ul> </li> <li>Python 2.7 or above<ul> <li>If you don\u2019t have any version of python installed, Python 3.6 is preferable</li> <li>https://www.python.org/downloads/</li> </ul> </li> <li>cwltool<ul> <li>A command-line executor for CWL</li> <li>This has to be installed using the command line</li> <li>https://github.com/common-workflow-language/cwltool#install</li> </ul> </li> <li>A text editor for code<ul> <li>If you don\u2019t already have a favourite, I recommend Atom</li> <li>https://atom.io/</li> </ul> </li> </ul>"},{"location":"tutorials/cwl/cwl/#slides","title":"Slides","text":"<p>Workshop Slides (use the arrow keys to navigate)</p> <ul> <li>Part 1: Introduction</li> <li>Part 2: Tools</li> <li>Part 3: Writing Workflows</li> <li>Part 4: YAML</li> </ul>"},{"location":"tutorials/cwl_2022/cwl_2022/","title":"Introduction to CWL","text":""},{"location":"tutorials/cwl_2022/cwl_2022/#introduction-to-cwl","title":"Introduction to CWL","text":"<p>Anticipated workshop duration when delivered to a group of participants is 2.5 hours.</p> <p>For queries relating to this workshop, contact Melbourne Bioinformatics (bioinformatics-training@unimelb.edu.au).</p> <p>Find out when we are next running this training as an in-person workshop, by visiting the Melbourne Bioinformaitcs Eventbrite page.</p> <p>Written and maintained by Grace Hall - Melbourne Bioinformatics (formerly VLSCI)</p>"},{"location":"tutorials/cwl_2022/cwl_2022/#overview","title":"Overview","text":""},{"location":"tutorials/cwl_2022/cwl_2022/#topic","title":"Topic","text":"<ul> <li> Genomics</li> <li> Transcriptomics</li> <li> Proteomics</li> <li> Metabolomics</li> <li> Statistics and visualisation</li> <li> Structural Modelling</li> <li> Basic skills</li> </ul>"},{"location":"tutorials/cwl_2022/cwl_2022/#skill-level","title":"Skill level","text":"<ul> <li> Beginner  </li> <li> Intermediate  </li> <li> Advanced  </li> </ul> <p> This workshop is designed for participants with some programming and/or command-line knowledge.</p>"},{"location":"tutorials/cwl_2022/cwl_2022/#summary","title":"Summary","text":"<p>Welcome, fellow Research Software Engineer (RSE)! </p> <p>Workflows have become a core aspect of research over time. Most researchers will run a repeatable analysis requiring multiple software tools during their career. For this reason, skills involving developing, running and maintaining workflows are continuing to be valuable in our industry. </p> <p>A number of workflow systems are currently popular, including: - Galaxy - Common Workflow Language (CWL) - Workflow Description Language (WDL) - Nextflow</p> <p>While Galaxy is the easiest system to get started with, it is not suitable for all workflows and all data. In these cases, researchers may need to use a dedicated workflow language.</p> <p>This workshop demonstrates how to write workflows using CWL. An introduction to workflow theory, implementation using the CWL language, and execution on a compute environment will be demonstrated. By the end of the session, participants will be able to write and execute basic workflows in CWL. Skills learned will be easily transferable to other workflow languages (eg Nextflow) participants may want to learn in the future.</p>"},{"location":"tutorials/cwl_2022/cwl_2022/#outcomes","title":"Outcomes","text":"<p>At the end of the workshop, you will be able to:</p> <ul> <li>Write basic workflows in CWL</li> <li>Run CWL workflows using an execution engine</li> <li>Have the skills to continue your own learning</li> </ul>"},{"location":"tutorials/cwl_2022/cwl_2022/#prerequisites","title":"Prerequisites","text":"<p>This workshop is aimed at bioinformaticians who wish to learn CWL.</p> <p>The following is highly recommended:</p> <ul> <li>Basic familiarity with a programming language (ie Python, R, Javascript)</li> <li>Command line familiarity (can move around folders, run bioinformatics tools)</li> <li>Basic familiarity with docker / containers</li> </ul>"},{"location":"tutorials/cwl_2022/cwl_2022/#material","title":"Material","text":"<ul> <li>Slides</li> <li>Colab Notebook (main material)</li> </ul>"},{"location":"tutorials/docker/docker/","title":"Containerized Bioinformatics","text":""},{"location":"tutorials/docker/docker/#overview","title":"Overview","text":"<p>Containerisation is a method of bundling an application or pipeline with all its dependencies, from language runtimes like Python and R to the operating system itself. This technology has already revolutionised web development by providing a simple way to run web applications a in precisely controlled environment, regardless of which computer system they are running on.</p> <p>This workshop will explain how these advantages can be easily applied to bioinformatics analysis, to ensure 100% reproducibility of your work, along with easy distribution of your pipelines to other users without the need for complex installation.</p>"},{"location":"tutorials/docker/docker/#learning-objectives","title":"Learning Objectives","text":"<p>At the end of the course, you will be able to:</p> <ul> <li>understand what containerisation is, and why you might use it in bioinformatics</li> <li>be familiar with some common containerisation tools are, and when to use each of them</li> <li>find and run containers built by other people</li> <li>run containers on HPC systems (like Melbourne Bioinformatics)</li> <li>build your own application into a container (containerisation)</li> <li>use containers as elements of a bioinformatics pipeline, and</li> <li>distribute your container online.</li> </ul>"},{"location":"tutorials/docker/docker/#requirements","title":"Requirements","text":"<p>This workshop is aimed at anyone with basic Unix command-line experience.</p> <p>Attendees are required to bring their own laptop computers.</p> <p>Windows users should have PuTTY installed</p>"},{"location":"tutorials/docker/docker/#slides","title":"Slides","text":"<p>Workshop Slides (use the arrow keys to navigate)</p> <ul> <li>Part 1: Docker and Containers</li> <li>Part 2: Running Containers</li> <li>Part 3: Making your Own Image</li> <li>Part 4: Docker on HPC</li> </ul>"},{"location":"tutorials/galaxy-workflows/","title":"Index","text":"<p>PR reviewers and advice: Simon Gladman, Clare Sloggett, Anna Syme</p> <p>Current slides: https://docs.google.com/presentation/d/1jOp5hH-NHRZahcUkPEQ3jNv-MSr0wSGpL4UsBqZECC4 (Simon\u2019s)</p> <p>Other slides:</p> <ul> <li>None yet</li> </ul>"},{"location":"tutorials/galaxy-workflows/galaxy-workflows/","title":"Introduction to Galaxy Workflows","text":""},{"location":"tutorials/galaxy-workflows/galaxy-workflows/#galaxy-workflows","title":"Galaxy Workflows","text":"<p>Written and maintained by Simon Gladman - Melbourne Bioinformatics (formerly VLSCI)</p>"},{"location":"tutorials/galaxy-workflows/galaxy-workflows/#background","title":"Background","text":"<p>This workshop/tutorial will familiarise you with the Galaxy workflow engine. It will cover the following topics:</p> <ul> <li>Logging in to the server</li> <li>How to construct and use a workflow by various methods</li> <li>How to share a workflow</li> </ul>"},{"location":"tutorials/galaxy-workflows/galaxy-workflows/#section-1-preparation","title":"Section 1: Preparation.","text":"<p>The purpose of this section is to get you to log in to the server.. For this workshop, you can use a Galaxy server that you have created by following the steps outlined in: Launch a GVL Galaxy Instance or you can use the public Galaxy Australia</p> <p>Go to Galaxy URL of your server in Firefox or Chrome (your choice, please don\u2019t use IE or Safari.)</p> <ul> <li>If you have previously registered on this server just log in:<ul> <li>On the top menu select: User -&gt; Login</li> <li>Enter your password</li> <li>Click the Submit button</li> </ul> </li> </ul> <ul> <li>If you haven\u2019t registered on this server, you\u2019ll need to now.<ul> <li>On the top menu select: User -&gt; Register</li> <li>Enter your email, choose a password, repeat it and add a (all lower case) one word name</li> <li>Click on the Submit button.</li> </ul> </li> </ul>"},{"location":"tutorials/galaxy-workflows/galaxy-workflows/#section-2-create-and-run-a-workflow","title":"Section 2: Create and run a workflow.","text":"<p>This section will show you two different methods to create a workflow and then how to run one.</p>"},{"location":"tutorials/galaxy-workflows/galaxy-workflows/#import-the-workflow-history","title":"Import the workflow history","text":"<p>In this step we will import a shared history to our workspace so we can extract a workflow from it. This will only work on Galaxy servers which have the history available on it. If yours doesn\u2019t have the appropriate history, there are instructions to create it here. Alternatively, you can extract a workflow from any history you have in your \u201cSaved Histories.\u201d</p> <ul> <li>From the menu at the top of the Galaxy window, click Shared Data -&gt; Histories</li> <li>Find the history called \u201cworkflow_finished\u201d and click on it.</li> <li>Then click on Import history at the top right of the screen.</li> <li>Change the name if you wish and then click Import</li> </ul> <p>This history should now be in your history pane on the right.</p>"},{"location":"tutorials/galaxy-workflows/galaxy-workflows/#workflow-creation-method-1","title":"Workflow creation: Method 1","text":"<p>We will create a workflow from an existing history. You can use this method to make a re-useable analysis from one you\u2019ve already done. i.e. You can perform the analysis once and then create a workflow out of it to re-use it on more/new data. We will create a workflow from the history you imported in step 1 above. The footnote below explains the steps that created this history. These are the steps we will mimic in the workflow.</p> <p>Make sure your current history is the one you imported in Section 2 - Step 1 above (imported: workflow_finished.) If not, switch to it. If you couldn\u2019t import it, you should be able to complete this step with any suitable history.</p> <p>Now we will create the workflow.</p> <ul> <li>Click on the histories menu button  at the top of the history pane.</li> <li>Click Extract Workflow</li> </ul> <p>You will now be shown a page which contains the steps used to create the history you are extracting from. We use this page to say what to include in the workflow. We want everything here so we\u2019ll just accept the defaults and:</p> <ul> <li>Change the Workflow name to something sensible like \u201cBasic Variant Calling Workflow\u201d</li> <li>Click Create Workflow</li> </ul> <p>The workflow is now accessible via the bottom of the tool pane by clicking on All Workflows.</p>"},{"location":"tutorials/galaxy-workflows/galaxy-workflows/#some-discussion","title":"Some discussion","text":"<p>Have a look at your workflow. Click on its button in the workflow list. It\u2019s tool interface will appear. You can now run this workflow any time you like with different input datasets. NOTE: The input data sets must be of the same types as the original ones. i.e. In our case, two fastq reads files and one fasta reference sequence.</p> <p>More interesting though is to:</p> <ul> <li>Click on the  Workflows link in the top menu</li> <li>Click on the down arrow on your workflow\u2019s button.</li> <li>Click Edit</li> </ul> <p>A visualisation of your workflow will appear. Note the connections and the steps.</p> <p>Next we\u2019ll go through how to create this workflow using the editor..</p>"},{"location":"tutorials/galaxy-workflows/galaxy-workflows/#workflow-creation-method-2","title":"Workflow Creation: Method 2","text":"<p>We will now create the same read mapping/variant calling workflow using the editor directly. The workflow needs to take in some reads and a reference, map the reads to the reference using BWA, run Freebayes on the BAM output from BWA to call the variants, and finally filter the resulting vcf file.</p>"},{"location":"tutorials/galaxy-workflows/galaxy-workflows/#step-1-create-a-workflow-name-and-edit-space","title":"Step 1: Create a workflow name and edit space.","text":"<ul> <li>Click on Workflow in Galaxy\u2019s menu.</li> <li>Click on the Create New Workflow button.</li> <li>In the \u201cWorkflow Name\u201d text box type: Variants from scratch</li> <li>Click the Create button.</li> </ul> <p>You should now be presented with a blank workflow editing grid.</p>"},{"location":"tutorials/galaxy-workflows/galaxy-workflows/#step-2-open-the-editor-and-place-component-tools","title":"Step 2: Open the editor and place component tools","text":"<p>Add three input datafiles.</p> <ul> <li>In the Workflow control section of the tool pane, click on Inputs -&gt; Input dataset three times.</li> <li>Spread them out towards the left hand side of the workflow grid by clicking and dragging them around.</li> <li>For each one, change their name.<ul> <li>Click on each input box in turn</li> <li>In the right hand pane (where the history usually is), change the name to:<ul> <li>Reference data</li> <li>Reads 1</li> <li>Reads 2 - respectively.</li> </ul> </li> <li>If you click on Input dataset in the tan box at the top of the right hand panel on the screen, you can change the name of the box as it appears on the editing layout. You need to give each one a more sensible name and press Enter to make the change.</li> </ul> </li> </ul> <p>Add in the BWA mapping step.</p> <ul> <li>Click on NGS: Mapping -&gt; Map with BWA in the tool pane. BWA will be added to the workflow grid.</li> <li>In the right hand pane (where the history usually is), change the following parameters.<ul> <li>Change \u201cWill you select a reference genome from your history or use a built-in index?:\u201d to Use a genome from history.</li> <li>Note that the BWA box on the grid changes to match these settings.</li> </ul> </li> </ul> <p>Connect the tools together.</p> <ul> <li>Click and drag on the output of one of the input dataset tools to each of the input spots in the BWA tool. (Make connections.)<ul> <li>\u201cReference data\u201d output to reference to \u201cUse the following dataset as the reference sequence\u201d</li> <li>\u201cReads 1\u201d output to \u201cSelect first set of reads\u201d</li> <li>\u201cReads 2\u201d output to \u201cSelect second set of reads\u201d</li> </ul> </li> </ul> <p>Add in the Freebayes (Variant Calling step.)</p> <ul> <li>Click on NGS: Variant Calling -&gt; Freebayes</li> <li>In the right hand pane, change the following:<ul> <li>\u201cChoose the source for the reference list:\u201d  to History</li> <li>Connect \u201cMap with BWA\u201d bam output to \u201cFreebayes\u2019\u201d bam input.</li> <li>Connect the \u201cReference data\u201d output to \u201cFreebayes\u2019\u201d Use the following dataset as the reference sequence input.</li> </ul> </li> </ul> <p>If you\u2019re keen - Note: this is optional. Also change the following parameters the right hand pane for freebayes to make it a bit more sensible for variant calling in bacterial genomes.</p> <ul> <li>\u201cChoose parameter selection level\u201d: Complete list of all options</li> <li>\u201cPopulation model options\u201d: Set population model options</li> <li>\u201cSet ploidy for the analysis\u201d: 1</li> <li>\u201cInput filters\u201d: Set input filters</li> <li>\u201cExclude alignments from analysis if they have a mapping quality less than\u201d: 20</li> <li>\u201cExclude alleles from analysis if their supporting base quality is less than\u201d: 20</li> <li>\u201cRequire at least this fraction of observations \u2026 to evaluate the position\u201d: 0.9</li> <li>\u201cRequire at least this count of observations .. to evaluate the position\u201d: 10</li> <li>\u201cPopulation and mappability priors\u201d: Set population and mappability priors</li> <li>\u201cDisable incorporation of prior expectations about observations\u201d: Yes</li> </ul> <p>Add in the Filter step.</p> <ul> <li>Click on Filter and Sort - &gt; Filter</li> <li>Connect \u201cFreebayes\u2019\u201d output_vcf to the \u201cfilter\u201d input.</li> <li>In the right hand pane, change the following:<ul> <li>\u201cWith the following condition\u201d: c6 &gt; 500</li> <li>\u201cNumber of header lines to skip\u201d: 56</li> </ul> </li> </ul> <p>Phew! We\u2019re nearly done! The only thing left is to select which workflow outputs we want to keep in our history. Next to each output for every tool is a star. Clicking on the stars will select those files as workflow outputs, everything else will be hidden in the history. In this case we only really want the BAM file and the final variants (vcf file.) Therefore:</p> <p>Select workflow outputs.</p> <ul> <li>Click on the star next to \u201cMap with BWA\u2019s\u201d bam file output.</li> <li>Click on the star next to \u201cFilter\u2019s\u201d output vcf.</li> </ul>"},{"location":"tutorials/galaxy-workflows/galaxy-workflows/#step-3-save-it","title":"Step 3: Save it!","text":"<p>Click on the  at the top of the workflow grid and select Save.</p> <p>Congratulations. You\u2019ve just created a Galaxy workflow.</p> <p>Now to run it!</p>"},{"location":"tutorials/galaxy-workflows/galaxy-workflows/#running-the-workflow","title":"Running the workflow","text":"<p>We will now make a new history called \u201cTest\u201d and run the workflow on it\u2019s data.</p>"},{"location":"tutorials/galaxy-workflows/galaxy-workflows/#create-the-new-history","title":"Create the new history","text":"<ul> <li>From the Histories Menu, select Copy Datasets</li> <li>Select the 2 x fastq files and the Ecoli .fna file.</li> <li>Under destination history, enter Test into \u201cNew History Named:\u201d</li> <li>Click Copy History Items button</li> <li>Click on the link to the new history in the green bar at the top of the screen</li> </ul>"},{"location":"tutorials/galaxy-workflows/galaxy-workflows/#run-the-workflow","title":"Run the workflow","text":"<ul> <li>On the tools pane, click All Workflows</li> <li>Select the Variants from scratch workflow (or whatever you called it.)</li> <li>Give it the correct files.</li> <li>Ecoli \u2026 .fna for Reference data</li> <li>bacterial_std_err_1.fastq for Reads 1</li> <li>bacterial_std_err_2.fastq for Reads 2</li> <li>Click Run Workflow</li> </ul> <p>Your workflow will now run. It will send the right files to the right tools at the right time to the cluster (compute engine on your machine) and wait for them to finish. Watch as they turn yellow then green in turn.</p>"},{"location":"tutorials/galaxy-workflows/galaxy-workflows/#what-now","title":"What now?","text":"<p>Where to start? There\u2019s so much you can do with Workflows. You can even run them on multiple file sets from the one setup.</p>"},{"location":"tutorials/galaxy-workflows/history_creation/","title":"History creation instructions for Workflow tutorial","text":"<p>Use this set of instructions to create the base history for the \u201cExtract Workflow\u201d section of the workflows tutorial.</p>"},{"location":"tutorials/galaxy-workflows/history_creation/#step-1-import-the-raw-datafiles","title":"Step 1: Import the raw datafiles","text":"<ul> <li>Create a new blank history by clicking on the history menu , then Create New</li> <li>Use the upload data tool to upload the data files from a remote repository..<ul> <li>Click Get Data -&gt; Upload File</li> <li>Click Paste/Fetch data</li> <li>In the box paste the following two url\u2019s (one per line): https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/COMP90014/Assignment1/bacterial_std_err_1.fastq.gz and https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/COMP90014/Assignment1/bacterial_std_err_2.fastq.gz</li> <li>Change the Type to fastqsanger</li> <li>Click the Paste/Fetch data button again.</li> <li>Paste https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/COMP90014/Assignment1/Ecoli-O157_H7-Sakai-chr.fna</li> <li>Change the Type on this file to fasta</li> <li>Click the Start button.</li> <li>Click the Close button.</li> </ul> </li> </ul> <p>After the import is complete, you should have 3 files in your history. 2 fastq files and a fasta file.</p>"},{"location":"tutorials/galaxy-workflows/history_creation/#step-2-run-bwa","title":"Step 2: Run BWA","text":"<p>Now we will run BWA on these files to map the reads to the reference.</p> <ul> <li>In the tools menu, click NGS: Mapping -&gt; Map with BWA</li> <li>Set the following in the tool interface:<ul> <li>\u201cWill you select a reference genome from your history or use a built-in index?\u201d: Use a genome from history and build index</li> <li>\u201cUse the following dataset as the reference sequence\u201d: https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/COMP90014/Assignment1/Ecoli-O157_H7-Sakai-chr.fna</li> <li>\u201cSelect first set of reads\u201d: https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/COMP90014/Assignment1/bacterial_std_err_1.fastq</li> <li>\u201cSelect second set of reads\u201d: https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/COMP90014/Assignment1/bacterial_std_err_2.fastq</li> </ul> </li> <li>Click Execute</li> </ul> <p>This will run BWA and result in an output compressed BAM file containing the mapping information for all of the reads versus the reference.</p>"},{"location":"tutorials/galaxy-workflows/history_creation/#step-3-run-freebayes","title":"Step 3: Run Freebayes","text":"<p>Now we will run Freebayes to call variants in out reads compared with the reference.</p> <ul> <li>In the tools menu, click NGS: Variant Analysis -&gt; Freebayes</li> <li>Set the following in the tool interface:<ul> <li>\u201cChoose the source for the reference genome\u201d: History</li> <li>\u201cBAM file\u201d: Map with BWA on data 2, data 1, and data 3 (mapped reads in BAM format)</li> <li>\u201cUse the following dataset as the reference sequence\u201d: https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/COMP90014/Assignment1/Ecoli-O157_H7-Sakai-chr.fna</li> </ul> </li> <li>Click Execute</li> </ul> <p>This will run Freebayes on your BAM file and will result in a variant calling format file (vcf). </p>"},{"location":"tutorials/galaxy-workflows/history_creation/#step-4-filter-the-vcf-file","title":"Step 4: Filter the VCF file.","text":"<p>Now we will filter the vcf file to something sensible.</p> <ul> <li>In the tools menu, click Filter and Sort -&gt; Filter</li> <li>Set the following in the tool interface:<ul> <li>\u201cFilter\u201d: FreeBayes on data 3 and data 4 (variants)</li> <li>\u201cWith following condition\u201d: c6 &gt; 500</li> <li>\u201cNumber of header lines to skip\u201d: 56</li> </ul> </li> <li>Click Execute</li> </ul> <p>This will filter out VCF file.</p> <p>You should now have the requisite history to enable you to complete the workflow extraction section of the workflows tutorial.</p> <p>Return to it here</p>"},{"location":"tutorials/galaxy_101/","title":"Index","text":"<p>PR reviewers and advice: Simon Gladman, Gayle Philip, Clare Sloggett, Jessica Chung, Anna Syme</p> <p>Current slides: https://docs.google.com/presentation/d/1dzHagGkswjH7MOZ7OACVXGU-riBs33K3J5lWpnCpPhs (Simon\u2019s)</p> <p>Other slides:</p> <ul> <li>None yet</li> </ul>"},{"location":"tutorials/galaxy_101/galaxy_101/","title":"Galaxy 101","text":""},{"location":"tutorials/galaxy_101/galaxy_101/#introduction-to-galaxy","title":"Introduction to Galaxy","text":"<p>Written and maintained by Simon Gladman - Melbourne Bioinformatics (formerly VLSCI)</p>"},{"location":"tutorials/galaxy_101/galaxy_101/#overview","title":"Overview","text":"<p>This beginners tutorial will introduce Galaxy\u2019s interface, tool use, histories, and get new users of the Genomics Virtual Laboratory up and running. You can follow this tutorial with the Galaxy Workflows tutorial to learn about workflows.</p> <p>Galaxy is an open source, web-based platform for accessible, reproducible, and transparent computational biomedical research. It allows users without programming experience to easily specify parameters and run individual tools as well as larger workflows. It also captures run information so that any user can repeat and understand a complete computational analysis. Finally, it allows users to share and publish analyses via the web.</p>"},{"location":"tutorials/galaxy_101/galaxy_101/#learning-objectives","title":"Learning Objectives","text":"<p>At the end of the course, you will be able to:</p> <ul> <li>login to a Galaxy server.</li> <li>upload data to a Galaxy server from:</li> <li>A file on your local computer</li> <li>A file on a remote datastore with an accessible URL.</li> <li>use tools in Galaxy by:</li> <li>Accessing the tool via the tool menu</li> <li>Using the tool interface to run the particular tool</li> <li>Viewing/accessing the tool output.</li> </ul>"},{"location":"tutorials/galaxy_101/galaxy_101/#requirements","title":"Requirements","text":"<p>This is a hands-on workshop and attendees should bring their own laptops.</p>"},{"location":"tutorials/galaxy_101/galaxy_101/#background","title":"Background","text":"<p>Galaxy is a web based analysis and workflow platform designed for biologists to analyse their own data. It comes with most of the popular bioinformatics tools already installed and ready for use. There are many Galaxy servers around the world and some are tailored with specific toolsets and reference data for analysis of human genomics, microbial genomics, proteomics etc.</p> <p>There are some introductory slides available here.</p> <p>Basically, the Galaxy interface is separated into 3 parts. The tool list on the left, the viewing pane in the middle and the analysis and data history on the right. We will be looking at all 3 parts in this tutorial.</p> <p></p> <p>This workshop/tutorial will familiarize you with the Galaxy interface. It will cover the following topics:</p> <ul> <li>Logging in to the server</li> <li>Getting data into galaxy</li> <li>How to access the tools</li> <li>Using to use some common tools</li> </ul>"},{"location":"tutorials/galaxy_101/galaxy_101/#section-1-preparation","title":"Section 1: Preparation.","text":"<p>The purpose of this section is to get you to log in to the server.</p> <ol> <li> <p>Open your browser. We recommend Firefox or Chrome (please don\u2019t use Internet Explorer or Safari).</p> <ul> <li>Go to the Galaxy Australia server.</li> <li>Alternatively, you can use a different Galaxy server - a list of available servers is here.</li> </ul> </li> <li> <p>If you have previously registered on this server just log in:</p> <ul> <li>On the top menu select: User -&gt; Login</li> <li>Enter your password</li> <li>Click Submit</li> </ul> </li> <li> <p>If you haven\u2019t registered on this server, you\u2019ll need to now.</p> <ul> <li>On the top menu select: User -&gt; Register</li> <li>Enter your email, choose a password, repeat it and add a (all lower case) one word name</li> <li>Click Submit</li> </ul> </li> </ol>"},{"location":"tutorials/galaxy_101/galaxy_101/#section-2-getting-data-into-galaxy","title":"Section 2: Getting data into Galaxy","text":"<p>There are 2 main ways to get your data into Galaxy. We will use each of these methods for 3 files and then use those 3 files for the rest of the workshop.</p> <ul> <li> <p>Start a new history for this workshop. To do this:</p> <ul> <li>Click on the history menu button (the  icon) at the top of the Histories panel.</li> <li>Select Create New</li> </ul> </li> </ul> <p>It is important to note that Galaxy has the concept of \u201cFile Type\u201d built in. This means that each file stored needs to have its type described to Galaxy as it is being made available. Examples of file types are: text, fasta, fastq, vcf, GFF, Genbank, tabular etc.</p> <p>We will tell Galaxy what type of file each one is as we upload it.</p>"},{"location":"tutorials/galaxy_101/galaxy_101/#method-1-upload-a-file-from-your-own-computer","title":"Method 1: Upload a file from your own computer","text":"<p>With this method you can get most of the files on your own computer into Galaxy. (there is a size limit)</p> <ul> <li> <p>Download the following file to your computer: https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/galaxy101/Contig_stats.txt.gz</p> <ul> <li>(To download this file, copy the link into a new browser tab, and press enter. The file should now download.)</li> <li>From the Galaxy tool panel, click on Get Data -&gt; Upload File</li> <li>Click the Choose File button</li> <li>Find and select the Contig_stats.txt.gz file you downloaded and click Open</li> <li>Set the \u201cType\u201d (= file format) to tabular</li> <li>Click the Start button</li> <li>Once the progress bar reaches 100%, click the Close button</li> </ul> </li> </ul> <p>The file will now upload to your current history.</p>"},{"location":"tutorials/galaxy_101/galaxy_101/#method-2-upload-a-file-from-a-url","title":"Method 2: Upload a file from a URL","text":"<p>If a file exists on a web resource somewhere and you know its URL (Unique resource location - a web address) you can directly load it into Galaxy.</p> <ul> <li> <p>From the tool panel, click on Get Data -&gt; Upload File</p> <ul> <li>Click on the Paste/Fetch Data button</li> <li>Copy and paste the following web address into the URL/Text box: https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/COMP90014/Assignment1/bacterial_std_err_1.fastq.gz</li> <li>Set the file format to fastqsanger (not fastqcsanger)</li> <li>Click Start</li> <li>Once the progress bar has reached 100%, click Close</li> </ul> </li> </ul> <p>Note that Galaxy is smart enough to recognize that this is a compressed file and so it will uncompress it as it loads it.</p>"},{"location":"tutorials/galaxy_101/galaxy_101/#method-2-again-get-data-from-a-data-library","title":"Method 2 (again): Get data from a Data Library","text":"<p>Now we are going to get another file from a shared Data Library.</p> <ul> <li> <p>Go to the menu at the top of the screen and click Shared Data -&gt; Data Libraries.</p> </li> <li> <p>Click on the Library: \u201cGalaxy Australia Training Material\u201d then \u201cGalaxy_101\u201d</p> </li> <li> <p>To add the MRSA0252.fa file to our history</p> </li> <li>click on the checkbox next to it</li> <li>Then click the \u201cTo History\u201d button at the top of the page and select \u201cAs Datasets\u201d</li> <li>Click the \u201cImport\u201d button</li> <li>Finally, click \u201cAnalyse Data\u201d in the menu at the top of the screen to return to your history.</li> </ul> <p>The DNA sequence of Staphlococcus aureus MRSA252 will be loaded into your history as a fasta file.</p> <p>Your history should now look like this.</p> <p></p>"},{"location":"tutorials/galaxy_101/galaxy_101/#the-data","title":"The data","text":"<p>Though we aren\u2019t going to focus on the contents of these files and what they mean from a bioinformatics standpoint, here is a brief description of each one.</p> <ul> <li> <p>Contigs_stats.txt</p> <ul> <li>this file contains a table of summary data from a de novo genome assembly (the process of attempting to recover the full genome of an organism from the short read sequences produced by most DNA sequencing machines. )</li> <li>The columns contain a lot of information but the ones we will be using indicate the amount of data (or coverage) that went into making up each piece of the final assembly.  </li> </ul> </li> </ul> <ul> <li> <p>bacterial_std_err_1.fastq.gz</p> <ul> <li>This file contains sequence reads as they would come off an Illumina sequencing machine. They are in fastq format.  </li> </ul> </li> </ul> <ul> <li> <p>MRSA0252.fna</p> <ul> <li>This file contains the genome sequence of Staphylococcus aureus MRSA252. It is in fasta format.</li> </ul> </li> </ul>"},{"location":"tutorials/galaxy_101/galaxy_101/#section-3-play-with-the-tools","title":"Section 3: Play with the tools","text":"<p>The purpose of this section is to get you used to using the available tools in Galaxy and point out some of the more basic manipulation tools.</p> <p>Firstly however, you\u2019ll notice that two of the files have very long and confusing names. So we might want to change them. To do this we need to \u201cedit\u201d the file. So:</p> <ol> <li>Click on the  icon (edit) next to the file in the history called: https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/COMP90014/Assignment1/bacterial_std_err_1.fastq</li> <li>In the \u201cName\u201d text box, give it a new name. Call it: Typical Fastq File</li> <li>Click the Save button.</li> </ol> <p>Repeat the process for the MRSA252 fasta file. Rename it to MRSA252.fna</p> <p>Now that\u2019s better. There was a lot of other functionality hidden behind that edit () icon. You can change a file\u2019s data type, convert its format and many other things. Feel free to play around with them at a later date.</p> <p>Ok, back to the tools.</p>"},{"location":"tutorials/galaxy_101/galaxy_101/#example-1-histogram-and-summary-statistics","title":"Example 1: Histogram and summary statistics","text":"<p>The first thing we are going to do is produce a histogram of contig read coverage depths and calculate the summary statistics from the Contig_stats.txt file. To do this we need to cut out a couple of columns, remove a line and then produce a histogram. This will introduce some of the text manipulation tools.</p> <p>Click on the  icon of the Contig_stats.txt file to have a look at it. Note that there are 18 columns in this file. We want column 1 and column 6. To do this:</p> <p>1. Cut out column 1 and column 6.</p> <ul> <li>From the tool panel, click on Text Manipulation -&gt; Cut and set the following:</li> <li>Set \u201cCut Columns\u201d to: c1,c6</li> <li>\u201cDelimited by\u201d: Tab</li> <li>\u201cCut from\u201d: Contig_stats.txt</li> <li>Click Execute</li> </ul> <p>Examine the new file by clicking on its  icon. We now have 2 columns instead of the 18 in the original file.</p> <p>2. Remove the Header lines of the new file.</p> <ul> <li>From the tool panel, click on Text Manipulation -&gt; Remove beginning and set the following:</li> <li>\u201cRemove First\u201d: 1</li> <li>\u201cfrom\u201d: Cut on data1</li> <li>click Execute</li> </ul> <p>Note the the new file is the same as the previous one without the header line.</p> <p>3. Make a histogram.</p> <ul> <li>From the tool panel, click on Graph/Display Data -&gt; Histogram and set the following:</li> <li>\u201cDataset\u201d: Remove beginning on Data X</li> <li>\u201cNumerical column for X axis\u201d: c2</li> <li>\u201cNumber of breaks\u201d: 25</li> <li>\u201cPlot title\u201d: Histogram of Contig Coverage</li> <li>\u201cLabel for X axis\u201d: Coverage depth</li> <li>Click Execute</li> </ul> <p>Click on the  icon of the histogram to have a look at it. Note there are a few peaks. Maybe these correspond to single, double and triple copy number of these contigs.</p> <p>4. Calculate summary statistics for contig coverage depth.</p> <ul> <li>From the tool panel, click on Statistics -&gt; Summary Statisitics and set the following:</li> <li>\u201cSummary statistics on\u201d: Remove beginning on Data X</li> <li>\u201cColumn or expression\u201d: c2</li> <li>Click Execute</li> </ul>"},{"location":"tutorials/galaxy_101/galaxy_101/#example-2-convert-fastq-to-fasta","title":"Example 2: Convert Fastq to Fasta","text":"<p>This shows how to convert a fastq file to a fasta file. The tool creates a new file with the converted data.</p> <p>Converter tool</p> <ul> <li>From the tool panel, click on Convert Formats -&gt; FASTQ to FASTA and set the following:</li> <li>\u201cFASTQ file to convert\u201d: Typical Fastq File</li> <li>Click Execute</li> </ul> <p>This will have created a new Fasta file called FASTQ to FASTA on data 2.</p>"},{"location":"tutorials/galaxy_101/galaxy_101/#example-3-find-ribosomal-rna-features-in-a-dna-sequence","title":"Example 3: Find Ribosomal RNA Features in a DNA Sequence","text":"<p>This example shows how to use a tool called \u201cbarrnap\u201d to search for rRNAs in a DNA sequence.</p> <p>1. Find all of the ribosomal RNA\u2019s in a sequence</p> <ul> <li>From the tool panel, click on NGS: Annotation -&gt; barrnap and set the following:</li> <li>\u201cFasta file\u201d: MRSA252.fna</li> <li>Click Execute</li> </ul> <p>A new file called barrnap on data 3 will be produced. It is a gff3 file. (This stands for genome feature format - version 3. It is a file format for describing features contained by a DNA sequence.) Change its name to something more appropriate (click on the  icon.)</p> <p>Now let\u2019s say you only want the lines of the file for the 23S rRNA annotations. We can do this using a Filter tool.</p> <p>2. Filter the annotations to get the 23S RNAs</p> <ul> <li>From the tool panel, click on Filter and Sort -&gt; Select and set the following:</li> <li>\u201cSelect lines from\u201d:  (whatever you called the barrnap gff3 output)</li> <li>\u201cthat\u201d: Matching</li> <li>\u201cthe pattern\u201d: 23S     (this will look for all the lines in the file that contain \u201c23S\u201d)</li> <li>Click Execute</li> </ul> <p>Now you have a gff3 file with just the 23S annotations!</p>"},{"location":"tutorials/galaxy_101/galaxy_101/#what-now","title":"What now?","text":"<p>Remember how we started a new history at the beginning? If you want to see any of your old histories, click on the history menu button  at the top of the histories panel and then select \u201cSaved Histories.\u201d This will give you a list of all the histories you have worked on in this Galaxy server.</p> <p>That\u2019s it. You now know a bit about the Galaxy interface and how to load data, run tools and view their outputs. For more tutorials, see http://genome.edu.au/learn</p>"},{"location":"tutorials/genomespace/","title":"Index","text":"<p>PR reviewers and advice: Yousef Kowsar</p> <p>Current slides: None</p> <p>Other slides:</p> <ul> <li>None yet</li> </ul>"},{"location":"tutorials/genomespace/genomespace/","title":"Genomespace","text":""},{"location":"tutorials/genomespace/genomespace/#what-is-genomespace","title":"What is GenomeSpace?","text":"<p>GenomeSpace is a cloud-based interoperability framework to support integrative genomics analysis through an easy-to-use Web interface. GenomeSpace provides access to a diverse range of bioinformatics tools, and bridges the gaps between the tools, making it easy to leverage the available analyses and visualizations in each of them. The tools retain their native look and feel, with GenomeSpace providing frictionless conduits between them through a lightweight interoperability layer.</p> <p>GenomeSpace does not perform any analyses itself; these are done within the member tools wherever they live \u2013 desktop, Web service, cloud, in-house server, etc. Rather, GenomeSpace provides tool selection and launch capabilities, and acts as a data highway automatically reformatting data as required when results move from the output of one tool to input for the next.</p> <p>The GVL GenomeSpace can be found at https://genomespace.genome.edu.au.</p>"},{"location":"tutorials/genomespace/genomespace/#prerequisites","title":"Prerequisites","text":"<p>GenomeSpace uses a few dialogue boxes to communicate with the NeCTAR cloud. If you have an AdBlocker installed, the dialogues will not be shown properly. If you have an AdBlocker on your system please disable it for the GenomeSpace.genome.edu.au domain.</p>"},{"location":"tutorials/genomespace/genomespace/#registering-a-genomespace-account","title":"Registering a GenomeSpace account","text":"<p>To register a GenomeSpace account you need to have a valid email address and do the following:</p> <ul> <li> <p>Go to https://genomespace.genome.edu.au/ and click on the \u201cRegister new GenomeSpace user\u201d link:     </p> </li> <li> <p>Enter your preferred username, password and the valid email address and click the Sign up button.</p> <p>Note: You will receive an error if the username has already been taken.  If everything goes right you will see the following page. </p> </li> <li> <p>Activate your account by following the link in the email from GenomeSpace titled \u201cGenomeSpace user registration\u201d. Your account is now active.</p> </li> <li> <p>Go to https://genomespace.genome.edu.au and enter the username and password you created in the previous steps. You will be logged in into GenomeSpace.</p> <p>In a few seconds you will be redirected to your Home page.</p> <p> On this page you can find the following items:</p> <ol> <li>Your username in the top right corner</li> <li>The menu bar</li> <li>The application bar</li> <li>Your home directory</li> <li>The directory under the name Shared to \u201cyour username\u201d contains any folders that have been shared to you through the GenomeSpace website.</li> <li>The public directory is the directory which contains anything that has been made public to the cloud through the GenomeSpace website.</li> </ol> </li> </ul>"},{"location":"tutorials/genomespace/genomespace/#making-a-swift-container","title":"Making a swift container","text":"<p>(These instructions are for the NeCTAR Australian Research Cloud. For any other OpenStack-based cloud storage please change the parameters as necessary.)</p> <p>NeCTAR object storage is a place that people with NeCTAR credentials can store their data reliably.</p> <p>If you haven\u2019t used the NeCTAR cloud before, follow the steps in sections 1 and 2 of this tutorial: http://melbournebioinformatics.github.io/MelBioInf_docs/gvl_launch/gvl_launch/.</p> <p>Go to the NeCTAR dashboard at https://dashboard.rc.nectar.org.au.</p> <ul> <li> <p>On the left hand side of the dashboard click on \u201cObject Store\u201d and then \u201cContainers\u201d.</p> </li> <li> <p>To make a container, click \u201cCreate Container\u201d.</p> </li> </ul> <p></p>"},{"location":"tutorials/genomespace/genomespace/#mounting-a-swift-container","title":"Mounting a swift container","text":"<p>Containers can be found under the Object Store link in NeCTAR\u2019s dashboard.</p> <p>To mount an available container go to Connect menu bar in GenomeSpace and select Swift Container. </p> <p>You will see a new page as follows:</p> <p></p> <p>To fill out this form you need the following parameters:</p> <ol> <li>OpenStack EndPoint: The default value should be correct for NeCTAR: https://keystone.rc.nectar.org.au:5000/v2.0/tokens</li> <li>User Name: This is your NeCTAR user name. Your user name can be found at the top right corner of the NeCTAR dashboard as shown below:   </li> <li>Password: This is your NeCTAR API key. The API key is the key that applications can use to connect to NeCTAR on your behalf. To find your API key:<ul> <li>Login to your NeCTAR dashboard account.</li> <li>On the top right hand side of your Home click on the setting link     </li> <li>Press the Reset Password button. (Warning: This process will reset your API key. If you have already done this process for any other application you can instead just use your old key.)     </li> </ul> </li> <li>Tenancy name: Your NeCTAR Tenancy name (project name). The tenancy name has been assigned to your project by the NeCTAR administration process. </li> <li>Container name: The name of the container that you want to connect to. </li> </ol>"},{"location":"tutorials/genomespace/genomespace/#basic-file-manipulation","title":"Basic file manipulation","text":"<p>Under the containers directory you can perform basic file manipulation as follows:</p> <ul> <li>Creating a directory: To create a directory under another directory, right click on the source directory and select \u201cCreate Subdirectory\u201d. You will be asked for a name and in a few seconds your target directory will be created.</li> <li>Uploading a file into a directory: Uploading a file can be done using drag and drop. Go to the directory you want to upload the file into and drag and drop the file you want to upload into the open area on the right-hand side of the Home directory. The effective area will turn green.</li> <li>Deleting a file: To delete a file, right click on the selected file and select the \u201cDelete\u201d. The file will be deleted in a few seconds.</li> <li>Previewing a file: Under the right click menu you will find the \u201cpreview\u201d option, which will show the first 5000 bytes of a file.</li> <li>Downloading a file: To download a file simply right click on the file and select download. Your download will be started in a few seconds.</li> <li>Creating a public link: Right click on the file you want to get the public link for and select the public link. The public link will be shown to you in a few seconds. (Warning: The public link is available for 4 days.)</li> <li>Creating a private link: Right click on the file and select the \u201cview file\u201d.</li> </ul>"},{"location":"tutorials/genomespace/genomespace/#adding-a-galaxy-service-to-your-account","title":"Adding a Galaxy service to your account:","text":"<p>PREREQUISITE: Please make sure you have an account on the Galaxy server you want to add to GenomeSpace. If you have launched a GVL instance, this is a new instance of Galaxy and you will need to register a Galaxy account in your new Galaxy server first.</p> <p>The latest GVL image is fully compatible with GenomeSpace. Galaxy launched as part of GVL instances can be connected to GenomeSpace as follows:</p> <ol> <li> <p>From the Menu bar go to the manage menu and select Private Tool.     </p> </li> <li> <p>From the opened window press the \u201cAdd new\u201d button.       </p> </li> <li> <p>In the new window fill out the form as follows:</p> <ul> <li>Give a name to your Galaxy</li> <li>Give a description (Optional)</li> <li>Tool provider GVL (Optional)</li> <li>Base URL: http://[Glaxy-ip or DNS]/galaxy/tool_runner?tool_id=genomespace_importer</li> <li>Parameter name: URL</li> <li>Required: Ticked</li> <li>Allow multiple files: Ticked</li> <li>Multiple file Delimiter: ,</li> <li>Select the files\u2019 types that you want your galaxy to work on</li> <li>Upload an image as an Icon for Galaxy (Optional)</li> <li>Press the save button. In a few seconds your Galaxy instance will be added to the Application bar.</li> </ul> <p>A sample page can be seen in the following image: </p> </li> <li> <p>Launching the added Galaxy from GenomeSpace: From GenomeSpace click on the Arrow on the right side of your Galaxy application in the Application bar and select launch.</p> <p>Galaxy will be opened in a new window.</p> <p></p> <p>(Note: Your browser may block the pop-up. Allow the pop-up accordingly).</p> </li> <li> <p>From the opened Galaxy login and under your username go to the preferences options     </p> <p>and select the Manage OpenIDs links: </p> </li> <li> <p>From the associate more OpenID select GenomeSpace and press login. GenomeSpace will be appear as link on the top as a URL.</p> <p></p> </li> </ol> <p>From now on your Galaxy can talk to GenomeSpace under your UserName.</p>"},{"location":"tutorials/genomespace/genomespace/#file-transfer-tofrom-galaxy","title":"File transfer to/from Galaxy","text":"<p>PREREQUISITE: Please make sure you have connected your Galaxy to GenomeSpace first (How to).</p> <ul> <li> <p>Sending a file:</p> <ul> <li>From your Galaxy instance: Go to Get Data and select GenomeSpace Importer (Please make sure you are logged into GenomeSpace). You will see your GenomeSpace home page in a few seconds. Select the file you want to send to Galaxy and press the Send to Galaxy button. A new job will be created in Galaxy and when it completes, your file will be in Galaxy.</li> <li>From GenomeSpace: You can also send a file into Galaxy from the GenomeSpace home page. Simply drag and drop the file into Galaxy (Please make sure you have connected Galaxy and GenomeSpace).    </li> </ul> </li> <li> <p>Receiving a file:</p> <p>Under each file click on the store icon and choose \u201cSend to GenomeSpace\u201d. A dialog will be opened. Choose the directory to store the file and enter the name of the file to store. If you do not provide the file name the file will be stored as \u201cdisplay\u201d. By clicking the Send button the file will be sent to GenomeSpace. The dialog box will close on success.</p> </li> </ul>"},{"location":"tutorials/git/git/","title":"Version Control with Git","text":"<p>Author: Vini Salazar, Melbourne Bioinformatics. Last updated October 2024. Contributors:  - Adam Taranto, WEHI.</p>"},{"location":"tutorials/git/git/#overview","title":"Overview","text":"<p>Topic</p> <ul> <li> Genomics</li> <li> Transcriptomics</li> <li> Proteomics</li> <li> Metabolomics</li> <li> Statistics and visualisation</li> <li> Structural Modelling</li> <li> Basic skills</li> </ul> <p>Skill level</p> <ul> <li> Beginner  </li> <li> Intermediate  </li> <li> Advanced  </li> </ul> <p>Data: None required, we will create our own code repository.</p> <p>Tools: Git <code>&gt;=2.40</code>, a text editor (VS Code, Notepad, nano, Vim)</p> <p>Pipeline: Section 1: Introduction Section 2: Your first Git repository Section 3: Collaborating with Git Section 4: Tips and best practices  </p> <p>Learning objectives: learn the basics of version control, how to track changes in a repository and how to collaborate using Git.</p> <p>Disclaimer</p> <p>This tutorial is partially based on the Software Carpentry\u2019s Git Novice lesson. Some portions have been directly copied from that lesson, while others have been fully rewritten. The lesson is under a CC-BY 4.0 license.</p>"},{"location":"tutorials/git/git/#setup","title":"Setup","text":"<p>Make sure you go through the setup instructions before the workshop.</p> <p>Install Git </p> <p>Windows: If using a Windows machine, install Git for Windows.</p> <p>Mac: Open the Terminal (Command + Spacebar and type \u201cTerminal\u201d), and type <code>git --version</code>. Follow the on-screen prompts to install XCode.</p> <p>Linux: for Debian-based distributions, you can run <code>sudo apt install git-all</code>. For other options, see here.</p> <p>Create a GitHub account </p> <p>The next step will be to create a GitHub account. If you already have one, skip this step. Otherwise, head over to GitHub and click the \u201cSign Up\u201d button at the top right. Make sure you verify your email address.</p> <p>SSH access</p> <p>You must configure SSH access to your GitHub account. Otherwise, it will ask for your password every time you try to interact with GitHub. This is OK, but can  be annoying after some time. See below on how to connect with SSH.</p> Configuring SSH access for GitHub <p>Follow the steps by clicking on the links. Use the tabs to select the appropriate instructions for your operating system.</p> <ol> <li>Check for existing SSH keys.</li> <li>If you don\u2019t have any keys, create one and add it to the SSH agent.</li> <li>Add a new SSH key to GitHub.</li> <li>Test your SSH connection.</li> </ol> <p>Configuring Git </p> <p>The final step in setting up Git is adding your user name and email to the Git configuration. This is required because Git documents our work, that is, who did what. It is also a requirement for your GitHub authentication, especially if you haven\u2019t set up SSH access.</p> <p>Important</p> <p>Use the same email that you used to sign up to GitHub.</p> <p>If you prefer to keep your email private, you can set up a noreply address with GitHub.</p> <p>Go to your Terminal and type:</p> <pre><code>git config --global user.name \"FirstName LastName\"\ngit config --global user.email \"your@email.com\"\n</code></pre> <p>VS Code (optional)</p> <p>You may optionally install Visual Studio Code to have a text editor to work with. This is also available from the University\u2019s Self-Service software.</p> <ul> <li> <p>If you are using VS Code on a Windows machine, you will need to set your default shell as \u201cGitBash\u201d. Follow the instructions here to do so.</p> </li> <li> <p>If on Mac install <code>code</code> command for mac, either from command pallete or manually add if not admin.</p> </li> </ul> <p>Install miniforge Install miniforge (note options i.e. add python to path etc) If windows: Using miniforge-prompt, run: conda init bash If Mac: conda init bash from terminal (check this with miniforge instructions, may need full conda path)</p> <p>Well done!</p> <p>To ensure that everything works, run the two following commands:</p> <ol> <li><code>ssh -T git@github.com</code>. It should print a message like this: <code>Hi &lt;USERNAME&gt;! You've successfully authenticated, but GitHub does not provide shell access</code>.</li> <li><code>git --version</code>. It should print something like <code>git version 2.40.0</code></li> </ol> <p>Congratulations! You are ready to start using Git.</p>"},{"location":"tutorials/git/git/#1-introduction","title":"1. Introduction","text":"<p>Expected time: 40 minutes.</p>"},{"location":"tutorials/git/git/#what-is-git","title":"What is Git?","text":"<p>A concise definition is that Git is a version control system. It was developed in the early 2000s by  Linus Torvalds, the person behind the Linux kernel, and other members of the Linux community. In fact, the initial purpose of Git was to support the development and updates of the Linux kernel.</p> <p>Git is attractive because of several things:</p> <ul> <li>It is fully distributed. What this means is that several (hundreds, thousands) of users can work on the same project in a streamlined way.</li> <li>It is blazing fast. Because (nearly) every operation that Git performs is local, everything works almost instantaneously.</li> <li>It has integrity. Git checksums data before storing it, so it\u2019s impossible to change the content of files without knowing about it.</li> </ul> <p>This is all well and good, but let\u2019s try to understand what version control means for us as researchers.</p> <p></p> <p>\u201cnotFinal.doc\u201d by Jorge Cham, https://www.phdcomics.com</p> <p>We\u2019ve all been in this situation before: it seems unnecessary to have multiple nearly-identical versions of the same document. Some word processors let us deal with this a little better, such as Microsoft Word\u2019s Track Changes, Google Docs\u2019 version history, or LibreOffice\u2019s Recording and Displaying Changes.</p> <p>Version control systems start with a base version of the document and then record changes you make each step of the way. You can think of it as a recording of your progress: you can rewind to start at the base document and play back each change you made, eventually arriving at your more recent version.</p> <p></p> <p>Once you think of changes as separate from the document itself, you can then think about \u201cplaying back\u201d different sets of changes on the base document, ultimately resulting in different versions of that document. For example, two users can make independent sets of changes on the same document.</p> <p></p> <p>Unless multiple users make changes to the same section of the document - a  conflict - you can incorporate two sets of changes into the same base document.</p> <p></p> <p>A version control system is a tool that keeps track of these changes for us, effectively creating different versions of our files. It allows us to decide which changes will be made to the next version (each record of these changes is called a commit, and keeps useful metadata about them. The complete history of commits for a particular project and their metadata make up a repository. Repositories can be kept in sync across different computers, facilitating collaboration among different people.</p> The Long History of Version Control Systems <p>Automated version control systems are nothing new. Tools like RCS, CVS, or Subversion have been around since the early 1980s and are used by many large companies. However, many of these are now considered legacy systems (i.e., outdated) due to various limitations in their capabilities. More modern systems, such as Git and Mercurial, are distributed, meaning that they do not need a centralized server to host the repository. These modern systems also include powerful merging tools that make it possible for multiple authors to work on the same files concurrently.</p> <p>Paper Writing</p> <ul> <li> <p>Imagine you drafted an excellent paragraph for a paper you are writing, but later ruin it. How would you retrieve the excellent version of your conclusion? Is it even possible?</p> </li> <li> <p>Imagine you have 5 co-authors. How would you manage the changes and comments they make to your paper? If you use LibreOffice Writer or Microsoft Word, what happens if you accept changes made using the <code>Track Changes</code> option? Do you have a history of those changes?</p> </li> </ul> Solution <ul> <li> <p>Recovering the excellent version is only possible if you created a copy of the old version of the paper. The danger of losing good versions often leads to the problematic workflow illustrated in the PhD Comics cartoon at the top of this page.</p> </li> <li> <p>Collaborative writing with traditional word processors is cumbersome. Either every collaborator has to work on a document sequentially (slowing down the process of writing), or you have to send out a version to all collaborators and manually merge their comments into your document. The \u2018track changes\u2019 or \u2018record changes\u2019 option can highlight changes for you and simplifies merging, but as soon as you accept changes you will lose their history. You will then no longer know who suggested that change, why it was suggested, or when it was merged into the rest of the document. Even online word processors like Google Docs or Microsoft Office Online do not fully resolve these problems.</p> </li> </ul> <p>Keypoints</p> <ul> <li>Version control is like an unlimited \u2018undo\u2019.</li> <li>Version control also allows many people to work in parallel.</li> </ul>"},{"location":"tutorials/git/git/#why-use-version-control","title":"Why use version control?","text":"<p>Now that we\u2019ve learned what version control is, let\u2019s understand why we should use it as researchers.</p> <p>There are a number of reasons to argue that using version control will make us better researchers. That is because  version control systems can be used for:</p> <ul> <li> <p>Backing up your code The most fundamental idea of version control is that you can use it to safely back up your code. That means not only having a copy of it, but having a copy of each version as your code evolves throughout time. If you use version control effectively, it will be very difficult for your code to be permanently lost, deleted or erased.</p> </li> <li> <p>Sharing your code Although Git is already explicitly designed to work in a distributed manner, modern version control platforms make sharing code with others even easier. If our repository is public, anyone can easily access it, copy, and modify the code as they please. You can make your GitHub profile a portfolio of your coding and analysis projects, with a user-friendly interface.</p> <p>Packaging and distribution</p> <p>Platforms such as GitHub provide a number of features that facilitate packaging our code. One thing is to have a bunch of scripts in a repository, but if we want to distribute our code effectively, to make it easier for users to acquire and install our code, we can bundle it as a software package and upload it to platforms such as PyPI (for Python) or CRAN (for R).</p> </li> <li> <p>Collaborating Sharing code with others is one thing, but Git also enables researchers to work together on the same project. You can review other users\u2019 commits, and selectively apply or reject changes that they propose. This is further enabled by GitHub, which makes it easy to do it through the web interface. Moreover, you can create organisations to host multiple projects, give collaborators write and admin access to projects, and give access to private repositories.</p> <p>The \u2018Lingua Franca\u2019 of software engineering</p> <p>Because of the way Git enables collaboration, it has essentially become the way that programmers interact on a technical basis. If you want to make a contribution to a large code base or project, most likely you will have to submit your changes through Git. GitHub also allows the creation of issues, where you can report problems or create discussions about the code. Knowing Git will probably be required if you want to work in coding projects with other people (including past and future you!)</p> </li> <li> <p>Documenting your work Because changes in Git are structured through commits, it is very straightforward to document our work as we go. Whenever we create a commit, we must write a message that\u2019s attached to it (we\u2019ll learn more about that), which almost mandates that we document what we are doing. This will create a history of our work which can effectively be used as a digital research notebook if done correctly. The way Git works also allows the creation of branches and tags, which can be used to keep track of different parts of the development. This is especially useful for large projects where many people may be working on different things in parallel.</p> </li> </ul> <p>Keypoints</p> <p>Why Git will make you a better researcher:</p> <ul> <li>You know you can always go back to a working version of your code</li> <li>You will have a way of showcasing your projects</li> <li>You will be able to distribute your code to others</li> <li>You will be able to modify other peoples\u2019 code and make contributions to it</li> <li>You will have a digital lab notebook </li> </ul>"},{"location":"tutorials/git/git/#fundamental-concepts","title":"Fundamental concepts","text":"<p>Before we get started with hands-on work, let\u2019s understand some basic concepts about Git. We\u2019ve already learned that Git tracks different versions of a project by using commits, which are like snapshots of a project. But let\u2019s take a closer look on how this works in practice, by learning about remotes and the staging area:</p> <p>Remotes Think of remotes as \u201ccloud copies\u201d of your Git repository. While you have your project on your local computer, a remote is a version stored on platforms like GitHub or GitLab. Remotes allow multiple people to work on the same project, sharing updates by pushing changes to the remote and pulling others\u2019 changes from it. For example, you can push your work to a remote to back it up or collaborate with teammates by pulling their changes into your local project.</p> <p>Staging area The staging area in Git is like a \u201cwaiting room\u201d for changes you want to commit. When you modify files, those changes don\u2019t go directly into a commit. Instead, you first add them to the staging area, where you can review and decide what will be included in your next commit. It gives you control to commit only specific changes rather than everything at once. Think of it as preparing ingredients on the counter before putting them into a recipe\u2014you only add what you need.</p> <p></p> <p>Keypoints</p> <ul> <li>Commits are snapshots of a repository.</li> <li>We can have a copy of our repository in a different location, called a remote. We can send (\u201cpush\u201d) and receive (\u201cpull\u201d) changes from the remote to interact with others\u2019 work, and also to back up or update our local copy.</li> <li>The staging area is where we keep track of the changes that we are going to commit, that is, which are going to be written in the repository history.</li> </ul>"},{"location":"tutorials/git/git/#2-your-first-git-repository","title":"2. Your first Git repository","text":"<p>Now that we\u2019ve learned the basics of version control, and reasons to use it, let\u2019s get some hands-on experience on how to create our first Git repository.</p> <p>Let\u2019s start navigating to the Documents folder and creating a new directory there.</p> <pre><code>cd\ncd Documents\nmkdir gitgood\ncd gitgood\n</code></pre> <p>Now that you\u2019re in the new <code>gitgood</code> directory, we can start a new repository with the following command:</p> <pre><code>git init\n</code></pre> <p>You should see a message like this:</p> <pre><code>Initialized empty Git repository in /home/username/Documents/gitgood/.git/\n</code></pre> <p>If we try to list the files in the repository, we can\u2019t see anything. Try again with the <code>-a</code> option:</p> <pre><code># This doesn't show anything\nls\n\n# This shows the following\nls -a\n</code></pre> <pre><code>. .. .git\n</code></pre> <p>We can see that we have created the <code>.git</code> directory. This hidden directory (hidden files and directories start with <code>.</code> character) will contain the Git repository, with all of the data that will be read and written by Git. If we delete this directory, we will lose all of the version control data stored by Git.</p> <p>Hidden Files</p> <p>Based on your previous knowledge of UNIX command line, try answering the following:     1. Why did the first <code>ls</code> command did not show anything?     2. What does the <code>-a</code> mean when we run <code>ls</code>?     3. If we don\u2019t know what the <code>-a</code>, or any other command flags mean, how can we find out?     4. What do the <code>.</code> and <code>..</code> files mean?</p> Solution <ol> <li>By default, <code>ls</code> does not display hidden files (starting with a <code>.</code> character). The <code>.git</code> directory hidden by default when we create it.  </li> <li><code>-a</code> shows all of the files and directories, including hidden ones.  </li> <li>If we don\u2019t know what a command-line flag means, we can try looking for the command in the man pages, for example by typing <code>man ls</code>.  </li> <li>The <code>.</code> and <code>..</code> files respectively refer to the current directory and the directory one level above (the <code>Documents</code>, in this case).</li> </ol> <p>We can now try one of the most important Git commands, which tells us the current state of our repository:</p> <pre><code>git status\n</code></pre> <pre><code>On branch main\n\nNo commits yet\n\nnothing to commit (create/copy files and use \"git add\" to track)\n</code></pre> <p>We can use <code>git status</code> as much as we want to check the state of the repository. In this case, there isn\u2019t anything very interesting, but once we start accumulating changes, it will become very useful.</p> <p>Nested directories</p> <p>Once we have run <code>git init</code> on a directory, there is no need to run it again in subdirectories of the original directory. That\u2019s why we should run the command on the parent directory of the project, and we can include additional subdirectories as needed.</p> <p>Keypoints</p> <ul> <li><code>git init</code> initializes a repository.</li> <li>Git stores all of its repository data in the <code>.git</code> directory.</li> </ul>"},{"location":"tutorials/git/git/#tracking-changes","title":"Tracking changes","text":"<p>We have successfully created a repository (yay!) so let\u2019s start making some changes so we understand how version control works. At the moment, our repository is completely empty (with exception of the <code>.git</code> directory), so can create a few files to get started.</p> <p>Any code project should have a README file, which, at the very least, should provide a brief overview of the contents of that project directory. Even though our directory is empty, we can get started with a README file:</p> <pre><code>touch README.md\n</code></pre> <p>The <code>touch</code> command creates an empty file. We will be formatting our README file in Markdown. If you haven\u2019t heard of Markdown, basically it\u2019s a simple, easy-to-use language markup language which GitHub fully supports.</p> Markdown Primer <p>Markdown files are plain text files. Even though Markdown has a range of features (such as acting as an extension of HTML), we can stick to the basics:  </p> <ul> <li><code>#</code> creates Level 1 Headings (usually the page title).</li> <li><code>##</code> creates Level 2 Headings (usually the different sections in the page).</li> <li>Subsequent Heading levels can be created with <code>###</code>, <code>####</code>, etc.</li> <li>Backticks (``) create  <code>mono-spaced text, useful for formatting code.</code></li> <li>** Bold text is written with double-asterisks. **</li> <li>*Italics is written with a single-asterisk.*</li> </ul> <p>Now open <code>README.md</code> on your favourite text editor, such as VS Code, nano, Vim, or good old Notepad, and let\u2019s add some content (we recommend that you use VS Code):</p> <pre><code>nano README.md\n</code></pre> <p>Add the following content:</p> <pre><code># 'gitgood' repository\n\nA repository to learn how to use Git.\n</code></pre> <p>If you type in <code>git status</code> and see what it shows:</p> <pre><code>git status\n</code></pre> <pre><code>On branch main\n\nNo commits yet\n\nUntracked files:\n  (use \"git add &lt;file&gt;...\" to include in what will be committed)\n        README.md\n\nnothing added to commit but untracked files present (use \"git add\" to track)\n</code></pre> <p>It\u2019s similar to what we had the first time, but we can see that it showed an untracked file. Git has detected that a new file has been created, but it\u2019s not performing any version control for it. We must first commit this file to our repository. Let\u2019s do so by using two fundamental Git commands:</p> <pre><code>git add README.md\n</code></pre> <p>The <code>git add &lt;FILENAME&gt;</code> command adds a file to the staging area. We learned in the previous section that the staging area is where we store the changes that we intend to commit to the repository. We can see the effect that this has on the repository by typing <code>git status</code> again:</p> <pre><code>git status\n</code></pre> <pre><code>On branch main\n\nNo commits yet\n\nChanges to be committed:\n  (use \"git rm --cached &lt;file&gt;...\" to unstage)\n        new file:   README.md\n</code></pre> <p>Depending on the version of Git you have, the output may be slightly different. But the main things is that this change, that is, of creating a new file, has been staged, and is now ready to be committed. Therefore, the <code>git add</code> command is used to add files to the staging area. Now that these changes area ready to be committed, we can move on with the next command:</p> <p><pre><code>git commit -m \"Add repository README\"\n</code></pre> <pre><code>[main (root-commit) 62a9ebb] Add repository README\n 1 file changed, 4 insertions(+)\n create mode 100644 README.md\n</code></pre></p> <p>The <code>git commit</code> command effectively records the changes that we made and added to the staging area into the repository history. Now, we\u2019ve created another snapshot of the repository, one that has the changes that we\u2019ve made, compared to the previous one where the repository was empty.</p> <p>Commit Messages</p> <p>The <code>-m</code> in the <code>git commit</code> command means <code>--message</code>, that is, the message associated with that particular commit. You should always write descriptive messages of what has been done in a particular commit. </p> <p>After all, one of the reasons of why Git is so powerful and adopted is that it allows you to document your work as you go, and this is largely done by writing (good) commit messages. This may seem a bit excessive at first, such as having to write something everytime you press \u201cSave\u201d on a Word document, but as your project grows and you add more and more code to it, it\u2019s important to be able to see what has been done in each commit. You can also just type <code>git commit</code> without the <code>-m</code>, in this case a text editor will pop up in the Terminal prompting you to write a commit message. </p> <p>We will learn how to write good commit messages later on in this lesson. But basically we want to describe what we changed and why we changed it.</p> <p>Now that we have made our first commit, let\u2019s check the <code>git status</code> again:</p> <pre><code>git status\n</code></pre> <pre><code>On branch main\nnothing to commit, working tree clean\n</code></pre> <p>The message is a bit different than before. Now, we don\u2019t see <code>No commits yet</code>, but rather, that we don\u2019t have anything to commit. That is because we haven\u2019t changed anything in the repository since our last commit.</p> Repository History <p>Now that we have a commit, we can learn a new command:</p> <pre><code>git log\n</code></pre> <pre><code>commit 62a9ebbef3d7a9e0e07f2344a86f10fa58e7479c (HEAD -&gt; main)\nAuthor: Vini Salazar &lt;17276653+vinisalazar@users.noreply.github.com&gt;\nDate:   Mon Sep 9 14:58:43 2024 +1000\n\n    Add repository README\n</code></pre> <p>The <code>git log</code> command shows a list of our commits. We can see the commit checksum (the long code after the word <code>commit</code>), the associated author and email, which is the same user name and email that we set up with <code>git config</code> earlier, the timestamp of the commit, and the commit message. The <code>git log</code> command is useful to get an understanding of recent activity in the repository.</p> <p>Let\u2019s modify the <code>README.md</code> file again and add some new lines:</p> <pre><code># 'gitgood' repository                                                                              \n\nA repository to learn how to use Git.\n\n## Section 1\nHow to git good at version control.\n</code></pre> <p>We\u2019ve added the <code>## Section 1</code> which will represent a new section of text in our Markdown document, and added a little bit of normal text underneath it.</p> <p>Let\u2019s see how this affects our repository by running <code>git status</code> again:</p> <p><pre><code>git status\n</code></pre> <pre><code>On branch main\nChanges not staged for commit:\n  (use \"git add &lt;file&gt;...\" to update what will be committed)\n  (use \"git restore &lt;file&gt;...\" to discard changes in working directory)\n        modified:   README.md\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n</code></pre></p> <p>Now that Git is keeping track of <code>README.md</code>, any changes that we make to the file will be tracked, so Git knows that we modified the file and added some lines to it. The same goes for when we delete lines from a file. </p> <p>Untracked Files</p> <p>Git will only detect differences in files which have been previously committed to the history. If the file is untracked, like <code>README.md</code> was before our first commit, Git will not record any changes. Be mindful of this, because if you make changes to untracked files, you may not be able to revert them to a previous version!</p> <p>The <code>git status</code> command shows that <code>README.md</code> was modified, but let\u2019s have a look at what specific changes happened. We can do this by running a new command:</p> <pre><code>git diff\n</code></pre> <pre><code>diff --git a/README.md b/README.md\nindex 24e122d..e96d76a 100644\n--- a/README.md\n+++ b/README.md\n@@ -2,3 +2,5 @@\n\n A repository to learn how to use Git.\n\n+## Section 1\n+How to git good at version control.\n</code></pre> <p>The <code>git diff</code> command shows the specific lines that have been changed. Lines that were added will have a <code>+</code> next to them and will be highlighted in green, and lines that were removed will have a <code>-</code> and will be highlighted in red. <code>git diff</code> is very useful in combination with <code>git status</code>, so we can see the current state of the repository and what has been changed.</p> <p>Let\u2019s add and commit that change, and check out log again:</p> <pre><code>git add README.md\ngit status  # (1)!\ngit diff  # (2)!\ngit commit -m \"Drafting Section 1 of README\"\ngit log\n</code></pre> <ol> <li>Check that <code>README.md</code> has been moved to the staging area.</li> <li><code>git diff</code> doesn\u2019t show the change anymore. Why do you think that is?</li> </ol> <p>We can see another commit has been added to the history.</p> <pre><code>commit 7d3487ad746e2cd6e0beaab3271de9e300a267ca (HEAD -&gt; main)\nAuthor: Vini Salazar &lt;17276653+vinisalazar@users.noreply.github.com&gt;\nDate:   Mon Sep 9 15:32:45 2024 +1000\n\n    Drafting Section 1 of README\n\ncommit 62a9ebbef3d7a9e0e07f2344a86f10fa58e7479c\nAuthor: Vini Salazar &lt;17276653+vinisalazar@users.noreply.github.com&gt;\nDate:   Mon Sep 9 14:58:43 2024 +1000\n\n    Add repository README\n</code></pre> <p>Tracking Changes</p> <p>Well done! You\u2019ve learned 6 new commands, and the fundamentals of version control. With this alone, you can start tracking changes in your local repository. Next, we are going to learn how to interact with GitHub, based on what we\u2019ve done so far.</p> <p>Keypoints</p> <p>We learned several new commands. Let\u2019s take note of them:</p> <ul> <li><code>git init</code> initialises a Git repository, which is contained within the hidden <code>.git</code> directory.</li> <li><code>git status</code> shows the current state of the repository, such as which files have been changed.</li> <li><code>git add</code> adds a file to the staging area, where we gather all of the changes that will be committed.</li> <li><code>git commit</code> writes the changes to history, permanently recording them to the repository.</li> <li><code>git log</code> shows the list of commits in the repository.</li> <li><code>git diff</code> shows the changes between the last commit and the current repository, showing how files have been changed.</li> </ul>"},{"location":"tutorials/git/git/#remotes-pushing-and-pulling","title":"Remotes: pushing and pulling","text":"<p>Now that we\u2019ve learned how to set up a local repository, let\u2019s push that to GitHub. Before we do that, let\u2019s have another look at the concept of remotes. We learned that remotes are a cloud copy of our repository. In order to push our repository to GitHub, we\u2019ll have to set the remote of our local repository to GitHub. </p> Creating a new repository <ol> <li>Open GitHub, and click on the <code>+</code> button in the top right corner, and select \u201cNew repository\u201d</li> </ol> <p></p> <ol> <li>Select a name for the repository. Usually we use the same name of the repository\u2019s parent directory.</li> </ol> <p></p> <ol> <li>On the following screen, you will have the commands to set the remote and push the repository from the command line.</li> </ol> <p></p> <p>Follow the commands on that screen and you will have succesfully pushed your repository to GitHub! On your repository, you can run <code>git remote -v</code> to see the URL of your new remote.</p> SSH and HTTPS authentication <p>Notice that this page has two options for authentication: \u201cSSH\u201d or \u201cHTTPS\u201d. If you followed the SSH access step on the Setup section, you should be able to use the SSH option, which is the default and the recommended one. However, if that doesn\u2019t work, you can switch your remote to HTTPS by using <code>git remote set-url origin &lt;HTTPS-URL-HERE&gt;</code>.</p> <p>Your new repository should look somewhat like this:</p> <p></p> <p>Notice how the <code>README.md</code> file that we wrote makes up the landing page of our repository. This is one of the reasons of why having a README is so important, especially for GitHub projects: it will be the \u201cfront page\u201d of your project. You can (and should) write any important information here. </p> <p>We have successfully pushed our local repository from our local machine to the remote. Now, let\u2019s make a change directly on our remote and pull our changes locally.</p> Pulling changes <ol> <li>On your new repository page, click on the pencil icon on the top-right side of the README.</li> </ol> <p></p> <ol> <li>Add a new section with level 2 headings (<code>##</code>) and write something. Click on \u201cCommit changes\u201d on the top right\u201d.</li> </ol> <p></p> <ol> <li>Write a descriptive commit message.</li> </ol> <p></p> <ol> <li>Your file should reflect the update you\u2019ve just made. Notice the commit stamp on the top.</li> </ol> <p></p> <ol> <li>On your Terminal, navigate to your repository and run <code>git pull</code>.</li> </ol> <p></p> <p>Syncing changes</p> <p>What do you think happens if you make a remote change, and then a local change, and you try to push the local changes before pulling the remote changes?</p> <p>Keypoints</p> <ul> <li>The <code>git push</code> command pushes local changes to the GitHub remote. Before running it, we must set our remote to the correct URL.</li> <li>The <code>git pull</code> command pulls remote changes to our local repository. We need to run it to sync our local repository to the newest updates on the remote.</li> <li>The <code>git remote</code> command is used to manage remotes, such as setting the GitHub URL, to view the configured remotes, and other actions.</li> </ul>"},{"location":"tutorials/git/git/#3-collaborating-with-git","title":"3. Collaborating with Git","text":"<p>So far, we\u2019ve learned how to set up a local repository, how to track changes, and how to sync our local repository with the remote by pushing and pulling. Now, let\u2019s see how collaborating with Git and GitHub works in practice. In this section, you will clone an existing repository, make changes to it, and submit those changes as a pull request.</p>"},{"location":"tutorials/git/git/#cloning-a-repository","title":"Cloning a repository","text":"<p>To start, we have two repositories to choose from, one in Python and one in R. Both repositories contain the same thing: a script that calculates the GC content of the sequences in a given FASTA file. Pick the language that you\u2019re most comfortable with to proceed:</p> <ul> <li>Python repository</li> <li>R repository</li> </ul> <p>Take a note of the contents of each repository: - A README file - The script with the code - An example data file - A LICENSE file</p> <p>Clone your chosen repository locally using the <code>git clone</code> command.</p> Cloning a repository <ol> <li>Click the <code>&lt; &gt; Code</code> button on the top right of the repository\u2019s contents.</li> </ol> <p></p> <p>This copies the remote\u2019s URL to your clipboard.</p> <ol> <li>Navigate to a suitable directory (not inside our previous <code>gitgood</code> repository), such as the Documents directory, and run <code>git clone &lt;URL&gt;</code></li> </ol> <p></p> <p>Well done! You now have a local copy of the code. Cloning is a powerful feature that allows us to effortlessly create a copy of an existing repository. If you make your code available on GitHub, people can clone it and customise it.</p>"},{"location":"tutorials/git/git/#undoing-changes","title":"Undoing changes","text":"<p>Now, let\u2019s try running the code in the repository:</p> PythonR <pre><code>python python_gc_content.py example.fasta\n</code></pre> <pre><code>Rscript R_gc_content.R example.fasta\n</code></pre> <p>You most likely got an error message like this one:</p> PythonR <pre><code>  File \"/path/to/python_gc_content/python_gc_content.py\", line 45\n    print(f\"Overall GC Content: {gc_content:.2f}%\"\n         ^\nSyntaxError: '(' was never closed\n</code></pre> <pre><code>Error: unexpected '}' in:\n\"  cat(sprintf(\"Overall GC Content: %.2f%%\\n\", gc_content)\n}\"\nExecution halted\n</code></pre> <p>Let\u2019s explore the log on the repository. Run <code>git log</code>:</p> <p></p> <p>Apparently, the last commit purposefully breaks the code so that we can fix it ourselves! We wouldn\u2019t know that if it weren\u2019t for a descriptive commit message.</p> <p>Now, there are two things we could do:</p> <ol> <li>Revert back to the previous commit. After all, version control would not be useful if we could not go back to a previous, working version of our code.</li> <li>Fix the code ourselves and commit the changes.</li> </ol> <p>There are multiple ways to revert changes in Git. Here, we will use the <code>git reset</code> command:</p> <pre><code>git reset --soft HEAD~1\n</code></pre> <p>There\u2019s a lot to unpack here. First is the <code>git reset</code> command itself. What it does is that it resets the current state of the repository, also called <code>HEAD</code>, to a specified state. In this case, we are resetting to one commit before the current state, hence <code>HEAD~1</code>. The <code>--soft</code> flag tells the command to undo the commit, but keep the changes in the staged area. Let\u2019s run <code>git status</code> to see what it shows:</p> <pre><code>git status\n</code></pre> <pre><code>On branch main\nYour branch is behind 'origin/main' by 1 commit, and can be fast-forwarded.\n  (use \"git pull\" to update your local branch)\n\nChanges to be committed:\n  (use \"git restore --staged &lt;file&gt;...\" to unstage)\n        modified:   python_gc_content.py\n</code></pre> <p>The changes from the commit that we reset are staged, but the commit itself was undone (you can see with <code>git log</code>). We can see exactly what that change was by running <code>git diff --staged</code>, which is just like <code>git diff</code> that we learned before, but highlights only the changes that are already staged.</p> <pre><code>git diff --staged\n</code></pre> PythonR <pre><code>diff --git a/python_gc_content.py b/python_gc_content.py\nindex 81aa457..8ec3fc4 100644\n--- a/python_gc_content.py\n+++ b/python_gc_content.py\n@@ -42,7 +42,7 @@ def main():\n    fasta_file = sys.argv[1]\n    full_sequence = read_fasta(fasta_file)\n    gc_content = calculate_gc_content(full_sequence)\n-    print(f\"Overall GC Content: {gc_content:.2f}%\")\n+    print(f\"Overall GC Content: {gc_content:.2f}%\"\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> <pre><code>diff --git a/R_gc_content.R b/R_gc_content.R\nindex abb31f4..e6fe7f0 100644\n--- a/R_gc_content.R\n+++ b/R_gc_content.R\n@@ -26,7 +26,7 @@ main &lt;- function() {\n   full_sequence &lt;- read_fasta(fasta_file)\n   gc_content &lt;- calculate_gc_content(full_sequence)\n\n-  cat(sprintf(\"Overall GC Content: %.2f%%\\n\", gc_content))\n+  cat(sprintf(\"Overall GC Content: %.2f%%\\n\", gc_content)\n }\n\n # Call main function if script is run\n</code></pre> <p>We can see that the code broke because, in the previous commit, a parenthesis was removed from a line. However, because that change is staged, the code remains broken. We can undo the staged change by running:</p> <pre><code>git restore --staged &lt;file&gt;\n</code></pre> <p>This removes the file from the staging area, but the change is still there (you can check it using <code>git status</code>).</p> <p>To fully restore the file to its previous state, you can run:</p> <pre><code>git restore &lt;file&gt;\n</code></pre> Git reset alternatives <p>Running these two commands, that is, to unstage and restore the changes after <code>git reset</code>, would be the equivalent of running:</p> <pre><code>git reset --hard HEAD~1\n</code></pre> <p>In this case, using the <code>--hard</code> flag undoes all of the changes from the current state (the <code>HEAD</code>) to the specified state (in this case, one commit previous to the <code>HEAD</code>). The reason we may want to use <code>--soft</code> instead of <code>--hard</code> is that sometimes we may not want to lose all of our uncommitted changes, but rather review them on a case-by-base basis.</p> <p>Another thing we could do is:</p> <pre><code>git checkout HEAD~1\n</code></pre> <p>The <code>git checkout</code> command is use to transition between branches. We haven\u2019t gone into the concept of branches yet so we will leave this one alone for now. But basically, by using <code>git checkout</code>, we can navigate between the repository at different points in time (that is, at each commit).</p> <p>Now that we have fully restored the breaking changes, let\u2019s try running the code again:</p> PythonR <pre><code>python python_gc_content.py example.fasta\n</code></pre> <pre><code>Rscript R_gc_content.R example.fasta\n</code></pre> <pre><code>Overall GC Content: 57.98%\n</code></pre> <p>This was the first way that we could fix what wrong with the code, by reverting to a previous version that we know that worked. Let\u2019s try the second approach, of fixing the change ourselves in a new commit. First, let\u2019s undo what we did by running <code>git reset</code>. By doing that, we moved to a previous commit in time. That means that our local copy is one commit behind the remote. So, we can go back to the broken version simply by running:</p> <pre><code>git pull\n</code></pre> <p>This will sync the remote with the local.</p> <p>Now, try perfoming the fix yourself. Once you make sure that the new code works, run <code>git add</code>, <code>git commit</code>. Raise your hand or put up a green post-it when you are done.</p> Solution <p>In order to fix the broken code, add a parenthesis that is missing at the end of the line causing the error:</p> PythonR <pre><code>    print(f\"Overall GC Content: {gc_content:.2f}%\")\n</code></pre> <pre><code>  cat(sprintf(\"Overall GC Content: %.2f%%\\n\", gc_content))\n</code></pre> <p>To add and commit the file, run:</p> <pre><code>git add python_gc_content.py  # or R\ngit commit -m \"Fix broken code\"\n</code></pre> <p>Well done!</p> <p>You fixed a broken a script and committed the result using Git. That is no easy feat! It will pave your way to making more contributions in the future.</p> <p>After making sure that the code works, push your changes using <code>git push</code>. What happens then?</p> <p>Because the repository that we cloned is under Melbourne Bioinformatics, we don\u2019t have write access to it. In order to push the code to GitHub, we need our own copy of the code, so we must fork the repository. Let\u2019s see how to do that.</p> <p>Keypoints</p> <ul> <li><code>git clone</code> copies a remote repository to our local repository.</li> <li>There are multiple ways to revert to previous changes, one of them is <code>git reset</code>.</li> <li><code>HEAD</code> indicates the current state of the repository.</li> <li>We cannot push to a remote repository if we do not have access to it.</li> </ul>"},{"location":"tutorials/git/git/#cloning-versus-forking","title":"Cloning versus forking","text":"<p>When we clone a repository, we download a copy of it locally, attached to the same remote (the GitHub repository) from which we cloned it from. We can make whatever changes we want locally, but in order to push those changes to the remote, we must have access to the GitHub repository. Unless it\u2019s our own repository or the owner of the repository has granted us with write access, we usually won\u2019t have access to it. To circumvent this problem, we should fork the repository. Forking a repository is similar to cloning, but we create a new remote, instead of a local copy, that we have control over.</p> <p>Let\u2019s fork the chosen repository and make changes to it.</p> Forking a repository <p>To fork a repository, navigate to the repository page on GitHub and click the \u201cFork\u201d button on the top-right:</p> <p></p> <p>You will be taken to the fork page. There\u2019s no need to change anything here, but make sure you are forking it with your profile as the \u201cOwner\u201d:</p> <p></p> <p></p> <p>Now you have your own copy of the repository, that you have total control over! Notice that the top-left shows that the repository was forked from the original repository.</p> <p></p> <p>Now, there are two ways to configure your local repository so that it follows your fork, rather than the original repository:</p> <ol> <li>Deleting and re-cloning: Simply delete the local repository (with the <code>rm -rf &lt;DIRECTORY_NAME&gt;</code> or right-click the directory and delete it), and clone it again, using the same approach that we used before.</li> <li>Updating the remote: if you ran the <code>git remote -v</code> command from inside the original repository that you cloned, you will have seen that it shows the remote URL of the repository, which you do not have access to. You can update this remote with the following command: <code>git remote set-url origin &lt;URL-OF-YOUR-FORK&gt;</code>. The URL of your fork is the same URL that you use it to clone it, which can be obtained by clicking the \u201cCode\u201d button on the GitHub interface. Use <code>git remote -v</code> to confirm that the remote has been updated.</li> </ol> <p>Now that your local repository is following the fork, rather than the original repository, you can push any changes that you make locally to the remote. Do this by running <code>git push</code>.</p>"},{"location":"tutorials/git/git/#pull-requests","title":"Pull requests","text":"<p>Even though you don\u2019t have access to the original repository, you can submit changes to it through a pull request. A pull request is a way of requesting that the owner of the repository that you\u2019re submitting the changes to to \u201cmerge\u201d (or pull) them into their repository.</p> <p>Let\u2019s make a pull request with the fix that we made to the original repository containing the code. If you haven\u2019t pushed the code after committing the fix that you made, do so by running <code>git push</code>.</p> Submitting a pull request <p>To create a pull request, go to the page of your fork on GitHub after pushing the fixed code. At the top of the code, there will be a bar noting the difference between your fork and the original repository. If you click on \u201cContribute\u201d, you can create a pull request:</p> <p></p> <p>After you click that, you will be taken to a screen to create your pull request. A default title will be given to your PR, but you can edit it if you want, and give it a description. Repositories may have different policies regarding the content of the PR, but for this one we can just keep it simple and create the pull request:</p> <p></p> <p>Once you are done, you will have created a pull request from your fork into the original repository. It will appear on the \u201cPull requests\u201d tab on the original repository. Authors and maintainers from that repository will be able to review your pull request, make comments, changes, and eventually merge it.</p> <p></p> <p>If you have your project available on GitHub, it is likely that you will have to review a pull request at some point!</p>"},{"location":"tutorials/git/git/#merge-conflicts","title":"Merge conflicts","text":"<p>Because of that, let\u2019s practice reviewing a pull request, that is, the scenario where someone would submit a pull request to our repository.</p> Reviewing a pull request <ol> <li>Create a new branch called <code>add-name</code> using the following command: <code>git checkout -b add-name</code>.</li> <li>Create a file named <code>CONTRIBUTORS.txt</code> and add a line with your name to it. Add and commit the changes, and push to your fork, using the following command: <code>git push --set-upstream origin add-name</code></li> <li>Find someone that has forked the same repository as you have (either Python or R). Ask a helper if you can\u2019t find someone that has cloned the same repository.</li> <li>Using the GitHub interface, make a pull request to each other\u2019s repository submitting the changes. Change the destination of your PR by using the dropdown menus above the \u201cCreate pull request\u201d button. Make sure you make the pull request to your partner\u2019s fork, and to the <code>add-name</code> branch.</li> </ol> <p></p> <p>What happens?</p> <p>If you followed the steps correctly, you should have created a conflict. This happens when two different users make changes to the same part of a file. Because when we created the file <code>CONTRIBUTORS.txt</code>, we added our name to the first line of the file, if someone submits a pull request doing the same, it will be like they are overwriting our changes. In order to merge the pull request, we must first fix the conflict. We can do this directly through the GitHub interface:</p> Fixing conflicts <p>When a pull request is created that conflicts with your repository, the pull request screen should indicate it:</p> <p></p> <p>When clicking \u201cResolve conflicts\u201d, it should bring up a text editor where we can edit the conflicting file:</p> <p></p> <p>Conflicts on Git always follow this format, where the conflicting lines have <code>&lt;&lt;&lt;</code>, <code>===</code>, and <code>&gt;&gt;&gt;</code> between them, indicating where the conflict happens.</p> <p>Erase the lines with <code>&lt;&lt;&lt;</code>, <code>&gt;&gt;&gt;</code> and <code>===</code> to fix the conflict. Make sure your name is the first line on the file, and the name of contributor, the second one. Your file should look like this:</p> <pre><code>- User 1\n- User 2\n</code></pre> <p>Click on \u201cResolve conflicts\u201d and \u201cCommit merge\u201d</p> <p></p> <p>This will create a new commit on the pull request:</p> <p></p> <p>Don\u2019t merge the pull request just yet! Let\u2019s finish our review first.</p> <p>After fixing the conflict, let\u2019s review our pull request. On the pull request screen, go to the \u201cFiles changed\u201d tab. </p> <p></p> <p>This tab allows us to review each file individually. Check the \u201cViewed\u201d checkbox next to the file, and the \u201cReview changes\u201d. This allows you to Comment, Approve or Request changes on the pull request. Select Comment or Approve.</p> <p></p> <p>You can now merge the PR:</p> <p></p> <p>After merging, go to your local repository and run <code>git pull</code>.</p> <p>Keypoints</p> <ul> <li>Forking a repository creates a new remote that we have control over.</li> <li>We can update the remote on our local repository using <code>git remote set-url &lt;REMOTE_NAME&gt; &lt;REMOTE_URL&gt;</code>.</li> <li>Pull requests are a way of collaborating that allows other people to merge our changes into their repository.</li> <li>Conflicts are when two commits modify the same parts of a file. We must resolve conflicts before merging them. This can be done by creating a new commit.</li> <li>Conflicts are denoted by <code>&lt;&lt;&lt;</code>, <code>&gt;&gt;&gt;</code> and <code>===</code> characters around the conflicting lines.</li> </ul>"},{"location":"tutorials/git/git/#4-tips-and-best-practices","title":"4. Tips and best practices","text":"<p>Well done!</p> <p>By following these steps, you\u2019ve learned the fundamentals of version control with Git.</p> <p>Next up, let\u2019s look at some tips and best practices to incorporate Git into your day-to-day work.</p>"},{"location":"tutorials/git/git/#how-to-incorporate-git-in-your-day-to-day-work","title":"How to incorporate Git in your day-to-day work","text":"<p>Adopting Git for beginners can be daunting at first. There are many commands to learn, it requires constant interaction with the command line, and instead of just pressing \u201cSave\u201d, or \u201cCtrl+S\u201d, you have to type in a message everytime you want to record your work. However, there are strategies to mitigate or circumvent these problems.</p> <p>One of them is to think of Git as a digital research notebook. Even if you\u2019re not doing full-blown software engineering, but rather just recording a data analysis project, Git is very useful in the sense that you can document your work as you execute it. Every time you commit a change, you are creating a structured record of that change, which is appropriate for data compliance requirements in most scenarios. By using Git to record your work, you are not only guaranteeing that you will have a back up of your code and the possibility of reverting specific changes if something breaks, but also creating a digital notebook of the what you have done. By thinking of Git like this, you can build up a habit of, for example, committing your work at the end of each day, describing what you have done, much like you would don on a laboratory notebook.</p> <p>The second strategy to take advantage of existing solutions to use Git. This could mean plugins for your IDE, the GitHub Desktop client, or other services like GitKraken. Git is a well-established software with many, many tools that support. Take advantage of that instead of struggling with the Git command-line.</p> <p>The third strategy is to, at the very least, to think of Git as a backup tool. Even though you may create backups of your code in platforms like Dropbox or Google Drive, you would have to sync your backups regularly in other to keep track of an evolving code base. By using Git, you can rest assured that you will have a cloud backup of your code, and you can rely on it in case your local machine stops working.</p> When to commit? <p>It is common for Git beginners to not know exactly when to commit their changes. Since commits can be seen as \u201ccheckpoints\u201d, a good time to commit changes is when things are working as intended. Are you trying to fix a bug, and the error message changed? Even though the code is not fully working, that may be worth a commit to record that you are on the right track. When you fix the code for certain, it is definitely worth a commit! Don\u2019t wait until things break again, because if you haven\u2019t committed your changes when the code was working, you won\u2019t be able to revert back to it. If you are making big changes to a file, such as writing large chunks of documentation, you can split your commits into different sections. For example, commit after you have finished drafting the Introduction, and then again after you\u2019ve finished drafting the Methodology. You can make additional commits later when you are reviewing and editing your text.</p> <p>When you\u2019re first starting with some new code or making fast progress on a project, you don\u2019t have to commit every single line of code (although this may be required if you\u2019re submitting changes to a large code base!). But it\u2019s important to start developing a feeling of \u201cwould I want/need to come back to this checkpoint if I had to?\u201d</p>"},{"location":"tutorials/git/git/#leveraging-the-github-interface","title":"Leveraging the GitHub interface","text":"<p>In regards to the second strategy of using existing solutions, you can do most Git operations very easily through the GitHub web interface. GitHub has advanced tremendously over the years, and not only you can do most basic operations directly through the interface, it also offers a number of features such as the ability to set up web pages; autolinked references and URLs and linking pull requests to issues, which help with project management; automated workflows through GitHub Actions, and many others.</p>"},{"location":"tutorials/git/git/#dos-and-donts","title":"Do\u2019s and Dont\u2019s","text":""},{"location":"tutorials/git/git/#do","title":"Do","text":"<ul> <li>Write good commit messages<ul> <li>Say why, not what you changed</li> <li>Document as you code</li> </ul> </li> <li>Make small changes</li> <li>Commit often</li> <li>Ignore large files (use <code>.gitignore</code>)</li> </ul>"},{"location":"tutorials/git/git/#dont","title":"Don\u2019t","text":"<ul> <li>Make vague commit messages</li> <li>Accumulate unrelated changes in a single commit</li> <li>Let things go stale \u2013 delete or \u201cstash\u201d them</li> <li>Commit large files to history \u2013\u00a0they will be there forever.</li> </ul> <p>Keypoints</p> <ul> <li>There are a number of strategies to incorporate Git into your day-to-day work.</li> <li>The learning curve can seem steep at first, but with time you will understand how valuable Git is and it will become easier and easier to use.</li> <li>GitHub offers numerous features that make adopting Git easier, and enable you to showcase your projects.</li> <li>There are a few best practices which will dramatically improve your efficiency with Git.</li> </ul>"},{"location":"tutorials/git/git/#glossary","title":"Glossary","text":"<p>Branch: An independent line of development within a repository, allowing you to work on different features or fixes without affecting the main project.</p> <p>Clone: Creates a local copy of a remote repository.</p> <p>Commit: A snapshot of changes to a repository, saved with a message describing the updates.</p> <p>Conflict: A situation where changes from different commits or branches cannot be merged automatically.</p> <p>Fork: Creates a personal copy of someone else\u2019s repository under your GitHub account for independent development.</p> <p>History: The record of all commits made in a repository, showing how the codebase evolved.</p> <p>Merge: Combines changes from one branch into another.</p> <p>Pull: Fetches and integrates changes from a remote repository into your local branch.</p> <p>Pull request: A request to merge (pull) changes from a repository that you own onto another repository. This is how contributions are submitted on GitHub.</p> <p>Push: Sends local changes to a remote repository.</p> <p>Remotes: Remote versions of your repository hosted on a server, allowing you to collaborate and sync changes with others.</p> <p>Repository: A storage space where your project\u2019s files and version history are kept.</p> <p>Staging Area: A space where you can prepare and review changes before committing them to the repository.</p> <p>Tags: Named markers pointing to specific commits, often used to label release versions.</p>"},{"location":"tutorials/gvl_launch/","title":"Index","text":"<p>PR reviewers and advice: Clare Sloggett, Simon Gladman, Nuwan Goonasekera</p> <p>Current slides: None</p> <p>Other slides:</p> <ul> <li>None yet</li> </ul>"},{"location":"tutorials/gvl_launch/gvl_launch/","title":"Gvl launch","text":""},{"location":"tutorials/gvl_launch/gvl_launch/#launching-a-personal-gvl-server-on-the-nectar-research-cloud","title":"Launching a Personal GVL Server on the NeCTAR Research Cloud","text":""},{"location":"tutorials/gvl_launch/gvl_launch/#tutorial-overview","title":"Tutorial Overview","text":"<p>This document guides you to launch your own GVL Analysis platform, with Galaxy, using your default NeCTAR allocation.</p> <p>The tutorial will go over:</p> <ol> <li>Accessing the NeCTAR dashboard using Australian Access Federation (AAF)    credentials</li> <li>Getting your NeCTAR Research Cloud credentials</li> <li>Launching the GVL image</li> <li>Accessing your GVL instance</li> <li>GVL services</li> <li>Shutting your machine down</li> </ol>"},{"location":"tutorials/gvl_launch/gvl_launch/#background","title":"Background","text":""},{"location":"tutorials/gvl_launch/gvl_launch/#what-is-the-gvl","title":"What is the GVL?","text":"<p>The Genomics Virtual Laboratory (GVL) is a research platform that can be deployed on the cloud.</p> <p></p> <p>A private GVL server is a virtual machine running on the cloud and contains a pre-installed suite of tools for performing bioinformatics analyses. It differs from public GVL servers (such as the Galaxy Tutorial Server, Galaxy Australia, and Galaxy Queensland) by providing full administrative access to the server, as well as the full suite of GVL services, whereas public GVL servers provide restricted access for security reasons. For example, public GVL servers do not provide access to the Ubuntu desktop, the Linux command line or JupyterHub at present.</p> <p>Accessing the GVL server is completely free on the Australian NeCTAR Research Cloud, provided that you have a account with NeCTAR with allocated resources.</p>"},{"location":"tutorials/gvl_launch/gvl_launch/#what-is-nectar","title":"What is NeCTAR?","text":"<p>The National eResearch Collaboration Tools and Resources project (NeCTAR) is an Australian programme that provides computing infrastructure and services to Australian researchers. The NeCTAR Cloud allows us to deploy virtual machines as a platform for research.</p> <p>While it is possible to launch the GVL on Amazon, you may have to pay Amazon usage charges (the GVL software itself is free).</p>"},{"location":"tutorials/gvl_launch/gvl_launch/#section-1-access-the-nectar-dashboard","title":"Section 1: Access the NeCTAR dashboard","text":"<ol> <li> <p>Login into the NeCTAR dashboard at     dashboard.rc.nectar.org.au.     Only members of the Australian Access Federation (AAF) can access Australian     Research Cloud resources. Most Australian universities are members of the     AAF, however, if you belong to an institution that is not a member of AAF,     GVL Help may be able to provide you     with credentials. You also have the option of using a commercial cloud     provider such as AWS to host your server.</p> </li> <li> <p>Choose your organisation from the list and login using your credentials.     If you are from the University of Melbourne, choose \u2018The University of     Melbourne\u2019 and not \u2018The University of Melbourne (with ECP)\u2019.</p> </li> <li> <p>Login with your institutional username and password. If this is the first     time you have accessed the Australian Research Cloud, you must agree to some     terms and conditions.</p> <p>When you log in for the first time, you are automatically allocated a trial project which lasts for 3 months. This trial project allows you to launch a medium instance (with 2 cores) which is sufficient for launching a GVL instance.</p> <p></p> <p>If you have projects which require more compute resources, you can apply for more allocation here.</p> </li> </ol>"},{"location":"tutorials/gvl_launch/gvl_launch/#section-2-get-your-cloud-credentials","title":"Section 2: Get your cloud credentials","text":"<p>Launching a GVL instance requires OpenStack API credentials from NeCTAR. These credentials allows the GVL launcher to create a new GVL Virtual Machine on your behalf. Obtaining these credentials is a 5 step process.</p> <p></p> <ol> <li> <p>From the NeCTAR dashboard, on the left sidebar, navigate to     Project &gt; Compute &gt; Access &amp; Security</p> </li> <li> <p>Click on the top \u2018API Access\u2019 tab.</p> </li> <li> <p>Click on the \u2018Download OpenStack RC File\u2019 button on the top right.     A file containing your credentials will be saved to your downloads folder.     This file will be needed later in the launch process.</p> </li> <li> <p>Next you must obtain your OpenStack password and record it securely for future use.     If you have ever done this step before, you should reuse your previously saved     password.</p> <p>To obtain your OpenStack password, click on your username on the top right hand corner and go to settings as shown below.</p> <p></p> <p>Click on the reset password link.</p> <p></p> </li> <li> <p>Once reset, your password will be displayed. Record this securely for all future     GVL launches.</p> <p></p> </li> </ol>"},{"location":"tutorials/gvl_launch/gvl_launch/#section-3-launch-your-personal-gvl-instance","title":"Section 3: Launch your personal GVL instance","text":"<ol> <li> <p>In a new browser tab, go to launch.usegalaxy.org</p> </li> <li> <p>You will see the screen below. Select the first option from the list - \u201cGenomics Virtual Lab\u201d.</p> <p> </p> </li> <li> <p>You will be asked to login with your preferred social network account.</p> <p> </p> </li> <li> <p>Once logged in, perform the following steps.</p> <p></p> <ul> <li> <ol> <li>Select NeCTAR for the question \u201cOn which cloud would you like to launch your appliance\u201d</li> </ol> </li> <li> <ol> <li>Click \u201cload credentials from file\u201d and provide file you downloaded in Section 2.3</li> </ol> </li> <li> <ol> <li>Provide the OpenStack password you obtained in Section 2.5.</li> </ol> </li> <li> <ol> <li>Click \u201cTest and Use these Credentials\u201d. The Next button will now be activated.</li> </ol> </li> </ul> </li> <li> <p>Click the next button, and provide the following options.</p> <p> </p> <ul> <li>Password: Choose a strong password and remember it. This is the   password you will use later to log into your instance.</li> </ul> </li> <li> <p>Optional advanced options     Toggle the \u2018Advanced cloudlaunch options\u2019 option to see more options. For     this tutorial, it is not necessary to modify any of the advanced options.</p> <ul> <li>Deployment name: You can override the name with a name of your choice.   It is recommended you choose a unique name if you launch multiple instances.</li> <li>Instance type: Keep the default: Medium (2 vcpu / 8GB RAM)</li> <li>Root Volume Storage: Keep the default: Instance storage</li> <li>Placement Zone: You can also choose the region of where your server is   hosted. If you are doing lots of data transfer, it may be beneficial to   pick a location close to your physical location. More information about   zones can be found here.</li> <li>Key pair: Key pairs are SSH credentials that can be used to access   your instance. You can create and import key pairs in the NeCTAR dashboard   by navigating to Project &gt; Compute &gt; Access &amp; Security &gt; Key Pairs and   creating or importing a key pair.</li> </ul> </li> <li> <p>Click \u2018Launch\u2019 to launch a GVL.     The launch process takes 2-5 minutes to start the machine and another 5     minutes to start and configure Galaxy.</p> <p></p> <p>If an error occurs, or the launch does not complete in 10 minutes, navigate back to the launch page and try selecting a different availability zone under the advanced cloudlaunch options -&gt; Placement Zone field.</p> </li> </ol>"},{"location":"tutorials/gvl_launch/gvl_launch/#section-4-access-your-gvl-instance","title":"Section 4: Access your GVL instance","text":"<ol> <li> <p>Once your instance has finished launching, click on the Access address     to access your GVL dashboard.</p> <p></p> <p>If you accidentally closed the launch page, you can find your access address at any time by logging back into launch.usegalaxy.org and navigating to the \u201cMy Appliances\u201d section through the menu bar.</p> </li> <li> <p>Explore the GVL dashboard.     Have a read through of the services provided by the GVL.</p> </li> </ol> <p></p>"},{"location":"tutorials/gvl_launch/gvl_launch/#section-5-gvl-services","title":"Section 5: GVL services","text":"<p>Listed below are short descriptions of the services the GVL provides.</p>"},{"location":"tutorials/gvl_launch/gvl_launch/#galaxy","title":"Galaxy","text":"<p>Galaxy is a web-based platform for computational biomedical research. The GVL has a number of Galaxy tutorials available here.</p> <p></p> <p>To begin using Galaxy, register as a user by navigating to User &gt; Register on the top Galaxy bar.</p>"},{"location":"tutorials/gvl_launch/gvl_launch/#cloudman","title":"CloudMan","text":"<p>CloudMan is a cloud manager that manages services on your GVL instance. Use Cloudman to start and manage your Galaxy service and to add additional nodes to your compute cluster (if you have enough resources).</p> <p>You can log into CloudMan by using the username \u2018ubuntu\u2019 and your cluster password.</p> <p></p> <p>You can also shut down your instance (permanently) with CloudMan.</p>"},{"location":"tutorials/gvl_launch/gvl_launch/#lubuntu-desktop","title":"Lubuntu Desktop","text":"<p>Lubuntu is a lightweight desktop environment through which you can run desktop applications on your virtual machine through your web browser. You can also access the GVL command line utilities through the desktop.</p> <p>You can log into Lubuntu Desktop using the username \u2018ubuntu\u2019 and your cluster password.</p> <p></p>"},{"location":"tutorials/gvl_launch/gvl_launch/#ssh","title":"SSH","text":"<p>Secure Shell (SSH) is a network protocol that allows us to connect to a remotely machine. You can login to your virtual machine remotely through an SSH client.</p> <p>If you are using Windows, you will need to download an SSH client such as PuTTY. If you are using OSX, open up a Terminal window.</p> <p>If you are unfamiliar with the command line and UNIX, many tutorials on UNIX can be found online.</p> <p>You can ssh into your machine using the either the username \u2018ubuntu\u2019 or the username \u2018researcher\u2019 and using your cluster password. It is recommended to use the researcher account when you are doing your computational research and use the ubuntu account when you need administrative powers (such as installing software).</p> <p></p>"},{"location":"tutorials/gvl_launch/gvl_launch/#jupyterhub","title":"JupyterHub","text":"<p>JupyterHub is a web-based interactive computational environment where you can combine code execution, text, mathematics, plots and rich media into a single document. Currently, JupyterHub can connect to Python2 and Python3 kernals.</p> <p>If you are unfamiliar with Python, there are many tutorials available online.</p> <p>You can log into JupyterHub with the username \u2018researcher\u2019 and your cluster password.</p> <p>You may need to install Python packages you intend to use via the command line beforehand.</p> <p></p>"},{"location":"tutorials/gvl_launch/gvl_launch/#rstudio","title":"RStudio","text":"<p>RStudio Server gives browser-based access to RStudio, the popular programming and analysis environment for the R programming language. You can find out more about RStudio here, and the R programming language here.</p> <p>You can log into RStudio with the username \u2018researcher\u2019 and your cluster password.</p> <p></p>"},{"location":"tutorials/gvl_launch/gvl_launch/#public-html","title":"Public HTML","text":"<p>This is a shared web-accessible folder. Any files you place in the directory <code>/home/researcher/public_html</code> will be publicly accessible.</p>"},{"location":"tutorials/gvl_launch/gvl_launch/#pacbio-smrt-portal","title":"PacBio SMRT Portal","text":"<p>PacBio\u2019s SMRT Portal is an open source software suite for the analysis of single molecule, real-time sequencing data.</p> <p>Before you use SMRT Portal, you need to firstly install it through the Admin console. Please note PacBio recommends the use of a 16 core instance with 64GB of RAM (or higher) for this package.</p> <p>To install SMRT Portal from the GVL dashboard:</p> <ul> <li> <p>Click on \u2018Admin\u2019 in the top navigation bar.</p> </li> <li> <p>Log in with the username \u2018ubuntu\u2019 and your cluster password. The screen will now show all the tools available to be installed.</p> </li> <li> <p>Scroll down to \u2018SMRT Analysis\u2019, and click \u2018install\u2019.</p> </li> <li> <p>The install is complete when SMRT Portal is available as a tool on the GVL dashboard, and a green tick is displayed.</p> </li> </ul> <p>When launching SMRT Portal for the first time, you will need to register yourself as a new user.</p>"},{"location":"tutorials/gvl_launch/gvl_launch/#section-6-shutting-your-machine-down","title":"Section 6: Shutting your machine down","text":"<p>There are two ways to terminate your instance. Terminating your instance is permanent and all data will be deleted (unless you have persistent volume storage which you will need to apply for).</p> <ol> <li> <p>Via Cloudman     Log into CloudMan by using the username \u2018ubuntu\u2019 and your cluster password.     Click the Shut down\u2026 button under Cluster Controls.</p> </li> <li> <p>Via the NeCTAR dashboard     Navigate to the Instances     page by navigating to Project &gt; Compute &gt; Instances on the left panel. Find     the instance you want to terminate, and on the right-most column (Actions),     click on the arrow button, and select Terminate Instance.</p> </li> </ol>"},{"location":"tutorials/hpc/","title":"Index","text":"<p>PR reviewers and advice: Andrew Robinson, Peter Georgeson, Chol-hee Jung, Ben Moran</p> <p>Current slides: HTML in repository</p> <p>Other slides:</p> <ul> <li>None yet</li> </ul>"},{"location":"tutorials/hpc/hpc/","title":"Hpc","text":""},{"location":"tutorials/hpc/hpc/#high-performance-computing","title":"High-Performance Computing","text":"<p>A hands-on-workshop covering High-Performance Computing (HPC).</p>"},{"location":"tutorials/hpc/hpc/#overview","title":"Overview","text":"<p>Using High Performance Computing (HPC) resources such as Melbourne Bioinformatics in an effective and efficient manner is key to modern research. This workshop will introduce you to HPC environments and assist you to get on with your research.</p>"},{"location":"tutorials/hpc/hpc/#learning-objectives","title":"Learning Objectives","text":"<p>At the end of the course, you will be able to:</p> <ul> <li>Define \u2018What is HPC?\u2019</li> <li>Load software modules</li> <li>Submit jobs</li> <li>Select job queues</li> <li>Monitor your job\u2019s progress</li> <li>Know what resources you can request</li> <li>Select appropriate resources</li> </ul>"},{"location":"tutorials/hpc/hpc/#requirements","title":"Requirements","text":"<p>You will need a basic understanding of Unix, or you should have attended an Introduction to Unix workshop in the past.</p> <p>All participants are required to bring their own laptop computers.</p>"},{"location":"tutorials/hpc/hpc/#introduction","title":"Introduction","text":"<p>Before we commence the hands-on part of this workshop we will first give a short 30 minute talk to introduce the main concepts of High-Performance Computing. The slides are available if you would like.  </p> <p>Additionally the following reference material is available for later use:</p> Reference Material   ### What is an HPC?  An HPC is simply a large collection of server-grade computers working together to solve large problems.  * **Big**: HPCs typically have lots of CPUs and Memory and consequently large jobs. * **Shared**: There are usually lots of users making use of it at one time. * **Coordinated**: There is a coordinator program to ensure fair-use between its users. * **Compute Collection**: HPCs use a number of computers at once to solve lots of large jobs.    **Figure**: The user (face at top) interacts with their local PC/Laptop through the keyboard and screen.  The PC/Laptop will  connect to the Head/Login node of the HPC interactively.  The Head/Login node will send the jobs off to the Compute Nodes when one is available.   ### Why use HPCs?  The main reason we use HPCs is because they are quite big.  Given their size, they are usually very expensive, however through  sharing the resources the per user/job cost can be kept low.  * **Many CPUs**: HPCs typically have hundreds to tens of thousands of CPUs.  Compare this with the 4 or 8 that your PC/Laptop might have. * **Large Memory**: Hundreds of GBs to multiple TBs of RAM are typical for each node. * **Efficient use**: Through sharing the resources each user can have access to a very large computer for a period and hand  it back for others to use later.   ### Software Modules  There are typically hundreds to thousands of software packages installed on an HPC.  Given that each can have its own special  requirements and multiple versions will be made, software on the HPC will most commonly be packaged and only made available  to you when you request it.  * **Packaged**: to avoid conflicts between software, each is packaged up into a module and only used on demand. * **Loadable**: before using a software module you need to load it. * **Versions**: given not all users want to use the same version of software (and to compare new results with old you might     need the same version)    each version is made into its own software module so you have ultimate control.  ### Job Submission  Job Submission is the process of instructing the HPC to perform a task for you.  Depending on the HPC software installed on  your HPC, the process of doing so might be different.  * **SLURM**: this workshop uses an HPC that uses the SLURM HPC software.  Some common alternatives (not covered) are PBS or     SGE/OGE. * **Queues (Partition)**: when a job is submitted it is added to a work queue; in SLURM this is called a Partition. * **Batch**: HPC jobs are not 'interactive'.  By this we mean, you can't type input into your job's programs and you won't     immediately see the output that your program prints on the screen.   #### Resources  So that SLURM knows how to schedule and fit jobs around each other, you need to specify what resources your job will use. That is, you need to tell it how many CPUs, RAM, Nodes (servers), and Time you need.  1. **CPUs**: most software is limited using 1 CPU by default but many can use more than one (or you can run multiple copies at once).    The number of CPUs you specify needs to match how many things your software can do at once. 2. **Memory**: you need to estimate (or guess) how much memory (RAM) your program needs. 3. **Nodes**: most software will only use one of the HPC's Nodes (i.e. one server), but some software can make use of more than    one to solve the problem sooner. 4. **Time**: like when you are scheduling meetings, SLURM needs to know how long each job will take (maximum) so it can organise    other jobs afterwards.  #### Job Types  There are two types of jobs that you can submit:  1. **Shared**: a shared job (as the name suggests) is one that shares a node with other jobs.  This is the default and preferred method. 2. **Exclusive**: an exclusive job gets a single (or multiple) nodes to itself.  Given this exclusivity, this type of job must know how     to use multiple CPUs as most HPCs have at least 16 CPUs per node."},{"location":"tutorials/hpc/hpc/#connecting-to-the-hpc","title":"Connecting to the HPC","text":"<p>To begin this workshop you will need to connect to the HPC. Today we will use barcoo. The computer called barcoo.vlsci.org.au is the one that coordinates all the HPC\u2019s tasks.</p> <p>Server details:</p> <ul> <li>host: barcoo.vlsci.org.au</li> <li>port: 22</li> <li>username: (provided at workshop)</li> <li>password: (provided at workshop)</li> </ul> <p>Connection instructions:</p> Mac OS X / Linux  Both Mac OS X and Linux come with a version of ssh (called OpenSSH) that can be used from the command line.  To use OpenSSH you must  first start a terminal program on your computer.  On OS X the standard terminal is called Terminal, and it is installed by default.  On Linux there are many popular terminal programs including: xterm, gnome-terminal, konsole (if you aren't sure, then xterm is a good  default).  When you've started the terminal you should see a command prompt.  To log into *barcoo*, for example, type this command at  the prompt and press return (where the word *username* is replaced with your *barcoo* username):  *$ ssh username@barcoo.vlsci.org.au*  The same procedure works for any other machine where you have an account except that if your Unix computer uses a port other than 22 you will need to specify the port by adding the option *-p PORT* with PORT substituted with the port number.  You may be presented with a message along the lines of:  <pre><code>The authenticity of host 'barcoo.vlsci.org.au (131.172.36.150)' can't be  established.\n...\nAre you sure you want to continue connecting (yes/no)?\n</code></pre>  Although you should never ignore a warning, this particular one is nothing to be concerned about; type **yes** and then **press enter**.  If all goes well you will be asked to enter your password.  Assuming you type the correct username and password the system should  then display a welcome message, and then present you with a Unix prompt.  If you get this far then you are ready to start entering  Unix commands and thus begin using the remote computer.   Windows  On Microsoft Windows (Vista, 7, 8) we recommend that you use the PuTTY ssh client.  PuTTY (putty.exe) can be downloaded  from this web page:  [http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html](http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html)  Documentation for using PuTTY is here:  [http://www.chiark.greenend.org.uk/~sgtatham/putty/docs.html](http://www.chiark.greenend.org.uk/~sgtatham/putty/docs.html)  When you start PuTTY you should see a window which looks something like this:    To connect to *barcoo* you should enter *barcoo.vlsci.org.au* into the box entitled \"Host Name (or IP address)\"  and *22* in the port,  then click on the Open button. All of the settings should remain the same as they were when PuTTY started (which should be the  same as they are in the picture above).  In some circumstances you will be presented with a window entitled PuTTY Security Alert. It will say something along the lines  of *\"The server's host key is not cached in the registry\"*. This is nothing to worry about, and you should agree to continue (by  clicking on Yes). You usually see this message the first time you try to connect to a particular remote computer.  If all goes well, a terminal window will open, showing a prompt with the text *\"login as:\"*. An example terminal window is shown  below. You should type your *barcoo* username and press enter. After entering your username you will be prompted for your  password. Assuming you type the correct username and password the system should then display a welcome message, and then  present you with a Unix prompt. If you get this far then you are ready to start entering Unix commands and thus begin using  the remote computer."},{"location":"tutorials/hpc/hpc/#topic-1-exploring-an-hpc","title":"Topic 1: Exploring an HPC","text":"<p>An HPC (short for \u2018High-Performance Computer\u2019) is simply a collection of Server Grade computers that work together to solve large problems.</p> <p></p> <p>Figure: Overview of the computers involved when using an HPC.  Computer systems are shown in rectangles and arrows represent interactions.</p>"},{"location":"tutorials/hpc/hpc/#exercises","title":"Exercises","text":""},{"location":"tutorials/hpc/hpc/#11-what-is-the-contact-email-for-your-hpcs-system-administrator","title":"1.1) What is the contact email for your HPC\u2019s System Administrator?","text":"Hint  When you login, you will be presented with a message; this is called the *Message Of The Day* and usually includes lots of useful information.  On *barcoo* this includes a list of useful commands, the last login details for your account and the contact email of the system administrator   Answer  Depending on which computer you are working:  * SNOWY &amp; BARCOO: help@vlsci.unimelb.edu.au"},{"location":"tutorials/hpc/hpc/#12-run-the-sinfo-command-how-many-nodes-are-there-in-this-hpc","title":"1.2) Run the sinfo command.  How many nodes are there in this hpc?","text":"Hint  *barcoo[2-4]* is shorthand for *barcoo2 barcoo3 and barcoo4* and *barcoo[1,5]* is shorthand for *barcoo1* and *barcoo5*   Additional Hint  Have a look at the NODELIST column.  Only count each node once.  <pre><code>$ sinfo\nPARTITION AVAIL  TIMELIMIT  NODES  STATE NODELIST\ncompute*     up 200-00:00:      3    mix lims-hpc-[2-4]\ncompute*     up 200-00:00:      2   idle lims-hpc-[1,5]\nbigmem       up 200-00:00:      1   idle lims-hpc-1\n8hour        up   08:00:00      3    mix lims-hpc-[2-4]\n8hour        up   08:00:00      3   idle lims-hpc-[1,5],lims-hpc-m\n</code></pre> NOTE: the above list will vary depending on the HPC setup.   Answer  The *sinfo* command lists all available partitions and the status of each node within them.  If you count up the names of nodes (uniquely) you will get the total nodes in this cluster.    * BARCOO: **70** (*barcoo001* through *barcoo070*) * SNOWY: **43** (*snowy001* through *snowy043*)   Alternate Method  An automatic (though more complex) way would have been running the following command:  <pre><code>$ scontrol show node | grep NodeName | wc -l\n</code></pre>  Where:  * *scontrol show node*: lists details of all nodes (over multiple lines) * *grep NodeName*: only shows the NodeName line * *wc -l*: counts the number of lines"},{"location":"tutorials/hpc/hpc/#topic-2-software-modules","title":"Topic 2: Software Modules","text":"<p>Up to this point we have been using only standard Unix software packages which are included with Linux/Unix computers. Large computing systems such as HPCs often use a system of modules to load specific software packages (and versions) when needed for the user.</p> <p>In this topic we will discover what science software modules (tools) are available and load them ready for analysis.</p> <p>This topic uses the man and module commands heavily</p>"},{"location":"tutorials/hpc/hpc/#exercises_1","title":"Exercises","text":""},{"location":"tutorials/hpc/hpc/#21-what-happens-if-you-run-the-module-command-without-any-options-arguments","title":"2.1) What happens if you run the module command without any options / arguments?","text":"Hint  Literally type *module* and press *ENTER* key.   Answer  **Answer**: It prints an error followed by a list of available options / flags  <pre><code>$ module\ncmdModule.c(166):ERROR:11: Usage is 'module command  [arguments ...] '\n\n  Modules Release 3.2.10 2012-12-21 (Copyright GNU GPL v2 1991):\n\n  Usage: module [ switches ] [ subcommand ] [subcommand-args ]\n\nSwitches:\n    -H|--help       this usage info\n    -V|--version        modules version &amp; configuration options\n    -f|--force      force active dependency resolution\n    -t|--terse      terse    format avail and list format\n    -l|--long       long     format avail and list format\n    -h|--human      readable format avail and list format\n    -v|--verbose        enable  verbose messages\n    -s|--silent     disable verbose messages\n    -c|--create     create caches for avail and apropos\n    -i|--icase      case insensitive\n    -u|--userlvl &lt;lvl&gt;  set user level to (nov[ice],exp[ert],adv[anced])\n  Available SubCommands and Args:\n    + add|load      modulefile [modulefile ...]\n    + rm|unload     modulefile [modulefile ...]\n    + switch|swap       [modulefile1] modulefile2\n    + display|show      modulefile [modulefile ...]\n    + avail         [modulefile [modulefile ...]]\n    + use [-a|--append] dir [dir ...]\n    + unuse         dir [dir ...]\n    + update\n    + refresh\n    + purge\n    + list\n    + clear\n    + help          [modulefile [modulefile ...]]\n    + whatis        [modulefile [modulefile ...]]\n    + apropos|keyword   string\n    + initadd       modulefile [modulefile ...]\n    + initprepend       modulefile [modulefile ...]\n    + initrm        modulefile [modulefile ...]\n    + initswitch        modulefile1 modulefile2\n    + initlist\n    + initclear\n</code></pre>"},{"location":"tutorials/hpc/hpc/#22-how-do-you-find-a-list-of-available-software","title":"2.2) How do you find a list of available software?","text":"Hint  Try the *module* command.  Don't forget the *man* command to get help for a command   Additional Hint  Run the command *man module*  Use a search to find out about the *avail* subcommand (e.g. /avail&lt;enter&gt;)   Answer  The module command is used to show details of software modules (tools).  **Answer**:  <pre><code>$ module avail\n\n------------------- /usr/share/Modules/modulefiles --------------------\ndot         module-git  module-info modules     null        use.own\n\n------------------- /usr/local/Modules/modulefiles --------------------\nacana/1.60                         mafft-gcc/7.215\naftrrad/4.1.20150201               malt/0.1.0\narlequin/3.5.1.3                   matplotlib-gcc/1.3.1\n...\n</code></pre>  The modules list has been shortened because it is very long.  The modules after the */usr/local/Modules/modulefiles* line are the science software; before this are a few built-in ones that you can ignore."},{"location":"tutorials/hpc/hpc/#23-how-many-modules-are-there-starting-with-f","title":"2.3) How many modules are there starting with \u2018f\u2019?","text":"Hint  Run the command *man module*  Use a search to find out about the *avail* subcommand (e.g. /avail&lt;enter&gt;).  You may have to press 'n' a few times to reach the section where the it describes the *avail* subcommand.   Additional Hint  &gt; If an argument is given, then each directory in the MODULEPATH is searched for modulefiles &gt; whose pathname match the argument  This is a quote from the manual page for the module command explaining the avail subcommand.  It uses rather technical language but basically it's saying you can put search terms after the avail subcommand when entering the command.   Answer  The man page told us that we could put a search term after *module avail*.  <pre><code>$ module avail f\n------------------- /usr/local/Modules/modulefiles -------------------\nfasta-gcc/35.4.12            flex-gcc/2.5.39\nfastqc/0.10.1                fontconfig-gcc/2.11.93\nfastStructure-gcc/2013.11.07 freebayes-gcc/20140603\nfastStructure-gcc/20150320   freetype-gcc/2.5.3\nfastx_toolkit-gcc/0.0.14\n</code></pre>  **Answer**: 26 modules  NOTE: this was correct at time of writing this workshop and might increase over time so don't be alarmed if you got more   Alternate Method  To get a fully automated solution your could do the following command:  <pre><code>$ module -l avail 2&gt;&amp;1 | grep \"^f\" | wc -l\n</code></pre>  Where:  * *module -l avail*: lists all modules (in long format, i.e. one per line) * *2&gt;&amp;1*: merges output from *standard error* to the *standard output* so it can be feed into grep.  For some reason the developers of the *module* command thought it was a good idea to output the module names on the *error* stream rather than the logical *output* stream. * *grep \"^f\"*: only shows lines beginning with *f* * *wc -l*: counts the number of lines"},{"location":"tutorials/hpc/hpc/#24-run-the-pear-command-without-loading-it-does-it-work","title":"2.4) Run the pear command (without loading it), does it work?","text":"Hint  This question is very literal   Answer <pre><code>$ pear\n-bash: pear: command not found\n</code></pre>  The error you see is from BASH, it is complaining that it doesn't know anything about a command called 'pear'  **Answer**: No, command not found"},{"location":"tutorials/hpc/hpc/#25-how-would-we-load-the-pear-module","title":"2.5) How would we load the pear module?","text":"Hint  Check the man page for *module* again and look for a subcommand that might load modules; it is quite literal as well.   Additional Hint  Run the command *man module*  Use a search to find out about the *load* subcommand (e.g. /load&lt;enter&gt;)   Answer <pre><code>$ module load pear-gcc/0.9.4\n</code></pre> -gcc | -intel: Lots of modules will have either -gcc or -intel after the software name.  This refers to the compiler that was used to make the software.  If you have a choice then usually the -intel one will be faster. VERSIONS: module load pear-gcc would have been sufficient to load the module however it is best-practice (in science) to specify the version number so that the answer you get today will be the answer you get in 1 year time.  Some software will produce different results with different versions of the software."},{"location":"tutorials/hpc/hpc/#26-now-its-loaded-run-pear-again-what-does-it-do","title":"2.6) Now it\u2019s *load*ed, run pear again, what does it do?","text":"Hint  The paper citation gives a clue.   Answer <pre><code>$ module load pear-gcc/0.9.4\n[15:59:19] training21@lims-hpc-m ~ $ pear\n ____  _____    _    ____\n|  _ \\| ____|  / \\  |  _ \\\n| |_) |  _|   / _ \\ | |_) |\n|  __/| |___ / ___ \\|  _ &lt;\n|_|   |_____/_/   \\_\\_| \\_\\\nPEAR v0.9.4 [August 8, 2014]  - [+bzlib]\n\nCitation - PEAR: a fast and accurate Illumina Paired-End reAd mergeR\nZhang et al (2014) Bioinformatics 30(5): 614-620 | doi:10.1093/bioinformatics/btt593\n\n... REST REMOVED ...\n</code></pre>  **Answer**: \"PEAR: a fast and accurate Illumina Paired-End reAd mergeR\" (i.e. merges paired dna reads into a single read when they overlap)"},{"location":"tutorials/hpc/hpc/#27-list-all-the-loaded-modules-how-many-are-there-where-did-all-the-others-come-from","title":"2.7) List all the loaded modules. How many are there? Where did all the others come from?","text":"Hint  Use man to find a subcommand that will list currently loaded modules.  We are not really expecting you to be able to answer the 2nd question however if you do get it correct then well-done, that was very tough.   Answer  ** *List* all the loaded modules. How many are there?**  <pre><code>$ module list\nCurrently Loaded Modulefiles:\n  1) gmp/5.1.3         3) mpc/1.0.2         5) bzip2-gcc/1.0.6\n  2) mpfr/3.1.2        4) gcc/4.8.2         6) pear-gcc/0.9.4\n</code></pre> **Answer**: 6  **Where did all the others come from?**  You may have noticed when we loaded *pear-gcc* the module called *gcc* was also loaded; this gives a hint as to where the others come from.  **Answer**: They are *dependencies*; that is, they are supporting software that is used by the module we loaded.  Additionally, some HPC's automatically load some modules for you when you login."},{"location":"tutorials/hpc/hpc/#28-how-do-you-undo-the-loading-of-the-pear-module-list-the-loaded-modules-again-did-they-all-disappear","title":"2.8) How do you undo the loading of the pear module?  List the loaded modules again, did they all disappear?","text":"Hint  Computer Scientists are not always inventive with naming commands, try something starting with *un*   Answer  **How do you undo the loading of the *pear* module?**  <pre><code>$ module unload pear-gcc\n</code></pre>  **Answer**: the *unload* sub-command removes the named module from our current SSH session.  **List the loaded modules again, did they all disapear?**  **Answer**: Unfortunately not, the module command is not smart enough to determine if any of the other modules that were loaded are still needed or not so we will need to do it manually (or see next question)"},{"location":"tutorials/hpc/hpc/#29-how-do-you-clear-all-loaded-modules","title":"2.9) How do you clear ALL loaded modules?","text":"Hint  It's easier than running *unload* for all modules  This one isn't that straight forward; try a [synonym](https://www.google.com.au/search?q=rid+synonym) of *rid*.   Additional Hint  We will *purge* the list of loaded modules.   Answer <pre><code>$ module purge\n</code></pre>  **Answer**: running the *purge* sub-command will unload all modules you loaded (and all dependencies).  **Alternative**: if you close your SSH connection and re-open it the new session will be blank as well.   BEFORE CONTINUING: If you are using BARCOO or SNOWY you will need to load the default commands again.  Do so by running module load vlsci"},{"location":"tutorials/hpc/hpc/#topic-3-job-submission","title":"Topic 3: Job Submission","text":"<p>Up to this point in the workshop (and the previous Unix workshop) we have only used the head-node of the HPC.  While this is OK for small jobs, it\u2019s unworkable for most jobs. In this topic we will start to learn how to make use of the rest of the HPCs immense compute power</p>"},{"location":"tutorials/hpc/hpc/#background","title":"Background","text":"<p>On conventional Unix computers (such as the HPC headnode) we enter the commands we want to run at the terminal and see the results directly output in front of us.  On an HPC this type of computation will only make use of one node, namely, the Head Node.  To make use of the remaining (compute) nodes we need to use the SLURM software package (called an HPC Scheduler).  The purpose of SLURM is to manage all user jobs and distribute the available resources (i.e. time on the compute nodes) to each job in a fair manner.  You can think of the SLURM software as like an electronic calendar and the user jobs like meetings.  Users say to SLURM \u201cI want XX CPUS for YY hours\u201d and SLURM will look at its current bookings and find the next available time it can fit the job.</p> <p>Terminology:</p> <ul> <li>Node: a server grade computer which is part of an HPC</li> <li>Batch Job: a group of one or more related Unix commands that need to be run (executed) for a user.  e.g. run fastqc on all my samples</li> <li>Partition (or Queue): a list of jobs that need to be run.  There is often more than one partition on an HPC which usually have specific requirements for the jobs that can be added to them.  e.g. 8hour will accept jobs less than or equal to 8hours long</li> <li>Runtime: the amount of time a job is expected (or actually) runs</li> <li>Resources: computation resources that can be given to our jobs in order to run them.  e.g. CPU Cores, Memory, and Time.</li> <li>Job Script: a special BASH script that SLURM uses to run a job on our behalf once resources become available.  Job scripts contain details of the resources that our commands need to run.</li> <li>Output (or Results) file: When SLURM runs our batch job it will save the results that would normally be output on the terminal (screen) to a file; this file is called the output file.</li> <li>Reservation: much like a reservation for a resturant holds a table for you, the administrator can give you an HPC reservation which holds various resources for a period of time exclusively for you.</li> </ul>"},{"location":"tutorials/hpc/hpc/#exercises_2","title":"Exercises","text":"<p>Useful Commands: man, sinfo, cat, sbatch, squeue, cp, module, prime</p>"},{"location":"tutorials/hpc/hpc/#31-which-nodes-could-a-main-job-go-on","title":"3.1) Which nodes could a \u2018main\u2019 job go on?","text":"Hint  Try the *sinfo* command   Additional Hint  Have a look at the PARTITION and NODELIST columns.  The *barcoo[2-4]* is shorthand for *barcoo2 barcoo3 and barcoo4*  <pre><code>$ sinfo\nPARTITION AVAIL  TIMELIMIT  NODES  STATE NODELIST\ncompute*     up 200-00:00:      3    mix lims-hpc-[2-4]\ncompute*     up 200-00:00:      2   idle lims-hpc-[1,5]\nbigmem       up 200-00:00:      1   idle lims-hpc-1\n8hour        up   08:00:00      3    mix lims-hpc-[2-4]\n8hour        up   08:00:00      3   idle lims-hpc-[1,5],lims-hpc-m\n</code></pre> Note: the output to the sinfo command will look different depending on which HPC you are using and it's current usage levels   Answer  The *sinfo* command will list the *partitions*.  It summaries the nodes by their current status so there may be more than one line with *main* in the partition column.  It lists the nodes in shorthand i.e. barcoo[1,3-5] means barcoo1, barcoo3, barcoo4, barcoo5.  **Answer**: barcoo001, barcoo002, ..., barcoo070   <p>Use the cat command to view the contents of task01, task02 and task03 job script</p>"},{"location":"tutorials/hpc/hpc/#32-how-many-cpu-cores-will-each-ask-for","title":"3.2) How many cpu cores will each ask for?","text":"Hint  Lookup the man page for *sbatch* command.  *sbatch*'s options match up with the *#SBATCH* comments at the top of each job script.  Some will be affected by more than one option   Additional Hint  **Non-exclusive (shared) jobs**:  It is *--cpus-per-task x --ntasks* but if *--ntasks* is not present it defaults to 1 so it's *--cpus-per-task x 1*  **Exclusive jobs**:  The *--nodes* options tells us how many nodes we ask for and the *--exclusive* option says give us all it has.  This one is a bit tricky as we don't really know until it runs.   Answer  **Answer**:  * task01: **1 cpu core** * task02: **6 cpu cores** * task03: **at least 1** as this has requested all cpu cores on the node its running on (*--exclusive*).   However, since we know that all nodes on *barcoo* have 16, we know it will get 16."},{"location":"tutorials/hpc/hpc/#33-what-about-total-memory","title":"3.3) What about total memory?","text":"Hint  Lookup the man page for *sbatch* command.  *sbatch*'s options match up with the *#SBATCH* comments at the top of each job script.  Some will be affected by more than one option   Additional Hint  The *--mem-per-cpu* OR *--mem* options are holding the answer to total memory.  For task01 and task02 the calculation is *--mem-per-cpu x --cpus-per-task x --ntasks*  For task03, like with the cpus cores question, we get all the memory available on the node we get allocated   Answer  The *--mem-per-cpu* OR *--mem* options are holding the answer to total memory.  For task01 and task02 the calculation is *--mem-per-cpu x --ntasks x --cpus-per-task*  For task03, like with the cpus cores question, we get all the memory available on the node we get allocated  NOTE: it might be tempting to use the --mem option on non-exclusive (i.e. --share) jobs however this will NOT work since the meaning of --mem is \"go on a node with at least X MB of memory\"; it does not actually allocate any of it to you so your job will get terminated once it tries to use any memory.  **Answer**:  * task01: **1024MB** (1GB) i.e. 1024 x 1 x 1 * task02: **12288MB** (12GB) i.e. 2048 x 3 x 2 * task03: **at least 1024MB** (1GB).  The actual amount could be a lot more as most HPCs have 100GB+ per node"},{"location":"tutorials/hpc/hpc/#34-how-long-can-each-run-for","title":"3.4) How long can each run for?","text":"Hint  Use the *man sbatch* command to look up the time specification.  If you search for *--time* it will describe the formats it uses (i.e. type */--time* and press enter)   Answer  The *--time* option is what tells slurm how long your job will run for.  **Answer**:  * task01: requests **30:00 (30mins 0secs)**, uses ~30secs * task02: requests **5:00 (5mins 0secs)**, uses ~5secs * task03: requests **1:00 (1min 0secs)**, uses ~30secs"},{"location":"tutorials/hpc/hpc/#35-is-this-maximum-minimum-or-both-runtime","title":"3.5) Is this maximum, minimum or both runtime?","text":"Hint  Use the *man sbatch* command to look up the time specification.  If you search for *--time* it will describe the formats it uses (i.e. type */--time* and press enter)   Answer  This is a maximum time.  Your job may finish early, at which point it hands back the resources for the next job.  However if it tries to run longer the HPC will terminate the job. HINT: when selecting a time for your job its best to estimate your job runtime to be close to what it actually uses as it can help the HPC scheduler 'fit' your job in between other jobs though be careful to allow enough time.  If you think your job may not complete in time you can ask the system administrator of your HPC to add more time."},{"location":"tutorials/hpc/hpc/#36-calculate-the-time-specification-for-the-following-runtimes","title":"3.6) Calculate the \u2013time specification for the following runtimes:","text":"<ol> <li>1h30m:\u2013time=</li> <li>1m20s:\u2013time=</li> <li>1.5days:\u2013time=</li> <li>30m:\u2013time=</li> </ol> Hint  Use the *man sbatch* command to look up the time specification.  If you search for *--time* it will describe the formats it uses (i.e. type */--time* and press enter)   Answer    1. 1h30m:--time=01:30:00 (alternatively: 0-01:30) 2. 1m20s:--time=01:20 3. 1.5days:--time=1-12 4. 30m:--time=30"},{"location":"tutorials/hpc/hpc/#37-what-do-the-following-time-specifications-mean","title":"3.7) What do the following \u2013time specifications mean?","text":"<ol> <li>\u2013time=12-00:20</li> <li>\u2013time=45</li> <li>\u2013time=00:30</li> </ol> Hint  Use the *man sbatch* command to look up the time specification.  If you search for *--time* it will describe the formats it uses (i.e. type */--time* and press enter)   Answer  1. --time=12-00:2012 days and 20 minutes 2. --time=4545 minutes 3. --time=00:3030 seconds"},{"location":"tutorials/hpc/hpc/#reservations","title":"Reservations","text":"<p>Before we continue, a quick note on reservations.  Reservations are not normally needed however sometimes we will, particularly when the HPC is busy.  To make use of a reservation you need to know its name and provide it with the \u2013reservation option</p> <p>Today we use the training reservation so that we have resources available to run our jobs.  Your jobs will need to contain the line:</p> <p>#SBATCH \u2013reservation=training</p> <p>Now use sbatch to submit the task01 job:</p>"},{"location":"tutorials/hpc/hpc/#38-what-job-id-was-your-job-given","title":"3.8) What job id was your job given?","text":"Hint  Use the man page for the sbatch command.  The *Synopsis* at the top will give you an idea how to run it.   Answer <pre><code>$ sbatch task01\nSubmitted batch job 9998\n</code></pre>  **Answer**: it's unique for each job; in the above example mine was *9998*"},{"location":"tutorials/hpc/hpc/#39-which-node-did-your-job-go-on","title":"3.9) Which node did your job go on?","text":"Hint  The *squeue* command shows you the currently running jobs.  If it's been longer than 30 seconds since you submitted it you might have to resubmit it.   Answer  Use the *squeue* command to show all jobs.  Search for your *jobid* and look in the *NODELIST* column.  NOTE: if there are lots of jobs you can use squeue -u YOUR_USERNAME to only show your jobs, where YOUR_USERNAME is replaced with your actual username. <pre><code>$ sbatch task01\nSubmitted batch job 9999\n$ squeue -u training01\n JOBID PARTITION     NAME     USER ST       TIME  NODES NODELIST(REASON)\n  9999   compute   task01 training  R       0:05      1 lims-hpc-2\n</code></pre>  **Answer**: it's dependent on node availability at time; in the above example mine was *lims-hpc-2*"},{"location":"tutorials/hpc/hpc/#advanced","title":"Advanced","text":""},{"location":"tutorials/hpc/hpc/#310-make-a-copy-of-task01-and-call-it-prime_numbers-make-it-load-the-training-module-and-use-the-prime-command-to-calculate-prime-numbers-for-20-seconds","title":"3.10) Make a copy of task01 and call it prime_numbers.  Make it load the training module and use the prime command to calculate prime numbers for 20 seconds.","text":"Hint  You can find the *prime* command in the *training-gcc/1.0* module   Answer  The key points to change in the task01 script are:  1. adding the *module load training-gcc/1.0* 2. replacing the *sleep* (and *echo*) statements with a call to *prime 20*.  <pre><code>#!/bin/bash\n#SBATCH --cpus-per-task=1\n#SBATCH --mem-per-cpu=1024\n#SBATCH --partition=PARTITION\n#SBATCH --time=30:00\n#SBATCH --reservation=RESERVATION\n\nmodule load training-gcc/1.0\n\necho \"Starting at: $(date)\"\nprime 20\necho \"Finished at: $(date)\"\n</code></pre>  Where *RESERVATION* is replaced with *training* and *PARTITION* is replaced with *main*  Repeatable Science: It's good scientific practice to include the version number of the module when loading it as this will ensure that the same version is loaded next time you run this script which will mean you get the same results. Date your work: It's also good practice to include the date command in the output so you have a permanent record of when this job was run.  If you have one before and after your main program you will get a record of how long it ran for as well."},{"location":"tutorials/hpc/hpc/#311-submit-the-job-what-was-the-largest-prime-number-it-found-in-20-seconds","title":"3.11) Submit the job.  What was the largest prime number it found in 20 seconds?","text":"Hint  The output from the program will provide the results that we are after.  For HPC jobs this will be placed in the *SLURM output file*; this is called *slurm-JOBID.out* where JOBID is replaced by the actual job id.   Answer  You should get results similar to below however the actual numbers will vary as amount of computations performed will be affected by the amount of other jobs running on the HPC <pre><code>$ sbatch prime_numbers\nSubmitted batch job 9304\n$ cat slurm-9304.out\nStarting at: Fri May  8 16:11:07 AEST 2015\n\nPrimes:        710119\nLast trial:    10733927\nLargest prime: 10733873\nRuntime:       20 seconds\nFinished at: Fri May  8 16:11:27 AEST 2015\n</code></pre>"},{"location":"tutorials/hpc/hpc/#312-modify-your-prime_numbers-script-to-notify-you-via-email-when-it-starts-and-ends-submit-it-again","title":"3.12) Modify your prime_numbers script to notify you via email when it starts and ends.  Submit it again.","text":"<ul> <li>Did it start immediately or have some delay?</li> <li>How long did it actually run for?</li> </ul> Hint  There are two options that you will need to set.  See sbatch manpage for details.   Additional Hint  Both start with *--mail*   Answer <pre><code>#!/bin/bash\n#SBATCH --cpus-per-task=1\n#SBATCH --mem-per-cpu=1024\n#SBATCH --partition=TRAINING\n#SBATCH --time=30:00\n#SBATCH --reservation=RESERVATION\n#SBATCH --mail-user=name@email.address\n#SBATCH --mail-type=ALL\n\nmodule load training/1.0\n\necho \"Starting at: $(date)\"\nprime 20\necho \"Finished at: $(date)\"\n</code></pre>  Where *RESERVATION* is replaced with *training*, *PARTITION* is replaced with *main* and *name@email.address* by your email address  **Answers**:  * **Did it start immediately or have some delay?** The *Queued time* value in the subject of start email will tell you how long it waited. * **How long did it actually run for?** The *Run time* value in the subject of the end email will tell you how long it ran for which should be ~20 seconds."},{"location":"tutorials/hpc/hpc/#topic-4-job-monitoring","title":"Topic 4: Job Monitoring","text":"<p>It is often difficult to predict how a software tool may utilise HPC System Resources (CPU/Memory) as it can vary quite widely based on a number of factors (data set, number of CPU\u2019s, processing step etc.).</p> <p>In this topic we will cover some of the tools that are available that enable you to watch what is happening so we can make better predictions in the future.</p>"},{"location":"tutorials/hpc/hpc/#exercises_3","title":"Exercises","text":""},{"location":"tutorials/hpc/hpc/#41-what-does-the-top-command-show","title":"4.1) What does the top command show?","text":"Hint  When all else fails, try *man*; specifically, the description section   Answer <pre><code>$ man top\n...\nDESCRIPTION\n       The top program provides a dynamic real-time view of a running system.\n...\n</code></pre>  **Answer**: in lay-person terms *\"Continually updating CPU and Memory usage\"*   <p>Run the top command.  Above the black line it shows some system-wide statistics and below are statistics specific to a single process (a.k.a, tasks OR software applications).</p>"},{"location":"tutorials/hpc/hpc/#42-how-much-total-memory-does-this-hpc-head-node-have","title":"4.2) How much total memory does this HPC (head-node) have?","text":"Hint  This would be a system-wide statistic.   Answer  **Answer**: If you look at the first value on the *Mem* line (line 4) it will tell you the total memory on this computer (node).  * **BARCOO**: 65942760k or ~64 GigaBytes * **SNOWY**: 132035040k or ~128 GigaBytes  To transfer from kB to MB you divide by 1024 and MB to GB by 1024 again."},{"location":"tutorials/hpc/hpc/#43-what-is-the-current-total-cpu-usage","title":"4.3) What is the current total CPU usage?","text":"Hint  This might be easier to work out what is not used and subtract it from 100%   Additional Hint  *Idle* is another term for not used (or *id* for short)   Answer  **Answer**: If you subtract the *%id* value (4th value on Cpu(s) line) from 100% you will get the total CPU Usage"},{"location":"tutorials/hpc/hpc/#44-what-column-does-it-appear-to-be-sorting-the-processes-by-is-this-low-to-high-or-high-to-low","title":"4.4) What column does it appear to be sorting the processes by? Is this low-to-high OR high-to-low?","text":"Hint  It's not PID but from time to time it might be ordered sequentially.   Answer  **Answer**: *%CPU* which gives you an indication of how much CPU time each process uses and sorted high-to-low.   <p>Add up the top few CPU usages of processes and compare this to the system-wide CPU usage at that time.  NOTE: you may need to quit top (by pressing q) so you can compare before it updates.</p>"},{"location":"tutorials/hpc/hpc/#45-why-might-the-numbers-disagree","title":"4.5) Why might the numbers disagree?","text":"Hint  It might have something to do with the total number of CPU Cores on the system.   Answer  **Answer**: *%CPU* column gives you an indication of how much this process uses of 1 CPU Core, where as the system-wide values at the top are exactly that, how much the entire system is utilised.  i.e. if you could see all processes in *top* (excluding round errors) they would add up 100% x the number of cpu cores available. On BARCOO it is 0-2400% and SNOWY it is 0-3200% for individual processes."},{"location":"tutorials/hpc/hpc/#46-what-command-line-flag-instructs-top-to-sort-results-by-mem","title":"4.6) What command-line flag instructs top to sort results by %MEM?","text":"<p>Can you think of a reason that this might be useful?</p> Hint  Use the *top* manpage.   Additional Hint  *\"m is for memory!\"*   Answer  **Answer**: *top -m* will cause *top* to sort the processes by memory usage.  **Can you think of a reason that this might be useful?**  Your program might be using a lot of memory and you want to know how much; by sorting by memory will cause your program to stay at the top."},{"location":"tutorials/hpc/hpc/#47-run-top-c-what-does-it-do-how-might-this-be-helpful","title":"4.7) Run \u201ctop -c\u201d.  What does it do?  How might this be helpful?","text":"Hint  Use the *top* manpage.   Additional Hint  *\"c is for complete!\"*  *\"c is also for command!\"* which is another name for program   Answer  **What does it do?**   It changes the COMMAND column (right most) to show the complete command (or as much that fits) including the flags and options.  **How might this be helpful?**   Sometimes you might be running a lot of commands with the same name that only differ by the command-line options.  In this case it is hard to tell which ones are still running unless you use the *-c* flag to show the complete command.  **NOTE**:   If *top* is running you can press the *c* key to toggle show/hide complete command"},{"location":"tutorials/hpc/hpc/#48-how-can-you-get-top-to-only-show-your-processes-why-might-this-be-useful","title":"4.8) How can you get top to only show your processes?  Why might this be useful?","text":"Hint  Use the *top* manpage.   Additional Hint  *\"u is for user[name]!\"*   Answer  **How can you get *top* to only show your processes?**   **Answer 1**: *top -u YOURUSERNAME*   **Answer 2**: while running *top* press the *u* key, type YOURUSERNAME and press  key  **Why might this be useful?**   When you are looking to see how much CPU or Memory you are using on a node that has other user jobs running it can be hard to quickly identify yours."},{"location":"tutorials/hpc/hpc/#topic-5-all-together","title":"Topic 5: All Together","text":"<p>This topic will allow you to put all the skills that you learnt in this workshop to the test.  You might need to refer back to the earlier topics if you have forgotten how to do these tasks.</p> <p>Overview:</p> <ul> <li>Write jobscript</li> <li>Load/use software module</li> <li>Submit job</li> <li>Monitor job</li> </ul>"},{"location":"tutorials/hpc/hpc/#task-1-write-a-job-script","title":"Task 1: Write a job script","text":"<p>Write a job script that requests the following resources:</p> <ul> <li>Filename: monINITIALS.slurm<ul> <li>where INITIALS is replaced with your initials.  e.g. for me it would be monAR.slurm</li> </ul> </li> <li>Tasks: 1</li> <li>CPUs: 1</li> <li>Partition: main</li> <li>Time: 5 mins</li> <li>Memory: 1 GB (remember to specify it in MB)</li> <li>Reservation: training</li> </ul>"},{"location":"tutorials/hpc/hpc/#task-2-loaduse-software-module","title":"Task 2: Load/use software module","text":"<p>Edit your job script so that it:</p> <ul> <li>Loads the training-gcc/1.0 module</li> <li>Runs the fakejob command with your name as the first parameter.  <ul> <li>FYI: fakejob is a command that was made to demonstrate what real commands   might do in terms of CPU and Memory usage.  It does not perform any useful task; if you must know, it just calculates prime numbers for 5 minutes   and consumes some memory</li> </ul> </li> </ul> NOTE: remember good practice here and add the date commands to print the date/time in your output.  You can copy them from the *task01* script."},{"location":"tutorials/hpc/hpc/#task-3-submit-job","title":"Task 3: Submit job","text":"NOTE: Task 4 is time dependent on task 3; you need to do it within 2 or 3 minutes of running step 3.1 so it might be a good idea to read ahead before hand.  Don't stress if you don't complete it in time, you can simply run 3.1 again.  <ol> <li>Use sbatch to submit the job to the HPC.</li> <li>Note down the job id it was given (for later).</li> <li>Use squeue (or qs) to check that is started ok.</li> <li>When it starts check which compute node it is running on (for the next task).</li> </ol>"},{"location":"tutorials/hpc/hpc/#task-4-monitor-the-job","title":"Task 4: Monitor the job","text":"<p>Use the top command to check how much CPU and Memory the job is using.  Given that SLURM is running the job on your behalf on one of the compute nodes, top won\u2019t be able to see the job.  To be able to use top, you will first need to login to the compute node that is running your job.</p> <p>To login:</p> <pre><code>$ ssh barcooXXX\n</code></pre> <p>Where XXX is the actual node number you were allocated (See task 3.4).</p> <p>You are now connected from your computer to barcoo which is connected to barcooXXX.</p> <pre><code>+---------------+            +------------+            +------------+\n| YOUR COMPUTER | -- SSH --&gt; |  BARCOO    | -- SSH --&gt; | BARCOOXXX  |\n+---------------+            +------------+            +------------+\n</code></pre> <p>You can tell which node you are on by the text in the prompt</p> <pre><code>[USERNAME@barcoo USERNAME]$\n\nChanges to:\n\n[USERNAME@barcooXXX USERNAME]$\n</code></pre> <p>Once logged in to the relevent compute node you can run top to view your job.  Remember the u and c options we learnt earlier; they will be helpful here when everyone is running the same jobs.</p>"},{"location":"tutorials/hpc/hpc/#how-does-the-cpu-and-memory-usage-change-over-time","title":"How does the CPU and Memory usage change over time?","text":"Hint  It should vary (within the limits you set in the job script)   Answer  The *fakejob* program should vary its CPU usage between 50 and 100% CPU and 500 and 1000MB of memory.  The percentage that it shows is based on the total memory of the node that runs your job; check Topic 4, Question 4.2 to remember how to find the total memory."},{"location":"tutorials/hpc/hpc/#finished","title":"Finished","text":"<p>Well done, you learnt a lot over the last 5 topics and you should be proud of your achievement; it was a lot to take in.</p> <p>From here you should be comfortable to begin submitting real jobs to the HPC (in your real account, not the training one).</p> <p>You will no-doubt forget a lot of what you learnt here so I encourage you to save a link to this workshop for later reference.</p> <p>Thank you for your attendance, please don\u2019t forget to complete the training survey and return it to the workshop facilitators.</p>"},{"location":"tutorials/hpc/intro/","title":"Intro","text":""},{"location":"tutorials/hpc/intro/#what-is-an-hpc","title":"What is an HPC?","text":"<p>An HPC is simply a large collection of server-grade computers working together to solve large problems.</p> <ul> <li>Big: HPCs typically have lots of CPUs and Memory and consequently large jobs.</li> <li>Shared: There are usually lots of users making use of it at one time.</li> <li>Coordinated: There is a coordinator program to ensure fair-use between its users.</li> <li>Compute Collection: HPCs use a number of computers at once to solve lots of large jobs.</li> </ul> <p></p> <p>Figure: The user (face at top) interacts with their local PC/Laptop through the keyboard and screen.  The PC/Laptop will  connect to the Head/Login node of the HPC interactively.  The Head/Login node will send the jobs off to the Compute Nodes when one is available. </p>"},{"location":"tutorials/hpc/intro/#why-use-hpcs","title":"Why use HPCs?","text":"<p>The main reason we use HPCs is because they are quite big.  Given their size, they are usually very expensive, however through  sharing the resources the per user/job cost can be kept low.</p> <ul> <li>Many CPUs: HPCs typically have hundreds to tens of thousands of CPUs.  Compare this with the 4 or 8 that your PC/Laptop might have.</li> <li>Large Memory: Hundreds of GBs to multiple TBs of RAM are typical for each node.</li> <li>Efficient use: Through sharing the resources each user can have access to a very large computer for a period and hand  it back for others to use later.</li> </ul>"},{"location":"tutorials/hpc/intro/#software-modules","title":"Software Modules","text":"<p>There are typically hundreds to thousands of software packages installed on an HPC.  Given that each can have its own special  requirements and multiple versions will be made, software on the HPC will most commonly be packaged and only made available  to you when you request it.</p> <ul> <li>Packaged: to avoid conflicts between software, each is packaged up into a module and only used on demand.</li> <li>Loadable: before using a software module you need to load it.</li> <li>Versions: given not all users want to use the same version of software (and to compare new results with old you might     need the same version)    each version is made into its own software module so you have ultimate control.</li> </ul>"},{"location":"tutorials/hpc/intro/#job-submission","title":"Job Submission","text":"<p>Job Submission is the process of instructing the HPC to perform a task for you.  Depending on the HPC software installed on  your HPC, the process of doing so might be different.</p> <ul> <li>SLURM: this workshop uses an HPC that uses the SLURM HPC software.  Some common alternatives (not covered) are PBS or     SGE/OGE.</li> <li>Queues (Partition): when a job is submitted it is added to a work queue; in SLURM this is called a Partition.</li> <li>Batch: HPC jobs are not \u2018interactive\u2019.  By this we mean, you can\u2019t type input into your job\u2019s programs and you won\u2019t     immediately see the output that your program prints on the screen. </li> </ul>"},{"location":"tutorials/hpc/intro/#resources","title":"Resources","text":"<p>So that SLURM knows how to schedule and fit jobs around each other, you need to specify what resources your job will use. That is, you need to tell it how many CPUs, RAM, Nodes (servers), and Time you need.</p> <ol> <li>CPUs: most software is limited using 1 CPU by default but many can use more than one (or you can run multiple copies at once).    The number of CPUs you specify needs to match how many things your software can do at once.</li> <li>Memory: you need to estimate (or guess) how much memory (RAM) your program needs.</li> <li>Nodes: most software will only use one of the HPC\u2019s Nodes (i.e. one server), but some software can make use of more than    one to solve the problem sooner.</li> <li>Time: like when you are scheduling meetings, SLURM needs to know how long each job will take (maximum) so it can organise    other jobs afterwards.</li> </ol>"},{"location":"tutorials/hpc/intro/#job-types","title":"Job Types","text":"<p>There are two types of jobs that you can submit:</p> <ol> <li>Shared: a shared job (as the name suggests) is one that shares a node with other jobs.  This is the default and preferred method.</li> <li>Exclusive: an exclusive job gets a single (or multiple) nodes to itself.  Given this exclusivity, this type of job must know how     to use multiple CPUs as most HPCs have at least 16 CPUs per node.</li> </ol>"},{"location":"tutorials/hpc/robinson-hpc-link/","title":"High Performance Computing","text":"<p>Please see the link here.</p>"},{"location":"tutorials/hybrid_assembly/formatting_template/","title":"Formats to use","text":""},{"location":"tutorials/hybrid_assembly/formatting_template/#text-formatting","title":"Text formatting","text":"<p>Bold Italics Bold Italics</p>"},{"location":"tutorials/hybrid_assembly/formatting_template/#headings-this-is-2nd-level","title":"Headings (This is 2<sup>nd</sup> level)","text":""},{"location":"tutorials/hybrid_assembly/formatting_template/#the-3rd-level","title":"The 3<sup>rd</sup> level","text":""},{"location":"tutorials/hybrid_assembly/formatting_template/#the-4th-level","title":"The 4<sup>th</sup> level","text":""},{"location":"tutorials/hybrid_assembly/formatting_template/#the-5th-level","title":"The 5<sup>th</sup> level","text":""},{"location":"tutorials/hybrid_assembly/formatting_template/#the-6th-level","title":"The 6<sup>th</sup> level","text":""},{"location":"tutorials/hybrid_assembly/formatting_template/#code-blocks-and-inline-code","title":"Code Blocks and inline code","text":"<p>They can be added like this. Many different languages are supported.</p>"},{"location":"tutorials/hybrid_assembly/formatting_template/#blocks","title":"Blocks","text":"<pre><code>$ ls\nexp01  file01  muscle.fq\n</code></pre> <p>or</p> <pre><code>import tensorflow as tf\n</code></pre>"},{"location":"tutorials/hybrid_assembly/formatting_template/#inline-code","title":"Inline code","text":"<p>Code can also be shown as an inline snippet like this <code>import tensorflow as tf</code>.</p>"},{"location":"tutorials/hybrid_assembly/formatting_template/#lists","title":"Lists","text":"<p>If you need to add a list:  </p>"},{"location":"tutorials/hybrid_assembly/formatting_template/#unordered-lists","title":"Unordered Lists","text":"<ul> <li>Some information</li> <li>Some more information</li> </ul>"},{"location":"tutorials/hybrid_assembly/formatting_template/#ordered-lists","title":"Ordered Lists","text":"<ol> <li> <p>Some point</p> </li> <li> <p>Another point</p> <ol> <li>Subpoint<ol> <li>Sub-subpoint</li> </ol> </li> </ol> </li> </ol>"},{"location":"tutorials/hybrid_assembly/formatting_template/#images","title":"Images","text":"<p>How to add an image:  </p> <p></p>"},{"location":"tutorials/hybrid_assembly/formatting_template/#tables","title":"Tables","text":"<p>Tables can have text that is left, centred or right aligned.</p> Left Center Right Lorem dolor <code>amet</code> ipsum sit"},{"location":"tutorials/hybrid_assembly/formatting_template/#questions-and-answers","title":"Questions and Answers","text":"<p>It is useful to number questions with the section number they appear in so participants can easily refer to the number when asking a question. Indentation is important to display correctly.</p> <p>Question 1.1</p> <p>What is the full path name of your home directory?</p> Hint <p>Remember your Current Working Directory starts in your home directory.</p> Answer <p>You can find out the full path name of the current working directory with the <code>pwd</code> command. Your home directory will look something like this:</p> <pre><code>$ pwd\n/home/trainingXX\n</code></pre> <p>Question 1.1</p> <p>What is the full path name of your home directory?</p> Answer <p>You can find out the full path name of the current working directory with the <code>pwd</code> command. Your home directory will look something like this:</p>"},{"location":"tutorials/hybrid_assembly/formatting_template/#line-breaks","title":"Line Breaks","text":"<p>To create a line break (\\&lt;br&gt;), end a line with two or more spaces, and then type return.</p>"},{"location":"tutorials/hybrid_assembly/formatting_template/#links","title":"Links","text":"<p>Please see the link.</p>"},{"location":"tutorials/hybrid_assembly/formatting_template/#blockquotes","title":"Blockquotes","text":"<p>This is a quote. Two spaces are needed at the end of this to make next line of quote appear on a different line.   This is the second line of quote.</p>"},{"location":"tutorials/hybrid_assembly/formatting_template/#text-including-commands-to-type","title":"Text including commands to type","text":"<p>Type <code>ls</code> and press <code>ENTER</code>.</p>"},{"location":"tutorials/hybrid_assembly/formatting_template/#when-referring-to-a-filename","title":"When referring to a filename","text":"<p>canu.contigs.fasta contains the assembled sequences.</p>"},{"location":"tutorials/hybrid_assembly/formatting_template/#showing-that-a-button-needs-clicking","title":"Showing that a button needs clicking","text":"<p>Click Start</p>"},{"location":"tutorials/hybrid_assembly/formatting_template/#highlighting-text","title":"Highlighting text","text":"<p>This text is highlighted.</p>"},{"location":"tutorials/hybrid_assembly/formatting_template/#equations","title":"Equations","text":"<p>Equations can be added as a block or inline.</p>"},{"location":"tutorials/hybrid_assembly/formatting_template/#block-equations","title":"Block equations","text":"\\[ \\frac{n!}{k!(n-k)!} = \\binom{n}{k} \\]"},{"location":"tutorials/hybrid_assembly/formatting_template/#inline-equations","title":"Inline equations","text":"<p>This equation will appear in line with this text: \\(p(x|y) = \\frac{p(y|x)p(x)}{p(y)}\\)</p>"},{"location":"tutorials/hybrid_assembly/formatting_template/#to-do","title":"To do","text":"<p>Pdf printing Survey Slides?  </p>"},{"location":"tutorials/hybrid_assembly/layout_template/","title":"Layout template","text":""},{"location":"tutorials/hybrid_assembly/layout_template/#workshop-title","title":"Workshop title","text":"<p>Anticipated workshop duration when delivered to a group of participants is 2 hours.  </p> <p>For queries relating to this workshop, contact Melbourne Bioinformatics (bioinformatics-training@unimelb.edu.au).</p>"},{"location":"tutorials/hybrid_assembly/layout_template/#overview","title":"Overview","text":""},{"location":"tutorials/hybrid_assembly/layout_template/#topic","title":"Topic","text":"<ul> <li> Genomics</li> <li> Transcriptomics</li> <li> Proteomics</li> <li> Metabolomics</li> <li> Statistics and visualisation</li> <li> Structural Modelling</li> <li> Basic skills</li> </ul>"},{"location":"tutorials/hybrid_assembly/layout_template/#skill-level","title":"Skill level","text":"<ul> <li> Beginner  </li> <li> Intermediate  </li> <li> Advanced  </li> </ul> <p>This workshop is designed for participants with \u2026</p>"},{"location":"tutorials/hybrid_assembly/layout_template/#description","title":"Description","text":"<p>Punchline\u2026 Get the skills to advance your own research!</p> <p>This tutorial uses \u201cTool\u201d to implement a pipeline for analysis of data \u2026</p> <p>Data \u2026 Pipeline \u2026 Tools \u2026</p> <p>Section 1 covers one part and in Section 2 you will learn something additional.</p>"},{"location":"tutorials/hybrid_assembly/layout_template/#learning-objectives","title":"Learning Objectives","text":"<p>At the end of this introductory workshop, you will :</p> <ul> <li>Understand the \u2026</li> <li>Be familiar with \u2026</li> <li>Know how to \u2026</li> </ul>"},{"location":"tutorials/hybrid_assembly/layout_template/#requirements-and-preparation","title":"Requirements and preparation","text":"<p>Important</p> <p>Attendees are required to bring their own laptop computers. </p> <p>At least one week before the workshop, participants should install the software and data files below.  This should provide sufficient time for participants to liaise with their own IT support should they encounter any IT problems.  </p>"},{"location":"tutorials/hybrid_assembly/layout_template/#preparing-your-laptop-prior-to-starting-this-workshop","title":"Preparing your laptop prior to starting this workshop","text":"<ol> <li>Go to: https://www.</li> <li>Download and install the required software (free) on your laptop.</li> <li>Download and install the required data on your laptop.</li> <li>Check that the software and data are correctly installed by executing this test:  \u2026</li> </ol>"},{"location":"tutorials/hybrid_assembly/layout_template/#required-software","title":"Required Software","text":"<ul> <li>IGV</li> <li>Software x</li> </ul> <p>or</p> <ul> <li>No additional software needs to be installed for this workshop.</li> </ul>"},{"location":"tutorials/hybrid_assembly/layout_template/#required-data","title":"Required Data","text":"<ul> <li>Data file</li> </ul> <p>or</p> <ul> <li>No additional data needs to be downloaded for this workshop.</li> </ul>"},{"location":"tutorials/hybrid_assembly/layout_template/#author-information","title":"Author Information","text":"<p>Written by: Victoria Perreau Melbourne Bioinformatics, University of Melbourne</p> <p>Created/Reviewed: July 2019</p>"},{"location":"tutorials/hybrid_assembly/layout_template/#background","title":"Background","text":"<p>Little bit of history and context. Why is this important/useful\u2026</p>"},{"location":"tutorials/hybrid_assembly/layout_template/#section-1-title-of-section-1","title":"Section 1: Title of section 1","text":"<p>In this section you will \u2026</p> <p>Important</p> <p>Please look at the formatting template to see examples for formatting your documentation in line with Melbourne Bioinformatics training material e.g Questions and answers, code blocks, images etc. </p>"},{"location":"tutorials/hybrid_assembly/layout_template/#section-2-title-of-section-2","title":"Section 2: Title of section 2","text":"<p>In this section we will \u2026</p>"},{"location":"tutorials/hybrid_assembly/layout_template/#additional-reading","title":"Additional reading","text":"<p>Links to additional recommended reading and suggestions for related tutorials.</p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly/","title":"Hybrid genome assembly - Nanopore and Illumina","text":""},{"location":"tutorials/hybrid_assembly/nanopore_assembly/#hybrid-genome-assembly-nanopore-and-illumina","title":"Hybrid genome assembly - Nanopore and Illumina","text":"<p>Anticipated workshop duration when delivered to a group of participants is 2 hours.  </p> <p>For queries relating to this workshop, contact Melbourne Bioinformatics (bioinformatics-training@unimelb.edu.au).</p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly/#overview","title":"Overview","text":""},{"location":"tutorials/hybrid_assembly/nanopore_assembly/#topic","title":"Topic","text":"<ul> <li> Genomics</li> <li> Transcriptomics</li> <li> Proteomics</li> <li> Metabolomics</li> <li> Statistics and visualisation</li> <li> Structural Modelling</li> <li> Basic skills</li> </ul>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly/#skill-level","title":"Skill level","text":"<ul> <li> Beginner  </li> <li> Intermediate  </li> <li> Advanced  </li> </ul> <p>This workshop is designed for participants with no command-line knowledge. A web-based platform called Galaxy will be used to run our analysis.</p> <p>How do long- and short-read assembly methods differ?</p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly/#description","title":"Description","text":"<p>Assemble a genome!Learn how to create and assess genome assemblies using the powerful combination of Nanopore and Illumina reads</p> <p>This tutorial explores how long and short read data can be combined to produce a high-quality \u2018finished\u2019 bacterial genome sequence. Termed \u2018hybrid assembly\u2019, we will use read data produced from two different sequencing platforms, Illumina (short read) and Oxford Nanopore Technologies (long read), to reconstruct a bacterial genome sequence.</p> <p>In this tutorial we will perform \u2018de novo assembly\u2019. De novo assembly is the process of assembling a genome from scratch using only the sequenced reads as input - no reference genome is used.  This approach is common practise when working with microorganisms, and has seen increasing use for eukaryotes (including humans) in recent times.  </p> <p>Using short read data (Illumina) alone for de novo assembly will produce a complete genome, but in pieces (commonly called a \u2018draft genome\u2019). For the genome to be assembled into a single chromosome (plus a sequence for each plasmid), reads would need to be longer than the longest repeated element on the genome (usually ~7,000 base pairs, Note: Illumina reads are 350 base maximum).   Draft bacterial genome sequences are cheap to produce (less than AUD$60) and useful (&gt;300,000 draft Salmonella enterica genome sequences published at NCBI https://www.ncbi.nlm.nih.gov/pathogens/organisms/), but sometimes you need a high-quality \u2018finished\u2019 bacterial genome sequence.  There are &lt;1,000 are \u2018finished\u2019 or \u2018closed\u2019 Salmonella enterica genome sequences.</p> <p>In these cases, long reads can be used together with short reads to produce a high-quality assembly.  Nanopore long reads (commonly &gt;40,000 bases) can fully span repeats, and reveal how all the genome fragments should be arranged. Long reads currently have higher error rate than short reads, so the combination of technologies is particularly powerful. Long reads provide information on the genome structure, and short reads provide high base-level accuracy.  </p> <p>Combining read data from the long and short read sequencing platforms allows the production of a complete genome sequence with very few sequence errors, but the cost of the read data is about AUD$ 1,000 to produce the sequence. Understandably, we usually produce a draft genome sequence with very few sequence errors using the Illumina sequencing platform.</p> <p>Nanopore sequencing technology is rapidly improving, expect the cost difference to reduce!!</p> <p>Data: Nanopore reads, Illlumina reads, bacterial organism (Bacillus subtilis) reference genome Tools: Flye, Pilon, Unicycler, Quast, BUSCO Pipeline: Hybrid de novo genome assembly - Nanopore draft Illumina polishing Pipeline: Hybrid de novo genome assembly - Unicycler</p> <p>Slides and workshop instructions  Click here for the slides.  Click here for a printer friendly PDF version of this workshop. </p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly/#learning-objectives","title":"Learning Objectives","text":"<p>At the end of this introductory workshop, you will:</p> <ul> <li>Understand how Nanopore and Illumina reads can be used together to produce a high-quality assembly</li> <li>Be familiar with genome assembly and polishing programs</li> <li>Learn how to assess the quality of a genome assembly, regardless of whether a reference genome is present or absent</li> <li>Be able to assemble an unknown, previously undocumented genome to high-quality using Nanopore and Illumina reads!</li> </ul>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly/#requirements-and-preparation","title":"Requirements and preparation","text":"<p>Attendees are required to bring their own laptop computers. </p> <p>All data and tools are available on usegalaxy.org.au. You will need a computer to connect to and use their platform. Before the tutorial, navigate to https://usegalaxy.org.au/ and use your email to create an account. Click \u201cLogin or register\u201d in the top navigation bar of galaxy to do this.  </p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly/#preparing-your-laptop-prior-to-starting-this-workshop","title":"Preparing your laptop prior to starting this workshop","text":"<ul> <li>No additional software needs to be installed for this workshop.</li> </ul>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly/#required-data","title":"Required Data","text":"<ul> <li>No additional data needs to be downloaded for this workshop.</li> </ul>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly/#author-information","title":"Author Information","text":"<p>Written by: Grace Hall Melbourne Bioinformatics, The University of Melbourne</p> <p>Created/Reviewed: August 2023</p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly/#background","title":"Background","text":""},{"location":"tutorials/hybrid_assembly/nanopore_assembly/#how-do-we-produce-the-genomic-dna-for-a-bacterial-isolate","title":"How do we produce the genomic DNA for a bacterial isolate?","text":"<p>Traditional in vitro culture techniques are important. Take a sample (e.g. a swab specimen from an infected sore) and streak a \u2018loopful\u2019 on to solid growth medium that suppoprts the growth of the bacteria. Technology from the time of Louis Pasteur!</p> <p>Mixtures of bacterial types can be sequenced e.g. prepare genomic DNA from environmental samples containing bacteria - water, soil, faecal samples etc. (Whole Metagenome Sequencing)</p> <p></p> <p>One colony contains 10<sup>7</sup> \u2013 10<sup>8</sup> cells. The genomic DNA extracted from one colony is enough for Illumina sequencing. Larger amounts of genomic DNA are required for Nanopore sequencing.</p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly/#shotgun-sequencing-illumina-sequencing-library","title":"Shotgun sequencing - Illumina Sequencing Library","text":"<p>Genomic DNA is prepared for sequencing by fragmenting/shearing: multiple copies of Chromosome + plasmid  \u2192 ~500 bp fragments</p> <p>Note: Nanopore sequencing - there is usually no need to shear the genomic DNA specialist methods are used to minimise shearing during DNA preparation. For Nanopore sequencing, the longer the DNA fragments, the better!</p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly/#the-read-data","title":"The read data","text":"<p>Nanopore &amp; Illumina: fastq format</p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly/#section-1-nanopore-draft-assembly-illumina-polishing","title":"Section 1: Nanopore draft assembly, Illumina polishing","text":"<p>In this section, you will use Flye to create a draft genome assembly from Nanopore reads.  We will perform assembly, then assess the quality of our assembly using two tools: Quast, and BUSCO.</p> <p></p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly/#getting-the-data","title":"Getting the data","text":"<ol> <li>Make sure you have an instance of Galaxy ready to go.<ul> <li>Navigate to the Galaxy Australia server and sign in if you have an account.</li> </ul> </li> <li>Copy an existing history<ul> <li>The data you will need is available in an existing Galaxy history. You can create a copy of this history by clicking here and using the import history \u2018+\u2019 icon at the top right of the page.  </li> </ul> </li> <li>Look at the history you imported<ul> <li>There are 4 files - Nanopore reads, a set of paired-end Illumina reads, and a reference genome for the organism we will assemble.</li> <li>Will we use this reference genome to assess the quality of our assemblies and judge which methods work best.</li> </ul> </li> </ol>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly/#a-baseline-for-high-quality-assemblies","title":"A baseline for \u201chigh-quality\u201d assemblies","text":"<p> To begin, we will identify what a high-quality assembly looks like. </p> <p> When running assembly tools, we want to check the quality of assemblies we produce. It is paramount that genome assemblies are high-quality for them to be useful. </p> <p> To get a baseline for what is considered a \"high-quality\" assembly, we will first run a common assembly QC tool - BUSCO - on a published genome similar to the organism we are working with today. </p> <p> In your imported history you should see a \"reference_genome.fasta\" item. This is the published genome we will compare against. </p> <p>QC with BUSCO</p> <p>BUSCO analysis uses the presence, absence, or fragmentation of key genes in an assembly to determine its quality.</p> <p>BUSCO genes are specifically selected for each taxonomic clade, and represent a group of genes that each organism in the clade is expected to possess. At higher clades, 'housekeeping genes' are the only members, while at more refined taxa such as order or family, lineage-specific genes can also be used.</p> <p>We expect the reference genome to have all of these genes. When running BUSCO, we expect it to find most (if not all) of these in the assembly. </p> <ul> <li>Find and select the Busco tool in the tools panel using the search bar.</li> <li>In this tutorial, we know our organism is within the \u2018Bacillales\u2019 order.</li> <li>Parameters:<ul> <li>Sequences to analyse - reference_genome.fasta</li> <li>Mode<ul> <li>Use Augustus instead of Metaeuk \u201cYes, use Augustus\u201d</li> </ul> </li> <li>Auto-detect or select lineage? - \u201cSelect lineage\u201d<ul> <li>Lineage - Bacillales</li> </ul> </li> <li>Which outputs should be generated - Tick \u2018Select/Unselect all\u2019 2 times to get full output list</li> <li>Leave all else default and execute the program.</li> </ul> </li> </ul> <p>After the program has run, look at the \u2018short summary\u2019 output. It may look something like this: </p> <p>It seems that BUSCO could find almost all expected genes in the reference genome assembly.</p> <p>By looking at the results, we see that we have 449 / 450 Complete BUSCOs, and one Fragmented BUSCO.</p> <p>This will form the baseline for the BUSCO QC results expected of a high-quality genome assembly. </p> <p>From here, we will use our input DNA sequence data to assemble the genome of the sequenced organism, and will compare the QC results to that of the published \"reference_genome.fasta\" assembly.</p> <p></p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly/#draft-assembly-with-flye-nanopore-reads","title":"Draft assembly with Flye + Nanopore reads","text":"<p>Our first assembly will use the long-read data to create a draft genome, then the short-read data to \"polish\" (improve) the draft into a better assembly. </p> <p>We will start by using a long-read assembly tool called \"Flye\" to create an assembly using the Nanopore long-read data.</p> <ul> <li>Making sure you are on the \u2018Analyse Data\u2019 tab of Galaxy, look for the tool search bar at the top of the left panel.</li> <li>Search for Flye and select the tool</li> <li>We need to provide some information to Flye. Set the following parameters in the tool UI:<ul> <li>Input reads - nanopore_reads.fastq</li> <li>Leave all else default</li> </ul> </li> <li>Scroll down and run Flye by clicking the blue \u2018execute\u2019 button at the bottom of the page.</li> <li>Flye produces a number of outputs. We only need the \u2018consensus\u2019 fasta file. You can delete the other outputs.</li> </ul> <p>Once Flye has run, rename the \u201cFlye on data2: consensus\u201d output to \u201cFlye: Assembly\u201d</p> <p></p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly/#assessing-flye-draft-assembly-quality","title":"Assessing Flye draft assembly quality","text":"<p>BUSCO</p> <p>We need to check if our assembly is good quality or not. It is paramount that genome assemblies are high-quality for them to be useful.</p> <ul> <li>Find and select the Busco tool in the tools panel using the search bar.</li> <li>We will assess our Nanopore draft assembly created by Flye.</li> <li>In this tutorial, we will suspect that our organism is within the \u2018Bacillales\u2019 order.</li> <li>Parameters:<ul> <li>Sequences to analyse - Flye: Assembly</li> <li>Mode<ul> <li>Use Augustus instead of Metaeuk \u201cYes, use Augustus\u201d</li> </ul> </li> <li>Auto-detect or select lineage? - \u201cSelect lineage\u201d<ul> <li>Lineage - Bacillales</li> </ul> </li> <li>Which outputs should be generated - Tick \u2018Select/Unselect all\u2019 2 times to get full output list</li> <li>Leave all else default and execute the program.</li> </ul> </li> </ul> <p>After the program has run, look at the \u2018short summary\u2019 output. It may look something like this: </p> <p>The 'full table' is also useful. It gives a detailed list of the genes we are searching for, and information about whether they would missing, fragmented, or complete in our assembly.</p> <p></p> <p>Compared with the reference genome BUSCO report, we see that many genes are fragmented or missing. Our draft genome assembly isn\u2019t as good as the reference genome yet.</p> <p></p> <p>Quast</p> <p>Aside from BUSCO, we can use another method to perform assembly QC. </p> <p>Quast allows us to compare two assemblies to determine their similarity.</p> <p>Although the organism we sequenced may be different, we can use Quast to compare our assembly with the provided reference genome to see how similar they are on the individual base level.</p> <ul> <li>Search for the Quast tool in the tools panel.</li> <li>Parameters:<ul> <li>Assembly mode - \u201cIndividual assembly\u201d</li> <li>Use customized names for the input files? - \u201cNo, use dataset names\u201d</li> <li>Contigs/scaffolds file - Flye: Assembly</li> <li>Type of assembly? - \u201cGenome\u201d</li> <li>Use a reference genome? - Yes</li> <li>Reference genome - reference_genome.fasta</li> <li>Leave all else default</li> </ul> </li> <li>Execute Quast by clicking \u2018execute\u2019 at the bottom of the page.</li> <li>Quast will produce a HTML report summarising it\u2019s results.</li> <li>Open the report. It may look something like this: </li> <li>Note the:<ul> <li>Genome fraction (%)</li> <li># mismatches per 100 kbp</li> <li># indels per 100 kbp</li> <li># contigs information</li> </ul> </li> </ul> <p>From the output of Quast, our draft assembly seems to have good coverage and not too many contigs. </p> <p>Unfortunately, the mismatch / indel rate is quite high. </p> <p>Although we don\u2019t expect our organism to be identical to the supplied reference, we would expect fewer mismatches and indels, as the provided reference genome is very similar to organism which was sequenced.</p> <p> </p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly/#assembly-polishing-with-pilon","title":"Assembly Polishing with Pilon","text":"<p>We should be able improve our assembly with the Illumina reads available and correct some of these errors.</p> <p>This process involves two steps. We will first align the Illumina reads to our draft assembly, then supply the mapping information to Pilon, which will use this alignment information to error-correct our assembly.</p> <p> Illumina reads have much higher per-base accuracy than Nanopore reads. We will map the Illumina reads to our draft assembly using a short-read aligner called BWA-MEM. Then we can give Pilon this alignment file to polish our draft assembly. </p> <p></p> <p>Map Illumina reads to draft assembly</p> <ul> <li>Search for Map with BWA-MEM in the tools panel and select</li> <li>Parameters:<ul> <li>Will you select a reference genome from your history or use a built-in index? - Use a genome from history and build index</li> <li>Use the following dataset as the reference sequence - Flye: Assembly</li> <li>Single or Paired-end reads - Paired</li> <li>Select first set of reads - illumina_reads_1.fastq</li> <li>Select second set of reads - illumina_reads_2.fastq</li> <li>Leave all else default and execute the program.</li> </ul> </li> </ul> <p> The output will be a BAM file (Binary Alignment Map). This is tabular data recording information about how reads were aligned to the draft assembly. </p> <p> We can now use this output BAM file as an input to Pilon. </p> <p>Once BWA-MEM has run, rename its output to \u201cFlye: Short read alignments\u201d</p> <p></p> <p>Polish assembly with Pilon</p> <ul> <li>Search for pilon in the tools panel and select</li> <li>Parameters:<ul> <li>Source for reference genome used for BAM alignments - Use a genome from History<ul> <li>Select a reference genome - Flye: Assembly</li> </ul> </li> <li>Type automatically determined by pilon<ul> <li>Input BAM file - Flye: Short read alignments</li> </ul> </li> <li>Variant calling mode - No</li> <li>Leave all else default and execute the program.</li> </ul> </li> </ul> <p> Pilon gives a single output file - the polished assembly. </p> <p>Once pilon has finished, rename its output to \u201cFlye: Polished assembly\u201d</p> <p></p> <p>Compare draft and polished assemblies</p> <p>We are now interested to see how much pilon improved our draft assembly.</p> <p>\u2014 QUAST \u2014</p> <ul> <li>Run Quast as before with the new \u201cFlye: Polished assembly\u201d data<ul> <li>Select the history item for our initial Quast job, then click the rerun  button. This will load the settings used for the previous quast job.</li> <li>Change the Contigs/scaffolds file input to \u201cFlye: Polished assembly\u201d.</li> <li>Hit the \u201cRun Tool\u201d button to submit the job.</li> </ul> </li> </ul> <p>After Quast has finished, open the HTML report.</p> <p>Make note of # mismatches per 100 kbp and # indels per 100 kbp.  Has our assembly improved?</p> <p>\u2014 BUSCO \u2014</p> <ul> <li>Run BUSCO as before with the new \u201cFlye: Polished assembly\u201d data<ul> <li>Select the history item for our initial Busco job, then click the rerun  button. This will load the settings used for the previous Busco job.</li> <li>Change the Sequences to analyse input to \u201cFlye: Polished assembly\u201d.</li> <li>Hit the \u201cRun Tool\u201d button to submit the job.</li> </ul> </li> </ul> <p>After Busco has finished, open the \"short summary\" output.</p> <p>Have we identified more expected genes?</p> <p></p> <p>Section Summary</p> <p> All going well, the polished assembly should be much higher quality than our draft. </p> <p> The per-base accuracy of our assembly contigs should have markedly improved. This is reflected in the lower mismatches and indels per 100kbp reported by Quast, and the higher number of complete BUSCO genes. Our contiguity and coverage (as measured by the genome fraction (%) statistic reported by Quast) may not show the same level of improvement, as the polishing step is mainly aimed at improving per-base contig accuracy. </p> <p> Our next step is to use a purpose-built hybrid de novo assembly tool, and compare its performance with our sequential draft + polishing approach. </p> <p></p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly/#section-questions","title":"Section Questions","text":"<p>Which read set - short or long - was used to create our draft?</p> Answer (click to reveal) Long reads (Nanopore) were used to create the draft. Long reads allow excellent re-creation of the proper structure of the genome, and adequately handle repeat regions. The drawback of long reads is a higher error rate of the technology compared to short reads. This results in more mismatches and indels.  <p>How was the draft polished?</p> Answer (click to reveal) Illumina reads have higher per-base accuracy than Nanopore. Illumina reads were aligned to the draft assembly, then Pilon used this alignment information to improve locations with errors in the assembly.  <p>How does Quast inform on assembly quality?</p> Answer (click to reveal) Quast shows summary information about the assembly contigs. If a reference genome is given, it informs the genome fraction (how much of the reference is covered by the assembly), if any genomic regions appear duplicated, and error information including the rate of mismatches and indels.  <p>How does BUSCO inform on assembly quality?</p> Answer (click to reveal) BUSCO does not use a reference genome to compare. It attempts to locate key genes which should be present in the assembly, and reports whether it could/could not find those genes. If a key gene is found, it reports whether the gene was fragmented (errors) or complete."},{"location":"tutorials/hybrid_assembly/nanopore_assembly/#_1","title":"Hybrid genome assembly - Nanopore and Illumina","text":""},{"location":"tutorials/hybrid_assembly/nanopore_assembly/#section-2-purpose-built-hybrid-assembly-tool-unicycler","title":"Section 2: Purpose-built hybrid assembly tool - Unicycler","text":"<p> In this section, we will use a purpose-built tool called Unicycler to perform hybrid assembly. </p> <p> Unicycler uses our Nanopore and Illumina read sets together as input, and returns an assembly. Once we have created the assembly, we will assess its quality using Quast and BUSCO and compare with our previous polished assembly. We will also perform BUSCO analysis on the supplied reference genome itself, to record a baseline for our theoretical best BUSCO report. </p> <p></p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly/#hybrid-de-novo-assembly-with-unicycler","title":"Hybrid de novo assembly with Unicycler","text":"<p> Unicycler performs assembly in the opposite manner to our approach. Illumina reads are used to create an assembly graph, then Nanopore reads are used to disentangle problems in the graph. The Nanopore reads serve to bridge Illumina contigs, and to reveal how the contigs are arranged sequentially in the genome. </p> <p></p> <p>Run Unicycler</p> <ul> <li>Find Unicycler in the tools panel. It is listed as Create assemblies with Unicycler</li> <li>Run Unicycler using the Nanopore and Illumina read sets.</li> <li>Parameters:<ul> <li>Paired or Single end data? - Paired</li> <li>Select first set of reads - illumina_reads_1.fastq</li> <li>Select second set of reads - illumina_reads_2.fastq</li> <li>Select long reads. If there are no long reads, leave this empty - nanopore_reads.fastq  (if nanopore_reads.fastq does not appear in the dropdown, its datatype needs to be changed - click then pencil icon next to nanopore_reads.fastq in the history panel -&gt; \u2018Datatypes\u2019 tab -&gt; \u2018New Type\u2019 - fastqsanger)</li> <li>Leave all else default and execute the program.</li> </ul> </li> </ul> <p>Unicycler will output three files - the assembly, an assembly graph, and SPAges graphs.  We are interested in the \u201cFinal Assembly\u201d output, which is the assembly as a Fasta file.</p> <p>Once Unicycler has run, rename the \u201cFinal Assembly\u201d output to \u201cUnicycler: Assembly\u201d</p> <p></p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly/#comparing-unicycler-assembly-to-nanopore-illumina-polished-assembly","title":"Comparing Unicycler assembly to Nanopore + Illumina polished assembly","text":"<p> BUSCO and Quast can be used again to assess our Unicycler assembly. As a purpose-built tool, it generally produces much better assemblies than our sequential approach. This is reflected as (Quast) a lower number of contigs, lower mismatches and indels per 100kb, and (BUSCO) greater number of BUSCO genes complete. </p> <p></p> <p>Run BUSCO on the \u201cUnicycler: Assembly\u201d data in your history.</p> <p> At time of writing, these were the BUSCO results: </p> <p></p> <p>It seems that the Unicycler assembly is much better than the Flye + Pilon polishing assembly, and produces the same report as the reference genome. Awesome! Looks like this is pretty good. </p> <p></p> <p>Run Quast on the \u201cUnicycler: Assembly\u201d data in your history.</p> <p> At time of writing, these were the BUSCO results: </p> <p></p> <p>It seems that the Unicycler assembly has:</p> <ul> <li>Very high Genome fraction (coverage of the reference genome)</li> <li>Very few mismatches and indels per 100 kbp</li> <li>15 contigs (compared with the reference genome only having 1 contig)</li> </ul> <p>These results indicate that our Unicycler assembly is high quality, and the organism is extremely similar to the organism of the reference genome. </p> <p>To improve our assembly further to be publishable \u201ccomplete\u201d quality, we would want to reduce the number of contigs (ideally to a single contig). If the organism has plasmids, we would expect a handfull of contigs, likely below 10.</p> <p>To do this, the best course of action would be to generate more long-read data.</p> <p></p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly/#section-questions_1","title":"Section Questions","text":"<p>Why did we select \u2018Paired\u2019 for our Illumina reads in the Unicycler tool?</p> Answer (click to reveal) Our short read set was 'paired-end'. Short read technology can only sequence a few hundred base-pairs in a single read. To provide better structural information, paired-end sequencing was created, where longer fragments (fixed length) are used. A few hundred bp is sequenced at both ends of the fragment, leaving the middle section unsequenced. The reads produced (the mate-pair) from a single fragment are separated by a fixed length, so we know they are nearby in the genome.  <p>Does Unicycler begin by using the Long or Short reads?</p> Answer (click to reveal) Unicycler uses short reads first. It creates an assembly graph from short reads, then uses the long reads to provide better structural information of the genome.  <p>How does Unicycler use long reads to improve its assembly graph?</p> Answer (click to reveal) The assembly graph produced by short reads has tangled regions. When we don't know how sections of the genome are arranged, tangled regions appear in the graph.  Unicycler uses Nanopore reads which overlap these tangled regions to resolve the proper structure of the genome.  <p></p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly/#conclusion","title":"Conclusion","text":"<p> We have learned two methods for hybrid de novo assembly. The combination of long- and short-read technology is clearly powerful, represented by our ability to create a good assembly with only 25x coverage (100Mb) of Nanopore, and 50x coverage of Illumina reads (200Mb). </p> <p> To further improve our assembly, extra Nanopore read data may provide most benefit. At 50x coverage (200Mb), we may achieve a single, or few contig assembly with high per-base accuracy. </p> <p> The development of new purpose-built tools for hybrid de novo assembly like Unicycler have improved the quality of assemblies we can produce. These tools are of great importance and while they already produce great results, they will continue to improve over time. </p> <p></p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly/#additional-reading","title":"Additional reading","text":"<p>Links to additional recommended reading and suggestions for related tutorials. Flye: https://github.com/fenderglass/Flye/blob/flye/docs/USAGE.md#algorithm Pilon: https://github.com/broadinstitute/pilon/wiki/Methods-of-Operation Unicycler: https://github.com/rrwick/Unicycler Quast: https://academic.oup.com/bioinformatics/article/29/8/1072/228832 BUSCO analysis: https://academic.oup.com/bioinformatics/article/31/19/3210/211866</p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly_1hr/","title":"Nanopore assembly 1hr","text":""},{"location":"tutorials/hybrid_assembly/nanopore_assembly_1hr/#hybrid-genome-assembly-nanopore-and-illumina-1hr","title":"Hybrid genome assembly - nanopore and illumina (1hr)","text":"<p>Anticipated workshop duration is 1 hour.  </p> <p>For queries relating to this workshop, contact Melbourne Bioinformatics (bioinformatics-training@unimelb.edu.au).</p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly_1hr/#overview","title":"Overview","text":""},{"location":"tutorials/hybrid_assembly/nanopore_assembly_1hr/#topic","title":"Topic","text":"<ul> <li> Genomics</li> <li> Transcriptomics</li> <li> Proteomics</li> <li> Metabolomics</li> <li> Statistics and visualisation</li> <li> Structural Modelling</li> <li> Basic skills</li> </ul>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly_1hr/#skill-level","title":"Skill level","text":"<ul> <li> Beginner  </li> <li> Intermediate  </li> <li> Advanced  </li> </ul> <p>This workshop is designed for participants with no command line knowledge. A web-based platform called Galaxy will be used to run our analysis.</p> <p>How do long- and short-read assembly methods differ?</p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly_1hr/#description","title":"Description","text":"<p>Assemble a genome!Learn how to create and assess genome assemblies using the powerful combination of nanopore and illumina reads </p> <p>This tutorial explores how long and short read data can be combined to produce a high-quality \u2018finished\u2019 bacterial genome sequence. Termed \u2018hybrid assembly\u2019, we will use read data produced from two different sequencing platforms, Illumina (short read) and Oxford Nanopore Technologies (long read), to reconstruct a bacterial genome sequence.</p> <p>In this tutorial we will perform \u2018de novo assembly\u2019. De novo assembly is the process of assembling a genome from scratch using only the sequenced reads as input - no reference genome is used.  This approach is common practise when working with microorganisms, and has seen increasing use for eukaryotes (including humans) in recent times.  </p> <p>Using short read data (Illumina) alone for de novo assembly will produce a complete genome, but often in many pieces (commonly called a \u2018draft genome\u2019). For the genome to be assembled into a single chromosome (plus a sequence for each plasmid), reads would need to be longer than the longest repeated element on the genome (usually ~7,000 base pairs, Note: Illumina reads are 350 base maximum).   Draft bacterial genome sequences are cheap to produce (less than AUD$60) and useful (&gt;300,000 draft Salmonella enterica genome sequences published at NCBI https://www.ncbi.nlm.nih.gov/pathogens/organisms/), but sometimes you need a high-quality \u2018finished\u2019 bacterial genome sequence.  There are &lt;1,000 are \u2018finished\u2019 or \u2018closed\u2019 Salmonella enterica genome sequences.</p> <p>In these cases, long reads can be used together with short reads to produce a high-quality assembly.  Nanopore long reads (commonly &gt;40,000 bases) can fully span repeats, and reveal how all the genome fragments should be arranged. Long reads currently have higher error rate than short reads, so the combination of technologies is particularly powerful. Long reads provide information on the genome structure, and short reads provide high base-level accuracy.  </p> <p>Combining read data from the long and short read sequencing platforms allows the production of a complete genome sequence with very few sequence errors, but the cost of the read data is about AUD$ 1,000 to produce the sequence. Understanably, we usually produce a draft genome sequence with very few sequence errors using the Illumina sequencing platform.</p> <p>Nanopore sequencing technology is rapidly improving, expect the cost difference to reduce!!</p> <p>Data: Nanopore reads, Illlumina reads, bacterial organism (Bacillus subtilis) reference genome Tools: Unicycler, Quast, BUSCO Pipeline: FastQC, MultiQC, NanoPlot, Unicycler, Quast, BUSCO</p> <p></p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly_1hr/#learning-objectives","title":"Learning Objectives","text":"<p>At the end of this introductory workshop, you will:</p> <ul> <li>Understand how Nanopore and Illumina reads can be used together to produce a high quality assembly</li> <li>Be familiar with genome assembly and polishing programs</li> <li>Learn how to assess the quality of a genome assembly, regardless of whether a reference genome is present or absent</li> <li>Be able to assemble an unknown, previously undocumented genome to high-quality using Nanopore and Illumina reads.</li> </ul> <p></p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly_1hr/#requirements-and-preparation","title":"Requirements and preparation","text":"<p>Attendees are required to bring their own laptop computers. </p> <p>All data and tools are available on usegalaxy.org.au. You will need a computer to connect to and use their platform. Before the tutorial, navigate to https://usegalaxy.org.au/ and use your email to create an account. Click \u201cLogin or register\u201d in the top navigation bar of galaxy to do this.  </p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly_1hr/#preparing-your-laptop-prior-to-starting-this-workshop","title":"Preparing your laptop prior to starting this workshop","text":"<ul> <li>No additional software needs to be installed for this workshop.</li> </ul>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly_1hr/#required-data","title":"Required Data","text":"<ul> <li>No additional data needs to be downloaded for this workshop.</li> </ul>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly_1hr/#author-information","title":"Author Information","text":"<p>Written by: Grace Hall Melbourne Bioinformatics, The University of Melbourne</p> <p>Created/Reviewed: March 2020</p> <p></p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly_1hr/#background","title":"Background","text":""},{"location":"tutorials/hybrid_assembly/nanopore_assembly_1hr/#how-do-we-produce-the-genomic-dna-for-a-bacterial-isolate","title":"How do we produce the genomic DNA for a bacterial isolate?","text":"<p>Traditional in vitro culture techniques are important. Take a sample (e.g. a swab specimen from an infected sore) and streak a \u2018loopful\u2019 on to solid growth medium that suppoprts the growth of the bacteria. Technology from the time of Louis Pasteur!</p> <p>Mixtures of bacterial types can be sequenced e.g. prepare genomic DNA from environmental samples containing bacteria - water, soil, faecal samples etc. (Whole Metagenome Sequencing)</p> <p></p> <p>One colony contains 10<sup>7</sup> \u2013 10<sup>8</sup> cells. The genomic DNA extracted from one colony is enough for Illumina sequencing. Larger amounts of genomic DNA are required for Nanopore sequencing.</p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly_1hr/#shotgun-sequencing-illumina-sequencing-library","title":"Shotgun sequencing - Illumina Sequencing Library","text":"<p>Genomic DNA is prepared for sequencing by fragmenting/shearing: multiple copies of Chromosome + plasmid  \u2192 ~500 bp fragments</p> <p>Note: Nanopore sequencing - there is usually no need to shear the genomic DNA specialist methods are used to minimise shearing during DNA preparation. For Nanopore sequencing the longer the DNA fragments the better!</p> <p></p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly_1hr/#section-1-read-set-summaries-and-qc","title":"Section 1: Read set summaries and QC","text":"<p>In this section we will import and perform quality control (QC) on our data. </p> <p>Today we will use 4 pieces of data - 2 short read sets, 1 long read set, and a reference genome to compare our assembly with. </p> <p></p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly_1hr/#getting-the-data","title":"Getting the data","text":"<ol> <li>Make sure you have an instance of Galaxy ready to go.<ul> <li>Navigate to the Galaxy Australia server and sign in if you have an account.</li> </ul> </li> <li> <p>Copy an existing history</p> <ul> <li>The data you will need is available in an existing Galaxy history: </li> <li>https://usegalaxy.org.au/u/graceh1024/h/hybrid-de-novo-assembly---1hr</li> <li>Import the history \u2018+\u2019 icon at the top right of the page. </li> </ul> <p>  3. Look at the history you imported * There are 4 files - Nanopore reads, two sets of Illumina reads, and a reference genome for the organism we will assemble. * Our Illumina data are paired-end reads. Two separate files will be present, with only \u20181\u2019 and \u20182\u2019 being different in their filenames.  * We will use the reference_genome.fasta to assess the quality of our assembly</p> </li> </ol> <p></p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly_1hr/#read-set-summaries","title":"Read set summaries","text":"<p>Often, it is prudent to first assess the quality of our read sets. For the short reads, we are concerned with base quality, sequence duplication, and presence of adapter sequences. For nanopore, we want to know about the length and quality distribution of reads, as these may both be highly variable. </p> <p>FastQC creates summary reports for short read data. We will use this tool twice - once for each Illumina read set. We can then use a tool called MultiQC to combine these reports for easy viewing. </p> <p>For Nanopore data, NanoPlot is a great option. It creates plots which aim to summarise the length and quality distribution of long read sets. </p> <p>Depending on these summaries, we may choose to perform a QC step to remove any poor quality reads before proceeding. </p> <p></p> <p>Run FastQC on each short read set * Find FastQC in the tools panel. It is listed as \u2018FastQC Read Quality reports\u2019 * Parameters:     * Short read data from your current history: illumina_reads_1.fastq     * Leave all else default and execute the program. * Run FastQC again as above, but change Short read data from your current history: to \u2018illumina_reads_2.fastq\u2019. * Rename the FastQC RawData output for illumina_reads_1.fastq to \u2018FastQC reads 1 - RawData\u2019 * Rename the FastQC RawData output for illumina_reads_2.fastq to \u2018FastQC reads 2 - RawData\u2019</p> <p></p> <p>FastQC produces two outputs - \u2018RawData\u2019, and \u2018Webpage\u2019. Typically, the webpage is for human viewing, and the RawData can be given to other programs, such as MultiQC.</p> <p>At this stage, we have two FastQC outputs - one for each short read set. We will now combine them into a single output using MultiQC for easier interpretation. </p> <p></p> <p>Run MultiQC * Find MultiQC in the tools panel. It is listed as \u2018MultiQC aggregate results from bioinformatics analyses into a single report\u2019 * Parameters:     * Which tool was used generate logs? FastQC     * FastQC output         * Type of FastQC output? RawData             * FastQC ouptut FastQC reads 1 - RawData       * click \u2018+ Insert FastQC output\u2019     * FastQC output         * Type of FastQC output? RawData             * FastQC ouptut FastQC reads 2 - RawData  * Leave all else default and execute the program.  </p> <p></p> <p>MultiQC also produces two outputs - \u2018Stats\u2019 and \u2018Webpage\u2019. Inspect the Webpage output by clicking the eye icon on this history item.</p> <p>MultiQC produces a number of plots, but we are only interested in two today: the \u2018Sequence Counts\u2019 and \u2018Sequence Quality Histograms\u2019 plots. </p> <p>The \u2018Sequence Count\u2019 displays multiple pieces of information. Firstly, we can see that both read sets have the same total number of reads (sanity check - the number should be identical otherwise some reads don\u2019t have a mate!). Additionally, \u2018Duplicate Reads\u2019 are a fraction of the \u2018Unique Reads\u2019. High levels of sequence duplication can be caused by many factors, but since this is whole genome sequencing (WGS) data, we expect most reads to be unique. </p> <p></p> <p></p> <p></p> <p>Scrolling down, the \u2018Sequence Quality Histograms\u2019 plot informs us that read 1 for each mate pair is generally lower quality than read 2. This said, they are both high quality and will be fine for our purpose. </p> <p></p> <p></p> <p></p> <p>Our Illumina reads seem to be reasonable quality. We will now inspect the Nanopore reads.</p> <p></p> <p>Run NanoPlot * Find MultiQC in the tools panel. It is listed as \u2018NanoPlot Plotting suite for Oxford Nanopore sequencing data and alignments\u2019 * Parameters:     * Type of the file(s) to work on         * files nanopore_reads.fastq * Leave all else default and execute the program. </p> <p></p> <p>NanoPlot produces 5 outputs, but we are only interested in the \u2018HTML report\u2019 output. View this file by clicking the eye icon on this history item.</p> <p>The NanoPlot HTML report includes a table, followed by a number of plots. The table provides a summary of the read set. The main statistics we will look at are Median read length, Median read quality, and Number of reads. </p> <p></p> <p></p> <p></p> <p>Our median read length (3261 bp) is short for Nanopore data, but the median quality is good (11.7), equating to a per base accuracy of approximately 93%. </p> <p>Below the summary table, we see plots relating to read length and quality distributions. Below is the log transformed read length histogram:</p> <p></p> <p></p> <p></p> <p>The vast majority of our reads sit between  1 - 10 kbp in length. Looking at this histogram closely, we see that the histogram is abruptly cut off at 1000 bp - this read set has previously been filtered to remove reads less than 1000 base pairs, resulting in this effect! </p> <p></p> <p>Our read sets appear to be good enough to proceed without performing further QC. Next, we will create an assembly from these reads using Unicycler. </p> <p></p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly_1hr/#section-2-hybrid-de-novo-assembly","title":"Section 2: Hybrid de-novo assembly","text":"<p>In this section you will use a tool called \u2018Unicycler\u2019 to create a draft genome assembly from Illumina and Nanopore reads. </p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly_1hr/#unicycler","title":"Unicycler","text":"<p>Unicycler performs assembly using multiple steps. Illumina reads are used first to create an assembly graph using a program called SPAdes, then Nanopore reads are used to disentangle problems in the graph. The Nanopore reads serve to bridge Illumina contigs, and to reveal how the contigs are arranged sequentially in the genome. After the assembly is created, a program called Pilon uses the Illumina reads to perform a final round of error-correction before the final assembly is output. </p> <p>For more information on Unicycler, see this link:  https://github.com/rrwick/Unicycler</p> <p></p> <p>Run Unicycler</p> <ul> <li>Find Unicycler in the tools panel. It is listed as \u2018Create assemblies with Unicycler\u2019</li> <li>Run Unicycler using the Nanopore and Illumina read sets.</li> <li>Parameters:<ul> <li>Paired or Single end data? - Paired</li> <li>Select first set of reads - illumina_reads_1.fastq</li> <li>Select second set of reads - illumina_reads_2.fastq</li> <li>Select long reads - nanopore_reads.fastq  (if nanopore_reads.fastq does not appear in the dropdown, its datatype needs to be changed - click then pencil icon next to nanopore_reads.fastq in the history panel -&gt; \u2018Datatypes\u2019 tab -&gt; \u2018New Type\u2019 - fastqsanger)</li> <li>SPAdes options<ul> <li>Number of k-mer steps to use in SPAdes assembly 5</li> </ul> </li> <li>Rotation options<ul> <li>Do not rotate completed replicons to start at a standard gene. \u2018Yes\u2019</li> </ul> </li> <li>Pilon options<ul> <li>Do not use Pilon to polish the final assembly. \u2018Yes\u2019</li> </ul> </li> <li>Leave all else default and execute the program.</li> <li>Rename the \u2018Final Assembly\u2019 output of Unicycler to \u2018Unicycler_assembly.fasta\u2019</li> </ul> </li> </ul> <p></p> <p>Unicycler will output two files - a Final Assembly, and a Final Assembly Graph. We are interested in the Final Assembly.</p> <p>For the sake of time, we have disabled some quality settings in Unicycler. We reduced the number of k-mer steps from 10 to 5 in SPAdes assembly (overall worse assembly), have disabled assembly polishing (improves base-level accuracy), and have chosen not to set the start of each replicon to a standard position. Given more time, we would leave these default and not disable any of these features.  </p> <p>We now have an assembly which we can use for all kinds of downstream analysis. That said, we currently have no idea of the overall quality of this assembly. Additionally, we disabled features which improve the assembly quality due to time constraints, so this is particularly important in our case. </p> <p>Many factors may impact assembly quality, including the following: * Read depth / amount of sequence data * Read quality * The repetitiveness of the sequenced genome * Its ploidy (number of copies of each chromosome - humans are diploid: 2 copies)</p> <p>We need to therefore assess the quality of the assembly we have created. We will use two tools - Quast, and BUSCO to do this. </p> <p></p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly_1hr/#section-questions","title":"Section Questions","text":"<p>Why did we select \u2018Paired\u2019 for our Illumina reads in the Unicycler tool? </p> Answer (click to reveal) Our short read set was 'paired-end'. Short read technology can only sequence a few hundred base-pairs in a single read. To provide better structural information, paired-end sequencing was created, where longer fragments (fixed length) are used. A few hundred bp is sequenced at both ends of the fragment, leaving the middle section unsequenced. The reads produced (the mate-pair) from a single fragment are separated by a fixed length, so we know they are nearby in the genome.   <p>Does Unicycler begin by using the Long or Short reads?</p> Answer (click to reveal) Unicycler uses short reads first. It creates an assembly graph from short reads, then uses the long reads to provide better structural information of the genome.   <p>How does Unicycler use long reads to improve its assembly graph?</p> Answer (click to reveal) The assembly graph produced by short reads has tangled regions. When we don't know how sections of the genome are arranged, tangled regions appear in the graph.  Unicycler uses Nanopore reads which overlap these tangled regions to resolve the proper structure of the genome.   <p></p> <p></p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly_1hr/#section-3-assessing-assembly-quality","title":"Section 3: Assessing assembly quality","text":"<p>Once we have created the assembly, we need to assess its quality. In this section we will use Quast and BUSCO to perform this assessment. We will also perform BUSCO analysis on the supplied reference genome itself, to record a baseline for our theoretical best BUSCO report.</p> <p></p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly_1hr/#quast","title":"Quast","text":"<p>A reference genome for the organism we sequenced has been supplied - listed as reference_genome.fasta in the history. This reference genome was assembled using a much higher sequencing depth, and can be used as \u2018ground truth\u2019 to assess our assembly against. The \u2018Quast\u2019 tool will perform this comparison.</p> <ul> <li>Search for the Quast tool in the tools panel.</li> <li>Parameters:<ul> <li>Contigs/scaffolds file Unicycler_assembly.fasta</li> <li>Use a reference genome? Yes</li> <li>Reference genome reference_genome.fasta</li> </ul> </li> <li>Leave all else default and click \u2018execute\u2019 </li> </ul> <p></p> <p>We are mainly interested in one of the outputs - the HTML report</p> <p>Open the report. It may look something like this:</p> <p></p> <p>Note the Genome fraction (%), # mismatches per 100 kbp, # indels per 100 kbp and # contigs information.</p> <p>We seem to have good coverage and not too many contigs, but our error rate is quite high.</p> <p>In this case we were able to use a reference genome to assess assembly quality, but this is not always the case. When our sample organism is unknown, we need another method to assess assembly quality. BUSCO analysis is one way to do this.</p> <p></p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly_1hr/#busco","title":"BUSCO","text":"<p>BUSCO analysis uses the presence, absence, or fragmentation of key genes in an assembly to determine is quality. </p> <p>BUSCO genes are specifically selected for each taxonomic clade, and represent a group of genes which each organism in the clade is expected to possess. At higher clades, \u2018housekeeping genes\u2019 are the only members, while at more refined taxa such as order or family, lineage-specific genes can also be used.</p> <p>We will use BUSCO to assess our Unicycler draft assembly. While sometimes we will not have a reference genome for comparison, we may be able to find out roughly where it sits in the tree of life using certain methods. In this tutorial, we will suspect that our organism is within the \u2018Bacillales\u2019 order.</p> <ul> <li>Search for the Quast tool in the tools panel.</li> <li>Parameters:<ul> <li>Sequences to analyse Unicycler_assembly.fasta</li> <li>Lineage Bacillales</li> </ul> </li> <li>Leave all else default and execute the program.</li> </ul> <p>After the program has run, look at the \u2018short summary\u2019 output. It may look something like this:</p> <p></p> <p> The 'full table' is also useful. It gives a detailed list of the genes we are searching for, and information about whether they would missing, fragmented, or complete in our assembly. </p> <p></p> <p> It seems that most expected genes are missing or fragmented in our assembly. It is likely that the frequent errors in our draft assembly are causing this result. We should be able improve our assembly with the Illumina reads available and correct some of these errors. </p> <p> This process involves two steps. We will first align the Illumina reads to our draft assembly, then supply the mapping information to Pilon which will use this alignment information to error-correct our assembly. </p> <p></p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly_1hr/#section-questions_1","title":"Section Questions","text":"<p>How does Quast inform on assembly quality?</p> Answer (click to reveal) Quast shows summary information about the assembly contigs. If a reference genome is given, it informs the genome fraction (how much of the reference is covered by the assembly), if any genomic regions appear duplicated, and error information including the rate of mismatches and indels.  <p>How does BUSCO inform on assembly quality?</p> Answer (click to reveal) BUSCO does not use a reference genome to compare. It attempts to locate key genes which should be present in the assembly, and reports whether it could/could not find those genes. If a key gene is found, it reports whether the gene was fragmented (errors) or complete.   <p></p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly_1hr/#conclusion","title":"Conclusion","text":"<p> Today we have learned one workflow for performing hybrid de novo genome assembly. The combination of long- and short-read technology is clearly powerful, represented by our ability to create a good assembly with only approximately 20x coverage (87Mb) of Nanopore, and 25x coverage of Illumina reads (100Mb). </p> <p> To further improve our assembly, extra read data may provide most benefit. For bacterial genomes, we often prefer 100x or greater coverage, with which we may achieve a high per-base accuracy assembly with the correct number of contigs (number of replicons in the genome). </p> <p> The development of new purpose-built tools for hybrid de novo assembly like Unicycler have improved the quality of assemblies we can produce. These tools are of great importance and while they already produce great results, they will continue to improve over time. </p> <p></p>"},{"location":"tutorials/hybrid_assembly/nanopore_assembly_1hr/#additional-reading","title":"Additional reading","text":"<p>Links to additional recommended reading and suggestions for related tutorials. Pilon: https://github.com/broadinstitute/pilon/wiki/Methods-of-Operation Unicycler: https://github.com/rrwick/Unicycler Quast: https://academic.oup.com/bioinformatics/article/29/8/1072/228832 BUSCO analysis: https://academic.oup.com/bioinformatics/article/31/19/3210/211866</p>"},{"location":"tutorials/intro_R_biologists/","title":"Introduction to R for Biologists","text":""},{"location":"tutorials/intro_R_biologists/#introduction-to-r-for-biologists","title":"Introduction to R for Biologists","text":"<p>Deprecated</p> <p>This workshop has been deprecated. For the current version, please visit https://melbournebioinformatics.github.io/intro-to-R/.</p> <p>Anticipated workshop duration when delivered to a group of participants is 3 hours.  </p> <p>For queries relating to this workshop, contact Melbourne Bioinformatics (bioinformatics-training@unimelb.edu.au).</p>"},{"location":"tutorials/intro_R_biologists/#overview","title":"Overview","text":""},{"location":"tutorials/intro_R_biologists/#topic","title":"Topic","text":"<ul> <li> Genomics</li> <li> Transcriptomics</li> <li> Proteomics</li> <li> Metabolomics</li> <li> Statistics and visualisation</li> <li> Structural Modelling</li> <li> Basic skills</li> </ul>"},{"location":"tutorials/intro_R_biologists/#skill-level","title":"Skill level","text":"<ul> <li> Beginner  </li> <li> Intermediate  </li> <li> Advanced  </li> </ul> <p>This workshop is is aimed at bench biologists with no coding/programming skills.</p>"},{"location":"tutorials/intro_R_biologists/#description","title":"Description","text":"<p>Ever wanted to visualise your own data? You can with R!</p> <p>This introduction to R and RStudio will provide beginners with experience with loading, manipulating and visualising biological data using the tidyverse collection of R packages. The example data used is publicly available RNA-seq data, therefore attendees will gain experience in the structure and appearance of RNA-seq data. This workshop has been developed collaboratively by training specialists at Peter MacCallum Cancer Centre and Melbourne Bioinformatics.</p> <p>Tools: R, RStudio, tidyverse, ggplot2</p>"},{"location":"tutorials/intro_R_biologists/#learning-objectives","title":"Learning Objectives","text":"<p>At the end of this introductory workshop, you will be able to:</p> <ul> <li>Load tabular data into R.</li> <li>Apply tidyverse functions to manipulate data in R.</li> <li>Produce simple plots such boxplots using ggplot.</li> <li>Understand and apply data faceting in ggplot.</li> <li>Modify the aesthetics of a ggplot plot.</li> </ul>"},{"location":"tutorials/intro_R_biologists/#requirements-and-preparation","title":"Requirements and preparation","text":"<p>Attendees are required to bring their own laptop computers to face to face workshops. </p> <p>At least one week before the workshop, participants should install the software and data files below.  This should provide sufficient time for participants to liaise with their own IT support should they encounter any IT problems. We recommend you watch this video to familiarise yourself with R, Rstudio and Tidyverse.</p>"},{"location":"tutorials/intro_R_biologists/#preparing-your-laptop-prior-to-starting-this-workshop","title":"Preparing your laptop prior to starting this workshop","text":"<ol> <li>Download and install R (free) on your computer.</li> <li>Download and install RStudio (free) on your computer.</li> <li>Detailed instructions for installing R and RStudio are available here.</li> </ol>"},{"location":"tutorials/intro_R_biologists/#required-software","title":"Required Software","text":"<ul> <li>R</li> <li>Rstudio</li> </ul>"},{"location":"tutorials/intro_R_biologists/#required-data","title":"Required Data","text":"<ul> <li>Data file can be downloaded from here</li> <li>Hyper links for downloading the required data are also included in the workshop PDF, see \u2018Workshop material\u2019 below.</li> </ul>"},{"location":"tutorials/intro_R_biologists/#author-information","title":"Author Information","text":"<p>Written by: Maria Doyle, Jessica Chung and Victoria Perreau This workshop has been developed collaboratively by training specialists at Peter MacCallum Cancer Centre and Melbourne Bioinformatics</p> <p>Created: October 2019 Last Reviewed: October 2020</p>"},{"location":"tutorials/intro_R_biologists/#workshop-material","title":"Workshop Material","text":"<p>Detailed workshop material, including links for data download, are available as both:</p> <ul> <li>HTML version</li> <li>PDF version</li> </ul>"},{"location":"tutorials/intro_R_biologists/#additional-reading","title":"Additional reading","text":"<ul> <li>A short intro to R and tidyverse</li> <li>Topp 50 ggplot visualisations</li> <li>R for Data Science</li> </ul>"},{"location":"tutorials/intro_R_biologists/formatting_template/","title":"Formats to use","text":""},{"location":"tutorials/intro_R_biologists/formatting_template/#text-formatting","title":"Text formatting","text":"<p>Bold Italics Bold Italics</p>"},{"location":"tutorials/intro_R_biologists/formatting_template/#headings-this-is-2nd-level","title":"Headings (This is 2<sup>nd</sup> level)","text":""},{"location":"tutorials/intro_R_biologists/formatting_template/#the-3rd-level","title":"The 3<sup>rd</sup> level","text":""},{"location":"tutorials/intro_R_biologists/formatting_template/#the-4th-level","title":"The 4<sup>th</sup> level","text":""},{"location":"tutorials/intro_R_biologists/formatting_template/#the-5th-level","title":"The 5<sup>th</sup> level","text":""},{"location":"tutorials/intro_R_biologists/formatting_template/#the-6th-level","title":"The 6<sup>th</sup> level","text":""},{"location":"tutorials/intro_R_biologists/formatting_template/#code-blocks-and-inline-code","title":"Code Blocks and inline code","text":"<p>They can be added like this. Many different languages are supported.</p>"},{"location":"tutorials/intro_R_biologists/formatting_template/#blocks","title":"Blocks","text":"<pre><code>$ ls\nexp01  file01  muscle.fq\n</code></pre> <p>or</p> <pre><code>import tensorflow as tf\n</code></pre>"},{"location":"tutorials/intro_R_biologists/formatting_template/#inline-code","title":"Inline code","text":"<p>Code can also be shown as an inline snippet like this <code>import tensorflow as tf</code>.</p>"},{"location":"tutorials/intro_R_biologists/formatting_template/#lists","title":"Lists","text":"<p>If you need to add a list:  </p>"},{"location":"tutorials/intro_R_biologists/formatting_template/#unordered-lists","title":"Unordered Lists","text":"<ul> <li>Some information</li> <li>Some more information</li> </ul>"},{"location":"tutorials/intro_R_biologists/formatting_template/#ordered-lists","title":"Ordered Lists","text":"<ol> <li> <p>Some point</p> </li> <li> <p>Another point</p> <ol> <li>Subpoint<ol> <li>Sub-subpoint</li> </ol> </li> </ol> </li> </ol>"},{"location":"tutorials/intro_R_biologists/formatting_template/#images","title":"Images","text":"<p>How to add an image:  </p> <p></p>"},{"location":"tutorials/intro_R_biologists/formatting_template/#tables","title":"Tables","text":"<p>Tables can have text that is left, centred or right aligned.</p> Left Center Right Lorem dolor <code>amet</code> ipsum sit"},{"location":"tutorials/intro_R_biologists/formatting_template/#questions-and-answers","title":"Questions and Answers","text":"<p>It is useful to number questions with the section number they appear in so participants can easily refer to the number when asking a question. Indentation is important to display correctly.</p> <p>Question 1.1</p> <p>What is the full path name of your home directory?</p> Hint <p>Remember your Current Working Directory starts in your home directory.</p> Answer <p>You can find out the full path name of the current working directory with the <code>pwd</code> command. Your home directory will look something like this:</p> <pre><code>$ pwd\n/home/trainingXX\n</code></pre> <p>Question 1.1</p> <p>What is the full path name of your home directory?</p> Answer <p>You can find out the full path name of the current working directory with the <code>pwd</code> command. Your home directory will look something like this:</p>"},{"location":"tutorials/intro_R_biologists/formatting_template/#line-breaks","title":"Line Breaks","text":"<p>To create a line break (\\&lt;br&gt;), end a line with two or more spaces, and then type return.</p>"},{"location":"tutorials/intro_R_biologists/formatting_template/#links","title":"Links","text":"<p>Please see the link.</p>"},{"location":"tutorials/intro_R_biologists/formatting_template/#blockquotes","title":"Blockquotes","text":"<p>This is a quote. Two spaces are needed at the end of this to make next line of quote appear on a different line.   This is the second line of quote.</p>"},{"location":"tutorials/intro_R_biologists/formatting_template/#text-including-commands-to-type","title":"Text including commands to type","text":"<p>Type <code>ls</code> and press <code>ENTER</code>.</p>"},{"location":"tutorials/intro_R_biologists/formatting_template/#when-referring-to-a-filename","title":"When referring to a filename","text":"<p>canu.contigs.fasta contains the assembled sequences.</p>"},{"location":"tutorials/intro_R_biologists/formatting_template/#showing-that-a-button-needs-clicking","title":"Showing that a button needs clicking","text":"<p>Click Start</p>"},{"location":"tutorials/intro_R_biologists/formatting_template/#highlighting-text","title":"Highlighting text","text":"<p>This text is highlighted.</p>"},{"location":"tutorials/intro_R_biologists/formatting_template/#equations","title":"Equations","text":"<p>Equations can be added as a block or inline.</p>"},{"location":"tutorials/intro_R_biologists/formatting_template/#block-equations","title":"Block equations","text":"\\[ \\frac{n!}{k!(n-k)!} = \\binom{n}{k} \\]"},{"location":"tutorials/intro_R_biologists/formatting_template/#inline-equations","title":"Inline equations","text":"<p>This equation will appear in line with this text: \\(p(x|y) = \\frac{p(y|x)p(x)}{p(y)}\\)</p>"},{"location":"tutorials/intro_R_biologists/formatting_template/#to-do","title":"To do","text":"<p>Pdf printing Survey Slides?  </p>"},{"location":"tutorials/janis_translate/formatting_template/","title":"Formats to use","text":""},{"location":"tutorials/janis_translate/formatting_template/#text-formatting","title":"Text formatting","text":"<p>Bold Italics Bold Italics</p>"},{"location":"tutorials/janis_translate/formatting_template/#headings-this-is-2nd-level","title":"Headings (This is 2<sup>nd</sup> level)","text":""},{"location":"tutorials/janis_translate/formatting_template/#the-3rd-level","title":"The 3<sup>rd</sup> level","text":""},{"location":"tutorials/janis_translate/formatting_template/#the-4th-level","title":"The 4<sup>th</sup> level","text":""},{"location":"tutorials/janis_translate/formatting_template/#the-5th-level","title":"The 5<sup>th</sup> level","text":""},{"location":"tutorials/janis_translate/formatting_template/#the-6th-level","title":"The 6<sup>th</sup> level","text":""},{"location":"tutorials/janis_translate/formatting_template/#code-blocks-and-inline-code","title":"Code Blocks and inline code","text":"<p>They can be added like this. Many different languages are supported.</p>"},{"location":"tutorials/janis_translate/formatting_template/#blocks","title":"Blocks","text":"<pre><code>$ ls\nexp01  file01  muscle.fq\n</code></pre> <p>or</p> <pre><code>import tensorflow as tf\n</code></pre>"},{"location":"tutorials/janis_translate/formatting_template/#inline-code","title":"Inline code","text":"<p>Code can also be shown as an inline snippet like this <code>import tensorflow as tf</code>.</p>"},{"location":"tutorials/janis_translate/formatting_template/#lists","title":"Lists","text":"<p>If you need to add a list:  </p>"},{"location":"tutorials/janis_translate/formatting_template/#unordered-lists","title":"Unordered Lists","text":"<ul> <li>Some information</li> <li>Some more information</li> </ul>"},{"location":"tutorials/janis_translate/formatting_template/#ordered-lists","title":"Ordered Lists","text":"<ol> <li> <p>Some point</p> </li> <li> <p>Another point</p> <ol> <li>Subpoint<ol> <li>Sub-subpoint</li> </ol> </li> </ol> </li> </ol>"},{"location":"tutorials/janis_translate/formatting_template/#images","title":"Images","text":"<p>How to add an image:  </p> <p></p>"},{"location":"tutorials/janis_translate/formatting_template/#tables","title":"Tables","text":"<p>Tables can have text that is left, centred or right aligned.</p> Left Center Right Lorem dolor <code>amet</code> ipsum sit"},{"location":"tutorials/janis_translate/formatting_template/#questions-and-answers","title":"Questions and Answers","text":"<p>It is useful to number questions with the section number they appear in so participants can easily refer to the number when asking a question. Indentation is important to display correctly.</p> <p>Question 1.1</p> <p>What is the full path name of your home directory?</p> Hint <p>Remember your Current Working Directory starts in your home directory.</p> Answer <p>You can find out the full path name of the current working directory with the <code>pwd</code> command. Your home directory will look something like this:</p> <pre><code>$ pwd\n/home/trainingXX\n</code></pre> <p>Question 1.1</p> <p>What is the full path name of your home directory?</p> Answer <p>You can find out the full path name of the current working directory with the <code>pwd</code> command. Your home directory will look something like this:</p>"},{"location":"tutorials/janis_translate/formatting_template/#line-breaks","title":"Line Breaks","text":"<p>To create a line break (\\&lt;br&gt;), end a line with two or more spaces, and then type return.</p>"},{"location":"tutorials/janis_translate/formatting_template/#links","title":"Links","text":"<p>Please see the link.</p>"},{"location":"tutorials/janis_translate/formatting_template/#blockquotes","title":"Blockquotes","text":"<p>This is a quote. Two spaces are needed at the end of this to make next line of quote appear on a different line.   This is the second line of quote.</p>"},{"location":"tutorials/janis_translate/formatting_template/#text-including-commands-to-type","title":"Text including commands to type","text":"<p>Type <code>ls</code> and press <code>ENTER</code>.</p>"},{"location":"tutorials/janis_translate/formatting_template/#when-referring-to-a-filename","title":"When referring to a filename","text":"<p>canu.contigs.fasta contains the assembled sequences.</p>"},{"location":"tutorials/janis_translate/formatting_template/#showing-that-a-button-needs-clicking","title":"Showing that a button needs clicking","text":"<p>Click Start</p>"},{"location":"tutorials/janis_translate/formatting_template/#highlighting-text","title":"Highlighting text","text":"<p>This text is highlighted.</p>"},{"location":"tutorials/janis_translate/formatting_template/#equations","title":"Equations","text":"<p>Equations can be added as a block or inline.</p>"},{"location":"tutorials/janis_translate/formatting_template/#block-equations","title":"Block equations","text":"\\[ \\frac{n!}{k!(n-k)!} = \\binom{n}{k} \\]"},{"location":"tutorials/janis_translate/formatting_template/#inline-equations","title":"Inline equations","text":"<p>This equation will appear in line with this text: \\(p(x|y) = \\frac{p(y|x)p(x)}{p(y)}\\)</p>"},{"location":"tutorials/janis_translate/formatting_template/#to-do","title":"To do","text":"<p>Pdf printing Survey Slides?  </p>"},{"location":"tutorials/janis_translate/janis_translate/","title":"Workflow Translation With Janis","text":""},{"location":"tutorials/janis_translate/janis_translate/#janis-translate-migrating-cwl-galaxy-to-nextflow","title":"Janis Translate - Migrating CWL / Galaxy to Nextflow","text":"<p>Anticipated workshop duration when delivered to a group of participants is 3.5 hours.  </p> <p>For queries relating to this workshop, contact Melbourne Bioinformatics (bioinformatics-training@unimelb.edu.au).</p>"},{"location":"tutorials/janis_translate/janis_translate/#overview","title":"Overview","text":""},{"location":"tutorials/janis_translate/janis_translate/#topic","title":"Topic","text":"<ul> <li> Genomics</li> <li> Transcriptomics</li> <li> Proteomics</li> <li> Metabolomics</li> <li> Statistics and visualisation</li> <li> Structural Modelling</li> <li> Basic skills</li> </ul>"},{"location":"tutorials/janis_translate/janis_translate/#skill-level","title":"Skill level","text":"<ul> <li> Beginner  </li> <li> Intermediate  </li> <li> Advanced  </li> </ul> <p>The workshop is conducted in a Unix environment. Command line experience is required.  Prior experience with developing, running, and troubleshooting Nextflow workflows is strongly recommended.</p>"},{"location":"tutorials/janis_translate/janis_translate/#description","title":"Description","text":"<p>Bioinformatics workflows are critical for reproducibly transferring methodologies between research groups and for scaling between computational infrastructures. Research groups currently invest a lot of time and effort in creating and updating workflows; the ability to translate from one workflow language into another can make them easier to share, and maintain with minimal effort. For example, research groups that would like to run an existing Galaxy workflow on HPC, or extend it for their use, might find translating the workflow to Nextflow more suitable for their ongoing use-cases. </p> <p>Janis is a framework that provides an abstraction layer for describing workflows, and a tool that can translate workflows between existing languages such as CWL, WDL, Galaxy and Nextflow. Janis aims to translate as much as it can, leaving the user to validate the workflow and make small manual adjustments where direct translations are not possible. Originating from the Portable Pipelines Project between Melbourne Bioinformatics, the Peter MacCallum Cancer Centre, and the Walter and Eliza Hall Institute of Medical Research, this tool is now available for everyone to use.</p> <p>This workshop provides an introduction to Janis and how it can be used to translate Galaxy and CWL based tools and workflows into Nextflow. Using hands-on examples we\u2019ll step you through the process and demonstrate how to optimise, troubleshoot and test the translated workflows.</p> <p>Section 1 covers migration of CWL tools / workflows to Nextflow.  Section 2 covers migration of Galaxy tool wrappers / workflows to Nextflow.</p>"},{"location":"tutorials/janis_translate/janis_translate/#learning-objectives","title":"Learning Objectives","text":"<p>By the end of the workshop you should be able to: - Recognise the main aspects and benefits of workflow translation - Use Janis to translated Galaxy / CWL tools &amp; workflows to Nextflow - Configure Nextflow to run translated tools &amp; workflows - Troubleshoot translated Nextflow tools &amp; workflow  - Adjust the translated Nextflow tools / workflows &amp; complete missing translations manually</p>"},{"location":"tutorials/janis_translate/janis_translate/#required-software","title":"Required Software","text":"<ul> <li>IDE of your choosing (we use VS Code in this workshop).</li> <li>Refer back to the setup instructions document provided if needed. </li> </ul>"},{"location":"tutorials/janis_translate/janis_translate/#required-data","title":"Required Data","text":"<ul> <li>Sample data will be provided on the compute resource.</li> </ul>"},{"location":"tutorials/janis_translate/janis_translate/#author-information","title":"Author Information","text":"<p>Written by: Grace Hall Melbourne Bioinformatics, University of Melbourne</p> <p>Created/Reviewed: May 2023</p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#contents","title":"Contents","text":"<p>This workshop has 2 main sections. </p> <p>We will translate CWL and Galaxy tools and workflows using janis-translate, then will do manual adjustments &amp; run on sample data to check validity.</p> <p>Section 1: CWL \u2192 Nextflow</p> <ul> <li>Section 1.1: Samtools Flagstat Tool</li> <li>Section 1.2: GATK HaplotypeCaller Tool</li> <li>Section 1.3: Align Sort Markdup Workflow</li> </ul> <p>Section 2: Galaxy \u2192 Nextflow</p> <ul> <li>Section 2.1: Samtools Flagstat Tool</li> <li>Section 2.2: Limma Voom Tool</li> <li>Section 2.3: RNA-Seq Reads to Counts Workflow</li> </ul> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#section-11-samtools-flagstat-tool-cwl","title":"Section 1.1: Samtools Flagstat Tool (CWL)","text":""},{"location":"tutorials/janis_translate/janis_translate/#introduction","title":"Introduction","text":"<p>This section demonstrates translation of a basic <code>samtools flagstat</code> tool from CWL to Nextflow using <code>janis translate</code>. </p> <p>The CWL tool used in this section - samtools_flagstat.cwl -  is taken from the McDonnell Genome Institute (MGI) analysis-workflows repository. </p> <p>This resource stores publically available analysis pipelines for genomics data.  It is a fantastic piece of research software, and the authors thank MGI for their contribution to open-source research software. </p> <p>The underlying software run by this tool - Samtools Flagstat - displays summary information for an alignment file.</p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#janis-translate","title":"Janis Translate","text":"<p>Downloading Janis Translate</p> <p>In this workshop we will use a singularity container to run <code>janis translate</code>. </p> <p>Containers are great because they remove the need for package managers, and guarantee that the software can run on any machine. </p> <p>Singularity is already set up on your VM.</p> <p>Run the following command to pull the janis image: <pre><code>singularity pull janis.sif docker://pppjanistranslate/janis-translate:0.13.0\n</code></pre></p> <p>Check your image by running the following command: <pre><code>singularity exec ~/janis.sif janis translate\n</code></pre></p> <p>If the image is working, you should see the janis translate helptext.</p> <p></p> <p>Downloading Training Data and Tool / Workflow Source Files</p> <p>For this workshop we will fetch all needed data from zenodo using wget.  </p> <p>This archive contains source CWL / Galaxy files, sample data, and finished translations as a reference.</p> <p>Run the following commands to download &amp; uncompress the zenodo archive: <pre><code>wget https://zenodo.org/record/8052348/files/data.tar.gz\ntar -xvf data.tar.gz\n</code></pre></p> <p>Inside the data folder we have the following structure:  <pre><code>data\n\u251c\u2500\u2500 final               # finalised translations for your reference\n\u2502   \u251c\u2500\u2500 cwl\n\u2502   \u2514\u2500\u2500 galaxy\n\u251c\u2500\u2500 sample_data         # sample data to test nextflow processes / workflows\n\u2502   \u251c\u2500\u2500 cwl\n\u2502   \u2514\u2500\u2500 galaxy\n\u2514\u2500\u2500 source              # CWL / Galaxy files we will translate\n    \u251c\u2500\u2500 cwl\n    \u2514\u2500\u2500 galaxy\n</code></pre></p> <p>The test data provided in <code>data/sample_data</code> is also available at <code>/cvmfs/data.biocommons.aarnet.edu.au/training_materials/MelbBio_training/Janis_0723/sample_data/</code></p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#running-janis-translate","title":"Running Janis Translate","text":"<p>To translate a tool / workflow,  we use <code>janis translate</code>.</p> <pre><code>janis translate --from &lt;src&gt; --to &lt;dest&gt; &lt;filepath&gt;\n</code></pre> <p>The <code>--from</code> argument specifies the workflow language of the source file(s), and <code>--to</code> specifies the destination we want to translate to. </p> <p>The <code>&lt;filepath&gt;</code> argument is the source file we will translate. </p> <p>In this section we are translating a single CWL CommandLineTool, so we will only produce a single nextflow file. </p> <p></p> <p>In this section, we want to translate CWL -&gt; Nextflow, and our source CWL file is in the <code>data</code> folder we just downloaded from zenodo. </p> <p>It\u2019s path is <code>data/source/cwl/samtools_flagstat.cwl</code>.</p> <p>Run the following command: <pre><code>singularity exec ~/janis.sif janis translate --from cwl --to nextflow data/source/cwl/samtools_flagstat.cwl\n</code></pre></p> <p></p> <p>You will see a folder called <code>translated/</code> appear, and a nextflow process called <code>samtools_flagstat.nf</code> will be present inside. </p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#manual-adjustments","title":"Manual Adjustments","text":"<p>The <code>translated/samtools_flagstat.nf</code> file should be similar to the following: </p> <pre><code>nextflow.enable.dsl = 2\n\nprocess SAMTOOLS_FLAGSTAT {\n\n    container \"quay.io/biocontainers/samtools:1.11--h6270b1f_0\"\n\n    input:\n    path bam\n\n    output:\n    path \"${bam[0]}.flagstat\", emit: flagstats\n\n    script:\n    def bam = bam[0]\n    \"\"\"\n    /usr/local/bin/samtools flagstat \\\n    ${bam} \\\n    &gt; ${bam}.flagstat \\\n    \"\"\"\n\n}\n</code></pre> <p>We can see that this nextflow process has a single input, a single output, and calls <code>samtools flagstat</code> on the input <code>bam</code>. </p> <p>We can also see that a container image is available for this tool. In the next section we will run this process using some sample data and the specified container. </p> <p>This translation is correct for the <code>samtools_flagstat.cwl</code> file and needs no adjusting.  Have a look at the source CWL file to see how they match up. </p> <p></p> <p>Note:  <code>def bam = bam[0]</code> in the script block is used to handle datatypes with secondary files.  The <code>bam</code> input is an indexed bam type, so requires a <code>.bai</code> file to also be present in the working directory alongside the <code>.bam</code> file.  For this reason the <code>bam</code> input is supplied as an Array with 2 files - the <code>.bam</code> and the <code>.bai</code>.  Here the <code>def bam = bam[0]</code> is used so that <code>bam</code> refers to the <code>.bam</code> file in that Array. </p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#running-samtools-flagstat-as-a-workflow","title":"Running Samtools Flagstat as a Workflow","text":"<p>Collecting Process Outputs</p> <p>Let\u2019s add a <code>publishDir</code> directive to our translated process so that we can capture the outputs of this process.</p> <pre><code>process SAMTOOLS_FLAGSTAT {\n\n    container \"quay.io/biocontainers/samtools:1.11--h6270b1f_0\"\n    publishDir \"./outputs\"                                          &lt;-\n    ....\n\n}                          \n</code></pre> <p>Nextflow allows us to capture the outputs created by a process using the <code>publishDir</code> directive seen above. </p> <p></p> <p>Setting up nextflow.config</p> <p>To run this process, we will set up a <code>nextflow.config</code> file and add some lines to the top of our process definition to turn it into a workflow.</p> <p>Create a new file called <code>nextflow.config</code> in the <code>translated/</code> folder alongside <code>samtools_flagstat.nf</code>. </p> <p>For this workshop, we are using sample data located at <code>/home2/training/data/sample_data/</code>. </p> <p>Copy and paste the following code into your <code>nextflow.config</code> file: </p> <pre><code>nextflow.enable.dsl = 2\nsingularity.enabled = true\nsingularity.cacheDir = \"$HOME/.singularity/cache\"\n\nparams {\n\n    bam = [\n        '/home2/training/data/sample_data/cwl/2895499223_sorted.bam',\n        '/home2/training/data/sample_data/cwl/2895499223_sorted.bam.bai',\n    ]\n\n}\n</code></pre> <p>This tells nextflow how to run, and sets up an input parameter for our indexed bam input.</p> <p>The <code>bam</code> parameter is a list which provides paths to the <code>.bam</code> and <code>.bai</code> sample data we will use to test the nextflow translation. From here, we can refer to the indexed bam input as <code>params.bam</code> in other files.</p> <p></p> <p>NOTE <code>nextflow.enable.dsl = 2</code> ensures that we are using the dsl2 nextflow syntax which is the current standard.  <code>singularity.enabled = true</code> tells nextflow to run processes using singularity. Our <code>samtools_flagstat.nf</code> has a directive with the form <code>container \"quay.io/biocontainers/samtools:1.11--h6270b1f_0\"</code> provided, so it will use the specified image when running this process.  <code>singularity.cacheDir = \"$HOME/.singularity/cache\"</code> tells nextflow where singularity images are stored.   Nextflow will handle the singularity image download and stored it in the cache specified above. If you\u2019d like to use an already available container, you can modify <code>samtools_flagstat.nf</code> container directive to <code>container \"/cvmfs/singularity.galaxyproject.org/all/samtools:1.11--h6270b1f_0\"</code>.   The test data used above is also available at <code>/cvmfs</code>, and can be accessed as follow: <code>bam=['/cvmfs/data.biocommons.aarnet.edu.au/training_materials/MelbBio_training/Janis_0723/sample_data/cwl/2895499223_sorted.bam', '/cvmfs/data.biocommons.aarnet.edu.au/training_materials/MelbBio_training/Janis_0723/sample_data/cwl/2895499223_sorted.bam.bai']</code>. </p> <p></p> <p>Creating Workflow &amp; Passing Data </p> <p>Now that we have the <code>nextflow.config</code> file set up, we will add a few lines to <code>samtools_flagstat.nf</code> to turn it into a workflow. </p> <p>Copy and paste the following lines at the top of <code>samtools_flagstat.nf</code>:</p> <pre><code>ch_bam = Channel.fromPath( params.bam ).toList()\n\nworkflow {\n    SAMTOOLS_FLAGSTAT(ch_bam)\n}\n</code></pre> <p>The first line creates a nextflow <code>Channel</code> for our <code>bam</code> input and ensures it is a list.  The <code>Channel.toList()</code> part collects our files into a list, as both the <code>.bam</code> and <code>.bai</code> files must be passed together.  The <code>params.bam</code> global variable we set up previously is used to supply the paths to our sample data.</p> <p>The new <code>workflow {}</code> section declares the main workflow entry point.  When we run this file, nextflow will look for this section and run the workflow contained within. </p> <p>In our case, the workflow only contains a single task, which runs the <code>SAMTOOLS_FLAGSTAT</code> process defined below the workflow section. The single <code>SAMTOOLS_FLAGSTAT</code> input is being passed data from our <code>ch_bam</code> channel we declared at the top of the file. </p> <p></p> <p>Running Our Workflow</p> <p>Ensure you are in the <code>translated/</code> working directory, where <code>nextflow.config</code> and <code>samtools_flagstat.nf</code> reside. </p> <pre><code>cd translated\n</code></pre> <p>To run the workflow using our sample data, we can now write the following command:  <pre><code>nextflow run samtools_flagstat.nf\n</code></pre></p> <p>Nextflow will automatically check if there is a <code>nextflow.config</code> file in the working directory, and if so will use that to configure itself. Our inputs are supplied in <code>nextflow.config</code> alongside the dsl2 &amp; singularity config, so it should run without issue. </p> <p>Once completed, we can check the <code>outputs/</code> folder to view our results. </p> <p>If everything went well, there should be a file called <code>2895499223_sorted.bam.flagstat</code> with the following contents:</p> <pre><code>2495 + 0 in total (QC-passed reads + QC-failed reads)\n0 + 0 secondary\n1 + 0 supplementary\n0 + 0 duplicates\n2480 + 0 mapped (99.40% : N/A)\n2494 + 0 paired in sequencing\n1247 + 0 read1\n1247 + 0 read2\n2460 + 0 properly paired (98.64% : N/A)\n2464 + 0 with itself and mate mapped\n15 + 0 singletons (0.60% : N/A)\n0 + 0 with mate mapped to a different chr\n0 + 0 with mate mapped to a different chr (mapQ&gt;=5)\n</code></pre> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#conclusion","title":"Conclusion","text":"<p>In section 1.1 we explored how to translate a simple CWL tool to a Nextflow process. </p> <p>If needed, you can check the <code>final/cwl/samtools_flagstat</code> folder in the zenodo <code>data/</code> directory.  This contains the files we created in this section for your reference. </p> <p>We will build on our knowledge in section 1.2 by translating a more complex CWL CommandLineTool definition: GATK HaplotypeCaller.</p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#section-12-gatk-haplotypecaller-tool-cwl","title":"Section 1.2: GATK HaplotypeCaller Tool (CWL)","text":""},{"location":"tutorials/janis_translate/janis_translate/#introduction_1","title":"Introduction","text":"<p>Now that we have translated a simple CWL CommandLineTool, let\u2019s translate a more real-world CommandLineTool. </p> <p>This section demonstrates translation of a <code>gatk HaplotypeCaller</code> tool from CWL to Nextflow using <code>janis translate</code>. </p> <p>The source CWL file used in this section is taken from the McDonnell Genome Institute (MGI) analysis-workflows repository. </p> <p>This repository stores publically available analysis pipelines for genomics data.  It is a fantastic piece of research software, and the authors thank MGI for their contribution to open-source research software. </p> <p>The software tool encapsulated by the source CWL - gatk_haplotype_caller.cwl - displays summary information for an alignment file. </p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#janis-translate_1","title":"Janis Translate","text":"<p>As in section 1.1, we will use janis-translate to translate our CWL CommandLineTool to a Nextflow process. </p> <p>First, let\u2019s make sure we\u2019re back in the main training directory <pre><code>cd /home2/training\n</code></pre></p> <p>This time, since we already have a <code>translated/</code> folder, we will supply the <code>-o</code> argument to janis-translate to specify an output directory. </p> <pre><code>singularity exec ~/janis.sif janis translate -o haplotype_caller --from cwl --to nextflow data/source/cwl/gatk_haplotype_caller.cwl\n</code></pre> <p>You will see a folder called <code>haplotype_caller/</code> appear, and a nextflow process called <code>gatk_haplotype_caller.nf</code> will be present inside. </p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#manual-adjustments_1","title":"Manual Adjustments","text":"<p>The <code>haplotype_caller/gatk_haplotype_caller.nf</code> file should be similar to the following: </p> <pre><code>nextflow.enable.dsl = 2\n\nprocess GATK_HAPLOTYPE_CALLER {\n\n    container \"broadinstitute/gatk:4.1.8.1\"\n\n    input:\n    path bam\n    path reference\n    path dbsnp_vcf, stageAs: 'dbsnp_vcf/*'\n    val intervals\n    val gvcf_gq_bands\n    val emit_reference_confidence\n    val contamination_fraction\n    val max_alternate_alleles\n    val ploidy\n    val read_filter\n\n    output:\n    tuple path(\"output.g.vcf.gz\"), path(\"*.tbi\"), emit: gvcf\n\n    script:\n    def bam = bam[0]\n    def dbsnp_vcf = dbsnp_vcf[0] != null ? \"--dbsnp ${dbsnp_vcf[0]}\" : \"\"\n    def reference = reference[0]\n    def gvcf_gq_bands_joined = gvcf_gq_bands != params.NULL_VALUE ? \"-GQB \" + gvcf_gq_bands.join(' ') : \"\"\n    def intervals_joined = intervals.join(' ')\n    def contamination_fraction = contamination_fraction != params.NULL_VALUE ? \"-contamination ${contamination_fraction}\" : \"\"\n    def max_alternate_alleles = max_alternate_alleles != params.NULL_VALUE ? \"--max_alternate_alleles ${max_alternate_alleles}\" : \"\"\n    def ploidy = ploidy != params.NULL_VALUE ? \"-ploidy ${ploidy}\" : \"\"\n    def read_filter = read_filter != params.NULL_VALUE ? \"--read_filter ${read_filter}\" : \"\"\n    \"\"\"\n    /gatk/gatk --java-options -Xmx16g HaplotypeCaller \\\n    -R ${reference} \\\n    -I ${bam} \\\n    -ERC ${emit_reference_confidence} \\\n    ${gvcf_gq_bands_joined} \\\n    -L ${intervals_joined} \\\n    ${dbsnp_vcf} \\\n    ${contamination_fraction} \\\n    ${max_alternate_alleles} \\\n    ${ploidy} \\\n    ${read_filter} \\\n    -O \"output.g.vcf.gz\"\n    \"\"\"\n\n}\n</code></pre> <p>We can see that this nextflow process has a multiple inputs, single output, and calls <code>gatk HaplotypeCaller</code> using the input data we supply to the process.  </p> <p></p> <p>Notes on translation:  (1) <code>def bam = bam[0]</code> This pattern is used in the script block to handle datatypes with secondary files.  The <code>bam</code> input is an indexed bam type, so requires a <code>.bai</code> file to also be present in the working directory.  To facilitate this, we supply the <code>bam</code> input as a tuple of 2 files: <code>[filename.bam, filename.bam.bai]</code>.  <code>def bam = bam[0]</code> is used so when we reference <code>${bam}</code> in the script body, we are refering to the <code>.bam</code> file in that list.  (2) <code>def ploidy = ploidy != params.NULL_VALUE ? \"-ploidy ${ploidy}\" : \"\"</code>  This is how we handle optional val inputs in nextflow.  Nextflow doesn\u2019t like null values to be passed to process inputs, so we use 2 different tricks to make optional inputs possible. For <code>val</code> inputs we set up a <code>NULL_VALUE</code> param in <code>nextflow.config</code> which we use as a placeholder.   For <code>path</code> inputs (ie files and directories) we set up a null file rather than passing null directly.  This ensures that the file is staged correctly in the working directory when an actual filepath is provided.  The format above is a ternary operator of the form <code>def myvar = cond_check ? cond_true : cond_false</code>. We are redefining the <code>ploidy</code> string variable so that it will be correctly formatted when used in the script block. If we supply an actual value, it will take the form <code>\"-ploidy ${ploidy}\"</code>.  If we supply the placeholder <code>params.NULL_VALUE</code> value, it will be a blank string <code>\"\"</code>.  (3) <code>def intervals_joined = intervals.join(' ')</code>  Templates our <code>intervals</code> list of strings to a single string. Each item is joined by a space: eg <code>[\"hello\", \"there\"]</code> -&gt; <code>\"hello there\"</code>.  (4) <code>def dbsnp_vcf = dbsnp_vcf[0] != null ? \"--dbsnp ${dbsnp_vcf[0]}\" : \"\"</code> Same as (2) except uses a different check for null value, and selects the primary <code>.vcf.gz</code> file.  As the <code>path dbsnp_vcf</code> input is optional and consists of a <code>.vcf.gz</code> and <code>.vcf.gz.tbi</code> file, <code>dbsnp_vcf[0] != null</code> checks if the primary <code>.vcf.gz</code> file is present.  If true, it templates a string we can use in the script body to provide the required argument: <code>--dbsnp ${dbsnp_vcf[0]}</code>. If false, it templates an empty string. This ensures that when we use <code>${dbsnp_vcf}</code> in the script body, it will be formatted correctly for either case.</p> <p></p> <p>This translation is correct for the <code>gatk_haplotype_caller.cwl</code> file and needs no adjusting.  Have a look at the source CWL file to see how they match up. </p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#running-gatk-haplotypecaller-as-a-workflow","title":"Running GATK HaplotypeCaller as a Workflow","text":"<p>Collecting Process Outputs</p> <p>Let\u2019s add a <code>publishDir</code> directive to our translated process so that we can capture the outputs of this process.</p> <pre><code>process GATK_HAPLOTYPE_CALLER {\n\n    container \"broadinstitute/gatk:4.1.8.1\"\n    publishDir \"./outputs\"    \n    ...\n}                               \n</code></pre> <p>Nextflow allows us to capture the outputs created by a process using the <code>publishDir</code> directive seen above. </p> <p></p> <p>NOTE Our <code>gatk_haplotype_caller.nf</code> has a container directive with the form <code>container \"broadinstitute/gatk:4.1.8.1\"</code> provided, so Nextflow will handle this singularity image download and will use the specified image when running this process (provided that <code>singularity.enabled</code> is set to <code>true</code> in the nextflow config).  If you\u2019d like to use an already available container, you can modify this container directive to <code>container \"/cvmfs/singularity.galaxyproject.org/all/gatk4:4.1.8.1--py38_0\"</code>.</p> <p></p> <p>Setting up nextflow.config</p> <p>To run this process, we will set up a <code>nextflow.config</code> file and add some lines to the top of our process definition to turn it into a workflow.</p> <p>Create a new file called <code>nextflow.config</code> in the <code>haplotype_caller/</code> folder alongside <code>gatk_haplotype_caller.nf</code>. </p> <p>Copy and paste the following code into your <code>nextflow.config</code> file: </p> <p><pre><code>nextflow.enable.dsl = 2\nsingularity.enabled = true\nsingularity.cacheDir = \"$HOME/.singularity/cache\"\n\nparams {\n    NULL_VALUE = 'NULL'\n\n    bam = [\n        '/home2/training/data/sample_data/cwl/2895499223_sorted.bam',\n        '/home2/training/data/sample_data/cwl/2895499223_sorted.bam.bai',\n    ]\n    dbsnp = [\n        '/home2/training/data/sample_data/cwl/chr17_test_dbsnp.vcf.gz',\n        '/home2/training/data/sample_data/cwl/chr17_test_dbsnp.vcf.gz.tbi',\n    ]\n    reference = [\n        '/home2/training/data/sample_data/cwl/chr17_test.fa',\n        '/home2/training/data/sample_data/cwl/chr17_test.dict',\n        '/home2/training/data/sample_data/cwl/chr17_test.fa.fai',\n    ]\n    gvcf_gq_bands = NULL_VALUE\n    intervals = [\"chr17\"]\n    emit_reference_confidence = 'GVCF'\n    contamination_fraction = NULL_VALUE\n    max_alternate_alleles = NULL_VALUE\n    ploidy = NULL_VALUE\n    read_filter = NULL_VALUE\n}\n</code></pre> This tells nextflow how to run, and sets up the sample data as inputs.</p> <p>file inputs</p> <p>The <code>bam</code> parameter is a list which provides paths to the <code>.bam</code> and <code>.bai</code> sample data we will use to test the nextflow translation. From here, we can refer to the indexed bam input as <code>params.bam</code> in other files. The <code>dbsnp</code> and <code>reference</code> params follow this same pattern. </p> <p>non-file inputs</p> <p>We also set up a <code>NULL_VALUE</code> param which we use as a placeholder for a null value.   In this case we are providing null values for the <code>gvcf_gq_bands</code>, <code>contamination_fraction</code>, <code>max_alternate_alleles</code>, <code>ploidy</code> and <code>read_filter</code> inputs as they are all optional.</p> <p></p> <p>Creating Workflow &amp; Passing Data </p> <p>Now that we have the <code>nextflow.config</code> file set up, we will add a few lines to <code>gatk_haplotype_caller.nf</code> to turn it into a workflow. </p> <p>Copy and paste the following lines at the top of <code>gatk_haplotype_caller.nf</code>:</p> <pre><code>ch_bam = Channel.fromPath( params.bam ).toList()\nch_dbsnp = Channel.fromPath( params.dbsnp ).toList()\nch_reference = Channel.fromPath( params.reference ).toList()\n\nworkflow {\n\n    GATK_HAPLOTYPE_CALLER(\n        ch_bam,\n        ch_reference,\n        ch_dbsnp,\n        params.intervals,\n        params.gvcf_gq_bands,\n        params.emit_reference_confidence,\n        params.contamination_fraction,\n        params.max_alternate_alleles,\n        params.ploidy,\n        params.read_filter,\n    )\n\n}\n</code></pre> <p>The first 3 lines create nextflow <code>Channels</code> for our <code>bam</code>, <code>dbsnp</code>, and <code>reference</code> inputs and ensures they are lists.</p> <p>The <code>Channel.toList()</code> aspect collects our files into a list, as the primary &amp; secondary files for these datatypes must be passed together as a tuple.</p> <p>The <code>params.bam</code>, <code>params.dbsnp</code> and <code>params.reference</code> global variables we set up previously are used to supply the paths to our sample data for these channels.</p> <p>The new <code>workflow {}</code> section declares the main workflow entry point.  When we run this file, nextflow will look for this section and run the workflow contained within. </p> <p>In our case, the workflow only contains a single task, which runs the <code>GATK_HAPLOTYPE_CALLER</code> process defined below the workflow section. We call <code>GATK_HAPLOTYPE_CALLER</code> by feeding inputs in the correct order, using the channels we declared at the top of the file, and variables we set up in the global <code>params</code> object. </p> <p></p> <p>Running Our Workflow</p> <p>Ensure you are in the <code>haplotype_caller/</code> working directory, where <code>nextflow.config</code> and <code>gatk_haplotype_caller.nf</code> reside.  <pre><code>cd haplotype_caller\n</code></pre></p> <p>To run the workflow using our sample data, we can now write the following command:  <pre><code>nextflow run gatk_haplotype_caller.nf\n</code></pre></p> <p>Nextflow will automatically check if there is a <code>nextflow.config</code> file in the working directory, and if so will use that to configure itself. Our inputs are supplied in <code>nextflow.config</code> alongside the dsl2 &amp; singularity config, so it should run without issue. </p> <p>Once completed, we can check the <code>outputs/</code> folder to view our results.  If everything went well, the <code>outputs/</code> folder should contain 2 files: </p> <ul> <li><code>output.g.vcf.gz</code></li> <li><code>output.g.vcf.gz.tbi</code></li> </ul> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#conclusion_1","title":"Conclusion","text":"<p>In this section we explored how to translate the <code>gatk_haplotype_caller</code> CWL CommandLineTool to a Nextflow process. </p> <p>This is a more real-world situation, where the CommandLineTool has multiple inputs, secondary files, and optionality. </p> <p>If needed, you can check the <code>final/cwl/gatk_haplotype_caller/</code> folder inside our <code>data/</code> directory which contains the files we created in this tutorial as reference.  </p> <p>Now that we have translated two CWL CommandLineTools, we will translate a full CWL Workflow into Nextflow.</p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#section-13-align-sort-markdup-workflow-cwl","title":"Section 1.3: Align Sort Markdup Workflow (CWL)","text":""},{"location":"tutorials/janis_translate/janis_translate/#introduction_2","title":"Introduction","text":"<p>This section demonstrates translation of a CWL Workflow to Nextflow using <code>janis translate</code>. </p> <p>The workflow used in this tutorial is taken from the McDonnell Genome Institute (MGI) analysis-workflows repository. </p> <p>This resource stores publically available analysis pipelines for genomics data.  It is a fantastic piece of research software, and the authors thank MGI for their contribution to open-source research software. </p> <p>The workflow using in this tutorial - align_sort_markdup.cwl - accepts multiple unaligned readsets as input and produces a single polished alignment bam file. </p> <p>Main Inputs </p> <ul> <li>Unaligned reads stored across multiple BAM files</li> <li>Reference genome index</li> </ul> <p>Main Outputs</p> <ul> <li>Single BAM file storing alignment for all readsets</li> </ul> <p>Steps</p> <ul> <li>Read alignment (run in parallel across all readsets) - <code>bwa mem</code></li> <li>Merging alignment BAM files to single file - <code>samtools merge</code></li> <li>Sorting merged BAM by coordinate - <code>sambamba sort</code></li> <li>Tagging duplicate reads in alignment - <code>picard MarkDuplicates</code> </li> <li>Indexing final BAM - <code>samtools index</code></li> </ul> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#janis-translate_2","title":"Janis Translate","text":"<p>Previously we were translating single CWL CommandLineTools, but in this section we are translating a full CWL workflow. </p> <p>To translate a workflow, we supply the main CWL workflow file to janis translate.  In addition to the main CWL Workflow, all Subworkflows / CommandLineTools will be detected &amp; translated.</p> <p>First, let\u2019s make sure we\u2019re back in the main training directory <pre><code>cd /home2/training\n</code></pre></p> <p>In this section, we are translating CWL -&gt; Nextflow, and our source CWL file is located at <code>data/source/cwl/align_sort_markdup/subworkflows/align_sort_markdup.cwl</code> relative to this document.</p> <p>We will add the <code>-o align_sort_markdup</code> argument to specify this as the output directory. </p> <p>To translate, run the following command: <pre><code>singularity exec ~/janis.sif janis translate -o align_sort_markdup --from cwl --to nextflow data/source/cwl/align_sort_markdup/subworkflows/align_sort_markdup.cwl\n</code></pre></p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#translation-output","title":"Translation Output","text":"<p>The output translation will contain multiple files and directories. You will see a folder called <code>align_sort_markdup/</code> appear - inside this folder, we should see the following structure:</p> <pre><code>align_sort_markdup\n\u251c\u2500\u2500 main.nf                             # main workflow (align_sort_markdup)\n\u251c\u2500\u2500 modules                             # folder containing nextflow processes\n\u2502   \u251c\u2500\u2500 align_and_tag.nf\n\u2502   \u251c\u2500\u2500 index_bam.nf\n\u2502   \u251c\u2500\u2500 mark_duplicates_and_sort.nf\n\u2502   \u251c\u2500\u2500 merge_bams_samtools.nf\n\u2502   \u2514\u2500\u2500 name_sort.nf\n\u251c\u2500\u2500 nextflow.config                     # config file to supply input information\n\u251c\u2500\u2500 subworkflows                        # folder containing nextflow subworkflows\n\u2502   \u2514\u2500\u2500 align.nf    \n\u2514\u2500\u2500 templates                           # folder containing any scripts used by processes\n    \u2514\u2500\u2500 markduplicates_helper.sh\n</code></pre> <p>Now that we have performed translation using <code>janis translate</code>, we need to check the translated workflow for correctness.  </p> <p>From here, we will do a test-run of the workflow using sample data, and make manual adjustments to the translated workflow where needed. </p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#running-the-translated-workflow","title":"Running the Translated Workflow","text":"<p>Inspect main.nf</p> <p>The main workflow translation appears as <code>main.nf</code> in the <code>align_sort_markdup/</code> folder. </p> <p>This filename is just a convention, and we use it to provide clarity about the main entry point of the workflow.  In our case <code>main.nf</code> is equivalent to the main CWL Workflow file we translated: <code>align_sort_markdup.cwl</code>. </p> <p></p> <p>NOTE:  Before continuing, feel free to have a look at the other nextflow files which have been generated during translation: Each CWL Subworkflow appears as a nextflow <code>workflow</code> in the <code>subworkflows/</code> directory. Each CWL CommandLineTool appears as a nextflow <code>process</code> in the <code>modules/</code> directory. </p> <p></p> <p>In <code>main.nf</code> we see the nextflow workflows / processes called by the main workflow:</p> <pre><code>include { ALIGN } from './subworkflows/align'\ninclude { INDEX_BAM } from './modules/index_bam'\ninclude { MARK_DUPLICATES_AND_SORT } from './modules/mark_duplicates_and_sort'\ninclude { MERGE_BAMS_SAMTOOLS as MERGE } from './modules/merge_bams_samtools'\ninclude { NAME_SORT } from './modules/name_sort'\n</code></pre> <p>We also see that some nextflow <code>Channels</code> and a single <code>variable</code> have been set up.  These are used to supply data according to nextflow\u2019s adoption of the dataflow programming model. <pre><code>// data which will be passed as channels\nch_bams        = Channel.fromPath( params.bams ).toList()\nch_readgroups  = Channel.of( params.readgroups ).toList()\n\n// data which will be passed as variables\nreference  = params.reference.collect{ file(it) }\n</code></pre></p> <p>Focusing on the channel declarations, we want to note a few things:</p> <ul> <li> <p><code>ch_bams</code> is analygous to the \u2018bams\u2019 input in <code>align_sort_markdup.cwl</code>.  It declares a queue channel which expects the data supplied via <code>params.bams</code> are <code>path</code> types.  It then groups the bams together as a sole emission using <code>.toList()</code>.  We will need to set up <code>params.bams</code> to supply this data.</p> </li> <li> <p><code>ch_readgroups</code> is analygous to the \u2018readgroups\u2019 input in <code>align_sort_markdup.cwl</code>.  It is the same as <code>ch_bams</code>, except it requires <code>val</code> types rather than <code>path</code> types.  We will need to set up <code>params.readgroups</code> to supply this data.</p> </li> </ul> <p>We also see a new variable called <code>reference</code> being created. </p> <p>This <code>reference</code> var is analygous to the \u2018reference\u2019 input in <code>align_sort_markdup.cwl</code>.  It collects the \u2018reference\u2019 primary &amp; secondary files together in a list. </p> <p>We will need to set up <code>params.reference</code> to supply this data. </p> <p></p> <p>Note: Why does <code>reference</code> appear as a variable, rather than a <code>Channel</code>?  In Nextflow, we find it is best to create Channels for data that moves through the pipeline.  The <code>ch_bams</code> channel is created because we want to consume / transform the input bams during the pipeline.   On the other hand, the <code>reference</code> genome variable is not something we really want to consume or transform.   It\u2019s more like static helper data which can be used by processes, but it doesn\u2019t move through our pipeline, and definitely shouldn\u2019t be consumed or transformed in any way. </p> <p></p> <p>Note: <code>.toList()</code>  Nextflow queue channels work differently to lists.  Instead of supplying all items together, queue channels emit each item separately.   This results in a separate task being spawned for each item in the queue when the channel is used.  As the CWL workflow input specifies that <code>bams</code> is a list, we use <code>.toList()</code> to group all items as a sole emission.  This mimics a CWL array which is the datatype of the <code>bams</code> inputs.  As it turns out, the CWL workflow ends up running the <code>align</code> step in parallel across the <code>bams</code> &amp; <code>readgroups</code> inputs.  Parallelisation in nextflow happens by default.  To facilitate this, the <code>.flatten()</code> method is called on  <code>ch_bams</code> and <code>ch_readgroups</code> when used in the <code>ALIGN</code> task.  This emits items in <code>ch_bams</code> and <code>ch_readgroups</code> individually, spawning a new <code>ALIGN</code> task for each pair.  We\u2019re kinda doing redundant work by calling <code>.toList()</code>, then <code>.flatten()</code> when <code>ch_bams</code> and <code>ch_readgroups</code> are used. <code>janis translate</code> isn\u2019t smart enough yet to detect this yet, but may do so in future. </p> <p></p> <p>Continuing down <code>main.nf</code>, we see the main <code>workflow {}</code> has 5 tasks. </p> <p>Each task has been supplied values according to the source workflow. Comments display the name of the process/workflow input which is being fed a particular value. </p> <pre><code>workflow {\n\n    ALIGN(\n        ch_bams.flatten(),       // bam\n        ch_reference,            // reference\n        ch_readgroups.flatten()  // readgroup\n    )\n\n    INDEX_BAM(\n        MARK_DUPLICATES_AND_SORT.out.sorted_bam.map{ tuple -&gt; tuple[0] }  // bam\n    )\n\n    MARK_DUPLICATES_AND_SORT(\n        params.mark_duplicates_and_sort.script,  // script\n        NAME_SORT.out.name_sorted_bam,           // bam\n        params.NULL_VALUE,                       // input_sort_order\n        params.final_name                        // output_name\n    )\n\n    MERGE(\n        ALIGN.out.tagged_bam.toList(),  // bams\n        params.final_name               // name\n    )\n\n    NAME_SORT(\n        MERGE.out.merged_bam  // bam\n    )\n\n}\n</code></pre> <p>Before <code>main.nf</code> can be run, we will need to supply values for the <code>params</code> variables.  This is done in <code>nextflow.config</code>. </p> <p></p> <p>Inspect nextflow.config</p> <p>To test the translated workflow, we will first set up workflow inputs in <code>nextflow.config</code>. </p> <p>Before running a workflow, nextflow will attempt to open <code>nextflow.config</code> and read in config information and global param variables from this file.  We use this file to tell nextflow how to run and to supply workflow inputs.</p> <p>Inside the <code>align_sort_markdup/</code> folder you will see that <code>nextflow.config</code> is already provided. </p> <p>Janis translate creates this file to provide clarity about the necessary workflow inputs, and to set some other config variables. </p> <p>Open <code>nextflow.config</code> and have a look at the contents. It should look similar to the following: </p> <pre><code>nextflow.enable.dsl = 2\nsingularity.enabled = true\nsingularity.cacheDir = \"$HOME/.singularity/cache\"\n\nparams {\n\n    // Placeholder for null values.\n    // Do not alter unless you know what you are doing.\n    NULL_VALUE = 'NULL'\n\n    // WORKFLOW OUTPUT DIRECTORY\n    outdir  = './outputs'\n\n    // INPUTS (MANDATORY)\n    bams        = []          // (MANDATORY array)             eg. [file1, ...]\n    reference   = []          // (MANDATORY fastawithindexes)  eg. [fasta, amb, ann, bwt, dict, fai, pac, sa]\n    readgroups  = NULL_VALUE  // (MANDATORY array)             eg. [string1, ...]\n\n    // INPUTS (OPTIONAL)\n    final_name  = \"final.bam\" \n\n    // PROCESS: ALIGN_AND_TAG\n    align_and_tag.cpus    = 8     \n    align_and_tag.memory  = 20000 \n\n    // PROCESS: INDEX_BAM\n    index_bam.memory  = 4000 \n\n    // PROCESS: MARK_DUPLICATES_AND_SORT\n    mark_duplicates_and_sort.script  = \"/home2/training/align_sort_markdup/templates/markduplicates_helper.sh\" \n    mark_duplicates_and_sort.cpus    = 8                                                                       \n    mark_duplicates_and_sort.memory  = 40000                                                                   \n\n    // PROCESS: MERGE_BAMS_SAMTOOLS\n    merge_bams_samtools.cpus    = 4    \n    merge_bams_samtools.memory  = 8000 \n\n    // PROCESS: NAME_SORT\n    name_sort.cpus    = 8     \n    name_sort.memory  = 26000 \n\n}\n</code></pre> <p></p> <p>NOTE: <code>NULL_VALUE = 'NULL'</code> Nextflow doesn\u2019t like <code>null</code> values to be passed to process inputs.  This is a challenge for translation as other languages allow <code>optional</code> inputs.  To get around this, Janis Translate sets the <code>params.NULL_VALUE</code> variable as a <code>null</code> placeholder for <code>val</code> type inputs.  You will see this being used in nextflow processes to do optionality checking.</p> <p></p> <p>The auto-generated <code>nextflow.config</code> splits up workflow inputs using some headings. </p> <p><pre><code>// INPUTS (MANDATORY)\n</code></pre> Workflow inputs which are required to run the workflow. We must provide a value for these. </p> <p><pre><code>// INPUTS (OPTIONAL)\n</code></pre> Workflow inputs which are not required to run the workflow. These are optional. </p> <p><pre><code>// PROCESS: ALIGN_AND_TAG\n</code></pre> Inputs which are specific to a particular process. These are usually static values rather than files. May be mandatory or optional. </p> <p></p> <p>Setting up Workflow Inputs</p> <p>Janis Translate will enter values for workflow inputs where possible.  Others need to be manually supplied as they are specific to the input data you wish to use. </p> <p>In our case, we need to supply values for those under the <code>// INPUTS (MANDATORY)</code> heading.  Specifically, we need to provide sample data for the <code>bams</code>, <code>reference</code>, and <code>readgroups</code> inputs. </p> <p>Additionally, the <code>cpu</code> and <code>memory</code> params need to be changed. </p> <p>The source CWL Workflow has compute requirements set greater than what is available on your VM. </p> <p>Copy and paste the following text, to override the current <code>nextflow.config</code> file:</p> <pre><code>nextflow.enable.dsl = 2\nsingularity.enabled = true\nsingularity.cacheDir = \"$HOME/.singularity/cache\"\n\nparams {\n\n    // Placeholder for null values.\n    // Do not alter unless you know what you are doing.\n    NULL_VALUE = 'NULL'\n\n    // WORKFLOW OUTPUT DIRECTORY\n    outdir  = './outputs'\n\n    // INPUTS (MANDATORY)\n    bams        = [\n        \"/home2/training/data/sample_data/cwl/2895499223.bam\",\n        \"/home2/training/data/sample_data/cwl/2895499237.bam\",\n    ]\n    reference   = [\n        \"/home2/training/data/sample_data/cwl/chr17_test.fa\",\n        \"/home2/training/data/sample_data/cwl/chr17_test.fa.amb\",\n        \"/home2/training/data/sample_data/cwl/chr17_test.fa.ann\",\n        \"/home2/training/data/sample_data/cwl/chr17_test.fa.bwt\",\n        \"/home2/training/data/sample_data/cwl/chr17_test.fa.fai\",\n        \"/home2/training/data/sample_data/cwl/chr17_test.dict\",\n        \"/home2/training/data/sample_data/cwl/chr17_test.fa.pac\",\n        \"/home2/training/data/sample_data/cwl/chr17_test.fa.sa\",\n    ] \n    readgroups  = [\n        '@RG\\tID:2895499223\\tPU:H7HY2CCXX.3.ATCACGGT\\tSM:H_NJ-HCC1395-HCC1395\\tLB:H_NJ-HCC1395-HCC1395-lg24-lib1\\tPL:Illumina\\tCN:WUGSC',\n        '@RG\\tID:2895499237\\tPU:H7HY2CCXX.4.ATCACGGT\\tSM:H_NJ-HCC1395-HCC1395\\tLB:H_NJ-HCC1395-HCC1395-lg24-lib1\\tPL:Illumina\\tCN:WUGSC'\n    ]\n\n    // INPUTS (OPTIONAL)\n    final_name  = \"final.bam\" \n\n    // PROCESS: ALIGN_AND_TAG\n    align_and_tag.cpus    = 4     \n    align_and_tag.memory  = 10000 \n\n    // PROCESS: INDEX_BAM\n    index_bam.memory  = 10000 \n\n    // PROCESS: MARK_DUPLICATES_AND_SORT\n    mark_duplicates_and_sort.script  = \"/home2/training/align_sort_markdup/templates/markduplicates_helper.sh\" \n    mark_duplicates_and_sort.cpus    = 4\n    mark_duplicates_and_sort.memory  = 10000                         \n\n    // PROCESS: MERGE_BAMS_SAMTOOLS\n    merge_bams_samtools.cpus    = 4    \n    merge_bams_samtools.memory  = 10000 \n\n    // PROCESS: NAME_SORT\n    name_sort.cpus    = 4     \n    name_sort.memory  = 10000 \n\n}\n</code></pre> <p></p> <p>Run the Workflow</p> <p>Ensure you are in the <code>align_sort_markdup/</code> working directory, where <code>nextflow.config</code> and <code>main.nf</code> reside. </p> <p>If not, use the following to change directory.  <pre><code>cd align_sort_markdup\n</code></pre></p> <p>To run the workflow using our sample data, we can now write the following command:  <pre><code>nextflow run main.nf\n</code></pre></p> <p>While the workflow runs, you will encounter this error:</p> <pre><code>Access to 'MARK_DUPLICATES_AND_SORT.out' is undefined since the process 'MARK_DUPLICATES_AND_SORT' has not been invoked before accessing the output attribute\n</code></pre> <p>This is somewhat expected. Janis translate doesn\u2019t produce perfect translations - just the best it can do. </p> <p>This is the first of 3 errors we will encounter and fix while making this workflow runnable. </p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#manual-adjustments_2","title":"Manual Adjustments","text":"<p>Translations performed by <code>janis translate</code> often require manual changes due to the difficulty of translating between languages with non-overlapping feature sets. </p> <p>In this section we will fix 3 errors to bring the translation to a finished state. </p> <p></p> <p>NOTE  If having trouble during this section, the finished workflow is available in the <code>data/final/cwl/align_sort_markdup</code> folder for reference.</p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#error-1-process-order","title":"Error 1: Process Order","text":"<p>Error message</p> <p>The first issue we need to address is caused by tasks being in the wrong order. </p> <pre><code>Access to 'MARK_DUPLICATES_AND_SORT.out' is undefined since the process 'MARK_DUPLICATES_AND_SORT' has not been invoked before accessing the output attribute\n</code></pre> <p>This nextflow error message is quite informative, and tells us that a task is trying to access the output of <code>MARK_DUPLICATES_AND_SORT</code> before it has run. </p> <p>The offending task is <code>INDEX_BAM</code> as it uses <code>MARK_DUPLICATES_AND_SORT.out.sorted_bam.map{ tuple -&gt; tuple[0] }</code> as an input value to the process. </p> <p></p> <p>Troubleshooting</p> <p>It seems that a nextflow process is trying to run before a prior process has finished. </p> <p>This is most likely due to the processes in our <code>main.nf</code> workflow being in the wrong order. </p> <p>Let\u2019s look at the source CWL <code>align_sort_markdup.cwl</code> workflow to view the correct order of steps:</p> <pre><code>steps:\n    align:\n        ...\n    merge:\n        ...\n    name_sort:\n        ...\n    mark_duplicates_and_sort:\n        ...\n    index_bam:\n        ...\n</code></pre> <p>This differs from our translated <code>main.nf</code> which has the following order:</p> <pre><code>workflow {\n\n    ALIGN(\n        ...\n    )\n\n    INDEX_BAM(\n        ...\n    )\n\n    MARK_DUPLICATES_AND_SORT(\n        ...\n    )\n\n    MERGE(\n        ...\n    )\n\n    NAME_SORT(\n        ...\n    )\n\n}\n</code></pre> <p></p> <p>Solution</p> <p>We will need to rearrange the process calls in <code>main.nf</code> so they mirror the order seen in the source CWL. </p> <p>Rerranging process calls</p> <p>Cut-and-paste the process calls to be in the correct order in the main workflow.</p> Correct Order <ol> <li>ALIGN</li> <li>MERGE</li> <li>NAME_SORT</li> <li>MARK_DUPLICATES_AND_SORT</li> <li>INDEX_BAM</li> </ol> Show Workflow <pre><code>workflow {\n\n    ALIGN(\n        ch_bams.flatten(),       // ch_bam\n        reference,               // ch_reference\n        ch_readgroups.flatten()  // ch_readgroup\n    )\n\n    MERGE(\n        ALIGN.out.tagged_bam.toList(),  // bams\n        params.final_name               // name\n    )\n\n    NAME_SORT(\n        MERGE.out.merged_bam  // bam\n    )\n\n    MARK_DUPLICATES_AND_SORT(\n        params.mark_duplicates_and_sort.script,  // script\n        NAME_SORT.out.name_sorted_bam,           // bam\n        params.NULL_VALUE,                       // input_sort_order\n        params.final_name                        // output_name\n    )\n\n    INDEX_BAM(\n        MARK_DUPLICATES_AND_SORT.out.sorted_bam.map{ tuple -&gt; tuple[0] }  // bam\n    )\n\n}\n</code></pre> <p>After you are done, rerun the workflow by using the same command as before.</p> <pre><code>nextflow run main.nf\n</code></pre> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#error-2-unquoted-strings","title":"Error 2: Unquoted Strings","text":"<p>Error message</p> <p>The second error is due to the <code>readgroup</code> input of the <code>ALIGN_AND_TAG</code> process being used without enclosing quotes. </p> <pre><code>Caused by:\nProcess `ALIGN:ALIGN_AND_TAG (1)` terminated with an error exit status (1)\n\nCommand executed:\n/bin/bash /usr/bin/alignment_helper.sh     2895499223.bam     @RG INCLID:2895499223RY_PU:H7HY2CCXX.3.ATCACGGTITY=ISM:H_NJ-HCC1395-HCC1395ILB:H_NJ-HCC1395-HCC1395-lg24-lib1LEVEL=5PL:IlluminaSCN:WUGSC     chr17_test.fa          8     &gt; refAlign.bam\n</code></pre> <p>The issue can be seen in the command above. </p> <p>We see <code>/bin/bash /usr/bin/alignment_helper.sh   2895499223.bam</code> which is expected.  This is then followed by what looks like 2 string arguments: <code>@RG</code> and <code>INCLID...</code>. This is causing the problem.</p> <p></p> <p>Troubleshooting</p> <p>The <code>Command executed</code> section in nextflow error messages is particularly useful.   This message is printed to the shell, but can also be seen by navigating to the process working directory &amp; viewing <code>.command.sh</code>. </p> <p>Let\u2019s look at the nextflow <code>ALIGN_AND_TAG</code> process so we can match up which process input is causing the error.  Indiviual arguments have been marked with their (position) to aid our investigation. </p> <pre><code>process ALIGN_AND_TAG {\n\n    container \"mgibio/alignment_helper-cwl:1.0.0\"\n    publishDir \"${params.outdir}/align_and_tag\"\n    cpus \"${params.align_and_tag.cpus}\"\n    memory \"${params.align_and_tag.memory}\"\n\n    input:\n    path reference\n    path bam\n    val readgroup\n\n    output:\n    path \"refAlign.bam\", emit: aligned_bam\n\n    script:\n    def reference = reference[0]\n    \"\"\"\n    (1) /bin/bash (2) /usr/bin/alignment_helper.sh \\\n    (3) ${bam} \\\n    (4) ${readgroup} \\\n    (5) ${reference} \\\n    (6) 8 \\\n    (7) &gt; (8) refAlign.bam  \n    \"\"\"\n\n}\n</code></pre> <p>Here is the command executed with the same numbering:</p> <pre><code>(1) /bin/bash (2) /usr/bin/alignment_helper.sh  (3) 2895499223.bam     (4) @RG (5) ID:2895499223    PU:H7HY2CCXX.3.ATCACGGT SM:H_NJ-HCC1395-HCC1395 LB:H_NJ-HCC1395-HCC1395-lg24-lib1   PL:Illumina CN:WUGSC   (6) chr17_test.fa        (7) 8  (8) &gt;  (9) refAlign.bam \n</code></pre> <p>Matching up the two, we can see that arguments <code>(1-3)</code> match their expected values.  Argument <code>(4)</code> starts out right, as we expect the <code>readgroup</code> input. </p> <p>Looking in the <code>script:</code> section of the nextflow process, we expect the <code>${reference}</code> input to appear as argument <code>(5)</code>, but in the actual command it appears as argument <code>(6)</code> <code>chr17_test.fa</code>.</p> <p>The issue seems to be that the <code>readgroup</code> input has been split into 2 strings, instead of 1 single string.  By tracing back through the workflow, we can track that <code>params.readgroups</code> supplies the value for <code>readgroup</code> in this nextflow process:</p> <pre><code>modules/align_and_tag.nf:  readgroup\nsubworkflows/align.nf:     ch_readgroup\nmain.nf:                   ch_readgroups.flatten()\nmain.nf:                   ch_readgroups  = Channel.of( params.readgroups ).toList()\n</code></pre> <p>Looking at <code>nextflow.config</code> we see that this particular readgroup value is supplied as follows:</p> <pre><code>@RG\\tID:2895499223\\tPU:H7HY2CCXX.3.ATCACGGT\\tSM:H_NJ-HCC1395-HCC1395\\tLB:H_NJ-HCC1395-HCC1395-lg24-lib1\\tPL:Illumina\\tCN:WUGSC\n</code></pre> <p>The <code>@RG</code> being split from the rest of the readgroup value, and the text which follows is incorrect in the command.  </p> <p>The issue here is that this value in <code>params.readgroups</code> contains spaces and tabs (<code>\\t</code>).  When used in a nextflow process, string arugments should be enclosed  using <code>\"\"</code>. </p> <p></p> <p>Solution</p> <p>Back in the <code>modules/align_and_tag.nf</code> file, let\u2019s properly enclose the <code>readgroup</code> input in quotes. </p> <p>align_and_tag.nf</p> <p>In the <code>ALIGN_AND_TAG</code> process script enclose the <code>${readgroup}</code> reference in quotes.</p> Show Change <pre><code>script:\ndef reference = reference[0]\n\"\"\"\n/bin/bash /usr/bin/alignment_helper.sh \\\n${bam} \\\n\"${readgroup}\" \\              &lt;- quotes added\n${reference} \\\n8 \\\n&gt; refAlign.bam \n\"\"\"\n</code></pre> <p>After you are have made the change, re-run the workflow by using the same command as before:</p> <pre><code>nextflow run main.nf\n</code></pre> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#error-3-filename-clashes","title":"Error 3: Filename Clashes","text":"<p>Error Message</p> <p>The final error is flagged by the nextflow workflow engine. </p> <p>Upon re-running the workflow, you will encounter the following message: <pre><code>Process `MERGE` input file name collision -- There are multiple input files for each of the following file names: refAlign.bam\n</code></pre></p> <p>This informs us that more than 1 file with the name <code>refAlign.bam</code> have been inputs to <code>MERGE</code> process. </p> <p>Nextflow does not allow this behaviour. </p> <p>Other workflow engines use temporary names for files so that name clashes are impossible.   Nextflow requires us to be more specific with our filenames so we can track which file is which. </p> <p>This is not a hard-and-fast rule of workflow engines, but nextflow enforces using unique names to encourage best-practises. </p> <p></p> <p>Troubleshooting</p> <p>To track the cause, let\u2019s look at the data which feeds the <code>MERGE</code> process. </p> <p><code>main.nf</code> <pre><code>MERGE(\n    ALIGN.out.tagged_bam.toList(),  // bams\n    params.final_name               // name\n)\n</code></pre></p> <p>We can see the translated nextflow workflow is collecting the <code>tagged_bam</code> output of all <code>ALIGN</code> tasks as a list using <code>.toList()</code>.  This value feeds the <code>bams</code> input of the <code>MERGE</code> process. </p> <p>The issue is that 2+ files in this list must have the same filename: \u201crefAlign.bam\u201d. We need to see how files end up being placed into <code>ALIGN.out.tagged_bam</code> to track where the error is occuring. </p> <p>Looking in the <code>ALIGN</code> subworkflow in <code>subworkflows/align.nf</code>, we see the offending <code>tagged_bam</code> output emit.  This gets its data from the <code>aligned_bam</code> output of the <code>ALIGN_AND_TAG</code> process in <code>modules/align_and_tag.nf</code>. </p> <p>The source of the issue must be that the <code>aligned_bam</code> output is producing the same filename each time the task is run. </p> <p>Opening <code>modules/align_and_tag.nf</code> we can see how the <code>align_bam</code> output is created &amp; collected: <pre><code>    output:\n    path \"refAlign.bam\", emit: aligned_bam          &lt;-\n\n    script:\n    def reference = reference[0]\n    \"\"\"\n    /bin/bash /usr/bin/alignment_helper.sh \\\n    ${bam} \\\n    \"${readgroup}\" \\\n    ${reference} \\\n    8 \\\n    &gt; refAlign.bam                                  &lt;-\n    \"\"\"\n</code></pre></p> <p>From looking at the <code>output</code> and <code>script</code> section of this process, we can see that the <code>aligned_bam</code> output will always have the same filename. </p> <p>In the script, we generate a file called <code>refAlign.bam</code> by redirecting <code>stdout</code> to this file.  In the output, <code>refAlign.bam</code> is collected as the output. </p> <p>This would be fine if our workflow was supplied only a single BAM input file, but we want our workflow to run when we have many BAMs. </p> <p></p> <p>Solution</p> <p>To fix this issue, we need to give the output files unique names.  </p> <p>This can be accomplished using a combination of the <code>path bam</code> process input, and the <code>.simpleName</code> operator.</p> <p>As our input BAM files will all have unique names, we can use their name as a base for our output alignemnts.  If we were to use their filename directly, we would get their file extension too, which we don\u2019t want!</p> <p>Luckily the <code>.simpleName</code> nextflow operator will return the basename of a file without directory path or extensions. </p> <p>For example, imagine we have a process input <code>path reads</code>. Suppose it gets fed the value <code>\"data/SRR1234.fq\"</code> at runtime. Calling <code>${reads.simpleName}</code> in the process script would yield <code>\"SRR1234\"</code>.</p> <p>Note that directory path and the extension have been trimmed out!</p> <p>align_and_tag.nf</p> <p>Script section: Use <code>.simpleName</code> to generate an output filename based on the <code>path bam</code> process input.  Add <code>_refAlign.bam</code> onto the end of this filename for clarity.</p> <p>Output section: Alter the collection expression for the <code>aligned_bam</code> output to collect this file.</p> Show Change <pre><code>process ALIGN_AND_TAG {\n\n    container \"mgibio/alignment_helper-cwl:1.0.0\"\n    publishDir \"${params.outdir}/align_and_tag\"\n    cpus \"${params.align_and_tag.cpus}\"\n    memory \"${params.align_and_tag.memory}\"\n\n    input:\n    path reference\n    path bam\n    val readgroup\n\n    output:\n    path \"${bam.simpleName}_refAlign.bam\", emit: aligned_bam    &lt;-\n\n    script:\n    def reference = reference[0]\n    \"\"\"\n    /bin/bash /usr/bin/alignment_helper.sh \\\n    ${bam} \\\n    \"${readgroup}\" \\\n    ${reference} \\\n    8 \\\n    &gt; ${bam.simpleName}_refAlign.bam                            &lt;-\n    \"\"\"\n\n}\n</code></pre> <p></p> <p>After you are have made these changes, re-run the workflow by using the same command as before: <pre><code>nextflow run main.nf\n</code></pre></p> <p>With any luck, this will fix the remaining issues and the workflow will now run to completion. </p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#completed-workflow","title":"Completed Workflow","text":"<p>Once completed, we can check the <code>outputs/</code> folder to view our results.  If everything went well, the <code>outputs/</code> folder should have the following structure: <pre><code>outputs\n\u251c\u2500\u2500 align_and_tag\n\u2502   \u251c\u2500\u2500 2895499223_refAlign.bam\n\u2502   \u2514\u2500\u2500 2895499237_refAlign.bam\n\u251c\u2500\u2500 index_bam\n\u2502   \u251c\u2500\u2500 final.bam\n\u2502   \u2514\u2500\u2500 final.bam.bai\n\u251c\u2500\u2500 mark_duplicates_and_sort\n\u2502   \u251c\u2500\u2500 final.bam\n\u2502   \u251c\u2500\u2500 final.bam.bai\n\u2502   \u2514\u2500\u2500 final.mark_dups_metrics.txt\n\u251c\u2500\u2500 merge_bams_samtools\n\u2502   \u2514\u2500\u2500 final.bam.merged.bam\n\u2514\u2500\u2500 name_sort\n    \u2514\u2500\u2500 final.NameSorted.bam\n</code></pre></p> <p></p> <p>If having trouble, the finished workflow is also available in the <code>data/final/cwl/align_sort_markdup/</code> folder for reference.</p> <p>In addition, the following diffs shows the changes we made to files during manual adjustment of the workflow. </p> <p><code>main.nf</code></p> <p></p> <p><code>align_and_tag.nf</code></p> <p></p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#conclusion_2","title":"Conclusion","text":"<p>In this section we explored how to translate the <code>align_sort_markdup</code> CWL Workflow to Nextflow using <code>janis translate</code>. </p> <p>This is the end of section 1. </p> <p>Let\u2019s take a break!</p> <p>In section 2 we will be working with Galaxy, and will translate some Galaxy Tool Wrappers and Workflows into Nextflow as seen with CWL.</p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#section-21-samtools-flagstat-tool-galaxy","title":"Section 2.1: Samtools Flagstat Tool (Galaxy)","text":""},{"location":"tutorials/janis_translate/janis_translate/#introduction_3","title":"Introduction","text":"<p>This section demonstrates translation of a basic <code>samtools flagstat</code> Galaxy Tool Wrapper to Nextflow using <code>janis translate</code>. </p> <p>The Galaxy Tool Wrapper used in this section was created by contributors to the Galaxy Devteam repository of tools. </p> <p>The underlying software used in the Galaxy Tool Wrapper - samtools_flagstat - displays summary information for an alignment file. </p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#janis-translate_3","title":"Janis Translate","text":"<p>As in the previous sections we will use janis-translate.  This time instead of CWL -&gt; Nextflow, we will do a Galaxy -&gt; Nextflow translation. </p> <p>Aside from local filepaths, <code>janis translate</code> can also access Galaxy Tool Wrappers using a tool ID.  We will use this method today as it is an easier way to access Tool Wrappers. </p> <p>To get the <code>samtools_flagstat</code> Tool ID, navigate to the tool using any usegalaxy.org server.  The following is a link to the samtools flagstat tool in Galaxy Australia:  https://usegalaxy.org.au/root?tool_id=toolshed.g2.bx.psu.edu/repos/devteam/samtools_flagstat/samtools_flagstat/2.0.4. </p> <p>Once here, we will copy the Tool ID. </p> <p></p> <p>At time of writing, the current Tool ID for the <code>samtools_flagstat</code> tool wrapper is toolshed.g2.bx.psu.edu/repos/devteam/samtools_flagstat/samtools_flagstat/2.0.4</p> <p>Now we have the Tool ID, we can access &amp; translate this Galaxy Tool Wrapper to a Nextflow process. </p> <p>We will add <code>-o samtools_flagstat</code> to our command to set the output directory. </p> <p>First, let\u2019s make sure we\u2019re in the training directory  <pre><code>cd /home2/training\n</code></pre></p> <p>To translate the Galaxy Tool, run the following command: <pre><code>singularity exec ~/janis.sif janis translate -o samtools_flagstat --from galaxy --to nextflow toolshed.g2.bx.psu.edu/repos/devteam/samtools_flagstat/samtools_flagstat/2.0.4\n</code></pre></p> <p></p> <p>Once complete, you will see a folder called <code>samtools_flagstat/</code> appear, and a nextflow process called <code>samtools_flagstat.nf</code> will be present inside. </p> <p>For your own reference / interest, the actual Galaxy Tool Wrapper files will be downloaded during translation &amp; will be presented to you in <code>samtools_flagstat/source/</code>. </p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#manual-adjustments_3","title":"Manual Adjustments","text":"<p>The <code>samtools_flagstat/samtools_flagstat.nf</code> file should be similar to the following: </p> <pre><code>nextflow.enable.dsl=2\n\nprocess SAMTOOLS_FLAGSTAT {\n\n    container \"quay.io/biocontainers/samtools:1.13--h8c37831_0\"\n\n    input:\n    path input1\n    val addthreads\n\n    output:\n    path \"output1.txt\", emit: output1\n\n    script:\n    \"\"\"\n    samtools flagstat \\\n    --output-fmt \"txt\" \\\n    -@ ${addthreads} \\\n    ${input1} \\\n    &gt; output1.txt\n    \"\"\"\n\n}\n</code></pre> <p>We can see that this nextflow process has two inputs, a single output, and calls <code>samtools flagstat</code>.  </p> <p>Before continuing, let\u2019s check the samtools flagstat documentation.  In the documentation, we see the following: <pre><code>samtools flagstat in.sam|in.bam|in.cram\n\n-@ INT\nSet number of additional threads to use when reading the file.\n\n--output-fmt/-O FORMAT\nSet the output format. FORMAT can be set to `default', `json' or `tsv' to select the default, JSON or tab-separated values output format. If this option is not used, the default format will be selected.\n</code></pre></p> <p>By matching up the process <code>inputs:</code> section and the <code>script:</code> section, we can see that: - <code>path input1</code> will be the input <code>sam | bam | cram</code> - <code>val addthreads</code> will be the threads argument passed to <code>-@</code> - the <code>--output-fmt</code> option has been assigned the default value of <code>\"txt\"</code></p> <p>We can also see that a container image is available for this tool. </p> <p>This translation is correct for the <code>samtools_flagstat.cwl</code> file and needs no adjusting. </p> <p></p> <p>Note:  If you would like to expose the <code>--output-fmt</code> option as a process input, you can do the following: </p> <ul> <li>add a <code>val format</code> input to the process </li> <li>reference this input in the script, replacing the hardcoded <code>\"txt\"</code> value   (e.g. <code>--output-fmt ${format}</code>)</li> </ul> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#running-samtools-flagstat-as-a-workflow_1","title":"Running Samtools Flagstat as a Workflow","text":"<p>Setting up nextflow.config</p> <p>To run this process, we will set up a <code>nextflow.config</code> file and add some lines to the top of our process definition to turn it into a workflow.</p> <p>Create a new file called <code>nextflow.config</code> in the <code>samtools_flagstat/</code> folder alongside <code>samtools_flagstat.nf</code>. </p> <p>Copy and paste the following code into your <code>nextflow.config</code> file: </p> <p><pre><code>nextflow.enable.dsl = 2\nsingularity.enabled = true\nsingularity.cacheDir = \"$HOME/.singularity/cache\"\n\nparams {\n    bam = \"/home2/training/data/sample_data/galaxy/samtools_flagstat/samtools_flagstat_input1.bam\"\n    threads = 1\n}\n</code></pre> </p> <p>This tells nextflow how to run, and sets up inputs parameters we can use to supply values to the <code>SAMTOOLS_FLAGSTAT</code> process:</p> <ul> <li>The <code>bam</code> parameter is the input bam file we wish to analyse. </li> <li>The <code>threads</code> parameter is an integer, and controls how many additional compute threads to use during runtime.</li> </ul> <p>From here, we can refer to these inputs as <code>params.bam</code> / <code>params.threads</code> in other files.</p> <p></p> <p>Creating Workflow &amp; Passing Data </p> <p>Now that we have the <code>nextflow.config</code> file set up, we will add a few lines to <code>samtools_flagstat.nf</code> to turn it into a workflow. </p> <p>Copy and paste the following lines at the top of <code>samtools_flagstat.nf</code>:</p> <pre><code>nextflow.enable.dsl=2\n\nch_bam = Channel.fromPath( params.bam )\n\nworkflow {\n    SAMTOOLS_FLAGSTAT(\n        ch_bam,             // input1 \n        params.threads      // addthreads\n    )\n    SAMTOOLS_FLAGSTAT.out.output1.view()\n}\n</code></pre> <p>The first line creates a nextflow <code>Channel</code> for our <code>bam</code> input.  The <code>params.bam</code> global variable we set up previously is used to supply the  path to our sample data.</p> <p>The new <code>workflow {}</code> section declares the main workflow entry point.  When we run this file, nextflow will look for this section and run the workflow contained within. </p> <p>In our case, the workflow only contains a single task, which runs the <code>SAMTOOLS_FLAGSTAT</code> process defined below the workflow section. We then supply input values to <code>SAMTOOLS_FLAGSTAT</code> using our <code>ch_bams</code> channel we created for <code>input1</code>, and <code>params.threads</code> for the <code>addthreads</code> input.</p> <p></p> <p>Adding publishDir directive</p> <p>So that we can collect the output of <code>SAMTOOLS_FLAGSTAT</code> when it runs, we will add a <code>publishDir</code> directive to the process:</p> <pre><code>process SAMTOOLS_FLAGSTAT {\n\n    container \"quay.io/biocontainers/samtools:1.13--h8c37831_0\"\n    publishDir \"./outputs\"\n\n    ...\n\n}\n</code></pre> <p>Now that we have set up <code>SAMTOOLS_FLAGSTAT</code> as a workflow, we can run it and check the output. </p> <p></p> <p>Running Our Workflow</p> <p>Ensure you are in the <code>samtools_flagstat/</code> working directory, where <code>nextflow.config</code> and <code>samtools_flagstat.nf</code> reside. </p> <pre><code>cd samtools_flagstat\n</code></pre> <p>To run the workflow using our sample data, we can now write the following command:  <pre><code>nextflow run samtools_flagstat.nf\n</code></pre></p> <p>Once completed, the check the <code>./outputs</code> folder inside <code>samtools_flagstat/</code>. </p> <p>If everything went well, you should see a single file called <code>output1.txt</code> with the following contents:  <pre><code>200 + 0 in total (QC-passed reads + QC-failed reads)\n200 + 0 primary\n0 + 0 secondary\n0 + 0 supplementary\n0 + 0 duplicates\n0 + 0 primary duplicates\n25 + 0 mapped (12.50% : N/A)\n25 + 0 primary mapped (12.50% : N/A)\n200 + 0 paired in sequencing\n100 + 0 read1\n100 + 0 read2\n0 + 0 properly paired (0.00% : N/A)\n0 + 0 with itself and mate mapped\n25 + 0 singletons (12.50% : N/A)\n0 + 0 with mate mapped to a different chr\n0 + 0 with mate mapped to a different chr (mapQ&gt;=5)\n</code></pre></p> <p>If needed, you can check the <code>data/final/galaxy/samtools_flagstat</code> folder as a reference. </p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#conclusion_3","title":"Conclusion","text":"<p>In this section we explored how to translate a simple Galaxy Tool to a Nextflow process. </p> <p>Will build on this in the next section where we translate a much more complex Galaxy Tool Wrapper: limma.</p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#section-22-limma-voom-tool-galaxy","title":"Section 2.2: Limma Voom Tool (Galaxy)","text":""},{"location":"tutorials/janis_translate/janis_translate/#introduction_4","title":"Introduction","text":"<p>This section demonstrates translation of the <code>limma</code> tool from Galaxy to Nextflow using <code>janis translate</code>.  </p> <p>The aim of this section is to document a more challenging translation, as this Galaxy Tool Wrapper is complex and uses an Rscript to run its analysis. </p> <p>Shian Su is the original author of the <code>limma</code> Galaxy tool wrapper we are translating today.  Maria Doyle has also contributed multiple times over its many years of use as maintainence and upgrades. </p> <p>Limma is an R package which analyses gene expression using microarray or RNA-Seq data.  The most common use (at time of writing) is referred to as limma-voom, which performs Differential Expression (DE) analysis on RNA-Seq data between multiple samples. </p> <p>The <code>voom</code> part of <code>limma-voom</code> is functionality within <code>limma</code> which adapts limma to use RNA-Seq data instead of microarray data.  Since RNA-Seq data has become more common than microarray data at time of writing, limma-voom is likely the most popular use of the <code>limma</code> package as a workflow.</p> <p>Under the hood, the Galaxy <code>limma</code> tool contains an R script which configures &amp; runs limma based on command-line inputs.  This allows Galaxy users to run <code>limma</code> as a complete workflow, rather than as individual R library functions. </p> <p>The Limma package has had many contributors over the years, including but not limited to:</p> <ul> <li>Gordon K. Smyth</li> <li>Matthew Ritchie</li> <li>Natalie Thorne</li> <li>James Wettenhall</li> <li>Wei Shi</li> <li>Yifang Hu</li> </ul> <p>See the following articles related to Limma:</p> <ul> <li> <p>Limma package capabilities (new and old) Ritchie, ME, Phipson, B, Wu, D, Hu, Y, Law, CW, Shi, W, and Smyth, GK (2015). limma powers differential expression analyses for RNA-sequencing and microarray studies. Nucleic Acids Research 43(7), e47.</p> </li> <li> <p>Limma for DE analysis Phipson, B, Lee, S, Majewski, IJ, Alexander, WS, and Smyth, GK (2016). Robust hyperparameter estimation protects against hypervariable genes and improves power to detect differential expression. Annals of Applied Statistics 10(2), 946\u2013963.</p> </li> <li> <p>Limma-Voom for DE analysis of RNA-Seq data Law, CW, Chen, Y, Shi, W, and Smyth, GK (2014). Voom: precision weights unlock linear model analysis tools for RNA-seq read counts. Genome Biology 15, R29.</p> </li> </ul> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#janis-translate_4","title":"Janis Translate","text":"<p>We will run janis-translate in the same manner as section 2.1. </p> <p>To get the Tool ID you can either:</p> <ul> <li>Go to the Galaxy Australia server &amp; copy the Tool ID from the limma tool, or</li> <li>Copy the following ID: toolshed.g2.bx.psu.edu/repos/iuc/limma_voom/limma_voom/3.50.1+galaxy0</li> </ul> <p>We add <code>-o limma_voom</code> to our command to specify this as the output directory. </p> <p>As always, let\u2019s make sure we\u2019re back in the training folder: <pre><code>cd /home2/training\n</code></pre></p> <p>To translate, run the following command: <pre><code>singularity exec ~/janis.sif janis translate -o limma_voom --from galaxy --to nextflow toolshed.g2.bx.psu.edu/repos/iuc/limma_voom/limma_voom/3.50.1+galaxy0\n</code></pre></p> <p></p> <p>Once complete, you will see a folder called <code>limma_voom</code> appear, and a nextflow process called <code>limma_voom.nf</code> will be present inside. </p> <p>For your own reference / interest, the actual Galaxy Tool Wrapper files will be downloaded during translation &amp; presented to you in <code>limma_voom/source</code>. </p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#manual-adjustments_4","title":"Manual Adjustments","text":"<p>Inside the <code>limma_voom/</code> folder, we see the following: </p> <ul> <li>A Nextflow process named <code>limma_voom.nf</code></li> <li>An Rscript named <code>limma_voom.R</code> </li> <li>A folder named <code>source/</code> containing the Galaxy Tool Wrapper XML</li> </ul> <p>Unlike previous tool translations, the <code>limma_voom.nf</code> process will need adjusting. </p> <p></p> <p>limma_voom.nf</p> <p>The <code>limma_voom/limma_voom.nf</code> file is our nextflow process. It should be similar to the following: </p> <pre><code>nextflow.enable.dsl = 2\n\nprocess LIMMA_VOOM {\n\n    container \"quay.io/biocontainers/quay.io/biocontainers/bioconductor-limma:3.50.1--r41h5c21468_0\"\n\n    input:\n    path anno_geneanno\n    path cont_cinfo\n    path input_counts\n    path input_fact_finfo\n    path limma_voom_script\n    path out_report1\n    val out_report_files_path\n\n    output:\n    path \"output_dir/*_filtcounts\", emit: outFilt\n    path \"output_dir/*_normcounts\", emit: outNorm\n    path \"outReport.html\", emit: outReport2\n    path \"output_dir/*.tsv?\", emit: outTables\n    path \"libsizeinfo\", emit: out_libinfo\n    path \"unknown_collection_pattern\", emit: out_rscript\n\n    script:\n    \"\"\"\n    Rscript \\\n    ${limma_voom_script} \\\n    -C ${cont_cinfo} \\\n    -R ${out_report1} \\\n    -a ${anno_geneanno} \\\n    -f ${input_fact_finfo} \\\n    -m ${input_counts} \\\n    -G 10 \\\n    -P \"i\" \\\n    -c 1 \\\n    -d \"BH\" \\\n    -j \"\" \\\n    -l 0 \\\n    -n \"TMM\" \\\n    -o ${out_report_files_path} \\\n    -p 0.05 \\\n    -s 0 \\\n    -t 3 \\\n    -z 0\n    \"\"\"\n\n}\n</code></pre> <p>We see that this nextflow process has multiple inputs, many command line arguments, and multiple outputs. </p> <p>Look at the command line arguments for this process in the <code>script:</code> block.</p> <p>This Galaxy Tool Wrapper is evidently running an Rscript which we supply to the process via the <code>path limma_voom_script</code> input. In the script section we see that this Rscript will be run, and has some CLI arguments which follow.</p> <p>When translating Galaxy Tool Wrappers, we often see this usage of scripts.  <code>limma</code> is an R library, so we need an Rscript to run the analysis we want.  The Galaxy Tool Wrapper supplies user inputs to this script, then the script will run the analysis. </p> <p></p> <p>NOTE <code>janis translate</code> will copy across any scripts referenced by a source Tool / Workflow.  The <code>limma_voom/limma_voom.R</code> file is the Rscript which this Galaxy Tool Wrapper uses to run an analysis. </p> <p></p> <p>limma_voom.R</p> <p>From reading the nextflow process, it isn\u2019t particularly obvious what each command line argument does.  We know that the process input are supplied to the <code>limma_voom.R</code> script, but the names aren\u2019t very descriptive.  Luckily, the author of this script has good documentation at the top of the script to help us out. </p> <p>Open <code>limma_voom.R</code>. </p> <p>At the top of the file, we see some documentation:</p> <pre><code># This tool takes in a matrix of feature counts as well as gene annotations and\n# outputs a table of top expressions as well as various plots for differential\n# expression analysis\n#\n# ARGS: htmlPath\", \"R\", 1, \"character\"      -Path to html file linking to other outputs\n#       outPath\", \"o\", 1, \"character\"       -Path to folder to write all output to\n#       filesPath\", \"j\", 2, \"character\"     -JSON list object if multiple files input\n#       matrixPath\", \"m\", 2, \"character\"    -Path to count matrix\n#       factFile\", \"f\", 2, \"character\"      -Path to factor information file\n#       factInput\", \"i\", 2, \"character\"     -String containing factors if manually input\n#       annoPath\", \"a\", 2, \"character\"      -Path to input containing gene annotations\n#       contrastFile\", \"C\", 1, \"character\"  -Path to contrasts information file\n#       contrastInput\", \"D\", 1, \"character\" -String containing contrasts of interest\n#       cpmReq\", \"c\", 2, \"double\"           -Float specifying cpm requirement\n#       cntReq\", \"z\", 2, \"integer\"          -Integer specifying minimum total count requirement\n#       sampleReq\", \"s\", 2, \"integer\"       -Integer specifying cpm requirement\n#       normCounts\", \"x\", 0, \"logical\"      -String specifying if normalised counts should be output\n#       rdaOpt\", \"r\", 0, \"logical\"          -String specifying if RData should be output\n#       lfcReq\", \"l\", 1, \"double\"           -Float specifying the log-fold-change requirement\n#       pValReq\", \"p\", 1, \"double\"          -Float specifying the p-value requirement\n#       pAdjOpt\", \"d\", 1, \"character\"       -String specifying the p-value adjustment method\n#       normOpt\", \"n\", 1, \"character\"       -String specifying type of normalisation used\n#       robOpt\", \"b\", 0, \"logical\"          -String specifying if robust options should be used\n#       trend\", \"t\", 1, \"double\"            -Float for prior.count if limma-trend is used instead of voom\n#       weightOpt\", \"w\", 0, \"logical\"       -String specifying if voomWithQualityWeights should be used\n#       topgenes\", \"G\", 1, \"integer\"        -Integer specifying no. of genes to highlight in volcano and heatmap\n#       treatOpt\", \"T\", 0, \"logical\"        -String specifying if TREAT function should be used\n#       plots, \"P\", 1, \"character\"          -String specifying additional plots to be created\n#\n# OUT:\n#       Density Plots (if filtering)\n#       Box Plots (if normalising)\n#       MDS Plot\n#       Voom/SA plot\n#       MD Plot\n#       Volcano Plot\n#       Heatmap\n#       Expression Table\n#       HTML file linking to the ouputs\n# Optional:\n#       Normalised counts Table\n#       RData file\n#\n#\n# Author: Shian Su - registertonysu@gmail.com - Jan 2014\n# Modified by: Maria Doyle - Jun 2017, Jan 2018, May 2018\n</code></pre> <p>For each process input, find the command line argument it feeds, then look up the argument documentation in <code>limma_voom.R</code>. </p> <p>For example, the <code>anno_geneanno</code> process input feeds the <code>-a</code> argument. Looking at the documentation, we see that this is the gene annotations file.  <pre><code># limma_voom.nf\n-a ${anno_geneanno} \\\n\n# limma_voom.R\nannoPath\", \"a\", 2, \"character\"      -Path to input containing gene annotations\n</code></pre> The <code>cont_cinfo</code> process input feeds the <code>-C</code> argument, which is a file containing contrasts of interest: <pre><code># limma_voom.nf\n-C ${cont_cinfo} \\\n\n# limma_voom.R\ncontrastFile\", \"C\", 1, \"character\"  -Path to contrasts information file\n</code></pre></p> <p></p> <p>Now that we have had a little look at how the <code>LIMMA_VOOM</code> nextflow process will run,  let\u2019s make some adjustments so that it functions as intended. </p> <p></p> <p>Modifying Container</p> <p>The first thing to do is change the container requirement. </p> <p>Galaxy uses <code>conda</code> to handle tool requirements. </p> <p>For Galaxy Tool Wrappers which only have a single requirement, janis-translate will just fetch a container for that single requirement by looking up registries on <code>quay.io</code>. For those which have 2+ requirements, things get complicated. </p> <p>For the <code>limma</code> Galaxy Tool Wrapper, the following are listed:</p> <ul> <li>bioconductor-limma==3.50.1</li> <li>bioconductor-edger==3.36.0</li> <li>r-statmod==1.4.36</li> <li>r-scales==1.1.1</li> <li>r-rjson==0.2.21</li> <li>r-getopt==1.20.3</li> <li>r-gplots==3.1.1</li> <li>bioconductor-glimma==2.4.0</li> </ul> <p>For best-practises pipelines, we want to use containers instead of conda, and want a single image.</p> <p>To facilitate this, janis-translate has a new test-feature: <code>--build-galaxy-tool-images</code></p> <p>This feature allows janis-translate to build a single container image during runtime which has all software requirements. </p> <p>As this feature requires docker (which is not available on our training VMs today), and also because containers can take anywhere from 2-15 minutes to build, we won\u2019t use this feature today. </p> <p>Instead, we have pre-built images for the relevant tools using janis-translate, and placed them on a <code>quay.io</code> repository. </p> <p>Swapping container directive</p> <p>Change the LIMMA_VOOM process container directive from: <code>quay.io/biocontainers/bioconductor-limma:3.50.1--r41h5c21468_0</code></p> <p>To: <code>quay.io/grace_hall1/limma-voom:3.50.1</code></p> Show Change <pre><code>process LIMMA_VOOM {\n\n    container \"quay.io/grace_hall1/limma-voom:3.50.1\"     &lt;- \n    publishDir \"./outputs\"\n\n    input:\n    path anno_geneanno\n    path cont_cinfo\n    path input_counts\n    path input_fact_finfo\n    path limma_voom_script\n    path out_report1\n    val out_report_files_path\n    ...\n}\n</code></pre> <p></p> <p>Add publishDir Directive</p> <p>While we\u2019re modifying directives, let\u2019s add a <code>publishDir</code> directive. </p> <p>This lets us specify a folder where outputs of this process should be presented.</p> <p>Adding publishDir Directive</p> <p>Add a publishDir directive for the process with the path <code>\"./outputs\"</code>.</p> Show Change <pre><code>process LIMMA_VOOM {\n\n    container \"quay.io/biocontainers/janis-translate-limma-voom-3.34.9.9\"\n    publishDir \"./outputs\"                                                      &lt;-\n\n    ...\n\n}\n</code></pre> <p></p> <p>Modifying Inputs</p> <p>The <code>path out_report1</code> process input specifies the name of a html file which will present our results.  We aren\u2019t actually supplying a file; we are providing the script a filename, which should be a string.</p> <p>Modifying inputs: html path</p> <p>Change the type of the <code>out_report1</code> input from <code>path</code> to <code>val</code>.</p> Show Change <pre><code>process LIMMA_VOOM {\n\n    container \"quay.io/biocontainers/janis-translate-limma-voom-3.34.9.9\"\n    publishDir \"./outputs\"\n\n    input:\n    path anno_geneanno\n    path cont_cinfo\n    path input_counts\n    path input_fact_finfo\n    path limma_voom_script\n    val out_report1                         &lt;- \n    val out_report_files_path\n    ...\n}\n</code></pre> <p></p> <p>Modifying Script</p> <p>From reading the documentation, you may have noticed that one particular argument isn\u2019t needed.  The <code>-j</code> argument is only needed when we have multiple input files - but in our case we are using a single counts file.  </p> <p>We will be using a single input counts file, so can remove this argument. </p> <p>Modifying script: <code>-j</code> argument</p> <p>Remove the <code>-j</code> argument and its value from the script section. </p> Show Change <pre><code>process LIMMA_VOOM {\n    ...\n\n    script:\n    \"\"\"\n    Rscript \\\n    ${limma_voom_script} \\\n    -C ${cont_cinfo} \\\n    -R ${out_report1} \\\n    -a ${anno_geneanno} \\\n    -f ${input_fact_finfo} \\\n    -m ${input_counts} \\\n    -G 10 \\\n    -P \"i\" \\\n    -c 1 \\\n    -d \"BH\" \\                   \n    -l 0 \\                              &lt;- `-j \"\"` removed\n    -n \"TMM\" \\\n    -o ${out_report_files_path} \\\n    -p 0.05 \\\n    -s 0 \\\n    -t 3 \\\n    -z 0\n    \"\"\"\n}\n</code></pre> <p></p> <p>Modifying Outputs</p> <p>Galaxy Tool Wrappers often allow you to generate extra outputs based on what the user wants.</p> <p>For this tutorial, we\u2019re not interested in any of the optional outputs - just the single <code>outReport2</code> output.</p> <p>Modifying outputs</p> <p>Remove all the process outputs except <code>outReport2</code>.</p> Show Change <pre><code>process LIMMA_VOOM {\n\n    container \"quay.io/biocontainers/janis-translate-limma-voom-3.34.9.9\"\n\n    input:\n    path anno_geneanno\n    path cont_cinfo\n    path input_counts\n    path input_fact_finfo\n    path limma_voom_script\n    path out_report1\n    val out_report_files_path\n\n    output:\n    path \"outReport.html\", emit: outReport2         &lt;- other outputs removed\n\n    ...\n}\n</code></pre> <p></p> <p>Your Nextflow process should now look similar to the following:  <pre><code>process LIMMA_VOOM {\n\n    container \"quay.io/grace_hall1/limma-voom:3.50.1\"\n    publishDir \"./outputs\"\n\n    input:\n    path anno_geneanno\n    path cont_cinfo\n    path input_counts\n    path input_fact_finfo\n    path limma_voom_script\n    val out_report1\n    val out_report_files_path\n\n    output:\n    path \"outReport.html\", emit: outReport2\n\n    script:\n    \"\"\"\n    Rscript \\\n    ${limma_voom_script} \\\n    -C ${cont_cinfo} \\\n    -R ${out_report1} \\\n    -a ${anno_geneanno} \\\n    -f ${input_fact_finfo} \\\n    -m ${input_counts} \\\n    -G 10 \\\n    -P \"i\" \\\n    -c 1 \\\n    -d \"BH\" \\\n    -l 0 \\\n    -n \"TMM\" \\\n    -o ${out_report_files_path} \\\n    -p 0.05 \\\n    -s 0 \\\n    -t 3 \\\n    -z 0\n    \"\"\"\n\n}\n</code></pre></p> <p>Now that we have fixed up the process definition, we can set up <code>nextflow.config</code> and run the process with sample data to test. </p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#running-limma-voom-as-a-workflow","title":"Running Limma Voom as a Workflow","text":"<p>In this section we will run our translated <code>LIMMA_VOOM</code> process. </p> <p>We will set up a workflow with a single <code>LIMMA_VOOM</code> task, and will supply inputs to this task using <code>nextflow.config</code>. </p> <p></p> <p>Setting up nextflow.config</p> <p>To run this process, we will set up a <code>nextflow.config</code> file to supply inputs and other config. </p> <p>Create a new file called <code>nextflow.config</code> in the <code>limma_voom/</code> folder alongside <code>limma_voom.nf</code>. </p> <p>Copy and paste the following code into your <code>nextflow.config</code> file.  <pre><code>nextflow.enable.dsl = 2\nsingularity.enabled = true\nsingularity.cacheDir = \"$HOME/.singularity/cache\"\n\nparams {\n    limma_voom_script = \"/home2/training/limma_voom/limma_voom.R\"\n    annotation_file   = \"/home2/training/data/sample_data/galaxy/limma_voom/anno.txt\"\n    contrast_file     = \"/home2/training/data/sample_data/galaxy/limma_voom/contrasts.txt\"\n    factor_file       = \"/home2/training/data/sample_data/galaxy/limma_voom/factorinfo.txt\"\n    matrix_file       = \"/home2/training/data/sample_data/galaxy/limma_voom/matrix.txt\"\n    html_path         = \"outReport.html\"\n    output_path       = \".\"\n}\n</code></pre></p> <p>This tells nextflow to use singularity, and sets up input parameters for our sample data.</p> <p></p> <p>Creating Workflow &amp; Passing Data </p> <p>Now we have input data set up using the <code>params</code> global variable, we will add some lines to the top of <code>limma_voom.nf</code> to turn it into a workflow.</p> <p>Copy and paste the following lines at the top of <code>limma_voom.nf</code>:</p> <pre><code>nextflow.enable.dsl = 2\n\nworkflow {\n    LIMMA_VOOM(\n        params.annotation_file,     // anno_geneanno\n        params.contrast_file,       // cont_cinfo\n        params.matrix_file,         // input_counts\n        params.factor_file,         // input_fact_finfo\n        params.limma_voom_script,   // limma_voom_script\n        params.html_path,           // out_report1\n        params.output_path,         // out_report_files_path\n    )\n}\n</code></pre> <p>The new <code>workflow {}</code> section declares the main workflow entry point.  When we run <code>limma_voom.nf</code>, nextflow will look for this section and run the workflow contained within. </p> <p>In our case, the workflow only contains a single task, which runs the <code>LIMMA_VOOM</code> process defined below the workflow section. We are passing the inputs we set up as <code>params</code> in <code>nextflow.config</code> to feed values to the process inputs.</p> <p></p> <p>Running Our Workflow</p> <p>Ensure you are in the <code>limma_voom/</code> working directory, where <code>nextflow.config</code> and <code>limma_voom.nf</code> reside. </p> <pre><code>cd limma_voom\n</code></pre> <p>To run the workflow using our sample data, we can now write the following command:  <pre><code>nextflow run limma_voom.nf\n</code></pre></p> <p>Nextflow will automatically check if there is a <code>nextflow.config</code> file in the working directory, and if so will use that to configure itself. Our inputs are supplied in <code>nextflow.config</code> alongside the dsl2 &amp; singularity config, so it should run without issue. </p> <p></p> <p>Viewing Results</p> <p>If everything went well, we should see a new folder created called <code>outputs/</code> which has a single <code>outReport.html</code> file inside. </p> <p>If needed, you can check the <code>data/final/galaxy/limma_voom</code> folder as a reference.</p> <p><code>outReport.html</code> will be a symlink to the work folder where <code>LIMMA_VOOM</code> ran.</p> <p>To see the symlink path, use the following command: <pre><code>ls -lah outputs/outReport.html\n</code></pre></p> <p>The output should be similar to the following: <pre><code>lrwxrwxrwx 1 training users 80 Jun 18 11:06 outputs/outReport.html -&gt; \n/home2/training/limma_voom/work/02/8cd12271346eb884083815bfe0cbfa/outReport.html\n</code></pre></p> <p>The actual file location is displayed after the <code>-&gt;</code>, as this denotes a symlink. </p> <p>If using VSC, open this directory to see the various data and pdfs produced by <code>LIMMA_VOOM</code>. If using CLI, use the <code>cd</code> command instead, then <code>ls -lah</code> to print the contents of the directory. </p> <p>You should see the following files &amp; directories:  <pre><code># directories\n- glimma_MDS\n- glimma_Mut-WT\n- glimma_volcano_Mut-WT\n- glimma_WT-Mut\n- glimma_volcano_WT-Mut\n- glimma_Mut-WT-WT-Mut\n- glimma_volcano_Mut-WT-WT-Mut\n\n# files\n- mdsscree.png\n- mdsscree.pdf\n- saplot.png\n- saplot.pdf\n- limma-trend_Mut-WT.tsv\n- mdplot_Mut-WT.pdf\n- volplot_Mut-WT.pdf\n- mdvolplot_Mut-WT.png\n- mdplot_WT-Mut.pdf\n- limma-trend_WT-Mut.tsv\n- volplot_WT-Mut.pdf\n- mdvolplot_WT-Mut.png\n- limma-trend_Mut-WT-WT-Mut.tsv\n- mdplot_Mut-WT-WT-Mut.pdf\n- volplot_Mut-WT-WT-Mut.pdf\n- mdvolplot_Mut-WT-WT-Mut.png\n- session_info.txt\n- outReport.html\n</code></pre></p> <p>If you\u2019re using VSC, you can download this folder. </p> <p>Right-click the folder, then select \u201cDownload\u2026\u201d.  Save it wherever you like on your local PC.</p> <p>You can then open <code>outReport.html</code> inside the downloaded folder to view the <code>limma_voom</code> DE analysis results. </p> <p>Here is an example of how <code>outReport.html</code> should look: </p> <p> </p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#conclusion_4","title":"Conclusion","text":"<p>In this section we explored how to translate a challenging Galaxy Tool Wrapper to a Nextflow process. </p> <p>In the final section - section 2.3 - we will translate a challenging Galaxy Workflow into Nextflow. </p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#section-23-rna-seq-reads-to-counts-workflow-galaxy","title":"Section 2.3: RNA-Seq Reads to Counts Workflow (Galaxy)","text":""},{"location":"tutorials/janis_translate/janis_translate/#introduction_5","title":"Introduction","text":"<p>The final section demonstrates translation of a challenging Galaxy workflow to Nextflow using <code>janis translate</code>. </p> <p>The workflow we will translate in this section accepts raw RNA-seq reads as input, and produces gene counts for further analysis (eg. differential expression).</p> <p>Many of the Galaxy Tool Wrappers used in this workflow are challenging. They may:</p> <ul> <li>Contain complex execution logic</li> <li>Perform multiple commands</li> <li>Use inbuilt Galaxy data for reference genomes, indexes, and annotation information.</li> </ul> <p>In these situations, the translated files produced by <code>janis translate</code> will need manual invertention to run. </p> <p></p> <p>The workflow used in this section is taken from the Galaxy Training Network (GTN) resource which provides tutorials on how to use Galaxy for bioinformatic analysis. </p> <p>The GTN has over 100 tutorials demonstrating how to use the Galaxy platform to analyse data, and is definitely worth having a look! </p> <p>The specific workflow we use today is from the RNA-Seq reads to counts page, which provides detailed instruction on how to turn raw RNA-seq reads into gene counts.</p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#janis-translate_5","title":"Janis Translate","text":"<p>Obtain the Workflow</p> <p>Galaxy workflows can be found in a number of places. </p> <p>Today, we will use the workflow provided from the GTN RNA-Seq reads to counts tutorial.  The workflow can be downloaded using this link.</p> <p>The downloaded <code>.ga</code> workflow is also included in the local <code>data/source/galaxy/</code> as <code>rna_seq_reads_to_counts.ga</code>. </p> <p></p> <p>(for your information)</p> <p>Galaxy servers each have shared workflows where you can search for a community workflow which suits your needs. The link above is to the Galaxy Australia server shared workflows page, which contains hundreds of workflows which users have made public. </p> <p></p> <p>The Galaxy Training Network (GTN) also provides workflows for their training tutorials. These are useful because the topics covered are common analyses users wish to perform. </p> <p></p> <p>Additionally, you can create your own workflow using the Galaxy Workflow Editor then download your creation. </p> <p></p> <p></p> <p>Run Janis Translate</p> <p>To translate a workflow, we follow the same pattern as in the previous sections. </p> <p>For this section we have included the <code>.ga</code> file in the <code>./source</code> folder so you won\u2019t need to download it yourself. </p> <p>To start, let\u2019s make sure we\u2019re in the right directory: <pre><code>cd /home2/training\n</code></pre></p> <p>As usual, we will add <code>-o rnaseq_reads_to_counts</code> to our translate command to set the output directory. </p> <p>To translate the Galaxy workflow, run the following command: <pre><code>singularity exec ~/janis.sif janis translate -o rnaseq_reads_to_counts --from galaxy --to nextflow data/source/galaxy/rna_seq_reads_to_counts.ga\n</code></pre></p> <p>This may take up to 5 mins as janis-translate will make many requests to the Galaxy Toolshed API and quay.io. </p> <p>Janis-translate uses the Galaxy Toolshed API to look up and download wrappers specified in the workflow. Janis-translate also makes requests to quay.io to find the most suitable container for each Galaxy Tool Wrapper using the requirements listed in the wrapper. </p> <p></p> <p>Translation Output</p> <p>The output translation will contain multiple files and directories. You will see a folder called <code>rnaseq_reads_to_counts/</code> appear - inside this folder, we should see the following structure:</p> <pre><code>rnaseq_reads_to_counts\n\u251c\u2500\u2500 main.nf                             # main workflow (rna_seq_reads_to_counts)\n\u251c\u2500\u2500 modules                             # folder containing nextflow processes\n\u2502   \u251c\u2500\u2500 collection_column_join.nf\n\u2502   \u251c\u2500\u2500 cutadapt.nf\n\u2502   \u251c\u2500\u2500 fastqc.nf\n\u2502   \u251c\u2500\u2500 featurecounts.nf\n\u2502   \u251c\u2500\u2500 hisat2.nf\n\u2502   \u251c\u2500\u2500 multiqc.nf\n\u2502   \u251c\u2500\u2500 picard_mark_duplicates.nf\n\u2502   \u251c\u2500\u2500 rseqc_gene_body_coverage.nf\n\u2502   \u251c\u2500\u2500 rseqc_infer_experiment.nf\n\u2502   \u251c\u2500\u2500 rseqc_read_distribution.nf\n\u2502   \u2514\u2500\u2500 samtools_idxstats.nf\n\u251c\u2500\u2500 nextflow.config                     # config file to supply input information\n\u251c\u2500\u2500 source                              # folder containing galaxy tool wrappers used to translate tools\n\u251c\u2500\u2500 subworkflows                        # folder containing nextflow subworkflows\n\u2514\u2500\u2500 templates                           # folder containing any scripts used by processes\n    \u251c\u2500\u2500 collection_column_join_script\n    \u2514\u2500\u2500 multiqc_config\n</code></pre> <p>Now that we have performed translation using <code>janis translate</code>, we need to check the translated workflow for correctness.  </p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#running-the-translated-workflow_1","title":"Running the Translated Workflow","text":"<p>Swapping containers</p> <p>As mentioned in section 2.2, some Galaxy Tool Wrappers have multiple requirements. </p> <p>As we are not using <code>janis translate --build-galaxy-tool-images ...</code>, some of the  translated nextflow processes will not run. </p> <p>Without <code>--build-galaxy-tool-images</code>, janis-translate selects the best single container from the software requirements. This container sometimes does not have all the required software needed to run the process script. </p> <p>We have prepared pre-built containers which contain all software requirements for the 2 affected tools. </p> <p>Swapping HISAT2 container directive</p> <p>Change the HISAT2 process container directive from:  <code>quay.io/biocontainers/hisat2:2.2.1--h87f3376_5</code></p> <p>To:  <code>quay.io/grace_hall1/hisat2:2.2.1</code></p> Show Change <p>modules/hisat2.nf <pre><code>process HISAT2 {\n\n    container \"quay.io/grace_hall1/hisat2:2.2.1\"            &lt;-\n    publishDir \"${params.outdir}/hisat2\"\n\n    ...\n}\n</code></pre></p> <p>Swapping FEATURECOUNTS container directive</p> <p>Change the FEATURECOUNTS process container directive from:  <code>quay.io/biocontainers/coreutils:8.31--h14c3975_0</code></p> <p>To:  <code>quay.io/grace_hall1/featurecounts:2.0.1</code></p> Show Change <pre><code>process FEATURECOUNTS {\n\n    container \"quay.io/grace_hall1/featurecounts:2.0.1\"     &lt;-\n    publishDir \"${params.outdir}/featurecounts\"\n\n    ...\n}\n</code></pre> <p></p> <p>Inspect main.nf</p> <p>The main workflow translation appears as <code>main.nf</code> in the <code>rnaseq_reads_to_counts/</code> folder. </p> <p></p> <p>NOTE:  Before continuing, feel free to have a look at the other nextflow files which have been generated during translation. Each Galaxy tool appears as a nextflow process in the <code>rnaseq_reads_to_counts/modules/</code> directory.  Each script used by nextflow processes appear in the <code>rnaseq_reads_to_counts/templates/</code> directory. Each Galaxy Tool Wrapper used during translation appears in the <code>rnaseq_reads_to_counts/source/</code> directory. </p> <p></p> <p>In <code>main.nf</code> we see imports for nextflow processes called by the main workflow:</p> <pre><code>include { FASTQC as FASTQC1 } from './modules/fastqc'\ninclude { CUTADAPT } from './modules/cutadapt'\ninclude { FASTQC as FASTQC2 } from './modules/fastqc'\ninclude { HISAT2 } from './modules/hisat2'\ninclude { FEATURECOUNTS } from './modules/featurecounts'\ninclude { PICARD_MARK_DUPLICATES } from './modules/picard_mark_duplicates'\ninclude { SAMTOOLS_IDXSTATS } from './modules/samtools_idxstats'\ninclude { RSEQC_GENE_BODY_COVERAGE } from './modules/rseqc_gene_body_coverage'\ninclude { RSEQC_INFER_EXPERIMENT } from './modules/rseqc_infer_experiment'\ninclude { RSEQC_READ_DISTRIBUTION } from './modules/rseqc_read_distribution'\ninclude { COLLECTION_COLUMN_JOIN } from './modules/collection_column_join'\ninclude { MULTIQC } from './modules/multiqc'\n</code></pre> <p>We also see that some nextflow <code>Channels</code> and other variables have been set up. </p> <p>Channels are used to supply data according to nextflow\u2019s adoption of the dataflow programming model. The other variable definitions ensure that file input parameters are being treated as files by nextflow, so that they are staged properly in the process working directory.  <pre><code>// data which will be passed as channels\nch_in_input_fastqs_collection  = Channel.fromPath( params.in_input_fastqs_collection ).toList()\n\n// data which will be passed as variables\ncollection_column_join_script  = file( params.collection_column_join_script )\nfastqc1_contaminants           = file( params.fastqc1_contaminants )\nfastqc1_limits                 = file( params.fastqc1_limits )\nfastqc2_contaminants           = file( params.fastqc2_contaminants )\nfastqc2_limits                 = file( params.fastqc2_limits )\nin_input_reference_gene_bed    = file( params.in_input_reference_gene_bed )\nmultiqc_config                 = file( params.multiqc_config )\n</code></pre></p> <p></p> <p>Now that we have looked at the imports and dataflow, we can look at the main <code>workflow</code> section. </p> <p>The main workflow is captured in the <code>workflow {}</code> section and has 12 tasks.  Each task has been supplied values according to the source workflow.  Comments display the name of the process input which is being fed a particular value. </p> <p>To get a sense of how the processes relate to each other in the workflow execution, compare the main <code>workflow {}</code> section with the following visualisation of our Galaxy workflow (using the Galaxy workflow editor).</p> <p>main.nf <pre><code>workflow {\n\n    FASTQC1(\n        ch_in_input_fastqs_collection.flatten(),  // input_file\n        fastqc1_contaminants,                     // contaminants\n        fastqc1_limits,                           // limits\n        params.fastqc1_format_string,             // format_string\n        params.fastqc1_outdir                     // outdir\n    )\n\n    CUTADAPT(\n        ch_in_input_fastqs_collection.flatten()  // library_input_1\n    )\n\n    FASTQC2(\n        CUTADAPT.out.out12,            // input_file\n        fastqc2_contaminants,          // contaminants\n        fastqc2_limits,                // limits\n        params.fastqc2_format_string,  // format_string\n        params.fastqc2_outdir          // outdir\n    )\n\n    HISAT2(\n        CUTADAPT.out.out12,        // library_input_1\n        params.hisat2_index_path,  // index_path\n        params.hisat2_read11       // read11\n    )\n\n    FEATURECOUNTS(\n        HISAT2.out.output_alignments  // alignment\n    )\n\n    PICARD_MARK_DUPLICATES(\n        HISAT2.out.output_alignments  // input_file\n    )\n\n    SAMTOOLS_IDXSTATS(\n        HISAT2.out.output_alignments,        // input_bam\n        params.samtools_idxstats_addthreads  // addthreads\n    )\n\n    RSEQC_GENE_BODY_COVERAGE(\n        HISAT2.out.output_alignments,             // batch_mode_input\n        in_input_reference_gene_bed,              // refgene\n        params.rseqc_gene_body_coverage_safename  // safename\n    )\n\n    RSEQC_INFER_EXPERIMENT(\n        HISAT2.out.output_alignments,  // input_bam\n        in_input_reference_gene_bed    // refgene\n    )\n\n    RSEQC_READ_DISTRIBUTION(\n        HISAT2.out.output_alignments,  // input_bam\n        in_input_reference_gene_bed    // refgene\n    )\n\n    COLLECTION_COLUMN_JOIN(\n        FEATURECOUNTS.out.output_short.toList(),  // input_tabular\n        collection_column_join_script             // collection_column_join_script\n    )\n\n    MULTIQC(\n        multiqc_config,                               // multiqc_config\n        FASTQC2.out.out_text_file,                    // unknown1\n        CUTADAPT.out.out_report,                      // unknown2\n        RSEQC_INFER_EXPERIMENT.out.outputTextfile,    // unknown3\n        PICARD_MARK_DUPLICATES.out.out_metrics_file,  // unknown4\n        SAMTOOLS_IDXSTATS.out.outputTabular,          // unknown5\n        RSEQC_GENE_BODY_COVERAGE.out.outputtxt,       // unknown6\n        RSEQC_READ_DISTRIBUTION.out.outputTextfile,   // unknown7\n        FEATURECOUNTS.out.output_summary,             // unknown8\n        HISAT2.out.out_summary_file                   // unknown9\n    )\n\n}\n</code></pre></p> <p>Galaxy Workflow</p> <p></p> <p></p> <p>One of the tasks in this workflow is not needed for our analysis, as relates to the way Galaxy handles collections of files. </p> <p>For this workshop, we will ignore the <code>COLLECTION_COLUMN_JOIN</code> task.</p> <p>Removing the <code>COLLECTION_COLUMN_JOIN</code> process call</p> <p>Cut or comment out the <code>COLLECTION_COLUMN_JOIN</code> process call in <code>main.nf</code>. </p> Show Change <pre><code>workflow {\n    ...\n\n    // commented out!\n    // COLLECTION_COLUMN_JOIN(\n    //     FEATURECOUNTS.out.output_short.toList(),  // input_tabular\n    //     collection_column_join_script             // collection_column_join_script\n    // )\n\n    ...\n}\n</code></pre> <p>Now we have removed the collection join, we will need to pass all results produced for each sample to <code>MULTIQC</code>. </p> <p>Passing all results to <code>MULTIQC</code></p> <p>For each input to the <code>MULTIQC</code> process call in <code>main.nf</code> (except <code>multiqc_config</code>), add the <code>.toList()</code> operator.</p> <p>This will collect each result produced by previous steps (ie one for each of the 12 samples).</p> Show Change <pre><code>workflow {\n    ...\n\n    MULTIQC(\n           multiqc_config,                                        // multiqc_config\n           FASTQC2.out.out_text_file.toList(),                    // unknown1       &lt;-\n           CUTADAPT.out.out_report.toList(),                      // unknown2       &lt;-\n           RSEQC_INFER_EXPERIMENT.out.outputTextfile.toList(),    // unknown3       &lt;-\n           PICARD_MARK_DUPLICATES.out.out_metrics_file.toList(),  // unknown4       &lt;-\n           SAMTOOLS_IDXSTATS.out.outputTabular.toList(),          // unknown5       &lt;-\n           RSEQC_GENE_BODY_COVERAGE.out.outputtxt.toList(),       // unknown6       &lt;-\n           RSEQC_READ_DISTRIBUTION.out.outputTextfile.toList(),   // unknown7       &lt;-\n           FEATURECOUNTS.out.output_summary.toList(),             // unknown8       &lt;-\n           HISAT2.out.out_summary_file.toList()                   // unknown9       &lt;-\n    )\n    ```\n\n    ...\n}\n</code></pre> <p>Now that we have covered <code>main.nf</code>, let\u2019s set up inputs to run our translated Nextflow workflow.  To do this we will supply sample data using the global <code>params</code> variable in <code>nextflow.config</code>.</p> <p></p> <p>Inspect nextflow.config</p> <p>To test the translated workflow, we will first set up workflow inputs in <code>nextflow.config</code>. </p> <p>Inside the <code>rnaseq_reads_to_counts/</code> folder you will see that <code>nextflow.config</code> is already provided. </p> <p>Janis translate creates this file to provide clarity about the necessary workflow inputs, and to set some other config variables. </p> <p>Open <code>nextflow.config</code> and have a look at the contents. It should look similar to the following: </p> <pre><code>nextflow.enable.dsl = 2\nsingularity.enabled = true\nsingularity.cacheDir = \"$HOME/.singularity/cache\"\n\nparams {\n\n    // Placeholder for null values.\n    // Do not alter unless you know what you are doing.\n    NULL_VALUE = 'NULL'\n\n    // WORKFLOW OUTPUT DIRECTORY\n    outdir  = './outputs'\n\n    // INPUTS (MANDATORY)\n    collection_column_join_script      = NULL_VALUE  // (MANDATORY generic file)  \n    in_input_fastqs_collection         = []          // (MANDATORY array)         eg. [file1, ...]\n    in_input_reference_gene_bed        = NULL_VALUE  // (MANDATORY generic file)  \n    multiqc_config                     = NULL_VALUE  // (MANDATORY generic file)  \n    fastqc1_format_string              = NULL_VALUE  // (MANDATORY string)        \n    fastqc1_outdir                     = NULL_VALUE  // (MANDATORY string)        \n    fastqc2_format_string              = NULL_VALUE  // (MANDATORY string)        \n    fastqc2_outdir                     = NULL_VALUE  // (MANDATORY string)        \n    hisat2_index_path                  = NULL_VALUE  // (MANDATORY string)        \n    hisat2_read11                      = NULL_VALUE  // (MANDATORY string)        \n    rseqc_gene_body_coverage_safename  = NULL_VALUE  // (MANDATORY string)        \n    samtools_idxstats_addthreads       = NULL_VALUE  // (MANDATORY string)        \n\n    // INPUTS (OPTIONAL)\n    fastqc1_contaminants  = NULL_VALUE  // (optional tabular)   \n    fastqc1_limits        = NULL_VALUE  // (optional textfile)  \n    fastqc2_contaminants  = NULL_VALUE  // (optional tabular)   \n    fastqc2_limits        = NULL_VALUE  // (optional textfile)  \n\n}\n</code></pre> <p></p> <p>Setting up Workflow Inputs</p> <p>To run the workflow, we will supply values for the mandatory workflow inputs, and leave the optional inputs as-is. </p> <p>The auto-generated <code>nextflow.config</code> splits up workflow inputs using some headings.</p> <pre><code># Workflow inputs which are mandatory\n// INPUTS (MANDATORY)\n\n# Workflow inputs which are optional\n// INPUTS (OPTIONAL)\n</code></pre> <p>We will need to supply values for those under the <code>// INPUTS (MANDATORY)</code> heading. </p> <p>Here is an explanation of the role of these inputs:</p> <pre><code>collection_column_join_script      # path to script needed by COLLECTION_COLUMN_JOIN\nin_input_fastqs_collection         # .fastq format input reads (.gz ok)\nin_input_reference_gene_bed        # .bed format gene annotations\nmultiqc_config                     # path to script needed by MULTIQC\nfastqc1_format_string              # string to supply the input format -f to FASTQC1\nfastqc1_outdir                     # string to supply the outputs folder for FASTQC1\nfastqc2_format_string              # string to supply the input format -f to FASTQC2\nfastqc2_outdir                     # string to supply the outputs folder for FASTQC2\nhisat2_index_path                  # path to hisat2 index for HISAT2\nhisat2_read11                      # ?\nrseqc_gene_body_coverage_safename  # ?\nsamtools_idxstats_addthreads       # value for the -@ threads argument for SAMTOOLS_IDXSTATS\n</code></pre> <p>Sample data for the <code>.fastq</code> and <code>.bed</code> inputs have been provided in the <code>data/sample_data/galaxy/rnaseq_reads_to_counts</code> folder we obtained by downloading &amp; extracting the zenodo archive.</p> <p>The scripts will have been copied by <code>janis translate</code> and placed in the <code>rnaseq_reads_to_counts/templates</code> folder. </p> <p></p> <p>Replace the <code>// INPUTS (MANDATORY)</code> section of <code>nextflow.config</code> with the following text to set up our sample data as workflow inputs:</p> <pre><code>// INPUTS (MANDATORY)\ncollection_column_join_script      = NULL_VALUE\nin_input_fastqs_collection         = [\n    \"/home2/training/data/sample_data/galaxy/rnaseq_reads_to_counts/MCL1-DG-basalvirgin.fastq.gz\",\n    \"/home2/training/data/sample_data/galaxy/rnaseq_reads_to_counts/MCL1-DH-basalvirgin.fastq.gz\",\n    \"/home2/training/data/sample_data/galaxy/rnaseq_reads_to_counts/MCL1-DI-basalpregnant.fastq.gz\",\n    \"/home2/training/data/sample_data/galaxy/rnaseq_reads_to_counts/MCL1-DJ-basalpregnant.fq.gz\",\n    \"/home2/training/data/sample_data/galaxy/rnaseq_reads_to_counts/MCL1-DK-basallactate.fastq.gz\",\n    \"/home2/training/data/sample_data/galaxy/rnaseq_reads_to_counts/MCL1-DL-basallactate.fastq.gz\",\n    \"/home2/training/data/sample_data/galaxy/rnaseq_reads_to_counts/MCL1-LA-luminalvirgin.fastq.gz\",\n    \"/home2/training/data/sample_data/galaxy/rnaseq_reads_to_counts/MCL1-LB-luminalvirgin.fastq.gz\",\n    \"/home2/training/data/sample_data/galaxy/rnaseq_reads_to_counts/MCL1-LC-luminalpregnant.fastq.gz\",\n    \"/home2/training/data/sample_data/galaxy/rnaseq_reads_to_counts/MCL1-LD-luminalpregnant.fastq.gz\",\n    \"/home2/training/data/sample_data/galaxy/rnaseq_reads_to_counts/MCL1-LE-luminallactate.fastq.gz\",\n    \"/home2/training/data/sample_data/galaxy/rnaseq_reads_to_counts/MCL1-LF-luminallactate.fastq.gz\",\n]\nin_input_reference_gene_bed        = \"/home2/training/data/sample_data/galaxy/rnaseq_reads_to_counts/ucsc/mm10_RefSeq.bed\"\nmultiqc_config                     = \"templates/multiqc_config\"\nfastqc1_format_string              = \"fastq\"\nfastqc1_outdir                     = \"outdir\"\nfastqc2_format_string              = \"fastq\"\nfastqc2_outdir                     = \"outdir\"\nhisat2_index_path                  = \"/home2/training/data/sample_data/galaxy/rnaseq_reads_to_counts/hisat2_index/*.ht2\"\nhisat2_read11                      = NULL_VALUE  // (MANDATORY string)  \nrseqc_gene_body_coverage_safename  = NULL_VALUE  // (MANDATORY string)    \nsamtools_idxstats_addthreads       = \"2\"       \n</code></pre> <p></p> <p>Before we supply values, lets look at the inputs which were marked <code>?</code> in the explanation of inputs. Specifically, the <code>hisat2_read11</code> and <code>rseqc_gene_body_coverage_safename</code> params. </p> <p>These both seem a bit strange. Hisat2 will receive reads as output from CUTADAPT so why do we need to supply a value? Rseqc is similar - there is no safename argument for the software, so we are unsure what this does. </p> <p></p> <p>Investigating hisat2_reads11 parameter</p> <p>Open <code>modules/hisat2.nf</code> to look at its process definition. It should look similar to the following:  <pre><code>process HISAT2 {\n\n    container \"quay.io/grace_hall1/hisat2:2.2.1\" \n    publishDir \"${params.outdir}/hisat2\"\n\n    input:\n    path library_input_1\n    val index_path\n    val read11\n\n    output:\n    path \"summary.txt\", emit: out_summary_file\n    path \"unknown_collection_pattern\", emit: output_alignments\n\n    script:\n    \"\"\"\n    hisat2 \\\n    ${library_input_1} \\\n    -U ${read11} \\\n    -x ${index_path}\n    \"\"\"\n\n}\n</code></pre></p> <p>It\u2019s clear that <code>janis translate</code> has gotten a bit confused here.</p> <p>From looking at <code>main.nf</code>, we see that the output of CUTADAPT is being fed to the <code>library_input_1</code> process input of HISAT2.  The input reads are therefore arriving as <code>library_input_1</code> rather than <code>read11</code>. </p> <p>In the <code>script:</code> section of HISAT2 we see what is going on.</p> <p>The <code>read11</code> input is being fed to <code>-U</code>, but this should instead be <code>library_input_1</code>.  <code>read11</code> appears to have the same role as <code>library_input_1</code> and looks like a temporary variable the source Galaxy Tool Wrapper used. </p> <p>To fix this, we will remove the <code>read11</code> HISAT2 process input &amp; associated references. We will then make changes to the HISAT2 process script &amp; outputs.</p> <p></p> <p>Note: Why does this happen? Galaxy often uses temporary variables to configure / sanitise values. It\u2019s common for Galaxy tools to reassign an input to a temporary value, then pass that temp value to the actual software command.  Here the Galaxy hisat2 tool has created a temporary variable (read11) then passes that to hisat2 rather than the original input. </p> <p></p> <p>To begin, let\u2019s remove the process input itself, as well as the <code>nextflow.config</code> param, and the value supplied in the <code>HISAT2</code> process call. </p> <p>Removing process input</p> <p>Remove the <code>val read11</code> input in the <code>HISAT2</code> process. </p> Show Change <p>modules/hisat2.nf: <pre><code>process HISAT2 {\n    ...\n\n    input:\n    path library_input_1\n    val index_path              \n                                    &lt;- val read11 removed\n\n    ...\n}\n</code></pre></p> <p>Removing value in process call</p> <p>Cut or comment out the value for <code>read11</code> supplied in the <code>HISAT2</code> process call in <code>main.nf</code>. </p> Show Change <p>main.nf: <pre><code>workflow {\n    ...\n\n    HISAT2(\n        CUTADAPT.out.out12,        // library_input_1\n        params.hisat2_index_path,  // index_path\n        // params.hisat2_read11    // read11            &lt;- commented out / removed\n    )\n\n    ...\n}\n</code></pre></p> <p>Removing <code>nextflow.config</code> param</p> <p>Cut or comment out the <code>hisat2_read11</code> param in <code>nextflow.config</code>. </p> Show Change <p>nextflow.config: <pre><code>params {\n    ...\n\n    hisat2_index_path                  = \"/home2/training/data/sample_data/galaxy/rnaseq_reads_to_counts/hisat2_index/*.ht2\"\n    // hisat2_read11                      = NULL_VALUE  // (MANDATORY string)     &lt;-\n    rseqc_gene_body_coverage_safename  = NULL_VALUE  // (MANDATORY string)    \n    samtools_idxstats_addthreads       = \"2\"\n\n    ...\n}\n</code></pre></p> <p></p> <p>Next we will swap <code>read11</code> with <code>library_input_1</code> in the script section &amp; add some extra arguments.</p> <p>Addressing HISAT2 script args</p> <p>Swap <code>read11</code> with <code>library_input_1</code> in the HISAT2 script section.  Remove the original line referencing <code>library_input_1</code>.  Supply <code>--summary-file summary.txt</code> to hisat2 to specify an output summary textfile name. Supply <code>-S out.sam</code> to hisat2 to specify the name of the produced SAM file. </p> Show Change <p>modules/hisat2.nf: <pre><code>process HISAT2 {\n    ...\n\n    script:\n    \"\"\"\n    hisat2 \\\n    -U ${library_input_1} \\             &lt;-\n    -x ${index_path} \\\n    --summary-file summary.txt \\        &lt;-\n    -S out.sam                          &lt;-\n    \"\"\"\n\n}\n</code></pre></p> <p></p> <p>While we\u2019re here, we will also add some samtools commands as downstream tasks required a sorted &amp; indexed BAM, not a SAM file which is the default output of <code>hisat2</code>. </p> <p>Adding Samtools commands</p> <p>Add samtools commands at the bottom of the script section to convert the output SAM to BAM, then sort and index the file.  You will need to add <code>samtools sort</code>, <code>samtools view</code>, and <code>samtools index</code> commands. </p> Show Change <p>modules/hisat2.nf: <pre><code>process HISAT2 {\n    ...\n\n    script:\n    \"\"\"\n    hisat2 \\\n    -U ${library_input_1} \\\n    -x ${index_path} \\\n    --summary-file summary.txt \\\n    -S out.sam\n\n    samtools view out.sam -o out.bam                &lt;-\n    samtools sort out.bam -o sorted.bam             &lt;-\n    samtools index sorted.bam -o sorted.bam.bai     &lt;-\n    mv sorted.bam alignment.bam                     &lt;-\n    mv sorted.bam.bai alignment.bam.bai             &lt;-\n    \"\"\"\n\n}\n</code></pre></p> <p></p> <p>As a final change, we will modify the collection pattern for the <code>output_alignments</code> output in HISAT2. </p> <p>In the example above we have named the output <code>alignment.bam</code>, so will update the collection pattern accordingly. If you have chosen a different name, make sure the correct file is being collected by <code>output_alignments</code>. </p> <p>Modifying output collection</p> <p>Change the collection pattern for <code>output_alignments</code> to collect your sorted &amp; indexed BAM file.</p> Show Change <p>modules/hisat2.nf: <pre><code>process HISAT2 {\n    ...\n\n    output:\n    path \"summary.txt\", emit: out_summary_file\n    path \"alignment.bam\", emit: output_alignments       &lt;-\n\n    ...\n}\n</code></pre></p> <p></p> <p>Investigating rseqc_gene_body_coverage_safename parameter</p> <p>Now that we have fixed up HISAT2 inputs and script, let\u2019s do the same for  the <code>rseqc_gene_body_coverage_safename</code> param. </p> <p>Open <code>rseqc_gene_body_coverage.nf</code> to look at the process definition.  It should look similar to the following: <pre><code>process RSEQC_GENE_BODY_COVERAGE {\n\n    container \"quay.io/biocontainers/rseqc:2.6.4--py27hf8a1672_2\"\n    publishDir \"${params.outdir}/rseqc_gene_body_coverage\"\n\n    input:\n    path batch_mode_input\n    path refgene\n    val safename\n\n    output:\n    path \"output.geneBodyCoverage.curves.pdf\", emit: outputcurvespdf\n    path \"output.geneBodyCoverage.txt\", emit: outputtxt\n\n    script:\n    \"\"\"\n    geneBody_coverage.py \\\n    ${batch_mode_input} \\\n    -r ${refgene} \\\n    -i ${safename} \n    \"\"\"\n\n}\n</code></pre></p> <p>We see an identical situation as encountered for HISAT2.  The <code>safename</code> process input is actually just a Galaxy temporary value, and takes the role of <code>batch_mode_input</code>. </p> <p></p> <p>Let\u2019s fix up <code>rseqc_gene_body_coverage_safename</code> process input in RSEQC_GENE_BODY_COVERAGE. We will take the same approach as we did for the <code>read11</code> process input in HISAT2. </p> <p>Addressing <code>rseqc_gene_body_coverage_safename</code></p> <p>Remove the <code>rseqc_gene_body_coverage_safename</code> param in <code>nextflow.config</code>.  Remove the value being passed to <code>safename</code> in <code>main.nf</code>.  Remove the <code>safename</code> process input from <code>RSEQC_GENE_BODY_COVERAGE</code>.  Swap <code>safename</code> for <code>batch_mode_input</code> in the script, and remove the original reference to <code>batch_mode_input</code>. Additionally, supply <code>-o output</code> after the <code>-i</code> argument in the script section to set an output filename.</p> Show Changes <p>modules/rseqc_gene_body_coverage.nf: <pre><code>process RSEQC_GENE_BODY_COVERAGE {\n\n    container \"quay.io/biocontainers/rseqc:2.6.4--py27hf8a1672_2\"\n    publishDir \"${params.outdir}/rseqc_gene_body_coverage\"\n\n    input:\n    path batch_mode_input\n    path refgene                                                        &lt;-\n\n    output:\n    path \"output.geneBodyCoverage.curves.pdf\", emit: outputcurvespdf\n    path \"output.geneBodyCoverage.txt\", emit: outputtxt\n\n    script:\n    \"\"\"\n    geneBody_coverage.py \\\n    -r ${refgene} \\\n    -i ${batch_mode_input} \\                                            &lt;-\n    -o output                                                           &lt;-\n    \"\"\"\n\n}\n</code></pre></p> <p>main.nf: <pre><code>workflow {\n    ...\n\n    RSEQC_GENE_BODY_COVERAGE(\n        HISAT2.out.output_alignments,             // batch_mode_input\n        in_input_reference_gene_bed,              // refgene\n        // params.rseqc_gene_body_coverage_safename  // safename        &lt;-\n    )\n\n    ...\n}\n</code></pre></p> <p>nextflow.config: <pre><code>params {\n    ...\n\n    hisat2_index_path                  = \"/home2/training/data/sample_data/galaxy/rnaseq_reads_to_counts/hisat2_index/*.ht2\"\n    // hisat2_read11                      = NULL_VALUE  // (MANDATORY string)     \n    // rseqc_gene_body_coverage_safename  = NULL_VALUE  // (MANDATORY string)     &lt;-\n    samtools_idxstats_addthreads       = \"2\"\n\n    ...\n}\n</code></pre></p> <p></p> <p>Run the Workflow</p> <p>Now that we have set up our sample data and made a few changes to the workflow, lets run it to see where we stand. </p> <p>Ensure you are in the <code>rnaseq_reads_to_counts/</code> working directory, where <code>nextflow.config</code> and <code>main.nf</code> reside. </p> <p>If not, use the following to change directory.  <pre><code>cd rnaseq_reads_to_counts\n</code></pre></p> <p>To run the workflow using our sample data, we can now write the following command:  <pre><code>nextflow run main.nf\n</code></pre></p> <p>While the workflow runs, you will encounter one of the following errors:</p> <pre><code>Caused by:\n  Process `FASTQC1 (9)` terminated with an error exit status (2)\n\nCommand executed:\n  fastqc               --outdir outdir     -f fastq     MCL1-LC-luminalpregnant.fastq.gz\n\nCommand error:\n  Specified output directory 'outdir' does not exist\n</code></pre> <pre><code>ERROR ~ Error executing process &gt; 'CUTADAPT (3)'\n\nCaused by:\n  Process `CUTADAPT (3)` terminated with an error exit status (255)\n\nCommand executed:\n\n  cutadapt     MCL1-DI-basalpregnant.fastq.gz\n</code></pre> <p>It could be either of the above, as the dataflow paradigm adopted by nextflow doesn\u2019t guarantee the order which processes are executed. </p> <p>Errors are somewhat expected when translating Galaxy workflows. Janis translate doesn\u2019t produce perfect translations - just the best it can do. </p> <p>This is the first of multiple errors we will encounter and fix while making this workflow runnable. </p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#manual-adjustments_5","title":"Manual Adjustments","text":"<p>In the remainer of this workshop we will fix up 7 errors we encounter along the way. </p> <p>During the process we will discuss some differences between Galaxy and Nextflow, and will get some practise with Nextflow debugging.</p> <p>We have split each error into parts: the Error message, Diagnosing the error, and the solution. </p> <p>If your error message is different to the one being discussed, do not worry. You can still follow the order listed below to create the runnable workflow. </p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#error-1-fastqc-outdir","title":"Error 1: FASTQC outdir","text":"<p>The first issue we need to address is caused by the FASTQC process translation. </p> <p>Error message <pre><code>Caused by:\n  Process `FASTQC1 (9)` terminated with an error exit status (2)\n\nCommand executed:\n  fastqc               --outdir outdir     -f fastq     MCL1-LC-luminalpregnant.fastq.gz\n\nCommand error:\n  Specified output directory 'outdir' does not exist\n</code></pre></p> <p></p> <p>Diagnosing the error</p> <p>This message tells us that FastQC was trying to place files in <code>outdir/</code> folder of the process working directory, but no such folder existed. </p> <p>Nextflow task errors can be broken down accordingly: <pre><code>Error executing process &gt; 'FASTQC1 (9)'     # Main error heading\nCaused by:                                  # Task which experienced the error\nCommand executed:                           # Final shell command which was executed\nCommand exit status:                        # Exit code for the executed command\nCommand output:                             # Stdout for the executed command\nCommand error:                              # Stderr for the executed command\nWork dir:                                   # The process working directory\n</code></pre></p> <p>By re-reading the error message provided by Nextflow, we see that FASTQC1 experienced an error.  <pre><code>Process `FASTQC1 (9)` terminated with an error exit status (2)\n</code></pre></p> <p>We can also see the exact shell command which was executed (yours may have a different fastq):  <pre><code>fastqc --outdir outdir -f fastq MCL1-LC-luminalpregnant.fastq.gz\n</code></pre></p> <p>Finally we see that the FastQC software threw the error, rather than Nextflow: <pre><code>Command error:\nSpecified output directory 'outdir' does not exist\n</code></pre></p> <p>From the above, we can understand that the folder we specify using <code>--outdir</code> must exist before FastQC runs. </p> <p></p> <p>Solution</p> <p>Let\u2019s update the FASTQC process definition in <code>modules/fastqc.nf</code> so this directory is created before fastqc runs. Since we pass the name of this directory as the <code>outdir</code> process input, we will use a reference.</p> <p>Creating FASTQC output directory</p> <p>Add <code>mkdir ${outdir}</code> to the script section of the FASTQC process.  Make sure it appears before the main <code>fastqc</code> command.  As it is a separate statement, make sure you don\u2019t add <code>\\</code> after this statement.</p> Show Change <p>modules/fastqc.nf: <pre><code>process FASTQC {\n    ...\n\n    script:\n    def contaminants = contaminants.simpleName != params.NULL_VALUE ? \"--contaminants ${contaminants}\" : \"\"\n    def limits = limits.simpleName != params.NULL_VALUE ? \"--limits ${limits}\" : \"\"\n    \"\"\"\n    mkdir ${outdir}                 &lt;-\n    fastqc \\\n    ${contaminants} \\\n    ${limits} \\\n    --outdir ${outdir} \\\n    -f ${format_string} \\\n    ${input_file} \n    \"\"\"\n\n}\n</code></pre></p> <p></p> <p>While we are here, let\u2019s also adjust the output collection patterns. </p> <p>As we are supplying <code>--outdir ${outdir}</code> to the fastqc command, output files will be in a folder determined by the <code>val outdir</code> process input.  Fastqc also adds <code>_fastqc.ext</code> to each output file, where <code>ext</code> is the file extension.</p> <p>Modifying output collection patterns</p> <p>Adjust the output collection pattern of the FASTQC <code>out_html_file</code> and <code>out_text_file</code> outputs.  Collect each <code>.html</code> and <code>.zip</code> in the folder supplied via the <code>val outdir</code> process input. </p> Show Changes <p>modules/fastqc.nf: <pre><code>process FASTQC {\n    ...\n\n    output:\n    path \"${outdir}/*_fastqc.html\", emit: out_html_file     &lt;-\n    path \"${outdir}/*_fastqc.zip\", emit: out_text_file      &lt;-\n\n    ...\n}\n</code></pre></p> <p></p> <p>Note Nextflow supports wildcards wherever paths are used.  Here, <code>${outdir}/*_fastqc.html</code> will collect any file which ends in _fastqc.html with <code>out1</code>, as <code>*</code> matches any text. </p> <p></p> <p>After you have made the above changes, re-run the workflow using the same command as before: <pre><code>nextflow run main.nf\n</code></pre></p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#error-2-cutadapt-output-collection","title":"Error 2: CUTADAPT output collection","text":"<p>The next error you will experience is due to output collection in the CUTADAPT process. </p> <p>Error message</p> <pre><code>Error executing process &gt; 'CUTADAPT (11)'\n\nCaused by:\n  Missing output file(s) `out1*` expected by process `CUTADAPT (11)`\n\nCommand executed:\n  cutadapt     MCL1-LE-luminallactate.fastq.gz\n</code></pre> <p></p> <p>Diagnosing the Error</p> <p>The error message above informs us that Nextflow had a problem collecting the outputs of a CUTADAPT task. Cutadapt seems to have run without issue, but Nextflow expected a file starting with \u201cout1\u201d to be present in the process working directory to collect as an output. </p> <p>Looking at the <code>Command output:</code> section of the error message, you will also see what looks like the contents of a <code>.fastq</code> file.  As the <code>Command output:</code> component of Nextflow error messages shows us <code>stdout</code> during execution, we can gather that the cutadapt output is being sent to stdout, rather than being sent to a file. </p> <p>Open <code>modules/cutadapt.nf</code> to look at the process definition.  You should see something similar to the following: <pre><code>process CUTADAPT {\n\n    container \"quay.io/biocontainers/cutadapt:1.16--py35_2\"\n    publishDir \"${params.outdir}/cutadapt\"\n\n    input:\n    path library_input_1\n\n    output:\n    path \"out1*\", emit: out12\n    path \"report.txt\", emit: out_report\n\n    script:\n    \"\"\"\n    cutadapt \\\n    ${library_input_1} \n    \"\"\"\n\n}\n</code></pre></p> <p>We can see that <code>cutadapt</code> is being called using <code>library_input_1</code> as input reads. After <code>cutadapt</code> has run, the <code>out12</code> output is trying to collect a file starting with \u201cout1\u201d, and the <code>out_report</code> output is trying to collect \u201creport.txt\u201d. </p> <p>If you are familiar with cutadapt, you will also see that we are not supplying any adapter sequence to remove from reads. </p> <p></p> <p>Solution</p> <p>Let\u2019s update the <code>input:</code> section to add an adapters input, the <code>script:</code> section to format the command correctly, and the <code>output:</code> section to collect our outputs. </p> <p>To begin, we will address supplying an adapter sequence to the CUTADAPT process. </p> <p>Adding CUTADAPT process input</p> <p>Add a new <code>val</code> process input called <code>adapter</code> to the CUTADAPT process.</p> Show Change <p>modules/cutadapt.nf: <pre><code>CUTADAPT {\n    ...\n\n    input:\n    path library_input_1\n    val adapter                     &lt;-\n\n    ...\n}\n</code></pre></p> <p>Adding new param in nextflow config</p> <p>Add a new <code>cutadapt_adapter</code> param in <code>nextflow.config</code> with the value \u201cAGATCGGAAGAGCACACGTCTGAACTCCAGTCAC\u201d.</p> Show Change <p>nextflow.config: <pre><code>params {\n    ...\n\n    samtools_idxstats_addthreads       = \"2\"   \n    cutadapt_adapter                   = \"AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC\"     &lt;-\n\n    ...\n}\n</code></pre></p> <p>Suppling new param to CUTADAPT call</p> <p>Supply the new <code>params.cutadapt_adapter</code> as a value to the CUTADAPT process call in the main workflow. Make sure you add a comma after <code>ch_in_input_fastqs_collection.flatten()</code>!</p> Show Change <p>main.nf: <pre><code>workflow {\n    ...\n\n    CUTADAPT(\n        ch_in_input_fastqs_collection.flatten(),  // library_input_1    &lt;-\n        params.cutadapt_adapter                                         &lt;-\n    )\n\n    ...\n}\n</code></pre></p> <p></p> <p>Next, we will formulate the script section of CUTADAPT so that the correct command gets executed.  The correct format to run cutadapt is as follows: <pre><code>cutadapt -a AACCGGTT -o out.fastq in.fastq &gt; report.txt\n</code></pre> When used in this manner, the output fastq is sent to <code>-o</code>, and the summary report is sent to <code>stdout</code> (collected as \u201creport.txt\u201d above).</p> <p>Modifying CUTADAPT script</p> <p>Add the <code>-a</code> argument to the process script section. Supply a reference to the new <code>adapters</code> process input as its value. Add the <code>-o</code> argument to the process script section. Supply a filename as its value based on the basename of our input reads (<code>library_input_1</code>) using <code>.simpleName</code>. Send <code>stdout</code> to a file using a <code>&gt;</code> redirect. Supply a filename based on the basename of our input reads as above. </p> Show Changes <p>modules/cutadapt.nf: <pre><code>process CUTADAPT {\n    ...\n\n    script:\n    \"\"\"\n    cutadapt \\\n    -a ${adapter} \\                                             &lt;-\n    -o ${library_input_1.simpleName}.cutadapt.fastq.gz \\        &lt;-\n    ${library_input_1} \\    \n    &gt; ${library_input_1.simpleName}.cutadapt.txt                &lt;-\n    \"\"\"\n\n}\n</code></pre></p> <p></p> <p>Now that we have fixed the script section of CUTADAPT, we will change the collection pattern for our outputs. </p> <p>Modifying CUTADAPT output collection</p> <p>For the <code>out12</code> output, collect the same filename you supplied in the script section with <code>o-</code>. For the <code>out_report</code> output, collect the same filename you supplied in the script section as stdout redirect. </p> Show Changes <p>modules/cutadapt.nf: <pre><code>process CUTADAPT {\n    ...\n\n    output:\n    path \"${library_input_1.simpleName}.cutadapt.fastq.gz\", emit: out12     &lt;-\n    path \"${library_input_1.simpleName}.cutadapt.txt\", emit: out_report     &lt;-\n\n    ...\n}\n</code></pre></p> <p></p> <p>After making the changes above, re-run the Nextflow workflow: <pre><code>nextflow run main.nf\n</code></pre></p> <p></p> <p>NOTE  Why were these <code>cutadapt</code> arguments missed?  The default setting for <code>janis translate</code> is to translate tools according to their usage in the workflow.  This is because Galaxy Tool Wrappers are complex and often have many inputs - most of which aren\u2019t relevant to the workflow being translated.  To get the extended tool translation we can use <code>--mode full</code> when running janis translate: <pre><code>janis translate --from galaxy --to nextflow source/rna_seq_reads_to_counts.ga --mode full\n</code></pre></p> <p>For the <code>CUTADAPT</code> process, it will now look similar to the following:  <pre><code>nextflow.enable.dsl = 2\n\nprocess CUTADAPT {\n    \n    container \"quay.io/biocontainers/cutadapt:1.16--py35_2\"\n    publishDir \"${params.outdir}/cutadapt\"\n\n    input:\n    path library_input_1\n    path info_file\n    path output_file\n    path paired_output\n    path rest_file\n    path too_long_output\n    path too_long_paired_output\n    path too_short_output\n    path too_short_paired_output\n    path untrimmed_output\n    path untrimmed_paired_output\n    path wildcard_file\n    val discard\n    val discard_untrimmed\n    val mask_adapter\n    val match_read_wildcards\n    val no_indels\n    val no_trim\n    val trim_n\n    val error_rate\n    val length\n    val length_tag\n    val max_n\n    val maximum_length\n    val minimum_length\n    val nextseq_trim\n    val option_j\n    val option_u\n    val option_u\n    val overlap\n    val pair_filter\n    val prefix\n    val quality_cutoff\n    val read1\n    val read2\n    val suffix\n    val times\n\n    output:\n    path \"out1*\", emit: out1\n    path \"out2*\", emit: out2\n    path \"info_file.txt\", emit: out_info_file\n    path \"report.txt\", emit: out_report\n    path \"rest_output.fastqsanger\", emit: out_rest_output\n    path \"too_long_output.fastqsanger\", emit: out_too_long_output\n    path \"too_long_paired_output.fastqsanger\", emit: out_too_long_paired_output\n    path \"too_short_output.fastqsanger\", emit: out_too_short_output\n    path \"too_short_paired_output.fastqsanger\", emit: out_too_short_paired_output\n    path \"untrimmed_output.fastqsanger\", emit: out_untrimmed_output\n    path \"untrimmed_paired_output.fastqsanger\", emit: out_untrimmed_paired_output\n    path \"wild_output.txt\", emit: out_wild_output\n\n    script:\n    def info_file = info_file.simpleName != params.NULL_VALUE ? \"--info-file=${info_file}\" : \"\"\n    def output_file = output_file.simpleName != params.NULL_VALUE ? \"--output=${output_file}\" : \"\"\n    def paired_output = paired_output.simpleName != params.NULL_VALUE ? \"--paired-output=${paired_output}\" : \"\"\n    def rest_file = rest_file.simpleName != params.NULL_VALUE ? \"--rest-file=${rest_file}\" : \"\"\n    def too_long_output = too_long_output.simpleName != params.NULL_VALUE ? \"--too-long-output=${too_long_output}\" : \"\"\n    def too_long_paired_output = too_long_paired_output.simpleName != params.NULL_VALUE ? \"--too-long-paired-output=${too_long_paired_output}\" : \"\"\n    def too_short_output = too_short_output.simpleName != params.NULL_VALUE ? \"--too-short-output=${too_short_output}\" : \"\"\n    def too_short_paired_output = too_short_paired_output.simpleName != params.NULL_VALUE ? \"--too-short-paired-output=${too_short_paired_output}\" : \"\"\n    def untrimmed_output = untrimmed_output.simpleName != params.NULL_VALUE ? \"--untrimmed-output=${untrimmed_output}\" : \"\"\n    def untrimmed_paired_output = untrimmed_paired_output.simpleName != params.NULL_VALUE ? \"--untrimmed-paired-output=${untrimmed_paired_output}\" : \"\"\n    def wildcard_file = wildcard_file.simpleName != params.NULL_VALUE ? \"--wildcard-file=${wildcard_file}\" : \"\"\n    def discard = discard ? \"--discard\" : \"\"\n    def discard_untrimmed = discard_untrimmed ? \"--discard-untrimmed\" : \"\"\n    def mask_adapter = mask_adapter ? \"--mask-adapter\" : \"\"\n    def match_read_wildcards = match_read_wildcards ? \"--match-read-wildcards\" : \"\"\n    def no_indels = no_indels ? \"--no-indels\" : \"\"\n    def no_trim = no_trim ? \"--no-trim\" : \"\"\n    def trim_n = trim_n ? \"--trim-n\" : \"\"\n    def error_rate = error_rate != params.NULL_VALUE ? error_rate : 0.1\n    def length = length != params.NULL_VALUE ? length : 0\n    def length_tag = length_tag != params.NULL_VALUE ? \"--length-tag ${length_tag}\" : \"\"\n    def max_n = max_n != params.NULL_VALUE ? \"--max-n ${max_n}\" : \"\"\n    def maximum_length = maximum_length != params.NULL_VALUE ? maximum_length : 0\n    def minimum_length = minimum_length != params.NULL_VALUE ? minimum_length : 0\n    def nextseq_trim = nextseq_trim != params.NULL_VALUE ? nextseq_trim : 0\n    def option_u = option_u != params.NULL_VALUE ? option_u : 0\n    def option_j = option_j != params.NULL_VALUE ? option_j : 1\n    def option_u = option_u != params.NULL_VALUE ? option_u : 0\n    def overlap = overlap != params.NULL_VALUE ? overlap : 3\n    def pair_filter = pair_filter != params.NULL_VALUE ? pair_filter : \"any\"\n    def prefix = prefix != params.NULL_VALUE ? \"--prefix ${prefix}\" : \"\"\n    def quality_cutoff = quality_cutoff != params.NULL_VALUE ? quality_cutoff : \"0\"\n    def read1 = read1 != params.NULL_VALUE ? read1 : \"\"\n    def read2 = read2 != params.NULL_VALUE ? read2 : \"\"\n    def suffix = suffix != params.NULL_VALUE ? \"--suffix ${suffix}\" : \"\"\n    def times = times != params.NULL_VALUE ? times : 1\n    \"\"\"\n    cutadapt \\\n    ${library_input_1} \\\n    ${info_file} \\\n    ${output_file} \\\n    ${paired_output} \\\n    ${rest_file} \\\n    ${too_long_output} \\\n    ${too_long_paired_output} \\\n    ${too_short_output} \\\n    ${too_short_paired_output} \\\n    ${untrimmed_output} \\\n    ${untrimmed_paired_output} \\\n    ${wildcard_file} \\\n    --error-rate ${error_rate} \\\n    --length ${length} \\\n    ${length_tag} \\\n    ${max_n} \\\n    --maximum-length ${maximum_length} \\\n    --minimum-length ${minimum_length} \\\n    --nextseq-trim ${nextseq_trim} \\\n    --overlap ${overlap} \\\n    --pair-filter ${pair_filter} \\\n    ${prefix} \\\n    --quality-cutoff ${quality_cutoff} \\\n    ${suffix} \\\n    --times ${times} \\\n    -U ${option_u} \\\n    -j ${option_j} \\\n    -u ${option_u} \\\n    ${discard} \\\n    ${discard_untrimmed} \\\n    ${mask_adapter} \\\n    ${match_read_wildcards} \\\n    ${no_indels} \\\n    ${no_trim} \\\n    ${trim_n} \\\n    ${read1} \\\n    ${read2} \\\n    \"\"\"\n\n}\n</code></pre></p> <p>In this case:  - The <code>--output</code> option is now present as <code>--output=${output_file}</code> when supplied - The <code>--adapter</code> option is not needed as we are using <code>--info-file=${info_file}</code> to supply adapter information</p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#error-3-hisat2-index","title":"Error 3: HISAT2 index","text":"<p>The third error is due to the index not being supplied correctly to the HISAT2 process.</p> <p>Error message</p> <pre><code>Error executing process &gt; 'HISAT2 (1)'\n\nCaused by:\n  Process `HISAT2 (1)` terminated with an error exit status (2)\n\nCommand executed:\n  hisat2     -U MCL1-LD-luminalpregnant.cutadapt.fastq.gz     -x /home2/training/data/sample_data/galaxy/rnaseq_reads_to_counts/hisat2_index/*.ht2     --summary-file summary.txt     -S out.sam\n\n  samtools view out.sam -o out.bam\n  samtools sort out.bam -o sorted.bam\n  samtools index sorted.bam -o sorted.bam.bai\n  mv sorted.bam alignment.bam \n  mv sorted.bam.bai alignment.bam.bai\n\nCommand error:\n  (ERR): \"/home2/training/data/sample_data/galaxy/rnaseq_reads_to_counts/hisat2_index/*.ht2\" does not exist\n  Exiting now ...\n\nWork dir:\n  janis-translate-examples/rnaseq_reads_to_counts/work/1b/542e03429accaf016afc55379ad951\n</code></pre> <p></p> <p>Diagnosing the Error</p> <p>The error message above tells us that hisat2 threw an error as it could not find the index to use during read alignment. </p> <p>For those similar with hisat2, you will know that we need to supply the basename of the index rather than the full path. </p> <p>Let\u2019s look at the process working directory to check how the index files present.  Open the process working directory provided as the <code>Work dir:</code> section of your error.  Alternatively you can execute the following command, substituting <code>&lt;work_dir&gt;</code> for the path nextflow provided: <pre><code>ls -lah &lt;work_dir&gt;\n</code></pre></p> <p>You will see the following files: <pre><code>.command.begin\n.command.err\n.command.log\n.command.out\n.command.run\n.command.sh\n.exitcode\nMCL1-LD-luminalpregnant.cutadapt.fastq.gz\n</code></pre></p> <p>From looking at the contents of the working directory, you will notice that the hisat2 index is missing. </p> <p>You may remember we provided a filepath to the index using the <code>hisat2_index_path</code> param in <code>nextflow.config</code>, and this param is provided as an input value for the HISAT2 task in <code>main.nf</code> process, so why doesn\u2019t it appear? </p> <p>This demonstrates an important aspect of how Nextflow treats different datatypes. </p> <p>For <code>val</code> process inputs, nextflow is expecting a simple value such as a string or integer.  It holds this as a variable which can be used within the process. </p> <p>For <code>path</code> process inputs, nextflow knows that the input is a file or directory, so stages it into the process working directory for use. </p> <p>Looking at our HISAT2 process definition, we can see that the <code>index_path</code> input is a <code>val</code> input.  We haven\u2019t told nextflow to treat it as a file, so the file isn\u2019t localised into the process working directory. </p> <p></p> <p>Solution</p> <p>To fix this issue, we will change the process input type for <code>index_path</code> to a <code>path</code> type. </p> <p>We will also add a <code>Channel</code> declaration to <code>main.nf</code> so that nextflow provides the index correctly to the <code>index_path</code> input. </p> <p>Finally, we will update the <code>script:</code> section to specify the index basename to hisat2, rather than the full path. </p> <p></p> <p>To start, let\u2019s update <code>main.nf</code> with our Channel declaration. </p> <p>Hisat2 indexes are split into multiple chunks, so we will using <code>.toList()</code> to ensure they are moved together in the workflow. </p> <p>Adding a Channel declaration</p> <p>Add a new Channel declaration at the top of <code>main.nf</code> under the <code>ch_in_input_fastqs_collection</code> channel.  This channel should be called <code>ch_hisat2_index</code> and should use <code>params.hisat2_index_path</code> to supply the files.  Additionally, append <code>.toList()</code> so that nextflow groups each chunk of the index together. </p> Show Change <p>main.nf: <pre><code>...\n\n// data which will be passed as channels\nch_in_input_fastqs_collection  = Channel.fromPath( params.in_input_fastqs_collection ).toList()\nch_hisat2_index                = Channel.fromPath( params.hisat2_index_path ).toList()              &lt;-\n\n...\n</code></pre></p> <p></p> <p>Now that we have created a channel for the hisat2 index, we will need to replace the current value supplied to the HISAT2 task. </p> <p>Replacing HISAT2 process call value</p> <p>Replace the value supplied for <code>index_path</code> in the HISAT2 task call of <code>main.nf</code>.  Its new value should be <code>ch_hisat2_index</code> as this is the channel we just created to feed the index.</p> Show Change <p>main.nf: <pre><code>workflow {\n    ...\n\n    HISAT2(\n        CUTADAPT.out.out12,        // library_input_1\n        ch_hisat2_index,           // index_path            &lt;-\n    )\n\n    ...\n}\n</code></pre></p> <p></p> <p>Finally we will update the <code>index_path</code> input of HISAT2 to a <code>path</code> type, and update the <code>script:</code> section of HISAT2 so that we supply the basename of the index to HISAT2.  </p> <p>The hisat2 index consists of multiple files in a list.  As each chunk starts with the same basename we will use the first chunk basename with the <code>-x</code> argument. </p> <p>Modifying HISAT2 inputs and script</p> <p>Update the type of the <code>index_path</code> HISAT2 process input from <code>val</code> to <code>path</code>.</p> <p>Update the script section of HISAT2 to correctly supply the <code>-x</code> argument. The value should be the basename of the first item in the <code>index_path</code> input.</p> Show Changes <p>modules/hisat2.nf: <pre><code>process HISAT2 {\n\n    container \"quay.io/biocontainers/janis-translate-hisat2-2.2.1\"\n    publishDir \"${params.outdir}/hisat2\"\n\n    input:\n    path library_input_1\n    path index_path                                                         &lt;-\n\n    output:\n    path \"summary.txt\", emit: out_summary_file\n    path \"alignment.bam\", emit: output_alignments   \n\n    script:\n    \"\"\"\n    hisat2 \\\n    -U ${library_input_1} \\\n    -x ${index_path[0].simpleName} \\                                        &lt;-\n    --summary-file ${library_input_1.simpleName}.alignment_summary.txt \\\n    -S out.sam\n\n    samtools view out.sam -o out.bam\n    samtools sort out.bam -o sorted.bam\n    samtools index sorted.bam -o sorted.bam.bai\n    mv sorted.bam ${library_input_1.simpleName}.bam \n    mv sorted.bam.bai ${library_input_1.simpleName}.bam.bai\n    \"\"\"\n\n}\n</code></pre></p> <p></p> <p>After making these changes, re-run the workflow: <pre><code>nextflow run main.nf\n</code></pre></p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#error-4-featurecounts-command","title":"Error 4: FEATURECOUNTS command","text":"<p>The 4<sup>th</sup> error is due to incorrect formatting in the FEATURECOUNTS process script. </p> <p>Error message</p> <pre><code>Error executing process &gt; 'FEATURECOUNTS (1)'\n\nCaused by:\n  Process `FEATURECOUNTS (1)` terminated with an error exit status (255)\n\nCommand executed:\n  featureCounts     alignment.bam\n</code></pre> <p></p> <p>Diagnosing the Error</p> <p>By looking at the <code>Command error:</code> section of your nextflow error, you will see that the featureCounts helptext has been printed. </p> <p>This indicates that the error was triggered by featureCounts, and that the reason was our command wasn\u2019t formulated correctly. </p> <p>Nextflow will truncate the <code>Command output:</code> and <code>Command error:</code> sections of its error messages as these could be very long depending on the tool and the error encountered. </p> <p>To view the full <code>stderr</code> stream of an executed process, we can navigate to the process working directory and view the <code>.command.err</code> file. </p> <p></p> <p>Open <code>.command.err</code> for the FEATURECOUNTS process which caused the error using the path nextflow provides in the <code>Work dir:</code> section of its error message. </p> <p>At the top of <code>.command.err</code> you will see that featureCounts tells us the correct way to format a command: <pre><code>Usage: featureCounts [options] -a &lt;annotation_file&gt; -o &lt;output_file&gt; input_file1 [input_file2] ... \n</code></pre></p> <p>Below this, we see its extended options including descriptions of each. </p> <p>For our use of featureCounts we will use the inbuilt <code>mm10</code> bed file for genomic feature annotations, and will provide an output filename to collect. </p> <p>From reading the helptext, we can deduce that the correct way structure our command is as follows: <pre><code>featureCounts -a &lt;annotations&gt; -F \"SAF\" -o &lt;outfile&gt; &lt;infile&gt;\n</code></pre></p> <p>The <code>-F \"SAF\"</code> part of the command is to tell featureCounts that the annotations file is in SAF format. The inbuilt featureCounts annotation files are all in SAF format, so we will need to include this as we are using the inbuilt annotations. </p> <p></p> <p>Solution</p> <p>To fix this issue we will restructure the FEATURECOUNTS <code>script:</code> section, and will change the output collection patterns. </p> <p>First, let\u2019s modify the FEATURECOUNTS script section. </p> <p>Modifying FEATURECOUNTS script</p> <p>Add the <code>-a</code> argument to your command in the script section.  Its value should be <code>/usr/local/annotation/mm10_RefSeq_exon.txt</code> as this is where the required mm10 annotations file exists inside the container image we are using.  Add the <code>-F</code> argument to your command and supply its value as <code>\"SAF\"</code>  Add the <code>-o</code> argument to your command and supply a <code>.txt</code> filename as its value based on the basename of the <code>alignment</code> process input. </p> Show Changes <p>modules/featurecounts.nf: <pre><code>process FEATURECOUNTS {\n    ...\n\n    script:\n    \"\"\"\n    featureCounts \\\n    -a /usr/local/annotation/mm10_RefSeq_exon.txt \\         &lt;-\n    -F \"SAF\" \\                                              &lt;-\n    -o ${alignment.simpleName}.txt \\                        &lt;-\n    ${alignment} \n    \"\"\"\n\n}\n</code></pre></p> <p></p> <p>Now that the script has the correct structure, let\u2019s modify the output collection patterns to capture the files we need. </p> <p>Modifying FEATURECOUNTS output collection</p> <p>Modify the <code>output_short</code> and <code>output_summary</code> outputs so they capture the target files. The <code>output_short</code> output should capture whatever you supplied to the <code>-o</code> argument. The <code>output_summary</code> output should capture whatever you supplied to the <code>-o</code> argument, with <code>.summary</code> appended on the end.</p> Show Changes <p>modules/featurecounts.nf: <pre><code>process FEATURECOUNTS {\n    ...\n\n    output:\n    path \"${alignment.simpleName}.txt\", emit: output_short              &lt;-\n    path \"${alignment.simpleName}.txt.summary\", emit: output_summary    &lt;-\n\n    ...\n}\n</code></pre></p> <p></p> <p>After those changes have been made, re-run the workflow. </p> <p>This time we will add <code>-resume</code> so that previous tasks before FEATURECOUNTS aren\u2019t executed again.  <pre><code>nextflow run main.nf -resume\n</code></pre></p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#error-5-picard_mark_duplicates-command","title":"Error 5: PICARD_MARK_DUPLICATES command","text":"<p>The 5<sup>th</sup> error is due to incorrect formatting in the PICARD_MARK_DUPLICATES process script. </p> <p>Error message</p> <pre><code>Error executing process &gt; 'PICARD_MARK_DUPLICATES (2)'\n\nCaused by:\n  Process `PICARD_MARK_DUPLICATES (2)` terminated with an error exit status (1)\n\nCommand executed:\n  picard MarkDuplicates     INPUT=alignment.bam\n</code></pre> <p></p> <p>Diagnosing the Error</p> <p>This error is identical to the FEATURECOUNTS error. </p> <p>You will see that the helptext is printed in the <code>Command error:</code> section of your nextflow error, again indicating that the command was not correct. </p> <p>By viewing <code>.command.err</code> in the process working directory for the errored task, we see the following at the top of the file: <pre><code>ERROR: Option 'OUTPUT' is required.\n</code></pre></p> <p>Further down, we see the following: <pre><code>Usage example:\n\njava -jar picard.jar MarkDuplicates \\\nI=input.bam \\\nO=marked_duplicates.bam \\\nM=marked_dup_metrics.txt\n</code></pre></p> <p>This indicates that we need to add the <code>OUTPUT=</code> and <code>METRICS_FILE=</code> arguments to our command. We can also use the shorthand notation for our arguments if desired as seen in the usage example (<code>I=</code>, <code>O=</code>, <code>M=</code>).  For this tutorial we will stick to the longform notation. </p> <p></p> <p>Solution</p> <p>To fix this issue, we will supply the <code>OUTPUT=</code> and <code>METRICS_FILE=</code> arguments to our command, and will adjust the output collection patterns to collect these files.</p> <p>First, we will add these extra arguments to the PICARD_MARK_DUPLICATES script section.</p> <p>Adding arguments to PICARD_MARK_DUPLICATES script</p> <p>Add the <code>OUTPUT=</code> argument to the script section of PICARD_MARK_DUPLICATES.  Its value should be a filename derived using the basename of the <code>input_file</code> process input, and should have the <code>.bam</code> extension.</p> <p>Add the <code>METRICS_FILE=</code> argument to the script section of PICARD_MARK_DUPLICATES.  Its value should be a filename derived using the basename of the <code>input_file</code> process input, and should have the <code>.txt</code> extension.</p> Show Changes <p>modules/picard_mark_duplicates.nf: <pre><code>process PICARD_MARK_DUPLICATES {\n    ...\n\n    script:\n    \"\"\"\n    picard MarkDuplicates \\\n    INPUT=${input_file} \\\n    OUTPUT=${input_file.simpleName}.markdup.bam \\       &lt;-\n    METRICS_FILE=${input_file.simpleName}.metrics.txt   &lt;-\n    \"\"\"\n\n}\n</code></pre></p> <p></p> <p>Now that we have added the required arguments, let\u2019s modify the output collection patterns. </p> <p>Adding arguments to PICARD_MARK_DUPLICATES script</p> <p>Modify the <code>outFile2</code> output collection pattern to collect the file you specified using the <code>OUTPUT=</code> argument. </p> <p>Modify the <code>out_metrics_file</code> output collection pattern to collect the file you specified using the <code>METRICS_FILE=</code> argument. </p> Show Changes <p>modules/picard_mark_duplicates.nf: <pre><code>process PICARD_MARK_DUPLICATES {\n    ...\n\n    output: \n    path \"${input_file.simpleName}.markdup.bam\", emit: outFile2             &lt;-\n    path \"${input_file.simpleName}.metrics.txt\", emit: out_metrics_file     &lt;-\n\n}\n</code></pre></p> <p></p> <p>After making these changes, re-run the workflow. <pre><code>nextflow run main.nf -resume\n</code></pre></p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#error-6-multiqc-input-filename-collision","title":"Error 6: MULTIQC input filename collision","text":"<p>The 6<sup>th</sup> error is due to multiple input files possessing the same filename. </p> <p>Error message</p> <pre><code>Error executing process &gt; 'MULTIQC'\n\nCaused by:\n  Process `MULTIQC` input file name collision -- There are multiple input files for each of the following file names: alignment.txt.summary, alignment.metrics.txt, outputTextfile.txt, outputTabular.tabular, summary.txt, output.geneBodyCoverage.txt\n</code></pre> <p></p> <p>Diagnosing the error</p> <p>The cause of this error is related to how we create &amp; capture output files in previous tasks.  From the error message above, nextflow is telling us that multiple input files had the same filename. </p> <p>Nextflow doesn\u2019t allow this behaviour, which is probably a good thing.  Nextflow is forcing us ensure each <code>path</code> input provided to a process has a unique name.  This is ensuring we use good practises when writing our code, so that unexpected silent errors don\u2019t occur. </p> <p>If avoidable, we should never use hard-coded filenames for output files.  Instead, we should generate output filenames based on input filenames. Each output filename will be a variant of the input filename, enabling us to track each sample when running a batch workflow (like the one used in this tutorial).</p> <p></p> <p>Solution</p> <p>To fix this issue, we will check the outputs of previous tasks to ensure they are based on the input filename.  For any that are hard-coded, we will modify them to be generated based on an input to that process. </p> <p>Adding arguments to PICARD_MARK_DUPLICATES script</p> <p>Make a list of the processes which are using hard-coded output filenames.  Do this by looking at each process definition in the <code>modules/</code> folder. </p> <ul> <li>Ignore <code>collection_column_join.nf</code> as this process is unused. </li> <li>Ignore <code>multiqc.nf</code> as this process collates the results of other tasks, so a hard-coded filename is ok for this tutorial. </li> </ul> Show list of processes which have hard-coded output filenames <ul> <li>HISAT2</li> <li>RSEQC_GENE_BODY_COVERAGE</li> <li>RSEQC_INFER_EXPERIMENT</li> <li>RSEQC_READ_DISTRIBUTION</li> <li>SAMTOOLS_IDXSTATS</li> </ul> <p></p> <p>NOTE: For a production workflow we would create a new param eg. <code>batch_name</code> and pass this to MULTIQC via a new <code>val</code> input. We would then supply this input in the MULTIQC script to create a unique name for the multiqc report. In the essence of brevity, we are leaving this of the tutorial as it is already long. </p> <p></p> <p>For each of the processes in your list, we will modify the script section and output file collection to ensure unique output filenames. </p> <p>Modifying affected processes</p> <p>Modify the processes in your list so that output filenames are based on input filenames and are unique.  You can use <code>.simpleName</code> when referencing an input file to get the basename without its extension. </p> Show Changes <p>hisat2.nf: <pre><code>process HISAT2 {\n\n    container \"quay.io/biocontainers/janis-translate-hisat2-2.2.1\"\n    publishDir \"${params.outdir}/hisat2\"\n\n    input:\n    path library_input_1\n    path index_path\n\n    output:\n    path \"${library_input_1.simpleName}.alignment_summary.txt\", emit: out_summary_file  &lt;-\n    path \"${library_input_1.simpleName}.bam\", emit: output_alignments                   &lt;-\n\n    script:\n    \"\"\"\n    hisat2 \\\n    -U ${library_input_1} \\\n    -x ${index_path[0].simpleName} \\\n    --summary-file ${library_input_1.simpleName}.alignment_summary.txt \\               &lt;-\n    -S out.sam\n\n    samtools view out.sam -o out.bam\n    samtools sort out.bam -o sorted.bam\n    samtools index sorted.bam -o sorted.bam.bai\n    mv sorted.bam ${library_input_1.simpleName}.bam                                    &lt;-\n    mv sorted.bam.bai ${library_input_1.simpleName}.bam.bai                            &lt;-\n    \"\"\"\n\n}\n</code></pre></p> <p>rseqc_gene_body_coverage.nf: <pre><code>process RSEQC_GENE_BODY_COVERAGE {\n\n    container \"quay.io/biocontainers/rseqc:2.6.4--py27hf8a1672_2\"\n    publishDir \"${params.outdir}/rseqc_gene_body_coverage\"\n\n    input:\n    path batch_mode_input\n    path refgene\n\n    output:\n    path \"${batch_mode_input.simpleName}.geneBodyCoverage.curves.pdf\", emit: outputcurvespdf   &lt;-\n    path \"${batch_mode_input.simpleName}.geneBodyCoverage.txt\", emit: outputtxt                &lt;-\n\n    script:\n    \"\"\"\n    geneBody_coverage.py \\\n    -r ${refgene} \\\n    -i ${batch_mode_input} \\\n    -o ${batch_mode_input.simpleName}                                                          &lt;-\n    \"\"\"\n\n}\n</code></pre></p> <p>rseqc_infer_experiment.nf: <pre><code>process RSEQC_INFER_EXPERIMENT {\n\n    container \"quay.io/biocontainers/rseqc:2.6.4--py27hf8a1672_2\"\n    publishDir \"${params.outdir}/rseqc_infer_experiment\"\n\n    input:\n    path input_bam\n    path refgene\n\n    output:\n    path \"${input_bam.simpleName}.infer_experiment.txt\", emit: outputTextfile  &lt;-\n\n    script:\n    \"\"\"\n    infer_experiment.py \\\n    -i ${input_bam} \\\n    -r ${refgene} \\\n    &gt; ${input_bam.simpleName}.infer_experiment.txt                             &lt;-\n    \"\"\"\n\n}\n</code></pre></p> <p>rseqc_read_distribution.nf: <pre><code>process RSEQC_READ_DISTRIBUTION {\n\n    container \"quay.io/biocontainers/rseqc:2.6.4--py27hf8a1672_2\"\n    publishDir \"${params.outdir}/rseqc_read_distribution\"\n\n    input:\n    path input_bam\n    path refgene\n\n    output:\n    path \"${input_bam.simpleName}.read_distribution.txt\", emit: outputTextfile &lt;-\n\n    script:\n    \"\"\"\n    read_distribution.py \\\n    -i ${input_bam} \\\n    -r ${refgene} \\\n    &gt; ${input_bam.simpleName}.read_distribution.txt                            &lt;-\n    \"\"\"\n\n}\n</code></pre></p> <p>samtools_idxstats.nf: <pre><code>process SAMTOOLS_IDXSTATS {\n\n    container \"quay.io/biocontainers/samtools:1.9--h10a08f8_12\"\n    publishDir \"${params.outdir}/samtools_idxstats\"\n\n    input:\n    path input_bam\n    val addthreads\n\n    output:\n    path \"${input_bam.simpleName}.idxstats.tabular\", emit: outputTabular   &lt;-\n\n    script:\n    \"\"\"\n    samtools idxstats \\\n    -@ ${addthreads} \\\n    ${input_bam} \\\n    &gt; ${input_bam.simpleName}.idxstats.tabular                             &lt;-\n    \"\"\"\n\n}\n</code></pre></p> <p></p> <p>After these changes have been made, re-run the workflow.</p> <p>As the filenames will be different this run, don\u2019t add <code>-resume</code>. <pre><code>nextflow run main.nf\n</code></pre></p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#final-error-multiqc-script","title":"Final Error: MULTIQC script","text":"<p>The last error we need to fix is the MULTIQC script. </p> <p>Error message</p> <pre><code>Error executing process &gt; 'MULTIQC'\n\nCaused by:\n  Process `MULTIQC` terminated with an error exit status (2)\n\nCommand executed:\n  multiqc multiqc_WDir     --config multiqc_config\n\nCommand error:\n  Usage: multiqc [OPTIONS] &lt;analysis directory&gt;\n\n  Error: Invalid value for \"analysis_dir\": Path \"multiqc_WDir\" does not exist.\n</code></pre> <p></p> <p>Diagnosing the error</p> <p>This error is due to our MULTIQC script command. </p> <p>Galaxy expects a folder called <code>multiqc_WDir</code> to be present, and for our input files to be staged in that directory.  Additionally, Galaxy supplies a config file using the <code>--config</code> argument when it runs multiqc to do special formatting of the output report. </p> <p>By looking at our MULTIQC process script, we can see these two arguments being supplied:  <pre><code>script:\n\"\"\"\nmultiqc multiqc_WDir \\\n--config ${multiqc_config} \\\n\"\"\"\n</code></pre></p> <p>For our nextflow workflow, our input files will be staged into the process working directory, rather than <code>multiqc_WDir</code>. </p> <p>We also don\u2019t need the <code>--config</code> argument as this is unnecessary. </p> <p></p> <p>Solution</p> <p>To fix this issue, we will modify the script section of MULTIQC. </p> <p>We will also update the output collection patterns to be multiqc defaults.</p> <p>Modifying MULTIQC script</p> <p>In the script section, change <code>multiqc_WDir</code> to <code>.</code></p> <p>In the script section, remove the <code>--config</code> argument and its value.</p> Show Changes <p>modules/multiqc.nf: <pre><code>process MULTIQC {\n    ...\n\n    script:\n    \"\"\"\n    multiqc .           &lt;- modified line\n                        &lt;- removed line\n    \"\"\"\n\n}\n</code></pre></p> <p>Modifying MULTIQC output collection patterns</p> <p>Modify the <code>out_html_report</code> output collection pattern to <code>\"multiqc_report.html\"</code> (default).</p> <p>Modify the <code>out_stats</code> output collection pattern to <code>\"multiqc_data/multiqc_*.txt\"</code>.  This will collect each text file from the default MultiQC output directory.</p> Show Changes <p>modules/multiqc.nf: <pre><code>process MULTIQC {\n    ...\n\n    output:\n    path \"multiqc_report.html\", emit: out_html_report       &lt;-\n    path \"multiqc_data/multiqc_*.txt\", emit: out_stats      &lt;-\n\n    ...\n}\n</code></pre></p> <p></p> <p>After making these changes, re-run the workflow using the <code>-resume</code> argument.  <pre><code>nextflow run main.nf -resume\n</code></pre></p> <p></p>"},{"location":"tutorials/janis_translate/janis_translate/#completed-workflow_1","title":"Completed Workflow","text":"<p>Your workflow should now run to completion.  You can now use this workflow to transform raw reads into count data. </p> <p>If you have any issues, the final adjusted workflow can be seen in the <code>final/</code> folder inside <code>janis-translate-examples/</code>.  </p> <p>To view the outputs, check the <code>outputs/</code> folder. It will contain the results of each process. </p> <p>This folder was specified to each process as a <code>publishDir</code> directive using the <code>outdir</code> param set in <code>nextflow.config</code>. </p> <p>The final result is located at <code>outputs/multiqc/multiqc_report.html</code>.  Reveal this file on your PC and open it with an internet browser. </p> <p>If all went well, you should see a MultiQC report with metrics for each sample we processed. </p> <p></p> <p></p> <p></p> <p>\u2026</p>"},{"location":"tutorials/janis_translate/janis_translate/#conclusion_5","title":"Conclusion","text":"<p>Thank you for your time! </p> <p>We hope <code>janis translate</code> can assist you in your work. </p> <p>If you have any bugs or issues you need help with, please raise an issue in the janis-core github repository. </p> <p>We look at each issue raised and aim to resolve these if possible. </p> <p></p> <p></p> <p></p>"},{"location":"tutorials/longread_sv_calling/formatting_template/","title":"Formats to use","text":""},{"location":"tutorials/longread_sv_calling/formatting_template/#text-formatting","title":"Text formatting","text":"<p>Bold Italics Bold Italics</p>"},{"location":"tutorials/longread_sv_calling/formatting_template/#headings-this-is-2nd-level","title":"Headings (This is 2<sup>nd</sup> level)","text":""},{"location":"tutorials/longread_sv_calling/formatting_template/#the-3rd-level","title":"The 3<sup>rd</sup> level","text":""},{"location":"tutorials/longread_sv_calling/formatting_template/#the-4th-level","title":"The 4<sup>th</sup> level","text":""},{"location":"tutorials/longread_sv_calling/formatting_template/#the-5th-level","title":"The 5<sup>th</sup> level","text":""},{"location":"tutorials/longread_sv_calling/formatting_template/#the-6th-level","title":"The 6<sup>th</sup> level","text":""},{"location":"tutorials/longread_sv_calling/formatting_template/#code-blocks-and-inline-code","title":"Code Blocks and inline code","text":"<p>They can be added like this. Many different languages are supported.</p>"},{"location":"tutorials/longread_sv_calling/formatting_template/#blocks","title":"Blocks","text":"<pre><code>$ ls\nexp01  file01  muscle.fq\n</code></pre> <p>or</p> <pre><code>import tensorflow as tf\n</code></pre>"},{"location":"tutorials/longread_sv_calling/formatting_template/#inline-code","title":"Inline code","text":"<p>Code can also be shown as an inline snippet like this <code>import tensorflow as tf</code>.</p>"},{"location":"tutorials/longread_sv_calling/formatting_template/#lists","title":"Lists","text":"<p>If you need to add a list:  </p>"},{"location":"tutorials/longread_sv_calling/formatting_template/#unordered-lists","title":"Unordered Lists","text":"<ul> <li>Some information</li> <li>Some more information</li> </ul>"},{"location":"tutorials/longread_sv_calling/formatting_template/#ordered-lists","title":"Ordered Lists","text":"<ol> <li> <p>Some point</p> </li> <li> <p>Another point</p> <ol> <li>Subpoint<ol> <li>Sub-subpoint</li> </ol> </li> </ol> </li> </ol>"},{"location":"tutorials/longread_sv_calling/formatting_template/#images","title":"Images","text":"<p>How to add an image:  </p> <p></p>"},{"location":"tutorials/longread_sv_calling/formatting_template/#tables","title":"Tables","text":"<p>Tables can have text that is left, centred or right aligned.</p> Left Center Right Lorem dolor <code>amet</code> ipsum sit"},{"location":"tutorials/longread_sv_calling/formatting_template/#questions-and-answers","title":"Questions and Answers","text":"<p>It is useful to number questions with the section number they appear in so participants can easily refer to the number when asking a question. Indentation is important to display correctly.</p> <p>Question 1.1</p> <p>What is the full path name of your home directory?</p> Hint <p>Remember your Current Working Directory starts in your home directory.</p> Answer <p>You can find out the full path name of the current working directory with the <code>pwd</code> command. Your home directory will look something like this:</p> <pre><code>$ pwd\n/home/trainingXX\n</code></pre> <p>Question 1.1</p> <p>What is the full path name of your home directory?</p> Answer <p>You can find out the full path name of the current working directory with the <code>pwd</code> command. Your home directory will look something like this:</p>"},{"location":"tutorials/longread_sv_calling/formatting_template/#line-breaks","title":"Line Breaks","text":"<p>To create a line break (\\&lt;br&gt;), end a line with two or more spaces, and then type return.</p>"},{"location":"tutorials/longread_sv_calling/formatting_template/#links","title":"Links","text":"<p>Please see the link.</p>"},{"location":"tutorials/longread_sv_calling/formatting_template/#blockquotes","title":"Blockquotes","text":"<p>This is a quote. Two spaces are needed at the end of this to make next line of quote appear on a different line.   This is the second line of quote.</p>"},{"location":"tutorials/longread_sv_calling/formatting_template/#text-including-commands-to-type","title":"Text including commands to type","text":"<p>Type <code>ls</code> and press <code>ENTER</code>.</p>"},{"location":"tutorials/longread_sv_calling/formatting_template/#when-referring-to-a-filename","title":"When referring to a filename","text":"<p>canu.contigs.fasta contains the assembled sequences.</p>"},{"location":"tutorials/longread_sv_calling/formatting_template/#showing-that-a-button-needs-clicking","title":"Showing that a button needs clicking","text":"<p>Click Start</p>"},{"location":"tutorials/longread_sv_calling/formatting_template/#highlighting-text","title":"Highlighting text","text":"<p>This text is highlighted.</p>"},{"location":"tutorials/longread_sv_calling/formatting_template/#equations","title":"Equations","text":"<p>Equations can be added as a block or inline.</p>"},{"location":"tutorials/longread_sv_calling/formatting_template/#block-equations","title":"Block equations","text":"\\[ \\frac{n!}{k!(n-k)!} = \\binom{n}{k} \\]"},{"location":"tutorials/longread_sv_calling/formatting_template/#inline-equations","title":"Inline equations","text":"<p>This equation will appear in line with this text: \\(p(x|y) = \\frac{p(y|x)p(x)}{p(y)}\\)</p>"},{"location":"tutorials/longread_sv_calling/formatting_template/#to-do","title":"To do","text":"<p>Pdf printing Survey Slides?  </p>"},{"location":"tutorials/longread_sv_calling/longread_sv_calling/","title":"Long-read Structural Variant Calling","text":""},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#structural-variant-calling-long-read-data","title":"Structural variant calling - long read data","text":"<p>Anticipated workshop duration when delivered to a group of participants is 4 hours.  </p> <p>For queries relating to this workshop, contact Melbourne Bioinformatics (bioinformatics-training@unimelb.edu.au).</p>"},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#overview","title":"Overview","text":""},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#topic","title":"Topic","text":"<ul> <li> Genomics</li> <li> Transcriptomics</li> <li> Proteomics</li> <li> Metabolomics</li> <li> Statistics and visualisation</li> <li> Structural Modelling</li> <li> Basic skills</li> </ul>"},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#skill-level","title":"Skill level","text":"<ul> <li> Beginner  </li> <li> Intermediate  </li> <li> Advanced  </li> </ul> <p>This workshop is designed for participants with no command line knowledge. A web-based platform called Galaxy will be used to run our analysis. We will be using 1 line awk programs to process text output, but these will be supplied and explained. </p>"},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#description","title":"Description","text":"<p>Long reads have turbo-charged structural variant detection - be part of the renaissance!</p> <p>Structural variation has historically been hard to detect. The advent of long reads, and improvements to the quality of reference genomes over time has recently enabled new discoveries in the field.  This tutorial uses sniffles to implement a structural variant calling pipeline. Structural variant calling will be performed on a bacterial dataset to benchmark sniffles, then using a human clinical dataset to identify patient disease. We will explore one workflow for structural variant detection, then will visualise and summarise our results using multiple methods.   </p> <p></p> <p>Data: Nanopore reads: bacterial &amp; human (FASTQ), genomic feature annotations (GFF), human reference genome hg38 </p> <p>Pipeline: Read summaries &amp; QC, alignment, SV calling, text processing, visualisation</p> <p>Tools: NanoPlot, Filtlong, minimap2, CalMD, SortSam, sniffles, VCFsort, VCFannotate, awk, Circos, IGV</p> <p></p> <p>Section 1 covers bacterial SV calling and benchmarking of bioinformatics tools.  Section 2 will demonstrate SV calling on a human sample to diagnose a patient condition. </p> <p></p>"},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#learning-objectives","title":"Learning Objectives","text":"<p>At the end of this introductory workshop, you will :</p> <ul> <li>Be able to perform SV calling in model and non-model organisms</li> <li>Be familiar with the current field of SV calling</li> <li>Gain an understanding of why and when SV calling is an appropriate analysis to perform.</li> </ul> <p></p>"},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#required-software","title":"Required Software","text":"<ul> <li>No additional software needs to be installed for this workshop.</li> </ul>"},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#required-data","title":"Required Data","text":"<ul> <li>No additional data needs to be downloaded for this workshop.</li> </ul>"},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#author-information","title":"Author Information","text":"<p>Written by: Grace Hall Melbourne Bioinformatics, University of Melbourne</p> <p>Created/Reviewed: March 2021</p> <p></p>"},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#background","title":"Background","text":""},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#what-is-structural-variation","title":"What is Structural Variation?","text":"<p>Genetic variation is always relative. In general, we have a reference sequence which we know lots about, and query sequences to compare against this reference.  Given we know lots about the reference, the impact of any variation we find in the query sequences can be inferred. The query sequences can originate from a single individual or a group, depending on the biological question. </p> <p></p> <p>Genetic variants are often separated into two categories: sequence variants, and structural variants. </p> <p>Sequence variants cover small-scale changes which affect a few nucleotides, such as single nucleotide variants (SNVs) or small insertions / deletions (Indels). They are particularly important when they impact coding sequences of genes, as can alter the amino acid sequence of proteins.</p> <p>Structural variants (SVs) are large-scale events (&gt;50 bp) where entire sections of genetic material have changed. An example is a deletion, where an entire section of DNA has been removed. Structural variants have the potential to greatly alter the gene dosage of a cell by duplicating or deleting entire exons or genes at a time. </p>"},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#benefit-of-long-reads","title":"Benefit of Long Reads","text":"<p>Structural variation has historically been hard to detect. This is because structural variation often involves repeat elements which are notoriously hard to resolve using short-read sequencing technologies. Either the structural variant itself is a repeat, or it occurs in a repetitive region of the reference genome. </p> <p></p> <p></p> <p></p> <p>In general, long reads have greater mappability. Mappability is the ability to unambiguously align reads to a reference. In the example above, a short read sampled from a tandem repeat cannot be accurately mapped, as it is equally likely it came from 3 different locations. On the other hand, a long read sampled from this region can be uniquely mapped to a single location. The extra repeat found in the isolate could also be detected given such a read. </p> <p>This is highly pertinent when working with the human genome, as more than 60% appears to be repetitive sequence.  This repetitive sequence consists of 2 main elements: mobile elements, and repeats. Mobile elements are sections of DNA which copy or move themselves throughout our genome and include retrotransposons (LINE, SINE, LTR, and SVA) and DNA transposons. Repeats are genomic regions which contain the same sequence repeated many times, and consist of Short Tandem Repeats (STRs / microsatellites) which are 1-6 bp tandem repeats, or Variable Number of Tandem Repeats (VNTRs / minisatellites) which are tandem repeats where the repeat length is greater than 7 bp.  </p>"},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#applications-of-structural-variant-detection","title":"Applications of Structural Variant Detection","text":"<p>The importance of structural variation has become more apparent in recent years. This has been driven by the advent of long-read sequencing technologies, and the availability of better reference genomes (including improvements to human reference genome hg38). Today, SV detection is implicated in many areas of bioinformatics, including the following:</p> <p>Human Disease</p> <ul> <li>Cohort studies<ul> <li>Identifying new, disease-causing structural variation</li> <li>Assessing an individual\u2019s susceptibility to disease mediated by SVs</li> </ul> </li> <li>Cancer genomics<ul> <li>Susceptibility of individual to certain cancers</li> <li>Monitoring of tumor progression</li> </ul> </li> </ul> <p>Agriculture</p> <ul> <li>Identifying desirable traits<ul> <li>Flowering rate, frost / drought resistance, improved crop yield</li> </ul> </li> <li>Genetic modification </li> </ul> <p>The Microbial World</p> <ul> <li>Understanding the relationship between microbiome SVs and human health</li> <li>Studying phylogeny and evolution of microbes (including horizontal gene transfer)</li> <li>Researching the spread of mobile elements and plasmids which convey virulence or antibiotic resistance genes</li> </ul>"},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#structural-variant-types","title":"Structural Variant Types","text":"<p>Structural variants are either destructive (involving a change in total genetic material), or non-destructive (total genetic material stays the same). Destructive variants are often particularly interesting, as they alter the gene dosage of a call. This can lead to overexpression of genes, or knock-out variants with zero expression if a gene was removed. Destructive SVs are highly implicated in cancer genomics, as undesirable genes such as tumor-suppressors can be removed, while desirable genes involving growth and proliferation can be expressed in much higher quantity.</p> <p></p> <p></p> <p>There are 5 main types of structural variation. Insertions, Deletions, Inversions, Duplications, and Translocations. Specifically, they involve the following:</p> <ul> <li> <p>Insertions A foreign section of genetic material is inserted</p> </li> <li> <p>Deletions A section of genetic material is removed</p> </li> <li> <p>Inversions A section of genetic material swaps its orientation</p> </li> <li> <p>Duplications (interspersed or tandem) A section of genetic material is copied, then inserted.  Can be separated into:</p> <ul> <li>Interspersed duplications, where the insertion site is away from the copied section</li> <li>Tandem duplications, where the insertion site is directly beside the copied section</li> </ul> </li> <li> <p>Translocations (intra- or inter-chromosomal) A section of genetic material is cut out, then inserted somewhere else. Can be separated  into:</p> <ul> <li>Intra-chromosomal translocations, where the insertion site is within the same chromosome</li> <li>Inter-chromosomal translocations, where the insertion site is on another chromosome</li> </ul> </li> </ul>"},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#variants-detected-by-common-sv-calling-programs","title":"Variants detected by common SV calling programs","text":"<p>Many SV calling programs do not attempt to detect interspersed duplications and intra-chromosomal translocations. This is because most SV callers have been designed for use with human data, and these variants are less relevant to the human genome than other organisms. </p> <p>Regarding interspersed duplications, most RNA transposons (the mechanism of variation) are inactive in the human genome. A few are still active, but an impact will only be seen if the insertion site (insert location of the copied segment) is within an important genomic feature, such as a gene body or enhancer region. </p> <p>Intra-chromosomal translocations are ignored for similar reasons. These are mainly caused by DNA transposons, which are considered inactive in humans. DNA transposons are still active in other eukaryotes (including most plants) and bacteria, so must be considered when working outside human data. </p>"},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#sv-calling-pipeline","title":"SV calling pipeline","text":"<p>Today, we will explore one workflow for SV calling. We will first call variants using a benchmarking dataset, where the true SVs are known. We will then swap to a human clinical scenario, and will identify a structural variant causing patient disease. </p> <p>We will use the workflow below to explore structural variation. This workflow has 3 main sections - data exploration, calling variants, then interpreting our findings. Our process will be slightly different depending on whether we are working with the bacterial read set, or the human sample. </p> <p></p> <p></p> <p></p> <p>Our SV calling workflow will consist of 5 key steps:</p> <ol> <li> <p>Read QC The length and quality distribution of long-read data is highly variable. We will summarise our read set using NanoPlot, to understand what quality of results to expect during analysis.  Filtlong will then be used to remove short reads, or those with patches of low quality. This will reduce erroneous read mapping and will improve our results. </p> </li> <li> <p>Alignment Structural variation is always relative to a reference. Our isolate reads will act as the query, and an appropriate reference genome will be selected to measure structural variation against. We will align our isolate reads using minimap2 to the chosen reference genome, then will pass the output alignment BAM file to our SV caller.  </p> </li> <li> <p>SV calling Our SV caller, sniffles, uses the read alignment information to detect structural variation. It will output variant calls in VCF format, which we will then process with awk to create a summary which is easy to read.</p> </li> <li> <p>Feature annotation Variants which span or otherwise intersect with key genomic regions are most likely to have functional impact. Rather than doing this manually for each variant, we can use awk and VCFannotate to automatically label variants with the genomic features they intersect with.</p> </li> <li> <p>Visualisation Visualisation will be performed to understand variation on a genome-wide scale, and to probe single variants for their potential functional impact. Circos plots will be generated for the bacterial read set to view the total variation across the genome, and IGV will be used on the human clinical dataset to infer the functional consequences of variants. </p> </li> </ol> <p></p>"},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#section-1-bacterial-dataset","title":"Section 1: Bacterial dataset","text":""},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#introduction","title":"Introduction","text":"<p>The first dataset we will use is a synthetically mutated bacterial genome. Structural variants and single base mutations have been added to an E. coli sakai assembly, then Nanopore reads of this mutated genome were simulated using NanoSim.  We will use these reads to identify the SVs we added using our SV calling pipeline. </p> <p>The benefit to this approach is that we know the ground truth. SVs were manually added to our E. coli sakai reference genome, and their details were recorded. As we have a list of SVs which were added, we can assess sniffles performance at SV calling by the number of SVs it correctly identifies.  </p> <p>In this section we will:</p> <ul> <li>Perform read Quality Control (QC)</li> <li>Align reads</li> <li>Perform SV calling</li> <li>Create SV call summaries using awk (text processing)</li> <li>Visualise SV calls with Circos</li> </ul> <p>We will employ a number of tools in our pipeline, so let\u2019s get to it!</p> <p></p>"},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#getting-the-data","title":"Getting the data","text":"<p>To start, we need a set of reads from our synthetic isolate, a reference genome to call SVs against, and a \u2018ground truth\u2019 list of variants which have been added to our isolate. </p> <p>Import the following Galaxy history to get started: https://usegalaxy.org.au/u/graceh1024/h/sniffles-benchmarking-ecoli-sakai</p> <p>Importing a galaxy history</p> How to import <p>Galaxy histories can be accessed via a link, or in the \u2018Shared Data\u2019 tab of the top navigation bar. Once you find a history you want to copy, press the \u2018+\u2019 icon at the top right of the page to import the history</p> <ul> <li>The reference genome is \u201cecoli_sakai.fasta\u201d</li> <li>Our reads are \u201cisolate_reads.fastq\u201d</li> <li>The list of added SVs is \u201cisolate_sv_record.tsv\u201d</li> </ul> <p></p>"},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#read-qc","title":"Read QC","text":"<p>Before proceeding, we want to understand our read set. Nanopore reads can have highly variable read length and quality distributions from sample to sample - by creating a summary, we can know what to expect from our reads, and whether we should perform QC filtering. </p> <p>Create a summary of the reads</p> <p>First, we want to get a summary of our read set. NanoPlot creates plots to summarise the length distribution and quality of our read set.</p> <p>Tool: NanoPlot</p> <ul> <li>Type of the file(s) to work on: fastq<ul> <li>files:  isolate_reads.fastq</li> </ul> </li> </ul> <p> NanoPlot creates 5 outputs. Today, we are only interested in the HTML report. This report contains a summary table which will summarise most of the important information, followed by plots displaying the read length and quality distribution of reads. Your report may be similar to the following image: </p> <p></p> <p> Answer the questions below regarding isolate_reads.fastq:</p> <p>What is the median read length?</p> answer <p>____ bp</p> <p>What is the median read quality?</p> answer <p>Q__ (phred ___)</p> <p>What is the length and mean quality of the longest single read?</p> answer  <p>____ bp, Q ___</p> <p>As a significant proportion of the reads are short or low quality, we will perform a filtering step to reduce incorrect SV calls downstream in our analysis. </p> <p></p> <p>Filter reads</p> <p>Long reads can have a wide range of lengths and qualities. Filtering of long reads is often conducted slightly differently to short reads. Often, reads less than 1000 bp are removed, and reads containing patches of poor quality are discarded. This is an important distinction to short read filtering, as a given long read can have a good overall base quality, while having areas which are very low quality. As our SV caller, sniffles, looks at alignment quality when identifying structural variation, it is important we remove reads with low-quality patches.   </p> <p>Tool: filtlong</p> <ul> <li>Input FASTQ isolate_reads.fastq</li> <li>Output thresholds<ul> <li>Min. Length 1000</li> <li>Min. window quality 9</li> </ul> </li> </ul> <p>rename the output to \u2018isolate_reads_filtered.fastq\u2019</p> <p>The above will remove any reads which are less than 1000 bp, or those where a section (250bp) of the read has mean quality below Q9. Our readset will now be ready for structural variant calling.</p> <p></p>"},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#alignment","title":"Alignment","text":"<p>Sniffles requires an alignment file when calling variants. It searches the alignments for split reads, alignments containing patches of high error rate, and soft clipping of reads to identify structural variation.  Below we can see how different isolate reads capturing an inversion might be aligned to the reference genome.</p> <p> </p> <p>In the first example, the inversion appears near the middle of the read and is large. In this case, the aligner may split the read and report the alignment in 3 sections. In scenario 2, the inversion is quite small, and the read may not be split. In this case there would be a patch of low sequence identity between the read and reference genome at the inversion location. In the final example, only the very edge of the read has spanned the SV, and as a result the aligner may just report a single alignment with part of the read clipped off.  All this information is available to our SV caller after the reads are aligned to our reference genome.</p> <p>To provide this file, we need to map our read set to our reference genome of choice. The reference genome should be as close as possible to the isolate from which our reads originate for best results.  In this situation, the original E. coli sakai assembly which we computationally mutated will be our reference genome. </p> <p>Align reads</p> <p>Tool: Map with minimap2</p> <ul> <li>Will you select a reference genome from your history or use a built-in index? Use a genome from history and build index</li> <li> <p>Use the following dataset as the reference sequence ecoli_sakai.fna</p> </li> <li> <p>Single or Paired-end reads single</p> </li> <li> <p>Select fastq dataset isolate_reads_filtered.fastq</p> <ul> <li>Select a profile of preset options Oxford Nanopore read to reference mapping\u2026</li> </ul> </li> <li> <p>Set advanced output options</p> <ul> <li>Generate CIGAR Yes</li> </ul> </li> </ul> <p>Rename output to \u201cisolate mapped reads\u201d</p> <p>Calculate MD Tag</p> <p>Sniffles requires alignments to contain the \u2018MD tag\u2019 in our BAM file. This is a condensed representation of the alignment of a read to the reference, and is similar to a CIGAR string. We can use CalMD to add this to each alignment in our BAM file.  </p> <p>Tool: CalMD</p> <ul> <li>BAM file to recalculate isolate mapped reads</li> <li>Choose the source for the reference genome Use a genome from the history</li> <li>Using reference file ecoli_sakai.fna</li> </ul> <p>Rename output to \u201cisolate mapped reads MD\u201d</p> <p></p>"},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#sv-calling-with-sniffles","title":"SV calling with sniffles","text":"<p>Now we have our alignments (BAM) in the correct format, we can call variants with sniffles. Sniffles generally has good defaults, so we will leave everything as-is for now. Later, we will tweak the settings based on our read set for better results. </p> <p>Call variants</p> <p>Tool: sniffles</p> <ul> <li>Input BAM file isolate mapped reads MD</li> </ul> <p>Rename the output to \u2018sniffles variant calls\u2019</p> <p>Have a look at the VCF output of sniffles. It contains header lines providing metadata and definitions, followed by variant call lines. VCF stands for \u2018Variant Call Format\u2019 and is the standard format for recording variant information - both sequence variants, and structural variants. Click the eye icon  to view.</p> <p>Sort VCF output</p> <p>Before continuing, we well sort the variant calls so they are in coordinate order. This will help us compare against the truth SV record for our simulated isolates (provided SV records are sorted by coordinate), and in future will allow us to view the variants using a genome browser.  </p> <p>Tool: VCFsort</p> <ul> <li>Select VCF dataset sniffles output VCF</li> </ul> <p>Rename the output to \u2018sniffles variant calls sorted\u2019</p> <p></p>"},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#creating-a-summary-awk","title":"Creating a summary (awk)","text":"<p>Unfortunately, the VCF file format was not created to store structural variant information, and generally does a poor job. In its current state, it is not very easy to quickly summarise our variant calls, as a lot of the important information is shoved in the \u2018INFO\u2019 field.  </p> <p></p> <p>We would prefer a format which identifies the contig, location, type, and size of each variant call in an easy to read manner. We can create such a summary using text processing - specifically by using the \u2018awk\u2019 tool. For each variant call we will extract the value for the #CHROM, #POS, and #ID fields, and from the #INFO field we will extract the remaining information we need. </p> <p>Awk processes the input file line-by-line.  For each line, it follows the following approach:</p> <pre><code>pattern { action }\n</code></pre> <p>For a given line, if the pattern is matched, the action will be performed. For example, given the following input file:</p> <pre><code>chr12       gene        NTRK2\nchr18       CDS         BRCA1\nchr22       gene        P53 \n</code></pre> <p>And the command:</p> <pre><code>Awk \u2018/gene/ { print $0 }\u2019\n</code></pre> <p>We will obtain the output:</p> <pre><code>chr12       gene        NTRK2\nchr22       gene        P53 \n</code></pre> <p>How it works:</p> <p><code>/gene/</code> will match any line which contains \u201cgene\u201d, and the statement <code>{ print $0 }</code> will print the line.  Awk always sets some variables for the line being processed - in particular, the complete line is stored as $0, and $1, $2, $3 etc store the value for field 1, 2, 3 etc respectively. </p> <p>If desired, we can also perform multiple actions when the pattern is matched:</p> <pre><code>pattern { action 1; action 2; action 3; }\n</code></pre> <p>Awk is a highly versatile tool for text processing, and can perform all the common functionality including conditional if / else statements and loops. </p> <p>From here the awk programs will be supplied, but if you wish to learn more, here is a good place to start: https://zetcode.com/lang/awk/</p> <p>Process VCF with awk</p> <p>Tool: Text reformatting with awk</p> <ul> <li>File to process: sniffles variant calls sorted</li> <li>AWK Program: <pre><code>/SVTYPE=/ {split($8,infoArr,\";\"); print substr(infoArr[9],8), $3, $1, substr(infoArr[3],6), $2, substr(infoArr[4],5), substr(infoArr[11],7)}\n</code></pre></li> </ul> <p>Rename output to \u201csniffles VCF summary\u201d</p> <p>Your output may look something like this:</p> <p></p> <p></p>"},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#calculating-sniffles-performance-metrics","title":"Calculating sniffles Performance Metrics","text":"<p>We now have both files we need to measure the performance of sniffles - the variant calls provided by sniffles, and the ground SV truth. Open both files in new tabs and compare them by right-clicking the eye icon  then selecting \u2018open link in new tab\u2019. Specifically, note the following:</p> <ul> <li>How many real SVs did sniffles identify (true positives)</li> <li>How many did it miss? (false negatives)</li> <li>How many SVs were called by sniffles which were not actually added to the reference genome? (false positives)</li> </ul> <p>From this information we can calculate performance metrics for sniffles. The following formulas for accuracy, precision and recall are commonly used when benchmarking bioinformatics software.</p> <p></p> <p></p> <p>What was sniffles recall?</p> answer <p>____ bp</p> <p>While the accuracy and precision of sniffles was good, the recall is low. This is due to a key setting in sniffles which relates to our read set - read support. </p> <p></p>"},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#tuning-sniffles-settings","title":"Tuning sniffles Settings","text":"<p>Sniffles has a default setting called \u2018read support\u2019 which requires 10 reads to support a possible SV for it to be accepted as genuine. Reducing this number allows more SVs to be discovered, but may also cause some false positives (SV calls for variants which do not actually exist). Conversely, we can be more strict by increasing this number. The best choice for this setting depends on the biological question you wish to answer, and the amount of read depth your dataset has. </p> <p></p> <p></p> <p>Our filtered read set fastq file was 139 mb, so we have approximately 70 mbp worth of long read data. As the genome size of our isolate is approximately 5 mbp, this equates to only around 12x mean read depth for a given location in the reference genome. Read depth is not uniform, so we expect some regions to have less than 12x depth, resulting in some structural variants being missed by sniffles if not enough reads supported the call.</p> <p>As our mean depth is 12x, but the quality of our reads is good, we will reduce the \u2018read support\u2019 setting to 5.</p> <p>Re-run sniffles</p> <p>Run sniffles again by clicking the re-run  button on the sniffles VCF output. By clicking the re-run button, all the settings previously used will already be filled.</p> <p>Change the following:</p> <ul> <li>Set general options<ul> <li>Minimum Support: 5</li> </ul> </li> </ul> <p>Leave all else default and click \u2018execute\u2019</p> <p>Rename the output to \u2018sniffles variant calls RS5\u2019</p> <p>Re-run VCFsort</p> <p>Run VCFsort again by clicking the re-run  button.</p> <p>Change the following:</p> <ul> <li>Select VCF dataset: \u2018sniffles variant calls RS5\u2019</li> </ul> <p>Leave all else default and click \u2018execute\u2019</p> <p>Rename the output to \u2018sniffles variant calls RS5 sorted\u2019</p> <p>Re-run awk</p> <p>Run awk again to create a summary by clicking the re-run  button.</p> <p>Change the following:</p> <ul> <li>File to process: \u2018sniffles variant calls RS5 sorted\u2019</li> </ul> <p>Leave all else default and click \u2018execute\u2019</p> <p>Rename the output to \u2018sniffles VCF summary RS5\u2019</p> <p></p> <p>Our new variant calls should be an improvement on the original settings. You may see something similar to the following:</p> <p></p> <p>We have increased our recall by lowering our read support threshold to 5, rather than 10. While being less conservative in this manner will increase recall, it also may result in greater false positives (sniffles calling variants that don\u2019t exist). Whether we maximise precision or recall depends on the task at hand - in this case, we want to discover all the variants and prefer high recall, and should therefore treat our variant calls with more scepticism.  </p> <p></p>"},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#visualising-sv-calls","title":"Visualising SV calls","text":"<p>Visualisation and interpretation is an important part of any analysis. Now we have our SV calls, we can view them on a genome-wide scale using a type of visualisation called a circos plot. Circos plots are often featured on the cover of academic journals as they can communicate a large amount of genomic information at a glance.</p> <p>We will now make a circos plot which displays our variant calls. Similar to genome browsers, circos plots are built from data tracks. When dealing with genomic data, the outer coordinate system (called the ideogram) is usually the chromosomes of a genome, and the tracks pin data to their genomic positions. For this workshop, we will use a galaxy workflow to create our circos plot, but if you would like to learn how to create these plots yourself, see the following tutorial: </p> <p>https://training.galaxyproject.org/training-material/topics/visualisation/tutorials/circos/tutorial.html </p> <p>Create Circos plot</p> <p>We will be using a workflow to create circos plots for us. This will process our sniffles VCF summary and SV truth report, and produce a plot. </p> <p>Invoke the workflow using this link:  https://usegalaxy.org.au/workflows/run?id=6588e175004aba38</p> <p>Optional: importing a galaxy workflow</p> importing rather than running <p>Galaxy workflows can be directly run, or can be imported as a workflow. The benefit to importing a workflow is that you can see all the tools that are being run, and can customise the workflow to suit your needs. Like shared histories, workflows can also be found in the \u2018Shared Data\u2019 tab of the top navigation bar. Once you find a workflow you want to import, press the \u2018+\u2019 icon at the top right of the page to import the workflow. The circos plot workflow can be imported using the following link: https://usegalaxy.org.au/u/graceh1024/w/long-read-sv-calling---circos-plots </p> <p>Set the following:</p> <ul> <li>sniffles VCF summary: sniffles VCF summary RS4</li> <li>Reference Genome: ecoli_sakai.fna</li> <li>SV truth record: isolate_sv_record.tsv</li> </ul> <p>Click the blue \u2018Run Workflow\u2019 button on the top right to execute the workflow. Your output might be similar to the following figure:</p> <p></p> <p></p> <p></p> <p>The circos plot has been formatted so both the variant calls (sniffles) and the true SVs are displayed. The ideogram (outer coordinate system) is displaying the bacterial chromosome and two plasmids. One plasmid is reasonable size, while the other is tiny.  </p> <p>The outer tile track displays sniffles calls, and the inner track is the true added variants. Link tracks (lines connecting regions of the plot) have been added which show the translocation breakends called by sniffles in yellow, and any undetected breakends in red.  From this plot, we can quickly see that sniffles detected most of the variants, but a few were still missed. </p> <p></p>"},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#section-2-human-clinical-dataset","title":"Section 2: Human clinical dataset","text":""},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#introduction_1","title":"Introduction","text":"<p>Pathogenic structural variation has become more thoroughly understood in recent years, partly driven by the advent of long-read sequencing technologies. For the remainder of this workshop, we will use a dataset which emulates a patient case. </p> <p>In this example, long-read sequence data was able to identify a causal SV, where short-read sequencing had previously reported a negative result. The dataset was simulated according to the findings of Merker et al (2018) and can be found at https://dx.doi.org/10.1038%2Fgim.2017.86.</p> <p></p>"},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#patient-case","title":"Patient Case","text":"<p>The patient is a male who had numerous recurring tumorous growths over their development. At age 7, an atrial myxoma of the heart was discovered and removed, followed by a Sertoli-Leydig cell tumor at age 10, a pituitary tumor at 13, more growths on the heart at 16 and 18 which were surgically removed. After the heart surgery at 18 years old, he suffered from a cardiac arrest which he eventually recovered from. At 18, the possibility of a Carney complex was suggested, but short read sequencing and analysis of the PRKAR1A gene returned negative for pathogenic variation. </p> <p>The patient continued to develop tumors over the following years, prompting another round of sequencing - this time, whole genome sequencing (WGS) using long reads. 26.7 Gb of reads were produced using the PacBio Sequel system, equating to an average read depth of 8.6x. </p> <p>The following dataset is simulated reads from a section of chr17 which emulate the patient case. </p> <p></p>"},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#getting-the-data_1","title":"Getting the data","text":"<p>To start, we need reads from our section of chr17 (pos 66,000,000 - 69,000,000) for variant calling against hg38, and a file listing genomic features (GFF) for automated annotation later on. </p> <p>Import the following Galaxy history to get started: https://usegalaxy.org.au/u/graceh1024/h/carney-complex---chr17-reads</p> <p></p>"},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#sv-calling-using-workflow","title":"SV Calling using Workflow","text":"<p>Rather than manually running each tool again using our chr17 reads and human reference genome hg38 as reference, we will use a workflow to do the analysis for us. hg38 is a built-in genome in galaxy, so we do not need to provide it ourselves. The workflow will perform the following:</p> <ul> <li>Read QC (Filtlong)</li> <li>Produce a summary report of filtered reads (NanoPlot)</li> <li>Align reads to hg38 (minimap2)</li> <li>Calculate the MD tag (CalMD) and sort the BAM file by coordinate (SortSam)</li> <li>Call variants (sniffles)</li> <li>Sort the variant calls (VCFsort)</li> <li>Create a summary of the variant calls (awk) </li> </ul> <p></p> <p></p> <p></p> <p>As we are aligning reads to hg38, the alignment step will take longer than for the bacterial dataset. The human genome is approximately 640x larger than E. coli sakai, so this is understandable. Reads may take 15 minutes to map during the workflow. </p> <p>Invoke the workflow using this link:  https://usegalaxy.org.au/workflows/run?id=d69a765cfc82a399</p> <p>Set the following:</p> <ul> <li>Long reads: chr17_reads.fastq</li> <li>CalMD<ul> <li>Using reference genome: \u2018hg38\u2019</li> </ul> </li> </ul> <p>Click the blue \u2018Run Workflow\u2019 button on the top right to execute the workflow.</p> <p></p> <p>This workflow produces the key outputs we need. The NanoPlot HTML report summarises our reads after filtering, which we can view to determine the quality of our read set. The sorted alignments contain the alignment information, which we can download to view using a genome browser. variant calls sorted is the sorted VCF file produced by sniffles, and variant calls summary is our simplified awk summary of the variant calls.  Use the eye icon  to view these outputs for your own interest.</p> <p>All going well, your final variant calls summary will look similar to the following:</p> <p></p> <p></p> <p>As our reads are from a 3 mbp segment of chr17, the variants are all located on chr17, between position 6,600,000 and 6,900,000. 19 structural variants have been detected, which is a reasonable number for this segment given that multiple thousand variants are generally detected between any individual and hg38.  </p> <p>One of these variants is causing patient disease, and we will identify the culprit using IGV.  </p> <p></p>"},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#visualising-alignments-with-igv","title":"Visualising Alignments with IGV","text":"<p>We will use IGV to inspect the variant calls, and determine which may be causing disease. In particular, we are looking for structural variation which spans or interrupts gene coding sequences, as these are most likely to cause a disease phenotype. </p> <p>We wish to view the alignments and variant calls, so will download the sorted alignment files (BAM and BAI) and the variant calls (VCF). We can then upload this data to the IGV webapp to visualise. </p> <p></p> <p>Download Alignments and Variant Calls Data</p> <p>Click the save  icon in the \u2018sorted alignments\u2019 output, and download both the dataset (BAM) and the bam_index (BAI) files. The BAM contains read alignment information, and the BAI contains an index which allows IGV to load this data. </p> <p></p> <p>Do the same for the \u2018variant calls sorted\u2019 VCF output. This time, simply clicking the save  icon will download the VCF as there is only 1 piece of data.</p> <p></p> <p>Open IGV and set to hg38</p> <p>Navigate to https://igv.org/app/ to open IGV. </p> <p>Genome browsers use a reference genome as a coordinate system, and anchor data to these coordinates.  Datasets are loaded as \u2018tracks\u2019, and use the selected reference genome as coordinates. </p> <p>The first thing we need to do is ensure the correct genome is loaded.  By default, this is human reference genome hg19.  We used hg38 as reference genome when aligning our chr17 reads. </p> <p>In the top toolbar, click \u2018Genome\u2019 then select Human (GRCh38/hg38)</p> <p></p> <p></p> <p></p> <p>Now we have the current version of the human genome loaded and ready to use. The genome is divided by chromosome markers which you will see as sections marked at the top of the screen. Below that, we have a single \u2018track\u2019 - RefSeq gene annotations. </p> <p>We now need to add our two tracks - the variant calls, and alignments. </p> <p></p> <p></p> <p></p> <p>To add the variant calls, click \u2018Tracks\u2019 then \u2018Local File\u2019 in the top navigation bar, and select the sorted variant_calls_sorted VCF file.</p> <p>To add the read alignments, click \u2018Tracks\u2019 then \u2018Local File\u2019 in the top navigation bar, then upload the sorted_alignments BAM and BAI files we  downloaded from the SortSam output. Both the .BAM and .BAI files must be selected together. </p> <p>Currently, there is too much data to load the alignments and variant calls. We will need to zoom in to see this information. In the grey bar at the top of the genome browser, next to hg38, use the dropdown to select chr17. Now that chr17 is selected, we will investigate our variant calls. </p> <p>One of the variants  was located approximately between position 66270000 and 66276000. We can view this region by typing coordinates in the box next to the chromosome selector. Set it to the following:</p> <p></p> <p>This is what we can see in the region:</p> <p></p> <p></p> <p></p> <p>A deletion is evident. No reads are aligned in this region, and the coverage is high enough to support this variant call. </p> <p>While this is clearly a variant, it is not spanning any known RefSeq genes. We are looking for a variant which is causing tumors, so genes involved in cell signalling such as PRKAR1A, tumor suppression, or growth factors may be implicated. </p> <p>Once you have looked at some variant calls in detail, expand the below to reveal the variant causing disease: </p> <p>Disease causing variant location</p> Reveal <p>chr17:68,509,063-68,520,941</p> <p>Enter the coordinates above to view the disease variant. Your IGV may look similar to the following:</p> <p></p> <p></p> <p></p> <p>There is a clear deletion spanning the first coding exon of the PRKAR1A gene. This deletion would likely have a large impact on protein function, as the start codon and an entire exon has been deleted.</p> <p>After obtaining this result, managing doctors diagnosed the patient with Carney complex due to the pathogenic deletion in PRKAR1A. This shows an early example of how SV detection can be used in a clinical setting to diagnose patient disease, and that long reads have an advantage over short reads for structural variation detection.  </p> <p></p>"},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#genomic-feature-annotation-of-variant-calls","title":"Genomic Feature Annotation of Variant Calls","text":"<p>As a final summary, we will annotate our variant calls with the genomic features they intersect with.  Rather than manually inspect each variant call with a genome browser, we can automate this process. Genome annotations provide locations and descriptions for important genomic features which have been discovered.  Genome annotations are available for most assemblies on RefSeq, and the hg38 annotations are naturally very good. </p> <p>Today we will use genome annotations in the general feature format (GFF) format. We will invoke a workflow which uses a GFF file and our variant calls VCF file as input, then annotates the variant calls with any features they intersect with. </p> <p>A GFF has been provided for chr17, and includes a vast amount of information. We will just look at coding sequences (CDS) intersecting our variants, as distruptions in these regions are likely to have functional impact.  </p> <p>Invoke the workflow using this link:  https://usegalaxy.org.au/workflows/run?id=142e5f7c1f340838</p> <p>Set the following:</p> <ul> <li>Genome Annotations (GFF): chr17_annotations.gff</li> <li>Sniffles Variant Calls (VCF): variant calls sorted</li> <li>Extract features<ul> <li>Extract features: select \u2018CDS\u2019 from the list</li> </ul> </li> </ul> <p>Click the blue \u2018Run Workflow\u2019 button on the top right to execute the workflow. View the \u2018variant calls summary (annotated)\u2019 output. Yours may be similar to the following:</p> <p></p> <p>Considering we may have thousands of structural variants between an individual and hg38, this process can drastically cut down on time. In the associated paper, authors reduced the initial &gt; 13,500 variant calls down to only 3, by filtering for variants which overlap a disease gene coding exon, and those which are not present in a healthy control sample.   </p> <p></p>"},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#conclusion","title":"Conclusion","text":"<p>Today, we have covered a large amount of theory and analysis. Structural variant detection is a growing area, and will no doubt yield many discoveries in the near future. As with any bioinformatic analysis, we first explored our input data,  performed our analysis, then finished by visualising and interpreting our findings. </p> <p>For those wishing to learn more about human clinical SV calling, dbVar (https://www.ncbi.nlm.nih.gov/dbvar/) and other repositories which contain information linking structural variants and disease is a good place to start.  </p> <p></p>"},{"location":"tutorials/longread_sv_calling/longread_sv_calling/#additional-reading","title":"Additional reading","text":"<p>Links to additional recommended reading and suggestions for related tutorials.</p> <p></p>"},{"location":"tutorials/miRNAseq_basic/","title":"Templates","text":"<p>This contains templates for overall workshop layout, as well as specific examples of how to incorporate aspects such as code blocks, equations, questions and answers etc.</p>"},{"location":"tutorials/miRNAseq_basic/intro_miRNAseq/","title":"intro miRNAseq","text":""},{"location":"tutorials/miRNAseq_basic/intro_miRNAseq/#basic-mirna-seq-data-analysis","title":"Basic miRNA-seq data analysis","text":"<p>Anticipated workshop duration when delivered to a group of participants is 2 hours.  </p> <p>For queries relating to this workshop, contact Melbourne Bioinformatics (bioinformatics-training@unimelb.edu.au).</p>"},{"location":"tutorials/miRNAseq_basic/intro_miRNAseq/#overview","title":"Overview","text":"<p>This is a tutorial for basic miRNA-seq data analysis using miRdeep2 on Galaxy. It assumes that you have your sequencing result files in FASTQ format. From there this tutorial takes you through a series of tasks, including an essential quality control procedure, alignment, identification and quantification of (known) miRNAs and a basic differential expression analysis. Additionally, some subsequent analyses that commonly follow the differential expression analysis are suggested in the end.</p>"},{"location":"tutorials/miRNAseq_basic/intro_miRNAseq/#topic","title":"Topic","text":"<ul> <li> Genomics</li> <li> Transcriptomics</li> <li> Proteomics</li> <li> Metabolomics</li> <li> Statistics and visualisation</li> <li> Structural Modelling</li> <li> Basic skills</li> </ul>"},{"location":"tutorials/miRNAseq_basic/intro_miRNAseq/#skill-level","title":"Skill level","text":"<ul> <li> Beginner  </li> <li> Intermediate  </li> <li> Advanced  </li> </ul> <p>This workshop is designed for participants with limited skills in computers and linux/unix environments.</p>"},{"location":"tutorials/miRNAseq_basic/intro_miRNAseq/#description","title":"Description","text":"<p>This tutorial uses a subset of small RNA-seq data from a published paper, which was for a study of biogenesis of miRNAs (ref). The raw sequencing data for this study are downloadable from Gene Expression Omnibus database of NCBI, a public repository for genomic data, in FASTQ format. The downloaded FASTQ files were quality-checked and pre-processed by FastQC and Trimmomatic, and the pre-processed FASTQ files were analysed by MirDeep2 for the sequence alignment, identification and quantification of known miRNAs. The latest MiRBase database (ref) was used as the reference for known miRNAs of human. MiRBase is a database of published miRNAs sequences and annotation (http://www.mirbase.org/) After the quantification of known human miRNAs, edgeR was used for differential expression analysis.</p> <p>Data: 4 samples from Gene Expression Omnibus dataset GSE56862 Pipeline &amp; Tools: FastQC, Trimmomatic, miRDeep2, edgeR</p> <p>Section 1 covers basic background of miRNA and miRNA-seq experiment. Section 2 illustrates the overall miRNA-seq data procedure, introducing tools utilized for each step in this tutorial. Section 3 introduces the example dataset from NCBI GEO database. Section 4 covers essential quality control and pre-processing procedures. Section 5 covers taking the pre-processed miRNA-seq data through the \u2018MiRDeep2\u2019 pipeline. Section 6 covers how to combine (known) miRNA quantification result from each sample into a single read-count matrix. Section 7 (optional) introduces an alternative way to generate a single read-count matrix, using spreadsheet softwares such as MS Excel, Google-spreadsheet, etc. Section 8 covers basic differential expression analysis on miRNA read-count matrix using edgeR. In the Additional reading, some subsequent analysis that commonly follow the differential expression analysis are introduced.</p>"},{"location":"tutorials/miRNAseq_basic/intro_miRNAseq/#learning-objectives","title":"Learning Objectives","text":"<p>At the end of this introductory workshop, you will :</p> <ul> <li>Understand the overall procedure of miRNA-seq data analysis.</li> <li>Be familiar with data types and tools for miRNA-seq data analysis.</li> <li>Know how to use the Galaxy for data-processing and exploring.</li> </ul>"},{"location":"tutorials/miRNAseq_basic/intro_miRNAseq/#requirements-and-preparation","title":"Requirements and preparation","text":"<p>Important</p> <p>Attendees are required to bring their own laptop computers. At least one week before the workshop, participants should install the software and data files below.  This should provide sufficient time for participants to liaise with their own IT support should they encounter any IT problems.  </p>"},{"location":"tutorials/miRNAseq_basic/intro_miRNAseq/#preparing-your-laptop-prior-to-starting-this-workshop","title":"Preparing your laptop prior to starting this workshop","text":"<ol> <li>Required softwares:   * Web browser is necessary (Chrome or FireFox are preferable.)</li> <li>Required Data:   * Required data will be directly downloaded from NCBI\u2019s GEO site and MiRBase database site.</li> </ol>"},{"location":"tutorials/miRNAseq_basic/intro_miRNAseq/#author-information","title":"Author Information","text":"<p>Written by: Chol-hee JUNG Melbourne Bioinformatics, University of Melbourne</p> <p>Created/Reviewed: March, 2020 Updated: Aug, 2020</p>"},{"location":"tutorials/miRNAseq_basic/intro_miRNAseq/#background","title":"Background","text":"<p>MicroRNA (miRNA) is a type of small non-coding RNA, which is typically ~21nt long and processed from a hairpin structured precursor (typically 60-120nt long). MiRNA is found in animals and plants, and involved in the gene-expression regulation in various mechanisms by binding to their target mRNAs (e.g., inducing degradation, inhibiting translation, etc.).</p>"},{"location":"tutorials/miRNAseq_basic/intro_miRNAseq/#section-1-basics-of-mirnas","title":"Section 1: Basics of miRNAs","text":"<p>In this section you will learn about some basics of miRNA-seq experiments.</p>"},{"location":"tutorials/miRNAseq_basic/intro_miRNAseq/#section-2-overview-of-mirna-seq-data-analysis-procedure","title":"Section 2: Overview of miRNA-seq data analysis procedure","text":"<p>In this section we will take a look at the overview of miRNA-seq analysis procedure. As shown in the image below, once library construction and sequencing are done as per the design of the experiment, the resulting sequencing data (FASTQ files) will go through two steps of quality control (QC). The first QC is for checking the sequencing quality. Popular FASTQ quality assessment tools, such as FastQC, should be able to report the overall quality of the sequencing data. FastQC also reports the over-represented sequences in the FASTQ file. This is particularly important for miRNA-seq. In miRNA-seq data the 3\u2019-adapter sequence almost always appears in every read, because the typical read-length of sequencing machines exceed the full length of mature miRNAs. Unless there is a serious contamination, the most over-represented sequence in the FASTQ file should be the 3\u2019adapter sequence. Unlike 3\u2019-adapter sequence, 5\u2019-adapter sequence should be appear in the FASTQ file. If it does, it would mean poor library quality or poor sequencing quality. Once the over-represented sequences are identified as 3\u2019-adapter sequence, sequence trimming tools, such as Trimmomatic, can trim out from each read the adapter sequence and/or prevailing or trailing poor quality regions. The second QC checks more specifically for the library quality. At this stage, 3\u2019-adapter sequence should be removed from the sequencing data. Without 3\u2019-adapter sequence, each read should contains only the mature miRNA sequence, the length of which typically ranges 20-25nt. If the trimmed sequences include a large quantity of sequence reads that are outside of this size-range, it may mean high level of contamination at the library construction stage. After two-steps of QC, when all look good, the trimmed reads will be mapped to the genome. From this alignment result, the expression level known miRNAs can be  measured, and novel miRNAs can be also identified and quantified. Known/unknown miRNAs were identified and quantified across samples from multiple groups (e.g., disease vs control), differential expression analysis can follow using other popular tools, such as edgeR. </p>"},{"location":"tutorials/miRNAseq_basic/intro_miRNAseq/#section-3-example-dataset-from-ncbi-geo","title":"Section 3: Example dataset from NCBI GEO","text":"<p>In this section, we will import the example dataset to Galaxy for the analysis.</p>"},{"location":"tutorials/miRNAseq_basic/intro_miRNAseq/#example-dataset-from-ncbi-geo","title":"Example dataset from NCBI GEO","text":"<p>GSE: GSE56862 SRA: SRP041228  This GEO dataset GSE56832 consist of 12 samples, including 7 small RNA-seq samples and 5 RNA-seq samples. The GSE dataset page from the link contains the description of the study using this dataset. Briefly, this study examines the biogenesis of miRNAs by the Microprocessor complex. The actual raw sequencing data are separately deposited in Sequence Read Archive (SRA) with the ID SRP041228. Although there are a total of 12 samples in this dataset, we will use only 4 of them with individual sample accession IDs from GSM1370365 through to GSM1370368 as below.</p> Sample Description SRX ID SRR ID GSM1370365 Hela_repA_smallRNASeq SRX518817 SRR1240812 GSM1370366 Hela_repB_smallRNASeq SRX518818 SRR1240813 GSM1370367 A549_repA_smallRNASeq SRX518819 SRR1240814 GSM1370368 A549_repB_smallRNASeq SRX518820 SRR1240815"},{"location":"tutorials/miRNAseq_basic/intro_miRNAseq/#1-download-example-sequences","title":"1. Download example sequences","text":"<p>Raw FASTQ files for the 4 small RNA-seq samples need to be downloaded to Galaxy. Galaxy has a functionality to directly retrieve data from SRA using the accession IDs. a. \u2018Get Data\u2019 -&gt; \u2018Download and Extract Reads in FASTA/Q\u2019 Put a SRR ID (e.g, SRR1240812) in the \u2018Accession\u2019 box  </p> <p>b. Repeat for three other SRR IDs. It may take some time to complete this task. When completed the downloaded FASTQ files will appear in the \u2018History\u2019 panel on the right-hand side of the screen. Clicking on the \u2018View data\u2019 icon show top lines of the imported FASTQ file as below. </p> <p>c. Rename the uploaded data to more appropriate names by clicking on \u2018Edit attributes\u2019 icon</p> <p>e.g., \u2018SRR1240812\u2019 to \u2018Hela repA FASTQ\u2019, \u2018SRR1240813\u2019 to \u2018Hela repB FASTQ\u2019, \u2018SRR1240814\u2019 to \u2018A549 repA FASTQ\u2019, \u2018SRR1240815\u2019 to \u2018A549 repB FASTQ\u2019</p> <p> </p> <p>d. Alternatively, the raw FASTQ files can be downloaded to local computer and be uploaded using \u2018Get Data\u2019 -&gt; \u2018Upload File\u2019. (need a screenshot)</p>"},{"location":"tutorials/miRNAseq_basic/intro_miRNAseq/#2-upload-reference-mirna-data-from-mirbase","title":"2. Upload reference miRNA data from miRBase","text":"<p>MiRDeep2 uses sequences of known miRNAs (both precursor and mature) as reference to identify which miRNAs are present in the input data. In this tutorial, we will use the miRNA sequences deposited in miRBase database (ref). The reference precursor miRNAs and mature miRNA sequences can be downloaded to local computer from the miRBase FTP site, and be uploaded to Galaxy. But, Galaxy can also fetch files directly as using the URL of files: </p> <p>a. \u2018Get Data\u2019 -&gt; \u2018Upload File\u2019 -&gt; \u2018Paste/Fetch data\u2019 Copy and paste the URLs below into the text box, and set the \u2018Type\u2019 to \u2018fasta.gz\u2019. Leave other parameters as default.</p> <p>ftp://mirbase.org/pub/mirbase/CURRENT/hairpin.fa.gz ftp://mirbase.org/pub/mirbase/CURRENT/mature.fa.gz</p> <p></p>"},{"location":"tutorials/miRNAseq_basic/intro_miRNAseq/#section-4-quality-control-and-pre-processing","title":"Section 4: Quality control and pre-processing","text":"<p>In this section we will check the quality of the 4 small RNA-seq data uploaded to Galaxy. As mentioned above, we will use FastQC and Trimmomatic. Quality control and pre-processing include the checking of general sequencing quality, adapter-contamination and the removal of any un-wanted parts from the sequencing data. FastQC examines the sequencing quality, and Trimmomatic cleans up the sequencing data.</p>"},{"location":"tutorials/miRNAseq_basic/intro_miRNAseq/#1-check-sequencing-quality","title":"1. Check sequencing quality","text":"<p>a. \u2018FASTQ Quality Control\u2019 -&gt; \u2018FastQC\u2019 All four FASTQ files can be selected at once.</p> <p></p> <p>b. In most cases, the sequence reads are longer than mature miRNA sequences. In consequence, 3\u2019-adapter sequence is left in the FASTQ file. In contrast, 5\u2019-adapter sequence should not be present in the FASTQ file. It this is from one\u2019s own analysis, the information of 3\u2019-adapter sequence would be probably provided. However, if the adapter sequence is unknown, it could be identified from FastQC reports. Among the over-represented sequences, the sequence in the first row takes up ~64% of all sequences of Hela_repA. Also, the whole 50bp region is identical to a known RNA PCR primer sequence with 100% identity. This is likely the adapter sequence to be removed before further analysis.</p> <p></p>"},{"location":"tutorials/miRNAseq_basic/intro_miRNAseq/#2-trim-out-adapter-sequence-and-low-quality-region","title":"2. Trim out adapter sequence and low-quality region","text":"<p>a. \u2018FASTA/FASTQ\u2019 -&gt; \u2018Trimmomatic\u2019 b. Select all 4 FastQ files c. \u2018Yes\u2019 to \u2018Perform initial ILLUMINACLIP step?\u2019 d. \u2018Custom\u2019 to \u2018Select standard adapter sequences or provide custom?\u2019 and paste in the most over-represented RNA PCR Primer sequence in FASTA format e.g. &gt;primer TGGAATTCTCGGGTGCCAAGGAACTCCAGTCACATCACGATCTCGTATGC</p> <p></p> <p>e. \u2018Execute\u2019</p> <p>f. Rename Trimmomatic results to more appropriate names e.g., \u2018Trimmomatic on Hela repA FASTQ\u2019 to \u2018Hela repA trimmed\u2019</p> <p></p>"},{"location":"tutorials/miRNAseq_basic/intro_miRNAseq/#3-run-fastqc-again-on-the-trimmed","title":"3. Run FastQC again on the trimmed","text":"<p>It is always a good idea to check the quality of the pre-processed data, which are the result files from Trimmomatic, in this case. Thus, FastQC run at this stage is mainly for checking on read-length distribution. a. \u2018FASTQ Quality Control\u2019 -&gt; \u2018FastQC\u2019 </p> <p>b. \u2018Execute\u2019</p> <p>c. After adapter-trimming, sequences of typical miRNA-sizes are enriched. Note that this sample contains miRNAs and other types of small RNAs. So, we should expect to see peaks at the sizes outside of typical miRNA lengths.  </p>"},{"location":"tutorials/miRNAseq_basic/intro_miRNAseq/#section-5-running-mirdeep2","title":"Section 5: Running miRdeep2","text":"<p>In this section we will run MiRDeep2 to identify and quantify known human miRNAs present in the sequencing data. First, the pre-processed sequencing data will be mapped to the reference genome using \u2018MiRDeep2 Mapper\u2019. By default, pre-processed reads are collapsed before mapping. I.e., identical reads become a single read, but the total number of identical reads is kept in the sequence description line. This reduces the mapping time.</p>"},{"location":"tutorials/miRNAseq_basic/intro_miRNAseq/#1-run-mirdeep2-mapper-on-built-in-genome-hg38-with-trimmed-sequences","title":"1. Run \u2018MiRDeep2 Mapper\u2019 on built-in genome (hg38) with trimmed sequences","text":"<p>a. Select all 4 trimmed results </p> <p>b. Select \u2018Clip Sequence\u2019 to clip 3\u2019-Adapter Sequence and insert the adapter sequence used for Trimmomatic. c. Select \u2018Human (Homo sapiens) (b38): hg38\u2019 in \u2018Select a reference genome\u2019 </p> <p>d. \u2018Execute\u2019 This may take a while.</p> <p>e. Rename the mapping results to more appropriate names e.g., \u2018Collapsed reads of MiRDeep2 Mapper on data 16\u2019 to \u2018Hela repA mapped\u2019</p>"},{"location":"tutorials/miRNAseq_basic/intro_miRNAseq/#2-run-mirdeep2-quantifier-on-mirdeep2-mapper-results","title":"2. Run \u2018MiRDeep2 Quantifier\u2019 on \u2018MiRDeep2 Mapper\u2019 results","text":"<p>a. In \u2018Collapsed deep sequencing reads\u2019, Select all four \u2018MirDeep2 Mapper\u2019 results. b. Select \u2018ftp://mirbase.org/pub/mirbase/CURRENT/hairpin.fa.gz\u2019 for \u2018Precursor sequences\u2019 c. Select \u2018ftp://mirbase.org/pub/mirbase/CURRENT/mature.fa.gz\u2019 for \u2018Mature miRNA sequences\u2019 d. Select \u2018human\u2019 for \u2018Search in species\u2019 </p> <p>e. \u2018Execute\u2019 This may take a while.</p> <p>f. Rename the quantification results to more appropriate names e.g., \u2018output of MiRDeep2 Quantifier on data 7, data 6, and data 20\u2019 to \u2018MiRDeep2 Quantifier on Hela repA\u2019 \u2018MiRDeep2 Quantifier on data 7, data 6, and data 20 (html report)\u2019 to \u2018MiRDeep2 Quantifier on Hela repA (html report)\u2019</p>"},{"location":"tutorials/miRNAseq_basic/intro_miRNAseq/#3-inspect-the-quantification-results","title":"3. Inspect the quantification results.","text":"<p>\u2018MirDeep2 Quantifier\u2019 generates two output files: quantification table and detailed HTML report of the miRNA quantification. a. \u2018MiRDeep2 Quantifier on A549 repB\u2019 shows the number of reads associated to each of known miRNA in the reference data. In this example, \u2018read_count\u2019, \u2018total\u2019 and \u2018seq\u2019 columns have the same raw-read counts, which could be used for the subsequent differential expression analysis. </p> <p>b. \u2018MiRDeep2 Quantifier on A549 repB (html report)\u2019 show the same read-count table with links to detailed information. </p>"},{"location":"tutorials/miRNAseq_basic/intro_miRNAseq/#section-6-generate-a-single-read-count-matrix","title":"Section 6: Generate a single read-count matrix","text":"<p>In this section we will merge the individual quantification results into one read-count matrix, which can be used for differential expression analysis. \u2018MiRDeep2 Quantifier\u2019 output data for each of 4 samples will be merged into one big table, and relevant columns will be extracted from the merged table.</p>"},{"location":"tutorials/miRNAseq_basic/intro_miRNAseq/#1-merge-read-count-columns-from-four-quantification-results-into-one-table","title":"1. Merge read-count columns from four quantification results into one table.","text":"<p>a. \u2018Text Manipulation\u2019 -&gt; \u2018Paste\u2019. Select \u2018output of MiRDeep2 Quantifier on Hela repA\u2019 for the first drop-down box, and \u2018output of MiRDeep2 Quantifier on Hela repB\u2019 for the second drop-down box. </p> <p>b. Repeat the \u2018Paste\u2019 with the previous \u2018Paste\u2019 result and another quantification output: \u2018Paste on data 39 and data 37\u2019 for the first drop-box\u2019 and \u2018output of MiRDeep2 Quantifier on A549 repA\u2019 </p> <p>c. Repeat \u2018b\u2019 for \u2018output of MiRDeep2 Quantifier on A549 repB\u2019 The result is a table of 24 columns, because 4 tables of 6 columns were merged side-by-side. </p>"},{"location":"tutorials/miRNAseq_basic/intro_miRNAseq/#2-extract-the-read-count-matrix","title":"2. Extract the read-count matrix","text":"<p>The merged table from the previous step has lots of redundant columns. So, we\u2019ll have to extract only read-count columns. Also, miRNA IDs are not appropriate for unique identifier, because there could be multiple copies of precursor miRNAs originating the same miRNAs. For example, \u2018hsa-let-7a-5p\u2019 appears 3 times in the table, because there are 3 copies of \u2018hsa-let-7a\u2019 (hsa-let-7a-1, hsa-let-7a-2 and hsa-let-7a-3). So, we\u2019ll combine the precursor ID and mature miRNA ID with \u2018.\u2019 in-between.</p> <p>a. \u2018Text Manipulation\u2019 -&gt; \u2018Add column\u2019 \u2018Add this value\u2019: \u2018.\u2019 \u2018to Dataset\u2019: \u201838: Paste on data 34 and data 37\u2019 </p> <p>The resulting table has a column on \u2018.\u2019 at the right-most end (column 25). </p> <p>b. \u2018Merge Columns\u2019-&gt; \u2018+Insert Columns\u2019 button (we\u2019re merging 3 columns). \u2018Select data\u2019: result of the previous step (e.g., \u201848: Add column on data 47\u2019) \u2018Merge column\u2019: \u2018column: 3\u2019 (column for \u2018precursor\u2019) \u2018with column\u2019: \u2018column: 25\u2019 (added column in the previous step, containing only \u2018.\u2019) \u2018Add column\u2019: \u2018Column: 1\u2019 (column for \u2018mature miRNA\u2019) </p> <p>c. \u2018Cut\u2019 Input \u2018c26,c2,c8,c14,c20\u2019 \u2018c26\u2019 (Column 26) is the newly added column containing the new ID, which is precursor name followed by \u2018.\u2019 and mature miRNA name. c2, c8, c14 and c20 are columns for read-counts. </p> <p>d. The resulting table has only the new IDs and four read-count columns. </p> <p>e. The merged table include all known miRNAs in the reference data. But they aren\u2019t always expressed. We\u2019re keeping in miRNAs that were expressed at least in one sample. \u2018Filter and Sort\u2019 -&gt; \u2018Filter\u2019 Insert \u2018(c2+c3+c4+c5) &gt; 0\u2019 in \u2018With following condition\u2019 </p>"},{"location":"tutorials/miRNAseq_basic/intro_miRNAseq/#3-add-column-names-to-the-filtered-read-count-matrix","title":"3. Add column names to the filtered read-count matrix","text":"<p>The filtered table has no column names. The easiest way to add them in is downloading the table file, adding the header using a text editor and re-uploading the new file. a. Download the filtered table by clicking on \u2018Download\u2019 icon. b. Use any text editor to add the header line as below: \u2018precursor.miRNA    Hela_repA   Hela_repB   A549_repA   A549_repB\u2019 Remember to use \u2018tab\u2019 as separator </p> <p>c. Save and upload the edited table file \u2018Get Data\u2019 -&gt; \u2018Upload File\u2019 </p> <p>d. Rename the uploaded table to \u2018GSE56862 miRNAs read-counts\u2019 </p>"},{"location":"tutorials/miRNAseq_basic/intro_miRNAseq/#section-7-an-alternative-way-to-generate-a-single-read-count-matrix-optional","title":"Section 7: An alternative way to generate a single read-count matrix (optional)","text":"<p>In this section we will use a spreadsheet software and a text editor on your local computer to generate a single read-count matrix. Depending on your familiarity to those software, you may find it much easier to achieve the same thing that we did in the Section 6.</p>"},{"location":"tutorials/miRNAseq_basic/intro_miRNAseq/#section-8-basic-differential-expression-analysis","title":"Section 8: Basic differential expression analysis","text":"<p>In this section we will try a differential expression analysis on the miRNAs. Now, we have miRNA expression data from a subset of GSE56862 dataset. The miRNA expression data were now merged into a single read-count table, which can be analyzed by any count-based differential expression analysis tools. In this tutorial, we will use \u2018edgeR\u2019.</p> <p>a.  \u2018NGA: RNA Analysis\u2019 -&gt; \u2018edgeR\u2019 \u2018Single Count Matrix\u2019 \u2018Factor Name\u2019: \u2018cell_line\u2019 \u2018Groups\u2019: HeLa,HeLa,A549,A549 \u2018Contrast of Interest\u2019: HeLa-A549 </p> <p>b. Before the execution, we can choose to obtain the normalised counts, R scripts and R dataset from this edgeR analysis. </p> <p>c. \u2018edgeR\u2019 report </p> <p>d. Summary of differential expression test for each miRNA </p>"},{"location":"tutorials/miRNAseq_basic/intro_miRNAseq/#additional-reading-optional","title":"Additional reading (optional)","text":"<p>Once differentially expressed miRNAs are identified, one of the common subsequent analyses is looking for the (potential) target genes, which are the genes that  are regulated by miRNAs. Target gene analysis tools include miRanda and TargetScan among many. For example, \u2018miRanda\u2019 takes in a list of miRNAs of interest and retrieves the list of genes that have the target sites. Two miRNAs \u201clet-7e\u201d and \u201cmir-1\u201d were among the differentially expressed miRNAs in this tutorial. Searching for the target sites of these two miRNAs retrieved thousands of genes as below. </p>"},{"location":"tutorials/molecular_dynamics_101/","title":"Index","text":"<p>PR reviewers and advice: Thomas Coudrat</p> <p>Current slides: https://drive.google.com/open?id=1tm2UjKIBikFb9daYBI0z_53Agh4ktCt9lyNr0SH6GrY</p> <p>Other slides:</p> <ul> <li>None yet</li> </ul>"},{"location":"tutorials/molecular_dynamics_101/molecular_dynamics_101/","title":"Molecular Dynamics Tutorial - Introduction to cluster computing","text":""},{"location":"tutorials/molecular_dynamics_101/molecular_dynamics_101/#overview","title":"Overview","text":"<p>In the following tutorials we will be logging on to a high performance computer (HPC) to submit NAMD molecular dynamics (MD) jobs and visualising the results with the molecular visualization program VMD. As students have a vast range of skill levels and requirements, the tutorials are divided into two parts described below. Each tutorial is designed to be stand alone, start where you feel most comfortable and skip the exercises that are too simple.</p> <ul> <li> <p>MD tutorial - Introduction to cluster computing (this tutorial): If you have never launched a job on a cluster before, this tutorial is for you. Here we will simply copy across a bare minimum directory containing input files ready to go for a short NAMD simulation. Once the job is finished, we will download the data to your local computer and visualize the trajectory with VMD.</p> </li> <li> <p>MD tutorial - Building input files: In this tutorial we will be introducing a more sophisticated directory structure using scripts to direct the output and run the job. We initially download a copy of the directory to our local computer where we then build up the input files using VMD. We then upload this directory to the cluster where we submit the job. Finally we will download the results back to our local computer to visualize with VMD.</p> </li> </ul>"},{"location":"tutorials/molecular_dynamics_101/molecular_dynamics_101/#learning-objectives","title":"Learning Objectives","text":"<p>At the end of the course, you will be able to:</p> <ul> <li>Log onto a high performance computer cluster</li> <li>Upload files to the cluster</li> <li>Submit a basic molecular dynamics job on the cluster</li> <li>Download the output and visualise the preliminary results</li> </ul>"},{"location":"tutorials/molecular_dynamics_101/molecular_dynamics_101/#requirements","title":"Requirements","text":"<p>This workshop is intended for scientists interested in learning the basics of running molecular dynamics on a HPC cluster.</p> <p>It is recommended that participants attend Introduction to High Performance Computing prior to this workshop. If you are not familiar with using the command line, please also attend the Introduction to Unix workshop.</p> <p>Please bring along your laptops with the following installed before arriving:</p> <ul> <li>VMD (http://www.ks.uiuc.edu/Research/vmd/)</li> <li>Putty (https://www.putty.org/) \u2013 only if you use Windows.</li> </ul> <p>Important: NAMD has specific licencing requirements. Users are required to agree to these requirements to use NAMD on the Melbourne Bioinformatics HPC clusters. Login on https://my.vlsci.org.au/, select \u2018Software agreement\u2019, \u2018Add software\u2019, \u2018NAMD\u2019.</p> <p>Note: this tutorial describes the use of Snowy, but all these steps can be carried out on Barcoo by substituting every instance of <code>snowy</code> for <code>barcoo</code>.</p> <p>Tutorials created by Mike Kuiper, edited by Thomas Coudrat.</p>"},{"location":"tutorials/molecular_dynamics_101/molecular_dynamics_101/#1-overview","title":"1 - Overview","text":"<p>The aim of this tutorial is to give the user experience to upload and submit a typical parallel job to the cluster, download the output, and visualize the preliminary results. Though this example is mostly relevant to those studying in the life sciences area, the workflow is representative of launching other parallel jobs.</p> <p>The program we shall use, NAMD, is a parallel, molecular dynamics simulation program developed by the Theoretical and Computational Biophysics Group at Illinois University at Urbana Champaign. It is particularly good at modelling large biomolecular systems using HPC clusters and is freely available for academic work. If you are interested in running NAMD simulations you should also install a local copy of VMD on your own computer. VMD is a molecular viewer program developed by the same group that can be used to help set up NAMD simulation and to help visualize NAMD output.</p>"},{"location":"tutorials/molecular_dynamics_101/molecular_dynamics_101/#2-basic-introduction-to-cluster-computing","title":"2 - Basic introduction to cluster computing","text":""},{"location":"tutorials/molecular_dynamics_101/molecular_dynamics_101/#a-logging-in-to-the-cluster","title":"a) Logging in to the cluster","text":"<p>Using a terminal on your local computer and your username and password, login to the HPC cluster.</p> <pre><code>ssh &lt;username&gt;@snowy.vlsci.unimelb.edu.au\n</code></pre> <p>You should see a welcome screen and a command line prompt. If you type <code>ls</code> at the prompt you should see a list of the files and directories - which should be nothing as we haven\u2019t put anything there yet!</p> <p>Note: be careful to use the right terminal when you are typing in commands! Sometimes you need to type the commands on the cluster terminal, and sometimes on your local terminal. You can tell which is which by looking at the command line prompt. When you are logged into the cluster, you should see the machine name at the prompt, for example:</p> <p><code>[&lt;username&gt;@snowy ~]$</code>               &lt;- tells you your terminal is on Snowy</p>"},{"location":"tutorials/molecular_dynamics_101/molecular_dynamics_101/#b-copy-across-files-starting-the-job","title":"b) Copy across files, starting the job","text":"<p>We\u2019ll need to copy across the basic example directory to our working directory on Snowy. Do this with:</p> <pre><code>cp -r /vlsci/examples/namd/Namd_simple_example_01 .\n</code></pre> <p>Note that the dot is important!</p> <p>Change into this directory and launch the job with the command <code>sbatch</code> and the sbatch script.</p> <pre><code>cd Namd_simple_example_01\n</code></pre> <p>Then type:</p> <pre><code>sbatch sbatch_namd_start_job\n</code></pre> <p>Your job has now been submitted to the cluster. Easy hey? Check the job is running with the <code>showq</code> command. (type it at the command line).</p> <p>Too much information? Try:</p> <pre><code>showq -u &lt;username&gt;\n</code></pre> <p>This particular job is very short compared to a regular NAMD simulation and should be finished in less than 4 minutes. As the job runs, various output files are produced but the main one you will be interested in is the trajectory file with the .dcd suffix.</p>"},{"location":"tutorials/molecular_dynamics_101/molecular_dynamics_101/#c-understanding-the-input-files","title":"c) Understanding the input files","text":"<p>While we wait, let\u2019s take a look at the sbatch example script to understand what is going on. Type:</p> <pre><code>less sbatch_namd_start_job\n</code></pre> <p><code>less</code> is a Unix file viewer. Press \u201cq\u201d to quit the viewing of the file</p> <p>You should see the lines:</p> <pre><code>#SBATCH --nodes=4\n</code></pre> <p>This line tells us how many cores we are to use for the job. Generally speaking, the more cores used the faster the job runs, but only to a point. Molecular dynamics jobs don\u2019t always scale efficiently so eventually more cores will actually run slower than less cores. This depends very much on the program you use and the architecture of the HPC.</p> <p>Now let us have a look at the NAMD configuration script:</p> <pre><code>less namd_1ubq_example.conf\n</code></pre> <p>Woah! There is quite a bit of information here, don\u2019t worry though. Most of the parameters stay the same for each simulation. Let us just point out the important bits. See the lines near the top:</p> <pre><code>structure    1ubq_example.psf\ncoordinates  1ubq_example.pdb\noutputName   1ubq_output_01\n</code></pre> <p>These are simply defining the input files, (the protein structure file .psf, and the coordinate file, .pdb) and also the name of the output files.</p> <p>Further down you will see:</p> <pre><code>set Temp    310\ntemperature $Temp\n</code></pre> <p>Which is setting the temperature to 310 K (37 C) while below that we have:</p> <pre><code>## Parameter file\n\nparaTypeCharmm  on\nparameters      par_all27_prot_na.prm\n</code></pre> <p>which tells NAMD which parameter file to use. (you\u2019ll see a copy of the parameter file in the NAMD_example directory). Depending on what molecules you have in your simulation, you may need to use a more detailed parameter file.</p> <p>Somewhere in the middle you will see these lines:</p> <pre><code>## Periodic Boundary Conditions\n\ncellBasisVector1  48. 0.  0.\ncellBasisVector2  0. 48.  0.\ncellBasisVector3  0.  0. 48.\ncellOrigin        0   0   0\nwrapAll on\nwrapWater on\n</code></pre> <p>This defines the boundary conditions (a cheats way to simulate an infinite system), where a molecule coming off one side of the boundary will reappear on the other.</p> <p>Near the bottom we have the lines:</p> <pre><code>## Output files\n\nrestartfreq 5000\ndcdfreq 100\nxstFreq 100\noutputEnergies 100\noutputPressure 100\noutputTiming 100\n</code></pre> <p>These lines tell us how often to write out to the output files. The most important is the <code>dcdfreq</code>, (here set to 100), or how often to save a frame of the dynamics trajectory. (Usually this is set around 5,000 to 10,000). The .dcd output file can become ridiculously HUGE if this is too small. 100 is OK for this short example. Just remember to change it for a much larger value in your own runs!</p> <p>The last few line in the configuration file:</p> <pre><code>## Minimize, reinitialize velocities, run dynamics\n\nminimize 500\nrun 10000\n</code></pre> <p>tell us that the simulation is first minimized for 500 steps (a good idea to iron out bad contacts and steric clashes, but usually set to 1000 steps or more), and then told to run only a mere 10,000 steps. (This is a very short example!). Typically you might set \u201crun\u201d to 10,000,000 or more.</p> <p>Press \u201cq\u201d to quit viewing the configuration file.</p> <p>Check again on the status of your job:</p> <pre><code>showq -u &lt;username&gt;\n</code></pre> <p>If you don\u2019t see anything it probably means the job has finished. List your directory using the command <code>ls -lrt</code> and you should see something like:</p> <pre><code>[mike@snowy Namd_simple_example_01]$ ls -rlt\ntotal 17088\n-rw-r--r-- 1 mike VR0021   243622 Dec  8 11:40 par_all27_prot_na.prm\n-rw-r--r-- 1 mike VR0021      655 Dec  8 11:40 sbatch_namd_start_bluegene\n-rw-r--r-- 1 mike VR0021     3932 Dec  8 11:40 namd_1ubq_example.conf\n-rw-r--r-- 1 mike VR0021   814960 Dec  8 11:40 1ubq_example.pdb\ndrwxr-xr-x 2 mike VR0021      512 Dec  8 11:40 BUILD_DIR\n-rw-r--r-- 1 mike VR0021      700 Dec  8 11:40 sbatch_namd_restartjob_bluegene\n-rw-r--r-- 1 mike VR0021  1182412 Dec  8 11:40 1ubq_example.psf\n-rw-r--r-- 1 mike VR0021     4508 Dec  8 11:40 namd_1ubq_restart_example.conf\n-rw-r--r-- 1 mike VR0021      159 Dec  8 11:40 slurm-2746442.out\n-rw-r--r-- 1 mike VR0021     1371 Dec  8 11:40 FFTW_NAMD_2.9_BlueGeneQ.txt\n-rw-r--r-- 1 mike VR0021   247564 Dec  8 11:41 1ubq_output.restart.coor.old\n-rw-r--r-- 1 mike VR0021   247564 Dec  8 11:41 1ubq_output.restart.vel.old\n-rw-r--r-- 1 mike VR0021      216 Dec  8 11:41 1ubq_output.restart.xsc.old\n-rw-r--r-- 1 mike VR0021   247564 Dec  8 11:42 1ubq_output.restart.coor\n-rw-r--r-- 1 mike VR0021   247564 Dec  8 11:42 1ubq_output.restart.vel\n-rw-r--r-- 1 mike VR0021      218 Dec  8 11:42 1ubq_output.restart.xsc\n-rw-r--r-- 1 mike VR0021     8417 Dec  8 11:42 1ubq_output.xst\n-rw-r--r-- 1 mike VR0021 13005576 Dec  8 11:42 1ubq_output.dcd\n-rw-r--r-- 1 mike VR0021      215 Dec  8 11:42 1ubq_output.xsc\n-rw-r--r-- 1 mike VR0021   247564 Dec  8 11:42 1ubq_output.coor\n-rw-r--r-- 1 mike VR0021   247564 Dec  8 11:42 1ubq_output.vel\n-rw-r--r-- 1 mike VR0021   425681 Dec  8 11:43 Namd_1ubq_example_output.txt\n</code></pre> <p>The highlighted .dcd file is the main output file while the .xsc, .coor, .vel files all have to do with being able to restart the simulation at a later date, while the <code>Namd_1ubq_example_output.txt</code> file contains the text output from the simulation.</p> <p>Congratulations!</p> <p>You have just run a short molecular dynamics simulation on the cluster. Next, we\u2019ll copy that information back to your local computer and use VMD to visualize the results.</p> <p>Now on to part 2, visualizing the results with VMD.</p>"},{"location":"tutorials/molecular_dynamics_101/molecular_dynamics_101/#3-visualizing-namd-results-with-vmd","title":"3 - Visualizing NAMD results with VMD","text":"<p>In this section you will be using the molecular visualization program VMD to look at the trajectory data of the ubiquitin protein you generated in the first part of the tutorial. If you haven\u2019t already done so, download and install VMD to your local computer (make sure to pick the right flavour: Windows, Mac or Linux).</p> <p>Tip: the most confusing part of this exercise seems to be remembering to use the right terminal! That is, either one is connected to the cluster, or one is running on your local computer. The exercises we just ran were on the cluster. That is, a terminal which we used to connect to the Snowy cluster using the program ssh.</p> <p>You can usually tell which computer you are logged into by the terminal command line: for example the terminal command line:</p> <p><code>[mike@snowy Namd_simple_example_01]$</code></p> <p>tells me I am logged into Snowy, in the <code>Namd_simple_example_01</code> directory.</p> <p>Compared to my local terminal command line:</p> <p><code>mike@axion:~$</code></p> <p>tells me I am on my local machine (called \u201caxion\u201d in this case).</p> <p>Download the entire NAMD example directory back to your local computer. For example, in Linux you can type in your local computer terminal: (if you see <code>snowy</code> in the command line prompt you are typing in the wrong terminal!)</p> <pre><code>scp -r &lt;username&gt;@snowy.vlsci.unimelb.edu.au:Namd_simple_example_01 .\n</code></pre> <p>What to do if your simulations didn\u2019t run.</p> <p>If for some reason your simulations didn\u2019t run properly you can download a copy of the precomputed data to your local computer by using the following command command from a local terminal:</p> <pre><code>scp -r &lt;username&gt;@snowy.vlsci.unimelb.edu.au:/vlsci/examples/namd/Namd_simple_example_01_finished .  \n</code></pre> <p>You can now start VMD locally and load up the trajectory data. In a new local terminal type:</p> <pre><code>vmd\n</code></pre> <p>Note: On Windows, start VMD from the Program menu, under the folder University of Illinios. If this doesn\u2019t work, there could be a problem with defining the path to vmd on your computer.</p> <p>Two new windows should pop up.</p> <p>The main panel:</p> <p></p> <p>The display:</p> <p></p> <p>And the terminal should turn into the console:</p> <p></p>"},{"location":"tutorials/molecular_dynamics_101/molecular_dynamics_101/#a-reading-structure-data-files-into-vmd","title":"a) Reading structure data files into VMD","text":"<p>The first file you need to read into VMD is the protein structure file, (1ubq_example.psf in this case). The .psf file contains important information about the system such as which atoms are bonded together, what charge they are, and the mass of each atom type, but does not contain any spatial information.</p> <p>From the main panel:</p> <p>File \u2192 New molecule \u2192 (browse: 1ubq_example.psf) \u2192 load</p> <p>You should see nothing in the display, but an entry in the Main panel. Next load the coordinates from the .pdb file. First, select the 1ubq_example.psf entry in the VMD main panel, then:</p> <p>File \u2192 Load data onto molecule \u2192 (browse: 1ubq_example.pdb) \u2192 load</p> <p>Now you should have the model in the display that can be moved around with the mouse. This is the initial starting position of the simulation. Next load in the trajectory data into VMD (again, select the entry in the VMD main panel):</p> <p>File \u2192 Load data onto molecule \u2192 (browse:1ubq_output.dcd) \u2192 load</p> <p>This data represents the \u201cmolecular movie\u201d or trajectory of how the atoms in the model moved around during the course of the NAMD simulation. You can play the trajectory by clicking the bottom right arrow of the main panel. (Use the speed scroll bar to the left of that button to slow it down).</p> <p>What you are seeing represents the molecular motion of the protein on an extremely small time scale. The NAMD program calculates how the molecule moves over time given certain parameters such as temperature. These models and simulations can give insight into how proteins behave and their role in biological function and certain diseases.</p> <p>From the main panel you can bring up the graphical representations window to play with more rendering types: - try them out!</p> <p>Graphics \u2192 Representations</p> <p>And this conclude the basic tutorial to running a simple job on a cluster. Wasn\u2019t so scary now was it?</p> <p>Please play around with VMD. Once you feel comfortable, try start the next tutorial: Molecular dynamics - Building input files</p>"},{"location":"tutorials/molecular_dynamics_201/","title":"Index","text":"<p>PR reviewers and advice: Thomas Coudrat</p> <p>Current slides: https://drive.google.com/open?id=1cJoL7WI-GHIr2iMFm_R9lXrYXiM4kdTBujzpUJH8x0c</p> <p>Other slides:</p> <ul> <li>None yet</li> </ul>"},{"location":"tutorials/molecular_dynamics_201/molecular_dynamics_201/","title":"Molecular Dynamics Tutorial - Building input files, visualising the trajectory","text":""},{"location":"tutorials/molecular_dynamics_201/molecular_dynamics_201/#overview","title":"Overview","text":"<p>In the following tutorials we will be logging on a high performance computer (HPC) to submit NAMD molecular dynamics (MD) jobs and visualising the results with the molecular visualization program VMD. As students have a vast range of skill levels and requirements, the tutorials are divided into two parts described below. Each tutorial is designed to be stand alone, start where you feel most comfortable and skip the exercises that are too simple.</p> <ul> <li> <p>MD tutorial - Introduction to cluster computing: If you have never launched a job on a cluster before, this tutorial is for you. Here we will simply copy across a bare minimum directory containing input files ready to go for a short NAMD simulation. Once the job is finished, we will download the data to your local computer and visualize the trajectory with VMD.</p> </li> <li> <p>MD tutorial - Building input files (this tutorial): In this tutorial we will be introducing a more sophisticated directory structure using scripts to direct the output and run the job. We initially download a copy of the directory to our local computer where we then build up the input files using VMD. We then upload this directory to the cluster where we submit the job. Finally we will download the results back to our local computer to visualize with VMD.</p> </li> </ul>"},{"location":"tutorials/molecular_dynamics_201/molecular_dynamics_201/#learning-objectives","title":"Learning Objectives","text":"<p>At the end of the course, you will be able to:</p> <ul> <li>Log onto a high performance computer cluster</li> <li>Upload files to the cluster</li> <li>Submit a basic molecular dynamics job on the cluster</li> <li>Download the output and visualise the preliminary results</li> </ul>"},{"location":"tutorials/molecular_dynamics_201/molecular_dynamics_201/#requirements","title":"Requirements","text":"<p>This workshop is intended for scientists interested in learning the basics of running molecular dynamics on a HPC cluster.</p> <p>It is recommended that participants attend Introduction to High Performance Computing prior to this workshop. If you are not familiar with using the command line, please also attend the Introduction to Unix workshop.</p> <p>Please bring along your laptops with the following installed before arriving:</p> <ul> <li>VMD (http://www.ks.uiuc.edu/Research/vmd/)</li> <li>Putty (https://www.putty.org/) \u2013 only if you use Windows.</li> </ul> <p>Important: NAMD has specific licencing requirements. Users are required to agree to these requirements to use NAMD on the Melbourne Bioinformatics HPC clusters. Login on https://my.vlsci.org.au/, select \u2018Software agreement\u2019, \u2018Add software\u2019, \u2018NAMD\u2019.</p> <p>Note: this tutorial describes the use of Snowy, but all these steps can be carried out on Barcoo by substituting every instance of <code>snowy</code> for <code>barcoo</code>.</p> <p>Tutorials created by Mike Kuiper, edited by Thomas Coudrat.</p>"},{"location":"tutorials/molecular_dynamics_201/molecular_dynamics_201/#1-overview","title":"1 - Overview","text":"<p>The aim of this tutorial is to give more advanced lessons in setting up and preparing molecular dynamics jobs for submission to the HPC cluster. It is assumed that the user has a basic command of visualization programs such as VMD and has had at least some experience launching and retrieving example tutorial jobs to the cluster, as shown in our introductory molecular dynamics tutorial.</p> <p>Tip: in conjunction with this tutorial there are some excellent NAMD tutorials available that are worth working through.</p>"},{"location":"tutorials/molecular_dynamics_201/molecular_dynamics_201/#2-namd-overview","title":"2 - NAMD overview","text":""},{"location":"tutorials/molecular_dynamics_201/molecular_dynamics_201/#a-recap-what-weve-done-so-far","title":"a) Recap: what we\u2019ve done so far","text":"<p>In the previous introductory tutorial we simply launched a short job on the cluster that already had all the required input files to simulate a ubiquitin protein molecule in solution.</p> <p>To run a molecular dynamics simulation on a cluster, the minimum files we need are:</p> <p><code>&lt;filename&gt;.psf</code> - protein structure file. A list of the atoms, masses, charges and connections between atoms.</p> <p><code>&lt;filename&gt;.pdb</code> - protein database file. The actual starting coordinates of the models. This has to be the same order as the psf file.</p> <p><code>&lt;filename&gt;.conf</code> - NAMD configuration file. Tells NAMD how to run the job.</p> <p><code>par_all27_prot_na.par</code> - a parameter file. (there are different types of these depending on the classes of molecules you have in your model, such as lipids or DNA). It is used by NAMD to run the simulation, basically a list of all the bonds, angles, dihedrals, improper and VdW terms.</p> <p><code>sbatch_batchfile</code> - a script file to launch the job on the cluster depending on the scheduler used (i.e. PBS or Slurm). Tells the cluster how to run the NAMD job and how many cores to use.</p> <p>In our introductory tutorial all we had to do was launch the job. We will now go through the process of building a NAMD input files from scratch.</p>"},{"location":"tutorials/molecular_dynamics_201/molecular_dynamics_201/#b-building-namd-input-files-overview","title":"b) Building NAMD input files overview","text":"<p>In order to build input files for NAMD, we will need a pdb file giving the initial coordinates. We usually get these files from the pdb database. These initial pdb files however are often not ideal, with missing residues and odd chain names making the process more complicated!</p> <p>To generate NAMD input files, we will use the psfgen module within VMD, together with pdb and topology files, to generate a new pdb file and psf file.</p> <p>In a flowchart, the process looks something like this:</p> <p></p>"},{"location":"tutorials/molecular_dynamics_201/molecular_dynamics_201/#c-the-namd_intermediate_template-directory-structure","title":"c) The Namd_intermediate_template directory structure","text":"<p>Note: one problem with running molecular dynamics simulations is that you can very quickly build up a mess of output files with the resulting directory becoming disorganized and difficult to navigate. (If you ran the introductory tutorial you may have noticed a lot more files at the end of the run with no particular order!). One solution to this is to have specific directories for certain tasks and using scripts to redirect outputs.</p> <p>In the next exercise we will download a template directory within which we will build our model and setup our simulation. We will use more sophisticated scripts to launch and manage our jobs that will direct output to appropriate directories.</p> <p>This directory is found on Snowy, under /vlsci/examples/namd/Namd_intermediate_template.</p> <p>It has a particular directory structure as follows:</p> <pre><code>/Namd_intermediate_template\n\n    sbatch_start            \u2190 script to start equilibration phase\n    sbatch_production       \u2190 script to start production phase\n\n    sim_opt.conf            \u2190 Namd configuration file for optimization\n    sim_production.conf     \u2190 Namd configuration file for production run\n\n    project_plan.txt        \u2190 A guide to thinking about your simulation\n    counter.txt             \u2190 File for keeping track of job number\n    max_jobnumber.txt       \u2190 Defines maximum number of jobs\n\n    /BUILD_DIR              \u2190 this is where we will build our models\n\n    /Errors                 \u2190 errors go here\n\n    /Examples               \u2190 find some example files here\n\n    /InputFiles             \u2190 our input files go here\n        /Parameters\n\n    /JobLog                 \u2190 details of our running jobs end up here\n\n    /LastRestart            \u2190 If we need to restart a job\n\n    /OutputFiles            \u2190 Our NAMD output goes here\n\n    /OutputText             \u2190 Text output from the job\n\n    /RestartFiles           \u2190 Generic restart files saved here\n</code></pre> <p>Rather than running one long job, this template is designed to run into smaller stages. After we build a model and make the appropriate changes to the input files the run is started by launching:</p> <p><code>sbatch sbatch_start</code> (don\u2019t do this just yet!)</p> <p>This will launch a job using the sim_opt.conf configuration file which is designed to equilibrate the system. At the conclusion of the equilibration run, the script will automatically launch the production run: sbatch sbatch_production</p> <p>Production runs are designed to run less than 24 hours at a time, at the end of which restart files are saved and relaunch themselves for another 24 hour job. Every time they do, the script increases a counter.txt file by 1. Once that reaches the number in the MaxJobNumber.txt file, the job stops. For example, if a 24 hour job completes 5 nanoseconds of simulation a day, and we want a contiguous simulation of say 50 ns, then we\u2019d set the counter.txt file to 0 and the MaxJobNumber.txt to 10 and thus would expect the job to finish in 10 days. The advantage of running a series of smaller jobs rather than one long one is better scheduling on the cluster, and also better protection from data corruption should there be a hardware failure.</p> <p>The script also date stamps and directs the output to the appropriate folders. A complete dcd trajectory can be reconstructed from the ordered files in the /OutputFile directory.</p> <p>More of running a job later. First we need to build input files!</p>"},{"location":"tutorials/molecular_dynamics_201/molecular_dynamics_201/#3-building-a-hiv-protease-model","title":"3 - Building a HIV protease model","text":"<p>Download a copy of the Namd_intermediate_template to your local computer. We will prepare our files here and then upload them to the cluster once ready.</p> <pre><code>scp -r &lt;username&gt;@snowy.vlsci.unimelb.edu.au:/vlsci/examples/namd/Namd_intermediate_template .\n</code></pre> <p>Note: don\u2019t forget the dot at the end</p> <p>Change into the build directory:</p> <pre><code>cd Namd_intermediate_template/BUILD_DIR\n</code></pre> <p>We are going to build a model of HIV protease which is a dimer of two 99 amino acids protein monomers. First we need to extract the two chains as separate pdb files. We will use the RCSB entry 7hvp. Download the pdb file by clicking on \u201cDownload Files\u201d (right hand corner), PDB Format. On your local computer start VMD and load the newly downloaded 7hvp.pdb file by doing the following in the VMD main panel:</p> <p>File \u2192 New Molecule \u2192 Browse\u2026 \u2192 Load</p> <p>In this structure there are 3 \u201cchains\u201d. Chain A and B are the monomers and chain C is the inhibitor PRD_000228. Since there are water molecules associated with each chain selection we need to be more selective.</p> <p>Highlight the protein selection in the VMD main panel and then click:</p> <p>File \u2192 save coordinates</p> <p>In the \u201cselected atoms\u201d box of the save trajectory window type:</p> <pre><code>chain A and protein\n</code></pre> <p>Save the chain as a pdb file with a sensible name and a pdb extension into BUILD_DIR. (e.g. 7hvp_chainA.pdb)</p> <p>Repeat for chain B. Since the inhibitor is complicated we will leave chain C out for now for this exercise. We should now have two pdb files in the /BUILD_DIR which will be the basis of our model building, i.e.:</p> <pre><code>7hvp_chainA.pdb\n7hvp_chainB.pdb\n</code></pre> <p>We now have to use a text editor to change the build_example script to point to these files. Open the build_example file with a text editor.</p> <p>First thing to look for is that we are calling the right topology files. Since this example is only made from protein then the default topology file is fine (The _na part refers to nucleic acids).</p> <pre><code>package require psfgen\ntopology ../InputFiles/Parameters/top_all27_prot_na.rtf\n</code></pre> <p>If we were to be building a model with a lipid bilayer we would need to also include the topology file referring to lipids, i.e.:</p> <pre><code>topology ../InputFiles/Parameter/top_all27_prot_lipid.rtf\n</code></pre> <p>We now need to change and add \u201csegment\u201d lines to point to our new pdb chains.</p> <p>Edit:</p> <pre><code>segment A {pdb model_chainA.pdb}\nsegment B {pdb model_chainB.pdb}\n</code></pre> <p>to read:</p> <pre><code>segment A {pdb 7hvp_chainA.pdb}\nsegment B {pdb 7hvp_chainB.pdb}\n</code></pre> <p>We also need to change the \u201ccoordpdb\u201d lines to reflect our new chains.</p> <p>Edit:</p> <pre><code>coordpdb model_chainA.pdb A\ncoordpdb model_chainB.pdb B\n</code></pre> <p>to read:</p> <pre><code>coordpdb 7hvp_chainA.pdb A\ncoordpdb 7hvp_chainB.pdb B\n</code></pre> <p>Between the \u2018segment\u2019 and \u2018coordpdb\u2019 lines we can apply patches to make modifications to the protein. This is useful for example when adding disulphide bonds or phosphate groups or modifying the termini. We won\u2019t make any modifications for this example.</p> <p>Save and close the build_example script. We will now see if we can build the model using VMD from the command line.</p> <p>Type:</p> <pre><code>vmd -dispdev text -e build_example          \n</code></pre> <p>You should see some errors.</p> <p>This is because in the original chains A and B there are some modified alanine residues labeled ABA. Since the residues ABA are not defined in the topology files, vmd psfgen does not know how to build this model. Edit the 7hvp_chainA.pdb and 7hvp_chainB.pdb files and carefully change any occurrence of ABA to ALA.</p> <p>Note: spacing in pdb files is really important so don\u2019t mess it up!</p> <p>Re-run the above command. This should run vmd in text mode and read through the build script. If all goes well we should see 2 new files in the directory:</p> <pre><code>model_temp_x.psf\nmodel_temp_x.pdb\n</code></pre> <p>Note: here we use a \u201c_x\u201d notation to specify temporary files.</p> <p>Next load these files into VMD. From BUILD_DIR start vmd:</p> <pre><code>vmd model_temp_x.psf model_temp_x.pdb\n</code></pre> <p>We will now use the solvation module to center and create a solvent box around our protein. We will use dimensions of <code>80 x 64 x 64</code> \u00c5. Open the solvation window from the main panel:</p> <p>Extensions \u2192 Modeling \u2192 Add Solvation Box</p> <p>In this window do the following:</p> <ul> <li>toggle on the \u201crotate to minimize volume\u201d button.</li> <li>Change the Boundary number from \u201c2.4\u201d to \u201c1.8\u201d</li> <li>untoggle the \u2018use molecular Dimensions\u201d button.</li> <li>In the Box Size add:<ul> <li>min: x: -40 y: -32 z: -32</li> <li>max: x: 40 y: 32 z: 32</li> </ul> </li> <li>click \u201cSolvate\u201d</li> </ul> <p>We now should have two new files, solvate.psf and solvate.pdb, the solvated version of your original input. You should also your newly solvated system in the VMD display.</p> <p>Tip: you can quickly hide \u201cmodel_temp_x.psf\u201d and \u201cmodel_temp_x.pdb\u201d from the VMD display by double-clicking on \u2018D\u2019 (Drawn) next to these in the VMD main panel. This helps visualise the solvate.psf system.</p> <p>Now we can jump straight to adding ions. Adding ions makes the simulation more physiologically relevant and also balances charges. Open the ionization window:</p> <p>Extensions \u2192 Modeling \u2192 add ions</p> <p>In the \u201cAutoionize\u201d window simply toggle the \u201cneutralize and set NaCl concentration\u201d option and click \u201cAutoionize\u201d. We should get about 26 sodium ions and 30 chloride ions added to the system in two new files: ionized.psf and ionized.pdb.</p> <p>These are are final input files. We should now rename and move these files to a better location in the directory structure. In Linux we can use the command:</p> <pre><code>mv ionized.psf ../InputFiles/hiv_protease.psf\n</code></pre> <p>and</p> <pre><code>mv ionized.pdb ../InputFiles/hiv_protease.pdb\n</code></pre> <p>You can also now remove the old \u201csolvate\u201d and \u201c_x\u201d files to keep things tidy.</p>"},{"location":"tutorials/molecular_dynamics_201/molecular_dynamics_201/#4-preparing-the-configuration-files","title":"4 - Preparing the configuration files","text":"<p>By now we have prepared two new input files for a NAMD simulation called hiv_protease.psf and hiv_protease.pdb and placed them in the folder /InputFiles. We now need to make changes to the NAMD configuration files to match our new inputs. In the main directory (Namd_intermediate_template) we have two configuration files and two sbatch files:</p> <pre><code>sim_opt.conf\nsim_production.conf\nsbatch_start\nsbatch_production\n</code></pre>"},{"location":"tutorials/molecular_dynamics_201/molecular_dynamics_201/#a-edit-the-conf-files","title":"a) Edit the .conf files","text":"<p>Let us first edit the .conf files. Open the sim_opt.conf file.</p> <p>You can see that these two lines match our inputs (change them if you used a different name of the psf and pdb files):</p> <pre><code>structure   InputFiles/hiv_protease.psf\ncoordinates InputFiles/hiv_protease.pdb\n</code></pre> <p>The next thing we have to watch is that we have an appropriate parameter file pointed to. Since we have a simple protein model the default parameter file should be fine:</p> <pre><code>paraTypeCharmm  on\nparameters      InputFiles/Parameters/par_all27_prot_na.prm\n</code></pre> <p>If we were running lipids in the simulation or used a separately parameterized ligand we would add a few extra lines here, say for example:</p> <pre><code>parameters  InputFiles/Parameters/par_all27_prot_lipid.prm\nparameters  InputFiles/Parameters/par_for_ligand.prm\n</code></pre> <p>We also need to make changes to match our periodic boundary conditions (PBC).</p> <p>The way PBC works is that our simulation box has a certain rectangular geometry which is mirrored on all sides to mimic an infinite system. A molecule which falls out of the left and side of the box fall back in on the right hand side. A molecule that falls out of the bottom reappears at the top and so on. Care has to be given when building a solvated PBC system so that a protein molecule has enough room around its edges so that it doesn\u2019t interact with itself should it wander too close to a boundary.</p> <p>Since our box ended up being of dimensions 80 x 64 x 64 \u00c5, this is reflected in the PBC parameters here:</p> <pre><code>cellBasisVector1   80.  0.  0.\ncellBasisVector2    0. 64.  0.\ncellBasisVector3    0.  0. 64.\ncellOrigin          0   0   0\n</code></pre> <p>That should do it for the optimization configuration file. The idea of the optimization phase is to equilibrate your simulation and allow it to settle before running production runs. Typically we run this with a NPT ensemble, (whereby the number of particles (N) pressure (P) and temperature (T) remain constant). The volume is allowed to change as water and lipids can find their optimal density. At the end of the optimization phase, the sbatch_start script takes the generic output of the run and renames it to pass on to the production phase of the simulation. The sbatch_script will automatically launch the production phase on successful completion of the optimization phase.</p> <p>The sim_production.conf file controls how we run a segment of the production phase including the type of simulation and how long it runs. The file MaxJobNumber.txt determines how many times this production script is run. Each time a production segment finishes, output is date-stamped and placed in appropriate folders, while restart files are written, ready to launch the next segment. The number in the file counter.txt is increased by 1 to keep track of the jobs. Typically we aim to keep these segments running less than 24 hours at a time. This has a number of advantages, firstly, if the machine should have a failure the most you will loose is one days simulation which is easy to recover from the last restart file. Secondly, this strategy helps with efficiently filling the machine with jobs and keeping your groups quota available. Long jobs scheduled for weeks can tie up resources, quota and risk losing all the generated data should there be a failure in that time.</p> <p>Open the sim_production.conf file:</p> <p>Since we would like to run a relatively short job segment for this exercise, we will change the line:</p> <pre><code>set NumberSteps 2500\n</code></pre> <p>to:</p> <pre><code>set NumberSteps 20000\n</code></pre> <p>This segment will run for only 20,000 x 2 fs = 0.04 ns at a time. For example, if we set max_jobnumber.txt to be 5 then we will should get 0.2 ns worth of simulation.</p> <p>Edit the counter.txt file to contain the number 0. (The counter file is a way of running a certain number of jobs. This increments up after each job finished until it reaches the same as MaxJobNumber.txt and then stops). In linux we can simply use:</p> <pre><code>echo 0 &gt; counter.txt\n</code></pre> <p>Then edit the MaxJobNumber.txt file to contain the number 5. This will limit the total number of jobs run. Jobs will stop when counter.txt value is equal to or greater than the MaxJobNumber.txt value.</p> <pre><code>echo 5 &gt; MaxJobNumber.txt\n</code></pre> <p>We can always make this number bigger later and restart the jobs if we want things to go longer.</p> <p>For this short example we will also change more lines in the sim_production.conf file:</p> <pre><code>restartfreq     2500\ndcdfreq         5000\nxstFreq         5000\noutputEnergies  5000\noutputPressure  5000\noutputTiming    5000\n</code></pre> <p>to:</p> <pre><code>restartfreq     25000\ndcdfreq         5000\nxstFreq         5000\noutputEnergies  5000\noutputPressure  5000\noutputTiming    5000\n</code></pre> <p>We don\u2019t have to change the periodic boundary conditions in the sim_production.conf file as we read in the restart files from the previous simulation namely:</p> <pre><code>set inputname generic_restartfile\nbinCoordinates $inputname.coor  ; # Coordinates from last run (binary)\nbinVelocities  $inputname.vel   ; # Velocities from last run (binary)\nextendedSystem $inputname.xsc   ; # Cell dimensions from last run\n</code></pre> <p>There are a number of other control parameters in the production configuration script worth taking a look at including such things as cutoffs and temperature controls if you have time. These don\u2019t change much typically between simulations, but are covered better in the online NAMD tutorials and manuals. The setting we use here are reasonable default values.</p> <p>Save and close your .conf files.</p>"},{"location":"tutorials/molecular_dynamics_201/molecular_dynamics_201/#b-edit-the-sbatch-scripts","title":"b) Edit the sbatch scripts","text":"<p>The sbatch scripts tell the cluster how to run the simulation and how to handle the generated data. These scripts are a lot more complicated than the ones we saw in the introductory tutorial, but most of the details you need to worry about are all in the first few lines.</p> <p>In a sbatch script we need to pass arguments to the Slurm scheduler (the controlling program which launches users jobs to the cluster). The way to do so is use a complete code word \u201c#SBATCH\u201d on the first spaces of a line:</p> <p><code>#SBATCH --nodes=2</code>         \u2190 this works!</p> <p><code># SBATCH --nodes=2</code>        \u2190 this doesn\u2019t because of the space between \u201c#\u201d and \u201cSBATCH\u201d</p> <p>Note:</p> <ul> <li> <p>people often get confused with this as the \u201c#\u201d symbol usually denotes a comment line.</p> </li> <li> <p>PBS scripts work in a similar way, but with the code word \u201c#PBS\u201d</p> </li> </ul> <p>Set the number of nodes used for a job on sbatch_start and sbatch_production to 4, as shown below:</p> <pre><code>#SBATCH --nodes=4\n</code></pre> <p>Remember, more nodes is not necessarily faster and can be dramatically slower! It can be a good way to quickly burn up your quota inefficiently. It is a good idea to benchmark your jobs to find an optimal sweet spot, - more of how to do that another time. 4 nodes for this example will be fine.</p> <p>To set the production job runtime change this line on sbatch_production:</p> <p><code>#SBATCH --time=2:0:0</code>         \u2190 (hours:minutes:seconds)</p> <p>The time or \u201cwalltime\u201d tells the cluster how long your job should run. If your job runs longer than this, it will be stopped. As rule of thumb, use the time you expect plus 10%.  If you use an excessively long walltime such as days or weeks, the scheduler may take a long time to fit your job into the queue. Generally shorter jobs will get on the cluster faster (but make sure your walltime is appropriate for your configuration file!).</p>"},{"location":"tutorials/molecular_dynamics_201/molecular_dynamics_201/#5-launching-the-job-on-the-cluster","title":"5 - Launching the job on the cluster","text":"<p>We are now ready to go ahead with launching the job. For convenience I prefer to keep everything associated with the simulation together in the one directory in including all the build scripts and parameter files. The size of the extra files is tiny compared to the data you generate but this way you can ensure to totally replicate and finding that you happen to make.</p> <p>Upload the entire directory to your account. Under Linux this might be:</p> <pre><code>scp -r Namd_intermediate_template &lt;username&gt;@snowy.vlsci.unimelb.edu.au:\n</code></pre> <p>Log into your account on Snowy and change into the top of the Namd_intermediate_template/ directory:</p> <pre><code>ssh &lt;username&gt;@snowy.vlsci.unimelb.edu.au\n</code></pre> <p>Launch the start script:</p> <pre><code>sbatch sbatch_start\n</code></pre> <p>This should launch the equilibration phase of the simulation. As mentioned previously, the sbatch_script will automatically direct the output to the proper directories and launch the production phase. This might take an hour or two to complete.</p> <p>All text output is directed to the /OutputText folder. You can take a peek at how your job is going by using the command <code>tail &lt;filename&gt;</code> which prints out the last few lines of <code>&lt;filename&gt;</code>.</p> <p>For the purpose of this exercise, we will stop the job early and copy across a pre-computed data set. In your directory you should see slurm output file.</p> <p>It will look something like this:</p> <pre><code>slurm-123456.out\n</code></pre> <p>The number represents the job number on the cluster. Now use scancel to stop that job (i.e. for above you would use: scancel 123456).</p> <pre><code>scancel &lt;jobnumber&gt;\n</code></pre> <p>Now that your job has finished, we will copy across a completed job run. From your top directory on Snowy:</p> <pre><code>cp -r /vlsci/examples/namd/Namd_intermediate_template_finished/* Namd_intermediate_template/\n</code></pre> <p>Once the jobs are finished (or you have stopped the jobs and copied across the precomputed data), we can download the entire directory back to our local computer for analysis. If you don\u2019t have much memory on your laptop, you can do the analysis remotely on the cluster.</p> <p>A smart way to copy files back to your local computer is to use rsync. This way you only copy new or changed files back to your computer. In Linux from the local computer terminal this would be:</p> <pre><code>rsync -avzt &lt;username&gt;@snowy.vlsci.unimelb.edu.au:Namd_intermediate_template .\n</code></pre> <p>Note: the dot is important!</p> <p>Now that you have your data, we are ready to visualize the results.</p>"},{"location":"tutorials/molecular_dynamics_201/molecular_dynamics_201/#6-visualization-of-the-md-trajectory","title":"6 - Visualization of the MD trajectory","text":"<p>Hopefully by now you have successfully built a model, completed a small run with the template directory on the cluster and downloaded the results on to your local computer. We will now have a look at the data you generated.</p> <p>Note: if for some reason you didn\u2019t manage to run a successful MD simulation, you can copy a directory containing the precomputed data from the folowing Snowy folder: /vlsci/examples/namd/Namd_intermediate_template_finished. You can do this with the command below: <pre><code>scp -r &lt;username&gt;@snowy.vlsci.unimelb.edu.au:/vlsci/examples/namd/Namd_intermediate_template_finished .\n</code></pre></p>"},{"location":"tutorials/molecular_dynamics_201/molecular_dynamics_201/#a-combining-the-trajectory-files","title":"a) Combining the trajectory files","text":"<p>When we run segmented jobs as in this template, we end up with a series of output files in /OutputFiles such as:</p> <pre><code>[train01@snowy OutputFiles]$ ls -lrt  \ntotal 13184\n-rwxr-xr-x 1 train01 TRAINING    1477 Mar 21 10:18 create_dcd_loader_script\n-rw-r--r-- 1 train01 TRAINING 4090120 Mar 21 10:45 opt.2017-03-21-10.19.sim_opt_r1.dcd.x\n-rw-r--r-- 1 train01 TRAINING 1859296 Mar 21 10:51 2017-03-21-10.45.NamdJob_round01.0.dcd\n-rw-r--r-- 1 train01 TRAINING 1859296 Mar 21 10:57 2017-03-21-10.51.NamdJob_round01.1.dcd\n-rw-r--r-- 1 train01 TRAINING 1859296 Mar 21 11:03 2017-03-21-10.57.NamdJob_round01.2.dcd\n-rw-r--r-- 1 train01 TRAINING 1859296 Mar 21 11:09 2017-03-21-11.03.NamdJob_round01.3.dcd\n-rw-r--r-- 1 train01 TRAINING 1859296 Mar 21 11:15 2017-03-21-11.09.NamdJob_round01.4.dcd\n-rw-r--r-- 1 train01 TRAINING     195 Mar 21 11:15 dcd_list.txt\n-rw-r--r-- 1 train01 TRAINING     742 Mar 21 11:15 combined_dcd_file_loader.vmd\n</code></pre> <p>The main output files have the .dcd extension. We can see that things went well as the sizes of these files are identical as expected.</p> <p>If you have a lot of these files, it can be tedious to read them into VMD. Luckily we can run a script from this directory (you can do this on the cluster if you are running Windows on your local computer) to generate a list of this output to be read in by VMD. Simply run:</p> <pre><code>./create_dcd_loader_script\n</code></pre> <p>This creates the file: combined_dcd_file_loader.vmd</p> <p>From the main directory on your local computer, we can load in our trajectory using:</p> <pre><code>vmd InputFiles/hiv_protease.psf InputFiles/hiv_protease.pdb\n</code></pre> <p>then from the main panel:</p> <p>File \u2192 Load Visualization State \u2192 /OutputFiles/combined_dcd_file_loader.vmd</p> <p>Click on the \u201cplay\u201d button at the bottom right hand corner of the VMD main panel and watch the simulation run!</p> <p>Note: it is possible to restart the simulations of any segment as the restart files are saved under /RestartFiles.</p>"},{"location":"tutorials/molecular_dynamics_201/molecular_dynamics_201/#b-molecular-dynamics-trajectory-smoothing","title":"b) Molecular dynamics trajectory smoothing","text":"<p>The MD example presented here has not run for a particularly long period of time, barely a few hundred picoseconds, thus the relative movement in the molecule is small. For simulations that run on longer timescales there will be an amount of drifting making the analysis and visualization difficult.</p> <p>Luckily, there is an easy way to center and visualize our simulations which we will cover next. Now display only the protein backbone, in the VMD main panel:</p> <p>Graphics \u2192 Representations\u2026</p> <p>In the graphical representations window:</p> <p>Selected Atoms (protein) + Drawing method (NewRibbons)</p> <p>You may notice the protein jiggles around when you play the trajectory. This is Brownian motion, and this is more prominent in longer sampling.</p> <p>The first thing we might try to ease the jiggling is to increase the trajectory smoothing window size. In the VMD Graphical representations window, select your protein representation and toggle the Trajectory tab. At the bottom of the tab, increase the Trajectory Smoothing value to 5 and replay the trajectory. This should be much smoother. Try increasing to higher values.</p> <p>Although this view is smoother, it still can be difficult to visualize what relative motion is going on, due to the motion of the protein in the simulation box.</p>"},{"location":"tutorials/molecular_dynamics_201/molecular_dynamics_201/#c-centering-the-protein-for-analysis","title":"c) Centering the protein for analysis","text":"<p>We will now use the RMSD Trajectory Tool to center our protein frames.</p> <p>In the VMD main panel, open:</p> <p>Extensions \u2192 Analysis \u2192 RMSD Trajectory Tool</p> <p>This should open up a new window. Towards the top left we have the selection, for the \u2018Selection modifiers\u2019 tick \u2018Backbone\u2019. In the top right, click \u201cRMSD\u201d.</p> <p>When you do so, it will calculate the RMSD, of the protein backbone over the course of the simulation. The average value can be quite large depending on how much your selection drifts through space. At this point nothing has changed in the trajectory yet.</p> <p>Next, click the \u201cALIGN\u201d button. This will translate each frame to minimize the RMSD of the selection based on the first frame (in this case, our original input files).</p> <p>In other words, the protein has been centered on a reference frame, but now the water box appears to rotate about the axis. This makes it much more useful for analysis.</p> <p>Click \u201cRMSD\u201d again and you\u2019ll see the value becomes much smaller.</p>"},{"location":"tutorials/molecular_dynamics_201/molecular_dynamics_201/#d-using-volmap-to-map-ligand-density","title":"d) Using Volmap to map ligand density.","text":"<p>Now that we have a nicely centered protein dataset we can do something useful like plot the water density. In the VMD main panel, open:</p> <p>Extensions \u2192 Analysis \u2192 VolMap Tool</p> <p>A new VolMap window should open up.</p> <p>In the selection box type: \u201cwater\u201d and tick the box \u201ccompute for all frames\u201d, click \u201cCreate Map\u201d.</p> <p>This will calculate a density map based on your water selection and create a new graphical selection. You should see a big white box around your molecule. Open up your graphical representation window and select the new \u201cIsosurface\u201d representation. Under the \u201cDraw style\u201d tab use the Isovalue slider to scale back the density to just a few points (try 1.2).</p> <p>What you are seeing here are bound water molecules relative to the protein structure. These water molecules stay relatively still compared to the bulk water so create an area of high water density. These can be quite important for drug interactions, protein stability and catalytic centers. We often don\u2019t display waters in simulations for clarity, and often forget that they are there.</p> <p>If all goes well you might see something like this. The red and blue lines are the chains of the protein, the cyan blobs are regions of high water density averaged from the longer simulation.</p> <p></p> <p>Exercise: see if you can identify any ordered waters near the catalytic residues of HIV protease (Asp 25). You may change the resolution of Volmap to 0.5 for more detail.</p> <p>You can also do this sort of view for ligands to show where they bind. Always make sure you first center your target protein or else this sort of representation will not make sense!</p> <p>So concludes the intermediate tutorial.</p> <p>Note: a more advanced template that can be used to organise the MD simulations ran on HPC clusters called MD_workflow_py was written with using the Python programming language. This new workflow uses a similar structure to what was shown in this tutorial and has additional capability to manage thousands of independent jobs and generate molecular animations.</p>"},{"location":"tutorials/ngs_overview/","title":"Index","text":"<p>PR reviewers and advice: </p> <p>Current slides: None</p> <p>Other slides:</p> <ul> <li>None yet</li> </ul>"},{"location":"tutorials/ngs_overview/NGS_Overview/","title":"Next Generation Sequencing Overview","text":""},{"location":"tutorials/ngs_overview/NGS_Overview/#sequencing-technologies","title":"Sequencing technologies","text":"<ol> <li>Sequencing by hybridisation and ligation (Complete Genomics, Life Technologies, Polonator)<ol> <li>Emulsion PCR amplification</li> <li>Detection: Cyclic ligation of nucleotide dimers. Multiple rounds required.</li> </ol> </li> <li>Sequencing by synthesis (Helicos, Illumina, Intelligent Bio-Sys)<ol> <li>Bridge PCR amplification on slides</li> <li>Detection: cyclic addition of reversible polymerisation terminators</li> </ol> </li> <li>Real-time sequencing by synthesis (Pacific BioSciences, VisiGen)<ol> <li>Single molecule, no amplification</li> <li>Cyclic removal of nucleotide and measure change in conductance of micropore</li> </ol> </li> <li>Pyrosequencing (Roche/454\u2122).<ol> <li>Emulsion PCR amplification</li> <li>Detection: cyclic addition of single nucleotide species and detection of number of pyrophosphates released during polymerisation (through ATP to luciferase reaction)</li> </ol> </li> </ol>"},{"location":"tutorials/ngs_overview/NGS_Overview/#applications","title":"Applications","text":""},{"location":"tutorials/ngs_overview/NGS_Overview/#genomic","title":"Genomic","text":"<ol> <li>Whole genome resequencing for variation detection</li> <li>Whole genome sequencing for de novo assembly</li> <li>Metagenomics (sequencing of multiple genomes together in a \u2018metasample\u2019)</li> <li>Targetted resequencing for variation detection<ol> <li>Exome sequencing/targetted exome capture</li> <li>Arbitrary PCR enrichment of target</li> </ol> </li> </ol>"},{"location":"tutorials/ngs_overview/NGS_Overview/#epigenomic","title":"Epigenomic","text":"<ol> <li>CHiP-Seq through sequencing of DNA enriched by immunoprecipitation</li> <li>DNA methylation analysis</li> <li>Sequencing of DNA enriched through immunoprecipitation of 5-methylcytosine ()</li> <li>Methylation-sensitive restriction enzyme fragment enrichment</li> </ol>"},{"location":"tutorials/ngs_overview/NGS_Overview/#transcriptomic-rna-seq","title":"Transcriptomic (RNA-seq)","text":"<ol> <li>Whole transcriptome expression profiling (comparative gene expression)</li> <li>Whole transcriptome sequencing for de novo assembly (identify genes)</li> <li>Strand-specific mRNA-seq</li> <li>Paired-end RNA-seq</li> <li>Whole transcriptome variation detection</li> <li>Differential splicing detection</li> <li>sRNA analysis</li> </ol>"},{"location":"tutorials/ngs_overview/NGS_Overview/#types-of-outcome","title":"Types of outcome","text":""},{"location":"tutorials/ngs_overview/NGS_Overview/#variation-detection","title":"Variation Detection","text":"<ol> <li>Copy number variation (CNV)</li> <li>Single Nucleotide Polymorphisms (SNPs)</li> <li>Insertions and deletions (Indels)</li> <li>Rearrangements</li> </ol>"},{"location":"tutorials/ngs_overview/NGS_Overview/#de-novo-assembly","title":"De Novo assembly","text":"<p>Concatemers (length?)</p>"},{"location":"tutorials/ngs_overview/NGS_Overview/#comparative-gene-expression","title":"Comparative gene expression","text":"<p>Matrix of gene vs expression level</p>"},{"location":"tutorials/ngs_overview/NGS_Overview/#splicing-detection","title":"Splicing detection","text":"<p>List of alternative splice isoforms</p>"},{"location":"tutorials/ngs_overview/NGS_Overview/#resequencing-alignment-strategies","title":"Resequencing alignment strategies","text":"<ol> <li>Align to transcriptome (simplest)</li> <li>Align to genome and exon-exon junction sequences (discover new transcripts, splice variants)</li> <li>De novo (most complex)</li> </ol>"},{"location":"tutorials/ngs_overview/NGS_Overview/#categories-of-analysis","title":"Categories of analysis","text":"<p>NGS informatics may be categorised into:</p> <p>1. Primary analysis:</p> <p>Conversion of imagesets (output from NGS machines) into strings of bases - \u2018base calling\u2019.</p> <p>Inputs:</p> <ul> <li>Image files from NGS machine</li> </ul> <p>Outputs:</p> <ul> <li>Short reads</li> </ul> <p>Software:</p> <ul> <li>Firecrest and Bustard (for Illumina) </li> </ul> <p>2. Secondary analysis:</p> <p>Assembly of short strings of bases (output of primary analysis) into contigs, and/or -Li Jason 11/18/09 2:43 PM alignment onto a reference genome and extraction of the first level of genomic meaning (SNP, rearrangements)</p> <p>Inputs:</p> <ul> <li>Short reads (20-30million/run?)</li> </ul> <p>Outputs:</p> <ul> <li>Aligned sequences against a reference genome</li> <li>SNP analysis</li> <li>Copy number variation data</li> <li>Quantified expression data</li> </ul> <p>Software:</p> <ul> <li>E.g. Eland, BWA, MAQ for alignment. Velvet, ABySS for de-novo assembly. </li> </ul> <p>References:</p> <p>http://www.illumina.com/Documents/products/technotes/technote_denovo_assembly.pdf</p> <p>3. Tertiary analysis</p> <p>Extraction of biological information from the aligned sequences. Annotation of sequence data.</p> <p>Inputs:</p> <ul> <li>*E.g. Aligned sequences, SNP analysis\u00a0*</li> </ul> <p>Outputs:</p> <ul> <li>Biological and statistical interpretations and visualisations</li> </ul> <p>At each stage there are multiple options for processing - vendor software, open source software, each with varying levels of accuracy and computational expense. There are also large amounts of data produced at each stage. Additionally, primary and secondary analysis are dependent on the NGS platform being supported - Illumina Solexa pipeline is different to an Applied Biosystems SOLiD pipeline.</p> <p>Anecdotally, 80% of processing in a NGS project is manual and occurs mainly in tertiary analysis.</p>"},{"location":"tutorials/ngs_overview/NGS_Overview/#sample-preparation","title":"Sample preparation","text":""},{"location":"tutorials/ngs_overview/NGS_Overview/#fragment","title":"Fragment","text":"<p>Each read is independent - an arbitrary fragment of DNA with no meta-information about the relationship of that read to any other read</p>"},{"location":"tutorials/ngs_overview/NGS_Overview/#paired-end-sequencing","title":"Paired-end sequencing","text":"<p>Each fragment is sequenced twice, once from each end, in succession. Probably the reads will not overlap, as the average length of a fragment is normally &gt;2x that of a read.</p> <p>The two reads are thus \u2018related\u2019 and have extra information about the structure of the sample. The information is that the two reads from the single fragment are \u2018close\u2019 - depending on the length of fragments that were prepared for the run.</p> <p>http://www.illumina.com/technology/paired_end_sequencing_assay.ilmn</p>"},{"location":"tutorials/ngs_overview/NGS_Overview/#mate-pair","title":"Mate-pair","text":"<p>Similar to paired-end, but ends of sequenced fragment can be much further apart - up to 10kb (normally 2-5kb)</p> <p>http://www.illumina.com/technology/mate_pair_sequencing_assay.ilmn</p>"},{"location":"tutorials/ngs_overview/NGS_Overview/#barcoded-fragments","title":"Barcoded fragments","text":"<p>Multiple samples are prepared independently. Each sample is \u2018labelled\u2019 with a unique sequence adaptor (barcode). Samples are then mixed and sequenced together. Individual reads can be categorised to a particular sample by their barcodes.</p>"},{"location":"tutorials/ngs_overview/NGS_Overview/#enrichment-for-target-sequences","title":"Enrichment for target sequences","text":"<ol> <li>PCR</li> <li>Hybridisation to oligo arrays</li> <li>PolyA selection (mRNA-seq)</li> <li>Size selection</li> <li>Precipitation</li> </ol>"},{"location":"tutorials/ngs_overview/NGS_Overview/#potential-services-in-ngs","title":"Potential services in NGS","text":"<p>Courtesy Colorado State Uni</p> <p>Sequence Matching Analysis</p> <ul> <li> <p>Align SOLiD colorspace reads with reference genomes</p> </li> <li> <p>Generate consensus sequences</p> </li> </ul> <p>Mate-Pair Analysis</p> <ul> <li> <p>Analyze paired reads from SOLiD mate-pair runs</p> </li> <li> <p>Improve accuracy of read matches to detect structural variations     &gt; between sample and reference genomes</p> </li> </ul> <p>SNP / Indel Analysis</p> <ul> <li> <p>Identify single nucleotide polymorphisms</p> </li> <li> <p>Identify insertion and deletion mutations in DNA sequences</p> </li> </ul> <p>Copy Number Variation Analysis</p> <ul> <li>Detect copy number variations in DNA sequences</li> </ul> <p>Whole Transcriptome Analysis</p> <ul> <li> <p>Map SOLiD reads from a transcript sample to reference genomes</p> </li> <li> <p>Assign tag counts to features of the reference genome</p> </li> <li> <p>Identify novel transcripts</p> </li> </ul> <p>Inversion Analysis</p> <ul> <li>Identify paracentric and pericentric chromosomal inversions</li> </ul> <p>de Novo Assembly</p> <ul> <li> <p>Create de novo assemblies from SOLiD colorspace reads</p> </li> <li> <p>Characterize genomic sequences for which no closely related reference genome exists</p> </li> <li> <p>Assemble SOLiD reads from microbial genomes into nucleotide sequence contigs of several thousand bases, and scaffolds of tens of thousands of bases.</p> </li> <li> <p>Assemble SOLiD reads from microbial genomes into scaffolds of tens of thousands of bases</p> </li> </ul> <p>smRNA Analysis</p> <ul> <li> <p>Whole genome analysis of SOLiD RNA library reads</p> </li> <li> <p>Includes filtering, matching against miRBase sequences, and matching against reference genomes</p> </li> </ul> <p>NextGENe Analysis</p> <ul> <li> <p>NextGENe is a comprehensive NGS bioinformatics package</p> </li> <li> <p>NextGENe includes de novo assembly, target assembly, SNP/Indel discovery, digital gene expression analysis, whole transcriptome analysis, ChiPSeq analysis, miRNA discovery and quantification, and a condensation assembly tool for reducing instrument error</p> </li> </ul> <p>System Alignment Browser (SAB)</p> <ul> <li> <p>SAB is a graphical genome annotation viewer</p> </li> <li> <p>Used for viewing basespace and colorspace reads aligned to reference genomes</p> </li> </ul> <p>GFF Conversion</p> <ul> <li> <p>Convert SOLiD system mapping files into GFF-format files</p> </li> <li> <p>GFF is a standardized file format for describing DNA, RNA, and proteins</p> </li> </ul> <p>SRF Conversion</p> <ul> <li> <p>Convert SOLiD system reads into SRF format</p> </li> <li> <p>SRF is a standardized file format for describing DNA sequence data</p> </li> </ul>"},{"location":"tutorials/ngs_overview/NGS_Overview/#appendix","title":"Appendix","text":""},{"location":"tutorials/ngs_overview/NGS_Overview/#paired-end-sequencing-empirical-observations","title":"Paired end sequencing - empirical observations","text":"<p>paired end or mate pair refers to how the library is made, and then how it is sequenced. Both are methodologies that, in addition to the sequence information, give you information about the physical distance between the two reads in your genome. For example, you shear up some genomic DNA, and cut a region out at ~500bp. Then you prepare your library, and sequence 35bp from each end of each molecule. Now you have three pieces of information:</p> <ul> <li>the tag 1 sequence</li> <li>the tag 2 sequence*</li> <li>that they were 500bp \u00b1 (some) apart in your genome</li> </ul> <p>When we do 2x 50 bp paired-end runs on a GAIIx using the current gel purification step we get read distances of between that vary by about 100 bp in a nice tight bell shaped curve starting between 160-200 bp. So the first thing to bear in mind is that L is not fixed within or between runs. Either way this group accounts for &gt;99.99% of paired-end reads in an assembly. Because of the way fragments are generated for sequencing 1 and 2 can align either F-B of B-F.</p> <p>If you want to be more realistic there are always a tiny proportion of reads &lt;0.1% that align with much longer read distances, some of which is due to bioinformatics but some of which is real and simply reflects biology. Likewise a tiny proportion of reads at all read distances will be F-F or B-B. Also there appear to often be a tiny proportion of reads that come out overlapping where the read distance is the same as a read length ie 1+L+2 is, in this case, ~50-100. I have no idea of the prevelance of such reads but you can often find them if you look. Lastly if its not going to be part of the assembler, end trimming and quality trimming can often mean that 1 and 2 are different lengths and that a substantial number of reads from a paired end run end up with no partner at all.</p>"},{"location":"tutorials/ngs_overview/NGS_Overview/#mate-pair-sequencing","title":"Mate-pair sequencing","text":"<p>Illumina refers to \u201cpaired end\u201d as the original library preparation method they use, where you sequence each end of the same molecule. Because of the way the cluster generation technology works, it is limited to an inter-pair distance of ~300bp ( 200-600bp).</p> <p>Illumina refers to mate pairs as sequences derived from their newer library prep method which is designed to provide paired sequences separated by a greater distance (between about 2 and 10kb). This method still actually only sequences the ends of ~400bp molecules, but this template is derived from both ends of a 2-10kb fragment that has had the middle section cut out and the \u2018internal\u2019 ends ligated in the middle. Basically, you take your 2-10kb random fragments, biotinylate the end, circularise them, shear the circles to ~400bp, capture biotinylated molecules, and then sequence those (they go into what is essentially a standard \u2018paired end\u2019 sample prep procedure).</p> <p>Source: http://seqanswers.com/forums/showthread.php?t=503</p>"},{"location":"tutorials/pacbio/","title":"de novo assembly of PacBio reads (unix)","text":""},{"location":"tutorials/pacbio/#long-read-assembly-workshop","title":"Long read assembly workshop","text":"<p>This is a tutorial for a workshop on long-read (PacBio) genome assembly.</p> <p>It demonstrates how to use long PacBio sequencing reads to assemble a bacterial genome, and includes additional steps for circularising, trimming, finding plasmids, and correcting the assembly with short-read Illumina data.</p>"},{"location":"tutorials/pacbio/#overview","title":"Overview","text":"<p>Simplified version of workflow:</p> <p></p>"},{"location":"tutorials/pacbio/#1-get-started","title":"1. Get started","text":"<p>Your workshop trainers will provide you with the address of a virtual machine.</p>"},{"location":"tutorials/pacbio/#mac-users","title":"Mac users","text":"<p>Open the Terminal.</p> <ul> <li>Type in</li> </ul> <pre><code>ssh researcher@[your virtual machine address]\n</code></pre> <ul> <li>Type in the password provided.</li> </ul>"},{"location":"tutorials/pacbio/#windows-users","title":"Windows users","text":"<p>If you are using Windows 10, you might be able to use the Ubuntu Subsystem. Otherwise, install and open Putty.</p> <ul> <li>Download putty here.</li> <li>Open. A configuration window will appear.</li> <li>Under \u201cHost Name (or IP address)\u201d enter in the address of your virtual machine.</li> <li>Under \u201cPort\u201d type in 22</li> <li>Under \u201cConnection Type\u201d select \u201cSSH\u201d</li> <li>Click \u201cOpen\u201d</li> <li>Under \u201cLogin as:\u201d enter \u201cresearcher\u201d</li> <li>Type in the password provided.</li> </ul>"},{"location":"tutorials/pacbio/#activate-the-conda-environment","title":"Activate the conda environment","text":"<p>Type in: <pre><code>source /mnt/gvl/apps/conda/bin/activate\n</code></pre></p> <p>(This points us to some different directories for the software we need).</p>"},{"location":"tutorials/pacbio/#create-a-new-working-directory-on-your-remote-computer","title":"Create a new working directory on your remote computer.","text":"<p>Because we are starting a new analysis it is always good practice to start in a new empty directory. Therefore, we will create a new directory and change to it for the rest of the workshop.</p> <p>In your terminal:</p> <ul> <li>Create a new directory called \u201cWorkshop\u201d</li> </ul> <pre><code>mkdir Workshop\n</code></pre> <ul> <li>Change to that directory</li> </ul> <pre><code>cd Workshop\n</code></pre> <p>NOTE: Every time you open a new terminal or Putty session, you will need to make sure you are in this directory again.</p> <p>Find your current directory by typing:</p> <pre><code>pwd\n</code></pre>"},{"location":"tutorials/pacbio/#2-get-data","title":"2. Get data","text":"<p>The sample used in this tutorial is from a bacteria called Staphylococcus aureus. We have used a small section of its real genome so that the programs can run in the workshop time.</p> <p>The files we need are:</p> <ul> <li>pacbio.fq: the PacBio reads</li> <li>R1.fq: the Illumina forward reads</li> <li>R2.fq: the Illumina reverse reads</li> </ul> <p>In a new tab, go to https://doi.org/10.5281/zenodo.1009308.</p> <ul> <li>Next to the first file, right-click (or control-click) the \u201cDownload\u201d button, and select \u201cCopy link address\u201d.</li> <li>Back in your terminal, enter <pre><code>wget [paste file link here]\n</code></pre></li> <li>The file should download.</li> <li>Note: paste the link to the file, not to the webpage.</li> <li>Repeat this for the other two files.</li> </ul> <p>Shorten each of these files names with the <code>mv</code> command:</p> <pre><code>mv R1.fq\\?download\\=1 R1.fq\nmv R2.fq\\?download\\=1 R2.fq\nmv pacbio.fq\\?download\\=1 pacbio.fq\n</code></pre> <p>Type in <code>ls</code> to check the files are present and correctly-named.</p> <p>We should have R1.fq, R2.fq and pacbio.fq.</p>"},{"location":"tutorials/pacbio/#3-assemble","title":"3. Assemble","text":"<p>We will use the assembly software called Canu, version 1.7.</p> <p>Run Canu with these commands:</p> <pre><code>canu -p canu -d canu_outdir genomeSize=0.03m corThreads=3 -pacbio-raw pacbio.fq\n</code></pre> <ul> <li>the first <code>canu</code> tells the program to run</li> <li><code>-p canu</code> names prefix for output files (\u201ccanu\u201d)</li> <li><code>-d canu_outdir</code> names output directory (\u201ccanu_outdir\u201d)</li> <li><code>genomeSize</code> only has to be approximate. (In this case we are using a partial genome of expected size 30,000 base pairs).</li> <li><code>corThreads=3</code> sets the number of available threads.</li> <li>Canu will correct, trim and assemble the reads.</li> <li>Various output will be displayed on the screen.</li> <li>Note: Canu could say \u201cFinished\u201d but may still be running. In this case, type <code>squeue</code> to see if jobs are still running.</li> </ul> <p>If you run <code>squeue</code> you will see something like this:</p> <pre><code>             JOBID PARTITION     NAME     USER ST       TIME  NODES NODELIST(REASON)\n                 6      main canu_can research PD       0:00      1 (Dependency)\n               5_1      main cormhap_ research  R       0:29      1 master\n</code></pre> <p>You will know if Canu has completely finished when <code>squeue</code> shows no jobs listed under the header row.</p>"},{"location":"tutorials/pacbio/#4-check-assembly-output","title":"4. Check assembly output","text":"<p>Move into the canu output folder: <pre><code>cd canu_outdir\n</code></pre></p> <p>View the list of files: <pre><code>ls\n</code></pre></p> <ul> <li>The canu.contigs.fasta are the assembled sequences.</li> <li>The canu.unassembled.fasta are the reads that could not be assembled.</li> <li>The canu.correctedReads.fasta.gz are the corrected Pacbio reads that were used in the assembly.</li> <li>The canu.contigs.gfa is the graph of the assembly.</li> <li>The canu.report file is a summary of all of the steps Canu performed with information about the reads used, how they were handled and a whole lot of summary information about the assembly.</li> </ul> <p>Display summary information about the contigs: (<code>infoseq</code> is a tool from EMBOSS)</p> <pre><code>infoseq canu.contigs.fasta\n</code></pre> <ul> <li>This will show the contigs found by Canu. e.g.,  tig00000001  47997</li> <li>\u201ctig00000001\u201d is the name given to the contig</li> <li>\u201c47997\u201d is the number of base pairs in that contig.</li> </ul> <p>This matches what we were expecting for this sample (approximately 30,000 base pairs). For other data, Canu may not be able to join all the reads into one contig, so there may be several contigs in the output.</p> <p>We should also look at the canu.report. To do this:</p> <pre><code>less canu.report\n</code></pre> <ul> <li>\u201cless\u201d is a command to display the file on the screen.</li> <li>Use the up and down arrows to scroll up and down.</li> <li>You will see lots of histograms of read lengths before and after processing, final contig construction, etc.</li> <li>For a description of the outputs that Canu produces, see: http://canu.readthedocs.io/en/latest/tutorial.html#outputs</li> <li>Type <code>q</code> to exit viewing the report.</li> </ul>"},{"location":"tutorials/pacbio/#questions","title":"Questions","text":"<p>How do long- and short-read assembly methods differ?</p> Answer (click to reveal) Short reads are usually assembled with De Bruijn graphs. For long reads, there is a move back towards simpler overlap-layout-consensus methods.  <p>Where can we find out the what the approximate genome size should be for the species being assembled?</p> Answer (click to reveal) Go to NCBI Genomes, enter species name, click on Genome Assembly and Annotation report, sort table by clicking on the column header Size (Mb), look at range of sizes in this column.  <p>In the assembly output, what are the unassembled reads?</p> Answer (click to reveal) Reads and low-coverage contigs that were not used in the assembly.  <p>What are the corrected reads? How did canu correct the reads?</p> Answer (click to reveal) Canu builds overlaps between reads. The consensus is used to correct the reads.  <p>Where could you view the output .gfa and what would it show?</p> Answer (click to reveal) A useful program is [Bandage](https://rrwick.github.io/Bandage/). If the assembly has multiple contigs, the assembly graph shows how these are connected."},{"location":"tutorials/pacbio/#5-trim-and-circularise","title":"5. Trim and circularise","text":"<p>Bacteria have circular chromosomes.</p> <ul> <li>Because of sequencing errors, there may be some \u201coverhang\u201d in the assembled linear sequence.</li> <li>Our assembly may have some overhang because it is 9000 bases longer than expected.</li> </ul> <p> Adapted from Figure 1. Hunt et al. Genome Biology 2015</p> <p>A tool called Circlator identifies and trims overhangs (on chromosomes and plasmids). It takes in the assembled contigs from Canu, as well as the corrected reads prepared by Canu.</p> <p>Move back into your main analysis folder: <pre><code>cd ..\n</code></pre></p>"},{"location":"tutorials/pacbio/#run-circlator","title":"Run Circlator","text":"<pre><code>circlator all --threads 4 --verbose canu_outdir/canu.contigs.fasta canu_outdir/canu.correctedReads.fasta.gz circlator_outdir\n</code></pre> <ul> <li> <p>(Click on the dark grey slider bar above and move it to the right, to see all the way to the end of the line.)</p> </li> <li> <p><code>--threads</code> is the number of cores</p> </li> <li><code>--verbose</code> prints progress information to the screen</li> <li><code>canu_outdir/canu.contigs.fasta</code> is the file path to the input Canu assembly</li> <li><code>canu_outdir/canu.correctedReads.fasta.gz</code> is the file path to the corrected Pacbio reads - note, fastA not fastQ</li> <li><code>circlator_outdir</code> is the name of the output directory.</li> </ul> <p>Some output will print to screen. When finished, it should say \u201cCircularized x of x contig(s)\u201d.</p>"},{"location":"tutorials/pacbio/#check-the-output","title":"Check the output","text":"<p>Move into the Circlator output directory:</p> <pre><code>cd circlator_outdir\n</code></pre> <p>List the files: <pre><code>ls\n</code></pre></p> <p>Circlator has named the output files with numbers as prefixes.</p> <p>Were the contigs circularised?</p> <pre><code>less 04.merge.circularise.log\n</code></pre> <ul> <li>\u201cless\u201d is a command to display the file on the screen.</li> <li>04.merge.circularise.log is the name of the file.</li> <li>Yes, the contig was circularised (last column).</li> <li>Type <code>q</code> to exit.</li> </ul> <p>What are the trimmed contig sizes? <pre><code>infoseq 06.fixstart.fasta\n</code></pre></p> <ul> <li>The contig \u201ctig00000001\u201d has a length of 30019.</li> <li>This is about 18,000 bases shorter than before circularisation. This was the \u201coverhang\u201d and has now been trimmed.</li> </ul> <p>Copy the circularised contigs file to the main analysis directory with a new name:</p> <pre><code>cp 06.fixstart.fasta ../contig1.fasta\n</code></pre> <p>Move back into the main folder: <pre><code>cd ..\n</code></pre></p>"},{"location":"tutorials/pacbio/#questions_1","title":"Questions","text":"<p>Were all the contigs circularised?</p> Answer (click to reveal) In this example, yes, the contig was circularised.  <p>Circlator can set the start of the sequence at a particular gene. Which gene does it use? Is this appropriate for all contigs?</p> Answer (click to reveal) Circlator uses dnaA (if present) for the chromosomal contig. For other contigs, it uses a centrally-located gene. However, ideally, plasmids would be oriented on a gene such as repA. It is possible to provide a file to Circlator to do this."},{"location":"tutorials/pacbio/#6-find-smaller-plasmids","title":"6. Find smaller plasmids","text":"<p>Pacbio reads are long, and may have been longer than small plasmids. We will look for any small plasmids using the Illumina reads.</p> <p>This section involves several steps:</p> <ol> <li>Use the Canu+Circlator output of a trimmed assembly contig.</li> <li>Map all the Illumina reads against this Pacbio-assembled contig.</li> <li>Extract any reads that didn\u2019t map and assemble them together: this could be a plasmid, or part of a plasmid.</li> <li>Look for overhang: if found, trim.</li> </ol>"},{"location":"tutorials/pacbio/#align-illumina-reads-to-the-pacbio-contig","title":"Align Illumina reads to the PacBio contig","text":"<p>Index the contigs file:</p> <pre><code>bwa index contig1.fasta\n</code></pre> <p>Align Illumina reads using using bwa mem:</p> <pre><code>bwa mem -t 4 contig1.fasta R1.fq R2.fq | samtools sort &gt; aln.bam\n</code></pre> <ul> <li><code>bwa mem</code> is the alignment tool</li> <li><code>-t 4</code> is the number of cores</li> <li><code>contig1.fasta</code> is the input assembly file</li> <li><code>R1.fq R2.fq</code> are the Illumina reads</li> <li><code>| samtools sort</code> pipes the output to samtools to sort</li> <li><code>&gt; aln.bam</code> sends the alignment to the file aln.bam</li> </ul>"},{"location":"tutorials/pacbio/#extract-unmapped-illumina-reads","title":"Extract unmapped Illumina reads","text":"<p>Index the alignment file:</p> <pre><code>samtools index aln.bam\n</code></pre> <p>Extract the fastq files from the bam alignment - those reads that were unmapped to the Pacbio alignment - and save them in various \u201cunmapped\u201d files:</p> <pre><code>samtools fastq -f 4 -1 unmapped.R1.fastq -2 unmapped.R2.fastq -s unmapped.RS.fastq aln.bam\n</code></pre> <ul> <li><code>fastq</code> is a command that coverts a .bam file into fastq format</li> <li><code>-f 4</code> : only output unmapped reads</li> <li><code>-1</code> : put R1 reads into a file called unmapped.R1.fastq</li> <li><code>-2</code> : put R2 reads into a file called unmapped.R2.fastq</li> <li><code>-s</code> : put singleton reads into a file called unmapped.RS.fastq</li> <li><code>aln.bam</code> : input alignment file</li> </ul> <p>We now have three files of the unampped reads:  unmapped.R1.fastq,  unmapped.R2.fastq,  unmapped.RS.fastq.</p>"},{"location":"tutorials/pacbio/#assemble-the-unmapped-reads","title":"Assemble the unmapped reads","text":"<p>Assemble with Spades:</p> <pre><code>spades.py -1 unmapped.R1.fastq -2 unmapped.R2.fastq -s unmapped.RS.fastq --careful --cov-cutoff auto -o spades_assembly\n</code></pre> <ul> <li> <p>(Click on the dark grey slider bar above and move it to the right, to see all the way to the end of the line.)</p> </li> <li> <p><code>-1</code> is input file forward</p> </li> <li><code>-2</code> is input file reverse</li> <li><code>-s</code> is unpaired</li> <li><code>--careful</code> minimizes mismatches and short indels</li> <li><code>--cov-cutoff auto</code> computes the coverage threshold (rather than the default setting, \u201coff\u201d)</li> <li><code>-o</code> is the output directory</li> </ul> <p>Move into the output directory: <pre><code>cd spades_assembly\n</code></pre></p> <p>Look at the contigs: <pre><code>infoseq contigs.fasta\n</code></pre></p> <ul> <li>1 contig has been assembled with a length of 2359 bases.</li> </ul> <p>Copy it to a new file: <pre><code>cp contigs.fasta contig2.fasta\n</code></pre></p>"},{"location":"tutorials/pacbio/#trim-the-plasmid","title":"Trim the plasmid","text":"<p>To trim any overhang on this plasmid, we will blast the start of contig2 against itself.</p> <p>Take the start of the contig:</p> <p><pre><code>head -n 10 contig2.fasta &gt; contig2.fa.head\n</code></pre> - <code>head -n 10</code> takes the first ten lines of contig2.fasta - <code>&gt;</code> sends that output to a new file called contig2.fa.head</p> <ul> <li>We want to see if the start of the contig matches the end (overhang).</li> </ul> <p>Format the assembly file for blast: <pre><code>makeblastdb -in contig2.fasta -dbtype nucl\n</code></pre> - <code>makeblastdb</code> makes a database for the tool Blast - This will generate three new files in the directory with suffixes .nhr, .nin and .nsq - <code>-in</code> sets the input file as  contig2.fasta - <code>-dbtype nucl</code> sets the type to nucleotide (rather than protein)</p> <p>Blast the start of the assembly (.head file) against all of the assembly: <pre><code>blastn -query contig2.fa.head -db contig2.fasta -evalue 1e-3 -dust no -out contig2.bls\n</code></pre></p> <ul> <li><code>blastn</code> is the tool Blast, set as blast**n** to compare sequences of nucleotides to each other</li> <li><code>-query</code> sets the input sequence as contig2.fa.head</li> <li><code>-db</code> sets the database as that of the original sequence contig2.fasta. We don\u2019t have to specify the other files that were created when we formatted this file, but they need to present in our current directory.</li> <li><code>-evalue</code> is the number of hits expected by chance, here set as 1e-3</li> <li><code>-dust no</code> turns off the masking of low-complexity regions</li> <li><code>-out</code> sets the output file as contig2.bls</li> </ul> <p>Look at the hits (the matches): <pre><code>less contig2.bls\n</code></pre></p> <ul> <li>The first hit is at the start, as expected. We can see that \u201cQuery 1\u201d (the start of the contig) is aligned to \u201cSbject 1\u201d (the whole contig), for the first 540 bases.</li> <li>Scroll down with the down arrow.</li> <li>The second hit shows \u201cQuery 1\u201d (the start of the contig) also matches to \u201cSbject 1\u201d (the whole contig) at position 2253, all the way to the end, position 2359.</li> </ul> <p></p> <ul> <li>This is the overhang.</li> <li>Therefore, in the next step, we need to trim the contig to position 2252.</li> <li>Type <code>q</code> to exit.</li> </ul> <p>First, change the name of the contig within the file:</p> <pre><code>nano contig2.fasta\n</code></pre> <ul> <li><code>nano</code> opens up a text editor.</li> <li>Use the arrow keys to navigate. (The mouse won\u2019t work.)</li> <li>At the first line, delete the text, which will be something like \u201c&gt;NODE_1_length_2359_cov_3.320333\u201d</li> <li>Type in \u201c&gt;contig2\u201d</li> <li>Don\u2019t forget the <code>&gt;</code> symbol</li> <li>Press Control-X</li> <li>\u201cSave modified buffer ?\u201d - type <code>Y</code></li> <li>Press the Enter key</li> </ul> <p>Index the file (this will allow samtools to edit the file as it will have an index):</p> <pre><code>samtools faidx contig2.fasta\n</code></pre> <ul> <li><code>faidx</code> means index the fasta file</li> </ul> <p>Trim the contig:</p> <pre><code>samtools faidx contig2.fasta contig2:1-2252 &gt; plasmid.fasta\n</code></pre> <ul> <li>this extracts contig2 from position 1-2252</li> <li> <p><code>&gt; plasmid.fasta</code> sends the extracted section to a new file</p> </li> <li> <p>We now have a trimmed plasmid.</p> </li> </ul> <p>Copy the plasmid file into the main folder:</p> <pre><code>cp plasmid.fasta ../\n</code></pre> <p>Move file back into main folder:</p> <pre><code>cd ..\n</code></pre>"},{"location":"tutorials/pacbio/#collect-contigs","title":"Collect contigs","text":"<p>Collect the chromosome and the plasmid in one fasta file (they will be 2 records in the file):</p> <pre><code>cat contig1.fasta plasmid.fasta &gt; genome.fasta\n</code></pre> <p>See the contigs and sizes:</p> <pre><code>infoseq genome.fasta\n</code></pre> <ul> <li>chromosome: 30019</li> <li>plasmid: 2252</li> </ul>"},{"location":"tutorials/pacbio/#questions_2","title":"Questions","text":"<p>Why is this section so complicated?</p> Answer (click to reveal) Finding small plasmids is difficult for many reasons! This paper has a nice summary: On the (im)possibility to reconstruct plasmids from whole genome short-read sequencing data. doi: https://doi.org/10.1101/086744  <p>Why can PacBio sequencing miss small plasmids?</p> Answer (click to reveal) Library prep size selection.  <p>We extract unmapped Illumina reads and assemble these to find small plasmids. What could they be missing?</p> Answer (click to reveal) Repeats that have mapped to the PacBio assembly.  <p>How do you find a plasmid in a Bandage graph?</p> Answer (click to reveal) It is probably circular, matches the size of a known plasmid, and has a rep gene.  <p>Are there easier ways to find plasmids?</p> Answer (click to reveal) Possibly. One option is the program called Unicycler which may automate many of these steps. https://github.com/rrwick/Unicycler"},{"location":"tutorials/pacbio/#7-correct-the-assembly","title":"7. Correct the assembly","text":"<p>Sequences from PacBio can have more errors than those from Illumina. Therefore, although it is useful to use the long PacBio reads to assemble the genome, we can also use the shorter and more accurate Illumina reads to correct errors in the PacBio assembly.</p>"},{"location":"tutorials/pacbio/#make-an-alignment-file","title":"Make an alignment file","text":"<p>Index the fasta file:</p> <pre><code>bwa index genome.fasta\n</code></pre> <p>Align the Illumina reads:</p> <pre><code>bwa mem -t 4 genome.fasta R1.fq R2.fq | samtools sort &gt; pilon_aln.bam\n</code></pre> <ul> <li>Aligns Illumina R1.fq and R2.fq to the PacBio assembly genome.fasta.</li> <li>This produces a .bam file</li> <li><code>|</code> pipes the output to samtools to sort (required for downstream processing)</li> <li><code>&gt; pilon_aln.bam</code> redirects the sorted bam to this file</li> </ul> <p>Index the files:</p> <pre><code>samtools index pilon_aln.bam\n</code></pre> <pre><code>samtools faidx genome.fasta\n</code></pre> <ul> <li>Now we have an alignment file to use  with the tool Pilon: pilon_aln.bam</li> </ul>"},{"location":"tutorials/pacbio/#run-pilon","title":"Run Pilon","text":"<p>Run:</p> <pre><code>pilon --genome genome.fasta --frags pilon_aln.bam --output pilon1 --fix all --mindepth 0.5 --changes --verbose --threads 4\n</code></pre> <ul> <li><code>--genome</code> is the name of the input assembly to be corrected</li> <li><code>--frags</code> is the alignment of the reads against the assembly</li> <li><code>--output</code> is the name of the output prefix</li> <li><code>--fix</code> is an option for types of corrections</li> <li><code>--mindepth</code> gives a minimum read depth to use</li> <li><code>--changes</code> produces an output file of the changes made</li> <li><code>--verbose</code> prints information to the screen during the run</li> <li><code>--threads</code>: number of cores</li> </ul> <p>Look at the changes file: <pre><code>less pilon1.changes\n</code></pre></p> <p>Example:</p> <p></p> <ul> <li>We can see lots of cases where a deletion (represented by a dot) has been corrected to a base.  </li> <li>Type <code>q</code> to exit.</li> </ul> <p>Look at the details of the fasta file: <pre><code>infoseq pilon1.fasta\n</code></pre></p> <ul> <li>chromosome - 30059 (net +40 bases)</li> <li>plasmid - 2252 (no change)</li> </ul> <p>Change the file name: <pre><code>cp pilon1.fasta assembly.fasta\n</code></pre></p> <p>We now have the corrected genome assembly of Staphylococcus aureus in .fasta format, containing a chromosome and a small plasmid.  </p>"},{"location":"tutorials/pacbio/#questions_3","title":"Questions","text":"<p>Why don\u2019t we correct earlier in the assembly process?</p> Answer (click to reveal) We need to circularise the contigs and trim overhangs first.  <p>Why can we use some reads (Illumina) to correct other reads (PacBio) ?</p> Answer (click to reveal) Illumina reads have higher accuracy.  <p>Could we just use PacBio reads to assemble the genome?</p> Answer (click to reveal) Yes, if accuracy adequate."},{"location":"tutorials/pacbio/#8-comparative-genomics","title":"8. Comparative Genomics","text":"<p>In the workshop so far, we used a partial bacterial genome so that the exercises could run in the time available. As a demonstration, to better see the effect of long and short reads on the assembly, we will examine a complete bacterial genome.</p>"},{"location":"tutorials/pacbio/#assemblies","title":"Assemblies","text":"<p>This bacterial genome has been assembled from either long PacBio reads (using Canu) or shorter Illumina reads (using Spades).</p> <p>Assembly graphs:</p> <p>Look at the assembly graph (usually has a suffix .gfa), in the program Bandage. This shows how contigs are related, albeit with ambiguity in some places.</p> <p>The assembly graph from Illumina reads (Spades assembly):</p> <p></p> <p>The assembly graph from PacBio reads (Canu assembly) - this is missing the small plasmid:</p> <p></p> <p>Here we can see that the long read data results in a more contiguous assembly - one complete chromosome versus many smaller contigs with ambiguous placement.</p> <p>Does it matter that an assembly is in many contigs?</p> Answer (click to reveal) Yes and No. Yes: broken genes can lead to missing/incorrect annotations; fragmented assemblies provide less information about the genomic structure (*e.g.* the number of plasmids) and the location of genes of interest (*e.g.* gene A is located on plasmid X). No: many or all genes may still be annotated correctly. Gene location is useful (e.g. chromosome, plasmid1) but not always essential (e.g. presence/absence of particular resistance genes may be enough information)."},{"location":"tutorials/pacbio/#annotations","title":"Annotations","text":"<p>Genomic features such as genes can be identified with annotation tools. We have used a tool called Prokka to annotate the two genomes described above.</p> <p>Some of the output data is displayed here:</p>   |assembly:| PacBio|Illumina| |-------|--------:|-------:| |size|2,825,804|2,792,905| |contigs|2|123| |CDS|2614|2575| |tRNA|61|65| |rRNA|19|4|   <p>Why are there more CDS identified in the PacBio assembly?</p> Answer (click to reveal) The PacBio assembly may have errors (usually a one base indel) which will cause a frame shift, which can result in three things: a longer CDS, a shorter CDS, or a shorter CDS plus an additional CDS. In addition, the Illumina assembly is about 33 kb smaller than the PacBio assembly. In bacteria, a rule of thumb is that 1 kb is roughly equal to one gene. Thus, we would probably expect about 33 fewer identified genes, which fits with these results.    <p>Why are there more rRNA identified in the PacBio assembly?</p> Answer (click to reveal) There may be multiple copies of the rRNAs and these could have been collapsed as repeats in the Illumina assembly."},{"location":"tutorials/pacbio/#9-summary","title":"9. Summary","text":"<p>In this workshop, we used bacterial sequencing data from long and short reads to produce a polished genome.</p> <p>Procedure and tools:</p> <ul> <li>Canu to assemble long-read PacBio data</li> <li>Circlator to trim and circularise contigs</li> <li>BWA-MEM to map shorter Illumina reads to the PacBio assembly</li> <li>Spades to assemble any unmapped, leftover Illumina reads (the plasmid)</li> <li>Pilon to correct the PacBio assembly with the more accurate Illumina reads</li> </ul> <p>We also looked at comparative genomics:</p> <ul> <li>Bandage to examine assembly graphs</li> <li>Prokka to annotate genomes with features such as genes</li> </ul> <p>Further research:</p> <ul> <li>Align genomes with Mauve: tutorial link</li> <li>Find core and pan genomes with Roary and Phandango: tutorial link</li> </ul> <p>Melbourne Bioinformatics tutorials:</p> <ul> <li>https://www.melbournebioinformatics.org.au/tutorials/</li> </ul> <p>Additional microbial genomics tutorials:</p> <ul> <li>http://sepsis-omics.github.io/tutorials/ and https://galaxy-au-training.github.io/tutorials/</li> </ul>"},{"location":"tutorials/proteomics_basic/","title":"Index","text":"<p>PR reviewers and advice: Ira Cooke</p> <p>Current slides: TBD</p> <p>Other slides:</p> <ul> <li>None yet</li> </ul>"},{"location":"tutorials/proteomics_basic/background_data_formats/","title":"Data Formats and Pre-processing","text":"<p>Mass Spectrometry data analysis is plagued by an overabundance of file formats.  The good news is that the Mass Spec community, including many instrument vendors have developed a standard file format for raw data, mzML.  The bad news is that many of the old formats are still in widespread use, and most instruments don\u2019t produce it natively.  The reference implementation of the mzML standard is a software suite called ProteoWizard. ProteoWizard includes a very handy tool called <code>msconvert</code> that is capable of converting raw data from most instruments into <code>mzML</code> or into one of many other formats.  In addition to format conversion, <code>msconvert</code> can also perform a wide variety of noise filtering and peak-picking functions to prepare data for analysis.  A typical pre-processing involves;</p> <ol> <li>Conversion from instrument .raw to mzML</li> <li>Peak picking on both MS1 and MS2 data using vendor-native peak picking routines (built in to msconvert)</li> <li>Denoising of MS2 data either by thresholding or by keeping only the largest peaks withing a moving window</li> <li>Convert spectrum identifiers into a standardized format</li> </ol> <p>To convert files from raw instrument native formats to <code>mzML</code> a windows PC is required.  If you need to do this, be sure to download ProteoWizard with vendor reader support .  This package comes with <code>MSConvertGUI</code> which allows conversion of raw files using a graphical interface.  Once files are in <code>mzML</code> or <code>mgf</code> format they can be converted to various other formats using the <code>msconvert3</code> tool in Galaxy.</p>"},{"location":"tutorials/proteomics_basic/background_findcountitems_workflow/","title":"Create a workflow","text":"<ol> <li>Click the Workflow menu item at the top of galaxy</li> <li> <p>Click the button called Create New Workflow</p> <p></p> </li> <li> <p>Enter a name and description for the new workflow and click Create</p> </li> <li> <p>You should now have a blank workflow canvas.  Create an input box for the workflow by scrolling to the bottom left of the galaxy tool menu.  Under Workflow Control and then under Inputs you should see an Input dataset item. Click it to create a blank input box</p> <p></p> </li> <li> <p>Now add workflow nodes for other tools by clicking on the relevant tool in the galaxy tool menu (left pane of galaxy). The tools to add are;</p> <ul> <li>The Select tool from the Find and Sort submenu</li> <li>The Line/Word/Character count tool from the Text Manipulation submenu</li> </ul> </li> <li> <p>After adding these tools you can join them up by dragging from the outputs of one node to the inputs of the next</p> <p></p> </li> <li> <p>Save your workflow</p> <p></p> </li> <li> <p>After saving the workflow return to the main Workflow menu (top of Galaxy) and select your new workflow to run it.  Before running the workflow you will be presented with a window that allows you to alter the workflow inputs. </p> <p></p> </li> </ol>"},{"location":"tutorials/proteomics_basic/background_galaxy/","title":"How to use Galaxy","text":"<p>This background wiki gives very brief guides on performing specific tasks in Galaxy.  For much more extensive documentation including many videos, online tutorials and discussion forums please consult the galaxy wiki.</p>"},{"location":"tutorials/proteomics_basic/background_galaxy/#create-a-new-history","title":"Create a new History","text":"<ol> <li>Click the <code>History Options</code> menu (cog icon) in the top-right corner of Galaxy.</li> <li>Select <code>Create new</code></li> <li>The new history will be called \u201cUnnamed History\u201d. Click its title to rename it.</li> </ol>"},{"location":"tutorials/proteomics_basic/background_galaxy/#rename-a-history-item","title":"Rename a history item","text":"<ol> <li>Locate the item in your history and click its pencil icon</li> <li>Enter a new name in the <code>Name:</code> field and click <code>Save</code></li> </ol>"},{"location":"tutorials/proteomics_basic/background_galaxy/#find-someones-exact-username","title":"Find someone\u2019s exact username","text":"<p>Click the <code>User</code> menu at the top of Galaxy.  The menu that appears will show the currently logged in username</p>"},{"location":"tutorials/proteomics_basic/background_galaxy/#share-a-history","title":"Share a History","text":"<ol> <li>Click the <code>History Options</code> menu (cog icon) in the top-right corner of Galaxy.</li> <li>Select <code>Share or Publish</code> </li> <li>Then select <code>Share with another user</code> and enter the user\u2019s full username</li> </ol>"},{"location":"tutorials/proteomics_basic/background_galaxy/#import-a-history","title":"Import a History","text":"<ol> <li>Click the <code>History Options</code> menu (cog icon) in the top-right corner of Galaxy.</li> <li>Select <code>Histories Shared with Me</code></li> </ol> <ol> <li>Select and view the desired history by clicking on its name</li> </ol>"},{"location":"tutorials/proteomics_basic/background_galaxy/#copy-datasets","title":"Copy Datasets","text":"<ol> <li>Click the <code>History Options</code> menu (cog icon) in the top-right corner of Galaxy.</li> <li>Select <code>Histories Shared with Me</code></li> </ol> <ol> <li>The screen that appears allows copying of specific datasets between any of your histories</li> </ol>"},{"location":"tutorials/proteomics_basic/background_galaxy/#multi-file-inputs","title":"Multi File Inputs","text":"<p>Tools that support running over multiple input files indicate this by showing a multi-file icon beside the relevant input. After clicking the multi-file icon the display should change to allow multiple inputs to be selected.</p>"},{"location":"tutorials/proteomics_basic/background_galaxy/#saved-histories","title":"Saved Histories","text":"<p>To view a list of your saved histories click the <code>History Options</code> menu (cog icon) in the top-right corner of Galaxy and select <code>Saved Histories</code> Once the list of your histories appears you can switch to a history by clicking it. You can also use this view to delete histories or organise them by tags</p>"},{"location":"tutorials/proteomics_basic/background_protein_databases/","title":"Protein Databases","text":"<p>In a perfect experiment we would obtain fragment ions for all the <code>b,y</code> pairs of each peptide.  If peaks can be unambiguously identified for all these pairs then the sequence of a peptide can simply be read off from the fragmentation spectrum itself.  Unfortunately this is almost never the case using current instrumentation, and the only practical method to determine the sequences of peptides and proteins present in a sample is to compare spectra with a database of potential proteins.  This <code>database</code> is usually just a <code>FASTA</code> formatted file containing amino acid sequences for all known proteins from your study organism.  Constructing this database is a crucial first step in any proteomics analysis because only peptide sequences present in the database will appear in the results.  In order to detect a peptide, its exact sequence must be explicitly included in the database. </p>"},{"location":"tutorials/proteomics_basic/background_protein_databases/#large-vs-small-database","title":"Large vs Small Database","text":"<p>Since it is impossible to detect a peptide unless it is present in the search database, one might consider using a very large database such as the full content of <code>NCBInr</code>.  There are two problems with this.  The most important is that the sensivity of a search goes down as the search space goes up, which means that searches on large databases often return far fewer hits.  Another, more practical issue is that searching a large database often takes an extremely long time, and might even crash your search engine. </p> <p>Note that very small databases can also cause problems.  In particular, some search engines, and most search engine post-processing statistical tools attempt to model the shape of peptide-sequence-match (PSM) score distributions.  With a very small database (or with very few spectra) it may not be possible to model these distributions accurately.  In most practical situations this is not an issue.</p>"},{"location":"tutorials/proteomics_basic/background_protein_databases/#typical-sources-of-data-for-search-databases","title":"Typical sources of data for search databases","text":"<p>Uniprot.org: This is the canonical resource for publicly available protein sequences. It includes two large databases <code>SwissProt</code>, which contains manually curated sequences and <code>Trembl</code> which contains sequences automatically generated from genomic and transcriptomic data.</p> <p>An Organism Specific database: In some cases, a community of researchers working on specific organisms will create their own sequence data repositories.  Some of these are well maintained and are the best source of data for that study organism.  Examples include <code>PlasmoDB</code> for Malaria for <code>Flybase</code> for drosophila.</p> <p>Transcriptome derived sequences: If you are working on an organism for which public sequence data are scarce, it may be worth obtaining transcriptomic sequences for it.  If sufficient data are obtained, the resulting assembled transcript sequences can be translated to form a good quality proteomic database.</p> <p>Other: Depending on the project you might want to include sequences for specific variants of interest, or a six-frame translation of a genome. </p>"},{"location":"tutorials/proteomics_basic/background_protein_databases/#should-i-include-decoys","title":"Should I include decoys?","text":"<p>Decoys are often useful, but not always needed.  Often, the decision to include decoys depends on the requirements of software that is used downstream of the search. Examples on this wiki that make use of <code>Peptide Prophet</code> typically use decoys because it can use these to \u2018pin down\u2019 the negative distribution.</p>"},{"location":"tutorials/proteomics_basic/background_protein_prophet/","title":"Protein Prophet","text":"<p>The development of the Protein Prophet statistical models, and its associated program was a big step forward for practitioners wanting to perform automated, large scale protein inference.  The original paper describing protein prophet is worth reading. It\u2019s citation is;</p> <p>Nesvizhskii, A. I., Keller, A., Kolker, E. &amp; Aebersold, R. A Statistical Model for Identifying Proteins by Tandem Mass Spectrometry. Anal. Chem. 75, 4646\u20134658 (2003).</p> <p>The practical reality of using Protein Prophet is a little different however as the program has undergone several significant developments since its original publication, and interpretation of Protein Prophet groupings can be challenging.  Let\u2019s look at a few examples;</p> <p>Uniquely identified protein</p> <p>sp|P00761|TRYP_PIG</p> <p>Search for this protein in the Protein Prophet results file. It should have <code>group_probability</code> and <code>protein_probability</code> scores of <code>1.0</code>.  All of the three peptides that contribute evidence for this protein map uniquely to this protein alone so there are no other proteins in this group.</p> <p>Indistinguishable Protein</p> <p>sp|O08600|NUCG_MOUSE</p> <p>In this case there still just one entry for the protein, but <code>Protein Prophet</code> lists another protein <code>tr|Q3UN47|Q3UN47_MOUSE</code> in the indistinguishable proteins column.  This protein is indistinguishable from the primary entry <code>sp|O08600|NUCG_MOUSE</code> because all of the identified peptides are shared between both.</p> <p>A well behaved protein group</p> <p>sp|O08677|KNG1_MOUSE</p> <p>This protein is part of a smallish group of similar proteins.  The overall group probability is high (<code>1.0</code>) but probabilities group members are different.  The first member of the group has a high probability <code>0.99</code> but all other members have probabilities of <code>0.0</code>.  This is because all of the high scoring peptides are contained in the first entry.  Evidence for the other entries consists of either (a) peptides that are contained in the first entry or (b) peptides with very low scores. Protein Prophet uses the principle of Occam\u2019s razor;</p> <p>plurality should not be posited with out necessity</p> <p>In other words, unless otherwise indicated by a unique peptide, we should assume that shared peptides come from the same protein.</p> <p>Anomalous groups</p> <p>In rare cases Protein Prophet fails produces strange results when its algorithm fails to converge.  This can result in situations where the group probability is high (1.0) but all of the member proteins within the group are assigned a probability of 0. </p>"},{"location":"tutorials/proteomics_basic/background_search_engines/","title":"How Search Engines Work","text":"<p>When choosing search engine parameters it can be helpful to understand the basic algorithms that most search engines share. The workflow of a typical search engine is roughly as outlined below.</p> <ol> <li>The next spectrum in the dataset is loaded for consideration</li> <li>The spectrum parent mass and the parent mass tolerance is used to select a small set of matching peptides from the database.  This is a crucial step because the number of peptides that fall within the matching mass window will determine the effective size of the search space.  Database search space size also depends on many other factors including<ul> <li>The size of the protein database</li> <li>Variable modifications allowed on peptides</li> <li>Parent ion mass tolerance</li> <li>Number of allowed missed enzymatic cleavages</li> <li>Specificity of the enzyme used for digestion</li> </ul> </li> <li>Each of the matching peptides is scored against the spectrum. The nature of this scoring is where search engines typically differ from each other.</li> <li>The highest scoring <code>peptide spectrum match</code> (PSM) is recorded along with its score.</li> <li>Some form of global analysis of (PSM) scores is performed in order to determine a threshold of significance</li> </ol> <p>There are many excellent presentations online that explain this in more detail.  Although it\u2019s old, I recommend this presentation by Brian Searle</p>"},{"location":"tutorials/proteomics_basic/proteomics_basic/","title":"Identifying proteins from mass spec data","text":"<p>Anticipated workshop duration when delivered to a group of participants is 4 hours.  </p> <p>For queries relating to this workshop, contact Melbourne Bioinformatics (bioinformatics-training@unimelb.edu.au).</p>"},{"location":"tutorials/proteomics_basic/proteomics_basic/#overview","title":"Overview","text":""},{"location":"tutorials/proteomics_basic/proteomics_basic/#topic","title":"Topic","text":"<ul> <li> Genomics</li> <li> Transcriptomics</li> <li> Proteomics</li> <li> Metabolomics</li> <li> Statistics and visualisation</li> <li> Structural Modelling</li> <li> Basic skills</li> </ul>"},{"location":"tutorials/proteomics_basic/proteomics_basic/#skill-level","title":"Skill level","text":"<ul> <li> Beginner  </li> <li> Intermediate  </li> <li> Advanced  </li> </ul>"},{"location":"tutorials/proteomics_basic/proteomics_basic/#description","title":"Description","text":"<p>Data: The data used in this tutorial were obtained from a single run on an Orbitrap Elite mass spectrometer.  The sample itself corresponds to a purified organelle from Mouse cells.</p> <p>Tools: Various tools on Galaxy.</p> <p>Pipeline: Section 1: Data Section 2: Run a Search Section 3: Protein Inference  </p>"},{"location":"tutorials/proteomics_basic/proteomics_basic/#learning-objectives","title":"Learning Objectives","text":"<p>At the end of this introductory workshop, you will:</p> <ul> <li>Identify a list of proteins from tandem mass spectrometry data.</li> <li>Use this list to guess the identity of the \u201cmystery\u201d organelle.</li> </ul>"},{"location":"tutorials/proteomics_basic/proteomics_basic/#tutorial-layout","title":"Tutorial layout","text":"<ul> <li>There is a <code>Table of contents</code> on the right-hand side which can be used to easily navigate through the tutorial by clicking the relevant section.</li> </ul> <pre><code>These grey coloured boxes are code blocks. The rectangular boxes in the top\nright hand corner of this code block/grey box can be used to copy the code to\nthe clipboard.\n</code></pre> Coloured boxes like these with &gt; on the far right hand side, can be clicked to reveal the contents. <p>REVEALED!</p> <p>Attention: Pay attention to the information in these boxes.</p> <p>Important information, hints and tips.</p>"},{"location":"tutorials/proteomics_basic/proteomics_basic/#requirements-and-preparation","title":"Requirements and preparation","text":"<p>Important</p> <p>Attendees are required to use their own laptop computers. </p> <p>At least one week before the workshop, if required, participants should install the software below.  This should provide sufficient time for participants to liaise with their own IT support should they encounter any IT problems.  </p>"},{"location":"tutorials/proteomics_basic/proteomics_basic/#mode-of-delivery","title":"Mode of Delivery","text":"<p>This workshop will be run on Galaxy. Use a supported browser such as Firefox, Safari or Chrome.</p> <ol> <li> <p>Open a browser and go to a Galaxy server.</p> <ul> <li>You can use a galaxy server of your own or</li> <li>Galaxy Australia</li> </ul> </li> <li> <p>Register as a new user if you don\u2019t already have an account on that particular server.</p> </li> </ol>"},{"location":"tutorials/proteomics_basic/proteomics_basic/#required-software","title":"Required Software","text":"<p>No additional data is needed.</p> <p>If you use your own galaxy server you will need to make sure you have the protk proteomics tools installed.</p>"},{"location":"tutorials/proteomics_basic/proteomics_basic/#required-data","title":"Required Data","text":"<ul> <li>https://swift.rc.nectar.org.au:8888/v1/AUTH_ffb00634530a4c37a0b8b08c48068adf/proteomics_tutorial/OrganelleSample.mzML</li> <li>https://swift.rc.nectar.org.au:8888/v1/AUTH_ffb00634530a4c37a0b8b08c48068adf/proteomics_tutorial/OrganelleSample.mgf</li> <li>https://swift.rc.nectar.org.au:8888/v1/AUTH_ffb00634530a4c37a0b8b08c48068adf/proteomics_tutorial/UniprotMouseD_20140716.fasta</li> </ul>"},{"location":"tutorials/proteomics_basic/proteomics_basic/#slides-and-workshop-instructions","title":"Slides and workshop instructions","text":""},{"location":"tutorials/proteomics_basic/proteomics_basic/#author-information","title":"Author Information","text":"<p>Written by: Ira Cooke James Cook University</p> <p>Created: Oct 2015 Reviewed:</p>"},{"location":"tutorials/proteomics_basic/proteomics_basic/#background","title":"Background","text":"<p>Analyses of this type are a fundamental part of most proteomics studies. The basic idea is to match tandem ms spectra obtained from a sample with equivalent theoretical spectra from a reference protein database. The process is referred to as \u201cprotein database search\u201d or even \u201cprotein sequencing\u201d, although amino acid sequences are not obtained de novo with this method.</p> <p>The data used in this tutorial were obtained from a single run on an Orbitrap Elite mass spectrometer.  The sample itself corresponds to a purified organelle from Mouse cells.  </p> <p>The aim of the tutorial will be to create a list of all proteins that can be confidently said to be present in the sample, and then to use this list to guess the identity of the \u201cmystery\u201d organelle.</p> <p>This tutorial uses free software including:</p> <ul> <li>The X!Tandem search engine</li> <li>The Trans Proteomic Pipeline (TPP) for post-search validation</li> <li>The Protk tool suite for various conversion tasks and to make working with X!Tandem and the TPP easier</li> <li>The Galaxy platform to bring all these tools together</li> </ul>"},{"location":"tutorials/proteomics_basic/proteomics_basic/#section-1-data","title":"Section 1: Data","text":""},{"location":"tutorials/proteomics_basic/proteomics_basic/#login-to-galaxy","title":"Login to Galaxy","text":"<p>Make sure you are using a supported browser and are logged in to Galaxy.</p>"},{"location":"tutorials/proteomics_basic/proteomics_basic/#import-mass-spec-data","title":"Import mass spec data","text":"<ol> <li> <p>Create a new history in Galaxy and name it \u201cOrganelle Tutorial\u201d.</p> </li> <li> <p>Download datasets using the Galaxy uploader tool.</p> <p>Open this tool by clicking the button as shown below</p> <p></p> <p>After opening the tool select Paste/Fetch data and paste the following URL into the box that appears.  Then click Start to initiate the download.</p> <p>https://swift.rc.nectar.org.au:8888/v1/AUTH_ffb00634530a4c37a0b8b08c48068adf/proteomics_tutorial/OrganelleSample.mzML</p> <p>After the download is finished you should have a single item in your history.</p> </li> <li> <p>Rename the history item by clicking the pencil icon beside it to \u201cEdit attributes\u201d.</p> <p></p> <ul> <li> <p>This should bring up a dialog box where you can edit the name.  </p> </li> <li> <p>Change the name by removing everything up to the last forward slash \u201c/\u201d</p> </li> <li> <p>Your item should then be named OrganelleSample.mzML</p> </li> <li> <p>Don\u2019t forget to click \u201cSave\u201d.</p> </li> </ul> </li> </ol>"},{"location":"tutorials/proteomics_basic/proteomics_basic/#basic-properties-of-the-data","title":"Basic properties of the data","text":"<p>Format:</p> <p>Mass spectrometry data comes in many different formats and the first step in a proteomics analysis often involves data conversion or pre-processing. You can read more about mass spectrometry data formats by clicking the <code>Data Formats and pre-processing</code> bar below.</p> Data Formats and pre-processing <p>Mass Spectrometry data analysis is plagued by an overabundance of file formats.  The good news is that the Mass Spec community, including many instrument vendors have developed a standard file format for raw data, mzML.  The bad news is that many of the old formats are still in widespread use, and most instruments don\u2019t produce it natively.  The reference implementation of the mzML standard is a software suite called ProteoWizard. ProteoWizard includes a very handy tool called <code>msconvert</code> that is capable of converting raw data from most instruments into <code>mzML</code> or into one of many other formats.  In addition to format conversion, <code>msconvert</code> can also perform a wide variety of noise filtering and peak-picking functions to prepare data for analysis.  A typical pre-processing involves;</p> <ol> <li>Conversion from instrument .raw to mzML</li> <li>Peak picking on both MS1 and MS2 data using vendor-native peak picking routines (built in to msconvert)</li> <li>Denoising of MS2 data either by thresholding or by keeping only the largest peaks withing a moving window</li> <li>Convert spectrum identifiers into a standardized format</li> </ol> <p>To convert files from raw instrument native formats to <code>mzML</code> a windows PC is required.  If you need to do this, be sure to download ProteoWizard with vendor reader support.  This package comes with <code>MSConvertGUI</code> which allows conversion of raw files using a graphical interface.  Once files are in <code>mzML</code> or <code>mgf</code> format they can be converted to various other formats using the <code>msconvert3</code> tool in Galaxy.</p> <p></p> <p>1) What format is the OrganelleSample.mzML file?</p> Hint <p>Try clicking the title bar on the data in your galaxy history.  This will toggle display of some additional information about the data.</p> Answer <p>mzML</p> <p>MS versus MS/MS:</p> <p>A key feature of Tandem mass spectrometry is the acquisition of mass spectra (spectra) that measure the masses of precursor ions (whole peptides) as well as spectra that measure the fragment masses of a single selected peptide.  These two types of measurements are called MS and MS/MS spectra respectively.  The following schematic shows how an MS/MS scan results from the fragmentation of a selected product ion.  Often multiple MS/MS spectra are obtained for each MS scan, selecting different precursor masses each time so that as many peptides as possible can be analyzed.</p> <p></p> <p>Number of spectra:</p> <p>Click the eye icon on the history item to view the mzML file as text.  The file is almost impossible to read by hand but with some text searching we will be able to deduce the number of MS and MS/MS spectra in the file.</p> <p>Now try searching for the text \u201cMS1 spectrum\u201d in the page using your web browser\u2019s search function.  Looking closely you should see that this text appears once for every MS1 spectrum in the file (plus it occurs one extra time at the top of the file as part of the file description).  The file is large though and the browser can only see the first megabyte of it.</p> <p>Now search for the text \u201cspectrumList count\u201d. It should bring you to a line in the file that says spectrumList count=\u201d24941\u201d.  There are a total of 24941 spectra in the entire file including both MS and MS/MS spectra.</p> <p>2) How many MS spectra are there in this dataset?</p> Hint <p>To answer this question you will need to use the Select tool from the Filter and Sort submenu to select lines matching the text \u201cMS1 spectrum\u201d in the whole file.  Then use the Line/Word/Character count tool from the Text Manipulation submenu to count the number of lines returned by running the Select tool.</p> <p>The text \u201cMS1 spectrum\u201d also appears at the top of the file as part of its description so you will need to subtract 1 from your answer</p> Answer <p>3142</p> <p></p> <p>Attention</p> <p>In the previous exercise we used two galaxy tools in succession to find out the number of items in a file that matched some text. Future exercises use the same technique so you might find it useful to create a tiny workflow to automate this procedure. See the instructions below.</p> Create a mini workflow <ol> <li>Click the Workflow menu item at the top of galaxy</li> <li> <p>Click the button called Create New Workflow</p> <p></p> </li> <li> <p>Enter a name and description for the new workflow and click Create</p> </li> <li> <p>You should now have a blank workflow canvas.  Create an input box for the workflow by scrolling to the bottom left of the galaxy tool menu.  Under Workflow Control and then under Inputs you should see an Input dataset item. Click it to create a blank input box</p> <p></p> </li> <li> <p>Now add workflow nodes for other tools by clicking on the relevant tool in the galaxy tool menu (left pane of galaxy). The tools to add are;</p> <ul> <li>The Select tool from the Find and Sort submenu</li> <li>The Line/Word/Character count tool from the Text Manipulation submenu</li> </ul> </li> <li> <p>After adding these tools you can join them up by dragging from the outputs of one node to the inputs of the next</p> <p></p> </li> <li> <p>Save your workflow</p> <p></p> </li> <li> <p>After saving the workflow return to the main Workflow menu (top of Galaxy) and select your new workflow to run it.  Before running the workflow you will be presented with a window that allows you to alter the workflow inputs.</p> <p></p> </li> </ol> <p> Prior to the development of tandem mass spectrometry, peptides and proteins were detected purely by matching MS peaks against the masses of whole peptides via Peptide Mass Fingerprinting.  This has largely been superceded by tandem mass spectrometry which gains much greater specificity by using the MS/MS spectra.  In this tutorial only the MS/MS spectra will be used.</p> <p>3) How many MS/MS spectra are there in this dataset?</p> Hint <p>Use the fact that the file contains a total of 24941 spectra with your answer to the previous question about MS spectra.</p> Answer <p>21799</p>"},{"location":"tutorials/proteomics_basic/proteomics_basic/#alternate-data-formats","title":"Alternate data formats","text":"<p>Another format you are likely to encounter for tandem mass spectrometry data is Mascot Generic Format or mgf.  Mascot Generic Format (mgf) is the data file format preferred by the Mascot search engine.  It is a text based format is much easier to read by hand than the mzML file.  Each spectrum appears between \u201cBEGIN IONS\u201d and \u201cEND IONS\u201d statements and simply consists of (mz,intensity) pairs.  Additional summary information about the precursor (whole peptide) ion such as its mass, retention time and charge are included.</p> <ol> <li> <p>Download the Organelle Sample data in mgf format</p> <p>Use the Paste/Fetch data tool again and paste the following URL into the box that appears.  Then click Start to initiate the download.</p> <p>https://swift.rc.nectar.org.au:8888/v1/AUTH_ffb00634530a4c37a0b8b08c48068adf/proteomics_tutorial/OrganelleSample.mgf</p> </li> <li> <p>Inspect the data manually by viewing it in Galaxy. Try to get a feel for the way data is organised within the file.</p> </li> </ol> <p>4) How many spectra are there in this dataset and what type of spectra do you think they are?</p> Hint <p>Use the same technique you used for the previous exercise (or your workflow). Remember that for every spectrum there is one \u201cBEGIN IONS\u201d statement in the file.</p> <p>Consider your answers to questions 3 and 4</p> Answer <p>21799 MS/MS</p>"},{"location":"tutorials/proteomics_basic/proteomics_basic/#section-2-run-a-search","title":"Section 2: Run a Search","text":""},{"location":"tutorials/proteomics_basic/proteomics_basic/#obtain-a-search-database","title":"Obtain a Search Database","text":"<p>Setting up a search database is a critical step.  For this tutorial we have created a database for you, but if you need to create a database for your own data you\u2019ll need to consider the following key issues;</p> <ul> <li>Database size</li> <li>Whether to include decoys</li> <li>What types of variants to include if any</li> <li>How to format your database identifiers</li> </ul> <p>More details are provided by clicking on the \u201cProtein Databases\u201d below.</p> Protein Databases <p>In a perfect experiment we would obtain fragment ions for all the <code>b,y</code> pairs of each peptide.  If peaks can be unambiguously identified for all these pairs then the sequence of a peptide can simply be read off from the fragmentation spectrum itself.  Unfortunately this is almost never the case using current instrumentation, and the only practical method to determine the sequences of peptides and proteins present in a sample is to compare spectra with a database of potential proteins.  This <code>database</code> is usually just a <code>FASTA</code> formatted file containing amino acid sequences for all known proteins from your study organism.  Constructing this database is a crucial first step in any proteomics analysis because only peptide sequences present in the database will appear in the results.  In order to detect a peptide, its exact sequence must be explicitly included in the database.</p> <p>Large vs Small Database</p> <p>Since it is impossible to detect a peptide unless it is present in the search database, one might consider using a very large database such as the full content of <code>NCBInr</code>.  There are two problems with this.  The most important is that the sensivity of a search goes down as the search space goes up, which means that searches on large databases often return far fewer hits.  Another, more practical issue is that searching a large database often takes an extremely long time, and might even crash your search engine.</p> <p>Note that very small databases can also cause problems.  In particular, some search engines, and most search engine post-processing statistical tools attempt to model the shape of peptide-sequence-match (PSM) score distributions.  With a very small database (or with very few spectra) it may not be possible to model these distributions accurately.  In most practical situations this is not an issue.</p> <p>Typical sources of data for search databases</p> <ul> <li> <p>Uniprot.org: This is the canonical resource for publicly available protein sequences. It includes two large databases <code>SwissProt</code>, which contains manually curated sequences and <code>Trembl</code> which contains sequences automatically generated from genomic and transcriptomic data.</p> </li> <li> <p>An Organism Specific database: In some cases, a community of researchers working on specific organisms will create their own sequence data repositories.  Some of these are well maintained and are the best source of data for that study organism.  Examples include <code>PlasmoDB</code> for Malaria for <code>Flybase</code> for drosophila.</p> </li> <li> <p>Transcriptome derived sequences: If you are working on an organism for which public sequence data are scarce, it may be worth obtaining transcriptomic sequences for it.  If sufficient data are obtained, the resulting assembled transcript sequences can be translated to form a good quality proteomic database.</p> </li> <li> <p>Other: Depending on the project you might want to include sequences for specific variants of interest, or a six-frame translation of a genome.</p> </li> </ul> <p>Should I include decoys?</p> <p>Decoys are often useful, but not always needed.  Often, the decision to include decoys depends on the requirements of software that is used downstream of the search. Examples on this wiki that make use of <code>Peptide Prophet</code> typically use decoys because it can use these to \u2018pin down\u2019 the negative distribution.</p> <ol> <li> <p>Download a database of Mouse proteins in fasta format</p> <p>Use the Paste/Fetch data tool again and paste the following URL into the box that appears.  Then click Start to initiate the download.</p> <p>https://swift.rc.nectar.org.au:8888/v1/AUTH_ffb00634530a4c37a0b8b08c48068adf/proteomics_tutorial/UniprotMouseD_20140716.fasta</p> </li> <li> <p>Inspect the first few items in the database in Galaxy. The file is in Fasta format which means that each entry has a single description line that starts with a \u201c&gt;\u201d followed by a unique identifier and then some general descriptive information. The actual sequence of amino acids is given after the description line. Take note of the format of the database identifiers. They are in Uniprot format and look like this;</p> <p><code>sp|Q9CQV8|1433B_MOUSE</code>    The database also includes decoy sequences, appended at the end.  They have identifiers like this:    <code>decoy_rp75404</code></p> </li> </ol> <p>5) What is the ratio of decoys to non-decoys in the database?</p> Hint <p>Decoys are easiest to search for because they all start with \u201cdecoy_\u201d. The total number of database entries can be found simply expanding the fasta file in your history (by clicking on its title).</p> Answer <p>1:1</p>"},{"location":"tutorials/proteomics_basic/proteomics_basic/#run-a-search-using-xtandem","title":"Run a search using X!Tandem","text":"<p>A large number of search engines now exist for proteomics data.  This exercise uses X!Tandem which is one of the fastest and most widely used. Other search engines include OMSSA, MS-GF+ and Mascot.</p> <ol> <li>Select the X!Tandem Search tool</li> <li>Enter parameters as shown in the table below (leave all others at their defaults)</li> <li>Click Execute</li> </ol> Parameter Name Value Uploaded Fasta File <code>UniprotMouseD_20140716.fasta</code> MSMS File <code>OrganelleSample.mgf</code> Variable Modifications <code>Oxidation M</code> Fixed Modifications <code>Carbamidomethyl C</code> Missed Cleavages Allowed <code>2</code> Enzyme <code>Trypsin</code> Fragment Ion Tolerance <code>0.5</code> Precursor Ion Tolerance <code>10 ppm</code> <p>The search should run for about 5-10 minutes and will produce an output file in X!Tandem xml format. A much more useful format is pepXML so the next step in the analysis will be to run a tool to convert from tandem to pepXML.</p> <ol> <li>Select the Tandem to pepXML tool</li> <li>Select the output from the previous step as input and click Execute</li> </ol> <p>While the search is running, read some background theory by clicking the <code>How Search Engines Work</code> bar below.</p> How Search Engines Work <p>When choosing search engine parameters it can be helpful to understand the basic algorithms that most search engines share. The workflow of a typical search engine is roughly as outlined below.</p> <ol> <li>The next spectrum in the dataset is loaded for consideration</li> <li>The spectrum parent mass and the parent mass tolerance is used to select a small set of matching peptides from the database.  This is a crucial step because the number of peptides that fall within the matching mass window will determine the effective size of the search space.  Database search space size also depends on many other factors including<ul> <li>The size of the protein database</li> <li>Variable modifications allowed on peptides</li> <li>Parent ion mass tolerance</li> <li>Number of allowed missed enzymatic cleavages</li> <li>Specificity of the enzyme used for digestion</li> </ul> </li> <li>Each of the matching peptides is scored against the spectrum. The nature of this scoring is where search engines typically differ from each other.</li> <li>The highest scoring <code>peptide spectrum match</code> (PSM) is recorded along with its score.</li> <li>Some form of global analysis of (PSM) scores is performed in order to determine a threshold of significance</li> </ol> <p>There are many excellent presentations online that explain this in more detail.  Although it\u2019s old, I recommend this presentation by Brian Searle</p>"},{"location":"tutorials/proteomics_basic/proteomics_basic/#convert-results-to-tabular-format","title":"Convert Results to tabular format","text":"<p>Although the pepXML format is useful as input to other tools it is not designed to be read or analyzed directly. Galaxy includes a tool to convert pepXML into tabular (tab separated) format, which is much easier to read.  Tabular format also has the advantage that it can be downloaded and opened using many other programs including Excel and R.</p> <ol> <li>Select the pepXML to Table tool</li> <li>Select the pepXML file produced in the previous step as input and click Execute</li> </ol> <p>To get the most out of tabular files it is often necessary to know the column number corresponding to columns of interest.  Explore the column assignments in your tabular file by clicking on its title in your galaxy history.  This will show extra details about the item, including a handy preview where column numbers are displayed.</p> <p>6) In what column number is the assumed_charge of peptides in the pepXML tabular file?</p> Answer <p>3</p>"},{"location":"tutorials/proteomics_basic/proteomics_basic/#sort-tabular-outputs","title":"Sort tabular outputs","text":"<p>Examine the tabular output file from the previous step.  It contains many columns, of which the most interesting are probably the raw search engine score and the name of the protein from which each peptide has been derived. Note the presence of plenty of decoy proteins among the results.  These decoys should tend to have quite poor scores compared with real hits.  The raw score for X!Tandem searches is an E-value.  To push these decoys to the bottom of the list we can sort the data by raw score.</p> <ol> <li>Select the Sort data tool from the Filter and Sort menu in the left pane of Galaxy</li> <li>Choose to sort on raw_score.  This is column c10</li> <li>Select Ascending order_ for the sort direction (small E-values are good) and click *Execute</li> </ol> <p>Browse the resulting dataset.  The top of the file should now have very few decoys.</p>"},{"location":"tutorials/proteomics_basic/proteomics_basic/#convert-raw-scores-to-probabilities","title":"Convert raw scores to probabilities","text":"<p>Raw X!Tandem scores only give a rough estimate of the reliability of each peptide to spectrum match (PSM). A better estimate can be obtained by running a tool that uses global statistical properties of the search to assign a probability to each PSM of being correct.  A number of tools exist for this, and in this tutorial we use Peptide Prophet, which can work with a wide variety of different search engine scoring systems. It is extremely useful as it effectively converts disparate scores to the common scale of probability. The probabilities produced by Peptide Prophet can be used to set a threshold for acceptance.  For example we could decide to accept only PSM\u2019s with a probability greater than 0.95. Note that this is not the same as the False Discovery Rate which is computed by taking (1-p) for all the accepted PSM\u2019s and dividing by the total number of accepted PSM\u2019s. A widely used alternative to Peptide Prophet is Percolator.</p> <p>If you\u2019re curious about how Peptide Prophet works, take a look at this explainer, or the original paper</p> <ol> <li>Select the Peptide Prophet tool</li> <li>Select the X!Tandem output in pepXML format generated earlier as input</li> <li>Check the box that says Use decoys to pin down the negative distribution.</li> <li>Convert the resulting pepXML file to tabular using the PepXML to Table tool</li> </ol> <p>Take a look at the resulting tabular file.  Note that this time the peptideprophet_prob column is populated and contains numbers between 0 and 1.</p> <p>7) How many PSM\u2019s have a peptide prophet probability greater than or equal to 0.95?</p> Hint <p>Use the Filter tool from the Filter and Sort submenu. Also remember that Peptide Prophet probability is given in a column called peptideprophet*prob.  The syntax for \u201cgreater than or equal to\u201d in the Filter tool is</p> <p>Use this text in match with condition field of the Filter and Sort tool. c11&gt;=0.95</p> <p>To answer the second question use the Select tool on the filtered table to select lines matching \u201cdecoy*\u201d</p> Answer <ul> <li>3808</li> <li>21</li> </ul> <p>8) What proportion of MS/MS spectra in the original data file produce a reliable (probability greater than or equal to 0.95) peptide to spectrum match (PSM)</p> Hint <p>Consider your answer to question 7 relative to the total number of MS/MS spectra in the file (question 3)</p> <p>To take account of decoys remember that for every decoy in the results there is likely to be another non-decoy that is incorrect.</p> Answer <p>17.27%</p>"},{"location":"tutorials/proteomics_basic/proteomics_basic/#section-3-protein-inference","title":"Section 3: Protein Inference","text":""},{"location":"tutorials/proteomics_basic/proteomics_basic/#perform-protein-inference","title":"Perform Protein Inference","text":"<p>Up to this point we have looked at peptide to spectrum matches PSMs.  Each of the peptides observed will have come from a protein sequence in the fasta file that we used as a database, and this protein is recorded along with the PSM itself in all of the result tables we\u2019ve viewed so far.  Unfortunately, the process of inferring the existence of proteins based on these PSMs is much more complicated than that because some peptides are found in more than one protein, and of course some proteins are supported by more than one PSM.</p> <p>The Protein Prophet tool can be used to run a proper protein inference analysis, and assigns probabilities to individual proteins, as well as groups of related proteins.</p> <ol> <li>Select the Protein Prophet tool</li> <li>Choose the pepXML formatted output from Peptide Prophet as input and click Execute</li> <li>Convert the resulting protXML to tabular using the protXML to Table tool.</li> </ol> <p>9) How many proteins are there with protein prophet probability greater than or equal to 0.99?</p> Hint <p>Filter on column 6 protein_probability</p> Answer <p>601</p> <p>If you have time, click on the <code>Protein Prophet</code> box below and read over the Protein Prophet output.  Explore your output (use the unfiltered tabular output) to find examples of different kinds of Protein groupings.</p> Protein Prophet <p>The development of the Protein Prophet statistical models, and its associated program was a big step forward for practitioners wanting to perform automated, large scale protein inference.  The original paper describing protein prophet is worth reading. It\u2019s citation is;</p> <p>Nesvizhskii, A. I., Keller, A., Kolker, E. &amp; Aebersold, R. A Statistical Model for Identifying Proteins by Tandem Mass Spectrometry. Anal. Chem. 75, 4646\u20134658 (2003).</p> <p>The practical reality of using Protein Prophet is a little different however as the program has undergone several significant developments since its original publication, and interpretation of Protein Prophet groupings can be challenging.  Let\u2019s look at a few examples;</p> <p>Uniquely identified protein</p> <p>sp|P00761|TRYP_PIG</p> <p>Search for this protein in the Protein Prophet results file. It should have <code>group_probability</code> and <code>protein_probability</code> scores of <code>1.0</code>.  All of the three peptides that contribute evidence for this protein map uniquely to this protein alone so there are no other proteins in this group.</p> <p>Indistinguishable Protein</p> <p>sp|O08600|NUCG_MOUSE</p> <p>In this case there still just one entry for the protein, but <code>Protein Prophet</code> lists another protein <code>tr|Q3UN47|Q3UN47_MOUSE</code> in the indistinguishable proteins column.  This protein is indistinguishable from the primary entry <code>sp|O08600|NUCG_MOUSE</code> because all of the identified peptides are shared between both.</p> <p>A well behaved protein group</p> <p>sp|O08677|KNG1_MOUSE</p> <p>This protein is part of a smallish group of similar proteins.  The overall group probability is high (<code>1.0</code>) but probabilities group members are different.  The first member of the group has a high probability <code>0.99</code> but all other members have probabilities of <code>0.0</code>.  This is because all of the high scoring peptides are contained in the first entry.  Evidence for the other entries consists of either (a) peptides that are contained in the first entry or (b) peptides with very low scores. Protein Prophet uses the principle of Occam\u2019s razor;</p> <p>plurality should not be posited with out necessity</p> <p>In other words, unless otherwise indicated by a unique peptide, we should assume that shared peptides come from the same protein.</p> <p>Anomalous groups</p> <p>In rare cases Protein Prophet fails produces strange results when its algorithm fails to converge.  This can result in situations where the group probability is high (1.0) but all of the member proteins within the group are assigned a probability of 0.</p>"},{"location":"tutorials/proteomics_basic/proteomics_basic/#functional-enrichment-analysis","title":"Functional enrichment analysis","text":"<p>This step will allow you to discover the identity of the Organelle that was used to create the sample.  </p> <p>We use the GOrilla gene ontology enrichment analysis tool (a web based tool) to discover GO terms that are over-represented in proteins at the top of our list compared with those that are assigned very low probabilities (at the bottom).</p> <ol> <li>Start with unfiltered tabular protein prophet results</li> <li>Use the Cut columns tool from the Text Manipulation menu to extract the third column from the filtered protein table (contains protein_name).</li> <li>Convert the \u201cpipes\u201d that separate parts of the protein*name into separate columns using the Convert delimiters to TAB tool in the Text manipulation submenu of Galaxy. This should result in a file with 3 columns</li> <li>Use the Cut columns tool again to cut the second column from this dataset</li> <li>Download this file to your desktop and rename it to organelle.txt</li> <li>Open the GOrilla web page in your web browser</li> <li>Select Organism as Mouse</li> <li>Upload the organelle.txt file as a ranged gene list</li> <li>Choose Component for the ontology</li> <li>Submit</li> </ol> <p>10) What intracellular organelle was enriched in the sample?</p> Hint <p>Ignore terms relating to exosomes</p> <p>In the resulting output look to the most enriched and most specific GO terms.</p> Answer <p>Mitochondria</p>"},{"location":"tutorials/python_overview/","title":"Index","text":"<p>PR reviewers and advice: Bernard Pope</p> <p>Current slides: None</p> <p>Other slides:</p> <ul> <li>None yet</li> </ul>"},{"location":"tutorials/python_overview/python_overview/","title":"Authors:","text":"<ul> <li> <p>Bernie Pope, Melbourne Bioinformatics (formerly VLSCI)</p> </li> <li> <p>Catherine de Burgh-Day, Dept. of Physics, The University of Melbourne</p> </li> </ul>"},{"location":"tutorials/python_overview/python_overview/#general-information","title":"General information","text":"<ul> <li> <p>Python modules are stored in files containing a \u201c.py\u201d suffix (e.g solver.py).</p> </li> <li> <p>The main implementation of Python is called CPython (it is written in C). It is byte-code interpreted.</p> </li> <li> <p>Python can be used in two modes: interactive and scripted. In interactive mode you enter a program fragment and Python evaluates   it immediately and then prints the result before prompting for a   new input. The interactive prompt is usually rendered as the   chevron <code>&gt;&gt;&gt;</code>. In scripted mode your program is stored in one   or more files which are executed as one monolithic entity. Such   programs behave like ordinary applications.</p> </li> <li> <p>Python has automatic memory management (via garbage collection). Memory is allocated automatically as needed and freed   automatically when no longer used.</p> </li> </ul>"},{"location":"tutorials/python_overview/python_overview/#python-2-versus-python-3","title":"Python 2 versus Python 3","text":"<p>Currently there are two distinct flavours of Python available:</p> <ul> <li> <p>Python 2 (2.7.10 at the time of writing)</p> </li> <li> <p>Python 3 (3.4.3 at the time of writing)</p> </li> </ul> <p>Python 3 is the new and improved version of the language. Python 3 is not entirely backwards compatible, but the two versions share much in common. Version 2 is now in maintenance mode; new features will only be added to version 3. The public transition from 2 to 3 has been slower than some people would like. You are encouraged to use version 3 where possible. These notes are generally compatible with both versions, but we will point out key differences where necessary.</p>"},{"location":"tutorials/python_overview/python_overview/#indentation-for-grouping-code-blocks","title":"Indentation for grouping code blocks","text":"<ul> <li> <p>Python uses indentation to group code blocks. Most other languages use some kind of brackets for grouping.</p> </li> <li> <p>The recommended style is to use 4 space characters for a single indent (thus 8 spaces for two indents and so forth).</p> </li> <li> <p>You are encouraged not to use tabs for indentation because there is no standard width for a tab.</p> </li> <li> <p>Most good text editors can be configured so that that tab key is rendered as 4 space characters when editing Python code.</p> </li> </ul>"},{"location":"tutorials/python_overview/python_overview/#style-guide","title":"Style Guide","text":"<p>A popular style guide for Python is known as PEP 0008, there is a corresponding tool called pep8 which will check your code against the guide and report any transgressions.</p> <p>Example, Python compared to C:</p> <p>Python program for computing factorial:</p> <pre><code># Compute factorial of n,\n# assuming n &gt;= 0\n\ndef factorial(n):\n  result = 1\n  while n &gt; 0:\n      result *= n\n      n -= 1\n  return result\n\nprint(factorial(10))\n</code></pre> <p>C program for computing factorial:</p> <pre><code>#include &lt;stdio.h&gt;\n\n/* Compute factorial of n,\n  assuming n &gt;= 0 */\n\nint factorial(int n) {\n   int result = 1;\n\n   while (n &gt; 0) {\n      result *= n;\n      n -= 1;\n   }\n   return result;\n}\n\nint main(void) {\n   printf(\"%d\\n\", factorial(10));\n}\n</code></pre> <p>Things to note:</p> <ul> <li> <p>The difference in commenting style.</p> </li> <li> <p>C programs are statically typed, and you must declare the type of functions and variables. Python is dynamically typed.</p> </li> <li> <p>Code blocks in C are grouped by braces { }; Python uses indentation for grouping.</p> </li> <li> <p>The C program must have a main function. Python does not require a     main function, it just executes the top-level statements of the     module.</p> </li> <li> <p>The result returned by the C function is limited to the size of a     machine integer (say 32 bits). However, the result returned by the     Python function is unlimited in its size - it can compute     arbitrarily large factorials (up to the limit of the available     memory in your computer).</p> </li> </ul>"},{"location":"tutorials/python_overview/python_overview/#comments","title":"Comments","text":"<p>Program comments start with a hash character \u201c#\u201d and continue until the end of the line. There are no multi-line comment markers, but that can sometimes be faked with multi-line string literals.</p> <p>Examples:</p> <pre><code># This is a comment.\n# This is another comment.\nx = 5 # This is a comment that follows some code.\n'''This is\na multi-line\nstring literal\nwhich can sometimes act like\na\ncomment.\n'''\n</code></pre>"},{"location":"tutorials/python_overview/python_overview/#running-a-python-program","title":"Running a Python program","text":"<p>There are many ways to run Python code:</p> <ul> <li> <p>You can run the interpreter in interactive mode. On Unix (Linux, OS     X) you can run the python command at the command line.</p> </li> <li> <p>If you have Python code stores in a file, say example.py, you can     run it from the command line like so: python example.py</p> </li> <li> <p>You can use one of several integrated programming environments.     Python ships with a fairly minimal one called IDLE, though     many scientists prefer the more comprehensive IPython.</p> </li> <li> <p>If your Python code was installed as a package (see below), then it     may be executed like an ordinary application without the user     being aware of how the program was implemented.</p> </li> </ul>"},{"location":"tutorials/python_overview/python_overview/#objects-and-types","title":"Objects and types","text":"<ul> <li> <p>Every value in Python is an object (including functions!).</p> </li> <li> <p>Objects can have attributes and methods, which are accessed via the     dot \u201c.\u201d operator.</p> </li> <li> <p>All objects have a type.</p> </li> <li> <p>Types are also objects!</p> </li> <li> <p>Python is dynamically typed: you may get type errors at runtime but     never at compile time.</p> </li> <li> <p><code>type(x)</code> returns the type of x.</p> </li> <li> <p>Python variables may be assigned to values of different types at     different points in the program.</p> </li> </ul> <p>Interactive examples (Python 3):</p> <pre><code>&gt;&gt;&gt; # Create a list, assign to the variable x\n&gt;&gt;&gt; x = [3, 1, 2, 3]\n&gt;&gt;&gt; # Ask for the type of the value assigned to x\n&gt;&gt;&gt; type(x)\n&lt;class 'list'&gt;\n&gt;&gt;&gt; # Ask for the type of the first item in the list (an integer)\n&gt;&gt;&gt; type(x[0])\n&lt;class 'int'&gt;\n&gt;&gt;&gt; # Count the number of times 3 appears in the list\n&gt;&gt;&gt; # by calling the count method\n&gt;&gt;&gt; x.count(3)\n2\n&gt;&gt;&gt; # Sort the contents of the list in-place.\n&gt;&gt;&gt; # Note that this mutates the list object!\n&gt;&gt;&gt; # Also note that Python does not print the result in this case.\n&gt;&gt;&gt; x.sort()\n&gt;&gt;&gt; # Ask Python to show the value of the list\n&gt;&gt;&gt; # assigned to the variable x (note it is now sorted)\n&gt;&gt;&gt; x\n[1, 2, 3, 3]\n&gt;&gt;&gt; # Assign x to an object of a different type (a float)\n&gt;&gt;&gt; x = 3.142\n&gt;&gt;&gt; type(x)\n&lt;class 'float'&gt;\n</code></pre>"},{"location":"tutorials/python_overview/python_overview/#booleans","title":"Booleans","text":"<ul> <li>Represent truth values</li> <li>Values: <code>True</code>, <code>False</code></li> <li>Type: <code>bool</code></li> <li>Operators: <code>and</code>, <code>or</code>, <code>not</code></li> <li><code>bool(x)</code> will convert x to a boolean. The heuristic is that empty things and zero-ish things are <code>False</code>, everything else is <code>True</code> (but the user can override for their own types).<ul> <li><code>False</code> values:<ul> <li><code>False</code></li> <li><code>0</code> (zero integer)</li> <li><code>0.0</code> (zero float)</li> <li><code>{}</code> (empty dictionary)</li> <li><code>()</code> (empty tuple)</li> <li><code>[]</code> (empty list)</li> <li><code>''</code> (empty string)</li> <li><code>None</code></li> </ul> </li> <li><code>True</code> values:<ul> <li>everything else</li> </ul> </li> </ul> </li> <li>In numerical contexts <code>True</code> is considered equal to the integer <code>1</code> and     <code>False</code> is considered equal to the integer <code>0</code>. However, these     conversions are a common cause of bugs and should be avoided.</li> <li>Python will automatically test the truthiness of a value if it     appears in a boolean context.</li> </ul> <p>Interactive examples:</p> <pre><code>&gt;&gt;&gt; not True\nFalse\n&gt;&gt;&gt; not False\nTrue\n&gt;&gt;&gt; not ()\nTrue\n&gt;&gt;&gt; not [1,2,3]\nFalse\n&gt;&gt;&gt; True and False\nFalse\n&gt;&gt;&gt; True and ()\n()\n</code></pre>"},{"location":"tutorials/python_overview/python_overview/#conditional-statements","title":"Conditional Statements","text":"<ul> <li>Conditional statements use the keywords: <code>if</code>, <code>elif</code>, <code>else</code>. The syntax     for a conditional statement is:</li> </ul> <pre><code>if expression:\n    statement-block\nelif expression:\n    statement-block\n...\nelse:\n    statement-block\n</code></pre> <ul> <li> <p>A conditional statement must have exactly one <code>if</code> part. It may have     zero or more <code>elif</code> parts, and a single optional <code>else</code> part at the     end.</p> </li> <li> <p>The <code>if</code> and <code>elif</code> parts test the value of their boolean expressions.     If the expression evaluates to something which is <code>True</code> or can be     converted to <code>True</code> (see the rules for Booleans above) then the     statement block immediately beneath that part is executed.     Otherwise the following condition (if any) is tried. The <code>else</code>     part, if it exists, is always and only executed if no preceding     condition was <code>True</code>.</p> </li> </ul> <p>Interactive examples:</p> <pre><code>&gt;&gt;&gt; if []:\n...     print(\"Was considered True\")\n... else:\n...     print(\"Was considered False\")\n...\nWas considered False\n</code></pre>"},{"location":"tutorials/python_overview/python_overview/#numbers-and-basic-mathematics","title":"Numbers and basic mathematics","text":""},{"location":"tutorials/python_overview/python_overview/#integers","title":"Integers","text":"<ul> <li> <p>Represent whole negative and positive numbers (and zero).</p> </li> <li> <p>The range of integer values is unbounded (up to some limit defined     by how much memory you have on your computer).</p> </li> <li> <p>Python 2 distinguishes between two integer types <code>int</code> and <code>long</code>, and     automatically promotes <code>int</code> to long where necessary, whereas Python     3 considers them all one type called <code>int</code>.</p> </li> <li> <p>Base ten is the default literal notation: <code>42</code> (means <code>(4 * 10) + 2</code>)</p> </li> <li> <p>Hexadecimal literals start with <code>0x</code>, octal literals start with <code>0o</code>,     binary literals start with <code>0b</code>.</p> </li> <li> <p><code>int(x)</code> will try to convert x to an integer, x can be another numeric     type (including booleans) or a string. You may specify an optional     base for the conversion.</p> </li> </ul> <p>Interactive examples (in Python 3):</p> <pre><code>&gt;&gt;&gt; 2 ** 200\n1606938044258990275541962092341162602522202993782792835301376\n&gt;&gt;&gt; 0x10\n16\n&gt;&gt;&gt; 0b10\n2\n&gt;&gt;&gt; -0 == 0\nTrue\n&gt;&gt;&gt; int(\"123\")\n123\n&gt;&gt;&gt; int(\"3.142\")\nTraceback (most recent call last):\nFile \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n    ValueError: invalid literal for int() with base 10: '3.142'\n</code></pre>"},{"location":"tutorials/python_overview/python_overview/#floating-point-numbers","title":"Floating Point Numbers","text":"<ul> <li> <p>Represent a finite approximation to the real numbers.</p> </li> <li> <p>Type: <code>float</code>.</p> </li> <li> <p>(On most platforms) Python uses IEEE-754 double precision floating     point numbers which provide 53 bits of precision.</p> </li> <li> <p><code>sys.float_info</code> contains details about max, min, epsilon etcetera.</p> </li> <li> <p>Literals can be in ordinary notation or in exponential notation:</p> <ul> <li>Ordinary: <code>3.142</code></li> <li>Exponential: <code>314.2e-2</code></li> </ul> </li> <li> <p>Ordinary notation requires a point <code>.</code>, but digits following the     point are optional.</p> </li> <li> <p>Exponential notation does not require a point unless you have a     fractional component.</p> </li> <li> <p><code>float(x)</code> will try to convert x to a floating point number, x can be     another numeric type (including booleans) or a string.</p> </li> <li> <p>Numeric operators will automatically convert integer arguments to     floating point in mixed-type expressions.</p> </li> <li> <p>In Python 3 the division operator <code>/</code> computes a floating point result     for integer arguments. However, in Python 2 it computes an integer     result for integer arguments.</p> </li> </ul> <p>Interactive examples:</p> <pre><code>&gt;&gt;&gt; type(3.142)\n&lt;class 'float'&gt;\n&gt;&gt;&gt; type(12)\n&lt;class 'int'&gt;\n&gt;&gt;&gt; 3.142 + 12\n15.142\n&gt;&gt;&gt; 3.142 == 314.2e-2\nTrue\n&gt;&gt;&gt; 3. == 3.0\nTrue\n&gt;&gt;&gt; 1/0\nTraceback (most recent call last):\nFile \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nZeroDivisionError: division by zero\n&gt;&gt;&gt; # Integer divided by integer yields a float in Python 3\n&gt;&gt;&gt; 10 / 3\n3.3333333333333335\n&gt;&gt;&gt; float(\"123\")\n123.0\n&gt;&gt;&gt; float(\"3.142\")\n3.142\n</code></pre>"},{"location":"tutorials/python_overview/python_overview/#complex-numbers","title":"Complex Numbers","text":"<ul> <li> <p>Represent a finite approximation to the complex numbers.</p> </li> <li> <p>Type: <code>complex</code></p> </li> <li> <p>A pair of floating point numbers: real \u00b1 imaginary.</p> </li> <li> <p>The real part is optional (defaults to 0). The imaginary part is     followed immediately by the character <code>j</code>.</p> </li> </ul> <p>Interactive Examples:</p> <pre><code>&gt;&gt;&gt; 5j + 3j\n8j\n&gt;&gt;&gt; 2-5j\n(2-5j)\n&gt;&gt;&gt; 2-5j + 3j\n(2-2j)\n</code></pre>"},{"location":"tutorials/python_overview/python_overview/#numeric-operators","title":"Numeric Operators","text":"Name Operation Precedence Associativity Notes <code>+</code> add low left Can also be used to concatenate strings together. <code>*</code> multiply medium left <code>-</code> subtract low left <code>/</code> divide medium left In Python 3 the result is always a floating point number. In Python 2 the result is an integer if both operands are integers. <code>//</code> floor-divide medium left divide then floor, result is an integer <code>**</code> exponent high right <code>%</code> modulus medium left remainder after division <p>Interactive Examples (Python 3):</p> <pre><code>&gt;&gt;&gt; 3 + 4 * 5\n23\n&gt;&gt;&gt; (3 + 4) * 5\n35\n&gt;&gt;&gt; 10 / 3\n3.3333333333333335\n&gt;&gt;&gt; 10 // 3\n3\n&gt;&gt;&gt; 10 % 3\n1\n&gt;&gt;&gt; 2 ** 3 ** 4\n2417851639229258349412352\n&gt;&gt;&gt; (2 ** 3) ** 4\n4096\n</code></pre>"},{"location":"tutorials/python_overview/python_overview/#strings","title":"Strings","text":"<ul> <li> <p>Represent text</p> </li> <li> <p>Type: <code>str</code></p> </li> <li> <p>In Python 3, the str type contains Unicode characters.</p> </li> <li> <p>In Python 2, the str type contains ASCII characters (sometimes     called byte strings). Python 2 has a separate type for unicode     strings, the type is called unicode; literals of this type are     prefixed by the letter <code>u</code>.</p> </li> <li> <p>String literals must be quoted. There are 3 quoting styles:</p> <ul> <li> <p>single quote characters: <code>'hello'</code></p> </li> <li> <p>double quote characters: <code>\"hello\"</code></p> </li> <li> <p>triple quote characters: <code>'''hello'''</code> (three single quotes in a     row) or <code>\"\"\"hello\"\"\"</code> (three double quote characters in a row)</p> </li> </ul> </li> <li> <p>The single quote and double quote versions of strings have the same     value. The purpose of the different quotation styles is to make it     convenient to have literal quotation marks inside strings     (avoiding the need to escape the quote character). For example:</p> </li> </ul> <pre><code>&gt;&gt;&gt; \"This inverted comma won't be a problem inside quotation marks\"\n\"This inverted comma won't be a problem inside quotation marks\"\n&gt;&gt;&gt; 'this \"quote\" will work'\n'this \"quote\" will work'\n&gt;&gt;&gt; 'this isn't going to work though'\nFile \"&lt;stdin&gt;\", line 1\n'this isn't going to work though'\n^ SyntaxError: invalid syntax\n</code></pre> <ul> <li> <p>Triple quoted strings can be written on multiple lines. The line     breaks will be preserved within the string. Useful for docstrings     (see section on functions).</p> </li> <li> <p>The usual set of escape characters are supported:</p> <ul> <li> <p><code>\\n</code> newline</p> </li> <li> <p><code>\\t</code> tab</p> </li> <li> <p><code>\\\\</code> backslash</p> </li> <li> <p><code>\\'</code> single quote</p> </li> <li> <p><code>\\\"</code> double quote</p> </li> <li> <p>and many more</p> </li> </ul> </li> <li> <p>Python does not have a separate type for representing individual     characters. Instead you use strings of length one.</p> </li> <li> <p>Strings are iterable. If you iterate over a string (using a for     loop) you process it one character at a time from left to right.</p> </li> <li> <p>Strings can be indexed to obtain individual characters, e.g. <code>s[5]</code></p> </li> <li> <p>Indices are zero-based (but you may also use negative indices to     access items with respect to the right end of the string).</p> </li> <li> <p>Strings are immutable: you cannot modify a string once it has been     created.</p> </li> </ul> <p>Interactive Examples (Python 3):</p> <pre><code>&gt;&gt;&gt; type(\"hello\")\n&lt;class 'str'&gt;\n&gt;&gt;&gt; \"hello\" == 'hello'\nTrue\n&gt;&gt;&gt; '''This string\n... is on\n... multiple\n... lines'''\n'This string\\\\nis on\\\\nmultiple\\\\nlines'\n&gt;&gt;&gt; \"bonjour\".upper()\n'BONJOUR'\n&gt;&gt;&gt; len(\"bonjour\")\n7\n&gt;&gt;&gt; \"bonjour\".startswith(\"b\")\nTrue\n&gt;&gt;&gt; \"cat,sat,flat\".split(\",\")\n['cat', 'sat', 'flat']\n&gt;&gt;&gt; # Print the first 5 Chinese unicode characters\n&gt;&gt;&gt; print('\\u4E00\\u4E01\\u4E02\\u4E03\\u4E04')\n\u4e00\u4e01\u4e02\u4e03\u4e04\n&gt;&gt;&gt; x = \"floyd\"\n&gt;&gt;&gt; x[0]\n'f'\n&gt;&gt;&gt; \"hello\" + \" \" + \"world\"\n'hello world'\n</code></pre> <p>Example program:</p> <pre><code># Prompt the user to input a string:\ninput = raw_input(\"Enter string: \")\n\n# Count the number of vowels in the input string\nvowels = 'aeiou'\ncount = 0\n\nfor char in input:\n    if char in vowels:\n        count += 1\n\n# Print the count to the standard output\nprint(count)\n</code></pre> <p>Example usage of the above program from the operating system command prompt, assuming the program is saved in a file called <code>vowels.py</code>:</p> <pre><code>python vowels.py\nEnter string: abracadabra\n5\n</code></pre>"},{"location":"tutorials/python_overview/python_overview/#lists","title":"Lists","text":"<ul> <li> <p>Represent mutable ordered sequences of values.</p> </li> <li> <p>Type: <code>list</code></p> </li> <li> <p>List literals are written in between square brackets, e.g. <code>[1, 2, 3]</code></p> </li> <li> <p>List elements can be objects of any type (including other lists).</p> </li> <li> <p>Like strings, lists can be indexed like so: <code>x[3]</code></p> </li> <li> <p>Indices are zero-based (but you may also use negative indices to     access items with respect to the right end of the list).</p> </li> <li> <p>Lists are mutable. You can update items, delete items and add new     items.</p> </li> <li> <p>Indexing into a list is a constant time (amortised) operation.</p> </li> </ul> <p>Interactive Examples:</p> <pre><code>&gt;&gt;&gt; type([1, 2, 3])\n&lt;class 'list'&gt;\n&gt;&gt;&gt; x = []\n&gt;&gt;&gt; len(x)\n0\n&gt;&gt;&gt; x.append(\"hello\")\n&gt;&gt;&gt; x\n['hello']\n&gt;&gt;&gt; len(x)\n1\n&gt;&gt;&gt; x[0]\n'hello'\n&gt;&gt;&gt; x.insert(0, True)\n&gt;&gt;&gt; x\n[True, 'hello']\n&gt;&gt;&gt; del x[1]\n&gt;&gt;&gt; x\n[True]\n&gt;&gt;&gt; x += [42, \"Newton\", 3.142]\n&gt;&gt;&gt; x\n[True, 42, 'Newton', 3.142]\n</code></pre>"},{"location":"tutorials/python_overview/python_overview/#dictionaries","title":"Dictionaries","text":"<ul> <li> <p>Represent finite mappings from keys to values.</p> </li> <li> <p>Are implemented as hash tables. The key objects must be hashable     (which rules out mutable objects, such as lists).</p> </li> <li> <p>Type: <code>dict</code></p> </li> <li> <p>Dictionary literals are written inside curly brackets, with     key-value pairs separated by colons: e.g. <code>{12: \"XII\", 6: \"VI\"}</code></p> </li> <li> <p>Dictionaries can be indexed by keys. If the key exists in the     dictionary its corresponding value is returned, otherwise a     <code>KeyError</code> exception is raised.</p> </li> <li> <p>The cost of indexing a dictionary is proportional to the time taken     to hash the key. For many keys this can be considered constant     time. For variable sized objects, such as strings, this can be     considered to be proportional to the size of the object.</p> </li> <li> <p>Iterating over a dictionary yields one key at a time. All keys in     the dictionary are visited exactly once. The order in which the     keys are visited is arbitrary.</p> </li> <li> <p>You may test if an object is a key of a dictionary using the in     operator.</p> </li> </ul> <p>Interactive Examples:</p> <pre><code>&gt;&gt;&gt; type({12: \"XII\", 6: \"VI\"})\n&lt;class 'dict'&gt;\n&gt;&gt;&gt; friends = {}\n&gt;&gt;&gt; friends['Fred'] = ['Barney', 'Dino']\n&gt;&gt;&gt; friends\n{'Fred': ['Barney', 'Dino']}\n&gt;&gt;&gt; friends['Fred']\n['Barney', 'Dino']\n&gt;&gt;&gt; friends['Barney']\nTraceback (most recent call last):\nFile \"\\&lt;stdin\\&gt;\", line 1, in \\&lt;module\\&gt;\nKeyError: 'Barney'\n&gt;&gt;&gt; friends['Wilma'] = ['Betty']\n&gt;&gt;&gt; friends\n{'Fred': ['Barney', 'Dino'], 'Wilma': ['Betty']}\n&gt;&gt;&gt; friends.keys()\ndict_keys(['Fred', 'Wilma'])\n&gt;&gt;&gt; friends.values()\ndict_values([['Barney', 'Dino'], ['Betty']])\n&gt;&gt;&gt; 'Dino' in friends\nFalse\n</code></pre> <p>Example program:</p> <pre><code># Compute and print a histogram of a sequence of integers entered\n# on standard input, one number per line\n\nimport sys\n\nhistogram = {}\n\n# Iterate over each line in the standard input\nfor line in sys.stdin:\n    # Parse the next input as an integer\n    next_integer = int(line)\n    # Update the histogram accordingly\n    if next_integer in histogram:\n        # We've seen this integer before\n        histogram[next_integer] += 1\n    else:\n        # First occurrence of this integer in the input\n        histogram[next_integer] = 1\n\n# Print each key: value pair in the histogram in ascending\n# sorted order of keys\nfor key in sorted(histogram):\n    print(\"{} {}\".format(key, histogram[key]))s\n</code></pre> <p>Example usage of the above program from the operating system command prompt, assuming the program is saved in a file called <code>histo.py</code>:</p> <pre><code>python histo.py\n</code></pre> <p>User types in a sequence of integers to the program, one per line, and presses control-d to terminate the input:</p> <pre><code>3\n43\n12\n19\n3\n12\n12\n43\n</code></pre> <p>Program prints its output:</p> <pre><code>3 2\n12 3\n19 1\n43 2\n</code></pre>"},{"location":"tutorials/python_overview/python_overview/#tuples","title":"Tuples","text":"<ul> <li> <p>Represent immutable ordered sequences of values.</p> </li> <li> <p>Very much like lists except they cannot be modified once created.</p> </li> <li> <p>Type: <code>tuple</code></p> </li> <li> <p>Literals are written in between parentheses: <code>(1, 2, 3)</code></p> </li> <li> <p>The can be used as keys in dictionaries (unlike lists).</p> </li> </ul>"},{"location":"tutorials/python_overview/python_overview/#loops","title":"Loops","text":""},{"location":"tutorials/python_overview/python_overview/#while-loops","title":"While loops","text":"<ul> <li> <p>Iterate until condition is <code>False</code></p> </li> <li> <p>Syntax:</p> </li> </ul> <pre><code>while expression:\n    statement_block\n</code></pre> <ul> <li>The value of the boolean expression is tested. If it evaluates to     <code>True</code> then the statement block is executed once, before repeating     the loop. If it evaluates to False then the program continues     execution immediately after the loop.</li> </ul> <p>Example:</p> <pre><code>def factorial(n):\n    result = 1\n    while n &gt; 0:\n        result *= n\n        n -= 1\n    return result\n</code></pre>"},{"location":"tutorials/python_overview/python_overview/#for-loops","title":"For loops","text":"<ul> <li> <p>Iterate over each item in a collection (e.g. list, string, tuple,     dictionary, file).</p> </li> <li> <p>Syntax:</p> </li> </ul> <pre><code>for variable in expression:\n    statement_block\n</code></pre> <ul> <li> <p>Each item from the iterator expression is selected and assigned to     the variable, then the statement block is executed. The loop ends     when every item in the iterator has been visited.</p> </li> <li> <p>The order of items visited in the iterator depends on the type of     the iterator. Lists, strings and tuples proceed in a left-to-right     fashion. Files proceed one line at a time. Dictionaries proceed in     an arbitrary order.</p> </li> <li> <p>The <code>range()</code> function is useful for generating iterators of numbers     within a range. Note that the lower bound is inclusive and the     upper bound is exclusive.</p> </li> </ul> <p>Example:</p> <pre><code>def factorial(n):\n    result = 1\n    for item in range(n + 1):\n        result *= item\n    return result\n</code></pre>"},{"location":"tutorials/python_overview/python_overview/#break-and-continue","title":"Break and continue","text":"<ul> <li> <p>Both types of loops support the <code>break</code> and <code>continue</code> keywords.</p> </li> <li> <p><code>break</code> terminates the loop immediately.</p> </li> <li> <p><code>continue</code> jumps immediately back to the start of the loop.</p> </li> <li> <p>They can sometimes simplify the conditional logic of a loop, but     should be used sparingly.</p> </li> </ul>"},{"location":"tutorials/python_overview/python_overview/#functions","title":"Functions","text":"<ul> <li> <p>Allow you to define reusable abstractions. Sometimes called     procedures.</p> </li> <li> <p>Are generally defined at the top level of a module, and can also be     nested.</p> </li> <li> <p>Type: <code>function</code></p> </li> <li> <p>Named functions are bound to a variable name and may have complex     bodies.</p> </li> <li> <p>Anonymous functions are used in-line, and may only have expression     bodies.</p> </li> <li> <p>Named function syntax:</p> </li> </ul> <pre><code>def variable(parameter_list):\n    statement_block\n</code></pre> <ul> <li>Anonymous function syntax:</li> </ul> <pre><code>lambda parameter_list: expression\n</code></pre> <p>Example:</p> <pre><code>def is_leap_year(year):\n    if year % 4 == 0 and year % 100 != 0:\n        return True\n    else:\n        return year % 400 == 0\n\nfor year in range(2000, 2100 + 1):\n    result = is_leap_year(year)\n    print(\"{} {}\".format(year, result))\n</code></pre> <p>Anonymous function example:</p> <pre><code>&gt;&gt;&gt; squared = lambda x: x ** 2\n&gt;&gt;&gt; squared(2)\n4\n&gt;&gt;&gt; list(map(lambda x: x + 1, [1, 2, 3]))\n[2, 3, 4]\n</code></pre>"},{"location":"tutorials/python_overview/python_overview/#input-and-output","title":"Input and output","text":"<ul> <li> <p>The <code>print</code> function is useful for displaying text (and other values     converted to text).</p> </li> <li> <p>In Python 2 <code>print</code> was a special keyword. In Python 3 it is a     function defined in the builtins.</p> </li> <li> <p>Fancy string formatting can be done with the format method on     strings. Older Python code uses the string interpolation operator     for the same task <code>%</code>, but its use is now discouraged.</p> </li> <li> <p>Files must be opened before than can be manipulated. A file can be     opened in different modes: read <code>\"r\"</code>, write <code>\"w\"</code>, read-write <code>\"r+\"</code>,     and append <code>\"a\"</code>. Opening a new file in write or append modes     creates a new file. Opening an existing file in write mode     overwrites its contents from the start. Opening an existing file     in append mode adds new content at the end of the old content.</p> </li> <li> <p>When you are finished processing a file you should close it as soon     as possible. Closing a file releases limited operating system     resources, and ensures that any pending buffered writes a flushed     to the storage system.</p> </li> <li> <p>Certain file types have libraries for convenient processing. One     example is the CSV (comma separated values) library for processing     tabular data. It is very handy for working with spreadsheets.</p> </li> <li> <p>The command line arguments of a Python program are contained in a     list called <code>sys.argv</code> (it is a variable exported from the <code>sys</code>     module). For complex program you should consider using a command     line argument parsing library such as argparse.</p> </li> </ul> <p>Example program:</p> <pre><code># Count the number of words and lines in a file\n\nimport sys\n\n# Get the input file name from the command line arguments\nfilename = sys.argv[1]\n\n# Open the file\nfile = open(filename)\n\n# Count the number of lines in the file\nnum_lines = 0\nnum_words = 0\n\nfor line in file:\n    num_lines += 1\n    num_words += len(line.split())\n\nfile.close()\n\nprint(\"Number of lines and words in {}: {} {}\" \\\n        .format(filename, num_lines, num_words))\n</code></pre>"},{"location":"tutorials/python_overview/python_overview/#advanced-topics","title":"Advanced Topics","text":""},{"location":"tutorials/python_overview/python_overview/#classes","title":"Classes","text":"<ul> <li> <p>Classes allow you to define your own types.</p> </li> <li> <p>Class definitions may define methods for the type.</p> </li> <li> <p>A class may inherit, and possibly override, some functionality from     a superclass.</p> </li> <li> <p>Syntax:</p> </li> </ul> <pre><code>class variable(superclass_list):\n    body\n</code></pre> <ul> <li> <p>The name of the class is given by the variable in the definition.     The superclass list defines the superclasses of the new class     (very often the base type object is used). The body of the class     typically defines one or more methods.</p> </li> <li> <p>Instances of classes are created by calling the class name as if it     were a function.</p> </li> <li> <p>If defined, the special method called <code>__init__</code> is used to     initialise a newly created instance of a class.</p> </li> <li> <p>The first parameter to each method is the object upon which the     method was called. The convention is to use the variable called     self, however any variable name will do. Many object oriented     languages make this variable an implicit parameter called this.</p> </li> </ul> <p>Example:</p> <pre><code>class Vector(object):\n    def __init__(self, x=0, y=0, z=0):\n        self.x = x\n        self.y = y\n        self.z = z\n\n    def magnitude(self):\n        return sqrt(self.x ** 2 + self.y ** 2 + self.z ** 2)\n\n    def normalise(self):\n        magnitude = self.magnitude()\n        if magnitude == 0:\n            # Somehow we have a degenerate vector.\n            return self\n        else:\n            return self / self.magnitude()\n\n    def angle(self, other):\n        dp = self.dot_product(other)\n        return acos(dp / self.magnitude() * other.magnitude())\n\n    def dot_product(self, other):\n        return self.x * other.x + self.y * other.y + self.z * other.z\n</code></pre>"},{"location":"tutorials/python_overview/python_overview/#exceptions","title":"Exceptions","text":"<ul> <li> <p>Exceptions allow Python programs to handle erroneous program     conditions.</p> </li> <li> <p>An exception is raised (or thrown) at the point of the error and     handled (or caught) at some other place in the program.</p> </li> <li> <p>Exception handlers have the syntax:</p> </li> </ul> <pre><code>try:\n    statement_block\nexcept exception_type as variable:\n    statement_block\n...\n</code></pre> <ul> <li> <p>The statement block after <code>try</code> is executed. If no exceptions are     raised in that block the program continues immediately after the     exception handler. If an exception is raised in the block then     program control jumps to the innermost closing <code>except</code> clause.     Except clauses may optionally specify the set of exception types     that they can handle. If the raised exception is an instance of     the handled type then the body of the except clause is executed,     otherwise the next except clause (if any) is tried.</p> </li> <li> <p>If no matching exception handler is found then the program will     terminate with an unhandled exception error. Python will normally     print a stack trace at this point for error diagnosis.</p> </li> <li> <p>You may raise your own exceptions using the <code>raise</code> keyword.</p> </li> </ul> <p>Example:</p> <pre><code># alternative version of the histogram code from the section on\n# dictionaries\nfor line in sys.stdin:\n    next_integer = int(line)\n    try:\n        histogram[next_integer] += 1\n    except KeyError:\n        histogram[next_integer] = 1\n</code></pre>"},{"location":"tutorials/python_overview/python_overview/#modules","title":"Modules","text":"<ul> <li> <p>A module is a file which contains Python code.</p> </li> <li> <p>Any Python file you create is automatically a module.</p> </li> <li> <p>It is considered good programming style to decompose complex     programs into multiple modules. Each module should collect     together code with similar purpose.</p> </li> <li> <p>Variables defined at the top level of a module (such as global     variables, functions and classes) can be imported into other     modules.</p> </li> <li> <p>Python comes with many standard modules.</p> </li> <li> <p>The <code>import</code> keyword is used to import an entire module.</p> </li> <li> <p>You may import a subset of things from a module using the <code>from ... import ...</code> syntax.</p> </li> <li> <p>You may import a module with a new name using the <code>from ... import ... as ...</code> or <code>import ... as ...</code></p> </li> <li> <p>When a module is first imported in a program, all of its top-level     statements are executed from top to bottom. Subsequent imports use     a cached version of its definitions, its statements are not     re-executed.</p> </li> <li> <p>A special module called <code>builtins</code> is imported into every other module     by default, and it is automatically imported at the interactive     prompt in the interpreter.</p> </li> </ul> <p>Interactive Example:</p> <pre><code>&gt;&gt;&gt; import math\n&gt;&gt;&gt; math.sqrt(100)\n10.0\n&gt;&gt;&gt; sqrt(100)\nTraceback (most recent call last):\nFile \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nNameError: name 'sqrt' is not defined\n&gt;&gt;&gt; from math import sqrt\n&gt;&gt;&gt; sqrt(100)\n10.0\n&gt;&gt;&gt; import math as m\n&gt;&gt;&gt; m.sqrt(100)\n10.0\n</code></pre>"},{"location":"tutorials/python_overview/python_overview/#packages","title":"Packages","text":"<ul> <li> <p>A package is a collection of modules in a hierarchy.</p> </li> <li> <p>Packages are the common way to structure Python libraries.</p> </li> <li> <p>The Python Package Index (PyPI) is a big collection of open     source packages contributed by the Python community (PyPI contains more than 64 thousand packages at the time of     writing).</p> </li> <li> <p>Package installation tools such as pip, make it easy to install     packages onto your computer.</p> </li> <li> <p>If you want to make your own Python code easy for others to install     and use then you should consider making it a package. You can even     upload it to PyPI.</p> </li> <li> <p>Many people use virtualenv to install packages into a local     \u201csandboxed\u201d Python environment. This avoids conflicts with the     central Python package database on your computer, and allows     multiple different versions of packages to be used.</p> </li> </ul>"},{"location":"tutorials/python_pandas_tidy_data/python_pandas_tidy_data/","title":"Python pandas tidy data","text":""},{"location":"tutorials/python_pandas_tidy_data/python_pandas_tidy_data/#overview","title":"Overview","text":"<p>This workshop covers practical approaches for handling data in Python. We will use the Python library Pandas. This workshop is a recommended prerequisite for the Data Visualisation workshop.</p> <p>In order to do effective data analysis or visualisation, we usually need to have our data cleaned and in a consistent format. We will cover the concept of \u201ctidy\u201d, long-form, and wide-form data, and hands-on approaches for manipulating data and fixing common problems. This workshop concentrates on tabular data, like that found in spreadsheets or databases.</p>"},{"location":"tutorials/python_pandas_tidy_data/python_pandas_tidy_data/#learning-objectives","title":"Learning Objectives","text":"<p>At the end of this workshop you will be able to:</p> <ul> <li>read tabular data into Python using Pandas, and manipulate it</li> <li>identify problems in datasets that will hinder analysis</li> <li>use Python to fix common problems</li> <li>understand and convert between different data layouts such as wide-form and \u201ctidy\u201d as appropriate for the problem being solved</li> </ul>"},{"location":"tutorials/python_pandas_tidy_data/python_pandas_tidy_data/#requirements","title":"Requirements","text":"<p>This workshop is designed for participants with a basic knowledge of Python, but is also appropriate for attendees who do not know Python but have significant experience using another programming language. If you are new to Python, you will probably want to refer to a Python primer.</p> <p>Attendees are required to bring their own laptop computers.</p> <p>You should install the Anaconda Python distribution before attending:</p> <ul> <li>Go to: https://www.anaconda.com/distribution/#download-section</li> <li>Select your operating system</li> <li>Select the Python 3.7 (not 2.7) option to download and install. This is a large download (over 600MB). If you aren\u2019t able to install it prior to the workshop, we can work around this, but please contact us beforehand.</li> </ul>"},{"location":"tutorials/python_pandas_tidy_data/python_pandas_tidy_data/#notebooks-and-data","title":"Notebooks and Data","text":"<p>This workshop is implemented as a set of Jupyter Notebooks, and we will use (and introduce) Jupyter during the workshop.</p> <p>You can find all notebooks and data in this github repository. For this workshop, we will use the Pandas_and_tidying.ipynb notebook.</p>"},{"location":"tutorials/python_viz/python_viz/","title":"Data visualisation with Python","text":""},{"location":"tutorials/python_viz/python_viz/#overview","title":"Overview","text":"<p>Python has a wide range of libraries for plotting and visualising data. Many of these are excellent, but it can be hard for a newcomer to know where to start.</p> <p>We will introduce the range of options available, then do hands-on visualisation exercises with some popular libraries: Matplotlib, Seaborn, and Altair. Seaborn builds on Matplotlib to easily create beautiful statistical visualisations. Altair is intended for interactive visualisation and makes it easy to create complex responsive visualisations.</p>"},{"location":"tutorials/python_viz/python_viz/#learning-objectives","title":"Learning Objectives","text":"<p>At the end of this workshop you should be able to:</p> <ul> <li>be aware of the landscape of visualisation libraries</li> <li>create visualisations of data in Matplotlib, Seaborn and Altair</li> <li>know how to search the documentation for further visualisation functions</li> </ul>"},{"location":"tutorials/python_viz/python_viz/#requirements","title":"Requirements","text":"<p>This workshop is designed for participants with a basic knowledge of Python. The \u201cData tidying with Python and Pandas\u201d workshop is recommended as a prerequisite.</p> <p>Attendees are required to bring their own laptop computers.</p> <p>You should install the Anaconda Python distribution before attending:</p> <ul> <li>Go to: https://www.anaconda.com/distribution/#download-section</li> <li>Select your operating system</li> <li>Select the Python 3.7 (not 2.7) option to download and install. This is a large download (over 600MB). If you aren\u2019t able to install it prior to the workshop, we can work around this, but please contact us beforehand.</li> </ul>"},{"location":"tutorials/python_viz/python_viz/#notebooks-and-data","title":"Notebooks and Data","text":"<p>This workshop is implemented as a set of Jupyter Notebooks, and we will use (and introduce) Jupyter during the workshop.</p> <p>You can find all notebooks and data in this github repository. For this workshop, we will use the Seaborn_Matplotlib.ipynb and Altair.ipynb notebooks.</p>"},{"location":"tutorials/qiime2/","title":"Index","text":"<p>QIIME2 regularly updates so links in tutorial will need to be checked and pointed to latest version. Upload the visualisations to DropBox and then load them to Qiime2 View and get link to put in workshop.</p> <p>PR reviewers and advice: Gayle Philip</p> <p>Current slides: TBD</p> <p>Other slides:</p> <ul> <li>None yet</li> </ul>"},{"location":"tutorials/qiime2/qiime2/","title":"Intro to Metabarcoding using QIIME2: *Marine dataset*","text":""},{"location":"tutorials/qiime2/qiime2/#qiime2","title":"QIIME2","text":"<p>Anticipated workshop duration when delivered to a group of participants is 4 hours.  </p> <p>For queries relating to this workshop, contact Melbourne Bioinformatics (bioinformatics-training@unimelb.edu.au).</p>"},{"location":"tutorials/qiime2/qiime2/#overview","title":"Overview","text":""},{"location":"tutorials/qiime2/qiime2/#topic","title":"Topic","text":"<ul> <li> Genomics</li> <li> Transcriptomics</li> <li> Proteomics</li> <li> Metabolomics</li> <li> Statistics and visualisation</li> <li> Structural Modelling</li> <li> Basic skills</li> </ul>"},{"location":"tutorials/qiime2/qiime2/#skill-level","title":"Skill level","text":"<ul> <li> Beginner  </li> <li> Intermediate  </li> <li> Advanced  </li> </ul> <p> This workshop is designed for participants with command-line knowledge. You will need to be able to <code>ssh</code> into a remote machine, navigate the directory structure and <code>scp</code> files from a remote computer to your local computer.</p>"},{"location":"tutorials/qiime2/qiime2/#description","title":"Description","text":"<p>What is the influence of genotype (intrinsic) and environment (extrinsic) on anemone-associated bacterial communities?</p> <p>Data: Illumina MiSeq v3 paired-end (2 \u00d7 300 bp) reads (FASTQ).</p> <p>Tools: QIIME 2</p> <p>Pipeline: </p> <p>Section 1: Importing, cleaning and quality control of the data Section 2: Taxonomic Analysis Section 3: Building a phylogenetic tree Section 4: Basic visualisations and statistics Section 5: Exporting data for further analysis in R Section 6: Extra Information</p>"},{"location":"tutorials/qiime2/qiime2/#learning-objectives","title":"Learning Objectives","text":"<p>At the end of this introductory workshop, you will:</p> <ul> <li>Take raw data from a sequencing facility and end with publication quality graphics and statistics</li> <li>Answer the question What is the influence of genotype (intrinsic) and environment (extrinsic) on anemone-associated bacterial communities?</li> </ul>"},{"location":"tutorials/qiime2/qiime2/#tutorial-layout","title":"Tutorial layout","text":"<ul> <li>There is a <code>Table of contents</code> on the right-hand side which can be used to easily navigate through the tutorial by clicking the relevant section.</li> </ul> <pre><code>These grey coloured boxes are code blocks. The rectangular boxes in the top\nright hand corner of this code block/grey box can be used to copy the code to\nthe clipboard.\n</code></pre> Coloured boxes like these with &gt; on the far right hand side, can be clicked to reveal the contents. <p>REVEALED!</p> <p>Attention: Pay attention to the information in these boxes.</p> <p>Important information, hints and tips.</p>"},{"location":"tutorials/qiime2/qiime2/#requirements-and-preparation","title":"Requirements and preparation","text":"<p>Important</p> <p>Attendees are required to use their own laptop computers. </p> <p>At least one week before the workshop, if required, participants should install the software below.  This should provide sufficient time for participants to liaise with their own IT support should they encounter any IT problems.  </p>"},{"location":"tutorials/qiime2/qiime2/#mode-of-delivery","title":"Mode of Delivery","text":"<p>This workshop will be run on a Nectar Instance. For more information click here.</p> <p>It is possible to apply for your own Nectar allocation to run this workshop independently though you will need to install any software needed.</p>"},{"location":"tutorials/qiime2/qiime2/#required-software","title":"Required Software","text":"<p>For information about required software, click here.  </p> <p>You will need to use a Google Chrome or Mozilla Firefox web browser to view files in QIIME2 View.</p>"},{"location":"tutorials/qiime2/qiime2/#required-data","title":"Required Data","text":"<ul> <li> <p>No additional data needs to be downloaded for this workshop - it is all located on the Nectar Instance. FASTQs are located in the directory <code>raw_data</code> and a metadata (<code>metadata.tsv</code>) file has also been provided.</p> </li> <li> <p>If you wish to analyse the data independently at a later stage, it can be downloaded from here. This zipped folder contains both the FASTQs and associated metadata file.</p> </li> <li> <p>If you are running this tutorial independently, you can also access the classifier that has been trained specifically for this data from here.</p> </li> </ul>"},{"location":"tutorials/qiime2/qiime2/#slides-and-workshop-instructions","title":"Slides and workshop instructions","text":"<p>Click here for slides presented during this workshop.</p> <p>Click here for a printer friendly PDF version of this workshop.</p>"},{"location":"tutorials/qiime2/qiime2/#author-information","title":"Author Information","text":"<p>Written by: Ashley Dungan and Gayle Philip School of Biosciences, University of Melbourne; Melbourne Bioinformatics</p> <p>Created/Reviewed: August 2021</p>"},{"location":"tutorials/qiime2/qiime2/#background","title":"Background","text":"<p>What is the influence of genotype (intrinsic) and environment (extrinsic) on anemone-associated bacterial communities?</p>"},{"location":"tutorials/qiime2/qiime2/#the-players","title":"The Players","text":"<ul> <li> <p>Exaiptasia diaphana - a shallow-water, marine anemone that is often used in research as a model organism for corals. In this experiment, two genotypes (AIMS1 and AIMS4) of E. diaphana were grown in each of two different environments:  </p> <ol> <li>sterile seawater OR </li> <li>unfiltered control seawater  </li> </ol> </li> <li> <p>The anemone-associated bacterial communities or microbiome - these bacteria live on, or within E. diaphana, and likely consist of a combination of commensals, transients, and long-term stable members, and combined with their host, form a mutually beneficial, stable symbiosis.</p> </li> </ul>"},{"location":"tutorials/qiime2/qiime2/#the-study","title":"The Study","text":"<p>The anemone microbiome contributes to the overall health of this complex system and can evolve in tandem with the anemone host. In this data set we are looking at the impact of intrinsic and extrinsic factors on anemone microbiome composition. After three weeks in either sterile or control seawater (environment), anemones were homogenized and DNA was extracted. There are 23 samples in this data set - 5 from each anemone treatment combination (2 genotypes x 2 environments) and 3 DNA extraction blanks as controls. This data is a subset from a larger experiment.</p> <p>Dungan AM, van Oppen MJH, and Blackall LL (2021) Short-Term Exposure to Sterile Seawater Reduces Bacterial Community Diversity in the Sea Anemone, Exaiptasia diaphana. Front. Mar. Sci. 7:599314. doi:10.3389/fmars.2020.599314 [Full Text].</p>"},{"location":"tutorials/qiime2/qiime2/#qiime-2-analysis-platform","title":"QIIME 2 Analysis platform","text":"<p>Attention</p> <p>The version used in this workshop is qiime2-2021.8. Other versions of QIIME2 may result in minor differences in results.</p> <p> Quantitative Insights Into Microbial Ecology 2 (QIIME 2\u2122) is a next-generation microbiome bioinformatics platform that is extensible, free, open source, and community developed. It allows researchers to:  </p> <ul> <li>Automatically track analyses with decentralised data provenance</li> <li>Interactively explore data with beautiful visualisations</li> <li>Easily share results without QIIME 2 installed</li> <li>Plugin-based system \u2014 researchers can add in tools as they wish</li> </ul> <p></p>"},{"location":"tutorials/qiime2/qiime2/#viewing-qiime2-visualisations","title":"Viewing QIIME2 visualisations","text":"<p>Attention</p> <p>In order to use QIIME2 View to visualise your files, you will need to use a Google Chrome or Mozilla Firefox web browser (not in private browsing). For more information, click here.</p> <p>As this workshop is being run on a remote Nectar Instance, you will need to download the visual files (*.qzv) to your local computer and view them in QIIME2 View (q2view).</p> <p>Attention</p> <p>We will be doing this step multiple times throughout this workshop to view visualisation files as they are generated.</p> <p> Alternatively, if you have QIIME2 installed and are running it on your own computer, you can use <code>qiime tools view</code> to view the results from the command line (e.g. <code>qiime tools view filename.qzv</code>). <code>qiime tools view</code> opens a browser window with your visualization loaded in it. When you are done, you can close the browser window and press <code>ctrl-c</code> on the keyboard to terminate the command.</p>"},{"location":"tutorials/qiime2/qiime2/#initial-set-up-on-nectar","title":"Initial Set up on Nectar","text":""},{"location":"tutorials/qiime2/qiime2/#byobu-screen","title":"Byobu-screen","text":"<p>To ensure that commands continue to run should you get disconnected from your Nectar Instance, we\u2019ll run a byobu-screen session.</p>"},{"location":"tutorials/qiime2/qiime2/#starting-a-byobu-screen-session","title":"Starting a byobu-screen session","text":"<p>On Nectar, to start a <code>byobu-screen</code> session called <code>workshop</code>, type  </p> <pre><code>byobu-screen -S workshop\n</code></pre>"},{"location":"tutorials/qiime2/qiime2/#reconnecting-to-a-byobu-screen-session","title":"Reconnecting to a byobu-screen session","text":"<p>If you get disconnected from your Nectar Instance, follow the instructions here to resume your session.</p>"},{"location":"tutorials/qiime2/qiime2/#symbolic-links-to-workshop-data","title":"Symbolic links to workshop data","text":"<p>Data for this workshop is stored in a central location (<code>/mnt/shared_data/</code>) on the Nectar file system that we will be using. We will use symbolic links (<code>ln -s</code>) to point to it. Symbolic links (or symlinks) are just \u201cvirtual\u201d files or folders (they only take up a very little space) that point to a physical file or folder located elsewhere in the file system. Sequencing data can be large, and rather than unnecessarily having multiple copies of the data which can quickly take up a lot of space, we will simply point to the files needed in the <code>shared_data</code> folder.</p> <pre><code>cd\nln -s /mnt/shared_data/raw_data raw_data\nln -s /mnt/shared_data/metadata.tsv metadata.tsv\nln -s /mnt/shared_data/silva_138_16s_v5v6_classifier_2021-4.qza silva_138_16s_v5v6_classifier_2021-4.qza\n</code></pre>"},{"location":"tutorials/qiime2/qiime2/#section-1-importing-cleaning-and-quality-control-of-the-data","title":"Section 1: Importing, cleaning and quality control of the data","text":""},{"location":"tutorials/qiime2/qiime2/#import-data","title":"Import data","text":"<p>These samples were sequenced on a single Illumina MiSeq run using v3 (2 \u00d7 300 bp) reagents at the Walter and Eliza Hall Institute (WEHI), Melbourne, Australia. Data from WEHI came as paired-end, demultiplexed, unzipped *.fastq files with adapters still attached. Following the QIIME2 importing tutorial, this is the Casava One Eight format. The files have been renamed to satisfy the Casava format as SampleID_FWDXX-REVXX_L001_R[1 or 2]_001.fastq e.g. CTRLA_Fwd04-Rev25_L001_R1_001.fastq.gz. The files were then zipped (.gzip).</p> <p>Here, the data files (two per sample i.e. forward and reverse reads <code>R1</code> and <code>R2</code> respectively) will be imported and exported as a single QIIME 2 artefact file. These samples are already demultiplexed (i.e. sequences from each sample have been written to separate files), so a metadata file is not initially required.</p> <p>Note</p> <p>To check the input syntax for any QIIME2 command, enter the command, followed by <code>--help</code> e.g. <code>qiime tools import --help</code></p> <p>Attention</p> <p>If you haven\u2019t already done so, make sure you are running the workshop in byobu-screen and have created the symbolic links to the workshop data.</p> <p>Start by making a new directory <code>analysis</code> to store all the output files from this tutorial. In addition, we will create a subdirectory called <code>seqs</code> to store the exported sequences.</p> <pre><code>cd\nmkdir -p analysis/seqs\n</code></pre> <p>Run the command to import the raw data located in the directory <code>raw_data</code> and export it to a single QIIME 2 artefact file, <code>combined.qza</code>.</p> <pre><code>qiime tools import \\\n--type 'SampleData[PairedEndSequencesWithQuality]' \\\n--input-path raw_data \\\n--input-format CasavaOneEightSingleLanePerSampleDirFmt \\\n--output-path analysis/seqs/combined.qza\n</code></pre>"},{"location":"tutorials/qiime2/qiime2/#remove-primers","title":"Remove primers","text":"<p>Important</p> <p>Remember to ask you sequencing facility if the raw data you get has the primers attached - they may have already been removed.</p> <p>These sequences still have the primers attached - they need to be removed (using <code>cutadapt</code>) before denoising.</p> <pre><code>qiime cutadapt trim-paired \\\n--i-demultiplexed-sequences analysis/seqs/combined.qza \\\n--p-front-f AGGATTAGATACCCTGGTA \\\n--p-front-r CRRCACGAGCTGACGAC \\\n--p-error-rate 0.20 \\\n--output-dir analysis/seqs_trimmed \\\n--verbose\n</code></pre> <p>Attention</p> <p>The primers specified (784f and 1492r for the bacterial 16S rRNA gene) correspond to this specific experiment - they will likely not work for your own data analyses.</p> <p>Attention</p> <p>The error rate parameter, <code>--p-error-rate</code>, will likely need to be adjusted for your own sample data to get 100% (or close to it) of reads trimmed.</p>"},{"location":"tutorials/qiime2/qiime2/#create-and-interpret-sequence-quality-data","title":"Create and interpret sequence quality data","text":"<p>Create a viewable summary file so the data quality can be checked. Viewing the quality plots generated here helps determine trim settings.</p> <p>Things to look for:</p> <ol> <li>Where does the median quality drop below 30?  </li> <li>Do any of the samples have only a few sequences e.g. &lt;1000? If so, you may want to omit them from the analysis later on in R.</li> </ol> <p>Create a subdirectory in <code>analysis</code> called <code>visualisations</code> to store all files that we will visualise in one place.</p> <pre><code>mkdir analysis/visualisations\n</code></pre> <pre><code>qiime demux summarize \\\n--i-data analysis/seqs_trimmed/trimmed_sequences.qza \\\n--o-visualization analysis/visualisations/trimmed_sequences.qzv\n</code></pre> <p>Copy <code>analysis/visualisations/trimmed_sequences.qzv</code> to your local computer and view in QIIME 2 View (q2view).</p> Visualisations: Read quality and demux output <p>Click to view the <code>trimmed_sequences.qzv</code> file in QIIME 2 View.</p> <p> Make sure to switch between the \u201cOverview\u201d and \u201cInteractive Quality Plot\u201d tabs in the top left hand corner. Click and drag on plot to zoom in. Double click to zoom back out to full size. Hover over a box to see the parametric seven-number summary of the quality scores at the corresponding position.</p> <p></p>"},{"location":"tutorials/qiime2/qiime2/#denoising-the-data","title":"Denoising the data","text":"<p>Trimmed sequences are now quality assessed using the <code>dada2</code> plugin within QIIME2. <code>dada2</code> denoises data by modelling and correcting Illumina-sequenced amplicon errors, and infers exact amplicon sequence variants (ASVs), resolving differences of as little as 1 nucleotide. Its workflow consists of filtering, de-replication, reference\u2010free chimera detection, and paired\u2010end reads merging, resulting in a feature or ASV table.</p> <p>Note</p> <p>This step may long time to run (i.e. hours), depending on files sizes and computational power.</p> <p>Remember to adjust <code>p-trunc-len-f</code> and <code>p-trunc-len-r</code> values according to your own data.</p> <p>Question: Based on your assessment of the quality plots from the trimmed_sequences.qzv file generated in the previous step, what values would you select for <code>p-trunc-len-f</code> and <code>p-trunc-len-r</code> in the command below? Hint: At what base pair does the median quality drop below 30?</p> Answer <p>For version qiime2-2021.8: <code>p-trunc-len-f 211</code> and <code>p-trunc-len-r 167</code>. Other QIIME2 versions may slightly differ. Upload your <code>trimmed_sequences.qzv</code> file to QIIME2 view, change to the \u201cInteractive Quality Plot\u201d tab and zoom in on the plots to find the relevant base pairs for the QIIME2 version you are using.</p> <p>The specified output directory must not pre-exist. </p> <pre><code>qiime dada2 denoise-paired \\\n--i-demultiplexed-seqs analysis/seqs_trimmed/trimmed_sequences.qza \\\n--p-trunc-len-f xx \\\n--p-trunc-len-r xx \\\n--p-n-threads 0 \\\n--output-dir analysis/dada2out \\\n--verbose\n</code></pre>"},{"location":"tutorials/qiime2/qiime2/#generate-summary-files","title":"Generate summary files","text":"<p>A metadata file is required which provides the key to gaining biological insight from your data. The file metadata.tsv is provided in the home directory of your Nectar instance. This spreadsheet has already been verified using the plugin for Google Sheets, keemei.  </p> <p>Things to look for:</p> <ol> <li>How many features (ASVs) were generated? Are the communities high or low diversity?</li> <li>Do BLAST searches of the representative sequences make sense? Are the features what you would expect e.g. marine or terrestrial?</li> <li>Have a large number (e.g. &gt;50%) of sequences been lost during denoising/filtering? If so, the settings might be too stringent.</li> </ol> <p> <pre><code>qiime metadata tabulate \\\n--m-input-file analysis/dada2out/denoising_stats.qza \\\n--o-visualization analysis/visualisations/16s_denoising_stats.qzv \\\n--verbose\n</code></pre></p> <p>Copy <code>analysis/visualisations/16s_denoising_stats.qzv</code> to your local computer and view in QIIME 2 View (q2view).</p> Visualisation: Denoising Stats <p>Click to view the <code>16s_denoising_stats.qzv</code> file in QIIME 2 View.</p> <p> <pre><code>qiime feature-table summarize \\\n--i-table analysis/dada2out/table.qza \\\n--m-sample-metadata-file metadata.tsv \\\n--o-visualization analysis/visualisations/16s_table.qzv \\\n--verbose\n</code></pre></p> <p>Copy <code>analysis/visualisations/16s_table.qzv</code> to your local computer and view in QIIME 2 View (q2view).</p> Visualisations: Feature/ASV summary <p>Click to view the <code>16s_table.qzv</code> file in QIIME 2 View.  </p> <p>Make sure to switch between the \u201cOverview\u201d and \u201cFeature Detail\u201d tabs in the top left hand corner. </p> <p> <pre><code>qiime feature-table tabulate-seqs \\\n--i-data analysis/dada2out/representative_sequences.qza \\\n--o-visualization analysis/visualisations/16s_representative_seqs.qzv \\\n--verbose\n</code></pre></p> <p>Copy <code>analysis/visualisations/16s_representative_seqs.qzv</code> to your local computer and view in QIIME 2 View (q2view).</p> Visualisation: Representative Sequences <p>Click to view the <code>16s_representative_seqs.qzv</code> file in QIIME 2 View.</p>"},{"location":"tutorials/qiime2/qiime2/#section-2-taxonomic-analysis","title":"Section 2: Taxonomic Analysis","text":""},{"location":"tutorials/qiime2/qiime2/#assign-taxonomy","title":"Assign taxonomy","text":"<p>Here we will classify each identical read or Amplicon Sequence Variant (ASV) to the highest resolution based on a database. Common databases for bacteria datasets are Greengenes, SILVA, Ribosomal Database Project, or Genome Taxonomy Database. See Porter and Hajibabaei, 2020 for a review of different classifiers for metabarcoding research. The classifier chosen is dependent upon:</p> <ol> <li>Previously published data in a field</li> <li>The target region of interest</li> <li>The number of reference sequences for your organism in the database and how recently that database was updated.</li> </ol> <p>A classifier has already been trained for you for the V5V6 region of the bacterial 16S rRNA gene using the SILVA database. The next step will take a while to run. The output directory cannot previously exist.</p> <p>n_jobs = 1  This runs the script using all available cores</p> <p>Note</p> <p>The classifier used here is only appropriate for the specific 16S rRNA region that this data represents. You will need to train your own classifier for your own data. For more information about training your own classifier, see Section 6: Extra Information.</p> <p>STOP - Workshop participants only</p> <p>Due to time limitations in a workshop setting, please do NOT run the <code>qiime feature-classifier classify-sklearn</code> command below. You will need to access a pre-computed <code>classification.qza</code> file that this command generates by running the following: <code>cd; mkdir analysis/taxonomy; cp /mnt/shared_data/pre_computed/classification.qza analysis/taxonomy</code>. If you have accidentally run the command below, <code>ctrl-c</code> will terminate it.</p> <pre><code>qiime feature-classifier classify-sklearn \\\n--i-classifier silva_138_16s_v5v6_classifier_2021-4.qza \\\n--i-reads analysis/dada2out/representative_sequences.qza \\\n--p-n-jobs 1 \\\n--output-dir analysis/taxonomy \\\n--verbose\n</code></pre> <p>Warning</p> <p>This step often runs out of memory on full datasets. Some options are to change the number of cores you are using (adjust <code>--p-n-jobs</code>) or add <code>--p-reads-per-batch 10000</code> and try again. The QIIME 2 forum has many threads regarding this issue so always check there was well.</p>"},{"location":"tutorials/qiime2/qiime2/#generate-a-viewable-summary-file-of-the-taxonomic-assignments","title":"Generate a viewable summary file of the taxonomic assignments.","text":"<pre><code>qiime metadata tabulate \\\n--m-input-file analysis/taxonomy/classification.qza \\\n--o-visualization analysis/visualisations/taxonomy.qzv \\\n--verbose\n</code></pre> <p>Copy <code>analysis/visualisations/taxonomy.qzv</code> to your local computer and view in QIIME 2 View (q2view).</p> Visualisation: Taxonomy <p>Click to view the <code>taxonomy.qzv</code> file in QIIME 2 View.</p>"},{"location":"tutorials/qiime2/qiime2/#filtering","title":"Filtering","text":"<p>Filter out reads classified as mitochondria and chloroplast. Unassigned ASVs are retained. Generate a viewable summary file of the new table to see the effect of filtering.</p> <p>According to QIIME developer Nicholas Bokulich, low abundance filtering (i.e. removing ASVs containing very few sequences) is not necessary under the ASV model.</p> <pre><code>qiime taxa filter-table \\\n--i-table analysis/dada2out/table.qza \\\n--i-taxonomy analysis/taxonomy/classification.qza  \\\n--p-exclude Mitochondria,Chloroplast \\\n--o-filtered-table analysis/taxonomy/16s_table_filtered.qza \\\n--verbose\n</code></pre> <pre><code>qiime feature-table summarize \\\n--i-table analysis/taxonomy/16s_table_filtered.qza \\\n--m-sample-metadata-file metadata.tsv \\\n--o-visualization analysis/visualisations/16s_table_filtered.qzv \\\n--verbose\n</code></pre> <p>Copy <code>analysis/visualisations/16s_table_filtered.qzv</code> to your local computer and view in QIIME 2 View (q2view).</p> Visualisation: 16s_table_filtered <p>Click to view the <code>16s_table_filtered.qzv</code> file in QIIME 2 View.</p>"},{"location":"tutorials/qiime2/qiime2/#section-3-build-a-phylogenetic-tree","title":"Section 3: Build a phylogenetic tree","text":"<p>The next step does the following:</p> <ol> <li>Perform an alignment on the representative sequences.</li> <li>Mask sites in the alignment that are not phylogenetically informative.</li> <li>Generate a phylogenetic tree.</li> <li>Apply mid-point rooting to the tree.</li> </ol> <p>A phylogenetic tree is necessary for any analyses that incorporates information on the relative relatedness of community members, by incorporating phylogenetic distances between observed organisms in the computation. This would include any beta-diversity analyses and visualisations from a weighted or unweighted Unifrac distance matrix.</p> <pre><code>mkdir analysis/tree\n</code></pre> <p>Use one thread only (which is the default action) so that identical results can be produced if rerun.</p> <pre><code>qiime phylogeny align-to-tree-mafft-fasttree \\\n--i-sequences analysis/dada2out/representative_sequences.qza \\\n--o-alignment analysis/tree/aligned_16s_representative_seqs.qza \\\n--o-masked-alignment analysis/tree/masked_aligned_16s_representative_seqs.qza \\\n--o-tree analysis/tree/16s_unrooted_tree.qza \\\n--o-rooted-tree analysis/tree/16s_rooted_tree.qza \\\n--p-n-threads 1 \\\n--verbose\n</code></pre>"},{"location":"tutorials/qiime2/qiime2/#section-4-basic-visualisations-and-statistics","title":"Section 4: Basic visualisations and statistics","text":""},{"location":"tutorials/qiime2/qiime2/#asv-relative-abundance-bar-charts","title":"ASV relative abundance bar charts","text":"<p>Create bar charts to compare the relative abundance of ASVs across samples.</p> <pre><code>qiime taxa barplot \\\n--i-table analysis/taxonomy/16s_table_filtered.qza \\\n--i-taxonomy analysis/taxonomy/classification.qza \\\n--m-metadata-file metadata.tsv \\\n--o-visualization analysis/visualisations/barchart.qzv \\\n--verbose\n</code></pre> <p>Copy <code>analysis/visualisations/barchart.qzv</code> to your local computer and view in QIIME 2 View (q2view). Try selecting different taxonomic levels and metadata-based sample sorting.</p> Visualisations: Taxonomy Barplots <p>Click to view the <code>barchart.qzv</code> file in QIIME 2 View.  </p> <p>Increase the \u201cBar Width\u201d, select Index in \u201cSort Samples By\u201d drop-down menu and explore the resulting barplots by changing the levels in the \u201cChange Taxonomic Level\u201d dropdown menu (Select Level 1, then Level 3, and then Level 5 for example).  </p> <p></p>"},{"location":"tutorials/qiime2/qiime2/#rarefaction-curves","title":"Rarefaction curves","text":"<p>Generate rarefaction curves to determine whether the samples have been sequenced deeply enough to capture all the community members. The max depth setting will depend on the number of sequences in your samples.</p> <p>Things to look for:</p> <ol> <li>Do the curves for each sample plateau? If they don\u2019t, the samples haven\u2019t been sequenced deeply enough to capture the full diversity of the bacterial communities, which is shown on the y-axis.</li> <li>At what sequencing depth (x-axis) do your curves plateau? This value will be important for downstream analyses, particularly for alpha diversity analyses.</li> </ol> <p>Note</p> <p>The value that you provide for \u2013p-max-depth should be determined by reviewing the \u201cFrequency per sample\u201d information presented in the  16s_table_filtered.qzv file that was created above. In general, choosing a value that is somewhere around the median frequency seems to work well, but you may want to increase that value if the lines in the resulting rarefaction plot don\u2019t appear to be leveling out, or decrease that value if you seem to be losing many of your samples due to low total frequencies closer to the minimum sampling depth than the maximum sampling depth.</p> <pre><code>qiime diversity alpha-rarefaction \\\n--i-table analysis/taxonomy/16s_table_filtered.qza \\\n--i-phylogeny analysis/tree/16s_rooted_tree.qza \\\n--p-max-depth 9062 \\\n--m-metadata-file metadata.tsv \\\n--o-visualization analysis/visualisations/16s_alpha_rarefaction.qzv \\\n--verbose\n</code></pre> <p>Copy <code>analysis/visualisations/16s_alpha_rarefaction.qzv</code> to your local computer and view in QIIME 2 View (q2view).</p> Visualisation: Rarefaction <p>Click to view the <code>16s_alpha_rarefaction.qzv</code> file in QIIME 2 View.  </p> <p>Select \u201cGenotype\u201d in the \u201cSample Metadata Column\u201d:</p> <p></p>"},{"location":"tutorials/qiime2/qiime2/#alpha-and-beta-diversity-analysis","title":"Alpha and beta diversity analysis","text":"<p>The following is taken directly from the Moving Pictures tutorial and adapted for this data set. QIIME 2\u2019s diversity analyses are available through the <code>q2-diversity</code> plugin, which supports computing alpha- and beta- diversity metrics, applying related statistical tests, and generating interactive visualisations. We\u2019ll first apply the core-metrics-phylogenetic method, which rarefies a FeatureTable[Frequency] to a user-specified depth, computes several alpha- and beta- diversity metrics, and generates principle coordinates analysis (PCoA) plots using Emperor for each of the beta diversity metrics.</p> <p>The metrics computed by default are:</p> <ul> <li>Alpha diversity (operate on a single sample (i.e. within sample diversity)).<ul> <li>Shannon\u2019s diversity index (a quantitative measure of community richness)</li> <li>Observed OTUs (a qualitative measure of community richness)</li> <li>Faith\u2019s Phylogenetic Diversity (a qualitative measure of community richness that incorporates phylogenetic relationships between the features)</li> <li>Evenness (or Pielou\u2019s Evenness; a measure of community evenness)</li> </ul> </li> <li>Beta diversity (operate on a pair of samples (i.e. between sample diversity)).<ul> <li>Jaccard distance (a qualitative measure of community dissimilarity)</li> <li>Bray-Curtis distance (a quantitative measure of community dissimilarity)</li> <li>unweighted UniFrac distance (a qualitative measure of community dissimilarity that incorporates phylogenetic relationships between the features)</li> <li>weighted UniFrac distance (a quantitative measure of community dissimilarity that incorporates phylogenetic relationships between the features)</li> </ul> </li> </ul> <p>An important parameter that needs to be provided to this script is <code>--p-sampling-depth</code>, which is the even sampling (i.e. rarefaction) depth that was determined above. As most diversity metrics are sensitive to different sampling depths across different samples, this script will randomly subsample the counts from each sample to the value provided for this parameter. For example, if <code>--p-sampling-depth 500</code> is provided, this step will subsample the counts in each sample without replacement, so that each sample in the resulting table has a total count of 500. If the total count for any sample(s) are smaller than this value, those samples will be excluded from the diversity analysis. Choosing this value is tricky. We recommend making your choice by reviewing the information presented in the 16s_table_filtered.qzv file that was created above. Choose a value that is as high as possible (so more sequences per sample are retained), while excluding as few samples as possible.</p> <pre><code>qiime diversity core-metrics-phylogenetic \\\n  --i-phylogeny analysis/tree/16s_rooted_tree.qza \\\n  --i-table analysis/taxonomy/16s_table_filtered.qza \\\n  --p-sampling-depth 5583 \\\n  --m-metadata-file metadata.tsv \\\n  --output-dir analysis/diversity_metrics\n</code></pre> <p>Copy the <code>.qzv</code> files created from the above command into the <code>visualisations</code> subdirectory.</p> <pre><code>cp analysis/diversity_metrics/*.qzv analysis/visualisations\n</code></pre> <p>To view the differences between sample composition using unweighted UniFrac in ordination space, copy <code>analysis/visualisations/unweighted_unifrac_emperor.qzv</code> to your local computer and view in QIIME 2 View (q2view).</p> Visualisations: Unweighted UniFrac Emperor Ordination <p>Click to view the <code>unweighted_unifrac_emperor.qzv</code> file in QIIME 2 View.  </p> <p>On q2view, select the \u201cColor\u201d tab, choose \u201cEnvironment\u201d under the \u201cSelect a Color Category\u201d dropdown menu, then select the \u201cShape\u201d tab and choose \u201cGenotype\u201d under the \u201cSelect a Shape Category\u201d dropdown menu.  </p> <p></p> <p>Next, we\u2019ll test for associations between categorical metadata columns and alpha diversity data. We\u2019ll do that here for the Faith Phylogenetic Diversity (a measure of community richness) and evenness metrics.</p> <pre><code>qiime diversity alpha-group-significance \\\n  --i-alpha-diversity analysis/diversity_metrics/faith_pd_vector.qza \\\n  --m-metadata-file metadata.tsv \\\n  --o-visualization analysis/visualisations/faith-pd-group-significance.qzv\n</code></pre> <p>Copy <code>analysis/visualisations/faith-pd-group-significance.qzv</code> to your local computer and view in QIIME 2 View (q2view).</p> Visualisation: Faith Phylogenetic Diversity output <p>Click to view the <code>faith-pd-group-significance.qzv</code> file in QIIME 2 View.  </p> <p>Select \u201cEnvironment\u201d under the \u201cColumn\u201d dropdown menu.  </p> <p></p> <p> <pre><code>qiime diversity alpha-group-significance \\\n  --i-alpha-diversity analysis/diversity_metrics/evenness_vector.qza \\\n  --m-metadata-file metadata.tsv \\\n  --o-visualization analysis/visualisations/evenness-group-significance.qzv\n</code></pre></p> <p>Copy <code>analysis/visualisations/evenness-group-significance.qzv</code> to your local computer and view in QIIME 2 View (q2view).</p> Visualisation: Evenness output <p>Click to view the <code>evenness-group-significance.qzv</code> file in QIIME 2 View.  </p> <p>Select \u201cGenotype\u201d under the \u201cColumn\u201d dropdown menu.</p> <p></p> <p>Finally, we\u2019ll analyse sample composition in the context of categorical metadata using a permutational multivariate analysis of variance (PERMANOVA, first described in Anderson (2001)) test using the beta-group-significance command. The following commands will test whether distances between samples within a group, such as samples from the same genotype, are more similar to each other then they are to samples from the other groups. If you call this command with the <code>--p-pairwise</code> parameter, as we\u2019ll do here, it will also perform pairwise tests that will allow you to determine which specific pairs of groups (e.g., AIMS1 and AIMS4) differ from one another, if any. This command can be slow to run, especially when passing <code>--p-pairwise</code>, since it is based on permutation tests. So, unlike the previous commands, we\u2019ll run beta-group-significance on specific columns of metadata that we\u2019re interested in exploring, rather than all metadata columns to which it is applicable. Here we\u2019ll apply this to our unweighted UniFrac distances, using two sample metadata columns, as follows.</p> <pre><code>qiime diversity beta-group-significance \\\n  --i-distance-matrix analysis/diversity_metrics/unweighted_unifrac_distance_matrix.qza \\\n  --m-metadata-file metadata.tsv \\\n  --m-metadata-column Genotype \\\n  --o-visualization analysis/visualisations/unweighted-unifrac-genotype-significance.qzv \\\n  --p-pairwise\n</code></pre> <p>Copy <code>analysis/visualisations/unweighted-unifrac-genotype-significance.qzv</code> to your local computer and view in QIIME 2 View (q2view).</p> Visualisation: Genotype significance output <p>Click to view the <code>unweighted-unifrac-genotype-significance.qzv</code> file in QIIME 2 View.</p> <p> <pre><code>qiime diversity beta-group-significance \\\n  --i-distance-matrix analysis/diversity_metrics/unweighted_unifrac_distance_matrix.qza \\\n  --m-metadata-file metadata.tsv \\\n  --m-metadata-column Environment \\\n  --o-visualization analysis/visualisations/unweighted-unifrac-environment-significance.qzv \\\n  --p-pairwise\n</code></pre></p> <p>Copy <code>analysis/visualisations/unweighted-unifrac-environment-significance.qzv</code> to your local computer and view in QIIME 2 View (q2view).</p> Visualisation: Environmental significance output <p>Click to view the <code>unweighted-unifrac-environment-significance.qzv</code> file in QIIME 2 View.  </p> Provenance <p>Click to view the <code>unweighted-unifrac-environment-significance.qzv</code> provenance file in QIIME 2 View.  </p>"},{"location":"tutorials/qiime2/qiime2/#section-5-exporting-data-for-further-analysis-in-r","title":"Section 5: Exporting data for further analysis in R","text":"<p>You need to export your ASV table, taxonomy table, and tree file for analyses in R. Many file formats can be accepted.</p> <p>Export unrooted tree as <code>.nwk</code> format as required for the R package <code>phyloseq</code>.</p> <pre><code>qiime tools export \\\n  --input-path analysis/tree/16s_unrooted_tree.qza \\\n  --output-path analysis/export\n</code></pre> <p>Create a BIOM table with taxonomy annotations. A FeatureTable[Frequency] artefact will be exported as a BIOM v2.1.0 formatted file.</p> <pre><code>qiime tools export \\\n  --input-path analysis/taxonomy/16s_table_filtered.qza \\\n  --output-path analysis/export\n</code></pre> <p>Then export BIOM to TSV</p> <pre><code>biom convert \\\n-i analysis/export/feature-table.biom \\\n-o analysis/export/feature-table.tsv \\\n--to-tsv\n</code></pre> <p>Export Taxonomy as TSV</p> <pre><code>qiime tools export \\\n--input-path analysis/taxonomy/classification.qza \\\n--output-path analysis/export\n</code></pre> <p>Delete the header lines of the .tsv files</p> <pre><code>sed '1d' analysis/export/taxonomy.tsv &gt; analysis/export/taxonomy_noHeader.tsv\nsed '1d' analysis/export/feature-table.tsv &gt; analysis/export/feature-table_noHeader.tsv\n</code></pre> <p>Some packages require your data to be in a consistent order, i.e. the order of your ASVs in the taxonomy table rows to be the same order of ASVs in the columns of your ASV table. It\u2019s recommended to clean up your taxonomy file. You can have blank spots where the level of classification was not completely resolved.</p>"},{"location":"tutorials/qiime2/qiime2/#section-6-extra-information","title":"Section 6: Extra Information","text":"<p>STOP</p> <p>This section contains information on how to train the classifier for analysing your own data. This will NOT be covered in the workshop.</p>"},{"location":"tutorials/qiime2/qiime2/#train-silva-v138-classifier-for-16s18s-rrna-gene-marker-sequences","title":"Train SILVA v138 classifier for 16S/18S rRNA gene marker sequences.","text":"<p>The newest version of the SILVA database (v138) can be trained to classify marker gene sequences originating from the 16S/18S rRNA gene. Reference files <code>silva-138-99-seqs.qza</code> and <code>silva-138-99-tax.qza</code> were downloaded from SILVA and imported to get the artefact files. You can download both these files from here.</p> <p>Reads for the region of interest are first extracted. You will need to input your forward and reverse primer sequences. See QIIME2 documentation for more information.</p> <pre><code>qiime feature-classifier extract-reads \\\n--i-sequences silva-138-99-seqs.qza \\\n--p-f-primer FORWARD_PRIMER_SEQUENCE \\\n--p-r-primer REVERSE_PRIMER_SEQUENCE \\\n--o-reads silva_138_marker_gene.qza \\\n--verbose\n</code></pre> <p>The classifier is then trained using a naive Bayes algorithm. See QIIME2 documentation for more information.</p> <pre><code>qiime feature-classifier fit-classifier-naive-bayes \\\n--i-reference-reads silva_138_marker_gene.qza \\\n--i-reference-taxonomy silva-138-99-tax.qza \\\n--o-classifier silva_138_marker_gene_classifier.qza \\\n--verbose\n</code></pre>"},{"location":"tutorials/qiime2_mammal/","title":"Index","text":"<p>QIIME2 regularly updates so links in tutorial will need to be checked and pointed to latest version. Upload the visualisations to DropBox and then load them to Qiime2 View and get link to put in workshop.</p> <p>PR reviewers and advice: Gayle Philip</p> <p>Current slides: TBD</p> <p>Other slides:</p> <ul> <li>None yet</li> </ul>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/","title":"Intro to Metabarcoding using QIIME2: *Mammal dataset*","text":""},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#qiime2-mammal-dataset","title":"QIIME2 - Mammal Dataset","text":"<p>Anticipated workshop duration when delivered to a group of participants is 4 hours.  </p> <p>For queries relating to this workshop, contact Melbourne Bioinformatics (bioinformatics-training@unimelb.edu.au).</p>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#overview","title":"Overview","text":""},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#topic","title":"Topic","text":"<ul> <li> Genomics</li> <li> Transcriptomics</li> <li> Proteomics</li> <li> Metabolomics</li> <li> Statistics and visualisation</li> <li> Structural Modelling</li> <li> Basic skills</li> </ul>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#skill-level","title":"Skill level","text":"<ul> <li> Beginner  </li> <li> Intermediate  </li> <li> Advanced  </li> </ul> <p> This workshop is designed for participants with command-line knowledge. You will need to be able to <code>ssh</code> into a remote machine, navigate the directory structure and <code>scp</code> files from a remote computer to your local computer.</p>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#description","title":"Description","text":"<p>What is the influence of sex and individual on gut microbiota of the short-beaked echidna, Tachyglossus aculeatus?</p> <p>Data: Illumina MiSeq v3 paired-end (2 \u00d7 300 bp) reads (FASTQ).</p> <p>Tools: QIIME 2</p> <p>Pipeline: </p> <p>Section 1: Importing, cleaning and quality control of the data Section 2: Taxonomic Analysis Section 3: Building a phylogenetic tree Section 4: Basic visualisations and statistics Section 5: Exporting data for further analysis in R Section 6: Extra Information</p>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#learning-objectives","title":"Learning Objectives","text":"<p>At the end of this introductory workshop, you will:</p> <ul> <li>Take raw data from a sequencing facility and end with publication quality graphics and statistics</li> <li>Answer the question What is the influence of sex and individual on gut microbiota of the short-beaked echidna?</li> </ul>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#tutorial-layout","title":"Tutorial layout","text":"<ul> <li>There is a <code>Table of contents</code> on the right-hand side which can be used to easily navigate through the tutorial by clicking the relevant section.</li> </ul> <pre><code>These grey coloured boxes are code blocks. The rectangular boxes in the top\nright hand corner of this code block/grey box can be used to copy the code to\nthe clipboard.\n</code></pre> Coloured boxes like these with &gt; on the far right hand side, can be clicked to reveal the contents. <p>REVEALED!</p> <p>Attention: Pay attention to the information in these boxes.</p> <p>Important information, hints and tips.</p> <p>STOP</p> <p>Important information about running a command - read carefully.</p>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#requirements-and-preparation","title":"Requirements and preparation","text":"<p>Important</p> <p>Attendees are required to use their own laptop computers. </p> <p>At least one week before the workshop, if required, participants should install the software below.  This should provide sufficient time for participants to liaise with their own IT support should they encounter any IT problems.  </p>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#mode-of-delivery","title":"Mode of Delivery","text":"<p>This workshop will be run on a Nectar Instance. For more information click here.</p> <p>It is possible to apply for your own Nectar allocation to run this workshop independently though you will need to install any software needed.</p>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#required-software","title":"Required Software","text":"<p>For information about required software, click here.  </p> <p>You will need to use a Google Chrome or Mozilla Firefox web browser to view files in QIIME2 View.</p>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#required-data","title":"Required Data","text":"<ul> <li> <p>No additional data needs to be downloaded for this workshop - it is all located on the Nectar Instance. FASTQs are located in the directory <code>raw_data</code> and a metadata (<code>echidna_metadata.tsv</code>) file has also been provided.</p> </li> <li> <p>If you wish to analyse the data independently at a later stage, it can be downloaded from here. This link contains both the FASTQs and associated metadata file.</p> </li> <li> <p>If you are running this tutorial independently, you can also access the classifier that has been trained specifically for this data from here.</p> </li> </ul>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#slides-and-workshop-instructions","title":"Slides and workshop instructions","text":"<p>Click here for slides presented during this workshop.</p> <p>Click here for a printer friendly PDF version of this workshop.</p>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#author-information","title":"Author Information","text":"<p>Developed by: Dr. Ashley Dungan, Dr. Gayle Philip and Laura Geissler School of Biosciences, University of Melbourne; Melbourne Bioinformatics</p> <p>Created/Reviewed: November 2023</p>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#background","title":"Background","text":"<p>What is the influence of sex and individual on gut microbiota of the short-beaked echidna?</p>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#the-players","title":"The Players","text":"<p> (Photo credit: David Cook)</p> <ul> <li> <p>Short-beaked echidna Tachyglossus aculeatus - a monotreme that has evolved to lay and incubate an egg. There are 38 samples in this dataset (This data is a subset from a larger experiment):  </p> <ol> <li>5 samples from each individual (3x male and 3x female).  </li> <li>8 control samples (DNA extraction blanks (n=5) and PCR blanks (n=3)).</li> </ol> </li> <li> <p>The gut bacterial communities, or microbiome, of the echidna.  </p> </li> </ul>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#the-study","title":"The Study","text":"<p>Indigenous microbial communities (microbiota) play critical roles in host health. Monotremes, such as the short-beaked echidna, have evolved to lay and incubate an egg. Since both faeces and eggs pass through the cloaca, the faecal microbiota of female echidnas provides an opportunity for vertical transmission of microbes to their offspring as well as maintaining foetus health. Here, we characterise the gut microbiome of female and male short-beaked echidnas from six individuals living in captivity in the Currumbin Wildlife Sanctuary in Queensland. This data is a subset from a larger experiment.</p> <p>Buthgamuwa I, Fenelon JC, Roser A, Meer H, Johnston SD, Dungan AM (2023) Unraveling the fecal microbiota stability in the short-beaked echidna (Tachyglossus aculeatus) across gestation. In review at MicrobiologyOpen. Full text on ResearchSquare.</p>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#qiime-2-analysis-platform","title":"QIIME 2 Analysis platform","text":"<p>Attention</p> <p>The version used in this workshop is qiime2-2023.9. Other versions of QIIME2 may result in minor differences in results.</p> <p> Quantitative Insights Into Microbial Ecology 2 (QIIME 2\u2122) is a next-generation microbiome bioinformatics platform that is extensible, free, open source, and community developed. It allows researchers to:  </p> <ul> <li>Automatically track analyses with decentralised data provenance</li> <li>Interactively explore data with beautiful visualisations</li> <li>Easily share results without QIIME 2 installed</li> <li>Plugin-based system \u2014 researchers can add in tools as they wish</li> </ul> <p></p>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#viewing-qiime2-visualisations","title":"Viewing QIIME2 visualisations","text":"<p>Attention</p> <p>In order to use QIIME2 View to visualise your files, you will need to use a Google Chrome or Mozilla Firefox web browser (not in private browsing). For more information, click here.</p> <p>As this workshop is being run on a remote Nectar Instance, you will need to download the visual files (*.qzv) to your local computer and view them in QIIME2 View (q2view).</p> <p>Attention</p> <p>We will be doing this step multiple times throughout this workshop to view visualisation files as they are generated.</p> <p> Alternatively, if you have QIIME2 installed and are running it on your own computer, you can use <code>qiime tools view</code> to view the results from the command line (e.g. <code>qiime tools view filename.qzv</code>). <code>qiime tools view</code> opens a browser window with your visualization loaded in it. When you are done, you can close the browser window and press <code>ctrl-c</code> on the keyboard to terminate the command.</p>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#initial-set-up-on-nectar","title":"Initial Set up on Nectar","text":""},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#byobu-screen","title":"Byobu-screen","text":"<p>To ensure that commands continue to run should you get disconnected from your Nectar Instance, we\u2019ll run a byobu-screen session.</p>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#starting-a-byobu-screen-session","title":"Starting a byobu-screen session","text":"<p>On Nectar, to start a <code>byobu-screen</code> session called <code>workshop</code>, type  </p> <pre><code>byobu-screen -S workshop\n</code></pre>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#reconnecting-to-a-byobu-screen-session","title":"Reconnecting to a byobu-screen session","text":"<p>If you get disconnected from your Nectar Instance, follow the instructions here to resume your session.</p>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#symbolic-links-to-workshop-data","title":"Symbolic links to workshop data","text":"<p>Data for this workshop is stored in a central location (<code>/mnt/shared_data/</code>) on the Nectar file system that we will be using. We will use symbolic links (<code>ln -s</code>) to point to it. Symbolic links (or symlinks) are just \u201cvirtual\u201d files or folders (they only take up a very little space) that point to a physical file or folder located elsewhere in the file system. Sequencing data can be large, and rather than unnecessarily having multiple copies of the data which can quickly take up a lot of space, we will simply point to the files needed in the <code>shared_data</code> folder.</p> <pre><code>cd\nln -s /mnt/shared_data/raw_data raw_data\nln -s /mnt/shared_data/echidna_metadata.tsv echidna_metadata.tsv\nln -s /mnt/shared_data/silva_138_16s_515-806_classifier.qza silva_138_16s_515-806_classifier.qza\n</code></pre>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#section-1-importing-cleaning-and-quality-control-of-the-data","title":"Section 1: Importing, cleaning and quality control of the data","text":""},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#import-data","title":"Import data","text":"<p>These samples were sequenced on a single Illumina MiSeq run using v3 (2 \u00d7 300 bp) reagents at the Walter and Eliza Hall Institute (WEHI), Melbourne, Australia. Data from WEHI came as paired-end, demultiplexed, unzipped *.fastq files with adapters still attached. Following the QIIME2 importing tutorial, this is the Casava One Eight format. The files have been renamed to satisfy the Casava format as SampleID_FWDXX-REVXX_L001_R[1 or 2]_001.fastq e.g. CTRLA_Fwd04-Rev25_L001_R1_001.fastq.gz. The files were then zipped (.gzip).</p> <p>Here, the data files (two per sample i.e. forward and reverse reads <code>R1</code> and <code>R2</code> respectively) will be imported and exported as a single QIIME 2 artefact file. These samples are already demultiplexed (i.e. sequences from each sample have been written to separate files), so a metadata file is not initially required.</p> <p>Note</p> <p>To check the input syntax for any QIIME2 command, enter the command, followed by <code>--help</code> e.g. <code>qiime tools import --help</code></p> <p>Attention</p> <p>If you haven\u2019t already done so, make sure you are running the workshop in byobu-screen and have created the symbolic links to the workshop data.</p> <p>Start by making a new directory <code>analysis</code> to store all the output files from this tutorial. In addition, we will create a subdirectory called <code>seqs</code> to store the exported sequences.</p> <pre><code>cd\nmkdir -p analysis/seqs\n</code></pre> <p>Run the command to import the raw data located in the directory <code>raw_data</code> and export it to a single QIIME 2 artefact file, <code>combined.qza</code>.</p> <pre><code>qiime tools import \\\n--type 'SampleData[PairedEndSequencesWithQuality]' \\\n--input-path raw_data \\\n--input-format CasavaOneEightSingleLanePerSampleDirFmt \\\n--output-path analysis/seqs/combined.qza\n</code></pre>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#remove-primers","title":"Remove primers","text":"<p>Important</p> <p>Remember to ask you sequencing facility if the raw data you get has the primers attached - they may have already been removed.</p> <p>These sequences still have the primers attached - they need to be removed (using <code>cutadapt</code>) before denoising. For this experiment, amplicons were amplified following the Earth Microbiome protocol with 515F (Caporaso)\u2013 806R (Caporaso) primers targeting the v4 region of the 16S rRNA gene. The reads came back from the sequencer with primers attached, which are removed before denoising using cutadapt (v4.5 with python v3.8.15). With cutadapt, the sequence specified and all bases prior are trimmed; most sequences were trimmed at ~50 base pairs (bp). An error rate of 0.15 was used to maximize the number of reads that the primers were removed from while excluding nonspecific cutting. Any untrimmed read was discarded.</p> <pre><code>qiime cutadapt trim-paired \\\n--i-demultiplexed-sequences analysis/seqs/combined.qza \\\n--p-front-f GTGCCAGCMGCCGCGGTAA \\\n--p-front-r GGACTACHVGGGTWTCTAAT \\\n--p-discard-untrimmed \\\n--p-error-rate 0.15 \\\n--output-dir analysis/seqs_trimmed \\\n--verbose\n</code></pre> <p>Attention</p> <p>The primers specified (515F (Caporaso)\u2013 806R (Caporaso) targeting the v4 region of the bacterial 16S rRNA gene) correspond to this specific experiment - they will likely not work for your own data analyses.</p> <p>Attention</p> <p>The error rate parameter, <code>--p-error-rate</code>, will likely need to be adjusted for your own sample data to get 100% (or close to it) of reads trimmed.</p>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#create-and-interpret-sequence-quality-data","title":"Create and interpret sequence quality data","text":"<p>Create a viewable summary file so the data quality can be checked. Viewing the quality plots generated here helps determine trim settings.</p> <p>Things to look for:</p> <ol> <li>Where does the median quality drop below 35?  </li> <li>Do any of the samples have only a few sequences e.g. &lt;1000? If so, you may want to omit them from the analysis later on in R.</li> </ol> <p>Create a subdirectory in <code>analysis</code> called <code>visualisations</code> to store all files that we will visualise in one place.</p> <pre><code>mkdir analysis/visualisations\n</code></pre> <pre><code>qiime demux summarize \\\n--i-data analysis/seqs_trimmed/trimmed_sequences.qza \\\n--o-visualization analysis/visualisations/trimmed_sequences.qzv\n</code></pre> <p>Copy <code>analysis/visualisations/trimmed_sequences.qzv</code> to your local computer and view in QIIME 2 View (q2view).</p> Visualisations: Read quality and demux output <p>Click to view the <code>trimmed_sequences.qzv</code> file in QIIME 2 View.</p> <p> Make sure to switch between the \u201cOverview\u201d and \u201cInteractive Quality Plot\u201d tabs in the top left hand corner. Click and drag on the plot to zoom in. Double click to zoom back out to full size. Hover over a box to see the parametric seven-number summary of the quality scores at the corresponding position.</p> <p></p>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#denoising-the-data","title":"Denoising the data","text":"<p>Trimmed sequences are now quality assessed using the <code>dada2</code> plugin within QIIME2. <code>dada2</code> denoises data by modelling and correcting Illumina-sequenced amplicon errors, and infers exact amplicon sequence variants (ASVs), resolving differences of as little as 1 nucleotide. Its workflow consists of filtering, de-replication, reference\u2010free chimera detection, and paired\u2010end reads merging, resulting in a feature or ASV table.</p> <p>Note</p> <p>This step may long time to run (i.e. hours), depending on files sizes and computational power.</p> <p>Remember to adjust <code>p-trunc-len-f</code> and <code>p-trunc-len-r</code> values according to your own data.</p> <p>Question: Based on your assessment of the quality plots from the trimmed_sequences.qzv file generated in the previous step, what values would you select for <code>p-trunc-len-f</code> and <code>p-trunc-len-r</code> in the command below? Hint: At what base pair does the median quality drop below 35?</p> Answer <p>For version qiime2.2023.9 (other QIIME2 versions may slightly differ). Upload your <code>trimmed_sequences.qzv</code> file to QIIME2 view, change to the \u201cInteractive Quality Plot\u201d tab and zoom in on the plots to find the relevant base pairs for the QIIME2 version you are using. Median quality score for raw reads dropped below 35 at 253 and 208 bp for the forward and reverse reads, respectively. However, being conservative and truncating significantly less than these values provides higher quality data with more reads retained. In this case, we will use <code>p-trunc-len-f 213</code> and <code>p-trunc-len-r 168</code> (40 bp extra truncated). Researchers should play around with this and compare the denoising stats after various trimming lengths. </p> <p>In the following command, a pooling method of \u2018pseudo\u2019 is selected. With the pseudo-pooling method, samples are denoised independently once, ASVs detected in at least 2 samples are recorded, and samples are denoised independently a second time, but this time with prior knowledge of the recorded ASVs and thus higher sensitivity to those ASVs. This is better than the default of \u2018independent\u2019 (where samples are denoised independently) when you expect samples in the run to have similar ASVs overall.</p> <p>STOP - Workshop participants only</p> <p>Due to computational limitations in a workshop setting, this command will be run staggered (by co-ordinating with other users on the Nectar Instance you are logged in to), with no more than two users per Instance running the command at the same time.</p> <p>The specified output directory must not pre-exist. </p> <pre><code>qiime dada2 denoise-paired \\\n--i-demultiplexed-seqs analysis/seqs_trimmed/trimmed_sequences.qza \\\n--p-trunc-len-f xx \\\n--p-trunc-len-r xx \\\n--p-n-threads 0 \\\n--p-pooling-method 'pseudo' \\\n--output-dir analysis/dada2out \\\n--verbose\n</code></pre>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#generate-summary-files","title":"Generate summary files","text":"<p>A metadata file is required which provides the key to gaining biological insight from your data. The file echidna_metadata.tsv is provided in the home directory of your Nectar instance. This spreadsheet has already been verified using the plugin for Google Sheets, keemei.  </p> <p>Things to look for:</p> <ol> <li>How many features (ASVs) were generated? Are the communities high or low diversity?</li> <li>Do BLAST searches of the representative sequences make sense? Are the features what you would expect e.g. marine or terrestrial?</li> <li>Have a large number (e.g. &gt;50%) of sequences been lost during denoising/filtering? If so, the settings might be too stringent.</li> </ol> <p></p> <pre><code>qiime metadata tabulate \\\n--m-input-file analysis/dada2out/denoising_stats.qza \\\n--o-visualization analysis/visualisations/16s_denoising_stats.qzv \\\n--verbose\n</code></pre> <p>Copy <code>analysis/visualisations/16s_denoising_stats.qzv</code> to your local computer and view in QIIME 2 View (q2view).</p> Visualisation: Denoising Stats <p>Click to view the <code>16s_denoising_stats.qzv</code> file in QIIME 2 View.</p> <p> <pre><code>qiime feature-table summarize \\\n--i-table analysis/dada2out/table.qza \\\n--m-sample-metadata-file echidna_metadata.tsv \\\n--o-visualization analysis/visualisations/16s_table.qzv \\\n--verbose\n</code></pre></p> <p>Copy <code>analysis/visualisations/16s_table.qzv</code> to your local computer and view in QIIME 2 View (q2view).</p> Visualisations: Feature/ASV summary <p>Click to view the <code>16s_table.qzv</code> file in QIIME 2 View.  </p> <p>Make sure to switch between the \u201cOverview\u201d and \u201cFeature Detail\u201d tabs in the top left hand corner. </p> <p> <pre><code>qiime feature-table tabulate-seqs \\\n--i-data analysis/dada2out/representative_sequences.qza \\\n--o-visualization analysis/visualisations/16s_representative_seqs.qzv \\\n--verbose\n</code></pre></p> <p>Copy <code>analysis/visualisations/16s_representative_seqs.qzv</code> to your local computer and view in QIIME 2 View (q2view).</p> Visualisation: Representative Sequences <p>Click to view the <code>16s_representative_seqs.qzv</code> file in QIIME 2 View.</p>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#section-2-taxonomic-analysis","title":"Section 2: Taxonomic Analysis","text":""},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#assign-taxonomy","title":"Assign taxonomy","text":"<p>Here we will classify each identical read or Amplicon Sequence Variant (ASV) to the highest resolution based on a database. Common databases for bacteria datasets are Greengenes, SILVA, Ribosomal Database Project, or Genome Taxonomy Database. See Porter and Hajibabaei, 2020 for a review of different classifiers for metabarcoding research. The classifier chosen is dependent upon:</p> <ol> <li>Previously published data in a field</li> <li>The target region of interest</li> <li>The number of reference sequences for your organism in the database and how recently that database was updated.</li> </ol> <p>A classifier has already been trained for you for the V4 region of the bacterial 16S rRNA gene using the SILVA database. The next step will take a while to run. The output directory cannot previously exist.</p> <p>n_jobs = 1  This runs the script using all available cores</p> <p>Note</p> <p>The classifier used here is only appropriate for the specific 16S rRNA region that this data represents. You will need to train your own classifier for your own data. For more information about training your own classifier, see Section 6: Extra Information.</p> <p>STOP - Workshop participants only</p> <p>Due to time limitations in a workshop setting, please do NOT run the <code>qiime feature-classifier classify-sklearn</code> command below. You will need to access a pre-computed <code>classification.qza</code> file that this command generates by running the following: <code>cd; mkdir analysis/taxonomy; cp /mnt/shared_data/pre_computed/classification.qza analysis/taxonomy</code>. If you have accidentally run the command below, <code>ctrl-c</code> will terminate it.</p> <pre><code>qiime feature-classifier classify-sklearn \\\n--i-classifier silva_138_16s_515-806_classifier.qza \\\n--i-reads analysis/dada2out/representative_sequences.qza \\\n--p-n-jobs 1 \\\n--output-dir analysis/taxonomy \\\n--verbose\n</code></pre> <p>Warning</p> <p>This step often runs out of memory on full datasets. Some options are to change the number of cores you are using (adjust <code>--p-n-jobs</code>) or add <code>--p-reads-per-batch 10000</code> and try again. The QIIME 2 forum has many threads regarding this issue so always check there was well.</p>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#generate-a-viewable-summary-file-of-the-taxonomic-assignments","title":"Generate a viewable summary file of the taxonomic assignments.","text":"<pre><code>qiime metadata tabulate \\\n--m-input-file analysis/taxonomy/classification.qza \\\n--o-visualization analysis/visualisations/taxonomy.qzv \\\n--verbose\n</code></pre> <p>Copy <code>analysis/visualisations/taxonomy.qzv</code> to your local computer and view in QIIME 2 View (q2view).</p> Visualisation: Taxonomy <p>Click to view the <code>taxonomy.qzv</code> file in QIIME 2 View.</p>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#filtering","title":"Filtering","text":"<p>Filter out reads classified as mitochondria and chloroplast. Unassigned ASVs are retained. Generate a viewable summary file of the new table to see the effect of filtering.</p> <p>According to QIIME developer Nicholas Bokulich, low abundance filtering (i.e. removing ASVs containing very few sequences) is not necessary under the ASV model.</p> <pre><code>qiime taxa filter-table \\\n--i-table analysis/dada2out/table.qza \\\n--i-taxonomy analysis/taxonomy/classification.qza  \\\n--p-exclude Mitochondria,Chloroplast \\\n--o-filtered-table analysis/taxonomy/16s_table_filtered.qza \\\n--verbose\n</code></pre> <pre><code>qiime feature-table summarize \\\n--i-table analysis/taxonomy/16s_table_filtered.qza \\\n--m-sample-metadata-file echidna_metadata.tsv \\\n--o-visualization analysis/visualisations/16s_table_filtered.qzv \\\n--verbose\n</code></pre> <p>Copy <code>analysis/visualisations/16s_table_filtered.qzv</code> to your local computer and view in QIIME 2 View (q2view).</p> Visualisation: 16s_table_filtered <p>Click to view the <code>16s_table_filtered.qzv</code> file in QIIME 2 View.</p>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#section-3-build-a-phylogenetic-tree","title":"Section 3: Build a phylogenetic tree","text":"<p>The next step does the following:</p> <ol> <li>Perform an alignment on the representative sequences.</li> <li>Mask sites in the alignment that are not phylogenetically informative.</li> <li>Generate a phylogenetic tree.</li> <li>Apply mid-point rooting to the tree.</li> </ol> <p>A phylogenetic tree is necessary for any analyses that incorporates information on the relative relatedness of community members, by incorporating phylogenetic distances between observed organisms in the computation. This would include any beta-diversity analyses and visualisations from a weighted or unweighted Unifrac distance matrix.</p> <pre><code>mkdir analysis/tree\n</code></pre> <p>Use one thread only (which is the default action) so that identical results can be produced if rerun.</p> <pre><code>qiime phylogeny align-to-tree-mafft-fasttree \\\n--i-sequences analysis/dada2out/representative_sequences.qza \\\n--o-alignment analysis/tree/aligned_16s_representative_seqs.qza \\\n--o-masked-alignment analysis/tree/masked_aligned_16s_representative_seqs.qza \\\n--o-tree analysis/tree/16s_unrooted_tree.qza \\\n--o-rooted-tree analysis/tree/16s_rooted_tree.qza \\\n--p-n-threads 1 \\\n--verbose\n</code></pre>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#section-4-basic-visualisations-and-statistics","title":"Section 4: Basic visualisations and statistics","text":""},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#asv-relative-abundance-bar-charts","title":"ASV relative abundance bar charts","text":"<p>Create bar charts to compare the relative abundance of ASVs across samples.</p> <pre><code>qiime taxa barplot \\\n--i-table analysis/taxonomy/16s_table_filtered.qza \\\n--i-taxonomy analysis/taxonomy/classification.qza \\\n--m-metadata-file echidna_metadata.tsv \\\n--o-visualization analysis/visualisations/barchart.qzv \\\n--verbose\n</code></pre> <p>Copy <code>analysis/visualisations/barchart.qzv</code> to your local computer and view in QIIME 2 View (q2view). Try selecting different taxonomic levels and metadata-based sample sorting.</p> Visualisations: Taxonomy Barplots <p>Click to view the <code>barchart.qzv</code> file in QIIME 2 View.  </p> <p>Increase the \u201cBar Width\u201d, select \u201cAnimal\u201d or \u201cSex\u201d in \u201cSort Samples By\u201d drop-down menu and explore the resulting barplots by changing the levels in the \u201cChange Taxonomic Level\u201d dropdown menu (Select Level 1, then Level 3, and then Level 5 for example).  </p> <p></p>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#rarefaction-curves","title":"Rarefaction curves","text":"<p>Generate rarefaction curves to determine whether the samples have been sequenced deeply enough to capture all the community members. The max depth setting will depend on the number of sequences in your samples.</p> <p>Things to look for:</p> <ol> <li>Do the curves for each sample plateau? If they don\u2019t, the samples haven\u2019t been sequenced deeply enough to capture the full diversity of the bacterial communities, which is shown on the y-axis.</li> <li>At what sequencing depth (x-axis) do your curves plateau? This value will be important for downstream analyses, particularly for alpha diversity analyses.</li> </ol> <p>Note</p> <p>The value that you provide for \u2013p-max-depth should be determined by reviewing the \u201cFrequency per sample\u201d information presented in the 16s_table_filtered.qzv file that was created above. In general, choosing a value that is somewhere around the median frequency seems to work well, but you may want to increase that value if the lines in the resulting rarefaction plot don\u2019t appear to be levelling out, or decrease that value if you seem to be losing many of your samples due to low total frequencies closer to the minimum sampling depth than the maximum sampling depth.</p> <pre><code>qiime diversity alpha-rarefaction \\\n--i-table analysis/taxonomy/16s_table_filtered.qza \\\n--i-phylogeny analysis/tree/16s_rooted_tree.qza \\\n--p-max-depth 20000 \\\n--p-min-depth 500 \\\n--p-steps 40 \\\n--m-metadata-file echidna_metadata.tsv \\\n--o-visualization analysis/visualisations/16s_alpha_rarefaction.qzv \\\n--verbose\n</code></pre> <p>Copy <code>analysis/visualisations/16s_alpha_rarefaction.qzv</code> to your local computer and view in QIIME 2 View (q2view).</p> Visualisation: Rarefaction <p>Click to view the <code>16s_alpha_rarefaction.qzv</code> file in QIIME 2 View.  </p> <p>Select \u201cAnimal\u201d in the \u201cSample Metadata Column\u201d and \u201cobserved_features\u201d under \u201cMetric\u201d:</p> <p></p>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#alpha-and-beta-diversity-analysis","title":"Alpha and beta diversity analysis","text":"<p>The following is taken directly from the Moving Pictures tutorial and adapted for this data set. QIIME 2\u2019s diversity analyses are available through the <code>q2-diversity</code> plugin, which supports computing alpha- and beta- diversity metrics, applying related statistical tests, and generating interactive visualisations. We\u2019ll first apply the core-metrics-phylogenetic method, which rarefies a FeatureTable[Frequency] to a user-specified depth, computes several alpha- and beta- diversity metrics, and generates principle coordinates analysis (PCoA) plots using Emperor for each of the beta diversity metrics.</p> <p>The metrics computed by default are:</p> <ul> <li>Alpha diversity (operate on a single sample (i.e. within sample diversity)).<ul> <li>Shannon\u2019s diversity index (a quantitative measure of community richness)</li> <li>Observed OTUs (a qualitative measure of community richness)</li> <li>Faith\u2019s Phylogenetic Diversity (a qualitative measure of community richness that incorporates phylogenetic relationships between the features)</li> <li>Evenness (or Pielou\u2019s Evenness; a measure of community evenness)</li> </ul> </li> <li>Beta diversity (operate on a pair of samples (i.e. between sample diversity)).<ul> <li>Jaccard distance (a qualitative measure of community dissimilarity)</li> <li>Bray-Curtis distance (a quantitative measure of community dissimilarity)</li> <li>unweighted UniFrac distance (a qualitative measure of community dissimilarity that incorporates phylogenetic relationships between the features)</li> <li>weighted UniFrac distance (a quantitative measure of community dissimilarity that incorporates phylogenetic relationships between the features)</li> </ul> </li> </ul> <p>An important parameter that needs to be provided to this script is <code>--p-sampling-depth</code>, which is the even sampling (i.e. rarefaction) depth that was determined above. As most diversity metrics are sensitive to different sampling depths across different samples, this script will randomly subsample the counts from each sample to the value provided for this parameter. For example, if <code>--p-sampling-depth 500</code> is provided, this step will subsample the counts in each sample without replacement, so that each sample in the resulting table has a total count of 500. If the total count for any sample(s) are smaller than this value, those samples will be excluded from the diversity analysis. Choosing this value is tricky. We recommend making your choice by reviewing the information presented in the 16s_table_filtered.qzv file that was created above. Choose a value that is as high as possible (so more sequences per sample are retained), while excluding as few samples as possible. Extraction blanks and PCR negatives are absolutely fine to omit.</p> <pre><code>qiime diversity core-metrics-phylogenetic \\\n  --i-phylogeny analysis/tree/16s_rooted_tree.qza \\\n  --i-table analysis/taxonomy/16s_table_filtered.qza \\\n  --p-sampling-depth 7316 \\\n  --m-metadata-file echidna_metadata.tsv \\\n  --output-dir analysis/diversity_metrics\n</code></pre> <p>Copy the <code>.qzv</code> files created from the above command into the <code>visualisations</code> subdirectory.</p> <pre><code>cp analysis/diversity_metrics/*.qzv analysis/visualisations\n</code></pre> <p>To view the differences between sample composition using unweighted UniFrac in ordination space, copy <code>analysis/visualisations/unweighted_unifrac_emperor.qzv</code> to your local computer and view in QIIME 2 View (q2view).</p> Visualisations: Unweighted UniFrac Emperor Ordination <p>Click to view the <code>unweighted_unifrac_emperor.qzv</code> file in QIIME 2 View.  </p> <p>On q2view, select the \u201cColor\u201d tab, choose \u201cAnimal\u201d under the \u201cSelect a Color Category\u201d dropdown menu, then select the \u201cShape\u201d tab and choose \u201cSex\u201d under the \u201cSelect a Shape Category\u201d dropdown menu.  </p> <p></p> <p>Next, we\u2019ll test for associations between categorical metadata columns and alpha diversity data. We\u2019ll do that here for observed ASVs and evenness metrics.</p> <pre><code>qiime diversity alpha-group-significance \\\n  --i-alpha-diversity analysis/diversity_metrics/observed_features_vector.qza \\\n  --m-metadata-file echidna_metadata.tsv \\\n  --o-visualization analysis/visualisations/observed_features-significance.qzv\n</code></pre> <p>Copy <code>analysis/visualisations/observed_features-significance.qzv</code> to your local computer and view in QIIME 2 View (q2view).</p> Visualisation: Observed Diversity output <p>Click to view the <code>observed_features-significance.qzv</code> file in QIIME 2 View.  </p> <p>Select \u201cAnimal\u201d under the \u201cColumn\u201d dropdown menu.  </p> <p></p> <p> <pre><code>qiime diversity alpha-group-significance \\\n  --i-alpha-diversity analysis/diversity_metrics/evenness_vector.qza \\\n  --m-metadata-file echidna_metadata.tsv \\\n  --o-visualization analysis/visualisations/evenness-group-significance.qzv\n</code></pre></p> <p>Copy <code>analysis/visualisations/evenness-group-significance.qzv</code> to your local computer and view in QIIME 2 View (q2view).</p> Visualisation: Evenness output <p>Click to view the <code>evenness-group-significance.qzv</code> file in QIIME 2 View.  </p> <p>Select \u201cAnimal\u201d under the \u201cColumn\u201d dropdown menu.</p> <p></p> <p>Finally, we\u2019ll analyse sample composition in the context of categorical metadata using a permutational multivariate analysis of variance (PERMANOVA, first described in Anderson (2001)) test using the beta-group-significance command. The following commands will test whether distances between samples within a group are more similar to each other then they are to samples from the other groups. If you call this command with the <code>--p-pairwise</code> parameter, as we\u2019ll do here, it will also perform pairwise tests that will allow you to determine which specific pairs of groups differ from one another, if any. This command can be slow to run, especially when passing <code>--p-pairwise</code>, since it is based on permutation tests. So, unlike the previous commands, we\u2019ll run beta-group-significance on specific columns of metadata that we\u2019re interested in exploring, rather than all metadata columns to which it is applicable. Here we\u2019ll apply this to our unweighted UniFrac distances, using two sample metadata columns, as follows.</p> <pre><code>qiime diversity beta-group-significance \\\n  --i-distance-matrix analysis/diversity_metrics/unweighted_unifrac_distance_matrix.qza \\\n  --m-metadata-file echidna_metadata.tsv \\\n  --m-metadata-column Sex \\\n  --o-visualization analysis/visualisations/unweighted-unifrac-gender-significance.qzv \\\n  --p-pairwise\n</code></pre> <p>Copy <code>analysis/visualisations/unweighted-unifrac-gender-significance.qzv</code> to your local computer and view in QIIME 2 View (q2view).</p> Visualisation: Gender significance output <p>Click to view the <code>unweighted-unifrac-gender-significance.qzv</code> file in QIIME 2 View.</p> <p> <pre><code>qiime diversity beta-group-significance \\\n  --i-distance-matrix analysis/diversity_metrics/unweighted_unifrac_distance_matrix.qza \\\n  --m-metadata-file echidna_metadata.tsv \\\n  --m-metadata-column Animal \\\n  --o-visualization analysis/visualisations/unweighted-unifrac-animal-significance.qzv \\\n  --p-pairwise\n</code></pre></p> <p>Copy <code>analysis/visualisations/unweighted-unifrac-animal-significance.qzv</code> to your local computer and view in QIIME 2 View (q2view).</p> Visualisation: Animal significance output <p>Click to view the <code>unweighted-unifrac-animal-significance.qzv</code> file in QIIME 2 View.  </p> Provenance <p>Click to view the <code>unweighted-unifrac-animal-significance.qzv</code> provenance file in QIIME 2 View.  </p>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#section-5-exporting-data-for-further-analysis-in-r","title":"Section 5: Exporting data for further analysis in R","text":"<p>You need to export your ASV table, taxonomy table, and tree file for analyses in R. Many file formats can be accepted.</p> <p>Export unrooted tree as <code>.nwk</code> format as required for the R package <code>phyloseq</code>.</p> <pre><code>qiime tools export \\\n  --input-path analysis/tree/16s_unrooted_tree.qza \\\n  --output-path analysis/export\n</code></pre> <p>Create a BIOM table with taxonomy annotations. A FeatureTable[Frequency] artefact will be exported as a BIOM v2.1.0 formatted file.</p> <pre><code>qiime tools export \\\n  --input-path analysis/taxonomy/16s_table_filtered.qza \\\n  --output-path analysis/export\n</code></pre> <p>Then export BIOM to TSV</p> <pre><code>biom convert \\\n-i analysis/export/feature-table.biom \\\n-o analysis/export/feature-table.tsv \\\n--to-tsv\n</code></pre> <p>Export Taxonomy as TSV</p> <pre><code>qiime tools export \\\n--input-path analysis/taxonomy/classification.qza \\\n--output-path analysis/export\n</code></pre> <p>Delete the header lines of the .tsv files</p> <pre><code>sed '1d' analysis/export/taxonomy.tsv &gt; analysis/export/taxonomy_noHeader.tsv\nsed '1d' analysis/export/feature-table.tsv &gt; analysis/export/feature-table_noHeader.tsv\n</code></pre> <p>Some packages require your data to be in a consistent order, i.e. the order of your ASVs in the taxonomy table rows to be the same order of ASVs in the columns of your ASV table. It\u2019s recommended to clean up your taxonomy file. You can have blank spots where the level of classification was not completely resolved.</p>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#section-6-extra-information","title":"Section 6: Extra Information","text":"<p>STOP</p> <p>This section contains information on how to train the classifier for analysing your own data. This will NOT be covered in the workshop.</p>"},{"location":"tutorials/qiime2_mammal/qiime2_mammal/#train-silva-v138-classifier-for-16s18s-rrna-gene-marker-sequences","title":"Train SILVA v138 classifier for 16S/18S rRNA gene marker sequences.","text":"<p>The newest version of the SILVA database (v138) can be trained to classify marker gene sequences originating from the 16S/18S rRNA gene. Reference files <code>silva-138-99-seqs.qza</code> and <code>silva-138-99-tax.qza</code> were downloaded from SILVA and imported to get the artefact files. You can download both these files from here.</p> <p>Reads for the region of interest are first extracted. You will need to input your forward and reverse primer sequences. See QIIME2 documentation for more information.</p> <pre><code>qiime feature-classifier extract-reads \\\n--i-sequences silva-138-99-seqs.qza \\\n--p-f-primer FORWARD_PRIMER_SEQUENCE \\\n--p-r-primer REVERSE_PRIMER_SEQUENCE \\\n--o-reads silva_138_marker_gene.qza \\\n--verbose\n</code></pre> <p>The classifier is then trained using a naive Bayes algorithm. See QIIME2 documentation for more information.</p> <pre><code>qiime feature-classifier fit-classifier-naive-bayes \\\n--i-reference-reads silva_138_marker_gene.qza \\\n--i-reference-taxonomy silva-138-99-tax.qza \\\n--o-classifier silva_138_marker_gene_classifier.qza \\\n--verbose\n</code></pre>"},{"location":"tutorials/rna-seq-lcg/","title":"An introduction to RNA-seq analysis: counts to differentially expressed genes","text":"<p>Author: Luke C. Gandolfo, Melbourne Bioinformatics. Last updated October 2025.</p>"},{"location":"tutorials/rna-seq-lcg/#overview","title":"Overview","text":"<p>Topic</p> <ul> <li> Genomics</li> <li> Transcriptomics</li> <li> Proteomics</li> <li> Metabolomics</li> <li> Statistics and visualisation</li> <li> Structural Modelling</li> <li> Basic skills</li> </ul> <p>Skill level</p> <ul> <li> Beginner  </li> <li> Intermediate  </li> <li> Advanced  </li> </ul> <p>Data: Obers et al. \u201cRetinoic acid and TGF-\u03b2 orchestrate organ-specific programs of tissue residency\u201d, Immunity (2024)</p> <p>Tools: RStudio</p> <p>Pipeline: Section 1: Introduction, background, and preliminaries.  Section 2: Filtering, visualisation, normalisation. Section 3: Differential Expression with the limma package.  Section 4: Summary and exercises.   </p> <p>Learning objectives: TO-DO.</p>"},{"location":"tutorials/rna-seq-lcg/#introduction","title":"Introduction","text":"<p>Comparing gene expression, i.e. the amount of RNA transcript, in different experimental conditions provides important biological insights. For example, comparing gene expression in cancer and non-cancer tissue gives us insights into the biology of cancer. While there are many ways of measuring gene expression, the focus of this workshop will be (bulk) RNA-seq, a technology which (nominally) measures gene expression across the whole transcriptome, i.e. all RNA transcripts, in a sample.</p> <p>The main aim of this workshop is to show you how to go from a \u201ccounts table\u201d of RNA-seq data to a ranked list of differentially expressed (DE) genes using R and statistical software packages from Bioconductor (note: basic knowledge of R will be assumed). This aim may seem modest, but our approach will be to carefully discuss each step along the way. The motivation for this is twofold: (1) to give you some understanding and thus confidence in what you\u2019re doing; and (2) to give you some skills to judge whether the DE results you obtain are likely to be trustworthy or rubbish.</p> <p>The second motivation is important. In our context, rubbish DE results take two forms: missed discoveries (i.e. failing to infer a gene to be DE when it really is DE) or false discoveries (i.e. inferring a gene to be DE when it\u2019s actually not DE). Rubbish results are a real danger in the following way: you can competently do all the steps in this workshop and still arrive at rubbish! How is this possible? Because some data sets aren\u2019t amenable to the kinds of analyses we\u2019ll be discussing, and it\u2019s important to know when this occurs (if you care about the results!). Such data sets are typically problematic or difficult in some way and will require techniques and strategies beyond those contained in this workshop to obtain non-rubbish results. The good news, however, is that many data sets are amenable to the analyses we\u2019ll discuss.</p> <p>Important note. Our starting point for RNA-seq analysis will be a `table of counts\u2019; we won\u2019t begin from raw sequencing data (in the form of .fastq files). There\u2019s several reasons for this. Firstly, going from raw sequencing data to a table of counts can be computationally intensive and a little involved. Secondly, because of this, workshops often fail to spend enough time on the (more important) statistical part that comes after this, i.e. analysing the table of counts. Thirdly, many people have no interest in processing raw sequencing data; they\u2019re simply interested in analysing one of vast number of publicly available counts tables of RNA-seq data. If you\u2019ve generated raw sequencing data of your own (or want to look at publicly available raw sequencing files) then you should look at other workshops for how to go from this data to a table of counts. But, if you\u2019ve got a table of counts that you want to analyse, then this is the workshop for you!</p>"},{"location":"tutorials/rna-seq-lcg/#some-background","title":"Some background","text":"<p>RNA-seq involves several steps, as summarised in this figure:</p> <p></p> <p>We could say a lot more about each step, but this isn\u2019t our focus. For us, the important thing to know is that after this whole process we arrive at a table of counts\u2014the fundamental object of RNA-seq data analysis. For example, here\u2019s a made up table of counts for two groups (A and B) each with three biological replicates (using the typical \u2018genes rows, samples in columns\u2019 convention):</p> <p></p> <p>The counts quantify expression: more counts, more expression (roughly speaking\u2014see below). The fundamental question we want to ask is: which genes are DE between the groups? (e.g. is Gene 3 DE?)</p> <p>Before proceeding, some important comments about replicates:</p> <ol> <li>If you don\u2019t have replicates (ideally for all groups), STOP! You\u2019ll likely produce rubbish results (actually statistical tools will often give you an error in this situation, but not always!). Here \u201creplicates\u201d means biological replicates (data collected from distinct individuals), not technical replicates (data repeatedly collected from the same individual), a distinction nicely depicted in the figure below. Biological replicates are essential because you cannot do rigorous RNA-seq analysis (i.e. statistics) without them. Why? There are many reasons, e.g. you\u2019ll have no way of estimating the (biological) variation, i.e. \u201cnoise\u201d, in your data and so no way of properly comparing any \u201csignal\u201d (of DE) to the \u201cnoise\u201d (actually there are some ways around this issue but they\u2019re not recommended). Thus, 2 replicates is a minimum and 3+ replicates (depending on the context and situation) are recommended.</li> </ol> <p></p> <ol> <li>If you have technical replicates, PROCEED CAREFULLY! They shouldn\u2019t be analysed as if they were separate (independent) samples. Why? To see the main reason, consider an example: suppose one of your groups consists of three individuals each with 2 technical replications, making 3x2 = 6 samples in that group. It may seem like there\u2019s 6 samples in that group for doing the relevant statistics, but don\u2019t be fooled: there\u2019s only 3 independent samples (i.e. distinct individuals). If you analysed the 6 samples as if they were separate samples, your analysis would \u201coverestimate\u201d the amount of information available\u2014there\u2019s only 3 \u201cpieces\u201d of information, not 6\u2014and thus might produce many false discoveries (because the estimated variation might be too small). The standard advice for handling technical replicates is this: add the counts (gene-wise) of each technical replicate to produce single biological replicates. Note, however, that this only applies if there\u2019s no significant technical differences between the replicates (e.g. the technical replicates sit almost on top of each other in a PCA plot\u2014see below). If there are significant technical differences between the replicates (e.g. if each replicate is in different batch, which incidentally is one of the main reasons for generating technical replicates) then you should consult an expert. And, if you\u2019re in doubt about applying this advice, consult an expert!</li> </ol> <p>Another nice way of understanding the technical replicate issue above is through humour, e.g. reflect on the mistake being made in this xkcd comic:</p> <p></p>"},{"location":"tutorials/rna-seq-lcg/#example-data","title":"Example data","text":"<p>For illustration, we\u2019ll look at data from the publication: Obers et al. \u201cRetinoic acid and TGF-\u03b2 orchestrate organ-specific programs of tissue residency\u201d, Immunity (2024). The aim of this study was to investigate the roles of retinoic acid (RA) and the cytokine TGFb in driving organ-specificity of tissue resident T cells.</p> <p>The relevant RNA-seq counts table for this study can be obtained from Gene Expression Omnibus as follows:</p> <ol> <li>Use this link</li> <li>Scroll down to the \u201cSupplementary file\u201d section</li> <li>For the file \u201cGSE232852_CountsTable.txt.gz\u201d (first row), hit \u201cftp\u201d or \u201chttp\u201d in the \u201cDownloads\u201d column</li> </ol> <p>Once the file is downloaded, move it to your R working directory and unzip it. Now let\u2019s read it into R and take a look (note: you\u2019ll need to adjust the file path accordingly): <pre><code>tab &lt;- read.table(\"../Data/GSE232852_CountsTable.txt\", header=TRUE)\nhead(tab, n=50)\n</code></pre> Here\u2019s what we have:</p> <ul> <li>The first 2 columns are gene annotation: \u201cEnsembleID\u201d and \u201cSymbol\u201d, respectively (note: EnsembleID is one of many standard gene identifiers in use; another common identifier is \u201cEntrez\u201d gene ID).</li> <li>The next 12 columns represent the count data on the four experimental groups of interest, each with three biological replicates; specially, a special kind of T cell treated with either: RA, TGFb, both (RA_TGFb), or neither (WT).</li> </ul>"},{"location":"tutorials/rna-seq-lcg/#preliminaries","title":"Preliminaries","text":"<p>Before we can start analysing this data, there\u2019s four preliminaries:</p> <ol> <li> <p>Let\u2019s load the R packages we\u2019ll be using (note: if you don\u2019t have the relevant packages installed, then you\u2019ll need to run the commented code): <pre><code># # CRAN packages\n# install.packages(c(\"ggplot2\",\"ggrepel\",\"ggfortify\",\"scales\",\"pheatmap\",\"matrixStats\",\"openxlsx\"))\nlibrary(ggplot2)\nlibrary(ggrepel)\nlibrary(ggfortify)\nlibrary(scales)\nlibrary(pheatmap)\nlibrary(matrixStats)\nlibrary(openxlsx)\n\n# # Bioconductor packages\n# install.packages(\"BiocManager\")\n# BiocManager::install(c(\"limma\",\"edgeR\"))\nlibrary(limma)\nlibrary(edgeR)\n</code></pre> We\u2019ll mainly be using <code>limma</code> and some functions from <code>edgeR</code> to analyse the data above; the other packages will be used for plotting and exporting results tables.</p> </li> <li> <p>We need to organize our data into <code>DGEList</code> which is a special \u201ccontainer\u201d for our analysis: <pre><code>annotation &lt;- tab[,c(1,2)]\ncounts &lt;- tab[,-c(1,2)]\n\ndge &lt;- DGEList(counts=counts, genes=annotation)\n</code></pre> Note that we split the data table into two distinct parts\u2014gene annotation and counts\u2014storing each into the relevant slots of the container.</p> </li> <li> <p>It\u2019s helpful to create a table of sample information: <pre><code>samples &lt;- colnames(tab)[-c(1,2)]\ngroup &lt;- c(rep(\"RA\",3), rep(\"TGFb\",3), rep(\"RA_TGFb\",3), rep(\"WT\",3))\n\ninfo &lt;- data.frame(samples, group)\ninfo\n</code></pre> Here the first column is a unique sample name and the second labels the experimental group the sample belongs to. Incidentally, this would be the place to store any other relevant sample information (e.g. what batch each sample belongs to, if relevant) and even relevant biological covariates (e.g. sex, age, etc.). Note also that such sample information is usually prepared separately (in, say, Excel) and then read into R; since our example is simple, we created it on the fly.</p> </li> <li> <p>We need to create a factor vector for our groups: <pre><code>group &lt;- factor(info$group)\ngroup\n</code></pre> Factor vectors are special in R: they have an extra piece of information called \u201clevels\u201d (in this case, it\u2019s saying this factor has four levels), information which R uses to specify statistical models etc. As you\u2019ll see, this particular <code>group</code> vector will be important in our analysis.</p> </li> </ol>"},{"location":"tutorials/rna-seq-lcg/#first-steps-filtering-visualisation-and-basic-normalisation","title":"First steps: filtering, visualisation, and basic normalisation","text":""},{"location":"tutorials/rna-seq-lcg/#filtering","title":"Filtering","text":"<p>So, assuming your counts table has biological replicates in each group (and any technical replicates have been taken care of), the first thing we need to do is filtering. More precisely, removing genes with little to no expression, because the former add \u201cnoise\u201d while the latter aren\u2019t even relevant. There are various approaches to filtering, but one of the simplest is to use the <code>limma</code> function <code>filterByExpression</code>: <pre><code>keep &lt;- filterByExpr(dge, group=group) # logical vector indicating which rows of dge to keep\ntable(keep) # 32069 genes will be removed; 14009 genes will be kept\n\ndge &lt;- dge[keep,,keep.lib.size=FALSE]\nhead(dge$counts) # compare to pre-filtered data to see the difference\n</code></pre> Roughly speaking, this strategy keeps genes that have a reasonable number of counts in a worthwhile number samples, and removes them otherwise (see function help for precise details).</p> <p>Following filtering, you should check the library size of each sample. The library size of a sample is simply the sum of the counts in that library, i.e.</p> \\[ \\begin{align*} \\text{Library size for sample}\\ j &amp;= \\sum_{i} Y_{ij} \\\\ &amp; = \\sum_{\\substack{\\text{all genes}}} \\text{counts for sample}\\ j \\end{align*} \\] <p>where \\(Y_{ij}\\) is the count for gene \\(i\\) in sample \\(j\\). Here\u2019s a plot of the library sizes for our data: <pre><code>lib.size.millons &lt;- colSums(dge$counts) / 1e6\n\nbarplot(lib.size.millons, las=2, cex.names=0.8, main=\"Library size (millons)\")\nabline(h=20, lwd=2, col=\"red2\")\n</code></pre></p> <p>Library size is an important quantity. One reason to check it is because bigger is usually better: 5 million or less (not that good); 10-15 million (better); 20+ million (much better). This is because (1) it\u2019s a limited resource that needs to be \u201cshared\u201d between all the genes (in proportion to their expression); and (2) bigger counts generally means better statistical properties (e.g. power to detect DE). Another reason to check is because it will help signpost what tools you should use to analyse your data (more about this later).</p>"},{"location":"tutorials/rna-seq-lcg/#visualisation","title":"Visualisation","text":"<p>The next thing to do is visualise your data. This allows you to (1) see the landscape of biological differences between experimental groups, and (2) assess whether the data is affected by technical variation. Detecting technical variation is particularly important because its presence leads to missed and/or false discoveries, i.e. rubbish DE results. Thus, this step is crucial: analysing RNA-seq data without visualisation is literally \u201cflying blind\u201d!</p> <p>There are many visualisation methods. Each has different advantages and show different aspects of the data\u2014there is no single perfect visualisation, so use several! Here we\u2019ll discuss three: </p> <ol> <li> <p>PCA plots. These give a special low dimensional representation of our (very) high dimensional data (i.e. where we\u2019ve taken thousands of measurements on each sample). A ``good\u201d plot looks like this: (1) replicates cluster; and (2) there\u2019s some separation of biological groups.</p> </li> <li> <p>Boxplots. These are very simple: you take all the expression measurements in each sample and dump them into a boxplot, one boxplot for each sample. A ``good\u201d set of plots looks like this: the boxplots are lined up, without much movement between them.</p> </li> <li> <p>RLE plots. These are the same as boxplots but with one extra (crucial) step: subtracting the row median from each row before dumping the observations into boxplots. This additional step removes the between-gene variation, making the plot more sensitive than boxplots for detecting technical variation. A ``good\u201d plot looks like this: the boxplot medians are lined up around zero and the boxes are roughly the same size.</p> </li> </ol> <p>If any of these plots don\u2019t look ``good\u201d, in the ways described, this indicates the presence of technical variation. </p> <p>Let\u2019s make each plot then discuss them: <pre><code># log transform counts, note: 1/2 offset to avoid log transforming zeros\ny &lt;- log2(dge$counts + 1/2)\n\n# PCA plot (nice ggplot version, potentially for publication)\npca &lt;- prcomp(t(y), center=TRUE) \nautoplot(pca, data.frame(group=group), col='group', size=4) + \n  theme_classic() +\n  ggtitle(\"PCA plot\")\n</code></pre> <pre><code># boxplot and RLE plot (simple base R versions; they're generally not for publication)\npar(mfcol=c(1,2))\ncols.group &lt;- group\nlevels(cols.group) &lt;- hue_pal()(4)\n\nboxplot(y, col=as.character(cols.group), outline=FALSE, las=2, cex.axis=0.6, main=\"Boxplots\")\n\nRLE &lt;- y - rowMedians(y)\nboxplot(RLE, col=as.character(cols.group), outline=FALSE, las=2, cex.axis=0.6, main=\"RLE plot\")\nabline(h=0, col=\"grey20\", lwd=3, lty=1)\n</code></pre></p> <p>Note that we made these plots with log transformed counts, not the counts themselves (the reason for this is technical: the log transformation roughly removes the strong mean-variance relationship inherent in RNA-seq data, something we don\u2019t want driving our visualisations). </p> <p>For our data, the PCA plot looks okay; the replicates cluster reasonably well and there\u2019s separation of biological groups. The boxplots and RLE plot, on the other hand, tell a different story (which is why you should visualise your data multiple ways!). The boxplots are wobbling around a little, which is a problem. Indeed, the RLE plot reveals things are far from ideal. The boxplots and RLE plot clearly indicate the presence of technical variation which needs to be removed if we\u2019re to obtain non-rubbish results. This is the topic we turn to next.</p>"},{"location":"tutorials/rna-seq-lcg/#basic-normalisation","title":"Basic normalisation","text":"<p>Unfortunately, when doing RNA-seq analysis we can\u2019t simply compare counts between samples because there\u2019s almost always technical differences between them. To make samples properly comparable, the data needs to be normalised: we need to remove or adjust for technical differences between samples, leaving only biological differences (the thing we\u2019re interested in!). Failing to successfully normalise your data can lead to significant missed and/or false discoveries (rubbish results).</p> <p>Two important technical differences between samples are (1) library size differences and (2) compositional differences:</p> <ol> <li>Library size differences. To see the problem here look at Gene 3 in the made up table of counts:</li> </ol> <p></p> <p>Does Gene 3 show a biological or technical difference between the two groups? Looks like a biological difference, but what if I told you the library sizes for group B were 3 times bigger? In that case, the difference looks more like an artifact of library size rather than a true biological difference. Let\u2019s look at the problem another way:</p> <p></p> <p>It should be clear from this that differences resulting from different library sizes can be mistaken for biological differences. One simple way to (roughly) normalise for library size differences is to calculate counts-per-million (CPM). If we again let \\(Y_{ij}\\) be the count for gene \\(i\\) in sample \\(j\\), and let \\(N_j\\) be the library size for sample \\(j\\), then the CPM value for gene \\(i\\) in sample \\(j\\) is given by</p> \\[ \\text{CPM}_{ij} = \\frac{Y_{ij}}{N_j} \\times 10^6 = \\frac{\\text{Count}}{\\text{Library size}} \\times 10^6, \\] <p>Because CPM values are (scaled) proportions, i.e. \u201cCount / Library size\u201d, not absolute counts, the issue of library size differences is no longer relevant.</p> <ol> <li>Compositional differences. For each sample, the probability of sequencing a transcript is proportional to its abundance\u2014this is the basis of how RNA-seq works (of course!). To see the potential problem this fact creates, look at this figure:</li> </ol> <p></p> <p>These two samples are the same (they have the same number of red, yellow, blue, and green transcripts) except for the black transcript: sample A has many more black transcripts. This difference in composition means that even if the library sizes are the same, comparing raw counts still gives the wrong impression. One popular approach for normalising out these differences is the <code>TMM</code> method (from the <code>edgeR</code> package).</p> <p>Here\u2019s how to adjust for library size and compositional differences in our example: <pre><code>dge &lt;- calcNormFactors(dge, method=\"TMM\") # adjustment factors for composition; stored in our container for later use\nCPM &lt;- cpm(dge) # adjustment factors for composition incorporated when calculating cpm values\nhead(CPM) # compare to the raw counts\n</code></pre></p> <p>Before we can proceed, however, we need to do something very important: we need to check that the normalisation methodology we\u2019ve applied has actually worked! One way of doing this is through visualisation. You want to see that the normalisation has (1) removed technical (unwanted) variation, while (2) retaining (i.e. not removing) the biological differences of interest. For example, here\u2019s what our data looks like after normalising for library size and composition: <pre><code># log transform adjusted CPM values\ny &lt;- cpm(dge, log=TRUE)\n\n# PCA plot (nice ggplot version, potentially for publication)\npca &lt;- prcomp(t(y), center=TRUE) \nautoplot(pca, data.frame(group=group), col='group', size=4) + \n  theme_classic() +\n  ggtitle(\"PCA plot\")\n</code></pre> <pre><code># boxplot and RLE plot (simple base R versions; they're generally not for publication)\npar(mfcol=c(1,2))\ncols.group &lt;- group\nlevels(cols.group) &lt;- hue_pal()(4)\n\nboxplot(y, col=as.character(cols.group), outline=FALSE, las=2, cex.axis=0.6, main=\"Boxplots\")\n\nRLE &lt;- y - rowMedians(y)\nboxplot(RLE, col=as.character(cols.group), outline=FALSE, las=2, cex.axis=0.6, main=\"RLE plot\")\nabline(h=0, col=\"grey20\", lwd=3, lty=1)\n</code></pre></p> <p>Note that we can now use the cpm function to calculate logged data. The PCA plot looks better: the replicates are clustered more tightly (technical variation has been removed), and the biological groups are more separated (biological differences between groups are maintained, actually improved). Moreover, the boxplots and RLE plot are looking much better: the boxplots are lined up, and the RLE plot medians are centered on zero and the boxes are roughly similar in size.</p> <p>WARNING!\u2026library size and composition differences aren\u2019t the only kinds of technical differences that can arise between samples:</p> <ul> <li> <p>Another way they can arise is when different samples are prepared differently, e.g.</p> </li> <li> <p>with different protocols, or</p> </li> <li>in different labs, or</li> <li>on different dates, or</li> <li>by different people, or</li> <li>etc.</li> </ul> <p>These differences can lead to so-called \u201cbatch effects\u201d. For example, consider these PCA plots of a real data set:</p> <p></p> <p>These are both the \u201csame\u201d PCA plot, but one is coloured by biological condition and the other is coloured by batch. The major factor driving separation (along PC1) is batch, not biological condition; consequently, replicates are not clustering by group, and the groups aren\u2019t separating. Batch effects like these can only be corrected with more sophisticated analysis approaches, a topic outside the scope of this workshop. </p> <ul> <li>Moreover, batch effects aren\u2019t the only way problems can arise (beyond library size and composition). For example, consider this PCA plot of another real data set (coloured by biological condition):</li> </ul> <p></p> <p>Again, the replicates aren\u2019t really clustering and the groups aren\u2019t really separating. The problem here, however, isn\u2019t batch effects\u2014it\u2019s something much more subtle.</p> <p>The bottom line is this: if, after normalising for library size and composition, your visualisations don\u2019t look reasonably \u201cgood\u201d, in the ways discussed above, the results you\u2019ll get from proceeding with a DE analysis will likely contain missed and/or false discoveries\u2014you\u2019ll likely get rubbish results.</p>"},{"location":"tutorials/rna-seq-lcg/#differential-expression-limma","title":"Differential expression: limma","text":""},{"location":"tutorials/rna-seq-lcg/#statistical-model-for-the-data","title":"Statistical model (for the data)","text":"<p>Let\u2019s remind ourselves of our goal. Look again at the made up table of counts:</p> <p></p> <p>We want to answer the question: which genes are DE, i.e. have significantly different levels of expression between groups? For example, does Gene 3 have higher expression in group B? It looks like it does (assuming there\u2019s no library size and composition difference), but there\u2019s also variation. Thus, we need to do some statistics! And for this we\u2019re going to need a statistical model for the data. Let \\(Y_{ij}\\) be the count for gene \\(i\\) in sample \\(j\\):</p> <p></p> <p>For various reasons (theoretical and empirical), it turns out that a good model for RNA-seq count data (on biological replicates) is the Negative Binomial (NB) distribution:</p> \\[ Y_{ij} \\sim \\text{Negative Binomial} \\] <p>You might have never even heard of this obscure distribution! Remarkably, however, it can shown that log transformed NB count data (or adjusted CPM data) follows, to good approximation, a simple Normal distribution:</p> \\[ \\log(Y_{ij}) \\sim \\text{Normal} \\] <p>With this in mind, we can distinguish the two main approaches to DE analysis:</p> <ol> <li>Analyse the counts directly<ul> <li>Popular methods are: <code>edgeR</code> and <code>DEseq2</code></li> <li>These use the NB distribution and generalised linear models (GLMs)</li> <li>Roughly speaking, these are applicable in all situations (in contrast to recommendations below)  </li> </ul> </li> <li>Analyse log transformed expression values (more precisely: log transformed adjusted CPM values)<ul> <li>The most popular method is <code>limma</code>, which comes in two flavours: <code>limma-trend</code> and <code>limma-voom</code></li> <li>These use the normal distribution and simple linear models (LMs).</li> <li>Recommendations</li> <li>Neither flavour is recommended when library sizes are very small (e.g. less than 1M) [or more generally: when the average counts per feature is small]</li> <li><code>limma-voom</code> in particular is recommended when library sizes are very different (e.g. some libraries have size 2M while others have size 20M).</li> </ul> </li> </ol> <p>Since the library sizes aren\u2019t too small in our example, we\u2019ll focus on the <code>limma</code> approach, and since the library sizes aren\u2019t too different, we\u2019ll focus initially on <code>limma-trend</code> and return to a discussion of <code>limma-voom</code> later. While methods that analyse counts directly are more generally applicable, they\u2019re more difficult to understand conceptually and to apply. Thankfully, however, the log transformation approach (<code>limma</code>) is applicable to most RNA-seq data sets.</p> <p>The first step in our analysis will be to create another container, called an <code>EList</code>, which will store our log transformed (adjusted) CPM values and gene annotation: <pre><code>y &lt;- new(\"EList\")\ny$E &lt;- cpm(dge, log=TRUE, prior.count=1/2)\ny$genes &lt;- dge$genes\n</code></pre></p>"},{"location":"tutorials/rna-seq-lcg/#linear-model-for-the-means","title":"Linear model (for the means)","text":"<p>Now that we\u2019ve decided on a model for the data, and corresponding methodology, we need to connect the data to the means for each experimental group. For this, we use a linear model. There\u2019s many ways to talk about and apply linear models\u2014we\u2019ll do it the simplest way possible.</p> <p>Take any gene, and let \\(y_1, y_2, \\ldots, y_{12}\\) be the 12 log expression observations for that gene. Now let \\(y_{1,RA}, y_{2,RA}, y_{3,RA}\\) be the three observations for the RA group specifically. We can write:</p> \\[ \\begin{align} y_{1,RA} &amp;= \\mu_{RA} + \\epsilon_1 \\\\ y_{2,RA} &amp;= \\mu_{RA} + \\epsilon_2 \\\\ y_{3,RA} &amp;= \\mu_{RA} + \\epsilon_3, \\end{align} \\] <p>where \\(\\mu_{RA}\\) is the RA group mean and the \\(\\epsilon\\)\u2019s are random errors (i.e. biological variation!). Note that all three observations share the group mean \\(\\mu_{RA}\\); they differ only because of the random errors. </p> <p>Similarly, we can do this for all 12 observations:</p> <p>$$ \\begin{align} y_{1,RA} &amp;= \\mu_{RA} + \\epsilon_1 \\newline y_{2,RA} &amp;= \\mu_{RA} + \\epsilon_2 \\newline y_{3,RA} &amp;= \\mu_{RA} + \\epsilon_3 \\newline y_{4,TGFb} &amp;= \\mu_{TGFb} + \\epsilon_4 \\newline y_{5,TGFb} &amp;= \\mu_{TGFb} + \\epsilon_5 \\newline y_{6,TGFb} &amp;= \\mu_{TGFb} + \\epsilon_6 \\newline y_{7,RA_TGFb} &amp;= \\mu_{RA_TGFb} + \\epsilon_7 \\newline y_{8,RA_TGFb} &amp;= \\mu_{RA_TGFb} + \\epsilon_8 \\newline y_{9,RA_TGFb} &amp;= \\mu_{RA_TGFb} + \\epsilon_9 \\newline y_{10,WT} &amp;= \\mu_{WT} + \\epsilon_{10} \\newline y_{11,WT} &amp;= \\mu_{WT} + \\epsilon_{11} \\newline y_{12,WT} &amp;= \\mu_{WT} + \\epsilon_{12}. \\end{align} $$ Now, using some simple high-school matrix-vector notation and algebra, we can write $$ \\begin{bmatrix} y_{1,RA} \\newline y_{2,RA} \\newline y_{3,RA} \\newline y_{4,TGFb} \\newline y_{5,TGFb} \\newline y_{6,TGFb} \\newline y_{7,RA_TGFb} \\newline y_{8,RA_TGFb} \\newline y_{9,RA_TGFb} \\newline y_{10,WT} \\newline y_{11,WT} \\newline y_{12,WT} \\end{bmatrix} \\quad = \\quad \\begin{bmatrix} \\mu_{RA} + \\epsilon_1 \\newline \\mu_{RA} + \\epsilon_2 \\newline \\mu_{RA} + \\epsilon_3 \\newline \\mu_{TGFb} + \\epsilon_4 \\newline \\mu_{TGFb} + \\epsilon_5 \\newline \\mu_{TGFb} + \\epsilon_6 \\newline \\mu_{RA_TGFb} + \\epsilon_7 \\newline \\mu_{RA_TGFb} + \\epsilon_8 \\newline \\mu_{RA_TGFb} + \\epsilon_9 \\newline \\mu_{WT} + \\epsilon_{10} \\newline \\mu_{WT} + \\epsilon_{11} \\newline \\mu_{WT} + \\epsilon_{12} \\end{bmatrix} \\quad =  \\quad \\begin{bmatrix}  1 &amp; 0 &amp; 0 &amp; 0 \\newline 1 &amp; 0 &amp; 0 &amp; 0 \\newline 1 &amp; 0 &amp; 0 &amp; 0 \\newline 0 &amp; 0 &amp; 1 &amp; 0 \\newline 0 &amp; 0 &amp; 1 &amp; 0 \\newline 0 &amp; 0 &amp; 1 &amp; 0 \\newline 0 &amp; 1 &amp; 0 &amp; 0 \\newline 0 &amp; 1 &amp; 0 &amp; 0 \\newline 0 &amp; 1 &amp; 0 &amp; 0 \\newline 0 &amp; 0 &amp; 0 &amp; 1 \\newline 0 &amp; 0 &amp; 0 &amp; 1 \\newline 0 &amp; 0 &amp; 0 &amp; 1 \\end{bmatrix} \\begin{bmatrix} \\mu_{RA} \\newline \\mu_{RA_TGFb} \\newline \\mu_{TGFb} \\newline \\mu_{WT} \\end{bmatrix} \\quad + \\quad \\begin{bmatrix} \\epsilon_1 \\newline \\epsilon_2 \\newline \\epsilon_3 \\newline \\epsilon_4 \\newline \\epsilon_5 \\newline \\epsilon_6 \\newline \\epsilon_7 \\newline \\epsilon_8 \\newline \\epsilon_9 \\newline \\epsilon_{10} \\newline \\epsilon_{11} \\newline \\epsilon_{12} \\end{bmatrix} $$ or, more compactly: \\(\\mathbf{y} = \\mathbf{X} \\boldsymbol\\beta + \\boldsymbol\\epsilon\\). This is the linear model for our data, and we\u2019ll use the following terminology:</p> <ul> <li>\\(\\mathbf{X}\\) is called the \u201cdesign\u201d matrix</li> <li>\\(\\boldsymbol\\beta\\) is called the vector of coefficients</li> </ul> <p>We\u2019ll fit this (one) model to every gene, which amounts to estimating the coefficient vector \\(\\boldsymbol\\beta\\) for each gene, i.e. the group means for every gene!</p> <p>While the terminology above is important to know, don\u2019t worry if you didn\u2019t follow all the details of the discussion. The details are there partly for completeness, but mostly to help demystify design matrices: they\u2019re just something that connects your data (observed expression values) to the things of interest, in our case the means of the groups. The design matrix is easy to make using our <code>group</code> factor vector: <pre><code>X &lt;- model.matrix(~0 + group) # note the \"0\": VERY important!\ncolnames(X) &lt;- levels(group)\nX\n</code></pre> Observe, of course, that this is the same as the design matrix above. Fitting the linear model is easy too: <pre><code>fit &lt;- lmFit(y, design=X)\nnames(fit)\nhead(fit$coefficients)\n</code></pre> We\u2019ve arrived at the group means for each gene, but this isn\u2019t what we\u2019re really after: what we really want are differences between the group means\u2014remember: we\u2019re looking for DE genes\u2014or, more precisely, we want differences between the group means for contrasts (i.e. comparisons) of interest. To do this, we construct the contrasts of interest and then fit them. For example, suppose we\u2019re interested in two comparisons: (1) RA vs WT (i.e. the effect of RA), and (2) TGFb vs WT (i.e. the effect of TGFb). The corresponding contrast (matrix) is constructed as follows: <pre><code>CM &lt;- makeContrasts(\n  RA_WT   = RA - WT,\n  TGFb_WT = TGFb - WT,\n  levels=X)\nCM\n</code></pre> Now, to calculate these contrasts, i.e. to fit them, we do the following: <pre><code>fit2 &lt;- contrasts.fit(fit, contrasts=CM)\nhead(fit2$coefficients)\n</code></pre> This has transformed the initial coefficients (i.e. groups means) into the contrasts of interest: the difference in means between the RA and WT groups (column 1) and the difference in means between the TGFb and WT groups (column 2).</p>"},{"location":"tutorials/rna-seq-lcg/#testing-for-de","title":"Testing for DE","text":"<p>Now that we have our differences in group means for each gene, we want to ask if any of these differences are significantly different from zero (over and above what you might see by random chance). In other words, for each gene we want to statistically test if the means of the two groups are different\u2014more simply: we want to test for DE! To do this, we\u2019ll use the so-called t-test (applied to each gene), whose test statistic looks like this:</p> \\[ T = \\frac{\\bar{y}_{_{A}} - \\bar{y}_{_{B}}}{ \\sqrt{v}} \\] <p>where \\(\\bar{y}_{_{A}}\\) and \\(\\bar{y}_{_{B}}\\) are the means of the two groups being compared, and \\(v\\) is an estimate of the variance. To test the null hypothesis (that the means are the same), we use the \\(t\\)-distribution to calculate probabilities about this test statistic (if the chances of seeing certain values of \\(T\\) are small, this is evidence against the null hypothesis that the group means are the same).</p> <p>At this point you must be thinking: \u201cwhy did we do all that linear models stuff if, in the end, we\u2019re just going to use a t-test?\u201d There are at least two reasons. Briefly:</p> <ol> <li>By using a linear model we\u2019ve actually used all the samples to estimate the variability \\(v\\) here (a standard t-test would only estimate it from the two groups being compared) and so the estimate is better.</li> <li>Linear models are much more powerful than our simple situation suggests: they can be used to easily adjust for things which aren\u2019t of interest but affect the things of interest, e.g. you can make comparisons while adjusting for biological things (e.g. sex) or while adjusting for technical things (e.g. batch), or while adjusting for both!</li> </ol> <p>Hopefully this convinces you that linear models are your friend, but now you must be thinking a different question: \u201cwait a second\u2026we\u2019re going to do t-tests with as little as 2 or 3 observations in each group?\u2026that\u2019s crazy!\u201d Yes, that does seem crazy\u2014there\u2019s barely any information in each group to make a reliable inference about whether the means are different. But this is where the real magic of RNA-seq analysis comes in, the thing that makes it all work: empirical Bayes statistics. The full details are beyond the scope of our discussion, but the rough idea is this: we use a procedure whereby the genes are allowed to share information with each other\u2014this sharing of information between genes makes up for the fact that there isn\u2019t much information within any single gene. This procedure is applied to the gene variances\u2014the \\(v\\)\u2019s above\u2014which moderates them, making them better estimates, and thus increasing our power to detect DE (other terms for this \u2018moderation\u2019 procedure include \u2018shrinkage\u2019 or \u2018regularization\u2019, terms which you may see in your travels\u2014this powerful technique is used in many places in statistical omics analysis). So, the statistic used to test for DE is actually:</p> \\[ \\widetilde{T} = \\frac{\\bar{y}_{_{A}} - \\bar{y}_{_{B}}}{ \\sqrt{ \\widetilde{v} }} \\] <p>where \\(\\widetilde{v}\\) is the moderated variance; accordingly, \\(\\widetilde{T}\\) is called the \u201cmoderated t-statistic\u201d.</p> <p>That said, testing for DE with the moderated t-statistic is actually easy: <pre><code>fit2 &lt;- eBayes(fit2, trend=TRUE) # \"eBayes\" means empirical Bayes\nnames(fit2) # note the addition of \"t\" (and other empirical Bayes things, which needn't concern us)\n</code></pre> NOTE. We\u2019ve specified the function option <code>trend=TRUE</code> (this isn\u2019t default). This is because one characteristic of RNA-seq data is that there is a downward trend in variability as a function of the level of expression\u2014genes with lower levels of expression are more variable than genes with higher levels of expression (see next section). The empirical Bayes procedure takes this trend into account.</p> <p>There\u2019s a fair amount of differential expression\u2014here\u2019s the number of DE genes for each comparison: <pre><code>dt &lt;- decideTests(fit2)\nsummary(dt)\n</code></pre></p>"},{"location":"tutorials/rna-seq-lcg/#some-checks","title":"Some checks","text":"<p>Before we look at the DE results more closely, there\u2019s some things we need to check:</p> <ol> <li>SA plot. This is a plot of variability (estimated by the linear model) as a function of expression level. It typically has a characteristic shape: it (monotonically) trends downward.</li> <li>MD plot (for each comparison). This is simply a plot of log-fold-change (y-axis) and expression level (x-axis) for all genes. The meaning of \u2018log-fold-change\u2019 will be discussed below. For now, we note that these plots should look as follows: (1) the \u2018cloud\u2019 of data is skewered through the middle, (2) the red/blue dots are on top/bottom, respectively, and in roughly the same proportions (unless you have a reason to think otherwise), and (3) there\u2019s a characteristic funnel shape, thicker to thinner as expression level increases. </li> <li>p-value histogram (for each comparison). This is simply a histogram of all the DE hypothesis test p-values (one p-value for each gene). It should look like this: flat, with a possible spike on the far left. The intuitive idea here is simple: a large majority of genes aren\u2019t DE, i.e. the null hypothesis is true for then, and so testing them for DE should just produce p-values that are random noise between 0-1, and thus a the histogram of these p-values should be flat; the possible spike to the far left are p-values from genes which are truly DE.</li> </ol> <p>These are made as follows: <pre><code>plotSA(fit2)\n</code></pre> <pre><code>par(mfcol=c(1,2))\nplotMD(fit2, coef=\"RA_WT\", status=dt[,\"RA_WT\"], cex=0.6, main=\"MD-plot: RA vs WT\")\nabline(h=0, lwd=2, col=\"green2\")\nplotMD(fit2, coef=\"TGFb_WT\", status=dt[,\"TGFb_WT\"], cex=0.6, main=\"MD-plot: TGFb vs WT\")\nabline(h=0, lwd=2, col=\"green2\")\n</code></pre> <pre><code>par(mfcol=c(1,2))\nhist(fit2$p.value[,\"RA_WT\"], col=\"grey\", xlab=\"p-value\", main=\"p-value histogram: RA vs WT\")\nhist(fit2$p.value[,\"TGFb_WT\"], col=\"grey\", xlab=\"p-value\", main=\"p-value histogram: TGFb vs WT\")\n</code></pre></p> <p>These visualisations look as they should in this case. However, if you produce plots that don\u2019t look reasonably close to these, then something isn\u2019t right. Depending on how bad they look, the results will likely contain missed and/or false discoveries\u2014they\u2019ll be rubbish. The p-value histograms are particularly important. Consider two real examples from different data sets below:</p> <p></p> <p>The plot on the right is ideal, i.e. flat with possible spike to the left. The plot on the left is far from ideal. If you produce a plot that looks like this, your results are likely rubbish!</p>"},{"location":"tutorials/rna-seq-lcg/#results","title":"Results","text":"<p>With these checks done, we\u2019re now ready to look at the results. Here\u2019s results for the top genes from each comparison: <pre><code>tab1 &lt;- topTable(fit2, coef=\"RA_WT\", n=Inf)\ntab2 &lt;- topTable(fit2, coef=\"TGFb_WT\", n=Inf)\n\n# RA vs WT\nhead(tab1)\n\n# TGFb vs WT\nhead(tab2)\n</code></pre> Let\u2019s interpret these results (note: we\u2019ll ignore the \u201cB\u201d column):</p> <ol> <li>Symbol. These are simply gene symbols.</li> <li>AveExpr. The average level of expression for that gene (taken across all samples).</li> <li>logFC, i.e. log-fold-change. This is important, but sometimes misunderstood. Here it means the difference between the group means, or more specifically: for the first table logFC = RA group mean - WT group mean; for the second table logFC = TGFb group mean - WT group mean. The reason for the \u201clog\u201d bit in \u201clog-fold-change\u201d is because the means are calculated on a log-scale; the reason for the \u201cfold-change\u201d bit in \u201clog-fold-change\u201d is because a difference of logs is the log of the ratio.</li> <li>t. The moderated t-statistic.</li> <li>P.Value. The p-value for the hypothesis test of DE obtained using the moderated t-statistic (NOTE: this is typically ignored\u2013see below).</li> <li>adj.P.Val. The p-value adjusted for \u2018multiple testing\u2019 (typically using the Benjamini-Hochberg method). Usually a gene is inferred/judged to be DE only if adj.P.Val &lt; 0.05.</li> </ol> <p>The distinction between (5) and (6) is particularly important, so let\u2019s say more. Firstly, in our context, we\u2019re doing ~10,000 hypothesis tests, and so the idea of a p-value isn\u2019t particularly useful. To appreciate this, consider the following xkcd comic:</p> <p></p> <p>Recall that the p-value is the probability of seeing certain values of our test statistic, assuming the null hypothesis is true, and that we reject the null assumption if the calculated probability is small, say, below 0.05. But, this implies the following: if we were testing 10,000 genes, and the null hypothesis was true for every gene (i.e. there was no DE in the data set), then we\u2019d still reject the null (i.e. infer DE) for ~500 genes\u2014that\u2019s 500 false discoveries! The solution to this problem is to focus on a different idea: the false discovery rate (FDR). This is the proportion of false discoveries of DE amongst all the genes you\u2019ve declared to be DE. This is what the adjusted p-value (adj.P.Val) represents, i.e. if you choose a DE cutoff of adj.P.Val &lt; 0.05 then only 5% of the genes declared DE with this cutoff will be false discoveries.</p> <p>At this point, one extra way of checking your results is to look at any known control genes relevant to the experiment: positive or negative controls, i.e. genes which should or shouldn\u2019t be DE between conditions, respectively. For example, a positive control for this experiment is Hic1 because RA is known to up-regulate this gene\u2014it should be DE in the RA vs WT comparison, and indeed it is: <pre><code>i &lt;- tab1$Symbol==\"Hic1\"\ntab1[i,]\n</code></pre> If it turned out this gene wasn\u2019t DE, this would cast some doubt over the validity of the analysis.</p> <p>Finally, let\u2019s save our results in an Excel spreadsheet!: <pre><code>write.xlsx(tab1, file=\"../Results/DE_RA-vs-WT.xlsx\")\nwrite.xlsx(tab2, file=\"../Results/DE_TGFb-vs-WT.xlsx\")\n</code></pre></p>"},{"location":"tutorials/rna-seq-lcg/#two-limma-approaches-trend-vs-voom","title":"Two limma approaches: \u201ctrend\u201d vs \u201cvoom\u201d","text":"<p>Recall that there\u2019s two flavours of <code>limma</code>: <code>trend</code> and <code>voom</code>. We\u2019ve been using the <code>trend</code> approach, but now we\u2019ll briefly turn to the <code>voom</code> approach. Both approaches are essentially the same, except for one key difference: <code>voom</code> first estimates \u201cprecision weights\u201d (the details are beyond our scope) and incorporates them into the linear modelling step.</p> <p>Given you now know the <code>trend</code> approach, the <code>voom</code> approach is easy to summarise. We do all the same steps above, right up until before we create an <code>EList</code>, at which point we proceed as follows: <pre><code># prepare a voom EList, containing \"precision weights\" from our DGEList and the same design X above\nv &lt;- voom(dge, design=X, plot=FALSE)\n\n# fit linear model (to get group means); \"precision weights\" will be incorporated\nfit.voom &lt;- lmFit(v, design=X)\n\n# fit contrasts using the same contrast matrix CM (for the relevant comparisons)\nfit2.voom &lt;- contrasts.fit(fit.voom, contrasts=CM)\n\n# test for DE using empirical Bayes moderated t-statistics\nfit2.voom &lt;- eBayes(fit2.voom, trend=FALSE) # NOTE: trend=FALSE (see comments below)\n\n# DE summary and results\ndt &lt;- decideTests(fit2.voom)\nsummary(dt)\n\n# top DE genes\ntopTable(fit2.voom, coef=\"RA_WT\")\ntopTable(fit2.voom, coef=\"TGFb_WT\")\n</code></pre> The results have the same interpretations as before, and we can also do the same checks as before (i.e. MD plots, p-value histograms, control genes) except that instead of checking an SA plot, we check the voom \u2018mean-variance\u2019 trend plot produced automatically when <code>plot=TRUE</code> is specified in the voom function.</p> <p>Two important comments:</p> <ol> <li>We specified <code>trend=FALSE</code> in the <code>eBayes</code> DE testing step. This is because the voom \u201cprecision weights\u201d actually remove the trend in variability noted earlier, and so this step doesn\u2019t need to use the \u2018trend\u2019 anymore.</li> <li><code>voom</code> is recommended when the library sizes are very different (e.g. some libraries have size 2M while others have size 20M) because the \u201cprecision weights\u201d are able to take these differences in library sizes into account.</li> </ol> <p>The library sizes aren\u2019t very different in our example and so both <code>limma</code> approaches give essentially the same DE genes, as can be seen here: <pre><code># DE results\ndt.trend &lt;- decideTests(fit2)\ndt.voom &lt;- decideTests(fit2.voom)\n\n# venn diagram comparisons\ndf1 &lt;- cbind(dt.trend[,\"RA_WT\"], dt.voom[,\"RA_WT\"])\ndf2 &lt;- cbind(dt.trend[,\"TGFb_WT\"], dt.voom[,\"TGFb_WT\"])\n\npar(mfcol=c(1,2))\n\nvennDiagram(df1,\n            main=\"RA vs WT\",\n            names=c(\"trend\",\"voom\"),\n            include=c(\"up\",\"down\"), \n            counts.col=c(\"red3\",\"blue3\"), \n            circle.col=c(\"purple\",\"turquoise\"))\n\nvennDiagram(df2,\n            main=\"TGFb vs WT\",\n            names=c(\"trend\",\"voom\"),\n            include=c(\"up\",\"down\"), \n            counts.col=c(\"red3\",\"blue3\"), \n            circle.col=c(\"purple\",\"turquoise\"))\n</code></pre></p>"},{"location":"tutorials/rna-seq-lcg/#summary-and-exercise","title":"Summary and exercise","text":"<p>Let\u2019s summarise by putting the key analysis code together with comments (for the RA vs WT comparison). Here\u2019s the preliminaries etc.: <pre><code># organise data into a DGEList\ntab &lt;- read.table(\"../Data/GSE232852_CountsTable.txt\", header=TRUE)\n\nannotation &lt;- tab[,c(1,2)]\ncounts &lt;- tab[,-c(1,2)]\n\ndge &lt;- DGEList(counts=counts, genes=annotation)\n\n# sample info and group vector\nsamples &lt;- colnames(tab)[-c(1,2)]\ngroup &lt;- c(rep(\"RA\",3), rep(\"TGFb\",3), rep(\"RA_TGFb\",3), rep(\"WT\",3))\ninfo &lt;- data.frame(samples, group)\n\ngroup &lt;- factor(info$group)\n\n# filter for low expression\ni &lt;- filterByExpr(dge, group=group)\ndge &lt;- dge[i,,keep.lib.size=FALSE]\n\n# check library sizes\nlib.size.millons &lt;- colSums(dge$counts) / 1e6\nbarplot(lib.size.millons, las=2, cex.names=0.8, main=\"Library size (millons)\")\nabline(h=20, lwd=2, col=\"red2\")\n\n# visualisation: raw data\ny &lt;- log2(dge$counts + 1/2)\n\npca &lt;- prcomp(t(y), center=TRUE) \nautoplot(pca, data.frame(group=group), col='group', size=4) + \n  theme_classic() +\n  ggtitle(\"PCA plot\")\n\ncols.group &lt;- group\nlevels(cols.group) &lt;- hue_pal()(4)\nboxplot(y, col=as.character(cols.group), outline=FALSE, las=2, cex.axis=0.7, main=\"Boxplots\")\nRLE &lt;- y - rowMedians(y)\nboxplot(RLE, col=as.character(cols.group), outline=FALSE, las=2, cex.axis=0.7, main=\"RLE plot\")\nabline(h=0, col=\"grey20\", lwd=3, lty=1)\n\n# normalise for library size and composition\ndge &lt;- calcNormFactors(dge, method=\"TMM\")\ny &lt;- cpm(dge, log=TRUE)\n\n# visualisation: normalised data\npca &lt;- prcomp(t(y), center=TRUE)\nautoplot(pca, data.frame(group=group), col='group', size=4) + \n  theme_classic() +\n  ggtitle(\"PCA plot\")\n\ncols.group &lt;- group\nlevels(cols.group) &lt;- hue_pal()(4)\nboxplot(y, col=as.character(cols.group), outline=FALSE, las=2, cex.axis=0.5, main=\"Boxplots\")\nRLE &lt;- y - rowMedians(y)\nboxplot(RLE, col=as.character(cols.group), outline=FALSE, las=2, cex.axis=0.5, main=\"RLE plot\")\nabline(h=0, col=\"grey20\", lwd=3, lty=1)\n</code></pre> If the library sizes aren\u2019t too different, we proceed with <code>limma-trend</code>: <pre><code># organise EList\ny &lt;- new(\"EList\")\ny$E &lt;- cpm(dge, log=TRUE)\ny$genes &lt;- dge$genes\n\n# design matrix\nX &lt;- model.matrix(~0 + group)\ncolnames(X) &lt;- levels(group)\n\n# fit linear model (to get group means)\nfit &lt;- lmFit(y, design=X)\n\n# make contrasts\nCM &lt;- makeContrasts(\n  RA_WT   = RA - WT,\n  TGFb_WT = TGFb - WT,\n  levels=X)\n\n# fit contrasts\nfit2 &lt;- contrasts.fit(fit, contrasts=CM)\n\n# test for DE\nfit2 &lt;- eBayes(fit2, trend=TRUE)\n\n# some checks\ndt &lt;- decideTests(fit2)\nplotSA(fit2) # SA plot\nplotMD(fit2, coef=\"RA_WT\", status=dt[,\"RA_WT\"], cex=0.6, main=\"MD-plot: RA vs WT\") # MD plot\nabline(h=0, lwd=2, col=\"green2\")\nhist(fit2$p.value[,\"RA_WT\"], col=\"grey\", xlab=\"p-value\", main=\"p-value histogram: RA vs WT\") # p-value hist\n\n# DE results\ntab &lt;- topTable(fit2, coef=\"RA_WT\", n=Inf)\nwrite.xlsx(tab, file=\"../Results/DE_limma-trend_RA-vs-WT.xlsx\")\n</code></pre> If the library sizes are very different, proceed with <code>limma-voom</code>: <pre><code># organise voom EList\nv &lt;- voom(dge, design=X, plot=TRUE) # same X as above\n\n# fit linear model (to get group means)\nfit.voom &lt;- lmFit(v, design=X)\n\n# fit contrasts\nfit2.voom &lt;- contrasts.fit(fit.voom, contrasts=CM) # same CM as above\n\n# test for DE\nfit2.voom &lt;- eBayes(fit2.voom, trend=FALSE) # NOTE: trend=FALSE\n\n# some checks\ndt &lt;- decideTests(fit2.voom)\nplotMD(fit2.voom, coef=\"RA_WT\", status=dt[,\"RA_WT\"], cex=0.6, main=\"MD-plot: RA vs WT\") # MD plot\nabline(h=0, lwd=2, col=\"green2\")\nhist(fit2$p.value[,\"RA_WT\"], col=\"grey\", xlab=\"p-value\", main=\"p-value histogram: RA vs WT\") # p-value hist\n\n# DE results\ntab &lt;- topTable(fit2.voom, coef=\"RA_WT\", n=Inf)\nwrite.xlsx(tab, file=\"../Results/DE_limma-voom_RA-vs-WT.xlsx\")\n</code></pre></p> <p>To reinforce what you\u2019ve learnt, try your hand at finding DE results for the RA+TGFb vs WT comparison using both limma approaches.</p> <p>Solution: <pre><code># new contrast matrix\nCM2 &lt;- makeContrasts(\n  RA_WT      = RA - WT,\n  TGFb_WT    = TGFb - WT,\n  RA.TGFb_WT = RA_TGFb - WT, # new comparison\n  levels=X)\n\n# limma-trend\nfit2 &lt;- contrasts.fit(fit, contrasts=CM2)\nfit2 &lt;- eBayes(fit2, trend=TRUE)\n\ndt &lt;- decideTests(fit2)\nsummary(dt)\n\ntab &lt;- topTable(fit2, coef=\"RA.TGFb_WT\", n=Inf)\nwrite.xlsx(tab, file=\"../Results/DE_limma-trend_RA.TGFb_WT.xlsx\")\n\n# limma-voom\nfit2.voom &lt;- contrasts.fit(fit.voom, contrasts=CM2)\nfit2.voom &lt;- eBayes(fit2.voom, trend=FALSE)\n\ndt &lt;- decideTests(fit2.voom)\nsummary(dt)\n\ntab &lt;- topTable(fit2.voom, coef=\"RA.TGFb_WT\", n=Inf)\nwrite.xlsx(tab, file=\"../Results/DE_limma-voom_RA.TGFb_WT.xlsx\")\n</code></pre></p>"},{"location":"tutorials/rna-seq-lcg/#visualisation-of-results","title":"Visualisation of results","text":"<p>There are several common ways to visualise DE results, e.g. volcano plots, MD plots (already used for checking above but made nicer here), and heatmaps. Let\u2019s produce basic examples of each, for the RA vs WT comparison. <pre><code># organize data frame for volcano and MD plots\ntab &lt;- topTable(fit2, coef=\"RA_WT\", n=Inf)\nlogFC &lt;- tab$logFC\np.value &lt;- tab$P.Value\nA &lt;- tab$AveExpr\nGene &lt;- tab$Symbol\n\nStatus &lt;- rep(\"Not DE\", nrow(tab))\nStatus[tab$logFC&gt;0 &amp; tab$adj.P.Val&lt;0.05] &lt;- \"Up\"\nStatus[tab$logFC&lt;0 &amp; tab$adj.P.Val&lt;0.05] &lt;- \"Down\" # table(Status)\n\ndf &lt;- data.frame(logFC, p.value, A, Gene, Status)\n\n# prepare some annotation\ngenes &lt;- c(\"Hic1\",\"Itgae\",\"Zfp683\")\ni &lt;- match(genes, df$Gene)\nHL &lt;- df[i,]\n\n# basic volcano plot\nggplot(data=df, aes(x=logFC, y=-log10(p.value))) +\n  geom_point(shape=16, aes(color=Status)) +\n  scale_color_manual(values=c(\"blue3\",\"grey70\",\"red3\")) +\n  geom_label_repel(data=HL, aes(label=Gene), box.padding=2) +\n  labs(title=\"Volcano: RA vs WT\", x=\"log2(fold-change)\", y=\"-log10(p-value)\")\n\n# basic MD plot\nggplot(data=df, aes(x=A, y=logFC)) +\n  geom_point(shape=16, aes(color=Status)) +\n  scale_color_manual(values=c(\"blue3\",\"grey70\",\"red3\")) +\n  geom_hline(yintercept=0, linetype=2, colour=\"black\") +\n  geom_label_repel(data=HL, aes(label=Gene), box.padding=2) +\n  labs(title=\"Volcano: RA vs WT\", x=\"Average log-expression\", y=\"log2(fold-change)\")\n</code></pre> <pre><code># organize data frame for heatmap\ntop.genes &lt;- tab[1:50,]$Symbol\ndf &lt;- y$E\nrownames(df) &lt;- y$genes$Symbol\ndf &lt;- df[top.genes,]\n\n# basic heatmap\npheatmap(\n  df,\n  border_color=NA, \n  scale=\"row\", \n  cluster_rows=TRUE,\n  cluster_cols=FALSE,\n  treeheight_row=0,\n  main=\"Top 50 DE genes: RA vs WT\",\n  fontsize_row=6)\n</code></pre></p>"},{"location":"tutorials/rna-seq-lcg/#getting-data","title":"Getting data","text":"<p>Now that you have some basic analysis skills, you\u2019ll want to get your hands on some data, e.g. publicly available RNA-seq counts tables. As we\u2019ve seen, one place to get data is Gene Expression Omnibus (GEO). But, GEO can be hit-and-miss: sometimes counts tables are available as supplementary files (as we saw), but sometimes they\u2019re not. Although, sometimes there are other ways of getting counts tables on GEO. It\u2019s really a bit of a mess\u2014you just need to get on there and try your luck. </p> <p>Thankfully, there are alternatives. For example, for human and mouse data, GREIN is a real gem: its search interface is clear and simple to use and the counts data and sample information is uniformly pre-packaged and ready for easy download. Check it out. </p> <p>And have fun!</p>"},{"location":"tutorials/rna_seq_dge_advanced/","title":"Index","text":"<p>PR reviewers and advice: Jessica Chung</p> <p>Current slides: TBD</p> <p>Other slides:</p> <ul> <li>None yet</li> </ul>"},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/","title":"RNAseq differential expression tool comparision (Galaxy)","text":""},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/#rna-seq-differential-gene-expression-advanced-tutorial","title":"RNA-Seq Differential Gene Expression: Advanced Tutorial","text":"<p>Authors: Mahtab Mirmomeni, Andrew Lonie, Jessica Chung</p>"},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/#tutorial-overview","title":"Tutorial Overview","text":"<p>In this tutorial we compare the performance of three statistically-based expression analysis tools:  </p> <ul> <li>CuffDiff</li> <li>EdgeR</li> <li>DESeq2</li> </ul> <p>This tutorial builds on top of the basic RNA-seq DGE tutorial. It is recommended to have some familiarity of RNA-seq before beginning this tutorial.</p>"},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/#background-15-min","title":"Background [15 min]","text":""},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/#where-does-the-data-in-this-tutorial-come-from","title":"Where does the data in this tutorial come from?","text":"<p>The data for this tutorial is from the paper, A comprehensive comparison of RNA-Seq-based transcriptome analysis from reads to differential gene expression and cross-comparison with microarrays: a case study in Saccharomyces cerevisiae by Nookaew et al. [1] which studies S.cerevisiae strain CEN.PK 113-7D (yeast) under two different metabolic conditions: glucose-excess (batch) or glucose-limited (chemostat).</p> <p>The RNA-Seq data has been uploaded in NCBI, short read archive (SRA), with accession SRS307298. There are 6 samples in total\u2013 two treatments with three biological replicates each. The data is paired-end.  </p> <p>We have extracted chromosome I reads from the samples to make the tutorial a suitable length. This has implications, as discussed in section 8.</p>"},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/#section-1-preparation-15-min","title":"Section 1: Preparation [15 min]","text":""},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/#1-register-as-a-new-user-in-galaxy-if-you-dont-already-have-an-account","title":"1.  Register as a new user in Galaxy if you don\u2019t already have an account","text":"<ul> <li>Open a browser and go to a Galaxy server. For example, you could use Galaxy Australia. Recommended browsers include Firefox and Chrome. Internet Explorer is not supported.</li> <li>Register as a new user by clicking User &gt; Register on the top dark-grey bar. Alternatively, if you already have an account, login by clicking User &gt; Login.</li> </ul>"},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/#2-import-the-rna-seq-data-for-the-workshop","title":"2.  Import the RNA-seq data for the workshop.","text":"<p>If you are using Galaxy Australia, go to Shared Data &gt; Data Libraries in the top toolbar, and select Galaxy Australia Training Material: RNA-Seq: Yeast RNA-Seq. Select (tick) all of the files and click To History, and choose as Datasets, then Import.</p> <p>Alternatively, if you are using your own personal Galaxy server or a different Galaxy server, you can import the data like this:</p> <ol> <li>In the tool panel located on the left, under Basic Tools select Get     Data &gt; Upload File. Click on the Paste/Fetch data button on the     bottom section of the pop-up window.</li> <li>Upload the sequence data by pasting the following links into the text     input area.     These six files are three paired-end samples from the batch condition     (glucose-excess). Make sure the type is specified as \u2018fastqsanger\u2019     when uploading.      https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/batch1_chrI_1.fastq https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/batch1_chrI_2.fastq https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/batch2_chrI_1.fastq https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/batch2_chrI_2.fastq https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/batch3_chrI_1.fastq https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/batch3_chrI_2.fastq      These six files are three paired-end samples from the chem condition     (glucose-limited). Make sure the type is specified as \u2018fastqsanger\u2019     when uploading.      https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/chem1_chrI_1.fastq https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/chem1_chrI_2.fastq https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/chem2_chrI_1.fastq https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/chem2_chrI_2.fastq https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/chem3_chrI_1.fastq https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/chem3_chrI_2.fastq      Then, upload this file of gene definitions. You don\u2019t need to specify     the type for this file as Galaxy will auto-detect the file as a GTF     file.      https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/genes.gtf </li> <li> <p>You should now have these 13 files in your history:</p> <ul> <li>batch1_chrI_1.fastq</li> <li>batch1_chrI_2.fastq</li> <li>batch2_chrI_1.fastq</li> <li>batch2_chrI_2.fastq</li> <li>batch3_chrI_1.fastq</li> <li>batch3_chrI_2.fastq</li> <li>chem1_chrI_1.fastq</li> <li>chem1_chrI_2.fastq</li> <li>chem2_chrI_1.fastq</li> <li>chem2_chrI_2.fastq</li> <li>chem3_chrI_1.fastq</li> <li>chem3_chrI_2.fastq</li> <li>genes.gtf</li> </ul> <p>These files can be renamed by clicking the pen icon if you wish.</p> <p>Note: The reads are paired end; for example batch1_chrI_1.fastq and batch1_chrI_2.fastq are paired reads from one sequencing run. Low quality reads have already been trimmed.</p> </li> </ol>"},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/#convert-the-gtf-to-a-gff-file","title":"Convert the GTF to a GFF file","text":"<p>This is needed for downstream analysis.</p> <p>In the tools panel, search for \u201cGTF\u201d and click on \u201cGTF-to-GFF converter\u201d.</p> <p>Select the GTF file and click \u201cExecute\u201d.</p>"},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/#section-2-alignment-30-mins","title":"Section 2: Alignment [30 mins]","text":"<p>In this section we map the reads in our FASTQ files to a reference genome. As these reads originate from mRNA, we expect some of them will cross exon/intron boundaries when we align them to the reference genome. Tophat is a splice-aware mapper for RNA-seq reads that is based on Bowtie. It uses the mapping results from Bowtie to identify splice junctions between exons. More information on Tophat can be found here.</p>"},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/#1-mapalign-the-reads-with-tophat-to-the-s-cerevisiae-reference","title":"1.  Map/align the reads with Tophat to the S. cerevisiae reference","text":"<p>In the left tool panel menu, under NGS Analysis, select NGS: RNA Analysis &gt; Tophat and set the parameters as follows:  </p> <ul> <li>Is this single-end or paired-end data? Paired-end (as individual datasets)  </li> <li> <p>RNA-Seq FASTQ file, forward reads: (Click on the multiple datasets icon and select all six of the forward FASTQ files ending in *1.fastq. This should be correspond to every second file (1,3,5,7,9,11). This can be done by holding down the ctrl key (Windows) or the command key (OSX) to select multiple files.)</p> <ul> <li>batch1_chrI_1.fastq</li> <li>batch2_chrI_1.fastq</li> <li>batch3_chrI_1.fastq</li> <li>chem1_chrI_1.fastq</li> <li>chem2_chrI_1.fastq</li> <li>chem3_chrI_1.fastq</li> </ul> </li> <li> <p>RNA-Seq FASTQ file, reverse reads: (Click on the multiple datasets icon and select all six of the reverse FASTQ files ending in *2.fastq.)  </p> <ul> <li>batch1_chrI_2.fastq</li> <li>batch2_chrI_2.fastq</li> <li>batch3_chrI_2.fastq</li> <li>chem1_chrI_2.fastq</li> <li>chem2_chrI_2.fastq</li> <li>chem3_chrI_2.fastq</li> </ul> </li> <li>Use a built in reference genome or own from your history: Use built-in genome</li> <li>Select a reference genome: S. cerevisiae June 2008 (SGD/SacCer2) (sacCer2)</li> <li>Use defaults for the other fields</li> <li>Execute</li> </ul> <p></p> <p>Note: This may take a few minutes, depending on how busy the server is.</p>"},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/#2-rename-the-output-files","title":"2.  Rename the output files","text":"<p>You should have 5 output files for each of the FASTQ input files:</p> <ul> <li>Tophat on data 2 and data 1: accepted_hits: This is a BAM file containing   sequence alignment data of the reads. This file contains the location   of where the reads mapped to in the reference genome. We will examine   this file more closely in the next step.</li> <li>Tophat on data 2 and data 1: splice junctions: This file lists all the places   where TopHat had to split a read into two pieces to span an exon   junction.</li> <li>Tophat on data 2 and data 1 deletions and Tophat on data 2 and data 1: insertions:   These files list small insertions or deletions found in the reads.   Since we are working with synthetic reads we can ignore Tophat for   Illumina data 1:insertions Tophat for Illumina data 1:deletions for now.</li> <li>Tophat on data 2 and data 1: align_summary: This file gives some mapping   statistics including the number of reads mapped and the mapping rate.</li> </ul> <p>You should have a total of 30 Tophat output files in your history.</p> <p>Rename the 6 accepted_hits files into a more meaningful name (e.g. \u2018Tophat on data 2 and data 1: accepted_hits\u2019 to \u2018batch1-accepted_hits.bam\u2019) by using the pen icon next to the file.</p>"},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/#3-visualise-the-aligned-reads-with-jbrowse","title":"3.  Visualise the aligned reads with JBrowse","text":"<p>In the tool panel search bar, search for \u201cJBrowse\u201d and click on it.</p> <ul> <li>For \u201cReference genome to display\u201d: Use a built-in genome</li> <li>\u201cSelect a reference genome\u201d: Yeast: sacCer2</li> <li>\u201cGenetic Code\u201d: 1. The Standard Code</li> </ul> <p>Set up a track for the mapped reads:</p> <ul> <li>Insert Track Group</li> <li>Insert Annotation Track</li> <li>Track Type: Bam Pileups</li> <li>Select two bam files, one from each condition, e.g. batch1_acceptedhits.bam and chem1_acceptedhits.bam</li> </ul> <p>Set up a track for the annotations:</p> <ul> <li>Insert Track Group</li> <li>Insert Annotation Track</li> <li> <p>Select the GFF file (that we converted from the GTF file earlier on)</p> </li> <li> <p>Execute</p> </li> </ul> <p>When the file is ready, click the eye icon.</p> <ul> <li>Select chr1 in the drop down box.</li> <li>Tick all the track names in the left hand side.</li> <li>Zoom in and out with the plus and minus buttons.</li> <li>Go to position 87500 to see a splice junction.</li> </ul> <p></p>"},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/#section-3-cuffdiff-40-min","title":"Section 3. Cuffdiff [40 min]","text":"<p>The aim in this section is to statistically test for differential expression using Cuffdiff and obtain a list of significant genes.</p>"},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/#1-run-cuffdiff-to-identify-differentially-expressed-genes-and-transcripts","title":"1.  Run Cuffdiff to identify differentially expressed genes and transcripts","text":"<p>In the left tool panel menu, under NGS Analysis, select NGS: RNA Analysis &gt; Cuffdiff and set the parameters as follows:</p> <ul> <li>Transcripts: genes.gtf</li> <li>Condition: <ul> <li>1: Condition<ul> <li>name batch</li> <li>Replicates:<ul> <li>batch1-accepted_hits.bam</li> <li>batch2-accepted_hits.bam</li> <li>batch3-accepted_hits.bam (Multiple datasets can be selected by holding down the shift key or the ctrl key (Windows) or the command key (OSX).)</li> </ul> </li> </ul> </li> <li>2: Condition<ul> <li>name chem</li> <li>Replicates:<ul> <li>chem1-accepted_hits.bam</li> <li>chem2-accepted_hits.bam</li> <li>chem3-accepted_hits.bam  </li> </ul> </li> </ul> </li> </ul> </li> <li>Use defaults for the other fields</li> <li>Execute</li> </ul> <p></p> <p>Note: This step may take a while, depending on how busy the server is.</p>"},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/#2-explore-the-cuffdiff-output-files","title":"2.  Explore the Cuffdiff output files","text":"<p>There should be 11 output files from Cuffdiff. These files should all begin with something like \u201cCuffdiff on data 43, data 38, and others\u201d. We\u2019ll mostly be interested in the file ending with \u2018gene differential expression testing\u2019 which contains the statistical results from testing the level of gene expression between the batch condition and chem condition.</p> <p>Filter based on column 14 (\u2018significant\u2019) - a binary assessment of q_value &gt; 0.05, where q_value is p_value adjusted for multiple testing. Under Basic Tools, click on Filter and Sort &gt; Filter:</p> <ul> <li>Filter: \u201cCuffdiff on data....: gene differential expression testing\u201d</li> <li>With following condition: c14==\u2019yes\u2019</li> <li>Execute</li> </ul> <p>This will keep only those entries that Cuffdiff has marked as significantly differentially expressed. There should be 53 differentially expressed genes in this list.</p> <p>We can rename this file by clicking on the pencil icon of the outputted file and change the name from \u201cFilter on data x\u201d to \u201cCuffdiff_Significant_DE_Genes\u201d.</p>"},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/#section-4-count-reads-in-features-30-min","title":"Section 4. Count reads in features [30 min]","text":"<p>HTSeq-count creates a count matrix using the number of the reads from each bam file that map to the genomic features in the genes.gtf. For each feature (a gene for example) a count matrix shows how many reads were mapped to this feature.</p> <ol> <li> <p>Use HTSeq-count to count the number of reads for each feature.     In the left tool panel menu search bar, search for \u201ccount matrix\u201d. Click on SAM/BAM to count matrix and set the parameters as follows:  </p> <ul> <li>Gene model (GFF) file to count reads over from your current history: genes.gtf</li> <li>bam/sam file from your history:   (Select all six bam files using the shift key.)<ul> <li>batch1-accepted_hits.bam</li> <li>batch2-accepted_hits.bam</li> <li>batch3-accepted_hits.bam</li> <li>chem1-accepted_hits.bam</li> <li>chem2-accepted_hits.bam</li> <li>chem3-accepted_hits.bam</li> </ul> </li> <li>Use defaults for the other fields</li> <li>Execute</li> </ul> </li> <li> <p>Examine the outputted matrix by using the eye icon.     Each column corresponds to a sample and each row corresponds to a gene. By     sight, see if you can find a gene you think is differentially expressed     from looking at the counts.</p> </li> </ol> <p>We now have a count matrix, with a count against each corresponding sample. We will use this matrix in later sections to calculate the differentially expressed genes.</p>"},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/#section-5-edger-30-min","title":"Section 5: edgeR  [30 min]","text":"<p>edgeR is an R package, that is used for analysing differential expression of RNA-Seq data and can either use exact statistical methods or generalised linear models.</p>"},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/#1-generate-a-list-of-differentially-expressed-genes-using-edger","title":"1.  Generate a list of differentially expressed genes using edgeR","text":"<p>In the Galaxy tool panel, under NGS Analysis, select NGS: RNA &gt; Differential_Count and set the parameters as follows:</p> <ul> <li>Select an input matrix - rows are contigs, columns are counts for each   sample: bams to DGE count matrix_htseqsams2mx.xls</li> <li>Title for job outputs: Differential_Counts_edgeR</li> <li>Treatment Name: Batch</li> <li>Select columns containing treatment: <ul> <li>batch1-accepted_hits.bam</li> <li>batch2-accepted_hits.bam</li> <li>batch3-accepted_hits.bam</li> </ul> </li> <li>Control Name: Chem</li> <li>Select columns containing control: <ul> <li>chem1-accepted_hits.bam</li> <li>chem2-accepted_hits.bam</li> <li>chem3-accepted_hits.bam</li> </ul> </li> <li>Run this model using edgeR: Run edgeR</li> <li>Use defaults for the other fields</li> <li>Execute</li> </ul>"},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/#2-examine-the-outputs-from-the-previous-step","title":"2.  Examine the outputs from the previous step","text":"<ol> <li>Examine the Differential_Counts_edgeR_topTable_edgeR.xls file by     clicking on the eye icon.     This file is a list of genes sorted by p-value from using EdgeR to     perform differential expression analysis.</li> <li>Examine the Differential_Counts_edgeR.html file. This file has some     output logs and plots from running edgeR. If you are familiar with R,     you can examine the R code used for analysis by scrolling to the bottom     of the file, and clicking Differential_Counts.Rscript to download the     Rscript file.     If you are curious about the statistical methods edgeR uses, you can     read the edgeR user\u2019s guide at     Bioconductor.</li> </ol>"},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/#3-extract-the-significant-differentially-expressed-genes","title":"3.  Extract the significant differentially expressed genes.","text":"<p>Under Basic Tools, click on Filter and Sort &gt; Filter:</p> <ul> <li>Filter: \u201cDifferential_Counts_edgeR_topTable_edgeR.xls\u201d</li> <li>With following condition: c6 &lt;= 0.05</li> <li>Execute</li> </ul> <p>This will keep the genes that have an adjusted p-value of less or equal to 0.05. There should be 55 genes in this file. Rename this file by clicking on the pencil icon of and change the name from \u201cFilter on data x\u201d to \u201cedgeR_Significant_DE_Genes\u201d.</p>"},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/#section-6-deseq2-30-min","title":"Section 6. DESeq2 [30 min]","text":"<p>DESeq2 is an R package that uses a negative binomial statistical model to find differentially expressed genes. It can work without replicates (unlike edgeR) but the author strongly advises against this for reasons of statistical validity.</p>"},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/#1-generate-a-list-of-differentially-expressed-genes-using-deseq2","title":"1.  Generate a list of differentially expressed genes using DESeq2","text":"<p>In the Galaxy tool panel, under NGS Analysis, select NGS: RNA Analysis &gt; Differential_Count and set the parameters as follows:  </p> <ul> <li>Select an input matrix - rows are contigs, columns are counts for each   sample: bams to DGE count matrix_htseqsams2mx.xls</li> <li>Title for job outputs: Differential_Counts_DESeq2</li> <li>Treatment Name: Batch</li> <li>Select columns containing treatment: <ul> <li>batch1-accepted_hits.bam</li> <li>batch2-accepted_hits.bam</li> <li>batch3-accepted_hits.bam</li> </ul> </li> <li>Control Name: Chem</li> <li>Select columns containing control: <ul> <li>chem1-accepted_hits.bam</li> <li>chem2-accepted_hits.bam</li> <li>chem3-accepted_hits.bam</li> </ul> </li> <li>Run this model using edgeR: Do not run edgeR</li> <li>Run the same model with DESeq2 and compare findings: Run DESeq2</li> </ul>"},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/#2-examine-the-outputs-the-previous-step","title":"2.  Examine the outputs the previous step","text":"<ol> <li>Examine the Differential_Counts_DESeq2_topTable_DESeq2.xls file.     This file is a list of genes sorted by p-value from using DESeq2 to     perform differential expression analysis.</li> <li>Examine the Differential_Counts_DESeq2.html file. This file has some     output logs and plots from running DESeq2. Take a look at the PCA plot.</li> </ol> <p>PCA plots are useful for exploratory data analysis. Samples which are more similar to each other are expected to cluster together. A count matrix often has thousands of dimensions (one for each feature) and our PCA plot generated in the previous step transforms the data so the most variability is represented in principal components 1 and 2 (PC1 and PC2 represented by the x-axis and y-axis respectively).</p> <p></p> <p>Take note of the scales on the x-axis and the y-axis. The x-axis representing the first principal component accounts for 96% of the variance and ranges from approximately -6 to +6, while the y-axis ranges from approximately -1 to +1.</p> <p>For both conditions, the 3 replicates tend to be closer to each other than they are to replicates from the other condition.</p> <p>Additionally, within conditions, the lower glucose (chem) condition shows more variability between replicates than the higher glucose (batch) condition.</p>"},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/#3-filter-out-the-significant-differentially-expressed-genes","title":"3.  Filter out the significant differentially expressed genes.","text":"<p>Under Basic Tools, click on Filter and Sort &gt; Filter:</p> <ul> <li>Filter: \u201cDifferential_Counts_DESeq2_topTable_DESeq2.xls\u201d</li> <li>With following condition: c7 &lt;= 0.05</li> <li>Execute</li> </ul> <p>This will keep the genes that have an adjusted p-value of less or equal to 0.05. There should be 53 genes in this file. Rename this file by clicking on the pencil icon of and change the name from \u201cFilter on data x\u201d to \u201cDESeq2_Significant_DE_Genes\u201d. You should see the first few differentially expressed genes are similar to the ones identified by EdgeR.</p>"},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/#section-7-how-much-concordance-is-there-between-methods","title":"Section 7: How much concordance is there between methods?","text":"<p>We are interested in how similar the identified genes are between the different statistial methods used by Cuffdiff, edgeR, and DESeq2. We can generate a Venn diagram to visualise the amount of overlap.</p> <ol> <li> <p>Generate a Venn diagram of the output of the 3 differential expression tools.     Note that column index 2 (or c3) contains the gene name in the CuffDiff output.     Similarly column index 0 (or c1) in EdgeR and DESeq2 contain the gene names.     In the Galaxy tool panel, under Statistics and Visualisation, select     Graph/Display Data &gt; proportional venn and set the parameters as follows:  </p> <ul> <li>title: Common genes</li> <li>input file 1: Cuffdiff_Significant_DE_Genes</li> <li>column index: 2</li> <li>as name: Cuffdiff</li> <li>input file 2: edgeR_Significant_DE_Genes</li> <li>column index file 2: 0</li> <li>as name file 2: edgeR</li> <li>two or three: three</li> <li>input file 3: DESeq2_Significant_DE_Genes</li> <li>column index file 3: 0</li> <li>as name file 3: DESeq2</li> <li>Execute</li> </ul> </li> <li> <p>View the generated Venn diagram.     Agreement between the tools is good: there are 49 differentially expressed     genes that all three tools agree upon, and only a handful that are     exclusive to each tool.</p> <p></p> </li> <li> <p>Generate the common list of significantly expressed genes identified by the     three mentioned tools by extracting the respective gene list columns and     intersecting:</p> <ol> <li> <p>Under Basic Tools in the Galaxy tool panel, select     Text Manipulation &gt; cut</p> <ul> <li>Cut columns: c3</li> <li>Delimited by: Tab</li> <li>From: Cuffdiff_Significant_DE_Genes</li> <li>Execute</li> </ul> <p>Rename the output to something like \u2018Cuffdiff_gene_list\u2019</p> </li> <li> <p>Select Text Manipulation &gt; cut</p> <ul> <li>Cut columns: c1</li> <li>Delimited by: Tab</li> <li>From: edgeR_Significant_DE_Genes</li> <li>Execute</li> </ul> <p>Rename the output to something like \u2018edgeR_gene_list\u2019</p> </li> <li> <p>Select Text Manipulation &gt; cut</p> <ul> <li>Cut columns: c1</li> <li>Delimited by: Tab</li> <li>From: DESeq2_Significant_DE_Genes</li> <li>Execute</li> </ul> <p>Rename the output to something like \u2018DESeq2_gene_list\u2019</p> </li> <li> <p>Under Basic Tools in the Galaxy tool panel, select     Join, Subtract and Group &gt; Compare two Datasets</p> <ul> <li>Compare: Cuffdiff_gene_list</li> <li>against: edgeR_gene_list</li> <li>Use defaults for the other fields</li> <li>Execute</li> </ul> <p>Rename the output to something like \u2018Cuffdiff_edgeR_common_gene_list\u2019</p> </li> <li> <p>Select Join, Subtract and Group &gt; Compare two Datasets</p> <ul> <li>Compare: Cuffdiff_edgeR_common_gene_list</li> <li>against: DESeq2_gene_list</li> <li>Use defaults for the other fields</li> <li>Execute</li> </ul> <p>Rename the output to something like \u2018Cuffdiff_edgeR_DESeq2_common_gene_list\u2019</p> </li> </ol> </li> </ol> <p>We now have a list of 49 genes that have been identified as significantly differentially expressed by all three tools.</p>"},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/#section-8-gene-set-enrichment-analysis","title":"Section 8: Gene set enrichment analysis","text":"<p>The biological question being asked in the original paper is essentially: \u201cWhat is the global response of the yeast transcriptome in the shift from growth at glucose excess conditions (batch) to glucose-limited conditions (chemostat)?\u201d </p> <p>We can address this question by attempting to interpret our differentially expressed gene list at a higher level, perhaps by examining the categories of gene and protein networks that change in response to glucose.</p> <p>For example, we can input our list of differentially expressed genes to a Gene Ontology (GO) enrichment analysis tool such as GOrilla to find out the GO enriched terms.</p> <p>NOTE: Because of time-constraints in this tutorial, the analysis was confined to a single chromosome (chromosome I) and as a consequence we don\u2019t have sufficient information to look for groups of differentially expressed genes (simply because we don\u2019t have enough genes identified from the one chromosome to look for statistically convincing over-representation of any particular gene group).</p> <ol> <li> <p>Download the list of genes here in a plain-text file     to your local computer by right clicking on the link and selecting Save Link As\u2026</p> <p>Note that there are ~2500 significantly differentially expressed genes identified in the full analysis. Also note that the genes are ranked in order of statistical significance. This is critical for the next step.</p> </li> <li> <p>Explore the data using gene set enrichment analysis (GSEA) using the online     tool GOrilla</p> <ol> <li>Go to cbl-gorilla.cs.technion.ac.il<ul> <li>Choose Organism: Saccharomyces cerevisiae</li> <li>Choose running mode: Single ranked list of genes</li> <li>Open the gene list you downloaded in the previous step in a text editor.   Select the full list, then copy and paste the list into the text box.</li> <li>Choose an Ontology: Process</li> <li>Search Enriched GO terms</li> </ul> </li> <li> <p>Once the analysis has finished running, you will be redirected to a     page depicting the GO enriched biological processes and its significance     (indicated by colour), based on the genes you listed. </p> <p>Scroll down to view a table of GO terms and their significance scores. In the last column, you can toggle the [+] Show genes to see the list of associated genes.</p> </li> <li> <p>Experiment with different ontology categories (Function, Component) in GOrilla.</p> </li> </ol> </li> </ol> <p>At this stage you are interpreting the experiment in different ways, potentially discovering information that will lead you to further lab experiments. This is driven by your biological knowledge of the problem space. There are an unlimited number of methods for further interpretation of which GSEA is just one.</p>"},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/#optional-extension-degust","title":"Optional extension: Degust","text":"<p>Degust is an interactive visualiser for analysing RNA-seq data. It runs as a web service and can be found at vicbioinformatics.com/degust/.</p> <p></p>"},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/#1-load-count-data-into-degust","title":"1. Load count data into Degust","text":"<ol> <li>In Galaxy, download the count data \u201cbams to DGE count matrix_htseqsams2mx.xls\u201d     generated in Section 4 using the disk icon.</li> <li>Go to http://degust.erc.monash.edu/     and click on \u201cUpload your counts file\u201d.</li> <li>Click \u201cChoose file\u201d and upload the recently downloaded Galaxy tabular file     containing your RNA-seq counts.</li> </ol>"},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/#2-configure-your-uploaded-data","title":"2. Configure your uploaded data","text":"<ol> <li>Give your visualisation a name.</li> <li>For the Info column, select Contig.</li> <li>Add two conditions: batch and chem. For each condition, select the three     samples which correspond with the condition.</li> <li>Click Save changes and view your data.</li> </ol>"},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/#3-explore-your-data","title":"3. Explore your data","text":"<p>Read through the Degust tour of features. Explore the parallel coordinates plot, MA plot, MDS plot, heatmap and gene list. Each is fully interactive and influences other portions on the display depending on what is selected.</p> <p></p> <p>On the right side of the page is an options module which can set thresholds to filter genes using statistical significance or absolute-fold-change.</p> <p>On the left side is a dropdown box you can specify the method (Voom/Limma or edgeR) used to perform differential expression analysis on the data. You can also view the R code by clicking \u201cShow R code\u201d under the options module on the right.</p>"},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/#4-explore-the-demo-data","title":"4. Explore the demo data","text":"<p>Degust also provides an example dataset with 4 conditions and more genes. You can play with the demo dataset by clicking on the \u201cTry the demo\u201d button on the Degust homepage. The demo dataset includes a column with an EC number for each gene. This means genes can be displayed on Kegg pathways using the module on the right.</p>"},{"location":"tutorials/rna_seq_dge_advanced/rna_seq_advanced_tutorial/#references","title":"References","text":"<p>[1] Nookaew I, Papini M, Pornputtpong N, Scalcinati G, Fagerberg L, Uhl\u00e9n M, Nielsen J: A comprehensive comparison of RNA-Seq-based transcriptome analysis from reads to differential gene expression and cross-comparison with microarrays: a case study in Saccharomyces cerevisiae. Nucleic Acids Res 2012, 40 (20):10084 \u2013 10097. doi:10.1093/nar/gks804. Epub 2012 Sep 10</p>"},{"location":"tutorials/rna_seq_dge_basic/","title":"Index","text":"<p>PR reviewers and advice: Jessica Chung, Clare Sloggett</p> <p>Current slides (Jessica\u2019s slides from March 2018): - Overview: https://docs.google.com/presentation/d/1HovpEc5xzB_plxlIpWJAoTpb4309ujfiqOcLKGCDWYw - Workshop: https://docs.google.com/presentation/d/1YmJl8ks7tCg9UOYcjOg1rzr97Qrid5HsS4FqCqxgqq4</p> <p>Other slides:</p> <ul> <li>None yet</li> </ul>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_background/","title":"Background","text":""},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_background/#introduction-to-rna-seq","title":"Introduction to RNA-seq","text":"<p>RNA-seq as a genomics application is essentially the process of collecting RNA (of any type: mRNA, rRNA, miRNA), converting in some way to DNA, and sequencing on a massively parallel sequencing technology such as Illumina Hiseq. Critically, the number of short reads generated for a particular RNA is assumed to be proportional to the amount of that RNA that was present in the collected sample.</p> <p>Differential gene expression studies can exploit RNA-seq to quantitate the amount of mRNA in different samples and statistically test the difference in expression per-gene (generally measured as the normalised number of sequence reads per gene/transcript) between the samples.</p> <p>In eukaryotes, differential gene expression analysis is complicated by the possibility of multiple isoforms for any particular gene through alternative splicing and/or multiple transcription start sites</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_background/#the-galaxy-workflow-platform","title":"The Galaxy workflow platform","text":""},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_background/#what-is-galaxy","title":"What is Galaxy?","text":"<p>Galaxy is an online bioinformatics workflow management system. Essentially, you upload your files, create various analysis pipelines and run them, then visualise your results.</p> <p>Galaxy is really an interface to the various tools that do the data processing; each of these tools could be run from the command line, outside of Galaxy. Galaxy makes it easier to link up the tools together and visualise the entire analysis pipeline.</p> <p>Galaxy uses the concept of \u2018histories\u2019. Histories are sets of data and workflows that act on that data. The data for this workshop is available in a shared history, which you can import into your own Galaxy account</p> <p>Learn more about Galaxy here</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_background/#figure-1-the-galaxy-interface","title":"Figure 1: The Galaxy interface","text":"<p>Tools on the left, data in the middle, analysis workflow on the right.</p> <p></p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_background/#differential-gene-expression-analysis-using-tophat-and-cufflinks","title":"Differential gene expression analysis using Tophat and Cufflinks","text":"<p>Two protocols are described in the paper inspiring this tutorial (Trapnell et al 2012):</p> <ol> <li> <p>The Tuxedo protocol: a full analysis protocol covering the assembly and characterisation of the expressed genes from the experimental data, and statistical analysis of gene expression changes in those genes</p> </li> <li> <p>The Alternate protocol: a shorter approach for experiments in which the set of genes to be analysed is already known. Changes in expression of those genes are analysed</p> </li> </ol> <p>Assembling a transcriptome is advised if no well characterised transcriptome exists, but as D. melanogaster is a model organism we have access to well-annotated and comprehensive genomes and transcriptomes from the multitude of previous genomic analyses on D. melanogaster, so the simpler \u2018Alternate protocol\u2019 is appropriate. It also has the advantage of being simpler.</p> <p>If we were investigating a novel organism then we would first need to characterise the transcriptome by assembling it from the experimental data, as gene expression is only meaningful in the context of a defined transcriptome.</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_background/#the-alternate-protocol","title":"The Alternate protocol","text":"<p>The overall workflow for this protocol is depicted below[^1]. Briefly, raw reads from each of the sequenced replicates for each experimental condition are aligned against a reference genome; during this process splice sites are identified and reads mapped across introns as required. The mapped reads are then used to derive counts of reads vs genes by cross referencing against a list of known genes (the \u2018reference transcriptome\u2019); these read counts are normalised within and between sample sets by a variety of methods and then statistical tests are used to assess the significance of differences between the normalised read counts of sample sets, producing a ranked list of differentially expressed genes.</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_background/#figure-2-general-workflow-for-testing-expression-differences-between-two-experimental-conditions","title":"Figure 2: General workflow for testing expression differences between two experimental conditions","text":""},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_background/#tophat","title":"Tophat","text":"<p>Reads from experimental conditions A and B are mapped to a reference genome with TopHat. TopHat uses the Bowtie aligner as an alignment engine; it breaks up the reads that Bowtie cannot align on its own into smaller pieces called segments.</p> <ul> <li>TopHat input: Fasta or Fastq files</li> <li>TopHat output: BAM file (Compressed SAM file)</li> </ul>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_background/#cuffdiff","title":"Cuffdiff","text":"<p>The reads and the reference transcriptome are fed to Cuffdiff which calculates expression levels and tests the statistical significance of the observed changes.</p> <ul> <li>Cuffdiff input: Reference transcriptome as GTF file</li> <li>Cuffdiff output:<ul> <li>Gene and transcript expression levels as tables of normalised read counts</li> <li>Differential analysis testing on:<ul> <li>Genes</li> <li>Transcripts</li> <li>Transcription Start Site (TSS) groups</li> <li>Splicing: files reporting on splicing</li> <li>Promoter: differentially spliced genes via promoter switching</li> <li>CDS: CoDing Sequences</li> </ul> </li> </ul> </li> </ul>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_background/#the-full-tuxedo-protocol","title":"The full Tuxedo Protocol","text":""},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_background/#figure-3-full-tuxedo-protocol-workflow","title":"Figure 3: Full Tuxedo protocol workflow","text":"<ol> <li> <p>Tophat: Reads from different experimental conditions are mapped to a reference genome with TopHat. TopHat uses the Bowtie aligner as an alignment engine. It breaks up the reads that Bowtie cannot align on its own into smaller pieces called segments.</p> <ul> <li>TopHat input: Fasta or Fastq files</li> <li>TopHat output: BAM file (Compressed SAM file)</li> </ul> </li> <li> <p>Cufflinks: Resulting alignment files are provided to the Cufflinks program. Cufflinks uses these alignments to generate a transcriptome assembly for each condition. It reports a parsimonious transcriptome assembly of the data, i.e. all transcript fragments or \u2018transfrags\u2019 needed to \u2018explain\u2019 all the splicing event outcomes in the input data are reported. Cufflinks also quantifies the expression level of each transfrag in the sample to filter out the artificial ones</p> <ul> <li>Cufflinks input:<ul> <li>Mapped reads (SAM or BAM), use accepted_hits.bam from Tophat</li> <li>Genome annotation: GTF file</li> </ul> </li> <li>Cufflinks output:<ul> <li>assembled transcripts (GTF) including all isoforms with their exon structure and expression levels. (tabular)</li> <li>transcript_expression (tabular): table of expression levels for each transcript</li> <li>gene_expression (tabular): table of total expression levels for each gene.</li> </ul> </li> </ul> </li> <li> <p>Cuffmerge[^2]/Cuffcompare: Cufflinks produces an assembly for each condition/sample. To perform differential expression we need to combine to assemblies into a single assembly. Assemblies can be merged together using the Cuffmerge or Cuffcompare utilities which are included with the Cufflinks package. This will result in the creation of a meta-transcriptome. Both Cuffcompare and Cuffmerge are available on Galaxy.</p> <ul> <li>Cuffcompare input:<ul> <li>Assembled_transcripts for each sample</li> <li>Reference Annotation</li> </ul> </li> <li>Cuffcompare output: combined_transcripts.gtf</li> </ul> </li> <li> <p>Cuffdiff:The reads and the combined assembly are fed to Cuffdiff which calculates expression levels and tests the statistical significance of the observed changes.</p> <ul> <li>Cuffdiff input:<ul> <li>Reference transcriptome as GTF file</li> <li>BAM files of mapped reads from Tophat for all samples</li> </ul> </li> <li>Cuffdiff output:<ul> <li>Gene and transcript expression levels as tables of normalised read counts</li> <li>Differential analysis testing on:<ul> <li>Genes</li> <li>Transcripts</li> <li>Transcription Start Site (TSS) groups</li> <li>Splicing: files reporting on splicing</li> <li>Promoter: differentially spliced genes via promoter switching</li> <li>CDS: CoDing Sequences</li> </ul> </li> </ul> </li> </ul> </li> <li> <p>CummRbund[^3]: Using an R package called CummRbund, diiferentially expressed genes and transcriptomes can be visually displayed using various expression plots.</p> </li> </ol>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_background/#protocols-recommendations","title":"Protocols recommendations","text":"<ol> <li>Create a replicate from each condition to control the batch effects such as variation in culture conditions. With current available kits creating triplicates is feasible and strongly recommended.</li> <li>Do paired-end sequencing whenever possible. For example, Cufflinks is much more accurate in the presence of paired-end reads.</li> <li>Sequence with longer reads whenever possible. Tophat is more accurate in presence of longer reads in compare to shorter reads. However, since the cost of sequencing with longer reads is substantially more than shorter reads, some researchers prefer to do more replicates or more samples with shorter reads.</li> <li>Identify new genes with traditional cloning and PCR-based techniques because transcriptome assembly is difficult.</li> </ol>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_background/#limitations-of-the-protocols","title":"Limitations of the protocols","text":"<ol> <li>Both Tophat and Cufflinks require a reference genome.</li> <li>The protocol assumes that RNASeq was done using Illumina or Solid sequencing techniques.</li> </ol>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_background/#references","title":"References","text":"<ul> <li>Trapnell C, Roberts A, Pachter L, et al. Differential gene and transcript expression analysis of RNA-seq experiments with TopHat and Cufflinks. Nature Protocols [serial online]. March 1, 2012;7(3):562-578.</li> <li>James T. Robinson, Helga Thorvaldsd\u00f3ttir, Wendy Winckler, Mitchell Guttman, Eric S. Lander, Gad Getz, Jill P. Mesirov. Integrative Genomics Viewer. Nature Biotechnology 29, 24\u201326 (2011),</li> </ul> <p>[^1]: The published protocol has been designed for running on the     command line in Linux. This tutorial has been adapted to use on the     web-based Galaxy platform.</p> <p>[^2]: Note: Cuffmerge is a meta-assembler. It treats the assemblies     created by Cufflinks the same way Cufflinks treats reads from     Tophat. That is, it produces a parsimonious transcript assembly of     the assemblies. The difference between Cuffmerge and Cuffcompare is     that if we have two transfrags A and B, Cuffcompare only combines     the two where either A or B is \u2018contained\u2019 in the other transfrag or     in other words one of them is redundant; whereas Cuffmerge assembles     them if they overlap with each other and agree on splicing.</p> <p>[^3]: Since CummRbund is currently not installed on Galaxy, the     underlying steps are not included in this tutorial; instead we use     IGV (Robinson et al 2011) and Trackster for visualizing the output     which are accessible from Galaxy.</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial/","title":"RNAseq analysis using HISAT2 (Galaxy)","text":""},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial/#rna-seq-differential-gene-expression","title":"RNA-Seq - Differential Gene Expression","text":"<p>Authors: Jessica Chung, Mahtab Mirmomeni, Andrew Lonie</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial/#tutorial-overview","title":"Tutorial Overview","text":"<p>In this tutorial we cover the concepts of RNA-seq differential gene expression (DGE) analysis using a dataset from the common fruit fly, Drosophila melanogaster.</p> <p>The tutorial is designed to introduce the tools, datatypes and workflows of an RNA-seq DGE analysis. Here, we\u2019ll be using a subset of the data from a published experiment by Hateley et. al. in 2016. In practice, full-sized datasets would be much larger and take longer to run.</p> <p>In this tutorial we will:  </p> <ul> <li>introduce the types of files typically used in RNA-seq analysis</li> <li>align RNA-seq reads with an aligner, HISAT2</li> <li>visualise RNA-seq alignment data with IGV or JBrowse</li> <li>use a number of different methods to find differentially expressed genes</li> <li>understand the importance of replicates for differential expression analysis</li> </ul> <p>This tutorial does not cover the following steps that we might do in a real RNA-seq DGE analysis:  </p> <ul> <li>QC (quality control) of the raw sequence data</li> <li>Trimming the reads for quality and for adaptor sequences</li> <li>QC of the RNA-seq alignment data  </li> </ul>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial/#learning-objectives","title":"Learning Objectives","text":"<p>At the end of this tutorial you will be able to:</p> <ul> <li>understand the basic workflow of alignment, quantification, and testing,    for RNA-seq differential expression analysis</li> <li>process raw RNA sequence data into a list of differentially    expressed genes</li> <li>understand the relationship between the number of biological replicates    in an experiment and the statistical power available to detect differentially    expressed genes</li> </ul>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial/#requirements","title":"Requirements","text":"<p>Participants with no previous Galaxy experience are strongly recommended to attend the \u201cIntroduction to Galaxy\u201d workshop first.</p> <p>Attendees are required to bring their own laptop computers.</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial/#the-data","title":"The data","text":"<p>The sequencing data you will be working with is from Drosophila melanogaster pupae from the study, Transcriptomic response of Drosophila melanogaster pupae developed in hypergravity. The experiment has two conditions, g3 where pupae underwent development in three times Earth\u2019s gravity (i.e. 3 g), and g1, the control, where pupae developed in the standard gravitational acceleration felt on the surface of Earth (i.e. 1 g). There are three samples in each condition and the sequencing data is paired-end so you will have two files for each of the six samples. Your aim will be to find differentially expressed genes in g1 vs g3.</p> <p></p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial/#section-1-preparation","title":"Section 1: Preparation","text":"<p>1.  Register as a new user in Galaxy if you don\u2019t already have an account</p> <ul> <li>Open a browser and go to a Galaxy server. For example, you could use Galaxy Australia. Recommended browsers include Firefox and Chrome. Internet Explorer is not supported.</li> <li>Register as a new user by clicking User &gt; Register on the top dark-grey bar. Alternatively, if you already have an account, login by clicking User &gt; Login.</li> </ul> <p>2.  Import the RNA-seq data for the workshop.</p> <p>If you are using Galaxy Australia, go to Shared Data &gt; Data Libraries in the top toolbar, and select Data for RNA-Seq tutorial - Hypergravity. Select (tick) all of the files and click To History, and choose as Datasets, then Import.</p> <p>Alternatively, if you are using your own personal Galaxy server or a different Galaxy server, you can import the data like this:</p> <ol> <li>In the tool panel located on the left, under Basic Tools select Get     Data &gt; Upload File. Click on the Paste/Fetch data button on the     bottom section of the pop-up window.</li> <li> <p>Upload the sequence data by pasting the following links into the text     input area.     These six files are three paired-end samples from the g1 group. Keep the     type as \u201cAuto-detect\u201d when uploading these files.      https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/rna_seq_hypergravity/g1_01_R1.fastq.gz https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/rna_seq_hypergravity/g1_01_R2.fastq.gz https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/rna_seq_hypergravity/g1_02_R1.fastq.gz https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/rna_seq_hypergravity/g1_02_R2.fastq.gz https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/rna_seq_hypergravity/g1_03_R1.fastq.gz https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/rna_seq_hypergravity/g1_03_R2.fastq.gz      These six files are three paired-end samples from the g3 group.      https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/rna_seq_hypergravity/g3_01_R1.fastq.gz https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/rna_seq_hypergravity/g3_01_R2.fastq.gz https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/rna_seq_hypergravity/g3_02_R1.fastq.gz https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/rna_seq_hypergravity/g3_02_R2.fastq.gz https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/rna_seq_hypergravity/g3_03_R1.fastq.gz https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/rna_seq_hypergravity/g3_03_R2.fastq.gz      Then, upload this file of gene definitions. Keep the type as \u201cAuto-detect\u201d     when this file as Galaxy will auto-detect the file as a GTF file.      https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/rna_seq_hypergravity/ensembl_dm3.chr4.gtf      You should now have 13 files in your history.</p> <p>Note: If you log out of Galaxy and log back at a later time your data and results from previous experiments will be available in the right panel of your screen called the \u2018History\u2019</p> </li> </ol> <p>3.  View and have an understanding of the files involved in RNA-seq analysis.</p> <ol> <li> <p>You should now have the following files in your Galaxy history:</p> <p>6 files containing paired-ended reads for the 3 samples that developed in 1 g: <ul> <li>g1_01_R1.fastq.gz <li>g1_01_R2.fastq.gz <li>g1_02_R1.fastq.gz <li>g1_02_R2.fastq.gz <li>g1_03_R1.fastq.gz <li>g1_03_R2.fastq.gz <p>6 files containing paired-ended reads for the 3 samples that developed in 3 g: <ul> <li>g3_01_R1.fastq.gz <li>g3_01_R2.fastq.gz <li>g3_02_R1.fastq.gz <li>g3_02_R2.fastq.gz <li>g3_03_R1.fastq.gz <li>g3_03_R2.fastq.gz <p>And 1 gene annotation file for chromosome 4 of the Drosophila genome: <ul> <li>ensembl_dm3.chr4.gtf <p>These files can be renamed by clicking the pen icon if you wish.</p> </li> <li> <p>These 12 sequencing files are in FASTQ format and have the file     extension: \u201c.fastq.gz\u201d. If you are not familiar with the FASTQ format,     click here for an overview.     The \u201c.gz\u201d extension indicates these files have been compressed by     gzip. FASTQ files are typically     stored as compressed files to save disk space as they are usually     gigabytes in size.</p> <p>Each condition has three samples, and each sample has two files (an R1 file containing forward reads and an R2 file containing reverse reads).</p> <p>Click on the eye icon to the top right of any FASTQ file to view the first part of the file.</p> <p>Note: The reads are paired-end, i.e. g1_01_R1.fastq.gz and g1_01_R2.fastq.gz are paired reads from one sequencing run. If you\u2019re unfamiliar with paired-end sequencing, you can read about it here.</p> </li> <li> <p>The gene annotation file (ensembl_dm3.chr4.gtf) is in GTF format. This file     describes where the genes are located in the D. melanogaster reference     genome, filtered for genes on chromosome 4.     Each feature is defined by a chromosomal start and end point, feature type     (CDS, gene, exon etc), and parent gene and transcript.     We will examine this file more closely later in Section 3 of this     tutorial.     More information on the GTF format can be found     here.</p> </li>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial/#section-2-alignment-with-hisat2","title":"Section 2: Alignment with HISAT2","text":"<p>In this section we map the reads in our FASTQ files to a reference genome. As these reads originate from mRNA, we expect some of them will cross exon/intron boundaries when we align them to the reference genome. We will use HISAT2 to perform our alignment. HISAT2 is a fast, splice-aware, alignment program that is a successor to TopHat2. More information on HISAT2 can be found here.</p> <p>1.  Align the RNA-seq reads to a reference genome.</p> <p>In the left tool panel menu, under NGS Analysis, select NGS: RNA Analysis &gt; HISAT2 and set the parameters as follows:  </p> <ul> <li> <p>Source for the reference genome to align against: Use built-in genome</p> </li> <li> <p>Select a reference genome: Fruit Fly (Drosophila melanogaster): dm3</p> </li> </ul> <ul> <li>Single end or paired reads? Paired end</li> <li> <p>Forward reads: (Click on the multiple datasets icon (which looks like two pieces of paper in a stack) and select all six of the forward FASTQ files ending in *_R1.fastq.gz. This should be correspond to every second dataset (e.g. 1,3,5,7,9,11). This can be done by holding down the ctrl key (Windows) or the command key (OSX) to select multiple files.)</p> <ul> <li>g1_01_R1.fastq.gz</li> <li>g1_02_R1.fastq.gz</li> <li>g1_03_R1.fastq.gz</li> <li>g3_01_R1.fastq.gz</li> <li>g3_02_R1.fastq.gz</li> <li>g3_03_R1.fastq.gz</li> </ul> </li> <li> <p>Reverse reads: (Click on the multiple datasets icon and select all six of the reverse FASTQ files ending in *_R2.fastq.gz.)  </p> <ul> <li>g1_01_R2.fastq.gz</li> <li>g1_02_R2.fastq.gz</li> <li>g1_03_R2.fastq.gz</li> <li>g3_01_R2.fastq.gz</li> <li>g3_02_R2.fastq.gz</li> <li>g3_03_R2.fastq.gz</li> </ul> </li> <li> <p>Use defaults for the other fields</p> </li> <li>Execute</li> </ul> <p>Your tool interface panel will look similar to this:</p> <p></p> <p>Note: This may take a few minutes, depending on how busy the server is.</p> <p>2.  Examine the alignment stats</p> <p>HISAT2 outputs one bam file for each set of paired-end read files. Rename the 6 files into a more meaningful name (e.g. \u2018HISAT on data 2 and data 1\u2019 to \u2018g1_01.bam\u2019) by using the pen icon next to the file.</p> <p>These files are BAM files (short for Binary Alignment Map) and like the name suggests, is a binary file. Galaxy automatically converts these to a plain-text equivalent (SAM) file to view when you click on the eye icon.</p> <p>HISAT2 also outputs some information to stderr which we can preview by clicking on the dataset name. To view the raw file, click the \u201cinfo\u201d button (view details) of a dataset, say g1_01.bam, and find the \u201cTool Standard Error\u201d row under \u201cJob Information\u201d in the table. Click the \u201cstderr\u201d link to view the alignment summary output.</p> <pre><code>50000 reads; of these:\n  50000 (100.00%) were paired; of these:\n    321 (0.64%) aligned concordantly 0 times\n    45766 (91.53%) aligned concordantly exactly 1 time\n    3913 (7.83%) aligned concordantly &gt;1 times\n    ----\n    321 pairs aligned concordantly 0 times; of these:\n      0 (0.00%) aligned discordantly 1 time\n    ----\n    321 pairs aligned 0 times concordantly or discordantly; of these:\n      642 mates make up the pairs; of these:\n        529 (82.40%) aligned 0 times\n        77 (11.99%) aligned exactly 1 time\n        36 (5.61%) aligned &gt;1 times\n99.47% overall alignment rate\n</code></pre> <p>Here we see we have a very high alignment rate, which is expected since the reads in this dataset have been pre-selected to align to chromosome 4.</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial/#section-3-visualise-the-aligned-reads","title":"Section 3: Visualise the aligned reads","text":"<p>The purpose of this step is to :</p> <ul> <li>visualise the quantitative, exon-based nature of RNA-seq data</li> <li>visualise the expression differences between samples represented by the   quantity of reads, and</li> <li>become familiar with interactive visualisation tools such as JBrowse and IGV.   </li> </ul> <p>JBrowse and IGV are both interactive tools that can visualise BAM files. You can pick either one to use in this section. JBrowse is run on Galaxy which means you can view your BAM file in your browser, but it takes a while to run the job (~30 mins). IGV is a separate application you\u2019ll need to download to your computer and run locally.</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial/#viewing-in-jbrowse","title":"Viewing in JBrowse","text":"<p>Before using JBrowse, you\u2019ll need to convert your GTF file to a GFF file.</p> <p>In the left tool panel menu, select the \u201cGTF-to-GFF converter\u201d tool, then provide your GTF file and click \u201cexecute\u201d.</p> <p>GTF and GFF are similar representations of the same information, but JBrowse requires the annotation information to be in GFF format.</p> <p>To visualise the alignment data:</p> <ul> <li>search for \u201cJBrowse\u201d in the tool panel search bar</li> <li>for \u201cReference genome to display\u201d: Use a built-in genome</li> <li>for \u201cSelect a reference genome\u201d: Fruit Fly dm3</li> <li>leave other settings as default, except:</li> </ul> <p>Set up a track for mapped RNA-seq reads:</p> <ul> <li>click \u201cInsert Track Group\u201d and then \u201cInsert Annotation Track\u201d</li> <li>for \u201cTrack Type\u201d: BAM pileups</li> <li>for \u201cBAM Track Data\u201d: select the multiple datasets icon, then select a bam from each condition, e.g., g1_01.bam and g3_01.bam (your files may be named differently)</li> <li>for \u201cAutogenerate SNP Track\u201d: Yes</li> </ul> <p>Set up a track for the annotated genome:</p> <ul> <li>click \u201cInsert Track Group\u201d and then \u201cInsert Annotation Track\u201d</li> <li>for \u201cTrack Type\u201d: GFF/GFF3/BED/GBK Features</li> <li>for \u201cGFF/GFF3/BED Track Data\u201d: select the reference genome in GFF format, e.g. the converted GTF file (ensembl_dm3.chr4.gtf) - your files may be named differently</li> <li>Execute</li> </ul> <p>JBrowse will create a single file with this visualization (this may take a while).</p> <ul> <li>When it is ready, click the eye icon to display in the centre panel.</li> <li>Make sure all \u201cAvailable Tracks\u201d on the left are ticked.</li> <li>Zoom in and out with the plus and minus buttons.</li> <li>Select \u201cChr4\u201d.</li> </ul> <p></p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial/#viewing-in-igv","title":"Viewing in IGV","text":"<p>An alternative to JBrowse is IGV. If you don\u2019t already have IGV installed on your computer, download and install it now. You will also need Java installed to run IGV.</p> <p>To visualise the alignment data:</p> <ol> <li>Open the IGV application (this may take a few seconds). Once opened, use     the top left drop-down menu bar to select the correct Drosophila genome     (dm3). You may need to select the \u201cMore\u2026\u201d option, and select     \u201cD. melanogaster (dm3)\u201d.</li> <li>In Galaxy, click on one of the BAM files, for example \u2018g1_01.bam\u2019, to     expand the available options. Click on \u201cdisplay with IGV local\u201d and     the BAM file should be loaded into IGV.</li> <li>Select chr4 from the second drop box under the toolbar. Zoom in to     view alignments of reads to the reference genome.     You should see the characteristic distribution of RNA-seq reads across     the exons of the genes, with some gaps at intron/exon boundaries.     The number of reads aligned to a particular gene is proportional to the     abundance of the RNA derived from that gene in the sequenced sample.     (Note that IGV already has a list of known genes of most major organisms     including Drosophila, which is why you can see the genes in the bottom     panel of IGV.)</li> <li> <p>Open another BAM file from the other condition (e.g. \u2018g3_01.bam\u2019) by     clicking on the dataset in Galaxy and clicking on     \u201cdisplay with IGV local\u201d.</p> <p></p> </li> </ol>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial/#section-4-quantification","title":"Section 4. Quantification","text":"<p>HTSeq-count counts the number of the reads from each bam file that map to the genomic features in the provided annotation file. For each feature (a gene for example) we will obtain a numerical value associated with the expression of that feature in our sample (i.e. the number of reads that were aligned to that gene).</p> <p>1.  Examine the GTF file</p> <p>Click on the eye icon to display the ensembl_dm3.chr4.gtf file in Galaxy.</p> <p>This GTF file is essentially a list of chromosomal features which together define genes. Each feature is in turn defined by a chromosomal start and end point, feature type (CDS, gene, exon etc), and parent gene and transcript. Importantly, a gene may have many features, but one feature will belong to only one gene. More information on the GTF format can be found here.  The ensembl_dm3.chr4.gtf file contains ~4900 features which together define the 92 known genes on chromosome 4 of Drosophila melanogaster.</p> <p>2.  Run HTSeq-count</p> <ol> <li> <p>Use HTSeq-count to count the number of reads for each feature.     In the left tool panel menu, under NGS Analysis, select     NGS: RNA Analysis &gt; htseq-count and set the parameters as follows:  </p> <ul> <li>Aligned SAM/BAM File:   (Select \u2018Multiple datasets\u2019, then select all six bam files using the shift key.)<ul> <li>g1_01.bam</li> <li>g1_02.bam</li> <li>g1_03.bam</li> <li>g3_01.bam</li> <li>g3_02.bam</li> <li>g3_03.bam</li> </ul> </li> <li>GFF File: ensembl_dm3.chr4.gtf</li> <li>Stranded: No</li> <li>ID Attribute: gene_name</li> <li>Use defaults for the other fields</li> <li>Execute</li> </ul> </li> <li> <p>In the previous step, each input BAM file outputted two files. The first     file contains the counts for each of our genes. The second file     (ending with \u201c(no feature)\u201d) contains the stats for the reads that weren\u2019t     able to be uniquely aligned to a gene. We don\u2019t need the \u201c(no feature)\u201d     files so we can remove then with the delete \u201cX\u201d button on the top right.</p> </li> <li> <p>Rename the remaining six files from htseq-count to meaningful names,     such as g1_01, g1_02, etc.</p> </li> </ol> <p>3.  Generate a count matrix</p> <ol> <li>Generate a combined count matrix by combining our six files.     In the left tool panel menu, under NGS Analysis, select     NGS: RNA Analysis &gt; Generate count matrix and set the parameters as follows:  <ul> <li>Count files from your history:     (Select all six count files using the shift key.)<ul> <li>g1_01</li> <li>g1_02</li> <li>g1_03</li> <li>g3_01</li> <li>g3_02</li> <li>g3_03</li> </ul> </li> <li>Use defaults for the other fields</li> <li>Execute</li> </ul> </li> </ol> <p>Examine the outputted matrix by using the eye icon. Each column corresponds to a sample and each row corresponds to a gene. By sight, see if you can find a gene you think is differentially expressed just by looking at the counts.</p> <p>We now have a count matrix which we will now use to find differentially expressed genes between g1 samples and g3 samples.</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial/#section-5-degust","title":"Section 5. Degust","text":"<p>Degust is an interactive visualiser for analysing RNA-seq data. It runs as a web service and can be found at degust.erc.monash.edu/.</p> <p></p> <p>1. Load count data into Degust</p> <ol> <li>In Galaxy, download the count matrix you generated in the last section     using the disk icon.</li> <li>Go to degust.erc.monash.edu/     and click on \u201cUpload your counts file\u201d.</li> <li>Click \u201cChoose file\u201d and upload the recently downloaded Galaxy tabular file     containing your RNA-seq counts.</li> </ol> <p>2. Configure your uploaded data</p> <ol> <li>Give your visualisation a name.</li> <li>For the Info column, select \u201cgene_id\u201d.</li> <li>Add two conditions: g1 and g3. For each condition, select the three     samples which correspond with the condition.</li> <li>Set min gene CPM to 0.5 in at least 3 samples.</li> <li>Click Save changes and view your data.</li> </ol> <p></p> <p>\\endshowable</p> <p>Read through the Degust tour of features. Explore the parallel coordinates plot, MA plot, MDS plot, heatmap and gene list. Each is fully interactive and influences other portions on the display depending on what is selected.</p> <p></p> <p>On the right side of the page is an options module which can set thresholds to filter genes using statistical significance or absolute-fold-change.</p> <p>On the left side is a dropdown box you can specify the method (Voom/Limma or edgeR) used to perform differential expression analysis on the data. You can also view the R code by clicking \u201cShow R code\u201d under the options module on the right.</p> <p>4. Explore the demo data</p> <p>Degust also provides an example dataset with 4 conditions and more genes. You can play with the demo dataset by clicking on the \u201cTry the demo\u201d button on the Degust homepage. The demo dataset includes a column with an EC number for each gene. This means genes can be displayed on Kegg pathways using the module on the right.</p> <p>5. Explore the full dataset</p> <p>The FASTQ files we started with is only a small proportion of the full dataset. If you wish, you can download the full count matrix here, upload it to Degust, and explore the results.</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial/#section-5-deseq2","title":"Section 5. DESeq2","text":"<p>In this section we\u2019ll use the \u201cDESeq2\u201d tool in Galaxy to do our differential gene analysis. This tool uses the separate HTSeq files we generated in section 4.</p> <p>Similar to Voom/Limma or edgeR that was used in Degust to statistically test our data, DESeq2 will:</p> <ul> <li>statistically test for expression differences in normalised read counts for     each gene, taking into account the variance observed between samples,  </li> <li>for each gene, calculate the p-value of the gene being differentially     expressed\u2013 this is the probability of seeing the data or something more     extreme given the null hypothesis (that the gene is not differentially     expressed between the two conditions),</li> <li>for each gene, estimate the fold change in expression between the two     conditions.</li> </ul> <p></p> <ol> <li>Use DESeq2 to find differentially expressed features from the count data.     In the left tool panel menu, under NGS Analysis, select NGS: RNA Analysis     &gt; DESeq2 and set the parameters as follows:<ul> <li>1: Factor<ul> <li>Specify a factor name: gravity</li> <li>1: Factor level:<ul> <li>Specify a factor level: g1 (Select the three g1 htseq-count files.)<ul> <li>g1_01</li> <li>g1_02</li> <li>g1_03</li> </ul> </li> </ul> </li> <li>2: Factor level:<ul> <li>Specify a factor level: g3 (Select the three g3 htseq-count files.)<ul> <li>g3_01</li> <li>g3_02</li> <li>g3_03</li> </ul> </li> </ul> </li> <li>Use defaults for the other fields</li> <li>Execute</li> </ul> </li> </ul> </li> </ol> <p></p> <ol> <li>Have a look at the outputs of DESeq2. We will now filter significant     (adjusted p-value &lt; 0.05) genes from the DESeq2 result file.     Under Basic Tools, click on Filter and Sort &gt; Filter:<ul> <li>Filter: \u201cDESeq2 result file on data \u2026\u201d</li> <li>With following condition: c7 &lt; 0.05</li> <li>Execute</li> </ul> </li> </ol> <p>How many differentially expressed genes with adjusted p-value &lt; 0.05 are there?</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial/#section-6-the-importance-of-replicates","title":"Section 6. The importance of replicates","text":"<ol> <li> <p>Repeat the previous differential expression analysis with two samples in     each group instead of three. How do you expect your results to differ when     using fewer samples?</p> </li> <li> <p>Filter genes with adjusted-p-value &lt; 0.05. How many genes are significant?</p> </li> <li> <p>Run DESeq2 again, using only one sample from each group. How many genes are     now significant?</p> </li> <li> <p>Can you find genes that were identified as differentially expressed when     using three samples in each condition that were not identified as     differentially expressed when using two samples? What do you expect these     gene\u2019s counts or logFC values to look like compared to genes that remained     statistically significance? Have a look at the counts or the logFC values     of these genes.</p> </li> </ol> <p>The identification of differentially expressed genes is based on the size of the difference in expression and the variance observed across multiple replicates. This demonstrates how important it is to have biological replicates in differential gene expression experiments.</p> <p>CG1674 is an example of a gene that showed up as differentially expressed when we did a 3 vs 3 comparsion but not with a 2 vs 2 comparsion. If we say that genes like CG1674 was truly differentially expressed, we can call these instances where the true differentially expressed genes are not identified as false negatives. Generally, increasing replicates decreases the number of false negatives.</p> <p>It is also more likely to see more false positives when using an insufficient number of replicates. False positives can be defined as identifying a gene as differentially expressed when it is, in reality, not.</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial/#optional-extension","title":"Optional extension","text":"<p>Have a go at doing another differential expression analysis with the following Saccharomyces cerevisiae data from chromosome I. This time, the two conditions are called \u2018batch\u2019 and \u2018chem\u2019, and like before, there are three samples per condition.</p> <p>Batch sequence data:</p>  https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/batch1_chrI_1.fastq  https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/batch1_chrI_2.fastq  https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/batch2_chrI_1.fastq  https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/batch2_chrI_2.fastq  https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/batch3_chrI_1.fastq  https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/batch3_chrI_2.fastq  <p>Chem sequence data:</p>  https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/chem1_chrI_1.fastq  https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/chem1_chrI_2.fastq  https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/chem2_chrI_1.fastq  https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/chem2_chrI_2.fastq  https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/chem3_chrI_1.fastq  https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/chem3_chrI_2.fastq  <p>Gene annotation:</p>  https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/genes.gtf"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial_2018/","title":"Rna seq basic tutorial 2018","text":""},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial_2018/#rna-seq-differential-gene-expression","title":"RNA-Seq - Differential Gene Expression","text":"<p>Authors: Jessica Chung, Mahtab Mirmomeni, Andrew Lonie</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial_2018/#tutorial-overview","title":"Tutorial Overview","text":"<p>In this tutorial we cover the concepts of RNA-seq differential gene expression (DGE) analysis using a simulated dataset from the common fruit fly, Drosophila melanogaster.</p> <p>The tutorial is designed to introduce the tools, datatypes and workflows of an RNA-seq DGE analysis. In practice, real datasets would be much larger and contain sequencing and alignment errors that make analysis more difficult.</p> <p>In this tutorial we will:  </p> <ul> <li>introduce the types of files typically used in RNA-seq analysis</li> <li>align RNA-seq reads with an aligner (HISAT2)</li> <li>visualise RNA-seq alignment data with IGV</li> <li>use a number of different methods to find differentially expressed genes</li> <li>understand the importance of replicates for differential expression analysis</li> </ul> <p>This tutorial does not cover the following steps that we might do in a real RNA-seq DGE analysis:  </p> <ul> <li>QC (quality control) of the raw sequence data</li> <li>Trimming the reads for quality and for adaptor sequences</li> <li>QC of the RNA-seq alignment data  </li> </ul> <p>These steps have been omitted because the data we use in this tutorial is synthetic and has no quality issues, unlike real data.</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial_2018/#learning-objectives","title":"Learning Objectives","text":"<p>At the end of this tutorial you will be able to:</p> <ul> <li>understand the basic workflow of alignment, quantification, and testing,    for RNA-seq differential expression analysis</li> <li>process raw RNA sequence data into a list of differentially    expressed genes</li> <li>understand the relationship between the number of biological replicates    in an experiment and the statistical power available to detect differentially    expressed genes</li> </ul>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial_2018/#requirements","title":"Requirements","text":"<p>Participants with no previous Galaxy experience are strongly recommended to attend the \u201cIntroduction to Galaxy\u201d workshop first.</p> <p>Attendees are required to bring their own laptop computers.</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial_2018/#the-data","title":"The data","text":"<p>The sequencing data you will be working with is simulated from Drosophila melanogaster. The experiment has two conditions, WT (wildtype) and KO (knockout), and three samples in each condition. The sequencing data is paired-end, so there are two files for each of the six samples. Your aim will be to find differentially expressed genes in WT vs KO.</p> <p></p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial_2018/#section-1-preparation","title":"Section 1: Preparation","text":"<p>1.  Register as a new user in Galaxy if you don\u2019t already have an account</p> <ul> <li>Open a browser and go to a Galaxy server. For example, you could use Galaxy Australia. Recommended browsers include Firefox and Chrome. Internet Explorer is not supported.</li> <li>Register as a new user by clicking User &gt; Register on the top dark-grey bar. Alternatively, if you already have an account, login by clicking User &gt; Login.</li> </ul> <p>2.  Import the RNA-seq data for the workshop.</p> <p>If you are using Galaxy Australia, go to Shared Data &gt; Data Libraries in the top toolbar, and select Galaxy Australia Training Material: RNA-Seq: Fly RNA-Seq. Select (tick) all of the files and click To History, and choose as Datasets, then Import.</p> <p>Alternatively, if you are using your own personal Galaxy server or a different Galaxy server, you can import the data like this:</p> <ol> <li>In the tool panel located on the left, under Basic Tools select Get     Data &gt; Upload File. Click on the Paste/Fetch data button on the     bottom section of the pop-up window.</li> <li> <p>Upload the sequence data by pasting the following links into the text     input area.     These six files are three paired-end samples from the WT flies. Make sure     the type is specified as \u2018fastqsanger\u2019 when uploading.      https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/rna_seq_basic/WT_01_R1.fastq https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/rna_seq_basic/WT_01_R2.fastq https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/rna_seq_basic/WT_02_R1.fastq https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/rna_seq_basic/WT_02_R2.fastq https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/rna_seq_basic/WT_03_R1.fastq https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/rna_seq_basic/WT_03_R2.fastq      These six files are three paired-end samples from the KO flies.     Make sure the type is specified as \u2018fastqsanger\u2019 when uploading.      https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/rna_seq_basic/KO_01_R1.fastq https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/rna_seq_basic/KO_01_R2.fastq https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/rna_seq_basic/KO_02_R1.fastq https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/rna_seq_basic/KO_02_R2.fastq https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/rna_seq_basic/KO_03_R1.fastq https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/rna_seq_basic/KO_03_R2.fastq      Then, upload this file of gene definitions. You don\u2019t need to specify     the type for this file as Galaxy will auto-detect the file as a GTF     file.      https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/rna_seq_basic/ensembl_dm3.chr4.gtf      You should now have 13 files in your history.</p> <p>Note: If you log out of Galaxy and log back at a later time your data and results from previous experiments will be available in the right panel of your screen called the \u2018History\u2019</p> </li> </ol> <p>3.  View and have an understanding of the files involved in RNA-seq analysis.</p> <ol> <li> <p>You should now have the following files in your Galaxy history:</p> <p>6 files containing paired-ended reads for the WT samples: <ul> <li>WT_01_R1.fastq <li>WT_01_R2.fastq <li>WT_02_R1.fastq <li>WT_02_R2.fastq <li>WT_03_R1.fastq <li>WT_03_R2.fastq <p>6 files containing paired-ended reads for the KO samples: <ul> <li>KO_01_R1.fastq <li>KO_01_R2.fastq <li>KO_02_R1.fastq <li>KO_02_R2.fastq <li>KO_03_R1.fastq <li>KO_03_R2.fastq <p>And 1 gene annotation file: <ul> <li>ensembl_dm3.chr4.gtf <p>These files can be renamed by clicking the pen icon if you wish.</p> </li> <li> <p>These 12 sequencing files are in FASTQ format and have the file     extension: .fastq. If you are not familiar with the FASTQ format, click     here for an overview.  </p> <p>Each condition has three samples, and each sample has two files (an R1 file containing forward reads and an R2 file containing reverse reads).</p> <p>Click on the eye icon to the top right of any FASTQ file to view the first part of the file.</p> <p>Note: Since the reads in this dataset are synthetic, they do not have real quality scores.</p> <p>Note: The reads are paired-end, i.e. WT_01_R1.fastq and WT_01_R2.fastq are paired reads from one sequencing run. If you\u2019re unfamiliar with paired-end sequencing, you can read about it here.</p> </li> <li> <p>The gene annotation file (ensembl_dm3.chr4.gtf) is in GTF format. This file     describes where the genes are located in the D. melanogaster reference     genome, filtered for genes on chromosome 4.     Each feature is defined by a chromosomal start and end point, feature type     (CDS, gene, exon etc), and parent gene and transcript.     We will examine this file more closely later in Section 3 of this     tutorial.     More information on the GTF format can be found     here.</p> </li>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial_2018/#convert-the-gtf-to-a-gff-file","title":"Convert the GTF to a GFF file","text":"<p>This is needed for downstream analysis.</p> <p>In the tools panel, search for \u201cGTF\u201d and click on \u201cGTF-to-GFF converter\u201d.</p> <p>Select the GTF file and click \u201cExecute\u201d.</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial_2018/#section-2-alignment-with-hisat2","title":"Section 2: Alignment with HISAT2","text":"<p>In this section we map the reads in our FASTQ files to a reference genome. As these reads originate from mRNA, we expect some of them will cross exon/intron boundaries when we align them to the reference genome. We will use HISAT to perform our alignment. HISAT2 is a fast, splice-aware, alignment program that is a successor to TopHat2. More information on HISAT2 can be found here.</p> <p>1.  Align the RNA-seq reads to a reference genome.</p> <p>In the left tool panel menu, under NGS Analysis, select NGS: RNA Analysis &gt; HISAT2 and set the parameters as follows:  </p> <ul> <li> <p>Source for the reference genome to align against: Use built-in genome</p> </li> <li> <p>Select a reference genome: Fruit Fly (Drosophila melanogaster): dm3</p> </li> </ul> <ul> <li>Single end or paired reads? Paired end</li> <li> <p>Forward reads: (Click on the multiple datasets icon (which looks like two pieces of paper in a stack) and select all six of the forward FASTQ files ending in *1.fastq. This should be correspond to every second file (1,3,5,7,9,11). This can be done by holding down the ctrl key (Windows) or the command key (OSX) to select multiple files.)</p> <ul> <li>WT_01_R1.fastq</li> <li>WT_02_R1.fastq</li> <li>WT_03_R1.fastq</li> <li>KO_01_R1.fastq</li> <li>KO_02_R1.fastq</li> <li>KO_03_R1.fastq</li> </ul> </li> <li> <p>Reverse reads: (Click on the multiple datasets icon and select all six of the reverse FASTQ files ending in *2.fastq.)  </p> <ul> <li>WT_01_R2.fastq</li> <li>WT_02_R2.fastq</li> <li>WT_03_R2.fastq</li> <li>KO_01_R2.fastq</li> <li>KO_02_R2.fastq</li> <li>KO_03_R2.fastq</li> </ul> </li> <li> <p>Use defaults for the other fields</p> </li> <li>Execute</li> </ul> <p>Your tool interface panel will look similar to this (although the options may be in a different order):</p> <p></p> <p>Note: This may take a few minutes, depending on how busy the server is.</p> <p>2.  Examine the alignment stats</p> <p>HISAT2 outputs one bam file for each set of paired-end read files. Rename the 6 files into a more meaningful name (e.g. \u2018HISAT on data 2 and data 1\u2019 to \u2018WT_01.bam\u2019) by using the pen icon next to the file.</p> <p>These files are BAM files (short for Binary Alignment Map) and like the name suggests, is a binary file. Galaxy automatically converts these to a plain-text equivalent (SAM) file to view, when you click on the eye icon.</p> <p>In section 3, we\u2019ll use a genome viewer to view our alignments.</p> <p>HISAT2 also outputs some information to stderr which we can preview by clicking on the dataset name. To view the raw file, click the \u201cinfo\u201d button (view details) of a dataset, say WT_01.bam, and find the \u201cTool Standard Error\u201d row under \u201cJob Information\u201d in the table. Click the \u201cstderr\u201d link to view the alignment summary output.</p> <pre><code>16046 reads; of these:\n  16046 (100.00%) were paired; of these:\n    104 (0.65%) aligned concordantly 0 times\n    13558 (84.49%) aligned concordantly exactly 1 time\n    2384 (14.86%) aligned concordantly &gt;1 times\n    ----\n    104 pairs aligned concordantly 0 times; of these:\n      1 (0.96%) aligned discordantly 1 time\n    ----\n    103 pairs aligned 0 times concordantly or discordantly; of these:\n      206 mates make up the pairs; of these:\n        106 (51.46%) aligned 0 times\n        91 (44.17%) aligned exactly 1 time\n        9 (4.37%) aligned &gt;1 times\n99.67% overall alignment rate\n</code></pre> <p>Here we see we have a very high alignment rate, which is expected since the data we have is simulated and has no contamination.</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial_2018/#section-3-visualise-the-aligned-reads","title":"Section 3: Visualise the aligned reads","text":"<p>The purpose of this step is to :</p> <ul> <li>visualise the quantitative, exon-based nature of RNA-seq data</li> <li>visualise the expression differences between samples represented by the   quantity of reads, and</li> <li>become familiar with interactive visualisation tools such as JBrowse.   </li> </ul>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial_2018/#viewing-in-jbrowse","title":"Viewing in JBrowse","text":"<p>To visualise the alignment data:</p> <ul> <li>search for \u201cJBrowse\u201d in the tool panel search bar</li> <li>for \u201cReference genome to display\u201d: Use a built-in genome</li> <li>for \u201cSelect a reference genome\u201d: Fruit Fly dm3</li> <li>leave other settings as default, except:</li> </ul> <p>Set up a track for mapped RNA-seq reads:</p> <ul> <li>click \u201cInsert Track Group\u201d and then \u201cInsert Annotation Track\u201d</li> <li>for \u201cTrack Type\u201d: BAM pileups</li> <li>for \u201cBAM Track Data\u201d: select the multiple datasets icon, then select a bam from each condition, e.g., WT_01.bam and KO_01.bam (your files may be named differently)</li> <li>for \u201cAutogenerate SNP Track\u201d: Yes</li> </ul> <p>Set up a track for the annotated genome:</p> <ul> <li>click \u201cInsert Track Group\u201d and then \u201cInsert Annotation Track\u201d</li> <li>for \u201cTrack Type\u201d: GFF/GFF3/BED/GBK Features</li> <li>for \u201cGFF/GFF3/BED Track Data\u201d: select the reference genome in GFF format, e.g. the converted GTF file (ensembl_dm3.chr4.gtf) - your files may be named differently</li> <li>Execute</li> </ul> <p>JBrowse will create a single file with this visualization (this may take a while).</p> <ul> <li>When it is ready, click the eye icon to display in the centre panel.</li> <li>Make sure all \u201cAvailable Tracks\u201d on the left are ticked.</li> <li>Zoom in and out with the plus and minus buttons.</li> <li>Select \u201cChr4\u201d.</li> </ul> <p></p> <p>The aim of this tutorial is to statistically test differential expression, but first it\u2019s useful to reassure ourselves that the data looks right at this stage by comparing the aligned reads for condition 1 (WT) and condition 2 (KO).</p> <p>If you can\u2019t find any, try changing the location to chr4:816349-830862 using the field on the top toolbar. The \u2018Sox102F\u2019 gene in this area looks like it has many more reads mapped in WT than in KO. Hover over the coverage track to view the read depth of the area. But, of course, it may be that there are many more reads in the library for WT than KO. So we need to statistically normalise the read counts before we can say anything definitive, which we will do in the next section.</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial_2018/#viewing-in-igv","title":"Viewing in IGV","text":"<p>To visualise the alignment data:</p> <ol> <li>Click on one of the BAM files, for example \u2018WT_01.bam\u2019.</li> <li>Click on Display with IGV \u2018webcurrent\u2019 (or \u2018local\u2019 if you have IGV     installed on your computer. You will need to open IGV before you click on     \u2018local\u2019). This should download a .jnlp Java Web Start file to your     computer. Open this file to run IGV. (You will need Java installed on your     computer to run IGV)</li> <li>Once IGV opens, it will show you the BAM file. (Note:     this may take a bit of time as the data is downloaded to IGV)</li> <li>Select chr4 from the second drop box under the toolbar. Zoom in to     view alignments of reads to the reference genome.     You should see the characteristic distribution of RNA-seq reads across     the exons of the genes, with some gaps at intron/exon boundaries.     The number of reads aligned to a particular gene is proportional to the     abundance of the RNA derived from that gene in the sequenced sample.     (Note that IGV already has a list of known genes of most major organisms     including Drosophila, which is why you can see the genes in the bottom     panel of IGV.)</li> <li> <p>View differentially expressed genes by viewing two alignment files     simultaneously. The aim of this tutorial is to statistically test     differential expression, but first it\u2019s useful to reassure ourselves     that the data looks right at this stage by comparing the aligned reads     for condition 1 (WT) and condition 2 (KO).</p> <p>Select \u2018KO_02.bam\u2019 and click on \u2018display with IGV local\u2019. This time we are using the \u2018local\u2019 link, as we already have an IGV window up and running locally from the last step. Once the file has loaded, try to find some genes that look differentially expressed.</p> <p></p> <p>If you can\u2019t find any, try changing the location to chr4:816349-830862 using the field on the top toolbar. The \u2018Sox102F\u2019 gene in this area looks like it has many more reads mapped in WT than in KO. Hover over the coverage track to view the read depth of the area. But, of course, it may be that there are many more reads in the library for WT than KO. So we need to statistically normalise the read counts before we can say anything definitive, which we will do in the next section.</p> </li> </ol>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial_2018/#section-4-quantification","title":"Section 4. Quantification","text":"<p>HTSeq-count counts the number of the reads from each bam file that map to the genomic features in the provided annotation file. For each feature (a gene for example) we will obtain a numerical value associated with the expression of that feature in our sample (i.e. the number of reads that were aligned to that gene).</p> <p>1.  Examine the GTF file</p> <p>Click on the eye icon to display the ensembl_dm3.chr4.gtf file in Galaxy.</p> <p>This GTF file is essentially a list of chromosomal features which together define genes. Each feature is in turn defined by a chromosomal start and end point, feature type (CDS, gene, exon etc), and parent gene and transcript. Importantly, a gene may have many features, but one feature will belong to only one gene. More information on the GTF format can be found here.  The ensembl_dm3.chr4.gtf file contains ~4900 features which together define the 92 known genes on chromosome 4 of Drosophila melanogaster.</p> <p>2.  Run HTSeq-count</p> <ol> <li> <p>Use HTSeq-count to count the number of reads for each feature.     In the left tool panel menu, under NGS Analysis, select     NGS: RNA Analysis &gt; htseq-count and set the parameters as follows:  </p> <ul> <li>Aligned SAM/BAM File:   (Select \u2018Multiple datasets\u2019, then select all six bam files using the shift key.)<ul> <li>WT_01.bam</li> <li>WT_02.bam</li> <li>WT_03.bam</li> <li>KO_01.bam</li> <li>KO_02.bam</li> <li>KO_03.bam</li> </ul> </li> <li>GFF File: ensembl_dm3.chr4.gtf</li> <li>Stranded: No</li> <li>ID Attribute: gene_name</li> <li>Use defaults for the other fields</li> <li>Execute</li> </ul> </li> <li> <p>In the previous step, each input BAM file outputted two files. The first     file contains the counts for each of our genes. The second file     (ending with \u201c(no feature)\u201d) contains the stats for the reads that weren\u2019t     able to be uniquely aligned to a gene. We don\u2019t need the \u201c(no feature)\u201d     files so we can remove then with the delete \u201cX\u201d button on the top right.</p> </li> <li> <p>Rename the remaining six files from htseq-count to meaningful names,     such as WT_01, WT_02, etc.</p> </li> </ol> <p>3.  Generate a count matrix</p> <ol> <li>Generate a combined count matrix by combining our six files.     In the left tool panel menu, under NGS Analysis, select     NGS: RNA Analysis &gt; Generate count matrix and set the parameters as follows:  <ul> <li>Count files from your history:     (Select all six count files using the shift key.)<ul> <li>WT_01</li> <li>WT_02</li> <li>WT_03</li> <li>KO_01</li> <li>KO_02</li> <li>KO_03</li> </ul> </li> <li>Use defaults for the other fields</li> <li>Execute</li> </ul> </li> </ol> <p>Examine the outputted matrix by using the eye icon. Each column corresponds to a sample and each row corresponds to a gene. By sight, see if you can find a gene you think is differentially expressed just by looking at the counts.</p> <p>We now have a count matrix which we will now use to find differentially expressed genes between WT samples and KO samples.</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial_2018/#section-5-degust","title":"Section 5. Degust","text":"<p>Degust is an interactive visualiser for analysing RNA-seq data. It runs as a web service and can be found at degust.erc.monash.edu/.</p> <p></p> <p>1. Load count data into Degust</p> <ol> <li>In Galaxy, download the count matrix you generated in the last section     using the disk icon.</li> <li>Go to degust.erc.monash.edu/     and click on \u201cUpload your counts file\u201d.</li> <li>Click \u201cChoose file\u201d and upload the recently downloaded Galaxy tabular file     containing your RNA-seq counts.</li> </ol> <p>2. Configure your uploaded data</p> <ol> <li>Give your visualisation a name.</li> <li>For the Info column, select \u201cgene_id\u201d.</li> <li>Add two conditions: WT and KO. For each condition, select the three     samples which correspond with the condition.</li> <li>Set min gene CPM to 1 in at least 3 samples.</li> <li>Click Save changes and view your data.</li> </ol> <p></p> <p>\\endshowable</p> <p>Read through the Degust tour of features. Explore the parallel coordinates plot, MA plot, MDS plot, heatmap and gene list. Each is fully interactive and influences other portions on the display depending on what is selected.</p> <p></p> <p>On the right side of the page is an options module which can set thresholds to filter genes using statistical significance or absolute-fold-change.</p> <p>On the left side is a dropdown box you can specify the method (Voom/Limma or edgeR) used to perform differential expression analysis on the data. You can also view the R code by clicking \u201cShow R code\u201d under the options module on the right.</p> <p>4. Explore the demo data</p> <p>Degust also provides an example dataset with 4 conditions and more genes. You can play with the demo dataset by clicking on the \u201cTry the demo\u201d button on the Degust homepage. The demo dataset includes a column with an EC number for each gene. This means genes can be displayed on Kegg pathways using the module on the right.</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial_2018/#section-5-deseq2","title":"Section 5. DESeq2","text":"<p>In this section we\u2019ll use the \u201cDESeq2\u201d tool in Galaxy to do our differential gene analysis. This tool uses the separate HTSeq files we generated in section 4.</p> <p>Similar to Voom/Limma or edgeR that was used in Degust to statistically test our data, DESeq2 will:</p> <ul> <li>statistically test for expression differences in normalised read counts for     each gene, taking into account the variance observed between samples,  </li> <li>for each gene, calculate the p-value of the gene being differentially     expressed\u2013 this is the probability of seeing the data or something more     extreme given the null hypothesis (that the gene is not differentially     expressed between the two conditions),</li> <li>for each gene, estimate the fold change in expression between the two     conditions.</li> </ul> <p></p> <ol> <li>Use DESeq2 to find differentially expressed features from the count data.     In the left tool panel menu, under NGS Analysis, select NGS: RNA Analysis     &gt; DESeq2 and set the parameters as follows:<ul> <li>1: Factor<ul> <li>Specify a factor name: condition</li> <li>1: Factor level:<ul> <li>Specify a factor level: WT (Select the three WT htseq-count files.)<ul> <li>WT_01</li> <li>WT_02</li> <li>WT_03</li> </ul> </li> </ul> </li> <li>2: Factor level:<ul> <li>Specify a factor level: KO (Select the three KO htseq-count files.)<ul> <li>KO_01</li> <li>KO_02</li> <li>KO_03</li> </ul> </li> </ul> </li> <li>Use defaults for the other fields</li> <li>Execute</li> </ul> </li> </ul> </li> </ol> <p></p> <ol> <li>Have a look at the outputs of DESeq2. We will now filter significant     (adjusted p-value &lt; 0.05) genes from the DESeq2 result file.     Under Basic Tools, click on Filter and Sort &gt; Filter:<ul> <li>Filter: \u201cDESeq2 result file on data \u2026\u201d</li> <li>With following condition: c7 &lt; 0.05</li> <li>Execute</li> </ul> </li> </ol> <p>How many differentially expressed genes with adjusted p-value &lt; 0.05 are there?</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial_2018/#section-6-the-importance-of-replicates","title":"Section 6. The importance of replicates","text":"<ol> <li> <p>Repeat the previous differential expression analysis with two samples in     each group instead of three. How do you expect your results to differ when     using fewer samples?</p> </li> <li> <p>Filter genes with adjusted-p-value &lt; 0.05. How many genes are significant?</p> </li> <li> <p>Run DESeq2 again, using only one sample from each group. How many genes are     now significant?</p> </li> <li> <p>Can you find genes that were identified as differentially expressed when     using three samples in each condition that were not identified as     differentially expressed when using two samples? What do you expect these     gene\u2019s counts or logFC values to look like compared to genes that remained     statistically significance? Have a look at the counts or the logFC values     of these genes.</p> </li> </ol> <p>The identification of differentially expressed genes is based on the size of the difference in expression and the variance observed across multiple replicates. This demonstrates how important it is to have biological replicates in differential gene expression experiments.</p> <p>Myoglianin is an example of a gene that showed up as differentially expressed when we did a 3 vs 3 comparsion but not with a 2 vs 2 comparsion. If we say that genes like Myoglianin was truly differentially expressed, we can call these instances where the true differentially expressed genes are not identified as false negatives. Generally, increasing replicates decreases the number of false negatives.</p> <p>It is also more likely to see more false positives when using an insufficient number of replicates. False positives can be defined as identifiying a gene as differentially expressed when it is, in reality, not.</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tutorial_2018/#optional-extension","title":"Optional extension","text":"<p>Have a go at doing another differential expression analysis with the following Saccharomyces cerevisiae data from chromosome I. This time, the two conditions are called \u2018batch\u2019 and \u2018chem\u2019, and like before, there are three samples per condition.</p> <p>Batch sequence data:</p>  https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/batch1_chrI_1.fastq  https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/batch1_chrI_2.fastq  https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/batch2_chrI_1.fastq  https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/batch2_chrI_2.fastq  https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/batch3_chrI_1.fastq  https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/batch3_chrI_2.fastq  <p>Chem sequence data:</p>  https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/chem1_chrI_1.fastq  https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/chem1_chrI_2.fastq  https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/chem2_chrI_1.fastq  https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/chem2_chrI_2.fastq  https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/chem3_chrI_1.fastq  https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/chem3_chrI_2.fastq  <p>Gene annotation:</p>  https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_ADVNCD/genes.gtf"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tuxedo/","title":"RNAseq analysis using Tuxedo (Galaxy)","text":""},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tuxedo/#rna-seq-differential-gene-expression-basic-tutorial","title":"RNA-Seq Differential Gene Expression: Basic Tutorial","text":"<p>Authors: Mahtab Mirmomeni, Andrew Lonie, Jessica Chung</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tuxedo/#tutorial-overview","title":"Tutorial Overview","text":"<p>In this tutorial we cover the concepts of RNA-seq differential gene expression (DGE) analysis using a small synthetic dataset from the model organism, Drosophila melanogaster.</p> <p>The tutorial is designed to introduce the tools, datatypes and workflow of an RNA-seq DGE analysis. In practice, real datasets would be much larger and would contain sequencing and alignment errors that make analysis more difficult.</p> <p>Our input data for this tutorial will be raw RNA-seq reads from two experimental conditions and we will output a list of differentially expressed genes identified to be statistically significant.</p> <p>In this tutorial we will:  </p> <ul> <li>introduce the types of files typically used in RNA-seq analysis</li> <li>align RNA-seq reads with Tophat</li> <li>visualise RNA-seq alignment data with IGV</li> <li>find differentially expressed genes with Cuffdiff</li> <li>understand the importance of replicates for differential expression analysis</li> </ul> <p>This tutorial does not cover the following steps that you would do in a real RNA-seq DGE analysis:  </p> <ul> <li>QC (quality control) of the raw sequence data</li> <li>Trimming the reads for quality and for adaptor sequences</li> <li>QC of the RNA-seq alignment data  </li> </ul> <p>These steps have been omitted because the data we use in this tutorial is synthetic and has no quality issues, unlike real data.</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tuxedo/#learning-objectives","title":"Learning Objectives","text":"<p>At the end of this tutorial you should:</p> <ul> <li>Be familiar with the Tuxedo Protocol workflow for RNA-seq differential    expression analysis</li> <li>Be able to process raw RNA sequence data into a list of differentially    expressed genes</li> <li>Be aware of how the relationship between the number of biological replicates    in an experiment and the statistical power available to detect differentially    expressed genes</li> </ul>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tuxedo/#background","title":"Background","text":""},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tuxedo/#where-does-the-data-in-this-tutorial-come-from","title":"Where does the data in this tutorial come from?","text":"<p>The data for this tutorial is from an RNA-seq experiment looking for differentially expressed genes in D. melanogaster (fruit fly) between two experimental conditions. The experiment and analysis protocol we will follow is derived from a paper in Nature Protocols by the research group responsible for one of the most widely used set of RNA-seq analysis tools: \u201cDifferential gene and transcript expression analysis of RNA-seq experiments with TopHat and Cufflinks\u201d (Trapnell et al 2012).</p> <p>The sequence datasets are single-end Illumina synthetic short reads, filtered to only include chromosome 4 to facilitate faster mapping (which would otherwise take hours). We\u2019ll use data from three biological replicates from each of the two experimental conditions.</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tuxedo/#the-tuxedo-protocol","title":"The Tuxedo Protocol","text":"<p>The workflow this tutorial is based on is the Tuxedo Protocol. Reads are first mapped with TopHat and a transcriptome is then assembled using Cufflinks. Cuffdiff then quantifies the expression in each condition, and tests for differential expression.</p> <p>In this tutorial we use a simpler protocol as the D. melanogaster transcriptome is already very well characterised.</p> <p>More information about the Tuxedo protocol can be found here.</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tuxedo/#section-1-preparation-15-min","title":"Section 1: Preparation [15 min]","text":""},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tuxedo/#1-register-as-a-new-user-in-galaxy-if-you-dont-already-have-an-account-what-is-galaxy","title":"1.  Register as a new user in Galaxy if you don\u2019t already have an account (what is Galaxy?)","text":"<ol> <li>Open a browser and go to a Galaxy server. This can either be your     personal GVL server you started previously,     the public Galaxy Tutorial server     or the public Galaxy Australia.     Recommended browsers include Firefox and Chrome. Internet Explorer     is not supported.</li> <li>Register as a new user by clicking User &gt; Register on the top     dark-grey bar. Alternatively, if you already have an account, login by     clicking User &gt; Login.</li> </ol>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tuxedo/#2-import-the-rna-seq-data-for-the-workshop","title":"2.  Import the RNA-seq data for the workshop.","text":"<p>If you are using the public Galaxy Tutorial server or Galaxy Melbourne server, you can import the data directly from Galaxy. You can do this by going to Shared Data &gt; Published Histories on the top toolbar, and selecting the history called RNA-Seq_Basic_Sec_1. Then click on \u201cImport History\u201d on the top right and \u201cstart using this history\u201d to switch to the newly imported history.</p> <p>Alternatively, if you are using your own personal Galaxy server, you can import the data by:</p> <ol> <li>In the tool panel located on the left, under Basic Tools select Get     Data &gt; Upload File. Click on the Paste/Fetch data button on the     bottom section of the pop-up window.</li> <li>Upload the sequence data by pasting the following links into the text     input area:      https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_BASIC/C1_R1.chr4.fq https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_BASIC/C1_R2.chr4.fq https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_BASIC/C1_R3.chr4.fq https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_BASIC/C2_R1.chr4.fq https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_BASIC/C2_R2.chr4.fq https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_BASIC/C2_R3.chr4.fq      Select the type as \u2018fastqsanger\u2019 and press start to upload the     files to Galaxy.</li> <li>Upload the annotated gene list reference by pasting the following link     into the text input area:      https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/RNAseqDGE_BASIC/ensembl_dm3.chr4.gtf      You don\u2019t need to specify the type for this file as Galaxy will     auto-detect the file as a GTF file.</li> </ol>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tuxedo/#3-view-and-have-an-understanding-of-the-files-involved-in-rna-seq-analysis","title":"3.  View and have an understanding of the files involved in RNA-seq analysis.","text":"<ol> <li> <p>You should now have the following files in your Galaxy history:</p> <p>6 files containing single-ended reads: <ul> <li>C1_R1.chr4.fq <li>C1_R2.chr4.fq <li>C1_R3.chr4.fq <li>C2_R1.chr4.fq <li>C2_R2.chr4.fq <li>C2_R3.chr4.fq <p>And 1 gene annotation file: <ul> <li>ensembl_dm3.chr4.gtf <p>These files can be renamed by clicking the pen icon if you wish.</p> </li> <li> <p>These 6 sequencing files are in FASTQ format and have the file     extension: .fq. If you are not familiar with the FASTQ format, click     here for an overview.  </p> <p>Click on the eye icon to the top right of each FASTQ file to view the first part of the file. The first 3 files are from the first condition (C1) and has 3 replicates labelled R1, R2, and R3. The next 3 FASTQ files are from the second condition (C2) and has 3 replicates labelled R1, R2, and R3.</p> <p>In this tutorial, we aim to find genes which are differentially expressed between condition C1 and condition C2.</p> </li> <li> <p>The gene annotation file is in GTF format. This file describes where     the genes are located in the Drosophila reference genome.     We will examine this file more closely later in Section 3 of this     tutorial.</p> </li> <p>NOTE: Since the reads in this dataset are synthetic, they do not have real quality scores. NOTE: If you log out of Galaxy and log back at a later time your data and results from previous experiments will be available in the right panel of your screen called the \u2018History\u2019</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tuxedo/#section-2-align-reads-with-tophat-30-mins","title":"Section 2: Align reads with Tophat [30 mins]","text":"<p>In this section we map the reads in our FASTQ files to a reference genome. As these reads originate from mRNA, we expect some of them will cross exon/intron boundaries when we align them to the reference genome. Tophat is a splice-aware mapper for RNA-seq reads that is based on Bowtie. It uses the mapping results from Bowtie to identify splice junctions between exons. More information on Tophat can be found here.</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tuxedo/#1-align-the-rna-seq-short-reads-to-a-reference-genome","title":"1.  Align the RNA-seq short reads to a reference genome.","text":"<p>In the left tool panel menu, under NGS Analysis, select NGS: RNA Analysis &gt; Tophat and set the parameters as follows:  </p> <ul> <li>Is this single-end or paired-end data? Single-end  </li> <li>RNA-Seq FASTQ file:   (Click on the multiple datasets icon and select all six of the FASTQ   files. This can be done by holding down the shift key to select a range   of files, or holding down the ctrl key (Windows) or command key (OSX) and   clicking to select multiple files.)<ul> <li>C1_R1.chr4.fq</li> <li>C1_R2.chr4.fq</li> <li>C1_R3.chr4.fq</li> <li>C2_R1.chr4.fq</li> <li>C2_R2.chr4.fq</li> <li>C2_R3.chr4.fq  </li> </ul> </li> <li>Use a built in reference genome or own from your history: Use   built-in genome</li> <li>Select a reference genome: D. melanogaster Apr. 2006 (BDGP R5/dm3)   (dm3)</li> <li>Use defaults for the other fields</li> <li>Execute</li> </ul> <p></p> <p>Note: This may take a few minutes, depending on how busy the server is.</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tuxedo/#2-examine-the-output-files","title":"2.  Examine the output files","text":"<p>You should have 5 output files for each of the FASTQ input files:</p> <ul> <li>Tophat on data 1: accepted_hits: This is a BAM file containing   sequence alignment data of the reads. This file contains the location   of where the reads mapped to in the reference genome. We will examine   this file more closely in the next step.</li> <li>Tophat on data 1: splice junctions: This file lists all the places   where Tophat had to split a read into two pieces to span an exon   junction.</li> <li>Tophat on data 1: deletions and Tophat on data 1: insertions:   These files list small insertions or deletions found in the reads.   Since we are working with synthetic reads we can ignore Tophat for   Illumina data 1:insertions Tophat for Illumina data 1:deletions for now.</li> <li>Tophat on data 1: align_summary: This file gives some mapping   statistics including the number of reads mapped and the mapping rate.</li> </ul> <p>You should have a total of 30 Tophat output files in your history.</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tuxedo/#3-visualise-the-aligned-reads-with-igv","title":"3.  Visualise the aligned reads with IGV","text":"<p>The purpose of this step is to :</p> <ul> <li>visualise the quantitative, exon-based nature of RNA-seq data</li> <li>visualise the expression differences between samples represented by the   quantity of reads, and</li> <li>become familiar with the Integrative Genomics Viewer   (IGV)\u2013 an interactive   visualisation tool by the Broad Institute.  </li> </ul> <p>To visualise the alignment data:</p> <ol> <li>Click on one of the Tophat accepted hits files, for example \u2018Tophat on     data 1: accepted_hits\u2019.</li> <li>Click on Display with IGV \u2018webcurrent\u2019 (or \u2018local\u2019 if you have IGV     installed on your computer. You will need to open IGV before you click on     \u2018local\u2019). This should download a .jnlp Java Web Start file to your     computer. Open this file to run IGV. (You will need Java installed on your     computer to run IGV)</li> <li>Once IGV opens, it will show you the accepted_hits BAM file. (Note:     this may take a bit of time as the data is downloaded to IGV)</li> <li>Select chr4 from the second drop box under the toolbar. Zoom in to     view alignments of reads to the reference genome.     You should see the characteristic distribution of RNA-seq reads across     the exons of the genes, with some gaps at intron/exon boundaries.     The number of reads aligned to a particular gene is proportional to the     abundance of the RNA derived from that gene in the sequenced sample.     (Note that IGV already has a list of known genes of most major organisms     including Drosophila, which is why you can see the genes in the bottom     panel of IGV.)</li> <li>View one of the splice function files such as \u2018TopHat on data 1: splice     junctions\u2019. You will need to save this file to your local disk     using the disk icon under the details of the file. Then open     the saved .bed file directly in IGV using the File &gt; Load From File     option from IGV. This is because IGV doesn\u2019t automatically stream BED     files from Galaxy.          The junctions file is loaded at the bottom of the     IGV window and splicing events are represented as coloured arcs. The     height and thickness of the arcs are proportional to the read depth.</li> <li> <p>View differentially expressed genes by viewing two alignment files     simultaneously. The aim of this tutorial is to statistically test     differential expression, but first it\u2019s useful to reassure ourselves     that the data looks right at this stage by comparing the aligned reads     for condition 1 (C1) and condition 2 (C2).</p> <p>Select \u2018TopHat on data 4: accepted_hits\u2019 (this is the accepted hits alignment file from first replicate of condition C2) and click on \u2018display with IGV local\u2019. This time we are using the \u2018local\u2019 link, as we already have an IGV window up and running locally from the last step. One the file has loaded, change the location to chr4:325197-341887 using the field on the top toolbar.</p> <p>The middle gene in this area clearly looks like it has many more reads mapped in condition 2 than condition 1, whereas for the surrounding genes the reads look about the same. The middle gene looks like it is differentially expressed. But, of course, it may be that there are many more reads in the readsets for C1 and C2, and the other genes are underexpressed in condition 2. So we need to statistically normalise the read counts before we can say anything definitive, which we will do in the next section.</p> </li> </ol>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tuxedo/#4-optional-visualise-the-aligned-reads-in-trackster","title":"4.  [Optional] Visualise the aligned reads in Trackster","text":"<p>We can also use the inbuilt Galaxy genome browser, Trackster, to visualise alignments. Trackster has fewer features than IGV, but sometimes it may be more convenient to use as it only requires the browser.</p> <ol> <li>On the top bar of Galaxy, select Visualization &gt; New Track Browser.</li> <li>Name your new visualization and select D. melanogaster (dm3) as the     reference genome build.</li> <li>Click the Add Datasets to Visualization button and select Tophat on     data 1: accepted_hits and Tophat on data 4: accepted_hits by using the     checkboxes on the left.</li> <li>Select chr4 from the dropdown box. You can zoom in and out using the     buttons on the top toolbar. You can also add more tracks using the Add     Tracks icon located on the top right.</li> <li>Next to the drop down list, click on the chromosomal position number     display and specify the location chr4:325197-341887.  </li> </ol> <p>Before starting the next section, leave the Trackster interface and return to the analysis view of Galaxy by clicking \u2018Analyze Data\u2019 on the top Galaxy toolbar.</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tuxedo/#section-3-test-differential-expression-with-cuffdiff-45-min","title":"Section 3: Test differential expression with Cuffdiff [45 min]","text":"<p>The aim in this section is to:</p> <ul> <li>generate tables of normalised read counts per gene per condition based on the   annotated reference transcriptome,</li> <li>statistically test for expression differences in normalised read counts for   each gene, taking into account the variance observed between samples,  </li> <li>for each gene, calculate the p-value of the gene being differentially   expressed\u2013 this is the probability of seeing the data or something more   extreme given the null hypothesis (that the gene is not differentially   expressed between the two conditions),</li> <li>for each gene, estimate the fold change in expression between the two   conditions.</li> </ul> <p>All these steps are rolled up into a single tool in Galaxy: Cuffdiff. Cuffdiff is part of the Cufflinks software suite which takes the aligned reads from Tophat and generates normalised read counts and a list of differentially expressed genes based on a reference transcriptome - in this case, the curated Ensembl list of D. melanogaster genes from chromosome 4 that we supply as a GTF (Gene Transfer Format) file. A more detailed explanation of Cufflinks DGE testing can be found here.</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tuxedo/#1-examine-the-reference-transcriptome","title":"1.  Examine the reference transcriptome","text":"<p>Click on the eye icon to display the ensembl_dm3.chr4.gtf reference transcriptome file in Galaxy.</p> <p>The reference transcriptome is essentially a list of chromosomal features which together define genes. Each feature is in turn defined by a chromosomal start and end point, feature type (CDS, gene, exon etc), and parent gene and transcript. Importantly, a gene may have many features, but one feature will belong to only one gene. More information on the GTF format can be found here.  The ensembl_dm3.chr4.gtf file contains ~4900 features which together define the 92 known genes on chromosome 4 of Drosophila melanogaster. Cuffdiff uses the reference transcriptome to aggregate read counts per gene, transcript, transcription start site and coding sequence (CDS). For this tutorial, we\u2019ll only consider differential gene testing, but it is also possible to test for differential expression of transcripts or transcription start sites.</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tuxedo/#2-run-cuffdiff-to-identify-differentially-expressed-genes-and-transcripts","title":"2.  Run Cuffdiff to identify differentially expressed genes and transcripts","text":"<p>In the left tool panel menu, under NGS Analysis, select NGS: RNA Analysis &gt; Cuffdiff and set the parameters as follows:  </p> <ul> <li>Transcripts: ensembl_dm3.chr4.gtf</li> <li>Condition: <ul> <li>1: Condition<ul> <li>name: C1</li> <li>Replicates:<ul> <li>Tophat on data 1: accepted_hits</li> <li>Tophat on data 2: accepted_hits</li> <li>Tophat on data 3: accepted_hits (Multiple datasets can be selected by holding down the shift key or the ctrl key for Windows or the command key for OSX.)</li> </ul> </li> </ul> </li> <li>2: Condition<ul> <li>name: C2</li> <li>Replicates:<ul> <li>Tophat on data 4: accepted_hits</li> <li>Tophat on data 5: accepted_hits</li> <li>Tophat on data 6: accepted_hits</li> </ul> </li> </ul> </li> </ul> </li> <li>Use defaults for the other fields</li> <li>Execute</li> </ul> <p></p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tuxedo/#3-explore-the-cuffdiff-output-files","title":"3.  Explore the Cuffdiff output filesHow many genes are in the Significant_DE_Genes file? What are their names?","text":"<p>There should be 11 output files from Cuffdiff. These files should all begin with something like \u201cCuffdiff on data 37, data 32, and others\u201d.</p> <p>FPKM tracking files: </p> <ul> <li>transcript FPKM tracking</li> <li>gene FPKM tracking</li> <li>TSS groups FPKM tracking</li> <li>CDS FPKM tracking  </li> </ul> <p>These 4 files contain the FPKM (a unit of normalised expression taking into account the transcript length for each transcript and the library size of the sample) for each of the two conditions.</p> <p>Differential expression testing files: </p> <ul> <li>gene differential expression testing</li> <li>transcript differential expression testing</li> <li>TSS groups differential expression testing</li> <li>CDS FPKM differential expression testing</li> <li>CDS overloading diffential expression testing</li> <li>promoters differential expression testing</li> <li>splicing differential expression testing</li> </ul> <p>These 7 files contain the statistical results from testing the level of expression between condition C1 and condition C2.</p> <ol> <li> <p>Examine the tables of normalised gene counts     View the Cuffdiff file \u201cCuffdiff on data x, data x, and others: gene FPKM     tracking\u201d by clicking on the eye icon. The file consists of one row     for each gene from the reference transcriptome, with columns containing the     normalised read counts for each of the two conditions.     Note:  </p> <ul> <li>Cuffdiff gives each gene it\u2019s own \u2018tracking_id\u2019, which equates   to a gene. Multiple transcription start sites are aggregated under a   single tracking_id.</li> <li>A gene encompasses a chromosomal locus which covers all the features   that make up that gene (exons, introns, 5\u2019 UTR, etc).</li> </ul> </li> <li> <p>Inspect the gene differential expression testing file     View the Cuffdiff file \u201cCuffdiff on data x, data x, and others: gene     differential expression testing\u201d by clicking on the eye icon. The     columns of interest are: gene (c3), locus (c4), log2(fold_change) (c10),     p_value (c12), q_value (c13) and significant (c14).</p> </li> <li> <p>Filter based on column 14 (\u2018significant\u2019) - a binary assessment of     q_value &gt; 0.05, where q_value is p_value adjusted for multiple testing.     Under Basic Tools, click on Filter and Sort &gt; Filter:</p> <ul> <li>Filter: \u201cCuffdiff on data....: gene differential expression testing\u201d</li> <li>With following condition: c14==\u2019yes\u2019</li> <li>Execute</li> </ul> <p>This will keep only those entries that Cuffdiff has marked as significantly differentially expressed. We can rename this file (screenshot) by clicking on the pencil icon of the outputted file and change the name from \u201cFilter on data x\u201d to \u201cSignificant_DE_Genes\u201d.</p> </li> <li> <p>Examine the sorted list of differentially expressed genes.     Click on the eye icon next to \u201cSignificant_DE_Genes\u201d to view the data.</p> </li> </ol> <p>     Two genes have been identified as differentially expressed between     conditions C1 and C2:     <ul> <li>Ank located at chr4:137014-150378, and         <li>CG2177 located at chr4:331557-334534          Both genes have q-values of 0.00175.  <p>\u201cCG2177\u201d located at chr4:331557-334534 was the gene that we intuitively (with IGV) saw to be differentially expressed in the previous section, in the broader region of chr4:325197-341887.</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tuxedo/#section-4-repeat-without-replicates-20-min","title":"Section 4. Repeat without replicates [20 min]","text":"<p>In this section, we will run Cuffdiff with fewer replicates.</p> Stop and think:     Why do we need replicates for an RNA-seq differential gene expression     experiment? What do you expect to happen if we only use one sample from     each condition for our analysis?  <ol> <li> <p>Repeat the differential gene expression testing from section 2, but this     time only use one replicate from each condition group (C1 and C2).     From the Galaxy tool panel, select NGS: RNA Analysis &gt; Cuffdiff and     set the parameters as follows:  </p> <ul> <li>Transcripts: ensembl_dm3.chr4.gtf</li> <li>Condition: <ul> <li>1: Condition<ul> <li>name: C1</li> <li>Replicates: Tophat on data 1: accepted_hits</li> </ul> </li> <li>2: Condition<ul> <li>name: C2</li> <li>Replicates: Tophat on data 4: accepted_hits</li> </ul> </li> </ul> </li> <li>Library normalization method: classic-fpkm</li> <li>Dispersion estimation method: blind</li> <li>Use defaults for the other fields</li> <li>Execute</li> </ul> </li> <li> <p>Filter the recently generated gene set for significantly differentially     expressed genes by going to Filter and Sort &gt; Filter:</p> <ul> <li>Filter: \u201cCuffdiff on data....: gene differential expression testing\u201d</li> <li>With following condition: c14==\u2019yes\u2019</li> <li>Execute</li> </ul> <p>Rename the output file to something meaningful like \u201cSignificant_DE_Genes_C1_R1_vs_C2_R1\u201d</p> </li> <li> <p>Click on the eye icon of Significant_DE_Genes_C1_R1_vs_C2_R1.     You should get no differentially expressed genes at statistical     significance of 0.05. The \u201cAnk\u201d gene and the \u201cCG1277\u201d, which were found to     be significantly differentially expressed in our first analysis, are not     identified as differentially expressed when we only use one sample for each     condition.</p> </li> <li> <p>Repeat this no-replicates analysis, but this time specify a different set     of samples.     From the Galaxy tool panel, select NGS: RNA Analysis &gt; Cuffdiff and     set the parameters as follows:  </p> <ul> <li>Transcripts: ensembl_dm3.chr4.gtf</li> <li>Condition: <ul> <li>1: Condition<ul> <li>name: C1</li> <li>Replicates: Tophat on data 1: accepted_hits</li> </ul> </li> <li>2: Condition<ul> <li>name: C2</li> <li>Replicates: Tophat on data 5: accepted_hits</li> </ul> </li> </ul> </li> <li>Library normalization method: classic-fpkm</li> <li>Dispersion estimation method: blind</li> <li>Use defaults for the other fields</li> <li>Execute</li> </ul> </li> <li> <p>Filter the recently generated gene set for significantly differentially     expressed genes by going to Filter and Sort &gt; Filter:</p> <ul> <li>Filter: \u201cCuffdiff on data....: gene differential expression testing\u201d</li> <li>With following condition: c14==\u2019yes\u2019</li> <li>Execute</li> </ul> <p>Rename the output file to something meaningful like \u201cSignificant_DE_Genes_C1_R1_vs_C2_R2\u201d</p> </li> <li> <p>Click on the eye icon of Significant_DE_Genes_C1_R1_vs_C2_R2.     We now see \u201cCG2177\u201d appear again in the list as significantly     differentially expressed, but not \u201cAnk\u201d.</p> </li> </ol> How can we interpret the difference in results from using different     replicates?  <p>     There is a larger absolute difference in CG1277 expression between     samples 1 (C1_R1) and 5 (C2_R2) than samples 1 (C1_R1) and 4 (C2_R1), hence     Cuffdiff identifies CG1277 as differentially expressed between C1_R1 and     C2_R2, but not between C1_R1 and C2_R1.     <p>     On the other hand, differences in level of expression of Ank is much smaller     between samples, so we need to see it consistently across multiple replicates     for Cuffdiff to be confident it actually exists. One replicate is not enough.  <p>The identification of differentially expressed genes is based on the size of the difference in expression and the variance observed across multiple replicates. This demonstrates how important it is to have biological replicates in differential gene expression experiments.</p> <p>If we say that genes Ank and CG2177 are truly differentially expressed, we can call these instances where the true differentially expressed genes are not identified as false negatives. Generally, increasing replicates decreases the number of false negatives.</p> <p>It is also more likely to see more false positives when using an insufficient number of replicates. False positives can be defined as identifiying a gene as differentially expressed when it is, in reality, not.</p> <p>[Optional step] Repeat this analysis, specifying groups of two replicates each. What do you get? How many replicates do we need to identify Ank as differentially expressed?</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tuxedo/#section-5-optional-extension-20-min","title":"Section 5. Optional Extension [20 min]","text":""},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tuxedo/#extension-on-the-tuxedo-protocol","title":"Extension on the Tuxedo Protocol","text":"<p>The full Tuxedo protocol includes other tools such as Cufflinks, Cuffmerge, and CummeRbund. Cufflinks and Cuffmerge can build a new reference transcriptome by identifying novel transcripts and genes in the RNA-seq dataset - i.e. using these tools will allow you to identify new genes and transcripts, and then analyse them for differential expression. This is critical for organisms in which the transcriptome is not well characterised. CummeRbund helps visualise the data produced from the Cuffdiff using the R statistical programming language.</p> <p>Read more on the full Tuxedo protocol here.</p> <p>If the organism we were working on did not have a well characterized reference transcriptome, we would run Cufflinks and Cuffmerge to create a transcriptome.</p> <ol> <li> <p>Suppose we didn\u2019t have our Drosophila GTF file containing the location of     known genes. We can use Cufflinks to assemble transcripts from the     alignment data to create GTF files.     From the Galaxy tool panel, select NGS: RNA Analysis &gt; Cufflinks and     set the parameters as follows:  </p> <ul> <li>SAM or BAM file of aligned RNA-Seq reads:   Click on the multiple datasets icon and select all 6 BAM files from   Tophat</li> <li>Max Intron Length: 50000  </li> <li>Use defaults for the other fields</li> <li>Execute</li> </ul> </li> <li> <p>Next, we want to merge the assemblies outputted by Cufflinks by selecting     NGS: RNA Analysis &gt; Cuffmerge and setting the parameters as follows:  </p> <ul> <li>GTF file(s) produced by Cufflinks: Select the 6 GTF files ending   with \u2018assembled transcripts\u2019 produced by Cufflinks. Use the ctrl key or   command key to select multiple files.</li> <li>Use defaults for the other fields</li> <li>Execute</li> </ul> <p>Note: In cases where you have a reference GTF, but also want to identify novel transcripts with Cufflinks, you would add the reference GTF to the cuffmerge inputs with the Additional GTF Inputs (Lists) parameter.</p> </li> <li> <p>View the Cuffmerge GTF file by clicking the eye icon</p> </li> <li> <p>Run Cuffdiff using the new GTF file     In the Galaxy tool panel menu, under NGS Analysis, select     NGS: RNA Analysis &gt; Cuffdiff and set the parameters as follows:  </p> <ul> <li>Transcripts: Cuffmerge on data x, data x, and others: merged   transcripts</li> <li>Condition: <ul> <li>1: Condition<ul> <li>name: C1</li> <li>Replicates:<ul> <li>Tophat on data 1: accepted_hits</li> <li>Tophat on data 2: accepted_hits</li> <li>Tophat on data 3: accepted_hits</li> </ul> </li> </ul> </li> <li>2: Condition<ul> <li>name: C2</li> <li>Replicates:<ul> <li>Tophat on data 4: accepted_hits</li> <li>Tophat on data 5: accepted_hits</li> <li>Tophat on data 6: accepted_hits</li> </ul> </li> </ul> </li> </ul> </li> <li>Use defaults for the other fields</li> <li>Execute</li> </ul> </li> <li> <p>Filter the recently generated gene set for significantly differentially     expressed genes by going to Filter and Sort &gt; Filter:</p> <ul> <li>Filter: \u201cCuffdiff on data....: gene differential expression testing\u201d</li> <li>With following condition: c14==\u2019yes\u2019</li> <li>Execute</li> </ul> <p>Rename the output file to something meaningful like \u201cSignificant_DE_Genes_using_Cufflinks_Assembly\u201d</p> </li> </ol> <p>Viewing the significant genes, we see that there are two genes that are identified as differentially expressed by Cuffdiff using the GTF file produced from Cufflinks and Cuffmerge. The locations of these two genes correspond to the previous result from section 3 (genes Ank and CG2177).</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tuxedo/#transcript-level-differential-expression","title":"Transcript-level differential expression","text":"<p>One can think of a scenario in an experiment aiming to investigate the differences between two experimental conditions, where a gene had the same number of read counts in the two conditions but these read counts were derived from different transcripts; this gene would not be identified in a differential gene expression test, but would be in a differential transcript expression test. The choice of what \u201cunit of aggregation\u201d to use in differential expression testing is one that should be made by the biological investigator, and will affect the bioinformatics analysis done (and probably the data generation too).</p> <p>Take a look at the different differential expression files produced by Cuffdiff from section 3 which use different units of aggregation.</p>"},{"location":"tutorials/rna_seq_dge_basic/rna_seq_basic_tuxedo/#references","title":"References","text":"<p>Trapnell C, Roberts A, Pachter L, et al. Differential gene and transcript expression analysis of RNA-seq experiments with TopHat and Cufflinks. Nature Protocols [serial online]. March 1, 2012;7(3):562-578.</p>"},{"location":"tutorials/rna_seq_dge_in_r/rna_seq_r/","title":"RNA-seq analysis in R","text":"<p>We recommend this course produced by COMBINE:</p> <ul> <li>RNA-seq analysis in R</li> </ul> <p>The tutorial introduces the analysis of RNA-seq count data using R. This includes reading the data into R, quality control and preprocessing, and performing differential expression analysis and gene set testing, with a focus on the limma-voom analysis workflow. </p>"},{"location":"tutorials/rna_seq_dge_in_r/rna_seq_r/#additional-rna-seq-analysis-links","title":"Additional RNA-seq analysis links","text":"<ul> <li> <p>Van Den Berge K. et al, 2018. RNA sequencing data: hitchhiker\u2019s guide to expression analysis. PeerJ Preprints 6:e27283v2</p> </li> <li> <p>Love MI. et al, 2016. RNA-Seq workflow: gene-level exploratory analysis and differential expression. F1000Research, 4:1070</p> </li> </ul>"},{"location":"tutorials/rna_seq_exp_design/","title":"Index","text":"<p>PR reviewers and advice: Jessica Chung</p> <p>Current slides: TBD</p> <p>Other slides:</p> <ul> <li>None yet</li> </ul>"},{"location":"tutorials/rna_seq_exp_design/rna_seq_experimental_design/","title":"RNA-seq Experimental Design","text":""},{"location":"tutorials/rna_seq_exp_design/rna_seq_experimental_design/#rna-seq-experimental-design","title":"RNA-Seq Experimental Design","text":""},{"location":"tutorials/rna_seq_exp_design/rna_seq_experimental_design/#what-is-rna-seq","title":"What is RNA-seq?","text":"<p>RNA-seq is a method of measuring gene expression using shotgun sequencing. The process involves reverse transcribing RNA into cDNA, then sequencing fragments on a high-throughput platform such as Illumina to obtain a large number of short reads. For each sample, the reads are then aligned to a genome, and the number of reads aligned to each gene or feature is recorded.</p> <p>A typical RNA-seq experiment aims to find differentially expressed genes between two conditions (e.g. up and down-regulated genes in knock-out mice compared to wild-type mice). RNA-seq can also be used to discover new transcripts, splice variants, and fusion genes.</p>"},{"location":"tutorials/rna_seq_exp_design/rna_seq_experimental_design/#why-is-a-good-experimental-design-vital","title":"Why is a good experimental design vital?","text":"<p>An RNA-seq experiment produces high dimensional data. This means we get a huge number of observations for a small number of samples. For example, the expression of ~20,000 genes could be measured for 6 samples (3 knock-out and 3 wild-type). A frequently used approach to analyse RNA-seq data is to fit each gene to a linear model where for each of the 20,000 genes, parameters need to be estimated using a small number of observations. To complicate matters, each measurement of gene expression is comprised of a mix of biological signal and unwanted noise. Thus, in order to perform a robust statistical analysis, the methodology must be carefully designed.</p> <p>Before you begin any RNA-seq experiment, some questions you should ask yourself are:</p> <ul> <li>Why do you expect to find differentially expressed genes in the particular    tissue?</li> <li>What types of genes do you expect to find differentially expressed?</li> <li>What are the sources of variability from your samples?</li> <li>Where do you expect most of your variation to come from?</li> </ul> <p>A coherent experimental design is the groundwork of a successful experiment. You should invest time and thought in designing a robust experiment as failing to think this step through can lead to unusable data and wasted time, money, and effort.</p> <p>It is also useful to think about the statistical methods you will use to analyse the data. If you\u2019re planning to bring a data analyst or bioinformatician onboard for data analysis, you should include him or her in the experimental design stage.</p>"},{"location":"tutorials/rna_seq_exp_design/rna_seq_experimental_design/#terminology","title":"Terminology","text":"<p>Before progressing, it may be useful to define some terms which are commonly used in RNA-seq.</p> Variability:     A measure of how much the data is spread around. Variance is     mathematically defined as the average of the squared difference between     observations and the expected value. Simply put, a larger variance means     it is harder to identify differentially expressed genes.    Feature:     A defined genomic region. Usually a gene in RNA-seq, but can also     refer to any region such as an exon or an isoform. In RNA-seq, an estimate     of abundance is obtained for each feature.    Biological replicates:     Samples that have been obtained from biologically separate samples.     This can mean different individual organisms (e.g. tissue samples from     different mice), different samplings of the same tumour, or different     population of cells grown separately from each other but originating from     the same cell-line. For example, the samples obtained from three different     knock-out mice could be considered biological replicates in a knock-out     versus wild-type experiment. A biological replicate combines both technical     and biological variability as it is also an independent case of all the     technical steps.    Technical replicates:     Samples in which the starting biological sample is the same, but the     replicates are processed separately. For example, if a biological sample     is divided and two different library preps are processed and sequenced,     those two samples would be considered technical replicates.    Covariate:     The term 'covariate' is often used interchangeably with 'factor' or     'variable' in RNA-seq. The term refers to a property of the sample which     may have some influence on gene expression and should be represented in     the RNA-seq model. Covariates in RNA-seq are often categorical (e.g.     treatment condition, sex, batch), but continuous factors are also possible     (e.g. time points, age). A linear model will contain terms to represent     the relationships between covariates and each sample. Each possible value     a factor can take is called a level (e.g. 'male' and 'female' are two     levels in the factor 'sex'). Factors can either be directly of interest     to the experiment (e.g. treatment condition) or not of interest (also     known as nuisance variables) (e.g. sex, batch). The purpose of covariates     is to explain the variance seen in samples.    Confounding variable:     A confounding variable is a nuisance variable that is associated with     the factor of interest. Possible confounding factors should be controlled     for so they don't interfere with analysis. For example, if all knock-out     mice samples were harvested in the morning and all wild-type mice samples     were harvested in the afternoon, the time of sample collection would be a     confounding factor as the effects from sample collection time and from the     knock-out cannot be separated.    Statistical power:     The ability to identify differentially expressed genes when there     really is a difference. This is partly dependent on variance and therefore     is affected by the number of replicates available and sequencing depth."},{"location":"tutorials/rna_seq_exp_design/rna_seq_experimental_design/#the-importance-of-replicates-to-estimate-variance","title":"The importance of replicates to estimate variance","text":"<p>When performing a differential gene expression analysis, we look at the expression values of each gene and try to determine if the expression is significantly different in the different conditions (e.g. knock-out and wild-type). The ability to distinguish whether a gene is differentially expressed is partly determined by the estimates of variability obtained by using multiple observations in each condition.</p> <p>Variability is present in two forms: technical variability and biological variability.</p> <p>Combined biological and technical variability is measured using biological replicates. Biological variability is the main source of variability and is due to natural variation in the population and within cells. This includes different individuals having different levels of a particular gene and the stochastic nature of expression levels in different cells.</p> <p>Technical variability is measured using technical replicates. Technical variability is often very small compared to biological variability.  Usually the question is whether an observed difference is greater than the total variability (i.e. significant).  As combined variability is measured by biological replicates technical replicates are only important if you need to know the degree of biological variability or technical variability.  An example of wanting technical variability would be method development. The main source of technical variation comes from RNA processing and from library prep. Variability from sequencing in different flow cells or different lanes is usually minimal. Generally, creating technical replicates from multiple library preps is unnecessary for RNA-seq experiments.</p> <p>The amount of variance between your biological replicates will affect the outcome of your analysis. Ideally, you aim to have minimal variability between samples so you only measure the effect of the condition of interest. Too much variability between samples can drown out the signal of truly differentially expressed genes. Controlling for possible confounding factors between conditions is also important to prevent falsely attributing differential expression to the condition of interest.</p> <p>Strategies to minimise variation between samples and to control confounding variables include:</p> <ul> <li>choosing organisms from the same litter,</li> <li>choosing organisms of the same sex if possible,</li> <li>using a constant sample collection time,</li> <li>having the same laboratory technician perform each library prep,</li> <li>randomising samples to prevent a confounding batch effect if all samples    can\u2019t be processed at one time.</li> </ul> <p>If variation between samples can not be removed it should be balanced between conditions of interest as much as possible, and carefully recorded to allow its effect to be measured and potentially removed during analysis.</p>"},{"location":"tutorials/rna_seq_exp_design/rna_seq_experimental_design/#how-many-replicates-and-how-many-reads-do-i-need","title":"How many replicates and how many reads do I need?","text":"<p>Two very common question asked are:</p> <ul> <li>how many biological replicates do I need, and</li> <li>what sequencing depth is needed for each sample</li> </ul> <p>in order to have enough statistical power for my RNA-seq experiment?</p> <p>These questions cannot be precisely answered without a pilot study. A small amount of data (minimum of two biological replicates for each condition with at least 10M reads) can estimate the amount of biological variation, which determines how many biological replicates are required. Performing a pilot study is highly recommended to estimate statistical power and identify possible problems before investing more time and money into the project.</p> <p>Scotty is a web-based tool that uses data generated from a pilot study to optimize a design for statistical power. With a limited budget, one must balance sequence coverage and number of biological replicates. Scotty also has a cost estimate feature which returns the most powerful design within budget constraints.</p> <p>As a general rule, the number of biological replicates should never be below 3. For a basic RNA-seq differential expression experiment, 10M to 20M reads per sample is usually enough.  If similar data exists it can be helpful to check the read counts for key genes of interest to estimate the required depth.</p> <p>Biological variability is usually the largest effect limiting the power of RNA-seq analysis.  The most improvement in an experiment will usually be achieved by increasing the biological replication to improve estimation of the biological variation.</p> <p>It is often possible to design experiments where the analysis is done incrementally such that a pilot study is added to with an additional block of samples or a pool of libraries is sequenced to additional depth. In these cases care must be taken to balance the design in a manner that each stage is a valid experiment in its own right.  This can allow a focused question to be answered in the first stage, with an ability to either address issues or progress to a second stage with additional questions.</p>"},{"location":"tutorials/rna_seq_exp_design/rna_seq_experimental_design/#sequencing-options-to-consider","title":"Sequencing options to consider","text":"<p>How much total RNA is needed: Many sequencing centres such as AGRF recommend at least 250ng of total RNA for RNA sequencing. It is possible to go as low as 100ng of total RNA, but results are not guaranteed. The quality of RNA is also important when making libraries. A RNA Integrity Number (RIN) is a number from 1 (poor) to 10 (good) and can indicate how much degradation there is in the sample. A poor score can lead to over representation at the 3\u2019 end of the transcript and low yield. Samples with low RIN scores (below 8) are not recommended for sequencing.  Care should also be taken to ensure RIN is consistent between conditions to avoid confounding this technical effect with the biological question.</p> <p>Choosing an enrichment method: Ribosomal RNA makes up &gt;95% of total cellular RNA, so a preparation for RNA-seq must either enrich for mRNA using poly-A enrichment, or deplete rRNA. Poly-A enrichment is recommended for most standard RNA-seq experiments, but will not provide information about microRNAs and other non-coding RNA species. In general, ribo-depleted RNA-seq data will contain more noise, however, the protocol is recommended if you have poor or variable quality of RNA as the 3\u2019 bias of poly-A enrichment will be more pronounced with increased RNA degradation. The amount of RNA needed for each method differs. For Poly-A enrichment a minimum of 100ng is needed while for ribo-depletion, a minimum of 200ng is recommended.</p> <p>Choosing read type: For basic differential expression analysis RNA-seq experiments, single-end sequencing is recommended to obtain gene transcript counts. In more advanced experiments, paired-ends are useful for determining transcript structure and discovering splice variants.</p> <p>Choosing strandedness: </p> <p>With a non-directional (unstranded) protocol, there is no way to identify whether a read originated from the coding strand or its reverse complement. Non-directional protocols allow mapping of a read to a genomic location, but not the direction in which the RNA was transcribed. They are therefore used to count transcripts for known genes, and are recommended for basic RNA-seq experiments. Directional protocols (stranded) preserve strand information and are useful for novel transcript discovery.</p> <p>Multiplexing: Multiplexing is an approach to sequence multiple samples in the same sequencing lane. By sequencing all samples in the same lane, multiplexing can also minimise bias from lane effects.</p> <p>Spike-in controls: RNA-seq spike-in controls are a set of synthetic RNAs of known concentration which act as negative or positive controls. These controls have been used for normalisation and quality control, but recent work has shown that the amount of technical variability in their use dramatically reduces their utility.</p>"},{"location":"tutorials/rna_seq_exp_design/rna_seq_experimental_design/#summary","title":"Summary","text":"<ul> <li>A good experimental design is vital for a successful experiment. If you\u2019re    planning to work with a data analyst or bioinformatician, include them in    the design stage.</li> <li>Aim to minimise variability by identifying possible sources of variance in    your samples.</li> <li>Biological replicates are important. The number of biological replicates    you should have should never be below 3. Technical replicates are often    unnecessary.</li> <li>Pilot studies are highly recommended for identifying how many replicates    and how many reads you should have for enough statistical power in your    experiment.</li> <li>For basic RNA-seq experiments, poly-A enriched, single-ended, unstranded    sequencing at depths of 10M to 20M is probably what you want.</li> </ul>"},{"location":"tutorials/seurat-de/seurat-de/","title":"scRNA-seq Integration and Differential Expression","text":"<p>Slides available here.</p> <p>Author: Manveer Chauhan, Clark Lab, The University of Melbourne. Contributors: Vini Salazar, Melbourne Bioinformatics.</p> <p>Last updated October 2024.</p>"},{"location":"tutorials/seurat-de/seurat-de/#overview","title":"Overview","text":"<p>Topic</p> <ul> <li> Genomics</li> <li> Transcriptomics</li> <li> Proteomics</li> <li> Metabolomics</li> <li> Statistics and visualisation</li> <li> Structural Modelling</li> <li> Basic skills</li> </ul> <p>Skill level</p> <ul> <li> Beginner  </li> <li> Intermediate  </li> <li> Advanced  </li> </ul> <p>Data: IFNB-Stimulated and Control PBMCs.</p> <p>Tools: R &gt;=4.4.0 and associated packages:</p> <ul> <li>Seurat  </li> <li>SeuratData  </li> <li>tidyverse  </li> <li>DESeq2  </li> <li>patchwork  </li> <li>pheatmap  </li> <li>grid  </li> <li>metap  </li> </ul> <p>Pipeline: Section 1: Setup, Quality Control and Sample Integration. Section 2: Differential Gene Expression when dealing with two treatment conditions. Section 3: Differential Expression using a pseudobulk approach and DESeq2.  </p> <p>Learning objectives: </p> <ul> <li>Gain more familiarity with standard scRNA-seq Quality Control (QC) steps</li> <li>Understand and get comfortable using various integration strategies (harmoy and seuratCCA)</li> <li>Understand when and how to use all of the differential expression functions offered by Seurat: FindMarkers(), FindConservedMarkers(), and FindAllMarkers()</li> <li>Learn how to use differential expression tools meant for bulk data, like DESeq2, for single-cell \u2018pseudobulk\u2019 data and understand why you might choose this approach.</li> <li>Learn different ways to visualise both in-built Seurat functions and external packages like pheatmap.</li> </ul> <p>Disclaimer</p> <p>This tutorial is partially based on existing material from:</p> <ul> <li>https://satijalab.org/seurat/articles/seurat5_integration</li> <li>https://satijalab.org/seurat/articles/de_vignette</li> <li>https://hbctraining.github.io/scRNA-seq_online/</li> <li>https://bookdown.org/ytliu13207/SingleCellMultiOmicsDataAnalysis/</li> </ul>"},{"location":"tutorials/seurat-de/seurat-de/#setup","title":"Setup","text":"<p>Run the code block below to install the packages needed for this workshop.</p> <p>To check if installed properly, load each package in one at a time using the <code>library()</code> function.</p> <pre><code>install.packages('Seurat')\n\nif (!requireNamespace(\"remotes\", quietly = TRUE)) {\n  install.packages(\"remotes\")\n}\nremotes::install_github(\"satijalab/seurat-data\", quiet = TRUE)\n\nif (!require(\"BiocManager\", quietly = TRUE)) {\n  install.packages(\"BiocManager\")\n}\nBiocManager::install(\"DESeq2\")\n\ninstall.packages(\"tidyverse\")\ninstall.packages(\"pheatmap\")\ninstall.packages(\"metap\")\n</code></pre> <p>Well done!</p> <p>Confirm that users are ready to start.</p>"},{"location":"tutorials/seurat-de/seurat-de/#section-1-setup-quality-control-and-sample-integration","title":"Section 1: Setup, Quality Control and Sample Integration","text":""},{"location":"tutorials/seurat-de/seurat-de/#step-1-load-the-packages-and-data","title":"Step 1. Load the packages and data","text":"<p>Today we\u2019ll be working with Seurat (a popular scRNA-seq analysis package). SeuratData will be used to load in the experimental data we\u2019re analysing. Tidyverse is a fundamental and very popularly used set of tools to wrangle and visualise data.</p> <p>We\u2019ll need to load the DESeq2 R package for when we explore pseudobulk DE approaches</p> <p>pheatmap and grid are two really useful packages for creating custom heatmaps with our scRNA-seq data and exporting figures, respectively.</p> <pre><code>library(Seurat)\nlibrary(SeuratData)\nlibrary(tidyverse)\nlibrary(DESeq2)\nlibrary(patchwork)\nlibrary(pheatmap)\nlibrary(grid)\nlibrary(metap)\n\nset.seed(4242) # Set Seed for Reproducibility\nsetwd(\"/path/to/workshop/directory\")  # Set this to the correct location\n</code></pre> <p>We\u2019re using the ifnb public dataset provided by Seurat. This dataset contains PBMC data from 8 lupus patients before and after interferon beta treatment.</p> <p>I strongly encourage you to explore the other datasets offered by the SeuratData package, it can be really good practice in your spare time.</p> <p>The ifnb Seurat object we\u2019re loading in here was originally made in Seurat v4, there have since been a lot of changes from Seurat v4 to v5 so we\u2019ll use the UpdateSeuratObject() function to update the Seurat object so that it is compatible for today.</p> <pre><code>AvailableData() # if you want to see the available SeuratData datasets use this function\n</code></pre> Available Data <pre><code>##                                    Dataset Version\n## adiposeref.SeuratData           adiposeref   1.0.0\n## bmcite.SeuratData                   bmcite   0.3.0\n## bonemarrowref.SeuratData     bonemarrowref   1.0.0\n## cbmc.SeuratData                       cbmc   3.1.4\n## celegans.embryo.SeuratData celegans.embryo   0.1.0\n## fetusref.SeuratData               fetusref   1.0.0\n## hcabm40k.SeuratData               hcabm40k   3.0.0\n## heartref.SeuratData               heartref   1.0.0\n## humancortexref.SeuratData   humancortexref   1.0.0\n## ifnb.SeuratData                       ifnb   3.1.0\n## kidneyref.SeuratData             kidneyref   1.0.2\n## lungref.SeuratData                 lungref   2.0.0\n## mousecortexref.SeuratData   mousecortexref   1.0.0\n## panc8.SeuratData                     panc8   3.0.2\n## pancreasref.SeuratData         pancreasref   1.0.0\n## pbmc3k.SeuratData                   pbmc3k   3.1.4\n## pbmcMultiome.SeuratData       pbmcMultiome   0.1.4\n## pbmcref.SeuratData                 pbmcref   1.0.0\n## pbmcsca.SeuratData                 pbmcsca   3.0.0\n## ssHippo.SeuratData                 ssHippo   3.1.4\n## stxBrain.SeuratData               stxBrain   0.1.2\n## stxKidney.SeuratData             stxKidney   0.1.0\n## thp1.eccite.SeuratData         thp1.eccite   3.1.5\n## tonsilref.SeuratData             tonsilref   2.0.0\n##                                                                                   Summary\n## adiposeref.SeuratData                                          Azimuth Reference: adipose\n## bmcite.SeuratData                                                   30k Bone Marrow Cells\n## bonemarrowref.SeuratData                                    Azimuth Reference: bonemarrow\n## cbmc.SeuratData                              scRNAseq and 13-antibody sequencing of CBMCs\n## celegans.embryo.SeuratData         6k C. elegans embryos from Packer and Zhu et al (2019)\n## fetusref.SeuratData                                              Azimuth Reference: fetus\n## hcabm40k.SeuratData        40,000 Cells From the Human Cell Atlas ICA Bone Marrow Dataset\n## heartref.SeuratData                                              Azimuth Reference: heart\n## humancortexref.SeuratData                                  Azimuth Reference: humancortex\n## ifnb.SeuratData                                         IFNB-Stimulated and Control PBMCs\n## kidneyref.SeuratData                                            Azimuth Reference: kidney\n## lungref.SeuratData                                                Azimuth Reference: lung\n## mousecortexref.SeuratData                                  Azimuth Reference: mousecortex\n## panc8.SeuratData                         Eight Pancreas Datasets Across Five Technologies\n## pancreasref.SeuratData                                        Azimuth Reference: pancreas\n## pbmc3k.SeuratData                                              3k PBMCs from 10X Genomics\n## pbmcMultiome.SeuratData                                10X Genomics PBMC Multiome Dataset\n## pbmcref.SeuratData                                                Azimuth Reference: pbmc\n## pbmcsca.SeuratData                   Broad Institute PBMC Systematic Comparative Analysis\n## ssHippo.SeuratData                              Slide-seq v2 dataset of mouse hippocampus\n## stxBrain.SeuratData                               10X Genomics Visium Mouse Brain Dataset\n## stxKidney.SeuratData                             10X Genomics Visium Mouse Kidney Dataset\n## thp1.eccite.SeuratData                                                   ECCITE-seq THP-1\n## tonsilref.SeuratData                                            Azimuth Reference: tonsil\n##                               species            system ncells\n## adiposeref.SeuratData           human           adipose 160075\n## bmcite.SeuratData               human       bone marrow  30672\n## bonemarrowref.SeuratData        human        bonemarrow 297627\n## cbmc.SeuratData                 human CBMC (cord blood)   8617\n## celegans.embryo.SeuratData C. elegans            embryo   6188\n## fetusref.SeuratData             human             fetus 377456\n## hcabm40k.SeuratData             human       bone marrow  40000\n## heartref.SeuratData             human             heart 656509\n## humancortexref.SeuratData       human      motor cortex  76533\n## ifnb.SeuratData                 human              PBMC  13999\n## kidneyref.SeuratData            human            kidney  64693\n## lungref.SeuratData              human              lung 584884\n## mousecortexref.SeuratData       mouse      motor cortex 159738\n## panc8.SeuratData                human Pancreatic Islets  14892\n## pancreasref.SeuratData          human          pancreas  35289\n## pbmc3k.SeuratData               human              PBMC   2700\n## pbmcMultiome.SeuratData         human              pbmc  11909\n## pbmcref.SeuratData              human              PBMC   2700\n## pbmcsca.SeuratData              human              PBMC  31021\n## ssHippo.SeuratData              mouse       hippocampus     NA\n## stxBrain.SeuratData             mouse             brain  12167\n## stxKidney.SeuratData            mouse            kidney   1438\n## thp1.eccite.SeuratData          human              &lt;NA&gt;     NA\n## tonsilref.SeuratData            human            tonsil 377963\n##                                                                                       tech\n## adiposeref.SeuratData                                               scRNA-seq and sNuc-seq\n## bmcite.SeuratData                                                                     &lt;NA&gt;\n## bonemarrowref.SeuratData                                                            10x v2\n## cbmc.SeuratData                                                                   CITE-seq\n## celegans.embryo.SeuratData                                                            &lt;NA&gt;\n## fetusref.SeuratData                                                                   &lt;NA&gt;\n## hcabm40k.SeuratData                                                                 10x v2\n## heartref.SeuratData                                                 scRNA-seq and sNuc-seq\n## humancortexref.SeuratData                                                             &lt;NA&gt;\n## ifnb.SeuratData                                                                     10x v1\n## kidneyref.SeuratData                                                             snRNA-seq\n## lungref.SeuratData                                                                    &lt;NA&gt;\n## mousecortexref.SeuratData                                                           10x v3\n## panc8.SeuratData                          SMARTSeq2, Fluidigm C1, CelSeq, CelSeq2, inDrops\n## pancreasref.SeuratData                                                                &lt;NA&gt;\n## pbmc3k.SeuratData                                                                   10x v1\n## pbmcMultiome.SeuratData                                                               &lt;NA&gt;\n## pbmcref.SeuratData                                                                  10x v1\n## pbmcsca.SeuratData         10x v2, 10x v3, SMARTSeq2, Seq-Well, inDrops, Drop-seq, CelSeq2\n## ssHippo.SeuratData                                                             slideseq v2\n## stxBrain.SeuratData                                                                 visium\n## stxKidney.SeuratData                                                                visium\n## thp1.eccite.SeuratData                                                                &lt;NA&gt;\n## tonsilref.SeuratData                                                             scRNA-seq\n##                            seurat default.dataset disk.datasets\n## adiposeref.SeuratData        &lt;NA&gt;            &lt;NA&gt;          &lt;NA&gt;\n## bmcite.SeuratData           3.2.2            &lt;NA&gt;          &lt;NA&gt;\n## bonemarrowref.SeuratData     &lt;NA&gt;            &lt;NA&gt;          &lt;NA&gt;\n## cbmc.SeuratData             3.1.4             raw     processed\n## celegans.embryo.SeuratData   &lt;NA&gt;             raw          &lt;NA&gt;\n## fetusref.SeuratData          &lt;NA&gt;            &lt;NA&gt;          &lt;NA&gt;\n## hcabm40k.SeuratData          &lt;NA&gt;             raw          &lt;NA&gt;\n## heartref.SeuratData          &lt;NA&gt;            &lt;NA&gt;          &lt;NA&gt;\n## humancortexref.SeuratData    &lt;NA&gt;            &lt;NA&gt;          &lt;NA&gt;\n## ifnb.SeuratData              &lt;NA&gt;             raw          &lt;NA&gt;\n## kidneyref.SeuratData         &lt;NA&gt;            &lt;NA&gt;          &lt;NA&gt;\n## lungref.SeuratData           &lt;NA&gt;            &lt;NA&gt;          &lt;NA&gt;\n## mousecortexref.SeuratData    &lt;NA&gt;            &lt;NA&gt;          &lt;NA&gt;\n## panc8.SeuratData             &lt;NA&gt;             raw          &lt;NA&gt;\n## pancreasref.SeuratData       &lt;NA&gt;            &lt;NA&gt;          &lt;NA&gt;\n## pbmc3k.SeuratData           3.1.4             raw          &lt;NA&gt;\n## pbmcMultiome.SeuratData     4.1.1              NA          &lt;NA&gt;\n## pbmcref.SeuratData           &lt;NA&gt;            &lt;NA&gt;          &lt;NA&gt;\n## pbmcsca.SeuratData           &lt;NA&gt;             raw          &lt;NA&gt;\n## ssHippo.SeuratData           &lt;NA&gt;             raw          &lt;NA&gt;\n## stxBrain.SeuratData          &lt;NA&gt;              NA          &lt;NA&gt;\n## stxKidney.SeuratData         &lt;NA&gt;             raw          &lt;NA&gt;\n## thp1.eccite.SeuratData       &lt;NA&gt;            &lt;NA&gt;          &lt;NA&gt;\n## tonsilref.SeuratData         &lt;NA&gt;            &lt;NA&gt;          &lt;NA&gt;\n##                                                          other.datasets\n## adiposeref.SeuratData                                              &lt;NA&gt;\n## bmcite.SeuratData                                                  &lt;NA&gt;\n## bonemarrowref.SeuratData                                           &lt;NA&gt;\n## cbmc.SeuratData                                                    &lt;NA&gt;\n## celegans.embryo.SeuratData                                         &lt;NA&gt;\n## fetusref.SeuratData                                                &lt;NA&gt;\n## hcabm40k.SeuratData                                                &lt;NA&gt;\n## heartref.SeuratData                                                &lt;NA&gt;\n## humancortexref.SeuratData                                          &lt;NA&gt;\n## ifnb.SeuratData                                               processed\n## kidneyref.SeuratData                                               &lt;NA&gt;\n## lungref.SeuratData                                                 &lt;NA&gt;\n## mousecortexref.SeuratData                                          &lt;NA&gt;\n## panc8.SeuratData                                                   &lt;NA&gt;\n## pancreasref.SeuratData                                             &lt;NA&gt;\n## pbmc3k.SeuratData                                          pbmc3k.final\n## pbmcMultiome.SeuratData                             pbmc.rna, pbmc.atac\n## pbmcref.SeuratData                                                 &lt;NA&gt;\n## pbmcsca.SeuratData                                                 &lt;NA&gt;\n## ssHippo.SeuratData                                                 &lt;NA&gt;\n## stxBrain.SeuratData        posterior1, posterior2, anterior1, anterior2\n## stxKidney.SeuratData                                               &lt;NA&gt;\n## thp1.eccite.SeuratData                                             &lt;NA&gt;\n## tonsilref.SeuratData                                               &lt;NA&gt;\n##                                                                                                notes\n## adiposeref.SeuratData                                                                           &lt;NA&gt;\n## bmcite.SeuratData                                                                               &lt;NA&gt;\n## bonemarrowref.SeuratData                                                                        &lt;NA&gt;\n## cbmc.SeuratData                                                                                 &lt;NA&gt;\n## celegans.embryo.SeuratData                                                                      &lt;NA&gt;\n## fetusref.SeuratData                                                                             &lt;NA&gt;\n## hcabm40k.SeuratData                                                                             &lt;NA&gt;\n## heartref.SeuratData                                                                             &lt;NA&gt;\n## humancortexref.SeuratData                                                                       &lt;NA&gt;\n## ifnb.SeuratData                                                                                 &lt;NA&gt;\n## kidneyref.SeuratData                                                                            &lt;NA&gt;\n## lungref.SeuratData                                                                              &lt;NA&gt;\n## mousecortexref.SeuratData                                                                       &lt;NA&gt;\n## panc8.SeuratData                                                                                &lt;NA&gt;\n## pancreasref.SeuratData                                                                          &lt;NA&gt;\n## pbmc3k.SeuratData                                                                               &lt;NA&gt;\n## pbmcMultiome.SeuratData                                 One sample with two modalities, RNA and ATAC\n## pbmcref.SeuratData                                                                              &lt;NA&gt;\n## pbmcsca.SeuratData                                                                     HCA benchmark\n## ssHippo.SeuratData                                                                              &lt;NA&gt;\n## stxBrain.SeuratData        One sample split across four datasets as paired anterior/posterior slices\n## stxKidney.SeuratData                                                                            &lt;NA&gt;\n## thp1.eccite.SeuratData                                                                          &lt;NA&gt;\n## tonsilref.SeuratData                                                                            &lt;NA&gt;\n##                            Installed InstalledVersion\n## adiposeref.SeuratData          FALSE             &lt;NA&gt;\n## bmcite.SeuratData              FALSE             &lt;NA&gt;\n## bonemarrowref.SeuratData       FALSE             &lt;NA&gt;\n## cbmc.SeuratData                FALSE             &lt;NA&gt;\n## celegans.embryo.SeuratData     FALSE             &lt;NA&gt;\n## fetusref.SeuratData            FALSE             &lt;NA&gt;\n## hcabm40k.SeuratData            FALSE             &lt;NA&gt;\n## heartref.SeuratData            FALSE             &lt;NA&gt;\n## humancortexref.SeuratData      FALSE             &lt;NA&gt;\n## ifnb.SeuratData                 TRUE            3.1.0\n## kidneyref.SeuratData           FALSE             &lt;NA&gt;\n## lungref.SeuratData             FALSE             &lt;NA&gt;\n## mousecortexref.SeuratData      FALSE             &lt;NA&gt;\n## panc8.SeuratData               FALSE             &lt;NA&gt;\n## pancreasref.SeuratData         FALSE             &lt;NA&gt;\n## pbmc3k.SeuratData              FALSE             &lt;NA&gt;\n## pbmcMultiome.SeuratData        FALSE             &lt;NA&gt;\n## pbmcref.SeuratData             FALSE             &lt;NA&gt;\n## pbmcsca.SeuratData             FALSE             &lt;NA&gt;\n## ssHippo.SeuratData             FALSE             &lt;NA&gt;\n## stxBrain.SeuratData            FALSE             &lt;NA&gt;\n## stxKidney.SeuratData           FALSE             &lt;NA&gt;\n## thp1.eccite.SeuratData         FALSE             &lt;NA&gt;\n## tonsilref.SeuratData           FALSE             &lt;NA&gt;\n</code></pre> <pre><code>InstallData(\"ifnb\") # install our treatment vs control dataset for today\n\ndata(\"ifnb\") # Load the dataset into our current R script\nifnb &lt;- UpdateSeuratObject(ifnb) # Make sure the seurat object is in the format of Seurat v5\n\nstr(ifnb) # we can use this to take a look at the information in our Seurat Object\n</code></pre> <code>ifnb</code> Seurat object information from <code>str()</code> <pre><code>## Formal class 'Seurat' [package \"SeuratObject\"] with 13 slots\n##   ..@ assays      :List of 1\n##   .. ..$ RNA:Formal class 'Assay' [package \"SeuratObject\"] with 8 slots\n##   .. .. .. ..@ counts       :Formal class 'dgCMatrix' [package \"Matrix\"] with 6 slots\n##   .. .. .. .. .. ..@ i       : int [1:9787436] 20 27 37 64 65 83 87 131 139 175 ...\n##   .. .. .. .. .. ..@ p       : int [1:14000] 0 877 1590 2440 3549 4183 4740 5720 6301 7181 ...\n##   .. .. .. .. .. ..@ Dim     : int [1:2] 14053 13999\n##   .. .. .. .. .. ..@ Dimnames:List of 2\n##   .. .. .. .. .. .. ..$ : chr [1:14053] \"AL627309.1\" \"RP11-206L10.2\" \"LINC00115\" \"NOC2L\" ...\n##   .. .. .. .. .. .. ..$ : chr [1:13999] \"AAACATACATTTCC.1\" \"AAACATACCAGAAA.1\" \"AAACATACCTCGCT.1\" \"AAACATACCTGGTA.1\" ...\n##   .. .. .. .. .. ..@ x       : num [1:9787436] 1 1 1 1 1 2 1 1 1 1 ...\n##   .. .. .. .. .. ..@ factors : list()\n##   .. .. .. ..@ data         :Formal class 'dgCMatrix' [package \"Matrix\"] with 6 slots\n##   .. .. .. .. .. ..@ i       : int [1:9787436] 20 27 37 64 65 83 87 131 139 175 ...\n##   .. .. .. .. .. ..@ p       : int [1:14000] 0 877 1590 2440 3549 4183 4740 5720 6301 7181 ...\n##   .. .. .. .. .. ..@ Dim     : int [1:2] 14053 13999\n##   .. .. .. .. .. ..@ Dimnames:List of 2\n##   .. .. .. .. .. .. ..$ : chr [1:14053] \"AL627309.1\" \"RP11-206L10.2\" \"LINC00115\" \"NOC2L\" ...\n##   .. .. .. .. .. .. ..$ : chr [1:13999] \"AAACATACATTTCC.1\" \"AAACATACCAGAAA.1\" \"AAACATACCTCGCT.1\" \"AAACATACCTGGTA.1\" ...\n##   .. .. .. .. .. ..@ x       : num [1:9787436] 1 1 1 1 1 2 1 1 1 1 ...\n##   .. .. .. .. .. ..@ factors : list()\n##   .. .. .. ..@ scale.data   : num[0 , 0 ] \n##   .. .. .. ..@ assay.orig   : NULL\n##   .. .. .. ..@ var.features : chr(0) \n##   .. .. .. ..@ meta.features:'data.frame':   14053 obs. of  0 variables\n##   .. .. .. ..@ misc         : NULL\n##   .. .. .. ..@ key          : chr \"rna_\"\n##   ..@ meta.data   :'data.frame': 13999 obs. of  5 variables:\n##   .. ..$ orig.ident        : chr [1:13999] \"IMMUNE_CTRL\" \"IMMUNE_CTRL\" \"IMMUNE_CTRL\" \"IMMUNE_CTRL\" ...\n##   .. ..$ nCount_RNA        : num [1:13999] 3017 2481 3420 3156 1868 ...\n##   .. ..$ nFeature_RNA      : int [1:13999] 877 713 850 1109 634 557 980 581 880 669 ...\n##   .. ..$ stim              : chr [1:13999] \"CTRL\" \"CTRL\" \"CTRL\" \"CTRL\" ...\n##   .. ..$ seurat_annotations: Factor w/ 13 levels \"CD14 Mono\",\"CD4 Naive T\",..: 1 1 1 12 3 1 7 2 6 1 ...\n##   ..@ active.assay: chr \"RNA\"\n##   ..@ active.ident: Factor w/ 2 levels \"IMMUNE_CTRL\",..: 1 1 1 1 1 1 1 1 1 1 ...\n##   .. ..- attr(*, \"names\")= chr [1:13999] \"AAACATACATTTCC.1\" \"AAACATACCAGAAA.1\" \"AAACATACCTCGCT.1\" \"AAACATACCTGGTA.1\" ...\n##   ..@ graphs      : list()\n##   ..@ neighbors   : list()\n##   ..@ reductions  : list()\n##   ..@ images      : list()\n##   ..@ project.name: chr \"ifnb\"\n##   ..@ misc        : list()\n##   ..@ version     :Classes 'package_version', 'numeric_version'  hidden list of 1\n##   .. ..$ : int [1:3] 5 0 2\n##   ..@ commands    : list()\n##   ..@ tools       : list()\n</code></pre> <p>Question</p> <p>Looking at the output from the <code>str()</code> function above, can you tell whether this seurat object is processed or unprocessed?</p> Solution <p>When loading in seurat objects, we can have a look at what processing steps have been performed on it by using the str() function. In the output we can tell that the ifnb Seurat object is unprocessed because the scale.data slot is empty, no variable features have been identified, and no dimensionality reduction functions have been performed.    </p>"},{"location":"tutorials/seurat-de/seurat-de/#step-2-run-qc-filter-out-low-quality-cells","title":"Step 2: Run QC, filter out low quality cells","text":"<p>Lets start by processing our data (run the standard seurat workflow steps including preprocessing and filtering).</p> <p>First we need to take a look at QC metrics, then decide on the thresholds for filtering.</p> <p>Question</p> <p>Looking at the violin plots of QC metrics, what do you think about the overall quality of the ifnb dataset?</p> <pre><code># Step 2a: QC and filtering\nifnb$percent.mt &lt;- PercentageFeatureSet(object = ifnb, pattern = \"^MT-\") # First let's annotate the mitochondrial percentage for each cell\n\nView(ifnb@meta.data) # we can take a look mitochondrial percentages for the seurat object by viewing the seurat objects metadata\n\n# Step 2b: Visualise QC metrics and identify filtering thresholds\nqc.metric.plts &lt;- VlnPlot(ifnb, features = c(\"nFeature_RNA\", \"nCount_RNA\", \"percent.mt\"), ncol = 3) + \n  ggtitle(\"Before Filtering\")\n\nassociation.plt.raw &lt;- FeatureScatter(ifnb, feature1 = \"nCount_RNA\", feature2 = \"nFeature_RNA\") + geom_smooth(method = \"lm\") +\n  ggtitle(\"Before Filtering\")\n\nqc.metric.plts\nassociation.plt.raw\n</code></pre> <p> </p> <p>After visualising QC metrics, we\u2019ll move on to the actual filtering</p> <pre><code># Step 2c: filter out low-quality cells + visualise the metrics for our filtered seurat object\nifnb.filtered &lt;- subset(ifnb, subset = nCount_RNA &gt; 800 &amp; \n                          nCount_RNA &lt; 5000 &amp;\n                          nFeature_RNA &gt; 200 &amp;\n                          nFeature_RNA &lt; 1200 &amp;\n                          percent.mt &lt; 5)\n\nqc.metric.plts.filtered &lt;- VlnPlot(ifnb.filtered, features = c(\"nFeature_RNA\", \"nCount_RNA\", \"percent.mt\"), ncol = 3) +\n  ggtitle(\"After Filtering\")\nassociation.plt.filtered &lt;- FeatureScatter(ifnb.filtered, feature1 = \"nCount_RNA\", feature2 = \"nFeature_RNA\") + geom_smooth(method = \"lm\") +\n  ggtitle(\"After Filtering\")\n\nqc.metric.plts.filtered\nassociation.plt.filtered\n</code></pre> <p> </p> <p>Let\u2019s check how many cells we\u2019ve filtered out (looks like ~400 cells were removed):</p> <pre><code>## Defining a couple helper functions to standardise x and y axis for two plots\nget_plot_range &lt;- function(plot) {\n  data &lt;- layer_data(plot)\n  list(\n    x = range(data$x, na.rm = TRUE),\n    y = range(data$y, na.rm = TRUE)\n  )\n}\nstandardise_plt_scale &lt;- function(plt1, plt2){\n\n  # Get ranges for both plots\n  range_raw &lt;- get_plot_range(plt1)\n  range_filtered &lt;- get_plot_range(plt2)\n\n  # Calculate overall range\n  x_range &lt;- range(c(range_raw$x, range_filtered$x))\n  y_range &lt;- range(c(range_raw$y, range_filtered$y))\n\n  suppressMessages({\n  # Update both plots with the same x and y scales\n  association.plt.raw &lt;- association.plt.raw +\n    scale_x_continuous(limits = x_range) +\n    scale_y_continuous(limits = y_range)\n\n  association.plt.filtered &lt;- association.plt.filtered +\n    scale_x_continuous(limits = x_range) +\n    scale_y_continuous(limits = y_range)\n  })\n\n  # Wrap the plots\n  wrapped_plots &lt;- wrap_plots(list(association.plt.raw, association.plt.filtered), \n                              ncol = 2)\n\n  return(wrapped_plots)\n}\n\nwrap_plots(list(qc.metric.plts, qc.metric.plts.filtered), \n           ncol = 1)\n</code></pre> <p></p> <p><pre><code>association.plts &lt;- standardise_plt_scale(association.plt.raw,\n                                          association.plt.filtered)\nassociation.plts\n</code></pre> </p> <p>Let\u2019s check how many cells we\u2019ve filtered out (looks like ~400 cells were removed):</p> <p><pre><code>ifnb\n</code></pre> <pre><code>## An object of class Seurat \n## 14053 features across 13999 samples within 1 assay \n## Active assay: RNA (14053 features, 0 variable features)\n##  2 layers present: counts, data\n</code></pre> <pre><code>ifnb.filtered\n</code></pre> <pre><code>## An object of class Seurat \n## 14053 features across 13548 samples within 1 assay \n## Active assay: RNA (14053 features, 0 variable features)\n##  2 layers present: counts, data\n</code></pre></p> <p>Next we need to split our count matrices based on conditions. This step stores stimulated versus unstimulated expression information separately, creating a list of RNA assays grouped by the \u201cstim\u201d condition. Note: this is important for downstream integration steps in Seurat v5.</p> <pre><code>ifnb.filtered[[\"RNA\"]] &lt;- split(ifnb.filtered[[\"RNA\"]], f = ifnb.filtered$stim) # Lets split our count matrices based on conditions (stored within different layers) -&gt; needed for integration steps in Seurat v5\n</code></pre>"},{"location":"tutorials/seurat-de/seurat-de/#step-3-before-performing-differential-expression-between-the-two-conditions-lets-assess-whether-we-need-to-integrate-our-data","title":"Step 3: Before performing differential expression between the two conditions, let\u2019s assess whether we need to integrate our data","text":"<p>After filtering out low quality cells, we want to visualise our data to see how cells group by condition and if we need to perform batch-effect correction (integration)</p> <p><pre><code>ifnb.filtered &lt;- NormalizeData(ifnb.filtered)\n\n## Normalizing layer: counts.CTRL\n## Normalizing layer: counts.STIM\n\nifnb.filtered &lt;- FindVariableFeatures(ifnb.filtered)\n\n## Finding variable features for layer counts.CTRL\n## Finding variable features for layer counts.STIM\n\nifnb.filtered &lt;- ScaleData(ifnb.filtered)\n\n## Centering and scaling data matrix\n\nifnb.filtered &lt;- RunPCA(ifnb.filtered)\n\n## PC_ 1 \n## Positive:  TYROBP, C15orf48, FCER1G, CST3, SOD2, ANXA5, FTL, TYMP, TIMP1, CD63 \n##     LGALS1, CTSB, S100A4, KYNU, LGALS3, FCN1, PSAP, NPC2, ANXA2, IGSF6 \n##     S100A11, LYZ, SPI1, APOBEC3A, CD68, CTSL, NINJ1, HLA-DRA, CCL2, SDCBP \n## Negative:  NPM1, CCR7, CXCR4, GIMAP7, LTB, CD3D, CD7, SELL, TMSB4X, CD2 \n##     TRAT1, IL7R, PTPRCAP, IL32, ITM2A, RGCC, LEF1, CD3G, ALOX5AP, CREM \n##     PASK, MYC, SNHG8, TSC22D3, BIRC3, GPR171, NOP58, CD27, RARRES3, CD8B \n## PC_ 2 \n## Positive:  ISG15, ISG20, IFIT3, IFIT1, LY6E, TNFSF10, IFIT2, MX1, IFI6, RSAD2 \n##     CXCL10, OAS1, CXCL11, IFITM3, MT2A, OASL, TNFSF13B, IDO1, IL1RN, APOBEC3A \n##     CCL8, GBP1, HERC5, FAM26F, GBP4, RABGAP1L, HES4, WARS, VAMP5, DEFB1 \n## Negative:  IL8, CLEC5A, CD14, VCAN, S100A8, IER3, MARCKSL1, IL1B, PID1, CD9 \n##     GPX1, INSIG1, PHLDA1, PLAUR, PPIF, THBS1, OSM, SLC7A11, CTB-61M7.2, GAPDH \n##     LIMS1, S100A9, GAPT, ACTB, CXCL3, C19orf59, MGST1, OLR1, CEBPB, FTH1 \n## PC_ 3 \n## Positive:  HLA-DQA1, CD83, HLA-DQB1, CD74, HLA-DRA, HLA-DPA1, HLA-DRB1, CD79A, HLA-DPB1, IRF8 \n##     MS4A1, SYNGR2, MIR155HG, HERPUD1, REL, HSP90AB1, ID3, HLA-DMA, TVP23A, FABP5 \n##     NME1, HSPE1, PMAIP1, BANK1, CD70, HSPD1, TSPAN13, EBI3, TCF4, CCR7 \n## Negative:  ANXA1, GNLY, NKG7, GIMAP7, TMSB4X, PRF1, CD7, CCL5, RARRES3, CD3D \n##     CD2, KLRD1, GZMH, GZMA, CTSW, GZMB, FGFBP2, CLIC3, IL32, MT2A \n##     FASLG, KLRC1, CST7, RGCC, CD8A, GCHFR, OASL, GZMM, CXCR3, KLRB1 \n## PC_ 4 \n## Positive:  LTB, SELL, CCR7, LEF1, IL7R, CD3D, TRAT1, GIMAP7, ADTRP, PASK \n##     CD3G, TSHZ2, CMTM8, SOCS3, TSC22D3, NPM1, CCL2, MYC, CCL7, CCL8 \n##     CTSL, SNHG8, TXNIP, CD27, S100A9, CA6, C12orf57, TMEM204, HPSE, GPR171 \n## Negative:  NKG7, GZMB, GNLY, CST7, PRF1, CCL5, CLIC3, KLRD1, APOBEC3G, GZMH \n##     GZMA, CTSW, FGFBP2, KLRC1, FASLG, C1orf21, HOPX, SH2D1B, TNFRSF18, CXCR3 \n##     LINC00996, SPON2, RAMP1, ID2, GCHFR, IGFBP7, HLA-DPA1, CD74, XCL2, HLA-DPB1 \n## PC_ 5 \n## Positive:  CCL2, CCL7, CCL8, PLA2G7, TXN, LMNA, SDS, S100A9, CSTB, ATP6V1F \n##     CAPG, CCR1, EMP1, FABP5, CCR5, IDO1, TPM4, LILRB4, MGST1, CTSB \n##     HPSE, CCNA1, GCLM, PDE4DIP, HSPA1A, CD63, SLC7A11, HSPA5, VIM, HSP90B1 \n## Negative:  VMO1, FCGR3A, MS4A4A, CXCL16, MS4A7, PPM1N, HN1, LST1, SMPDL3A, ATP1B3 \n##     CASP5, CDKN1C, AIF1, CH25H, PLAC8, SERPINA1, TMSB4X, LRRC25, CD86, GBP5 \n##     HCAR3, RP11-290F20.3, COTL1, RGS19, VNN2, PILRA, STXBP2, LILRA5, C3AR1, FCGR3B\n\n\nElbowPlot(ifnb.filtered) # Visualise the dimensionality of the data, looks like 15 PCs is adequate to capture the majority of the variation in the data, but we'll air on the higher side and consider all 20 dimensions.\n</code></pre> </p> <p><pre><code>ifnb.filtered &lt;- RunUMAP(ifnb.filtered, dims = 1:20, reduction = 'pca')\n\n## Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric\n## To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'\n## This message will be shown once per session\n## 14:30:14 UMAP embedding parameters a = 0.9922 b = 1.112\n## 14:30:14 Read 13548 rows and found 20 numeric columns\n## 14:30:14 Using Annoy for neighbor search, n_neighbors = 30\n## 14:30:14 Building Annoy index with metric = cosine, n_trees = 50\n## 0%   10   20   30   40   50   60   70   80   90   100%\n## [----|----|----|----|----|----|----|----|----|----|\n## **************************************************|\n## 14:30:14 Writing NN index file to temp file /var/folders/pv/fvynh7953flggrfb49p2lqsc0000gn/T//RtmpZktc52/file2641625758f9\n## 14:30:14 Searching Annoy index using 1 thread, search_k = 3000\n## 14:30:17 Annoy recall = 100%\n## 14:30:17 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30\n## 14:30:17 Initializing from normalized Laplacian + noise (using RSpectra)\n## 14:30:17 Commencing optimization for 200 epochs, with 582700 positive edges\n## 14:30:21 Optimization finished\n\nDimPlot(ifnb.filtered, reduction = 'umap', group.by = 'stim') # lets see how our cells separate by condition and whether integration is necessary\n</code></pre> <pre><code>DimPlot(ifnb.filtered, reduction = 'pca', group.by = 'stim') # lets see how our cells separate by condition and whether integration is necessary\n</code></pre></p> <p></p> <p>These are PBMCs before and after treatment, there should be cells that are similar between both conditions, it looks like we\u2019ll have to run some batch effect correction to overlay similar cell-types from both conditions to perform downstream analysis</p> <p>Question</p> <ul> <li>Do you think we need to integrate our data? Hint: Look at the UMAP and PC1/PC2 plots we made above</li> <li>What do you think would happen if we were to perform unsupervised clustering right now, without integrating our data (or overlaying similar cells ontop of each other from both conditions)?</li> </ul>"},{"location":"tutorials/seurat-de/seurat-de/#step-4-integrating-our-data-using-the-harmony-method","title":"Step 4: Integrating our data using the harmony method","text":"<p>Seurat v5 has made it really easy to test different integration methods quickly, let\u2019s use a really popular approach (harmony) first.</p> <p><pre><code># code adapted from: https://satijalab.org/seurat/articles/seurat5_integration\nifnb.filtered &lt;- IntegrateLayers(object = ifnb.filtered,\n                                 method = HarmonyIntegration,\n                                 orig.reduction = \"pca\", \n                                 new.reduction = \"harmony\")\n\n## Transposing data matrix\n## Using automatic lambda estimation\n## Initializing state using k-means centroids initialization\n## Harmony 1/10\n## Harmony 2/10\n## Harmony 3/10\n## Harmony converged after 3 iterations\n\nifnb.filtered &lt;- RunUMAP(ifnb.filtered, reduction = \"harmony\", dims = 1:20, reduction.name = \"umap.harmony\")\n\n## 14:30:30 UMAP embedding parameters a = 0.9922 b = 1.112\n## 14:30:30 Read 13548 rows and found 20 numeric columns\n## 14:30:30 Using Annoy for neighbor search, n_neighbors = 30\n## 14:30:30 Building Annoy index with metric = cosine, n_trees = 50\n## 0%   10   20   30   40   50   60   70   80   90   100%\n## [----|----|----|----|----|----|----|----|----|----|\n## **************************************************|\n## 14:30:30 Writing NN index file to temp file /var/folders/pv/fvynh7953flggrfb49p2lqsc0000gn/T//RtmpZktc52/file2641501f5779\n## 14:30:30 Searching Annoy index using 1 thread, search_k = 3000\n## 14:30:32 Annoy recall = 100%\n## 14:30:32 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30\n## 14:30:33 Initializing from normalized Laplacian + noise (using RSpectra)\n## 14:30:33 Commencing optimization for 200 epochs, with 586972 positive edges\n## 14:30:37 Optimization finished\n\nafter.harmony &lt;- DimPlot(ifnb.filtered, reduction = \"umap.harmony\", group.by = \"stim\") + \n  ggtitle(\"After Harmony Integration\")\nbefore.integration &lt;- DimPlot(ifnb.filtered, reduction = \"umap\", group.by = \"stim\") +\n  ggtitle(\"Before Integration\")\n\nbefore.integration | after.harmony\n</code></pre> </p> <p>Question</p> <p>Looking at the UMAPs above, do you think integration was successful? Have a slide on what if its just different cell types.</p> <p>Question</p> <p>Try looking at the PC1 and PC2 plots for harmony and seurat as well</p>"},{"location":"tutorials/seurat-de/seurat-de/#step-5-integrating-our-data-using-an-alternative-seurat-cca-method","title":"Step 5: Integrating our data using an alternative Seurat CCA method","text":"<pre><code>ifnb.filtered &lt;- IntegrateLayers(object = ifnb.filtered,\n                                 method = CCAIntegration,\n                                 orig.reduction = \"pca\", \n                                 new.reduction = \"integrated.cca\")\n\n## Finding all pairwise anchors\n## Running CCA\n## Merging objects\n## Finding neighborhoods\n## Finding anchors\n##  Found 13439 anchors\n## Merging dataset 1 into 2\n## Extracting anchors for merged samples\n## Finding integration vectors\n## Finding integration vector weights\n## Integrating data\n\nifnb.filtered &lt;- RunUMAP(ifnb.filtered, reduction = \"integrated.cca\", dims = 1:20, reduction.name = \"umap.cca\")\n\n## 14:32:20 UMAP embedding parameters a = 0.9922 b = 1.112\n## 14:32:20 Read 13548 rows and found 20 numeric columns\n## 14:32:20 Using Annoy for neighbor search, n_neighbors = 30\n## 14:32:20 Building Annoy index with metric = cosine, n_trees = 50\n## 0%   10   20   30   40   50   60   70   80   90   100%\n## [----|----|----|----|----|----|----|----|----|----|\n## **************************************************|\n## 14:32:20 Writing NN index file to temp file /var/folders/pv/fvynh7953flggrfb49p2lqsc0000gn/T//RtmpZktc52/file26411d5fec2d\n## 14:32:20 Searching Annoy index using 1 thread, search_k = 3000\n## 14:32:22 Annoy recall = 100%\n## 14:32:23 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30\n## 14:32:23 Initializing from normalized Laplacian + noise (using RSpectra)\n## 14:32:23 Commencing optimization for 200 epochs, with 595440 positive edges\n## 14:32:27 Optimization finished\n\nafter.seuratCCA &lt;- DimPlot(ifnb.filtered, reduction = \"umap.cca\", group.by = \"stim\") +\n  ggtitle(\"After Seurat CCA Integration\")\n\nbefore.integration | after.seuratCCA\n</code></pre> <p><pre><code>after.harmony | after.seuratCCA\n\n## Show example slide of integration 'failing' but due to different cell types in each sample ***\n</code></pre> </p> <p>Question</p> <p>What do you think of the integration results now?</p> <p>Hint: Also look at the PC1 and PC2 plots for each integration method.</p>"},{"location":"tutorials/seurat-de/seurat-de/#step-6-perform-standard-clustering-steps-after-integration","title":"Step 6: Perform standard clustering steps after integration","text":"<p>This step collapses individual control and treatment datasets together and needs to be done before differential expression analysis</p> <pre><code>ifnb.filtered &lt;- FindNeighbors(ifnb.filtered, reduction = \"integrated.cca\", dims = 1:20)\n\n## Computing nearest neighbor graph\n## Computing SNN\n\nifnb.filtered &lt;- FindClusters(ifnb.filtered, resolution = 0.5)\n\n## Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n## \n## Number of nodes: 13548\n## Number of edges: 522234\n## \n## Running Louvain algorithm...\n## Maximum modularity in 10 random starts: 0.9001\n## Number of communities: 14\n## Elapsed time: 1 seconds\n\nifnb.filtered &lt;- JoinLayers(ifnb.filtered)\n</code></pre>"},{"location":"tutorials/seurat-de/seurat-de/#section-2-differential-gene-expression-when-dealing-with-two-treatment-conditions","title":"Section 2: Differential Gene Expression when dealing with two treatment conditions","text":"<p><pre><code>DimPlot(ifnb.filtered, reduction = \"umap.cca\", label = T)\n</code></pre> </p> <p><pre><code>DimPlot(ifnb.filtered, reduction = \"umap.cca\", group.by = \"stim\")\n</code></pre> </p>"},{"location":"tutorials/seurat-de/seurat-de/#step-1-find-conserved-markers-to-label-our-celltypes","title":"Step 1. Find Conserved Markers to label our celltypes","text":"<pre><code>## Let's look at conserved markers in cluster 4 across our two conditions (compared to all other clusters)\nmarkers.cluster.4 &lt;- FindConservedMarkers(ifnb.filtered, ident.1 = 4,\n                     grouping.var = 'stim')\n\n## Testing group CTRL: (4) vs (0, 11, 2, 7, 1, 5, 10, 9, 3, 6, 12, 8, 13)\n## For a (much!) faster implementation of the Wilcoxon Rank Sum Test,\n## (default method for FindMarkers) please install the presto package\n## --------------------------------------------\n## install.packages('devtools')\n## devtools::install_github('immunogenomics/presto')\n## --------------------------------------------\n## After installation of presto, Seurat will automatically use the more \n## efficient implementation (no further action necessary).\n## This message will be shown once per session\n## Testing group STIM: (4) vs (5, 11, 1, 3, 0, 7, 9, 2, 6, 8, 10, 12, 13)\n\nhead(markers.cluster.4)\n\n##          CTRL_p_val CTRL_avg_log2FC CTRL_pct.1 CTRL_pct.2 CTRL_p_val_adj\n## VMO1    0.00000e+00        6.017864      0.841      0.060   0.000000e+00\n## FCGR3A  0.00000e+00        4.135634      0.980      0.204   0.000000e+00\n## MS4A7   0.00000e+00        3.739717      0.957      0.196   0.000000e+00\n## CXCL16  0.00000e+00        2.929754      0.951      0.233   0.000000e+00\n## MS4A4A  0.00000e+00        5.147604      0.581      0.025   0.000000e+00\n## LST1   1.88603e-288        2.858100      0.929      0.251  2.650439e-284\n##        STIM_p_val STIM_avg_log2FC STIM_pct.1 STIM_pct.2 STIM_p_val_adj\n## VMO1            0        7.576584      0.717      0.022              0\n## FCGR3A          0        5.125698      0.989      0.128              0\n## MS4A7           0        3.916075      0.991      0.219              0\n## CXCL16          0        3.852775      0.922      0.148              0\n## MS4A4A          0        4.821562      0.899      0.073              0\n## LST1            0        3.057945      0.890      0.192              0\n##            max_pval minimump_p_val\n## VMO1    0.00000e+00              0\n## FCGR3A  0.00000e+00              0\n## MS4A7   0.00000e+00              0\n## CXCL16  0.00000e+00              0\n## MS4A4A  0.00000e+00              0\n## LST1   1.88603e-288              0\n\n## **Explain p_val adjusted and p_val and avg_log2FC** in slide\n</code></pre> <p>Let\u2019s visualise the top upregulated, conserved between condition, marker genes identified in cluster 4 using the FeaturePlot() function.</p> <p>Question</p> <p>Try running the function in the code block below without defining a min.cutoff, or changing the value of the min.cutoff parameter.</p> <pre><code># Try looking up some of these markers here: https://www.proteinatlas.org/\nFeaturePlot(ifnb.filtered, reduction = \"umap.cca\", \n            features = c('VMO1', 'FCGR3A', 'MS4A7', 'CXCL16'), min.cutoff = 'q10')\n</code></pre> <p></p> <pre><code># I happen to know that the cells in cluster 3 are CD16 monocytes - lets rename this cluster\nIdents(ifnb.filtered) # Let's look at the identities of our cells at the moment\n</code></pre> Cell identities <pre><code>##  AAACATACATTTCC.1  AAACATACCAGAAA.1  AAACATACCTCGCT.1  AAACATACCTGGTA.1 \n##                 0                 0                 0                11 \n##  AAACATACGATGAA.1  AAACATACGGCATT.1  AAACATACTGCGTA.1  AAACATACTGCTGA.1 \n##                 2                 0                 7                 1 \n##  AAACATTGAGTGTC.1  AAACATTGCTTCGC.1  AAACCGTGAGCCAT.1  AAACCGTGGAGGCA.1 \n##                 5                 0                 1                 7 \n##  AAACCGTGTGCTAG.1  AAACGCACACTTTC.1  AAACGCACAGTACC.1  AAACGCACCAACCA.1 \n##                 5                 5                10                 1 \n##  AAACGCACGCTGTA.1  AAACGCACGGGAGT.1  AAACGCACTCGCCT.1  AAACGCTGACCTTT.1 \n##                 9                 1                 0                 7 \n##  AAACGCTGCAGTTG.1  AAACGCTGCCTAAG.1  AAACGCTGCGTTGA.1  AAACGCTGCTGACA.1 \n##                 5                 1                 1                 9 \n##  AAACGCTGGATAAG.1  AAACGCTGGGACAG.1  AAACGCTGGGGATG.1  AAACGCTGGGTTTG.1 \n##                 1                 0                 0                 5 \n##  AAACGCTGTAGCGT.1  AAACGCTGTGCTAG.1  AAACGCTGTTCCAT.1  AAACGGCTAGAGTA.1 \n##                 3                 9                 7                 0 \n##  AAACGGCTAGTACC.1  AAACGGCTGGTCAT.1  AAACGGCTTACTCT.1  AAACGGCTTCTCTA.1 \n##                 1                 5                 4                 0 \n##  AAACTTGACCTGAA.1  AAACTTGACTCTTA.1  AAACTTGACTGAGT.1  AAACTTGACTGGAT.1 \n##                 0                 6                 3                 4 \n##  AAACTTGAGACGAG.1  AAACTTGAGCCCTT.1  AAACTTGAGGAAAT.1  AAAGACGAAACAGA.1 \n##                 6                 2                 2                 0 \n##  AAAGACGAACACGT.1  AAAGACGAAGTCTG.1  AAAGACGACCCGTT.1  AAAGACGACGCCTT.1 \n##                 2                 1                 6                 5 \n##  AAAGACGACGGAGA.1  AAAGACGAGTAAGA.1  AAAGAGACGAGGTG.1  AAAGAGACTCAGAC.1 \n##                 1                 0                 0                 1 \n##  AAAGAGACTCTGGA.1  AAAGATCTACCCTC.1  AAAGATCTGACACT.1  AAAGATCTTGCAGT.1 \n##                 2                 0                 1                 0 \n##  AAAGCAGAAGTTCG.1  AAAGCAGAGTTTCT.1  AAAGCAGATGCAAC.1  AAAGCCTGAAGTAG.1 \n##                10                 0                 4                 0 \n##  AAAGCCTGACGTGT.1  AAAGCCTGCTAGCA.1  AAAGCCTGGCTAAC.1  AAAGCCTGGGATTC.1 \n##                 1                 3                 5                 4 \n##  AAAGCCTGTACAGC.1  AAAGCCTGTGGTAC.1  AAAGGCCTAAACGA.1  AAAGGCCTAGTCTG.1 \n##                 5                 2                 4                 0 \n##  AAAGGCCTCGAGAG.1  AAAGGCCTGAGGAC.1  AAAGTTTGAACCAC.1  AAAGTTTGACTCTT.1 \n##                12                 4                 3                 7 \n##  AAAGTTTGCGAGAG.1  AAAGTTTGCTGAGT.1  AAAGTTTGTAGCGT.1  AAAGTTTGTGTGGT.1 \n##                 4                 1                 2                 0 \n##  AAAGTTTGTTCGTT.1  AAATACTGGGTTCA.1  AAATACTGGTTCTT.1  AAATACTGGTTGAC.1 \n##                 0                 4                 0                 7 \n##  AAATCAACCTGTAG.1  AAATCAACGGTCAT.1  AAATCATGACACCA.1  AAATCATGACACGT.1 \n##                 4                 0                 1                 2 \n##  AAATCATGCTCTAT.1  AAATCATGGAGAGC.1  AAATCATGGGTTCA.1  AAATCCCTAAGAAC.1 \n##                 0                 0                 0                 0 \n##  AAATCCCTACACAC.1  AAATCCCTCTTGAG.1  AAATCCCTGCTATG.1  AAATCCCTGTTGAC.1 \n##                 2                 0                 2                 2 \n##  AAATCCCTTAGCGT.1  AAATCCCTTTCCAT.1  AAATCTGACTTTAC.1  AAATCTGAGCTTCC.1 \n##                 6                 3                 3                 0 \n##  AAATGGGAAACCTG.1  AAATGGGACTCATT.1  AAATGGGAGACAGG.1  AAATGGGAGGGAGT.1 \n##                10                 5                 3                 0 \n##  AAATGGGAGTCCTC.1  AAATGGGAGTCTGA.1  AAATGTTGAGAGTA.1  AAATGTTGAGCTCA.1 \n##                 1                 0                 6                 0 \n##  AAATGTTGCCAAGT.1  AAATGTTGCCTCCA.1  AAATGTTGTCTTTG.1  AAATTCGAAGCTCA.1 \n##                 2                 4                 0                 0 \n##  AAATTCGATGTGCA.1  AAATTGACAAACAG.1  AAATTGACCACTTT.1  AAATTGACCTGAGT.1 \n##                 0                 0                 1                 0 \n##  AAATTGACCTGATG.1  AAATTGACTGCCCT.1  AAATTGACTTTCTG.1  AACAAACTCATGCA.1 \n##                 0                 8                 1                 3 \n##  AACAATACCCCAAA.1  AACAATACCCCTCA.1  AACAATACGCAAGG.1  AACAATACGGATTC.1 \n##                 1                 0                 0                 5 \n##  AACACGTGAAACGA.1  AACACGTGCCCTCA.1  AACACGTGCGCATA.1  AACACGTGCTGTGA.1 \n##                 2                 4                10                 5 \n##  AACACTCTAAGGGC.1  AACACTCTAAGTAG.1  AACACTCTCAGAGG.1  AACACTCTCTTGTT.1 \n##                 1                 0                 2                 0 \n##  AACACTCTGAAAGT.1  AACACTCTGGAGGT.1  AACAGAGAACGGTT.1  AACAGAGAAGTACC.1 \n##                 0                 0                 0                 1 \n##  AACAGAGACAGATC.1  AACAGAGACGTTGA.1  AACAGAGACTTCCG.1  AACAGAGAGGCGAA.1 \n##                 1                 2                 3                 2 \n##  AACAGAGATGCTTT.1  AACAGCACAACGTC.1  AACAGCACAGTCAC.1  AACAGCACATCGAC.1 \n##                 0                 0                 0                 1 \n##  AACAGCACGAGACG.1  AACAGCACTGGGAG.1  AACCACGAAGTAGA.1  AACCACGAAGTGTC.1 \n##                 0                 0                 2                 3 \n##  AACCACGACCACCT.1  AACCACGAGAATCC.1  AACCACGAGGTGGA.1  AACCAGTGGACGAG.1 \n##                 9                 0                 3                 1 \n##  AACCAGTGTTTCTG.1  AACCCAGAAGCCAT.1  AACCCAGACCGATA.1  AACCCAGAGCTGTA.1 \n##                 3                 3                 0                 5 \n##  AACCCAGAGTAGGG.1  AACCCAGATCCTCG.1  AACCCAGATGAGGG.1  AACCGATGCTGATG.1 \n##                 1                 7                 8                 2 \n##  AACCGATGTCCAGA.1  AACCGCCTAGTTCG.1  AACCGCCTCAGGAG.1  AACCGCCTGCATAC.1 \n##                 1                12                 3                 1 \n##  AACCGCCTGTGTAC.1  AACCGCCTTGCCTC.1  AACCTACTTCTCCG.1  AACCTTACAGGGTG.1 \n##                 1                 3                 1                 5 \n##  AACCTTACCAAGCT.1  AACCTTACGCTACA.1  AACCTTACGGTATC.1  AACCTTACTCCCAC.1 \n##                 0                 2                 1                 1 \n##  AACCTTACTTTGTC.1  AACCTTTGAAGGTA.1  AACCTTTGCGCATA.1  AACCTTTGTGCCCT.1 \n##                 2                 1                 9                 0 \n##  AACGCAACTTGCAG.1  AACGCATGACCTAG.1  AACGCATGGAACTC.1  AACGCATGGCCATA.1 \n##                 1                 0                 4                 0 \n##  AACGCATGGGGAGT.1  AACGCATGTAGAAG.1  AACGCCCTAATCGC.1  AACGCCCTATTGGC.1 \n##                 5                 0                 1                 1 \n##  AACGCCCTTCTTAC.1  AACGCCCTTCTTTG.1  AACGGTACAAGAGT.1  AACGGTACGGTCTA.1 \n##                 6                 7                 0                 0 \n##  AACGGTTGACGTTG.1  AACGGTTGACTACG.1  AACGGTTGTCCAGA.1  AACGTCGACATTGG.1 \n##                 9                 4                 0                 8 \n##  AACGTCGACGTTGA.1  AACGTGTGAAGGTA.1  AACGTGTGCACTCC.1  AACGTGTGTATTCC.1 \n##                 8                 2                 0                 0 \n##  AACGTTCTATGTCG.1  AACGTTCTCGTTGA.1  AACGTTCTCTAGTG.1  AACGTTCTTCCGTC.1 \n##                 0                 0                 0                 7 \n##  AACGTTCTTTCATC.1  AACTACCTACCATG.1  AACTACCTCCCTAC.1  AACTACCTGTAAAG.1 \n##                 3                 1                 8                 4 \n##  AACTACCTGTACAC.1  AACTACCTTCGCCT.1  AACTACCTTTCGGA.1  AACTACCTTTGGCA.1 \n##                 5                 1                10                 2 \n##  AACTCACTCTTGTT.1  AACTCACTGACGTT.1  AACTCACTTTAGGC.1  AACTCGGAATTCTC.1 \n##                 0                 0                 9                 0 \n##  AACTCGGACTGCAA.1  AACTCGGAGCATAC.1  AACTCGGATGCAGT.1  AACTCTTGCACACA.1 \n##                 4                 9                 4                 1 \n##  AACTCTTGCATTCT.1  AACTCTTGGTAGGG.1  AACTCTTGTTCACT.1  AACTCTTGTTCCCG.1 \n##                 4                 0                 0                 2 \n##  AACTGTCTATCTCT.1  AACTGTCTGACGTT.1  AACTTGCTCGAGAG.1  AACTTGCTTGAGCT.1 \n##                 0                 3                 1                 1 \n##  AACTTGCTTGGTTG.1  AAGAACGAAACGAA.1  AAGAACGAAGAGTA.1  AAGAACGACAGGAG.1 \n##                 4                 4                 9                 0 \n##  AAGAACGACCTCAC.1  AAGAACGATACGCA.1  AAGAACGATCGCAA.1  AAGAAGACCCAAGT.1 \n##                 7                 0                 2                 0 \n##  AAGAAGACCGTGAT.1  AAGAAGACCTGTCC.1  AAGAAGACGGTGGA.1  AAGAAGACTGCTGA.1 \n##                 0                 1                 0                 2 \n##  AAGAATCTCTGTGA.1  AAGAATCTGTGAGG.1  AAGACAGAACCTGA.1  AAGACAGAGCCCTT.1 \n##                 6                 0                 0                 0 \n##  AAGACAGAGTTAGC.1  AAGAGATGACGCTA.1  AAGAGATGGGTCAT.1  AAGAGATGTTGAGC.1 \n##                 0                 5                 5                 0 \n##  AAGATGGACCGATA.1  AAGATGGATCCAAG.1  AAGATGGATCTTTG.1  AAGATTACCAAGCT.1 \n##                 1                 6                11                 6 \n##  AAGATTACGGAGTG.1  AAGATTACTCTCCG.1  AAGCAAGAAGGGTG.1  AAGCAAGATAACCG.1 \n##                 3                 0                 2                 4 \n##  AAGCAAGATATGCG.1  AAGCAAGATCACCC.1  AAGCAAGATGGTCA.1  AAGCAAGATTGCGA.1 \n##                 1                 0                 4                10 \n##  AAGCACTGAGGTCT.1  AAGCACTGCAAAGA.1  AAGCACTGCCATGA.1  AAGCCAACAGAATG.1 \n##                 0                 4                 3                 2 \n##  AAGCCAACCTTGAG.1  AAGCCAACGTGTTG.1  AAGCCAACTTCGGA.1  AAGCCATGTCCCGT.1 \n##                12                 9                 0                 3 \n##  AAGCCATGTGTGGT.1  AAGCCTGATCAGTG.1  AAGCGACTATGTCG.1  AAGCGACTCTGGAT.1 \n##                 4                 1                 1                 0 \n##  AAGCGACTGTCAAC.1  AAGCGACTGTCTGA.1  AAGCGACTTCTTAC.1  AAGCGACTTGCGTA.1 \n##                 0                 3                 1                 1 \n##  AAGCGACTTGCTAG.1  AAGCGTACGGTGTT.1  AAGCGTACTGAAGA.1  AAGCGTACTTTGCT.1 \n##                 0                 1                 5                 1 \n##  AAGGCTACCTTGTT.1  AAGGCTTGCGTACA.1  AAGGCTTGGAGACG.1  AAGGCTTGGTTCGA.1 \n##                 2                 1                 8                10 \n##  AAGGCTTGTCAGAC.1  AAGGCTTGTCAGTG.1  AAGGCTTGTCCAGA.1  AAGGCTTGTTCCAT.1 \n##                 0                 0                 1                 6 \n##  AAGGTCACACCTTT.1  AAGGTCACCGGGAA.1  AAGGTCACTCGATG.1  AAGGTCACTGGAAA.1 \n##                 3                 2                 2                 3 \n##  AAGGTCTGACGGTT.1  AAGGTCTGTGTGGT.1  AAGGTGCTTAAGCC.1  AAGGTGCTTCAGAC.1 \n##                 2                 1                 0                 1 \n##  AAGTAACTATCAGC.1  AAGTAACTGTCAAC.1  AAGTAACTTCAGTG.1  AAGTAGGACACAAC.1 \n##                 0                 2                 6                 0 \n##  AAGTAGGAGACGTT.1  AAGTAGGAGGAAGC.1  AAGTAGGAGTCGTA.1  AAGTAGGATTATCC.1 \n##                 0                 0                 3                 0 \n##  AAGTATACCGCCTT.1  AAGTATACTGGAAA.1  AAGTCCGACGTAAC.1  AAGTCCGACTCAAG.1 \n##                 3                 1                 2                 0 \n##  AAGTCCGACTCTCG.1  AAGTCCGACTGGTA.1  AAGTCCGATTCGGA.1  AAGTCTCTGAAAGT.1 \n##                 1                 2                 1                 1 \n##  AAGTCTCTGGTAAA.1  AAGTGCACCCTTTA.1  AAGTGCACCTACGA.1  AAGTGCACCTACTT.1 \n##                 4                 0                 8                 2 \n##  AAGTGCACGTGAGG.1  AAGTGCACTCTAGG.1  AAGTGCACTCTATC.1  AAGTGCACTGCTCC.1 \n##                 0                 0                 0                 1 \n##  AAGTGGCTACCCTC.1  AAGTGGCTACGGGA.1  AAGTGGCTACTGTG.1  AAGTGGCTCCAGTA.1 \n##                 1                 1                 0                 0 \n##  AAGTGGCTCCTACC.1  AAGTGGCTCGGGAA.1  AAGTGGCTGGTGTT.1  AAGTGGCTGTAAAG.1 \n##                 0                 0                 3                 4 \n##  AAGTTATGAGTTCG.1  AAGTTATGCAAGCT.1  AAGTTATGCAGAAA.1  AAGTTATGCAGATC.1 \n##                 2                 0                 0                 0 \n##  AAGTTATGCGGGAA.1  AAGTTATGCTAAGC.1  AAGTTATGGGTGTT.1  AAGTTATGGTCGAT.1 \n##                 2                 0                 3                 0 \n##  AAGTTATGTGCTAG.1  AAGTTATGTTACTC.1  AAGTTCCTACCAAC.1  AAGTTCCTAGAAGT.1 \n##                 1                 2                 3                 2 \n##  AAGTTCCTTGCAAC.1  AATAACACTGGTTG.1  AATAAGCTAGTTCG.1  AATAAGCTCTATTC.1 \n##                 1                 3                 8                 2 \n##  AATAAGCTGGACGA.1  AATAAGCTTGCCCT.1  AATAAGCTTGGAAA.1  AATACCCTACCTTT.1 \n##                 6                 1                 2                 8 \n##  AATACCCTGACACT.1  AATACCCTGGACGA.1  AATACCCTGTCGAT.1  AATACCCTTTAGGC.1 \n##                 5                10                 1                 1 \n##  AATACTGAAGGAGC.1  AATACTGAAGTTCG.1  AATACTGAGGTACT.1  AATACTGATCGCTC.1 \n##                 0                 0                 0                 0 \n##  AATACTGATTGTGG.1  AATAGGGAAAGGGC.1  AATAGGGACAGATC.1  AATAGGGACATTTC.1 \n##                 1                 0                 5                 7 \n##  AATAGGGAGGGAGT.1  AATAGGGATTATCC.1  AATATCGAGAGGCA.1  AATCAAACACCTTT.1 \n##                 0                 8                 0                 4 \n##  AATCAAACCCTGTC.1  AATCAAACTCCTTA.1  AATCCGGAGCTACA.1  AATCCGGATTGCTT.1 \n##                 0                 0                 1                 0 \n##  AATCCTACACGGGA.1  AATCCTACGGATTC.1  AATCCTACTCGTTT.1  AATCCTACTGCAGT.1 \n##                 3                 0                 4                 0 \n##  AATCCTACTGTCCC.1  AATCCTTGCGCTAA.1  AATCCTTGCTCTTA.1  AATCCTTGGTATGC.1 \n##                 2                 0                 0                 8 \n##  AATCCTTGGTGTTG.1  AATCGGTGAGGAGC.1  AATCGGTGGAGATA.1  AATCGGTGGGTACT.1 \n##                 0                 1                 1                 0 \n##  AATCGGTGGTAAAG.1  AATCGGTGGTCAAC.1  AATCGGTGTTGGTG.1  AATCTAGAAAAGCA.1 \n##                 2                 1                 6                 9 \n##  AATCTAGAGCCTTC.1  AATCTAGAGGCATT.1  AATCTAGATAGCCA.1  AATCTAGATTCTAC.1 \n##                 0                 0                 0                 7 \n##  AATCTCACGACGAG.1  AATCTCACTTCGCC.1  AATCTCTGAGTCGT.1  AATCTCTGAGTCTG.1 \n##                 6                 1                 0                 7 \n##  AATCTCTGTGGTCA.1  AATCTCTGTTCGTT.1  AATGAGGAGGGCAA.1  AATGCGTGCACACA.1 \n##                 3                 7                 5                 2 \n##  AATGCGTGGGGACA.1  AATGCGTGTCCCAC.1  AATGCGTGTGAACC.1  AATGGAGACAAAGA.1 \n##                 2                 6                 2                 0 \n##  AATGGAGAGTCTAG.1  AATGGAGATACGAC.1  AATGGAGATCTACT.1  AATGGAGATCTGGA.1 \n##                 0                 1                 0                 3 \n##  AATGGCTGAAGGTA.1  AATGGCTGCACCAA.1  AATGGCTGCATCAG.1  AATGGCTGGTTAGC.1 \n##                 0                 1                 0                 0 \n##  AATGGCTGTTCGTT.1  AATGTAACACGGTT.1  AATGTAACCTCCCA.1  AATGTAACGGTCAT.1 \n##                 6                 4                 2                 0 \n##  AATGTAACTGAGAA.1  AATGTAACTGCATG.1  AATGTAACTTTGCT.1  AATGTCCTAGCATC.1 \n##                 0                 0                 0                 1 \n##  AATGTCCTCACAAC.1  AATGTCCTGGAACG.1  AATGTCCTTACGCA.1  AATGTTGAAAACAG.1 \n##                 2                 1                 3                 0 \n##  AATGTTGAAACAGA.1  AATGTTGAACTTTC.1  AATGTTGAATTTCC.1  AATGTTGAGAATAG.1 \n##                 7                 2                 0                 4 \n##  AATGTTGAGGTATC.1  AATGTTGATTGTGG.1  AATTACGAAAACGA.1  AATTACGAACCTTT.1 \n##                 3                 0                 1                11 \n##  AATTACGACTATTC.1  AATTACGATTGCTT.1  AATTCCTGATCAGC.1  AATTCCTGCAGAAA.1 \n##                 1                 0                 4                 0 \n##  AATTCCTGCCACCT.1  AATTCCTGCTATTC.1  AATTCCTGGAACCT.1  AATTCCTGTTGACG.1 \n##                 0                 1                 4                 0 \n##  AATTCCTGTTTACC.1  AATTGATGCACTAG.1  AATTGATGCATTGG.1  AATTGATGCCACCT.1 \n##                 0                 0                 3                 8 \n##  AATTGATGGAACCT.1  AATTGATGTGCTCC.1  AATTGTGAAGATGA.1  AATTGTGACCTAAG.1 \n##                 1                11                 7                 0 \n##  AATTGTGACGCTAA.1  AATTGTGACTGTTT.1  AATTGTGAGTACAC.1  ACAAAGGAACAGCT.1 \n##                 1                 4                 0                 0 \n##  ACAAAGGAAGATCC.1  ACAAAGGAAGGAGC.1  ACAAAGGATCCAGA.1  ACAAAGGATTATCC.1 \n##                 0                 6                 5                 2 \n##  ACAAATTGACCTGA.1  ACAAATTGGTTCGA.1  ACAAATTGTAGAAG.1  ACAACCGAAGCATC.1 \n##                 0                 0                 5                 0 \n##  ACAACCGACGAGAG.1  ACAACCGACTGGTA.1  ACAACCGATCCAGA.1  ACAACCGATCTTCA.1 \n##                 0                 7                 4                 3 \n##  ACAACCGATTTACC.1  ACAAGAGAAAAACG.1  ACAAGAGAAAACGA.1  ACAAGAGACAATCG.1 \n##                 5                 1                 0                 2 \n##  ACAAGAGACAGTTG.1  ACAAGAGACGAGTT.1  ACAAGAGACTTGAG.1  ACAAGAGATATCTC.1 \n##                 0                 3                 0                 8 \n##  ACAAGCACAATCGC.1  ACAAGCACCTTACT.1  ACAAGCACTACGAC.1  ACAAGCACTTCACT.1 \n##                 0                 0                 2                 1 \n##  ACAATAACACACTG.1  ACAATAACCGTACA.1  ACAATAACTGCCAA.1  ACAATCCTAGTCGT.1 \n##                 4                 1                 4                 0 \n##  ACAATCCTATCTCT.1  ACAATCCTTCGACA.1  ACAATCCTTCTTCA.1  ACAATCCTTGGAGG.1 \n##                 1                 2                 4                 0 \n##  ACAATTGAAGCTCA.1  ACAATTGACTAGAC.1  ACAATTGATTCATC.1  ACACAGACTTTCAC.1 \n##                 0                 2                 0                 1 \n##  ACACATCTACCAGT.1  ACACATCTCGCCTT.1  ACACATCTCTAGAC.1  ACACATCTCTGTGA.1 \n##                 0                 0                 2                 2 \n##  ACACATCTGTATCG.1  ACACATCTTCACCC.1  ACACCAGACATGAC.1  ACACCAGACTAGTG.1 \n##                 2                 6                 4                 7 \n##  ACACCAGAGTCATG.1  ACACCCTGATGGTC.1  ACACCCTGTCCTAT.1  ACACGAACACTAGC.1 \n##                 0                 8                 2                 2 \n##  ACACGAACGCTGTA.1  ACACGAACTGTCCC.1  ACACGATGAGCGTT.1  ACACGATGCATGGT.1 \n##                 9                 8                 1                 3 \n##  ACACGATGGGCATT.1  ACACGATGTCCCAC.1  ACACGATGTTCTAC.1  ACACGTGAAGACTC.1 \n##                 0                 0                 2                 4 \n##  ACACGTGAAGATGA.1  ACACGTGATTCATC.1  ACAGACACAAGTAG.1  ACAGACACACCTAG.1 \n##                 2                 0                 1                 7 \n##  ACAGACACCTAAGC.1  ACAGCAACTCTTTG.1  ACAGCAACTTCGGA.1  ACAGCAACTTGTGG.1 \n##                 7                 4                 0                 8 \n##  ACAGGTACAGAATG.1  ACAGGTACCCTACC.1  ACAGGTACGAATCC.1  ACAGGTACGATGAA.1 \n##                 0                 0                 0                 7 \n##  ACAGGTACGTAGCT.1  ACAGGTACGTTGCA.1  ACAGGTACTTTGCT.1  ACAGTCGACATGAC.1 \n##                10                 2                 1                 0 \n##  ACAGTCGACCCTAC.1  ACAGTCGACTACGA.1  ACAGTGACCCCTAC.1  ACAGTGACCGTTAG.1 \n##                 0                 8                 2                 0 \n##  ACAGTGACCTGCAA.1  ACAGTGACGTGCTA.1  ACAGTGTGCCAAGT.1  ACAGTGTGCCGCTT.1 \n##                 3                 2                 4                 9 \n##  ACAGTGTGCTGTAG.1  ACAGTGTGGCGAAG.1  ACAGTGTGTCTTAC.1  ACAGTGTGTGAACC.1 \n##                 0                 2                 0                 0 \n##  ACAGTGTGTTTGTC.1  ACAGTTCTGGTGAG.1  ACAGTTCTTACGAC.1  ACATACCTAAACGA.1 \n##                 6                 0                 4                 3 \n##  ACATACCTCTAGCA.1  ACATACCTCTCCCA.1  ACATACCTGTAAGA.1  ACATACCTTCCAGA.1 \n##                 4                 7                 1                 8 \n##  ACATCACTAAAACG.1  ACATCACTCAACCA.1  ACATCACTTCTTTG.1  ACATCACTTGGAGG.1 \n##                 5                 1                 2                 7 \n##  ACATGGTGCGATAC.1  ACATGGTGGAATAG.1  ACATGGTGGATGAA.1  ACATGGTGGTTCTT.1 \n##                 0                 0                 6                 0 \n##  ACATGGTGTTCGGA.1  ACATTCTGATAAGG.1  ACATTCTGATGGTC.1  ACATTCTGCCCGTT.1 \n##                 2                 0                 7                 3 \n##  ACATTCTGTATGGC.1  ACATTCTGTCGCCT.1  ACATTCTGTTTGGG.1  ACCAACGAATAAGG.1 \n##                 0                 1                13                 0 \n##  ACCAACGACATGGT.1  ACCAACGAGCTTAG.1  ACCAACGATACGAC.1  ACCACAGACGAGTT.1 \n##                 0                 6                 4                 8 \n##  ACCACAGACGCCTT.1  ACCACAGAGTGTTG.1  ACCACAGATGACAC.1  ACCACAGATGACTG.1 \n##                 3                 2                 1                 0 \n##  ACCACCTGGTACGT.1  ACCACCTGGTGTTG.1  ACCACCTGGTTGAC.1  ACCACGCTACCTTT.1 \n##                 2                 1                 4                 7 \n##  ACCACGCTATCTTC.1  ACCACGCTCTATTC.1  ACCACGCTGACTAC.1  ACCACGCTTTTGTC.1 \n##                 5                 0                 0                 0 \n##  ACCAGCCTGCAGTT.1  ACCAGCCTGGGTGA.1  ACCAGCCTGGTTTG.1  ACCAGTGAAACGGG.1 \n##                 4                 1                 8                 0 \n##  ACCAGTGAACCTTT.1  ACCAGTGAACTGGT.1  ACCAGTGACCGATA.1  ACCAGTGACTCAGA.1 \n##                 3                 7                 5                 1 \n##  ACCATTACTCGCCT.1  ACCATTACTCTTTG.1  ACCATTACTTGCTT.1  ACCATTTGCCACCT.1 \n##                 2                 0                 7                 6 \n##  ACCCAAGAACTGTG.1  ACCCAAGACCTTAT.1  ACCCAAGACTCATT.1  ACCCACTGAACGGG.1 \n##                 0                 2                 3                 0 \n##  ACCCACTGCGGTAT.1  ACCCACTGCTGTAG.1  ACCCAGCTCCCTTG.1  ACCCAGCTTATCGG.1 \n##                 0                 1                 3                 0 \n##  ACCCAGCTTGGATC.1  ACCCAGCTTTGCAG.1  ACCCGTACAACCTG.1  ACCCGTACAGCGTT.1 \n##                 0                 0                 6                 0 \n##  ACCCGTACCGAGAG.1  ACCCGTACCGCAAT.1  ACCCGTACGGAACG.1  ACCCGTACGGACAG.1 \n##                 2                 8                 2                 5 \n##  ACCCGTACTGTGCA.1  ACCCGTTGACCAAC.1  ACCCGTTGCTACTT.1  ACCCGTTGGAGGTG.1 \n##                 0                 1                 5                 0 \n##  ACCCGTTGGCATCA.1  ACCCGTTGGCTATG.1  ACCCGTTGGCTGAT.1  ACCCGTTGTGTGGT.1 \n##                 4                 1                 0                 5 \n##  ACCCTCGAACTCTT.1  ACCCTCGACGCAAT.1  ACCGAAACAGCGTT.1  ACCGAAACCTGTCC.1 \n##                 2                 4                 0                 0 \n##  ACCGAAACGTCCTC.1  ACCGAAACGTGTAC.1  ACCGCGGAACACGT.1  ACCGCGGACAATCG.1 \n##                 0                 0                 0                 5 \n##  ACCGCGGAGAGCAG.1  ACCGTGCTTAACCG.1  ACCTATTGAGCACT.1  ACCTATTGTGAACC.1 \n##                 3                 0                 0                 1 \n##  ACCTATTGTGGAAA.1  ACCTCCGAATCTTC.1  ACCTCCGACACCAA.1  ACCTCCGAGAAAGT.1 \n##                 3                 0                 0                 2 \n##  ACCTCCGAGGTGAG.1  ACCTCGTGCTTGTT.1  ACCTGAGACCGCTT.1  ACCTGAGAGTTGGT.1 \n##                 0                 4                 4                 1 \n##  ACCTGAGATCGCAA.1  ACCTGAGATGCTAG.1  ACCTGGCTACGTGT.1  ACCTGGCTATCGTG.1 \n##                 2                 4                 0                 0 \n##  ACCTGGCTTCTTCA.1  ACCTTTGAAATGCC.1  ACCTTTGAAGATCC.1  ACCTTTGAAGCACT.1 \n##                 0                 0                 6                 2 \n##  ACCTTTGAAGTCTG.1  ACCTTTGATCCCGT.1  ACGAACACGAGCAG.1  ACGAACACGTCTAG.1 \n##                 3                 0                 8                 0 \n##  ACGAACTGACCTCC.1  ACGAACTGCTCCCA.1  ACGAACTGGCGGAA.1  ACGAACTGGTACCA.1 \n##                 0                10                 6                 5 \n##  ACGAACTGTTTGCT.1  ACGAAGCTAGAGGC.1  ACGAAGCTATACCG.1  ACGAAGCTGACGAG.1 \n##                 0                 2                 7                 2 \n##  ACGAAGCTTCGTGA.1  ACGAAGCTTGACCA.1  ACGAAGCTTTCGTT.1  ACGACAACACACGT.1 \n##                 1                 0                 8                10 \n##  ACGACAACGGAAGC.1  ACGACAACGTTACG.1  ACGACAACTTGTGG.1  ACGACCCTCAACTG.1 \n##                 1                 4                 0                 0 \n##  ACGACCCTGAACTC.1  ACGACCCTGGTGGA.1  ACGACCCTGTATGC.1  ACGACCCTTATGCG.1 \n##                10                 0                 8                 8 \n##  ACGAGGGAACCTTT.1  ACGAGGGACCTTAT.1  ACGAGGGAGTCACA.1  ACGAGTACCTCCCA.1 \n##                 0                 1                 0                 2 \n##  ACGAGTACGTCCTC.1  ACGAGTACTATGGC.1  ACGATCGAACGCAT.1  ACGATCGAAGATGA.1 \n##                 4                10                 0                 4 \n##  ACGATCGAATGGTC.1  ACGATCGACCGAAT.1  ACGATCGACGAGAG.1  ACGATCGATGAGGG.1 \n##                 9                 4                 0                 0 \n##  ACGATCGATTGCGA.1  ACGATGACAATGCC.1  ACGATGACCACACA.1  ACGATGACGAACTC.1 \n##                 7                 0                 1                 1 \n##  ACGATGACGGATCT.1  ACGATTCTCCCACT.1  ACGATTCTGACACT.1  ACGATTCTGCGATT.1 \n##                 0                 4                 9                 3 \n##  ACGATTCTGTCACA.1  ACGATTCTTGGAAA.1  ACGCAATGAAGGGC.1  ACGCAATGAGGGTG.1 \n##                 0                 0                 9                 0 \n##  ACGCAATGCACAAC.1  ACGCAATGCCGATA.1  ACGCAATGGTCTAG.1  ACGCAATGGTTCTT.1 \n##                 4                 3                 0                 4 \n##  ACGCAATGTATGGC.1  ACGCACCTCCATAG.1  ACGCACCTGCTATG.1  ACGCACCTTTCCGC.1 \n##                 7                 0                 0                 7 \n##  ACGCCACTACAGTC.1  ACGCCACTGACAGG.1  ACGCCACTTCTTTG.1  ACGCCACTTTCGGA.1 \n##                 2                 1                 9                 8 \n##  ACGCCGGAACTCAG.1  ACGCCGGACATGGT.1  ACGCCGGACGCAAT.1  ACGCCGGATTGCGA.1 \n##                 4                 0                 4                 0 \n##  ACGCCTTGACCTGA.1  ACGCCTTGCGCTAA.1  ACGCCTTGTGTCGA.1  ACGCCTTGTTCTGT.1 \n##                 2                 1                 1                 2 \n##  ACGCGGTGGACGTT.1  ACGCGGTGGGAAAT.1  ACGCGGTGTCTCCG.1  ACGCGGTGTGGCAT.1 \n##                 4                 0                 6                 1 \n##  ACGCTCACAGGTCT.1  ACGCTCACCTAGCA.1  ACGCTCACCTCCAC.1  ACGCTCACGTATGC.1 \n##                 0                 3                 0                 1 \n##  ACGCTCACTAGAGA.1  ACGCTCACTCTTTG.1  ACGCTGCTACTGGT.1  ACGCTGCTAGTTCG.1 \n##                 8                 0                 8                 4 \n##  ACGCTGCTATCGTG.1  ACGCTGCTCGTACA.1  ACGCTGCTGCGTAT.1  ACGCTGCTGCTGTA.1 \n##                 4                 0                 8                 0 \n##  ACGCTGCTGGAAAT.1  ACGGAACTCGCAAT.1  ACGGAACTGTGAGG.1  ACGGAACTGTTCAG.1 \n##                 0                 1                 2                13 \n##  ACGGAACTTCCCAC.1  ACGGAGGACGTAAC.1  ACGGAGGATCTTTG.1  ACGGATTGCTCCAC.1 \n##                 0                 4                 0                 4 \n##  ACGGATTGGGGCAA.1  ACGGATTGGTTGTG.1  ACGGCGTGCAGCTA.1  ACGGCGTGCTTTAC.1 \n##                 1                 6                 4                 7 \n##  ACGGCGTGGACGTT.1  ACGGCGTGGCGGAA.1  ACGGCGTGGTCCTC.1  ACGGCGTGGTTCAG.1 \n##                 4                 3                 2                 0 \n##  ACGGCGTGTACTTC.1  ACGGCGTGTGCTCC.1  ACGGCTCTAGACTC.1  ACGGCTCTATCGGT.1 \n##                 1                 6                 0                 0 \n##  ACGGCTCTCATACG.1  ACGGCTCTCTGTTT.1  ACGGCTCTGTATGC.1  ACGGCTCTTTCTGT.1 \n##                 0                 0                 0                 6 \n##  ACGGGAGAAAGGCG.1  ACGGGAGAAGCCAT.1  ACGGGAGAATCTCT.1  ACGGGAGACCAACA.1 \n##                 1                 7                 6                 5 \n##  ACGGGAGACCAGTA.1  ACGGGAGACTCAAG.1  ACGGGAGAGGAAGC.1  ACGGGAGAGGACAG.1 \n##                 0                 9                 3                 0 \n##  ACGGGAGATACTCT.1  ACGGGAGATGTAGC.1  ACGGTATGACCAGT.1  ACGGTATGACCATG.1 \n##                 6                 1                12                 0 \n##  ACGGTATGCCGCTT.1  ACGGTATGCTCAGA.1  ACGGTATGTTTCTG.1  ACGGTCCTACCCAA.1 \n##                 0                 1                 9                 0 \n##  ACGGTCCTGAGATA.1  ACGTAGACCGTTAG.1  ACGTCAGAAGGGTG.1  ACGTCAGACATTTC.1 \n##                 0                 6                 4                 0 \n##  ACGTCAGACTACTT.1  ACGTCAGAGCTACA.1  ACGTCCTGCCTTCG.1  ACGTCCTGCTGAAC.1 \n##                 1                 1                 0                 0 \n##  ACGTCCTGGGGTGA.1  ACGTCCTGGGTGAG.1  ACGTCCTGTCGCCT.1  ACGTCCTGTGCCTC.1 \n##                 1                 6                 2                 3 \n##  ACGTCCTGTTCTGT.1  ACGTCGCTAGATGA.1  ACGTCGCTATGCTG.1  ACGTCGCTCAGGAG.1 \n##                 4                 1                 1                 2 \n##  ACGTCGCTGCATCA.1  ACGTCGCTGTTGAC.1  ACGTGATGAACCGT.1  ACGTGATGAGATGA.1 \n##                 0                 0                 8                 8 \n##  ACGTGATGCCTGAA.1  ACGTGATGCTGAGT.1  ACGTGATGGCATCA.1  ACGTGATGGCTACA.1 \n##                 1                 4                 9                 0 \n##  ACGTGATGGTCGTA.1  ACGTGCCTCCATAG.1  ACGTGCCTGACGGA.1  ACGTGCCTTGTCCC.1 \n##                 7                 7                 0                 5 \n##  ACGTTACTCACTGA.1  ACGTTACTCTGTTT.1  ACGTTACTGCATCA.1  ACGTTACTGCGATT.1 \n##                 1                 0                 6                 5 \n##  ACGTTACTGCTTAG.1  ACGTTACTGGAGTG.1  ACGTTGGAACCTCC.1  ACGTTGGACGAACT.1 \n##                 0                 1                 8                 2 \n##  ACGTTGGACTCAGA.1  ACGTTTACACTAGC.1  ACGTTTACAGCTCA.1  ACTAAAACACCTAG.1 \n##                 1                 1                 7                 6 \n##  ACTAAAACCGTAGT.1  ACTAAAACCTCTTA.1  ACTAAAACGGAACG.1  ACTACGGAACCTGA.1 \n##                 1                 3                 0                 0 \n##  ACTACGGAATTCTC.1  ACTACGGACCCTAC.1  ACTACGGACTCATT.1  ACTACGGACTTGGA.1 \n##                 3                 2                 0                 2 \n##  ACTACGGAGAATGA.1  ACTACGGAGTTGTG.1  ACTACTACACTTTC.1  ACTAGGTGAGTACC.1 \n##                 0                 0                 0                 1 \n##  ACTAGGTGCAGAAA.1  ACTAGGTGCCTAAG.1  ACTATCACGGAAGC.1  ACTATCACGGTATC.1 \n##                 4                 2                12                 2 \n##  ACTATCACTTCACT.1  ACTCAGGAAGTCTG.1  ACTCAGGACATGCA.1  ACTCAGGACCAACA.1 \n##                 6                 1                 2                 1 \n##  ACTCAGGACTGTAG.1  ACTCAGGACTGTGA.1  ACTCAGGAGGCGAA.1  ACTCAGGATATGCG.1 \n##                 1                 1                 0                 5 \n##  ACTCAGGATATGGC.1  ACTCCTCTTAGAAG.1  ACTCCTCTTGTTCT.1  ACTCGAGAAGTAGA.1 \n##                 4                 2                10                 6 \n##  ACTCGAGAATCGAC.1  ACTCGAGACTCATT.1  ACTCGAGAGAGAGC.1  ACTCGAGATGCTGA.1 \n##                 5                 9                 2                 1 \n##  ACTCGCACATCAGC.1  ACTCGCACATGTCG.1  ACTCGCACGACGTT.1  ACTCGCACTCTTTG.1 \n##                 1                 1                 1                 7 \n##  ACTCTATGACCCAA.1  ACTCTATGACTCTT.1  ACTCTATGAGATCC.1  ACTCTATGAGTACC.1 \n##                 3                 7                 2                 0 \n##  ACTCTATGCTAGCA.1  ACTCTATGCTTATC.1  ACTCTATGGTACGT.1  ACTCTATGTGCACA.1 \n##                 9                 3                 0                 0 \n##  ACTCTCCTCGAGTT.1  ACTCTCCTCTTACT.1  ACTCTCCTGCGAGA.1  ACTGAGACCGGGAA.1 \n##                 3                 5                 0                 4 \n##  ACTGAGACGGACTT.1  ACTGAGACTTCTTG.1  ACTGCCACCCTGAA.1  ACTGCCACCGGGAA.1 \n##                 1                 2                 3                 4 \n##  ACTGCCACTGTGCA.1  ACTGCCTGAGCTCA.1  ACTGCCTGCTCAAG.1  ACTGCCTGGAATAG.1 \n##                 0                 2                 0                 2 \n##  ACTGCCTGGGTTCA.1  ACTGCCTGTGAGCT.1  ACTGCCTGTTCTTG.1  ACTGGCCTATGTCG.1 \n##                 5                 5                 0                 0 \n##  ACTGGCCTCTAAGC.1  ACTGGCCTGCAGAG.1  ACTGGCCTGCCAAT.1  ACTGGCCTGCTGTA.1 \n##                 0                 8                 0                 0 \n##  ACTGGCCTTAAGGA.1  ACTGGCCTTGGTTG.1  ACTGTGGAAACCAC.1  ACTGTGGAGAATCC.1 \n##                 0                 4                 0                 2 \n##  ACTGTGGAGGACGA.1  ACTGTGGAGTTCAG.1  ACTGTTACCAACCA.1  ACTGTTACGACAGG.1 \n##                 1                 3                 1                 0 \n##  ACTTAAGAACCATG.1  ACTTAAGAAGCTAC.1  ACTTAAGACTCTCG.1  ACTTAAGAGGTGAG.1 \n##                 0                 0                 1                 0 \n##  ACTTAAGATATGGC.1  ACTTAGCTATCTTC.1  ACTTAGCTCGATAC.1  ACTTAGCTCGGGAA.1 \n##                 3                 0                 1                 1 \n##  ACTTAGCTCTCCCA.1  ACTTAGCTTTCGCC.1  ACTTCAACACGCAT.1  ACTTCAACAGGAGC.1 \n##                 5                 8                 0                 4 \n##  ACTTCAACCGACTA.1  ACTTCAACGTGCTA.1  ACTTCAACTTTCGT.1  ACTTCCCTGCTATG.1 \n##                 1                 8                 1                 6 \n##  ACTTCTGACACTCC.1  ACTTCTGATCAGGT.1  ACTTCTGATGGTCA.1  ACTTCTGATGTCAG.1 \n##                12                 0                 2                 0 \n##  ACTTGACTCCAACA.1  ACTTGACTGGACTT.1  ACTTGACTTCACCC.1  ACTTGGGACTACCC.1 \n##                 9                 5                 0                 4 \n##  ACTTGGGAGCCAAT.1  ACTTGGGAGCTGAT.1  ACTTGGGATCAGTG.1  ACTTGTACACGTAC.1 \n##                 0                 1                 0                 1 \n##  ACTTGTACAGTCGT.1  ACTTGTACCCATGA.1  ACTTTGTGGTCAAC.1  ACTTTGTGGTCCTC.1 \n##                 1                 2                 9                 1 \n##  ACTTTGTGGTCGTA.1  ACTTTGTGTCCCAC.1  ACTTTGTGTGTTTC.1  AGAAACGAACAGCT.1 \n##                 0                 1                 4                12 \n##  AGAAACGAACTCTT.1  AGAAACGACTGATG.1  AGAAACGAGCGATT.1  AGAAAGTGCATCAG.1 \n##                 2                 5                 0                 4 \n##  AGAAAGTGCCGATA.1  AGAAAGTGCTGCAA.1  AGAAAGTGGACAAA.1  AGAAAGTGTGCATG.1 \n##                 0                 2                 6                 2 \n##  AGAACAGAAACGTC.1  AGAACAGACCTCCA.1  AGAACAGAGAGACG.1  AGAACAGAGCTGTA.1 \n##                 0                 1                 6                 0 \n##  AGAACAGATATGGC.1  AGAACGCTAGGAGC.1  AGAACGCTCACTTT.1  AGAACGCTCAGATC.1 \n##                 9                 1                 6                 0 \n##  AGAACGCTGAATAG.1  AGAACGCTGAGATA.1  AGAACGCTTCCCGT.1  AGAAGATGAAGAGT.1 \n##                 1                 1                 4                 0 \n##  AGAAGATGACACAC.1  AGAAGATGCATTGG.1  AGAAGATGCCCTAC.1  AGAAGATGCCTCAC.1 \n##                 0                 4                 0                 1 \n##  AGAAGATGCTGCAA.1  AGAAGATGGCAGTT.1  AGAAGATGTGATGC.1  AGAAGATGTGCCTC.1 \n##                 0                 2                 4                 8 \n##  AGAATACTCAACTG.1  AGAATACTCATCAG.1  AGAATACTGGTACT.1  AGAATACTTCAGAC.1 \n##                 2                 7                 3                 5 \n##  AGAATACTTTCGTT.1  AGAATGGAAAACAG.1  AGAATGGAACTCAG.1  AGAATGGAAGTCAC.1 \n##                 0                 0                 1                 5 \n##  AGAATGGAATCTCT.1  AGAATTTGATACCG.1  AGAATTTGATTGGC.1  AGAATTTGCAACTG.1 \n##                 0                 0                 2                 0 \n##  AGAATTTGCGACAT.1  AGAATTTGCGCATA.1  AGAATTTGCTCAGA.1  AGAATTTGCTTGAG.1 \n##                 0                 0                 1                 4 \n##  AGAATTTGGAGAGC.1  AGACACACACGCAT.1  AGACACACAGCCTA.1  AGACACACCGTGAT.1 \n##                 2                 6                 1                 0 \n##  AGACACACCGTTGA.1  AGACACACGAATAG.1  AGACACACGTCAAC.1  AGACACACTGATGC.1 \n##                 4                 0                 0                10 \n##  AGACACACTGTCGA.1  AGACACTGAGCACT.1  AGACACTGCACACA.1  AGACACTGCTGGTA.1 \n##                 1                 0                 1                 8 \n##  AGACACTGTCCGAA.1  AGACCTGACATGAC.1  AGACCTGACTACTT.1  AGACCTGATACTTC.1 \n##                 9                 1                 0                 0 \n##  AGACGTACACCGAT.1  AGACGTACATCTTC.1  AGACGTACCAATCG.1  AGACTCGAAGTTCG.1 \n##                 0                 6                 1                 6 \n##  AGACTCGAGCAGTT.1  AGACTCGATTTACC.1  AGACTGACGATGAA.1  AGACTGACGGCATT.1 \n##                 2                 0                 0                 0 \n##  AGACTGACGTGCTA.1  AGACTTCTACGACT.1  AGACTTCTATCAGC.1  AGACTTCTCAGTTG.1 \n##                 2                 5                 1                 4 \n##  AGACTTCTCTGGAT.1  AGACTTCTGGAACG.1  AGACTTCTGGATCT.1  AGACTTCTGTGAGG.1 \n##                 0                 3                 8                 1 \n##  AGACTTCTTTGGCA.1  AGACTTCTTTGGTG.1  AGAGAAACACCAGT.1  AGAGAAACCCTTTA.1 \n##                 0                 6                 3                 4 \n##  AGAGAAACCTGGTA.1  AGAGAAACTAGAGA.1  AGAGAATGAACTGC.1  AGAGAATGGCATAC.1 \n##                 6                 6                 2                 5 \n##  AGAGAATGTGGAAA.1  AGAGAATGTTCTCA.1  AGAGAATGTTTGGG.1  AGAGATGACTACTT.1 \n##                 1                 2                 4                 0 \n##  AGAGATGACTTGAG.1  AGAGATGAGCGTAT.1  AGAGATGAGCTTAG.1  AGAGATGAGTATGC.1 \n##                 7                 0                 0                 6 \n##  AGAGATGAGTTTGG.1  AGAGATGATCCCAC.1  AGAGATGATGGATC.1  AGAGCGGACGTACA.1 \n##                 9                 5                 0                 0 \n##  AGAGCGGAGTAGCT.1  AGAGCGGAGTGCAT.1  AGAGCGGATGTGCA.1  AGAGCTACATCACG.1 \n##                 2                 0                 5                 0 \n##  AGAGCTACCCCTAC.1  AGAGCTACCCTTCG.1  AGAGCTACGCTCCT.1  AGAGCTACTAGAGA.1 \n##                 6                 0                 1                 3 \n##  AGAGGTCTAAACGA.1  AGAGGTCTAGATCC.1  AGAGGTCTTCCAGA.1  AGAGTCACAGAGGC.1 \n##                 0                 2                 9                 9 \n##  AGAGTCACCCGATA.1  AGAGTCACGTAGCT.1  AGAGTCTGACACGT.1  AGAGTCTGCCTCCA.1 \n##                 0                 0                 0                 2 \n##  AGAGTCTGGTGTAC.1  AGAGTCTGTGCTGA.1  AGAGTGCTCTCCAC.1  AGAGTGCTGACAGG.1 \n##                 1                 0                 0                 2 \n##  AGAGTGCTGCTTCC.1  AGAGTGCTTAGCGT.1  AGATATACACGACT.1  AGATATACAGCGTT.1 \n##                 1                 4                 1                 2 \n##  AGATATACCCGATA.1  AGATATACGTTACG.1  AGATATACTCACCC.1  AGATATACTCTGGA.1 \n##                 6                 5                 2                 2 \n##  AGATATACTTAGGC.1  AGATATTGACGTGT.1  AGATATTGCACTTT.1  AGATATTGCTCCAC.1 \n##                 2                 1                 4                 6 \n##  AGATATTGGGACTT.1  AGATATTGTAAAGG.1  AGATATTGTAGTCG.1  AGATATTGTGTTTC.1 \n##                 0                 2                 0                 0 \n##  AGATCGTGACCCTC.1  AGATCGTGACCTTT.1  AGATCGTGGGGTGA.1  AGATCGTGGTGAGG.1 \n##                 5                 0                 3                 6 \n##  AGATCTCTAGTCGT.1  AGATCTCTATTCTC.1  AGATCTCTCCTACC.1  AGATCTCTCGTGTA.1 \n##                 5                 2                 1                 0 \n##  AGATCTCTGGAAAT.1  AGATCTCTTAGAGA.1  AGATCTCTTGTCGA.1  AGATCTCTTTCCGC.1 \n##                 4                 0                 0                 5 \n##  AGATTAACGCTTAG.1  AGATTAACGGTGTT.1  AGATTAACGTATCG.1  AGATTAACTGAAGA.1 \n##                 1                 9                 0                 3 \n##  AGATTCCTACGCAT.1  AGATTCCTAGCGTT.1  AGATTCCTCTACTT.1  AGATTCCTCTGCAA.1 \n##                13                 0                 0                 1 \n##  AGATTCCTGACTAC.1  AGATTCCTTAGTCG.1  AGATTCCTTCCAGA.1  AGCAAAGAAAAGCA.1 \n##                 1                 4                 0                 4 \n##  AGCAAAGAATGTGC.1  AGCAAAGATGGATC.1  AGCAACACAGCATC.1  AGCAACACAGCCTA.1 \n##                 0                 1                 0                 3 \n##  AGCAACACGACAAA.1  AGCAACACGCTCCT.1  AGCAACACTGCTAG.1  AGCAAGCTAACGGG.1 \n##                 1                 0                13                 6 \n##  AGCAAGCTCAAGCT.1  AGCAAGCTCTGGAT.1  AGCAAGCTTGCTTT.1  AGCACAACACCTCC.1 \n##                 1                 0                 0                 2 \n##  AGCACAACCTTGTT.1  AGCACAACGACGAG.1  AGCACAACGATAGA.1  AGCACAACGGATTC.1 \n##                 0                12                 4                 5 \n##  AGCACAACTCGCCT.1  AGCACAACTGTAGC.1  AGCACAACTTCGTT.1  AGCACTGAAACGAA.1 \n##                 2                 0                 0                 2 \n##  AGCACTGAAGCTCA.1  AGCACTGAGACGTT.1  AGCACTGATTCTTG.1  AGCATCGAGAGAGC.1 \n##                 0                 1                 9                 1 \n##  AGCATCGAGAGATA.1  AGCATCGATAGCCA.1  AGCATGACATCTTC.1  AGCATGACCTCGAA.1 \n##                 5                 0                 2                 0 \n##  AGCATGACGCAGTT.1  AGCATGACTAACGC.1  AGCATTCTGACTAC.1  AGCATTCTGTCTTT.1 \n##                 0                 0                 0                 1 \n##  AGCATTCTTGATGC.1  AGCCAATGAAACAG.1  AGCCAATGACGTAC.1  AGCCAATGCCCTAC.1 \n##                 0                 0                 4                 0 \n##  AGCCACCTCAAAGA.1  AGCCACCTCGGGAA.1  AGCCACCTTAGTCG.1  AGCCACCTTGGAAA.1 \n##                 4                 1                 1                 4 \n##  AGCCACCTTTGGCA.1  AGCCGGACAGCACT.1  AGCCGGACGAGCTT.1  AGCCGGACGTAAGA.1 \n##                 1                 1                 2                 1 \n##  AGCCGGACGTCCTC.1  AGCCGGACTCCGTC.1  AGCCGGACTTCCGC.1  AGCCGGTGCTGAGT.1 \n##                 1                 3                 0                 5 \n##  AGCCGGTGGAAGGC.1  AGCCGGTGGGGATG.1  AGCCGGTGTTCCAT.1  AGCCGTCTGTCGAT.1 \n##                 5                 0                 0                10 \n##  AGCCTCACACGGGA.1  AGCCTCACTAACCG.1  AGCCTCACTAACGC.1  AGCCTCACTCGCCT.1 \n##                 2                 0                 1                 5 \n##  AGCCTCTGAAAAGC.1  AGCCTCTGCGTAAC.1  AGCCTCTGGAGGGT.1  AGCGAACTGCGTAT.1 \n##                 1                 4                 1                 6 \n##  AGCGAACTGGACAG.1  AGCGAACTGGTACT.1  AGCGAACTGTTGCA.1  AGCGATACAAGCCT.1 \n##                 7                 3                 2                 0 \n##  AGCGATACGAGATA.1  AGCGATACGGTACT.1  AGCGATACTCAGAC.1  AGCGATTGTGTGCA.1 \n##                 6                 4                 0                 2 \n##  AGCGCCGAACTCTT.1  AGCGCCGACCTCAC.1  AGCGCCGACGTTGA.1  AGCGCCGAGATACC.1 \n##                 1                 3                 4                 7 \n##  AGCGCCGAGTTGCA.1  AGCGCTCTACCACA.1  AGCGCTCTCCTTTA.1  AGCGCTCTCGCATA.1 \n##                 0                 8                 0                 2 \n##  AGCGCTCTGTATGC.1  AGCGGCACAACTGC.1  AGCGGCACACGCAT.1  AGCGGCACCTTAGG.1 \n##                 1                 4                 3                 3 \n##  AGCGGCACGGTGAG.1  AGCGGCACTGCGTA.1  AGCGGCACTTGGCA.1  AGCGGCTGACACGT.1 \n##                 8                 1                 3                 0 \n##  AGCGGCTGCACACA.1  AGCGGCTGCTGACA.1  AGCGGCTGTATCTC.1  AGCGGCTGTCTAGG.1 \n##                 0                 0                 2                 9 \n##  AGCGGCTGTGCCCT.1  AGCGGGCTCAGATC.1  AGCGGGCTCGAGTT.1  AGCGGGCTCGCCTT.1 \n##                 0                 9                 3                 0 \n##  AGCGGGCTGGGAGT.1  AGCGTAACCGATAC.1  AGCGTAACTGCAGT.1  AGCGTAACTGTTTC.1 \n##                 0                 2                 2                 2 \n##  AGCTCGCTAAGGTA.1  AGCTCGCTAGAACA.1  AGCTCGCTATCGTG.1  AGCTCGCTCCTTCG.1 \n##                 0                 4                 1                 0 \n##  AGCTCGCTCTCTCG.1  AGCTGAACCCGCTT.1  AGCTGAACTAAAGG.1  AGCTGCCTGCTAAC.1 \n##                 2                 0                 0                 3 \n##  AGCTGCCTTCGCTC.1  AGCTGTGAACTAGC.1  AGCTGTGACCTTCG.1  AGCTGTGAGTATCG.1 \n##                 9                 0                 4                 1 \n##  AGCTGTGATAGTCG.1  AGCTGTGATGTCTT.1  AGCTGTGATTCGGA.1  AGCTTACTCGTCTC.1 \n##                 0                13                 0                 3 \n##  AGCTTACTGAGGCA.1  AGCTTACTGTCGAT.1  AGCTTACTTCTAGG.1  AGCTTACTTTCACT.1 \n##                 6                 5                 2                12 \n##  AGCTTTACAGAAGT.1  AGCTTTACAGAATG.1  AGCTTTACGACGTT.1  AGCTTTACGTAGCT.1 \n##                 5                 0                 4                 0 \n##  AGGAAATGAGACTC.1  AGGAAATGAGTGCT.1  AGGAAATGGCTACA.1  AGGAAATGGTCTTT.1 \n##                 2                 1                 8                 9 \n##  AGGAACCTCACCAA.1  AGGAACCTCCTTAT.1  AGGAACCTTACTGG.1  AGGAATGAACTGGT.1 \n##                 8                 6                 5                 4 \n##  AGGAATGACGTCTC.1  AGGAATGACTGTCC.1  AGGAATGATACTTC.1  AGGACACTGCCCTT.1 \n##                 4                 2                 8                 4 \n##  AGGACACTGGACAG.1  AGGACACTTAAAGG.1  AGGACTTGATCACG.1  AGGACTTGCAGAGG.1 \n##                 2                 1                 8                 3 \n##  AGGACTTGCGTTAG.1  AGGACTTGCTCTTA.1  AGGAGTCTAAGAGT.1  AGGAGTCTCGATAC.1 \n##                 2                 1                 0                 0 \n##  AGGAGTCTTCCTCG.1  AGGATAGAATCGAC.1  AGGATAGACACAAC.1  AGGATAGACATGGT.1 \n##                 2                 7                 7                 0 \n##  AGGATAGACGAACT.1  AGGATAGACGGAGA.1  AGGATAGAGACTAC.1  AGGATAGAGGTAAA.1 \n##                 4                 1                 2                 1 \n##  AGGATAGATCCCGT.1  AGGATAGATGCTAG.1  AGGATGCTAGAGGC.1  AGGATGCTCTGCAA.1 \n##                 0                 8                 4                 7 \n##  AGGATGCTGGACGA.1  AGGATGCTGTACAC.1  AGGATGCTTTGCAG.1  AGGATGCTTTGTGG.1 \n##                 5                 1                 3                 2 \n##  AGGCAGGAGTACGT.1  AGGCAGGATATCTC.1  AGGCAGGATGTCAG.1  AGGCCTCTCGTTGA.1 \n##                 1                 2                 6                 1 \n##  AGGCCTCTCTGGTA.1  AGGCCTCTGGGTGA.1  AGGCCTCTGTTGGT.1  AGGCCTCTTCACGA.1 \n##                 2                 2                 0                 0 \n##  AGGCCTCTTCGACA.1  AGGCTAACAGATGA.1  AGGCTAACAGGTCT.1  AGGCTAACAGTGTC.1 \n##                 3                 6                 0                 3 \n##  AGGCTAACTGTGGT.1  AGGGACGAAACGGG.1  AGGGACGAAGTACC.1  AGGGACGACCAAGT.1 \n##                 2                 1                 0                 2 \n##  AGGGACGACTCGCT.1  AGGGACGACTTCGC.1  AGGGACGATTCTGT.1  AGGGAGTGATGGTC.1 \n##                 8                 0                 2                 6 \n##  AGGGAGTGTGACCA.1  AGGGAGTGTGAGCT.1  AGGGCCACAAGGTA.1  AGGGCCACATCGAC.1 \n##                 0                 5                10                 2 \n##  AGGGCCACGTGTAC.1  AGGGCCACTACAGC.1  AGGGCCACTATCTC.1  AGGGCCACTCGCAA.1 \n##                 0                 0                 1                 0 \n##  AGGGCCACTGACCA.1  AGGGCCTGAACGAA.1  AGGGCCTGTTACCT.1  AGGGCGCTACGGGA.1 \n##                 8                 4                 3                 0 \n##  AGGGCGCTATCGGT.1  AGGGCGCTCGTGAT.1  AGGGCGCTCTATGG.1  AGGGCGCTTGGTGT.1 \n##                 0                 0                 0                 1 \n##  AGGGCGCTTTACTC.1  AGGGTGGAAGACTC.1  AGGGTGGAAGGGTG.1  AGGGTGGAAGTCAC.1 \n##                 8                 8                 4                 4 \n##  AGGGTGGACACCAA.1  AGGGTGGACAGCTA.1  AGGGTGGACCCACT.1  AGGGTGGAGGTGGA.1 \n##                 1                 2                 6                 1 \n##  AGGGTTTGACAGTC.1  AGGGTTTGCGCTAA.1  AGGGTTTGTCCGAA.1  AGGTACACGAAAGT.1 \n##                 5                 3                 7                 2 \n##  AGGTACTGAGTAGA.1  AGGTCATGGTTTCT.1  AGGTCATGTGGTGT.1  AGGTCATGTGTCTT.1 \n##                 0                 0                 6                 0 \n##  AGGTCTGACGCTAA.1  AGGTCTGAGGTGAG.1  AGGTCTGAGTTGTG.1  AGGTCTGATCACGA.1 \n##                 1                 2                 0                 0 \n##  AGGTCTGATCGCTC.1  AGGTCTGATGGAGG.1  AGGTCTGATTATCC.1  AGGTGGGAATGCTG.1 \n##                 1                 1                 2                 1 \n##  AGGTGGGACCAATG.1  AGGTGTTGCCATGA.1  AGGTGTTGCTCTCG.1  AGGTGTTGGAGAGC.1 \n##                 7                 2                 0                 2 \n##  AGGTGTTGGAGGTG.1  AGGTGTTGGTCACA.1  AGGTGTTGTGGTGT.1  AGGTGTTGTGTTCT.1 \n##                 0                 2                 0                 9 \n##  AGGTGTTGTTCTGT.1  AGGTTCGATAGAAG.1  AGGTTCGATTCCAT.1  AGGTTGTGACCCAA.1 \n##                 0                 6                 2                 0 \n##  AGGTTGTGAGCATC.1  AGGTTGTGCCGTAA.1  AGGTTGTGCGCCTT.1  AGGTTGTGGGCAAG.1 \n##                 0                 0                 6                 0 \n##  AGGTTGTGGTAAAG.1  AGGTTGTGGTCGAT.1  AGTAAGGAACCCAA.1  AGTAAGGATTGACG.1 \n##                 3                 2                 0                 2 \n##  AGTAATACACCACA.1  AGTAATACACTAGC.1  AGTAATACTGAAGA.1  AGTAATACTTGCGA.1 \n##                 0                 1                 0                 1 \n##  AGTAATTGCTTGGA.1  AGTAATTGGAGAGC.1  AGTAATTGGGTCAT.1  AGTAATTGTCGTTT.1 \n##                 1                 0                 1                 7 \n##  AGTAATTGTGCCCT.1  AGTAATTGTTCTTG.1  AGTACGTGCCATAG.1  AGTACGTGTGAGCT.1 \n##                 8                 1                 0                 0 \n##  AGTACGTGTGTAGC.1  AGTACGTGTTCCAT.1  AGTACTCTCACTAG.1  AGTACTCTCGGGAA.1 \n##                 6                 0                 0                 1 \n##  AGTACTCTGTAGGG.1  AGTAGAGAAAACGA.1  AGTAGAGAACAGCT.1  AGTAGAGAAGAAGT.1 \n##                 3                 1                 0                 2 \n##  AGTAGAGACAGGAG.1  AGTAGAGAGCAAGG.1  AGTAGAGATGAAGA.1  AGTAGAGATGCTGA.1 \n##                 1                 3                 0                 6 \n##  AGTAGGCTAAACGA.1  AGTAGGCTACACTG.1  AGTAGGCTACCTGA.1  AGTAGGCTAGGCGA.1 \n##                 2                 4                 3                 0 \n##  AGTAGGCTATTGGC.1  AGTAGGCTTGGTGT.1  AGTATAACCTCTTA.1  AGTATAACTAGAAG.1 \n##                 0                 0                 2                 1 \n##  AGTATAACTGCAGT.1  AGTATCCTACCATG.1  AGTCACGAACCTTT.1  AGTCACGAACGGAG.1 \n##                 5                 2                 2                 2 \n##  AGTCACGAGCTTCC.1  AGTCAGACACCTAG.1  AGTCAGACATTGGC.1  AGTCAGACCATGCA.1 \n##                 6                11                 2                 0 \n##  AGTCAGACGCAGTT.1  AGTCAGACTAGCGT.1  AGTCAGACTGCATG.1  AGTCAGACTTACCT.1 \n##                 9                11                 2                 4 \n##  AGTCGAACGGTTAC.1  AGTCGCCTGAACTC.1  AGTCGCCTTCGACA.1  AGTCGCCTTGGCAT.1 \n##                 1                 6                 5                 1 \n##  AGTCGCCTTTGCTT.1  AGTCTACTAAAACG.1  AGTCTACTCGTGAT.1  AGTCTTACCTCAGA.1 \n##                 4                 0                 2                 2 \n##  AGTCTTACGCTGTA.1  AGTCTTACTAGAAG.1  AGTCTTACTTCGCC.1  AGTGAAGAACTGTG.1 \n##                 0                 4                10                 7 \n##  AGTGAAGACGTGAT.1  AGTGAAGAGTTCAG.1  AGTGACACAAGGTA.1  AGTGACACAGCAAA.1 \n##                 0                 5                 0                 6 \n##  AGTGACACCCTTAT.1  AGTGACACCTGGAT.1  AGTGACACGACGAG.1  AGTGACACGGACAG.1 \n##                 2                 0                10                 4 \n##  AGTGACACTTTGCT.1  AGTGACTGAAGGTA.1  AGTGACTGATCGGT.1  AGTGACTGATCGTG.1 \n##                 3                 8                 0                 4 \n##  AGTGACTGCGTGTA.1  AGTGACTGGAGCAG.1  AGTGACTGTTTCGT.1  AGTGCAACAATCGC.1 \n##                 0                 0                 6                 0 \n##  AGTGCAACATCGTG.1  AGTGCAACCGTCTC.1  AGTGCAACGGCGAA.1  AGTGCAACTAACGC.1 \n##                 4                 1                 2                 4 \n##  AGTGTGACAGTCGT.1  AGTGTGACTGCCTC.1  AGTGTTCTAGCGTT.1  AGTGTTCTCTGATG.1 \n##                 0                 6                 2                 1 \n##  AGTGTTCTTTGCGA.1  AGTTAAACACTCTT.1  AGTTAAACCTGACA.1  AGTTAAACGGACAG.1 \n##                 0                 3                 2                 1 \n##  AGTTATGAACCTAG.1  AGTTATGAATCTCT.1  AGTTATGACACACA.1  AGTTATGAGGAAAT.1 \n##                 1                 8                 0                 1 \n##  AGTTATGAGGAGCA.1  AGTTATGAGTAAAG.1  AGTTATGATGGATC.1  AGTTCTACGACGAG.1 \n##                 0                 0                 0                 7 \n##  AGTTCTACTTTCAC.1  AGTTCTTGAACGGG.1  AGTTCTTGCAGTCA.1  AGTTGTCTAAACAG.1 \n##                 9                 2                 8                 3 \n##  AGTTGTCTAAAGTG.1  AGTTGTCTACTTTC.1  AGTTGTCTATGCTG.1  AGTTGTCTCATTGG.1 \n##                 0                 5                 2                 2 \n##  AGTTGTCTGAGGTG.1  AGTTGTCTGCTACA.1  AGTTGTCTTCCGAA.1  AGTTTAGAATTCTC.1 \n##                 0                 7                 0                 1 \n##  AGTTTAGAGTTCGA.1  AGTTTAGATAAGCC.1  AGTTTCACACACTG.1  AGTTTCACAGCACT.1 \n##                 0                 0                 0                 4 \n##  AGTTTCACGCATCA.1  AGTTTCACTCACCC.1  AGTTTGCTCGAGTT.1  AGTTTGCTCTTTAC.1 \n##                 3                 0                 1                 1 \n##  AGTTTGCTGAATCC.1  AGTTTGCTGGTCAT.1  AGTTTGCTTCCTGC.1  AGTTTGCTTCTTCA.1 \n##                 0                10                 0                 0 \n##  ATAAACACACGTGT.1  ATAAACACCTTCGC.1  ATAACAACAAGAGT.1  ATAACAACCAGATC.1 \n##                 0                 1                 1                 9 \n##  ATAACATGCAGGAG.1  ATAACATGCTGTCC.1  ATAACATGCTTGCC.1  ATAACATGGATACC.1 \n##                 4                 3                 2                 2 \n##  ATAACATGGGTTCA.1  ATAACCCTACCTCC.1  ATAACCCTTGACTG.1  ATAAGTACACCCAA.1 \n##                 3                 0                 0                 0 \n##  ATAAGTTGATCTCT.1  ATAAGTTGCCTTAT.1  ATAAGTTGCTCCAC.1  ATAAGTTGCTTAGG.1 \n##                 6                 4                 0                 0 \n##  ATAAGTTGGGAGCA.1  ATAAGTTGTACTTC.1  ATAAGTTGTGAGAA.1  ATAATCGAAAACGA.1 \n##                 3                 2                 3                 2 \n##  ATAATCGATTCTGT.1  ATAATGACAACGGG.1  ATAATGACACCTTT.1  ATAATGACCACTGA.1 \n##                 0                 2                 1                 5 \n##  ATAATGACGACAAA.1  ATAATGACTTATCC.1  ATACAATGACGTAC.1  ATACAATGATTCCT.1 \n##                 0                 0                 5                 0 \n##  ATACAATGTCAGAC.1  ATACAATGTCTTTG.1  ATACACCTAAAGTG.1  ATACACCTACAGTC.1 \n##                 0                 0                 0                 0 \n##  ATACACCTGGACGA.1  ATACACCTTGCTAG.1  ATACCACTAGGTCT.1  ATACCACTATCAGC.1 \n##                 0                 4                 2                 6 \n##  ATACCACTCCTGAA.1  ATACCACTGGTGAG.1  ATACCACTGTCACA.1  ATACCACTTGTGGT.1 \n##                 3                 1                 0                 5 \n##  ATACCGGAATCGAC.1  ATACCGGACCCACT.1  ATACCGGACTCTCG.1  ATACCTACATCGTG.1 \n##                 5                 2                 4                 0 \n##  ATACCTACGACTAC.1  ATACCTACGGAAGC.1  ATACCTACGTCTGA.1  ATACCTACTGCAAC.1 \n##                 1                10                 0                 9 \n##  ATACCTTGATGACC.1  ATACCTTGATGTGC.1  ATACCTTGGACAAA.1  ATACCTTGTTCTGT.1 \n##                 0                 0                 1                 0 \n##  ATACGGACAGTCAC.1  ATACGGACCAACTG.1  ATACGTCTAAGTAG.1  ATACGTCTATCGGT.1 \n##                 1                 2                 3                 6 \n##  ATACGTCTCACCAA.1  ATACGTCTGAAACA.1  ATACGTCTGGTTAC.1  ATACTCTGATTTCC.1 \n##                 1                 0                 0                 3 \n##  ATACTCTGCACTAG.1  ATACTCTGCTTAGG.1  ATACTCTGGACGTT.1  ATAGAACTACTCAG.1 \n##                 3                 0                 5                 1 \n##  ATAGAACTCTCAGA.1  ATAGAACTGAGAGC.1  ATAGAACTGGATCT.1  ATAGAACTGTCCTC.1 \n##                10                 0                 7                 0 \n##  ATAGAACTGTCGTA.1  ATAGAACTTCACGA.1  ATAGAACTTTTCAC.1  ATAGATACACCTGA.1 \n##                 0                 1                 1                 2 \n##  ATAGATACCATGGT.1  ATAGATACCGTTAG.1  ATAGATACGTTCAG.1  ATAGATTGAAACAG.1 \n##                 0                 5                 0                 1 \n##  ATAGATTGAATCGC.1  ATAGATTGTCGTTT.1  ATAGCCGACGATAC.1  ATAGCCGAGTACGT.1 \n##                 0                 6                 4                 5 \n##  ATAGCCGAGTTAGC.1  ATAGCGTGGCGAGA.1  ATAGCGTGTAACGC.1  ATAGCTCTAAGTGA.1 \n##                 1                 6                 2                 0 \n##  ATAGCTCTACGTGT.1  ATAGCTCTCATGGT.1  ATAGCTCTCGCATA.1  ATAGCTCTGATAAG.1 \n##                 1                 0                 0                 3 \n##  ATAGCTCTGGATCT.1  ATAGCTCTTCCGTC.1  ATAGGAGACTAGAC.1  ATAGGAGATGAAGA.1 \n##                 0                 0                 0                 0 \n##  ATAGGAGATGAGCT.1  ATAGGAGATTTCTG.1  ATAGGCTGAAAGTG.1  ATAGGCTGAGAAGT.1 \n##                 6                 0                 0                 0 \n##  ATAGGCTGCTGCTC.1  ATAGGCTGGGACGA.1  ATAGTCCTGGACTT.1  ATAGTCCTGGTGTT.1 \n##                 2                10                 7                 8 \n##  ATAGTCCTTGCTTT.1  ATAGTTGAAAGGCG.1  ATAGTTGAAAGTAG.1  ATAGTTGAACTAGC.1 \n##                 0                 0                 0                 6 \n##  ATAGTTGAAGTCTG.1  ATAGTTGACTCGCT.1  ATAGTTGATAAAGG.1  ATAGTTGATTCGCC.1 \n##                 0                 2                11                 7 \n##  ATAGTTGATTGGTG.1  ATAGTTGATTTGTC.1  ATATACGACTGAAC.1  ATATACGACTGTTT.1 \n##                 0                 1                 3                 6 \n##  ATATACGAGGGCAA.1  ATATACGAGGTTTG.1  ATATACGAGTCACA.1  ATATACGAGTCTAG.1 \n##                 5                 3                 1                 0 \n##  ATATACGATCCCAC.1  ATATACGATGCATG.1  ATATAGTGTGACTG.1  ATATGAACTGAACC.1 \n##                 1                 2                 2                 9 \n##  ATATGCCTAAGATG.1  ATATGCCTATGTGC.1  ATATGCCTCCTTTA.1  ATATGCCTCTGTGA.1 \n##                 3                10                 5                 1 \n##  ATCAAATGAGTACC.1  ATCAAATGATTCCT.1  ATCAAATGCTGTCC.1  ATCAACCTCAACCA.1 \n##                 2                 0                 0                 0 \n##  ATCAACCTGGACGA.1  ATCAACCTTAGAAG.1  ATCAACCTTCTCGC.1  ATCAACCTTTCGTT.1 \n##                 0                 8                 3                 6 \n##  ATCACACTGACGAG.1  ATCACACTGCTTAG.1  ATCACACTGTTGCA.1  ATCACGGAAAAGCA.1 \n##                 0                 3                 3                 4 \n##  ATCACGGAACCCTC.1  ATCACGGAACTGTG.1  ATCACGGAGCGATT.1  ATCACGGATAACGC.1 \n##                 8                11                 4                 6 \n##  ATCACGGATCAGGT.1  ATCACTACCTATTC.1  ATCACTACCTTCTA.1  ATCACTACTGCACA.1 \n##                 1                 1                 0                 1 \n##  ATCACTACTGGTAC.1  ATCACTTGCGCAAT.1  ATCACTTGCTAGCA.1  ATCACTTGGCGAGA.1 \n##                 0                 2                 0                 7 \n##  ATCACTTGTCCGTC.1  ATCACTTGTTCCGC.1  ATCACTTGTTGCAG.1  ATCAGGTGACTGTG.1 \n##                 2                 3                 1                 1 \n##  ATCAGGTGGAACCT.1  ATCAGGTGGAACTC.1  ATCAGGTGGGCGAA.1  ATCAGGTGGGGCAA.1 \n##                 4                 1                 0                 0 \n##  ATCAGGTGTCCAAG.1  ATCATCTGAGCAAA.1  ATCATCTGTTCTGT.1  ATCCAGGACTACTT.1 \n##                 0                 1                 0                 8 \n##  ATCCAGGACTCCAC.1  ATCCAGGATATGGC.1  ATCCATACATTCCT.1  ATCCCGTGCCAAGT.1 \n##                 0                 0                 0                 6 \n##  ATCCCGTGCTGCAA.1  ATCCCGTGGTCTAG.1  ATCCCGTGTACTGG.1  ATCCCGTGTCACGA.1 \n##                 4                 0                 0                 2 \n##  ATCCCGTGTCTCAT.1  ATCCGCACAACAGA.1  ATCCGCACTCCCGT.1  ATCCTAACATCAGC.1 \n##                 4                 2                 0                 8 \n##  ATCCTAACATCGAC.1  ATCCTAACCAACTG.1  ATCCTAACTGCCTC.1  ATCGACGAGTAAGA.1 \n##                 2                 2                 4                 8 \n##  ATCGACGATAAGGA.1  ATCGACGATTGTGG.1  ATCGAGTGTCTCGC.1  ATCGCAGAAGCATC.1 \n##                 0                 8                 0                 6 \n##  ATCGCAGACAGGAG.1  ATCGCAGACGACAT.1  ATCGCAGACTTCCG.1  ATCGCAGATTCTAC.1 \n##                 5                 6                 0                 0 \n##  ATCGCCACACGGTT.1  ATCGCCACAGGCGA.1  ATCGCCACCTGTAG.1  ATCGCCTGAGGAGC.1 \n##                 0                 0                 2                 0 \n##  ATCGCGCTACTTTC.1  ATCGCGCTAGCTAC.1  ATCGCGCTATGGTC.1  ATCGCGCTGGGAGT.1 \n##                 8                 2                 3                 2 \n##  ATCGCGCTGTGCTA.1  ATCGCGCTTACTTC.1  ATCGCGCTTTGCAG.1  ATCGGAACAAACGA.1 \n##                 0                 1                 4                 8 \n##  ATCGGAACACTGTG.1  ATCGGAACAGCAAA.1  ATCGGAACCATCAG.1  ATCGGAACCCTCCA.1 \n##                 0                 0                 1                 0 \n##  ATCGGAACTGGCAT.1  ATCGGAACTGGTCA.1  ATCGGAACTTCTAC.1  ATCGGAACTTTCGT.1 \n##                 2                 1                 0                 2 \n##  ATCGGTGAAGCGGA.1  ATCGGTGAAGCGTT.1  ATCGGTGACCCTAC.1  ATCGGTGACTACGA.1 \n##                 3                 8                 2                 0 \n##  ATCGGTGAGGTTCA.1  ATCGGTGATATGGC.1  ATCGTTTGGAGATA.1  ATCGTTTGGCGGAA.1 \n##                 4                 1                 1                 4 \n##  ATCGTTTGTATGGC.1  ATCTACACACCCTC.1  ATCTACACAGATGA.1  ATCTACACCAACCA.1 \n##                 0                 1                 2                 2 \n##  ATCTACACCATTTC.1  ATCTACACCTGTTT.1  ATCTACACGGAGGT.1  ATCTACACGGGTGA.1 \n##                10                 0                 3                 1 \n##  ATCTACACGTTGGT.1  ATCTACACTGTCTT.1  ATCTACTGAAGGTA.1  ATCTACTGATTTCC.1 \n##                 0                 1                 1                 0 \n##  ATCTACTGCCAAGT.1  ATCTACTGTGTGGT.1  ATCTACTGTTTCAC.1  ATCTCAACACAGTC.1 \n##                12                 1                 0                 2 \n##  ATCTCAACGCTGAT.1  ATCTCAACGGGACA.1  ATCTCAACGGTGTT.1  ATCTCAACTTGCAG.1 \n##                 2                 6                 0                 7 \n##  ATCTGACTACAGCT.1  ATCTGACTACGGGA.1  ATCTGACTCTCCCA.1  ATCTGACTGTACGT.1 \n##                 0                 0                 2                 0 \n##  ATCTGGGACATTCT.1  ATCTGGGACCTTAT.1  ATCTGGGATCCAGA.1  ATCTGGGATCCGAA.1 \n##                 0                 0                 0                 2 \n##  ATCTGTTGATGTCG.1  ATCTGTTGCTTAGG.1  ATCTGTTGGCTCCT.1  ATCTGTTGTAGAGA.1 \n##                 2                 0                 6                 3 \n##  ATCTGTTGTGGCAT.1  ATCTTGACGCCATA.1  ATCTTGACGGGATG.1  ATCTTGACGTCGAT.1 \n##                 0                 4                 5                 3 \n##  ATCTTTCTCACTAG.1  ATCTTTCTCTTGTT.1  ATCTTTCTGAACTC.1  ATCTTTCTGGCATT.1 \n##                 2                 0                 4                 4 \n##  ATCTTTCTTGCATG.1  ATGAAACTAACCAC.1  ATGAAACTAACGTC.1  ATGAAACTACCAGT.1 \n##                 2                 0                 6                 2 \n##  ATGAAACTGCTGTA.1  ATGAAACTGTCACA.1  ATGAAACTGTGCTA.1  ATGAAACTTCCTGC.1 \n##                 0                 2                 0                 0 \n##  ATGAAACTTCGCAA.1  ATGAAGGACACAAC.1  ATGAAGGACGATAC.1  ATGACGTGCATTTC.1 \n##                 6                 8                 0                 0 \n##  ATGACGTGCCAAGT.1  ATGACGTGGCATAC.1  ATGAGAGAAACCTG.1  ATGAGAGAAGCGGA.1 \n##                 0                 3                 2                 0 \n##  ATGAGAGACGACTA.1  ATGAGAGACTCCCA.1  ATGAGCACGCTAAC.1  ATGAGCACGTAGCT.1 \n##                 4                 0                 4                 5 \n##  ATGAGCACTCGCAA.1  ATGAGCACTTTGGG.1  ATGATATGAAGCCT.1  ATGATATGCGCTAA.1 \n##                 1                 2                 5                 0 \n##  ATGATATGTCTAGG.1  ATGATATGTTGGCA.1  ATGATATGTTTGCT.1  ATGCACGAGCTTCC.1 \n##                 4                 1                 3                 0 \n##  ATGCACGAGTTAGC.1  ATGCACGATCCGTC.1  ATGCAGACGCAAGG.1  ATGCAGACGTAAGA.1 \n##                10                 0                 1                 4 \n##  ATGCAGACTGGATC.1  ATGCAGTGACACCA.1  ATGCAGTGACCCAA.1  ATGCAGTGCTTCCG.1 \n##                 0                 0                 0                 3 \n##  ATGCAGTGTCAGGT.1  ATGCCAGAAAGGTA.1  ATGCCAGAAGATCC.1  ATGCCAGACCGTAA.1 \n##                 0                 1                 1                10 \n##  ATGCCAGACCTTCG.1  ATGCCAGAGTGTTG.1  ATGCCAGATGTAGC.1  ATGCCGCTGGACTT.1 \n##                 1                 0                 1                 0 \n##  ATGCCGCTGTATCG.1  ATGCCGCTGTCATG.1  ATGCCGCTTGAAGA.1  ATGCGATGAAAACG.1 \n##                 0                 1                 2                 8 \n##  ATGCGATGTGCTGA.1  ATGCGCCTAGAAGT.1  ATGCGCCTATTTCC.1  ATGCGCCTCTGACA.1 \n##                 1                 7                 7                 4 \n##  ATGCGCCTCTTCTA.1  ATGCGCCTGCAAGG.1  ATGCTTTGACTTTC.1  ATGCTTTGCTTCCG.1 \n##                 0                10                 2                 0 \n##  ATGCTTTGGTGCAT.1  ATGCTTTGGTGCTA.1  ATGCTTTGTCTATC.1  ATGCTTTGTTCTGT.1 \n##                 0                 8                 5                 8 \n##  ATGGACACAAACAG.1  ATGGACACAACTGC.1  ATGGACACCCGCTT.1  ATGGACACGGTTTG.1 \n##                 1                 2                 0                 4 \n##  ATGGGTACAGACTC.1  ATGGGTACCCCGTT.1  ATGGGTACCTGATG.1  ATGGGTACTCGTAG.1 \n##                 0                12                 0                 1 \n##  ATGGGTACTGAGAA.1  ATGGGTACTGGAGG.1  ATGGTGACTCGTGA.1  ATGTAAACACTACG.1 \n##                 2                 9                 0                 8 \n##  ATGTAAACACTCTT.1  ATGTAAACATGGTC.1  ATGTAAACGATAGA.1  ATGTAAACGTTTGG.1 \n##                 4                 2                 0                 4 \n##  ATGTACCTACGGTT.1  ATGTACCTAGCTAC.1  ATGTACCTCGACAT.1  ATGTACCTCTAGCA.1 \n##                 3                 3                 5                 0 \n##  ATGTACCTCTCAAG.1  ATGTCACTAAAAGC.1  ATGTCACTGTCTAG.1  ATGTCGGAATGCTG.1 \n##                 0                 1                 0                 1 \n##  ATGTCGGACTGGAT.1  ATGTCGGATGAAGA.1  ATGTCGGATGGAGG.1  ATGTCGGATGTGAC.1 \n##                 1                 7                 1                 1 \n##  ATGTCGGATGTGGT.1  ATGTTAGACACTCC.1  ATGTTAGAGCCATA.1  ATGTTAGAGTGCTA.1 \n##                 2                 0                 7                 0 \n##  ATGTTCACACCAGT.1  ATGTTCACAGTCTG.1  ATGTTCACCTACGA.1  ATGTTCACGCTGAT.1 \n##                10                 0                 0                 9 \n##  ATGTTCACTTCGCC.1  ATGTTGCTACCTCC.1  ATGTTGCTCCATAG.1  ATTAACGAAAGAGT.1 \n##                 2                 3                 1                 8 \n##  ATTAACGAACTGTG.1  ATTAACGACCATGA.1  ATTAACGAGACACT.1  ATTAACGATCAGTG.1 \n##                 1                 2                 0                 5 \n##  ATTAAGACTTCAGG.1  ATTACCACCTGGAT.1  ATTACCTGGGAGTG.1  ATTACCTGTCCAGA.1 \n##                 5                 2                 0                 0 \n##  ATTAGATGAAAGCA.1  ATTAGATGAAGCCT.1  ATTAGATGCACTGA.1  ATTAGATGCCGTAA.1 \n##                 0                 6                 0                 0 \n##  ATTAGATGGAGGAC.1  ATTAGATGTCACGA.1  ATTAGATGTGCTTT.1  ATTAGTGACATTCT.1 \n##                 9                 4                 6                 0 \n##  ATTAGTGACGGTAT.1  ATTAGTGACTCTCG.1  ATTAGTGATACGAC.1  ATTAGTGATTCTAC.1 \n##                 6                 7                 0                 7 \n##  ATTATGGAAGATCC.1  ATTATGGAGAGACG.1  ATTATGGATCGTGA.1  ATTATGGATCTACT.1 \n##                 2                 3                 2                 7 \n##  ATTCAAGAAGTGCT.1  ATTCAAGAGACTAC.1  ATTCAAGAGGAGCA.1  ATTCAAGATGCAAC.1 \n##                 6                 1                 0                 2 \n##  ATTCAGCTATCGTG.1  ATTCAGCTGGAGGT.1  ATTCCATGACCAAC.1  ATTCCATGCAGAAA.1 \n##                 2                 2                 0                 0 \n##  ATTCCATGCTATTC.1  ATTCCATGCTTGCC.1  ATTCCATGGATGAA.1  ATTCGACTACGTTG.1 \n##                 1                 0                 0                 0 \n##  ATTCGGGAGAGGCA.1  ATTCGGGATGAACC.1  ATTCTGACGCTCCT.1  ATTCTTCTAGTGTC.1 \n##                 0                 3                 5                 5 \n##  ATTCTTCTCTGATG.1  ATTCTTCTGGCAAG.1  ATTGAAACAGTCTG.1  ATTGAAACGATACC.1 \n##                 0                 0                 8                 7 \n##  ATTGAAACGGTACT.1  ATTGAAACTTCGGA.1  ATTGAATGACGGGA.1  ATTGAATGGGACTT.1 \n##                 0                 0                 0                 3 \n##  ATTGATGAAAAACG.1  ATTGATGAGGTGGA.1  ATTGATGATCCTCG.1  ATTGCACTTACTTC.1 \n##                 1                 0                 2                 7 \n##  ATTGCACTTCGATG.1  ATTGCACTTGTCGA.1  ATTGCGGAACCACA.1  ATTGCGGAATTGGC.1 \n##                 1                13                 0                 6 \n##  ATTGCGGATCGTTT.1  ATTGCGGATGTCTT.1  ATTGCGGATGTTTC.1  ATTGCTACACCTCC.1 \n##                 1                 0                 5                 4 \n##  ATTGCTACACTCAG.1  ATTGCTACACTGTG.1  ATTGCTACCTCTCG.1  ATTGCTACGAGCTT.1 \n##                 0                 0                 4                 0 \n##  ATTGCTACGGCAAG.1  ATTGCTACTCCGAA.1  ATTGCTTGCGTCTC.1  ATTGCTTGCTGGTA.1 \n##                 1                 5                 0                 3 \n##  ATTGCTTGGTCATG.1  ATTGCTTGTCACCC.1  ATTGCTTGTGCAAC.1  ATTGGGTGGAGGCA.1 \n##                 3                 6                 2                 6 \n##  ATTGGTCTCTCAGA.1  ATTGGTCTGACAAA.1  ATTGGTCTGCATAC.1  ATTGTAGAGACGGA.1 \n##                 1                 2                10                 5 \n##  ATTGTAGAGGCAAG.1  ATTGTCTGACGGAG.1  ATTGTCTGAGAATG.1  ATTGTCTGCACAAC.1 \n##                 1                 8                 1                 1 \n##  ATTGTCTGCTTTAC.1  ATTGTCTGGTTTGG.1  ATTGTCTGTACAGC.1  ATTTAGGAAACGAA.1 \n##                 0                 6                 4                 0 \n##  ATTTAGGAAGAGAT.1  ATTTAGGACGAGTT.1  ATTTAGGAGATACC.1  ATTTAGGAGTGAGG.1 \n##                 0                 5                 8                 0 \n##  ATTTAGGATGCAGT.1  ATTTAGGATTTACC.1  ATTTCCGAATGTCG.1  ATTTCCGACTCGCT.1 \n##                 6                 2                 3                 3 \n##  ATTTCGTGCACTAG.1  ATTTCGTGTCATTC.1  ATTTCGTGTTTCTG.1  ATTTCTCTATAAGG.1 \n##                 7                 0                 1                 0 \n##  ATTTCTCTCATGCA.1  ATTTCTCTCTACTT.1  ATTTCTCTCTTGGA.1  ATTTCTCTGTCACA.1 \n##                 1                 0                 1                 4 \n##  ATTTCTCTGTTTGG.1  ATTTGCACCAAGCT.1  ATTTGCACCCTATT.1  ATTTGCACCTTCGC.1 \n##                 0                 0                 2                 0 \n##  ATTTGCACGTGAGG.1  ATTTGCACTATCGG.1  CAAACTCTAGCATC.1  CAAACTCTATCGGT.1 \n##                 1                 0                 2                 6 \n##  CAAACTCTTCGTAG.1  CAAACTCTTGGTGT.1  CAAACTCTTTACCT.1  CAAAGCACACACAC.1 \n##                 0                 7                 0                 6 \n##  CAAAGCACACACTG.1  CAAAGCACCGACAT.1  CAAAGCACCTACGA.1  CAAAGCACGAATGA.1 \n##                 0                 7                 1                 0 \n##  CAAAGCACTCTATC.1  CAAAGCTGCATTGG.1  CAAAGCTGCCTACC.1  CAAAGCTGTGAGGG.1 \n##                 0                 0                 1                 1 \n##  CAAATATGACGTGT.1  CAAATATGCGTAAC.1  CAAATTGAACACGT.1  CAAATTGACATTCT.1 \n##                 0                 3                 1                 0 \n##  CAAATTGACCCTCA.1  CAAATTGAGCGTAT.1  CAAATTGATATGCG.1  CAACAGACAGGAGC.1 \n##                 0                 0                 0                 5 \n##  CAACAGACATACCG.1  CAACAGACCGCATA.1  CAACAGACGTACGT.1  CAACCAGAGGAAGC.1 \n##                 5                 0                 0                 0 \n##  CAACCAGAGTGCAT.1  CAACCGCTCAGAAA.1  CAACCGCTCTGACA.1  CAACCGCTGACAGG.1 \n##                 2                 2                 6                 1 \n##  CAACCGCTGTTTCT.1  CAACCGCTTCTGGA.1  CAACGAACCTCCCA.1  CAACGAACGTCACA.1 \n##                 1                 0                 0                 6 \n##  CAACGAACTGTCAG.1  CAACGATGACGTTG.1  CAACGTGACGAGTT.1  CAACGTGAGACACT.1 \n##                 2                10                 0                10 \n##  CAACGTGAGCCTTC.1  CAACTTTGTAACCG.1  CAACTTTGTGGTCA.1  CAAGAAGAAGTCGT.1 \n##                 2                 3                 0                 3 \n##  CAAGAAGAAGTTCG.1  CAAGAAGACCAACA.1  CAAGAAGAGACGTT.1  CAAGAAGAGAGGAC.1 \n##                 0                 7                 0                 3 \n##  CAAGAAGAGGAGTG.1  CAAGAAGAGTCACA.1  CAAGAAGATAGACC.1  CAAGAAGATCCTGC.1 \n##                 7                 5                 5                 0 \n##  CAAGACACCTGGTA.1  CAAGACACGGGTGA.1  CAAGACACTCGTAG.1  CAAGACACTGCATG.1 \n##                 0                 5                 8                 2 \n##  CAAGACTGAACGGG.1  CAAGACTGTGGAGG.1  CAAGACTGTTCGCC.1  CAAGCATGAAGCCT.1 \n##                 6                 1                 3                 0 \n##  CAAGCATGACGGGA.1  CAAGCATGCAGATC.1  CAAGCATGCTAGTG.1  CAAGCATGGGTAAA.1 \n##                 0                 2                 2                 0 \n##  CAAGCATGGGTTAC.1  CAAGCATGGTTGCA.1  CAAGCATGTAGCGT.1  CAAGCATGTGTGAC.1 \n##                 0                 0                 0                 1 \n##  CAAGCCCTACAGCT.1  CAAGCCCTCAATCG.1  CAAGCCCTCTCGAA.1  CAAGCTGACTCCAC.1 \n##                 5                 2                 0                 8 \n##  CAAGCTGAGAGAGC.1  CAAGCTGAGGTACT.1  CAAGCTGATTCTCA.1  CAAGGACTCCAACA.1 \n##                 2                 7                 0                 1 \n##  CAAGGACTCCACAA.1  CAAGGACTCCTTGC.1  CAAGGACTCGTAGT.1  CAAGGACTTCCGTC.1 \n##                 0                 0                 1                 3 \n##  CAAGGACTTTGCGA.1  CAAGGTTGAGTCAC.1  CAAGGTTGCCTTAT.1  CAAGGTTGGAGGAC.1 \n##                 0                 9                 7                 4 \n##  CAAGGTTGGTCTGA.1  CAAGGTTGTGAACC.1  CAAGGTTGTGACAC.1  CAAGTTCTACGACT.1 \n##                 4                 2                 3                 0 \n##  CAAGTTCTACTCTT.1  CAAGTTCTAGTCTG.1  CAAGTTCTGCTTCC.1  CAAGTTCTGTCGTA.1 \n##                 0                 0                 1                 1 \n##  CAAGTTCTTCCAGA.1  CAAGTTCTTCTTAC.1  CAATAAACGACAGG.1  CAATAAACGTACCA.1 \n##                 2                 9                 2                 1 \n##  CAATAATGCCCTCA.1  CAATAATGCCGCTT.1  CAATAATGCGAATC.1  CAATAATGGAATCC.1 \n##                 1                 2                 0                 0 \n##  CAATAATGGTTGAC.1  CAATATGAAACGTC.1  CAATATGAAGCCAT.1  CAATATGATGAGGG.1 \n##                 7                12                 1                 2 \n##  CAATATGATGGAAA.1  CAATCGGAACCAAC.1  CAATCGGAGATAAG.1  CAATCGGATCGTTT.1 \n##                 0                 7                 1                 6 \n##  CAATCGGATGGTGT.1  CAATCTACAGGTCT.1  CAATCTACATCGGT.1  CAATCTACCCAGTA.1 \n##                 2                 1                 1                 1 \n##  CAATCTACGGTCTA.1  CAATCTACGGTTAC.1  CAATGGACAAGAGT.1  CAATGGACCAGGAG.1 \n##                11                 0                 2                 1 \n##  CAATGGACCAGTTG.1  CAATGGACTCCAGA.1  CAATGGACTCTTAC.1  CAATTCACTGAGAA.1 \n##                 5                 4                 0                 0 \n##  CAATTCTGAACCAC.1  CAATTCTGCCCTAC.1  CAATTCTGGTAGCT.1  CACAACGAACGACT.1 \n##                 1                 0                 4                 9 \n##  CACAACGACCGTTC.1  CACAACGACCTCAC.1  CACAATCTCATCAG.1  CACAATCTGCCATA.1 \n##                 9                 4                 0                 4 \n##  CACAATCTTGAGGG.1  CACACCTGAGTCTG.1  CACACCTGCAGATC.1  CACACCTGCATACG.1 \n##                 3                 5                 2                 8 \n##  CACACCTGTATCTC.1  CACACCTGTCCCAC.1  CACACCTGTGTCTT.1  CACAGAACACCATG.1 \n##                 0                11                 7                 1 \n##  CACAGAACGCATCA.1  CACAGAACGGTACT.1  CACAGAACGTCCTC.1  CACAGATGAAGAGT.1 \n##                11                 1                 0                 5 \n##  CACAGATGAGTGTC.1  CACAGATGGAGGTG.1  CACAGATGGCTGTA.1  CACAGCCTCTACGA.1 \n##                 0                 1                 1                 6 \n##  CACAGCCTGTCACA.1  CACAGTGAACCATG.1  CACAGTGACCGCTT.1  CACAGTGACTTAGG.1 \n##                 1                10                 0                 2 \n##  CACAGTGAGGGTGA.1  CACAGTGATGTTCT.1  CACATACTAGCGTT.1  CACATACTATCTTC.1 \n##                 2                 0                 8                 1 \n##  CACATACTCATGCA.1  CACATACTCTGCTC.1  CACATACTTGTGGT.1  CACATGGACGGAGA.1 \n##                 0                 3                 1                 0 \n##  CACATGGACTTTAC.1  CACATGGATCCTTA.1  CACCACTGACGTAC.1  CACCACTGCTACCC.1 \n##                 2                 1                 6                 1 \n##  CACCACTGCTGGAT.1  CACCACTGGCTATG.1  CACCACTGGTAAAG.1  CACCACTGTAGAGA.1 \n##                 1                 1                 9                 0 \n##  CACCCATGACGTTG.1  CACCCATGGACACT.1  CACCCATGGTTTGG.1  CACCGGGACTGGAT.1 \n##                 0                 0                 0                 9 \n##  CACCGGGAGACGTT.1  CACCGGGAGCGAGA.1  CACCGGGATCTTCA.1  CACCGTACACTCAG.1 \n##                 0                 3                 2                 0 \n##  CACCGTACCCCGTT.1  CACCGTACCCTTAT.1  CACCGTACGGACGA.1  CACCGTACGGTTTG.1 \n##                 4                 2                 1                 2 \n##  CACCGTACTACTTC.1  CACCGTTGACTAGC.1  CACCGTTGCAGAAA.1  CACCGTTGCTGGTA.1 \n##                 9                 1                 2                 0 \n##  CACCGTTGGTTCGA.1  CACCGTTGTAGTCG.1  CACCGTTGTCGTAG.1  CACCTGACGACAGG.1 \n##                 0                 0                 4                12 \n##  CACCTGACGACGAG.1  CACCTGACGGGCAA.1  CACCTGACGTGTTG.1  CACCTGACTGACTG.1 \n##                 0                 0                 1                 1 \n##  CACCTGACTTGCTT.1  CACGAAACCGCAAT.1  CACGAAACCGTAGT.1  CACGAAACGCAGTT.1 \n##                 4                 0                 1                 0 \n##  CACGACCTACACGT.1  CACGACCTCGATAC.1  CACGATGAAACCAC.1  CACGATGACGTACA.1 \n##                 2                 6                 2                 0 \n##  CACGATGAGCAAGG.1  CACGATGAGCTACA.1  CACGATGATAACCG.1  CACGCTACCGTCTC.1 \n##                 9                 2                 0                 3 \n##  CACGCTACTAAGCC.1  CACGGGACCTAAGC.1  CACGGGACGAGACG.1  CACGGGACGCTGAT.1 \n##                 8                 5                 3                 2 \n##  CACGGGACGGATCT.1  CACGGGACTCGATG.1  CACGGGACTTCTCA.1  CACGGGTGGAACCT.1 \n##                 0                 3                 3                 0 \n##  CACGGGTGTCGCAA.1  CACTAACTACACGT.1  CACTAACTCGCCTT.1  CACTAACTGTCGAT.1 \n##                 9                 5                10                 1 \n##  CACTAACTTGGGAG.1  CACTAACTTTGACG.1  CACTAGGAACACCA.1  CACTAGGACAACCA.1 \n##                 0                 1                 4                 0 \n##  CACTAGGAGTAAAG.1  CACTAGGATACGAC.1  CACTATACCAGAAA.1  CACTATACGTATCG.1 \n##                 0                 9                 0                 2 \n##  CACTATACGTTACG.1  CACTATACTTCTCA.1  CACTCCGACATGAC.1  CACTCCGACCGTTC.1 \n##                 9                 5                 8                 0 \n##  CACTCCGAGCCCTT.1  CACTCCGATTCAGG.1  CACTCTCTAGCACT.1  CACTCTCTAGCTAC.1 \n##                 5                 4                 0                 0 \n##  CACTCTCTCGGTAT.1  CACTCTCTTGCAGT.1  CACTGAGACAGATC.1  CACTGAGACCCTTG.1 \n##                 2                 0                 1                 3 \n##  CACTGAGACTGTTT.1  CACTGAGAGGAACG.1  CACTGCACACAGCT.1  CACTGCACATCAGC.1 \n##                 1                 0                 0                 0 \n##  CACTGCACGTAGGG.1  CACTGCTGACCCTC.1  CACTGCTGCAGGAG.1  CACTGCTGCTGCTC.1 \n##                 0                 2                 5                11 \n##  CACTGCTGGAATCC.1  CACTGCTGTCCAGA.1  CACTGCTGTGCAAC.1  CACTGCTGTGGTCA.1 \n##                 6                 1                 5                 1 \n##  CACTTAACAGAATG.1  CACTTAACATTCTC.1  CACTTAACCCGATA.1  CACTTATGCCCAAA.1 \n##                 8                 5                 1                 0 \n##  CACTTATGGGACGA.1  CACTTATGTGCCTC.1  CACTTATGTGGTCA.1  CACTTTGAACTCAG.1 \n##                 6                 0                 7                 2 \n##  CACTTTGAAGCTCA.1  CACTTTGACACTCC.1  CACTTTGAGAGCAG.1  CACTTTGATCTCTA.1 \n##                 0                 8                 5                 2 \n##  CAGAAGCTCACTTT.1  CAGAAGCTGCGAAG.1  CAGACAACAACTGC.1  CAGACAACCGCCTT.1 \n##                 7                 1                 1                 8 \n##  CAGACAACCGTACA.1  CAGACAACCTCAGA.1  CAGACATGAACGTC.1  CAGACATGACTACG.1 \n##                 0                 9                 2                 4 \n##  CAGACATGCATTGG.1  CAGACATGCCCACT.1  CAGACATGCTCGCT.1  CAGACCCTGAAACA.1 \n##                 0                 2                 2                 0 \n##  CAGACTGAAAGGTA.1  CAGACTGACAATCG.1  CAGACTGACAGAAA.1  CAGACTGAGGCATT.1 \n##                 8                 5                 4                 0 \n##  CAGACTGATAGCGT.1  CAGAGGGAAAAGTG.1  CAGAGGGAACTAGC.1  CAGAGGGAGACACT.1 \n##                 1                 2                 2                 0 \n##  CAGAGGGAGCTGAT.1  CAGATGACAGAACA.1  CAGATGACAGAATG.1  CAGATGACAGTGTC.1 \n##                 7                 2                 0                 0 \n##  CAGATGACCCTCGT.1  CAGATGACCGAGTT.1  CAGATGACGAGGAC.1  CAGATGACGGGCAA.1 \n##                 8                 4                 0                 0 \n##  CAGCAATGACTAGC.1  CAGCAATGCGTAGT.1  CAGCAATGGCCATA.1  CAGCAATGGGTACT.1 \n##                 3                 6                 1                 1 \n##  CAGCAATGGTCACA.1  CAGCACCTCCTACC.1  CAGCACCTCTTGCC.1  CAGCATGAACCCAA.1 \n##                 7                 6                 5                 0 \n##  CAGCATGAGTTTGG.1  CAGCATGATATCTC.1  CAGCATGATGTCAG.1  CAGCCTACGAGGAC.1 \n##                 5                12                 0                 5 \n##  CAGCCTACTCTCGC.1  CAGCCTTGACACGT.1  CAGCCTTGCTGAGT.1  CAGCCTTGTGCAAC.1 \n##                 0                 2                 2                 0 \n##  CAGCCTTGTTGCGA.1  CAGCGGACAGCGTT.1  CAGCGGACCACAAC.1  CAGCGGACCCAGTA.1 \n##                 1                 4                 1                 1 \n##  CAGCGGACTTATCC.1  CAGCGGACTTTGCT.1  CAGCGTCTAACGGG.1  CAGCGTCTATGTCG.1 \n##                 9                 2                 0                 0 \n##  CAGCGTCTATGTGC.1  CAGCGTCTGTTCTT.1  CAGCGTCTTCGTGA.1  CAGCTAGACCGAAT.1 \n##                 1                 0                 5                 0 \n##  CAGCTCACGGTACT.1  CAGCTCACTGAGGG.1  CAGCTCACTTCCCG.1  CAGCTCTGAGGTCT.1 \n##                 7                 0                 2                 4 \n##  CAGGAACTCCACAA.1  CAGGAACTCTTTAC.1  CAGGAACTGACGTT.1  CAGGCCGAAAGATG.1 \n##                 0                 0                 5                 5 \n##  CAGGCCGAGAGGTG.1  CAGGCCGAGTCGAT.1  CAGGGCACACGCAT.1  CAGGGCACCTTGAG.1 \n##                 0                 2                 1                 1 \n##  CAGGGCACGCGAAG.1  CAGGGCACTCTGGA.1  CAGGTAACGCCCTT.1  CAGGTAACGTTCAG.1 \n##                 7                11                10                 0 \n##  CAGGTATGCCAATG.1  CAGGTATGCCCTTG.1  CAGGTATGCTTCGC.1  CAGGTATGGAATGA.1 \n##                 1                 3                 0                 0 \n##  CAGGTTGAAACAGA.1  CAGGTTGACTCGCT.1  CAGGTTGAGAGAGC.1  CAGGTTGAGGGATG.1 \n##                 5                 2                 0                 2 \n##  CAGGTTGAGTATGC.1  CAGTCAGAAGGCGA.1  CAGTCAGACATGGT.1  CAGTCAGAGTTAGC.1 \n##                 4                 0                 0                 2 \n##  CAGTGATGAGCAAA.1  CAGTGATGCCTCCA.1  CAGTGATGCTATTC.1  CAGTGATGGGTCAT.1 \n##                 1                 8                13                 0 \n##  CAGTGATGGTATCG.1  CAGTGTGAATTCTC.1  CAGTGTGACCTCCA.1  CAGTGTGACTGCTC.1 \n##                 1                 4                 5                 1 \n##  CAGTGTGATCAGGT.1  CAGTGTGATGTGCA.1  CAGTGTGATTTGGG.1  CAGTTACTCCCACT.1 \n##                 5                 8                 5                 5 \n##  CAGTTACTTGAACC.1  CAGTTACTTGCCCT.1  CAGTTACTTTCGTT.1  CAGTTGGAACGACT.1 \n##                 0                 6                 1                 7 \n##  CAGTTGGAAGTCGT.1  CAGTTGGACGGGAA.1  CAGTTGGAGGAGCA.1  CAGTTGGATTCCCG.1 \n##                 0                 0                 0                 4 \n##  CAGTTTACCCAGTA.1  CAGTTTACGTTCGA.1  CAGTTTACTATCTC.1  CATAAAACACCCTC.1 \n##                 8                 9                 0                 0 \n##  CATAAAACAGAGAT.1  CATAAAACGTCCTC.1  CATAAAACTGAGAA.1  CATAAATGCAAGCT.1 \n##                 0                 5                 0                 0 \n##  CATAAATGCCTTAT.1  CATAAATGGGTCTA.1  CATAACCTACCTAG.1  CATAACCTGGTAGG.1 \n##                 2                 0                 0                 1 \n##  CATAACCTGTTCAG.1  CATAACCTTAACGC.1  CATACTACCCGAAT.1  CATACTACCTATGG.1 \n##                 5                 0                 1                 3 \n##  CATACTACTGTGCA.1  CATACTTGACTACG.1  CATACTTGGGGTGA.1  CATACTTGGGTAGG.1 \n##                 0                 2                10                 6 \n##  CATACTTGTGCCAA.1  CATAGTCTACACTG.1  CATAGTCTCCCTTG.1  CATAGTCTCTGTTT.1 \n##                 2                 0                 2                 0 \n##  CATAGTCTGGAACG.1  CATAGTCTTAGCCA.1  CATATAGAATCGTG.1  CATATAGACCTGTC.1 \n##                 2                 0                 0                 1 \n##  CATATAGAGTACGT.1  CATATAGATAAGCC.1  CATATAGATATCTC.1  CATATAGATCTTTG.1 \n##                 6                 2                 7                 0 \n##  CATATAGATGTCCC.1  CATCAACTACTACG.1  CATCAACTGCCCTT.1  CATCAACTTAACGC.1 \n##                 2                10                11                 1 \n##  CATCAACTTAGACC.1  CATCAACTTTCAGG.1  CATCAACTTTCCAT.1  CATCAACTTTCCCG.1 \n##                 8                 1                 0                 1 \n##  CATCAGGAGCGGAA.1  CATCAGGAGGGACA.1  CATCAGGAGGTGTT.1  CATCAGGAGTCCTC.1 \n##                 4                 3                 1                 3 \n##  CATCAGGATGCTGA.1  CATCAGGATTGACG.1  CATCATACCCTGTC.1  CATCATACCGTCTC.1 \n##                 0                 8                 0                 1 \n##  CATCATACTCAGAC.1  CATCATACTGTGCA.1  CATCCCGATCATTC.1  CATCGGCTATGTGC.1 \n##                 0                 1                 1                 0 \n##  CATCGGCTGCATCA.1  CATCGGCTTCGATG.1  CATCTCCTAGTCTG.1  CATCTCCTCTATGG.1 \n##                 3                 2                 4                 2 \n##  CATCTCCTTGAGAA.1  CATCTCCTTTGGCA.1  CATCTCCTTTTACC.1  CATCTTGAAGCACT.1 \n##                 6                 0                 0                 0 \n##  CATCTTGAGCTAAC.1  CATCTTGATTTGCT.1  CATGAGACAGGTCT.1  CATGAGACATGCTG.1 \n##                10                 0                 0                 5 \n##  CATGAGACCTATTC.1  CATGAGACCTCTCG.1  CATGCCACTCATTC.1  CATGCGCTCCTTCG.1 \n##                 6                 7                 1                 3 \n##  CATGCGCTCTGAAC.1  CATGCGCTGGTTTG.1  CATGCGCTTTGTCT.1  CATGGCCTCCCTTG.1 \n##                 2                 5                 7                 2 \n##  CATGGCCTTAGAAG.1  CATGGCCTTCCAAG.1  CATGGCCTTGTCTT.1  CATGGCCTTTCTAC.1 \n##                 0                 3                 1                 7 \n##  CATGTACTCAAGCT.1  CATGTACTCAATCG.1  CATGTACTGATAAG.1  CATGTACTGGAGTG.1 \n##                 0                 0                 4                 1 \n##  CATGTACTTCAGTG.1  CATGTTACATCGGT.1  CATGTTACCATGGT.1  CATGTTACCGTGAT.1 \n##                 1                 0                 2                 1 \n##  CATGTTACGCAGTT.1  CATGTTACGTTTCT.1  CATGTTACTGTCTT.1  CATGTTTGAAAACG.1 \n##                 4                 0                 8                 0 \n##  CATGTTTGCCTGAA.1  CATGTTTGCGAGAG.1  CATGTTTGGATAGA.1  CATTACACCGAGAG.1 \n##                 0                 2                 1                 6 \n##  CATTACACTCTTAC.1  CATTAGCTATTCCT.1  CATTAGCTCTTTAC.1  CATTAGCTGGGATG.1 \n##                 9                 0                 4                 0 \n##  CATTCCCTAAGTAG.1  CATTCCCTAGTGCT.1  CATTCCCTATTGGC.1  CATTCCCTCCTTAT.1 \n##                 0                 0                 0                 2 \n##  CATTCCCTGTTCTT.1  CATTGACTGCGATT.1  CATTGACTTATGGC.1  CATTGGGAGGGATG.1 \n##                 0                 0                 6                 1 \n##  CATTGGGATGTCAG.1  CATTGTACAACGTC.1  CATTGTACACTGTG.1  CATTGTTGAACAGA.1 \n##                 1                 0                 2                 1 \n##  CATTGTTGCAACTG.1  CATTGTTGGGGAGT.1  CATTGTTGGGTATC.1  CATTGTTGTACGAC.1 \n##                10                 6                 1                 1 \n##  CATTGTTGTGTGCA.1  CATTTCGAACCACA.1  CATTTCGAACCTCC.1  CATTTCGACACTGA.1 \n##                 0                 3                 5                 0 \n##  CATTTCGATTAGGC.1  CATTTGACACTTTC.1  CATTTGACGTTCAG.1  CATTTGTGGAGCAG.1 \n##                 1                 0                 0                 2 \n##  CATTTGTGGATGAA.1  CATTTGTGGGTCTA.1  CATTTGTGTGTCAG.1  CATTTGTGTTATCC.1 \n##                 1                 1                 5                 3 \n##  CCAAAGTGATCAGC.1  CCAAAGTGATCGGT.1  CCAACCTGAGGCGA.1  CCAACCTGATGTCG.1 \n##                 4                 0                 1                 0 \n##  CCAACCTGGAAGGC.1  CCAACCTGTACGAC.1  CCAACCTGTGCCAA.1  CCAAGAACCACTTT.1 \n##                 3                 0                 1                 0 \n##  CCAAGAACCTAGCA.1  CCAAGAACGGTTAC.1  CCAAGAACGTACAC.1  CCAAGAACGTGCAT.1 \n##                 1                 1                 1                 0 \n##  CCAAGAACTGACCA.1  CCAAGAACTGTCCC.1  CCAAGATGAGTCAC.1  CCAAGATGCGACAT.1 \n##                 8                 7                 5                 0 \n##  CCAAGATGTCAGGT.1  CCAAGATGTGTCGA.1  CCAAGATGTGTGAC.1  CCAAGTGAAGCTCA.1 \n##                 0                 2                 2                 2 \n##  CCAAGTGACACTGA.1  CCAAGTGAGCTTAG.1  CCAAGTGATAACGC.1  CCAAGTGATACGAC.1 \n##                 1                 0                11                 0 \n##  CCAAGTGATCCGTC.1  CCAATGGATGCATG.1  CCAATTTGAGATCC.1  CCAATTTGCAGGAG.1 \n##                 0                 0                 7                 1 \n##  CCAATTTGCCTACC.1  CCAATTTGGTTAGC.1  CCAATTTGTCTCAT.1  CCAATTTGTGGAAA.1 \n##                 0                 0                 1                 0 \n##  CCACCATGCAGTCA.1  CCACCATGGCCATA.1  CCACCTGACCGTAA.1  CCACCTGACGAGAG.1 \n##                 2                 0                 1                 7 \n##  CCACCTGATAGTCG.1  CCACGGGAACGGGA.1  CCACGGGAGGGAGT.1  CCACTGACGACAGG.1 \n##                 1                 0                 1                 6 \n##  CCACTGACTGTCCC.1  CCACTGTGACTGTG.1  CCACTGTGATGCTG.1  CCACTGTGCGTCTC.1 \n##                 1                 5                 0                 1 \n##  CCACTGTGCGTGTA.1  CCACTGTGCTTCTA.1  CCACTGTGGACGAG.1  CCACTGTGGCTAAC.1 \n##                 0                 2                 0                 0 \n##  CCACTTCTAACGTC.1  CCACTTCTCACTGA.1  CCACTTCTCTCGCT.1  CCACTTCTCTTGCC.1 \n##                 0                 0                 0                 2 \n##  CCAGAAACCTTCGC.1  CCAGAAACTAGAAG.1  CCAGACCTCTATGG.1  CCAGATGATGACCA.1 \n##                 7                 2                 1                 6 \n##  CCAGCACTAGAGTA.1  CCAGCACTGCATAC.1  CCAGCGGACTTCGC.1  CCAGCGGAGAGGCA.1 \n##                 1                 8                 3                 2 \n##  CCAGCGGATCTTAC.1  CCAGCGGATTATCC.1  CCAGCGGATTCTCA.1  CCAGCGGATTTACC.1 \n##                 0                 0                 9                 0 \n##  CCAGCTACAACGGG.1  CCAGCTACCAATCG.1  CCAGCTACCAGTCA.1  CCAGCTACCCGTTC.1 \n##                 2                 2                 1                 9 \n##  CCAGGTCTCGTAGT.1  CCAGGTCTGACGAG.1  CCAGTCTGACAGTC.1  CCAGTCTGTCTTCA.1 \n##                 5                 6                 3                 2 \n##  CCAGTGCTGGCATT.1  CCAGTGCTGGGCAA.1  CCAGTGCTGTCTAG.1  CCAGTGCTTAACCG.1 \n##                 4                 1                 0                 1 \n##  CCATAGGACCTATT.1  CCATAGGAGGTAAA.1  CCATATACAAGATG.1  CCATATACACACTG.1 \n##                 0                 3                 0                 7 \n##  CCATATACGATGAA.1  CCATATACTGGTGT.1  CCATATACTTTACC.1  CCATCCGAACTTTC.1 \n##                 1                 4                 0                 3 \n##  CCATCCGAGGTTTG.1  CCATCCGAGTGCTA.1  CCATCCGATTCTAC.1  CCATCGTGAAGCCT.1 \n##                 1                 1                 2                 0 \n##  CCATCGTGACCCTC.1  CCATCGTGCTGGAT.1  CCATCGTGGACGAG.1  CCATCGTGTCGCAA.1 \n##                 5                 2                 6                 1 \n##  CCATGCTGAAACGA.1  CCATGCTGCCAAGT.1  CCATGCTGCTAAGC.1  CCATGCTGGAGATA.1 \n##                 1                 1                 0                 7 \n##  CCATGCTGGGATCT.1  CCATGCTGTCACGA.1  CCATTAACGTGAGG.1  CCCAAAGAATCACG.1 \n##                 5                 2                 2                 5 \n##  CCCAAAGAGTCCTC.1  CCCAACACAGTAGA.1  CCCAACACCAAGCT.1  CCCAACACTCCGTC.1 \n##                 0                 0                 0                11 \n##  CCCAACACTGAGGG.1  CCCAACACTGATGC.1  CCCAACTGCCTACC.1  CCCAACTGGATACC.1 \n##                 2                 4                 5                 0 \n##  CCCAACTGGCCATA.1  CCCAACTGGTGTAC.1  CCCAACTGGTTGAC.1  CCCACATGCTTTAC.1 \n##                 7                 1                 3                 3 \n##  CCCACATGGGTGGA.1  CCCAGACTAAACGA.1  CCCAGACTCCAAGT.1  CCCAGACTTCCCAC.1 \n##                 0                 7                 0                 4 \n##  CCCAGACTTCCTAT.1  CCCAGTTGACAGTC.1  CCCAGTTGTCGTTT.1  CCCAGTTGTTTCTG.1 \n##                 4                 4                 7                 3 \n##  CCCATCGACCCGTT.1  CCCATCGAGAGGGT.1  CCCATCGAGTAAAG.1  CCCATGTGACGTTG.1 \n##                 0                 0                 0                 0 \n##  CCCATGTGCCGAAT.1  CCCATGTGCCTCAC.1  CCCATGTGCGTAAC.1  CCCATGTGCTTGGA.1 \n##                 1                 2                 1                 8 \n##  CCCATGTGTGACCA.1  CCCATGTGTGCACA.1  CCCGAACTACCAAC.1  CCCGAACTTAGCGT.1 \n##                 7                 3                 6                 0 \n##  CCCGAACTTCCCAC.1  CCCGATTGAAGAGT.1  CCCGATTGAGCGGA.1  CCCGATTGCCCGTT.1 \n##                 1                 0                 6                 1 \n##  CCCGATTGCTGATG.1  CCCGATTGCTTACT.1  CCCGATTGCTTATC.1  CCCGGAGACAACCA.1 \n##                 3                 3                 8                 0 \n##  CCCGGAGACTTGCC.1  CCCGGAGAGGGAGT.1  CCCGGAGAGGTTCA.1  CCCGGAGATACTTC.1 \n##                 1                 0                 2                 0 \n##  CCCGGAGATCTTAC.1  CCCTACGACATTCT.1  CCCTACGACTGAAC.1  CCCTACGATTCGGA.1 \n##                 0                 1                 0                 6 \n##  CCCTAGTGCAACCA.1  CCCTAGTGCAGGAG.1  CCCTAGTGTTCTCA.1  CCCTCAGAACCACA.1 \n##                 8                 1                 0                 0 \n##  CCCTCAGAGAGGCA.1  CCCTGAACAATCGC.1  CCCTGAACACTGTG.1  CCCTGAACATTTCC.1 \n##                 5                 2                 0                 4 \n##  CCCTGATGCTGAGT.1  CCCTGATGGAACCT.1  CCCTGATGGAGACG.1  CCCTGATGGGTCAT.1 \n##                 4                 7                 0                 5 \n##  CCCTGATGTGCAGT.1  CCCTTACTACCAAC.1  CCCTTACTCATTGG.1  CCCTTACTCGTGTA.1 \n##                 6                 2                 0                 3 \n##  CCCTTACTCTCGAA.1  CCCTTACTGACGAG.1  CCGAAAACATACCG.1  CCGAAAACCAGAAA.1 \n##                 3                 1                 1                 2 \n##  CCGAAAACCGATAC.1  CCGAAAACTTTGCT.1  CCGACACTGAGAGC.1  CCGACACTGGACAG.1 \n##                10                 4                 2                 4 \n##  CCGACACTTGACCA.1  CCGACTACTTTACC.1  CCGATAGACTTGTT.1  CCGATAGAGCGGAA.1 \n##                 7                 4                 1                 2 \n##  CCGATAGAGGTCAT.1  CCGCGAGAACGCAT.1  CCGCGAGAGCAGAG.1  CCGCGAGATCTCGC.1 \n##                 4                 2                 0                 6 \n##  CCGCGAGATGCATG.1  CCGCTATGCAGCTA.1  CCGCTATGCCCACT.1  CCGCTATGGGGTGA.1 \n##                 1                 0                 0                12 \n##  CCGCTATGGTCACA.1  CCGGAGACTAGTCG.1  CCGGAGACTCTACT.1  CCGGAGTGCCGTAA.1 \n##                 5                 0                 2                 0 \n##  CCGGAGTGCCTCCA.1  CCGGAGTGCTGCAA.1  CCGGAGTGCTTGGA.1  CCGGAGTGTATGGC.1 \n##                 2                 8                 7                 1 \n##  CCGGAGTGTGCCTC.1  CCGGTACTAGGAGC.1  CCGGTACTCTGATG.1  CCGGTACTTCTCTA.1 \n##                 2                 2                 2                 1 \n##  CCGTAAGACAGGAG.1  CCGTAAGACATGAC.1  CCGTACACCTCCAC.1  CCGTACACCTTGGA.1 \n##                 0                 8                 1                 8 \n##  CCGTACACTATGCG.1  CCTAAACTCCTTCG.1  CCTAAACTGTGTAC.1  CCTAAACTTCAGGT.1 \n##                 5                 0                 1                 0 \n##  CCTAAACTTCCGTC.1  CCTAAGGAAACTGC.1  CCTAAGGAAAGGGC.1  CCTAAGGAGGATCT.1 \n##                 0                 0                10                 8 \n##  CCTAAGGATGTCAG.1  CCTAAGGATTACCT.1  CCTACCGAAAGAGT.1  CCTACCGAAGTCTG.1 \n##                 0                 6                 0                 1 \n##  CCTACCGACATGAC.1  CCTACCGACGTACA.1  CCTACCGAGACACT.1  CCTACCGAGCGTTA.1 \n##                 0                 5                 1                 1 \n##  CCTACCGAGGTTTG.1  CCTACCGATCGACA.1  CCTACCGATTACCT.1  CCTACCGATTGGCA.1 \n##                 8                 4                 2                 1 \n##  CCTACCGATTTCTG.1  CCTAGAGAAGTTCG.1  CCTAGAGACGACAT.1  CCTAGAGAGCGTTA.1 \n##                 3                 2                 8                 3 \n##  CCTAGAGATACGCA.1  CCTAGAGATGTCTT.1  CCTATAACCTCAGA.1  CCTATAACGGCAAG.1 \n##                 0                 5                 0                 0 \n##  CCTATTGAACCAAC.1  CCTATTGACCCTAC.1  CCTATTGACCTACC.1  CCTATTGATCCTCG.1 \n##                 0                 8                 5                 0 \n##  CCTCATCTCACTGA.1  CCTCATCTCCGCTT.1  CCTCGAACCCCACT.1  CCTCGAACGTAAAG.1 \n##                 2                 0                 4                 5 \n##  CCTCTACTAGATCC.1  CCTCTACTGGAAGC.1  CCTGACTGACGGGA.1  CCTGACTGCTCTTA.1 \n##                 4                 0                 0                 5 \n##  CCTGACTGGTCACA.1  CCTGACTGTAAGGA.1  CCTGAGCTACACTG.1  CCTGAGCTACAGTC.1 \n##                 0                 6                 0                 1 \n##  CCTGAGCTGTCAAC.1  CCTGCAACCACTAG.1  CCTGCAACCTCAGA.1  CCTGCAACTAAGGA.1 \n##                 0                 8                 1                 6 \n##  CCTGCAACTCATTC.1  CCTGCAACTCGCCT.1  CCTGCAACTTTGGG.1  CCTGGACTCGTAAC.1 \n##                 2                 2                 0                 0 \n##  CCTGGACTCTAAGC.1  CCTTAATGAAGGTA.1  CCTTAATGCTCGAA.1  CCTTAATGGACGTT.1 \n##                 2                 2                 2                 5 \n##  CCTTAATGGATGAA.1  CCTTAATGGGGTGA.1  CCTTAATGTCCGAA.1  CCTTAATGTCGATG.1 \n##                 6                 3                 6                 0 \n##  CCTTAATGTGCATG.1  CCTTCACTTGTCTT.1  CCTTTAGACACTGA.1  CCTTTAGACCATGA.1 \n##                12                 0                 2                 2 \n##  CCTTTAGACTACGA.1  CCTTTAGAGAAACA.1  CCTTTAGAGGTATC.1  CCTTTAGAGTGTTG.1 \n##                 8                 0                 8                 1 \n##  CCTTTAGATAGAAG.1  CCTTTAGATCAGTG.1  CCTTTAGATGCCTC.1  CCTTTAGATGGAAA.1 \n##                 1                 2                 0                 0 \n##  CGAACATGAATCGC.1  CGAAGACTACGGAG.1  CGAAGACTATCGTG.1  CGAAGACTCCTCGT.1 \n##                 0                 3                 0                 0 \n##  CGAAGACTGTAAAG.1  CGAAGACTTACGAC.1  CGAAGGGAAAGATG.1  CGAAGGGAACTCTT.1 \n##                 6                 0                 4                 2 \n##  CGAAGGGAAGAGGC.1  CGAAGGGACTGAGT.1  CGAAGTACAAACGA.1  CGAAGTACAACCGT.1 \n##                 5                 0                 0                 6 \n##  CGAAGTACAAGCAA.1  CGAAGTACACCTCC.1  CGAAGTACAGCCAT.1  CGAAGTACCGTAGT.1 \n##                 2                 0                 0                 1 \n##  CGAAGTACGGAAAT.1  CGAAGTACGGTGTT.1  CGAAGTACTAGAAG.1  CGAAGTACTTTACC.1 \n##                 4                 2                 4                 6 \n##  CGAATCGAGCAGAG.1  CGAATCGATGTCAG.1  CGACAAACAGCAAA.1  CGACAAACAGTCTG.1 \n##                 2                 0                 7                 4 \n##  CGACAAACATACCG.1  CGACAAACATCAGC.1  CGACAAACATGTGC.1  CGACAAACCCCAAA.1 \n##                 2                 1                 0                 2 \n##  CGACAAACGATGAA.1  CGACAAACGTACGT.1  CGACAAACTGTAGC.1  CGACCACTAATCGC.1 \n##                 6                 8                 0                 3 \n##  CGACCACTGTTCAG.1  CGACCACTTTCCCG.1  CGACCGGACGTCTC.1  CGACCGGAGAATCC.1 \n##                 1                 2                 0                 4 \n##  CGACCGGAGCAGTT.1  CGACCGGATATTCC.1  CGACCGGATCGCTC.1  CGACCGGATCTACT.1 \n##                 4                 0                 0                 0 \n##  CGACCTACCCCTAC.1  CGACCTACCTATGG.1  CGACCTACGCAGAG.1  CGACCTACGCGATT.1 \n##                 1                 6                 0                 4 \n##  CGACCTACGGTCAT.1  CGACCTACTCACGA.1  CGACCTTGACCGAT.1  CGACCTTGCAGTTG.1 \n##                 1                 0                 0                 6 \n##  CGACCTTGCCAGTA.1  CGACCTTGGTAAAG.1  CGACCTTGTACTGG.1  CGACCTTGTCCAAG.1 \n##                 0                 1                 0                 0 \n##  CGACGTCTCAGCTA.1  CGACGTCTGTGCAT.1  CGACTCACAACGGG.1  CGACTCACACCAGT.1 \n##                 3                 0                 0                 4 \n##  CGACTCACACGTTG.1  CGACTCACCTGGAT.1  CGACTCACGAAACA.1  CGACTCACGTAAAG.1 \n##                 0                 1                 0                 1 \n##  CGACTCACTGGTGT.1  CGACTCTGACGTTG.1  CGACTCTGATGTGC.1  CGACTCTGCAGGAG.1 \n##                 5                 0                 4                 9 \n##  CGACTCTGCCAAGT.1  CGACTCTGCTAGAC.1  CGACTCTGGCGTAT.1  CGACTCTGGTTTCT.1 \n##                 0                 8                 0                 0 \n##  CGACTCTGTATCTC.1  CGACTCTGTCACCC.1  CGACTCTGTCGTGA.1  CGACTCTGTCTTCA.1 \n##                 5                 0                 0                 0 \n##  CGACTGCTAGTACC.1  CGACTGCTCGTCTC.1  CGACTGCTGTATGC.1  CGACTGCTGTTGAC.1 \n##                 0                 5                 0                 9 \n##  CGACTGCTTGTCGA.1  CGAGATTGGAATCC.1  CGAGATTGTATCTC.1  CGAGCCGACCCAAA.1 \n##                 0                 1                 3                10 \n##  CGAGCCGACCTCCA.1  CGAGCCGAGAAAGT.1  CGAGCGTGGCATAC.1  CGAGCGTGGGTGGA.1 \n##                 0                 3                 0                 0 \n##  CGAGCGTGTGCTGA.1  CGAGGAGAATCACG.1  CGAGGAGACCAATG.1  CGAGGAGACTCAGA.1 \n##                 6                 9                 3                 1 \n##  CGAGGAGAGGAAGC.1  CGAGGAGAGGAGGT.1  CGAGGAGATTACCT.1  CGAGGAGATTCTGT.1 \n##                 1                 0                 7                 0 \n##  CGAGGCACAAGAAC.1  CGAGGCACAGTCGT.1  CGAGGCACGAAACA.1  CGAGGCACGTCCTC.1 \n##                 1                 4                 9                 0 \n##  CGAGGCACTTTGTC.1  CGAGGCTGACACAC.1  CGAGGCTGATTTCC.1  CGAGGCTGCTTCCG.1 \n##                 2                 0                12                 2 \n##  CGAGGCTGGAAAGT.1  CGAGGCTGGATAGA.1  CGAGGCTGGGACAG.1  CGAGTATGACCTCC.1 \n##                 3                 1                 5                 6 \n##  CGAGTATGATCGAC.1  CGAGTATGATTTCC.1  CGAGTATGCTATTC.1  CGAGTATGGCTCCT.1 \n##                 1                 7                 0                 2 \n##  CGAGTATGTCCGTC.1  CGATACGAAGAGAT.1  CGATACGATCCGAA.1  CGATAGACACCTGA.1 \n##                 2                 1                 3                 4 \n##  CGATAGACCAAAGA.1  CGATAGACGAGGAC.1  CGATAGACGGTGGA.1  CGATCAGATGGAAA.1 \n##                 6                 0                 0                 1 \n##  CGATCAGATTCGGA.1  CGATCCACACAGCT.1  CGATCCACCACTGA.1  CGATCCACTCTCGC.1 \n##                 0                 0                 2                 0 \n##  CGATCCACTTGTGG.1  CGCAAATGAACCTG.1  CGCAAATGACGGTT.1  CGCAAATGCCCTAC.1 \n##                 2                 6                 1                 0 \n##  CGCAAATGTGATGC.1  CGCAACCTCCACCT.1  CGCAACCTCCTATT.1  CGCAACCTCTGGAT.1 \n##                 0                 4                 1                 2 \n##  CGCAACCTTGCCTC.1  CGCAACCTTGTCGA.1  CGCACGGACACAAC.1  CGCACGGACTATGG.1 \n##                 2                 4                 8                 0 \n##  CGCACGGAGCTGTA.1  CGCACTACCTAGCA.1  CGCACTACTACGCA.1  CGCACTACTCGCAA.1 \n##                 0                 0                 2                 9 \n##  CGCACTACTCTAGG.1  CGCACTTGAAGCAA.1  CGCACTTGTCCTGC.1  CGCAGGACAGTTCG.1 \n##                 0                 1                 1                 0 \n##  CGCAGGACCATGGT.1  CGCAGGACGCATAC.1  CGCAGGTGACGCAT.1  CGCAGGTGCACACA.1 \n##                 0                 0                12                 4 \n##  CGCATAGAAGTCGT.1  CGCATAGAGATGAA.1  CGCATAGAGCGTTA.1  CGCATAGATCCGTC.1 \n##                 1                 0                 4                 0 \n##  CGCATAGATGCACA.1  CGCCATACATTCTC.1  CGCCATACCCATAG.1  CGCCATACCGAGTT.1 \n##                 0                 3                 5                 5 \n##  CGCCATACGCGTTA.1  CGCCATACGCTTAG.1  CGCCATTGATAAGG.1  CGCCATTGCACCAA.1 \n##                 3                 4                 2                 2 \n##  CGCCATTGGAAAGT.1  CGCCATTGTCCCGT.1  CGCCATTGTTAGGC.1  CGCCGAGAGGGAGT.1 \n##                 1                 7                 2                 5 \n##  CGCCTAACAACGAA.1  CGCCTAACACCAGT.1  CGCCTAACAGAACA.1  CGCCTAACCGCAAT.1 \n##                 3                 7                 3                 0 \n##  CGCCTAACGTCTAG.1  CGCCTAACTTCATC.1  CGCGAGACCCTTTA.1  CGCGAGACCGATAC.1 \n##                 1                 4                 0                 0 \n##  CGCGAGACCTCAGA.1  CGCGAGACTATCTC.1  CGCGAGACTCCGTC.1  CGCGAGACTCGTTT.1 \n##                 4                 3                 1                 1 \n##  CGCGATCTAGCGGA.1  CGCGATCTATCACG.1  CGCGATCTATCAGC.1  CGCGGATGCTCATT.1 \n##                10                 1                 7                 6 \n##  CGCGGATGCTGAAC.1  CGCGGATGTGCTAG.1  CGCTAAGAAGAAGT.1  CGCTAAGAAGCCAT.1 \n##                 1                 6                 2                 2 \n##  CGCTAAGAAGGCGA.1  CGCTAAGACATTTC.1  CGCTAAGACCTCGT.1  CGCTAAGAGCAGAG.1 \n##                 0                 0                 1                 0 \n##  CGCTAAGATGAGGG.1  CGCTACACAGATCC.1  CGCTACACCTGAGT.1  CGCTACACGAGAGC.1 \n##                 2                 3                 0                 0 \n##  CGCTACTGCTGTGA.1  CGCTACTGGCTAAC.1  CGCTACTGTTATCC.1  CGCTCATGCGACAT.1 \n##                 6                12                 2                 1 \n##  CGCTCATGCTACTT.1  CGCTCATGCTTGAG.1  CGCTCATGCTTGTT.1  CGCTCATGGATGAA.1 \n##                 2                 2                 6                 2 \n##  CGCTCATGGGACTT.1  CGCTCATGGGCGAA.1  CGCTCATGTCAGTG.1  CGCTCATGTCTCGC.1 \n##                 0                10                 0                 7 \n##  CGCTCATGTGTCGA.1  CGGACCGAAGTGCT.1  CGGACCGACCTTCG.1  CGGACTCTAAGAAC.1 \n##                 0                 1                 4                 0 \n##  CGGACTCTCTTAGG.1  CGGACTCTGGAAGC.1  CGGACTCTGTCTAG.1  CGGACTCTGTCTTT.1 \n##                 1                 0                 0                 9 \n##  CGGACTCTTCGCAA.1  CGGACTCTTGCATG.1  CGGAGGCTTGATGC.1  CGGAGGCTTGTCAG.1 \n##                 8                 0                 9                 0 \n##  CGGATAACATCTCT.1  CGGATAACCCACAA.1  CGGATAACTTATCC.1  CGGATATGAAGGTA.1 \n##                 0                 0                 0                 4 \n##  CGGATATGATTCGG.1  CGGATATGCACTGA.1  CGGATATGCATGAC.1  CGGATATGCCCAAA.1 \n##                 6                 0                 1                 1 \n##  CGGATATGTTCGGA.1  CGGCACGAAAGGTA.1  CGGCACGAAGACTC.1  CGGCACGACAGTTG.1 \n##                 5                 2                 0                 5 \n##  CGGCACGACCTTGC.1  CGGCACGACTATGG.1  CGGCACGACTTCGC.1  CGGCACGATACTCT.1 \n##                 1                 6                 0                 1 \n##  CGGCACGATAGAGA.1  CGGCACGATCGCCT.1  CGGCACGATGTCTT.1  CGGCACGATTCGGA.1 \n##                 5                 0                 0                 4 \n##  CGGCATCTACCGAT.1  CGGCATCTATCGTG.1  CGGCATCTCGTAGT.1  CGGCATCTCTGTAG.1 \n##                 0                 0                 6                 2 \n##  CGGCATCTGGTACT.1  CGGCATCTGTTGGT.1  CGGCATCTTAAAGG.1  CGGCCAGACAGCTA.1 \n##                 7                 9                 0                 0 \n##  CGGCCAGACCCACT.1  CGGCCAGACTACCC.1  CGGCCAGAGTCTGA.1  CGGCCAGATTATCC.1 \n##                 3                 0                 4                 2 \n##  CGGCGAACAGTACC.1  CGGCGAACATGTCG.1  CGGCGAACCATTCT.1  CGGCGAACCCTCCA.1 \n##                 6                 0                 0                 7 \n##  CGGCGAACCGGGAA.1  CGGCGAACCTGATG.1  CGGCGAACTCCCAC.1  CGGCGAACTGCAAC.1 \n##                 0                10                 5                 2 \n##  CGGCGAACTTCGGA.1  CGGCGATGAGCGGA.1  CGGCGATGCCTGTC.1  CGGCGATGCTCAAG.1 \n##                 0                 3                 0                 1 \n##  CGGCGATGTGGTTG.1  CGGGACTGGCAAGG.1  CGGGACTGTTCGCC.1  CGGGCATGATTGGC.1 \n##                 7                 3                 1                10 \n##  CGGGCATGCAGAAA.1  CGGGCATGTCTTTG.1  CGGGCATGTGAGAA.1  CGGTAAACCGTTAG.1 \n##                 3                 0                 5                 0 \n##  CGGTAAACCTGAGT.1  CGGTAAACCTTGAG.1  CGGTAAACGTTCTT.1  CGGTAAACTGGTTG.1 \n##                 0                 2                 0                 8 \n##  CGGTAAACTTACCT.1  CGGTACCTTGCAAC.1  CGGTCACTACTGTG.1  CGGTCACTCAGATC.1 \n##                 0                 0                 8                 0 \n##  CGGTCACTCTGCTC.1  CGTAACGAACGGGA.1  CGTAACGACTAGTG.1  CGTAACGAGGTCAT.1 \n##                 2                 1                 0                10 \n##  CGTAACGATCAGAC.1  CGTAACGATTCTGT.1  CGTACAGAAGTAGA.1  CGTACAGAAGTTCG.1 \n##                 2                 4                 1                 0 \n##  CGTACAGAGTAAAG.1  CGTACAGAGTATGC.1  CGTACAGATCGCAA.1  CGTACCACCTTATC.1 \n##                 2                 0                 0                 1 \n##  CGTACCACTCGACA.1  CGTACCTGAACCGT.1  CGTACCTGAACGTC.1  CGTACCTGACGCAT.1 \n##                 2                 0                 0                 9 \n##  CGTACCTGATTCTC.1  CGTACCTGGCGTTA.1  CGTACCTGTAGAGA.1  CGTACCTGTCCGTC.1 \n##                 3                 3                 2                 6 \n##  CGTACCTGTGAGGG.1  CGTAGCCTGCTCCT.1  CGTAGCCTGGTATC.1  CGTAGCCTTAAGCC.1 \n##                 1                 0                 2                 0 \n##  CGTAGCCTTATGCG.1  CGTCAAGAAAGAGT.1  CGTCAAGAACGCAT.1  CGTCAAGACAGCTA.1 \n##                 4                 2                 0                 1 \n##  CGTCAAGACGTACA.1  CGTCAAGATGCACA.1  CGTCCAACAAGGTA.1  CGTCCAACGTGCTA.1 \n##                 0                 0                 2                 2 \n##  CGTCCATGTCCCGT.1  CGTCCATGTTTGTC.1  CGTCGACTACTCTT.1  CGTCGACTCCTATT.1 \n##                 2                 3                 6                 0 \n##  CGTCGACTCGACAT.1  CGTCGACTGCTGAT.1  CGTCGACTTCAGGT.1  CGTCGACTTCGCAA.1 \n##                 1                 1                 0                 7 \n##  CGTCGACTTTCATC.1  CGTGAAACATTGGC.1  CGTGAAACTGGTTG.1  CGTGAATGCACACA.1 \n##                 2                 1                 0                 4 \n##  CGTGAATGCGAACT.1  CGTGAATGCTACTT.1  CGTGAATGCTTGAG.1  CGTGAATGGGATTC.1 \n##                 4                 8                 4                 1 \n##  CGTGAATGGGCGAA.1  CGTGAATGGGTAAA.1  CGTGAATGTCAGGT.1  CGTGATGAACGGTT.1 \n##                 4                 0                 7                 2 \n##  CGTGATGACACTTT.1  CGTGATGAGCGTAT.1  CGTGATGATCTAGG.1  CGTGCACTTCTCTA.1 \n##                 2                 6                 2                 0 \n##  CGTGTAGACGCATA.1  CGTGTAGACTCAGA.1  CGTGTAGACTGTTT.1  CGTGTAGAGCAAGG.1 \n##                 3                 0                 2                 0 \n##  CGTGTAGAGTCACA.1  CGTGTAGAGTTGCA.1  CGTGTAGATCCTTA.1  CGTGTAGATTCGCC.1 \n##                 1                 5                 0                 4 \n##  CGTGTAGATTTACC.1  CGTTAACTACACTG.1  CGTTAACTACGCTA.1  CGTTAACTGGTCTA.1 \n##                 0                 0                 1                 1 \n##  CGTTAACTTCCGTC.1  CGTTAACTTTAGGC.1  CGTTAGGAATTCTC.1  CGTTAGGACAAAGA.1 \n##                 2                 2                 6                 5 \n##  CGTTAGGACTCGCT.1  CGTTAGGACTTAGG.1  CGTTAGGAGTTCTT.1  CGTTATACACGACT.1 \n##                 1                 1                 0                 0 \n##  CGTTATACACGTAC.1  CGTTATACAGGAGC.1  CGTTATACAGTGTC.1  CGTTATACTGGTGT.1 \n##                 3                 2                 0                 2 \n##  CGTTTAACACAGCT.1  CGTTTAACAGGGTG.1  CGTTTAACCGTACA.1  CGTTTAACGACGAG.1 \n##                 0                 4                 1                 0 \n##  CGTTTAACGACGTT.1  CGTTTAACGCTTCC.1  CGTTTAACTCCAGA.1  CGTTTAACTGACTG.1 \n##                 0                 0                 0                 0 \n##  CGTTTAACTTTACC.1  CTAAACCTGGAACG.1  CTAAACCTGTCAAC.1  CTAACACTGATAGA.1 \n##                 7                 0                 5                 0 \n##  CTAACACTGGTTAC.1  CTAACACTGTGTTG.1  CTAACACTTCGACA.1  CTAACGGAACCAAC.1 \n##                 0                 3                 4                 0 \n##  CTAACGGACTGCTC.1  CTAACGGAGGGATG.1  CTAACGGAGTATGC.1  CTAACGGATGCTGA.1 \n##                 0                 1                 0                 3 \n##  CTAACGGATGCTTT.1  CTAACTACACCAGT.1  CTAACTACCGATAC.1  CTAAGGACACCATG.1 \n##                 0                 4                 6                 4 \n##  CTAAGGACATGGTC.1  CTAAGGACTAAGGA.1  CTAAGGACTCTTAC.1  CTAAGGTGTAGAAG.1 \n##                 0                 1                 2                 5 \n##  CTAAGGTGTCGCTC.1  CTAAGGTGTTATCC.1  CTAATAGAGAATAG.1  CTAATAGAGCCATA.1 \n##                 7                 4                 0                 4 \n##  CTAATAGAGTGTCA.1  CTAATAGAGTTACG.1  CTAATAGATAGACC.1  CTAATAGATCCTTA.1 \n##                 2                 2                 0                 0 \n##  CTAATGCTAAGAAC.1  CTAATGCTACGCTA.1  CTAATGCTATGTCG.1  CTAATGCTGCGTTA.1 \n##                 4                 2                 7                 0 \n##  CTAATGCTTCTAGG.1  CTACAACTCTCTCG.1  CTACAACTGGTTCA.1  CTACAACTGTTCTT.1 \n##                 0                 0                 0                 2 \n##  CTACAACTTCCAGA.1  CTACAACTTGAGCT.1  CTACCTCTGCGAAG.1  CTACGCACAGCTAC.1 \n##                 2                 3                 4                 7 \n##  CTACGCACCGAATC.1  CTACGCACCTGGAT.1  CTACGCACGGAAAT.1  CTACGGCTCGTACA.1 \n##                 1                 1                 6                 0 \n##  CTACGGCTGACGTT.1  CTACGGCTTCCTCG.1  CTACGGCTTGCACA.1  CTACGGCTTTGGTG.1 \n##                 3                 0                 2                 7 \n##  CTACTATGAGGTCT.1  CTACTATGATCGTG.1  CTACTATGCTCATT.1  CTACTATGGTATCG.1 \n##                 4                 1                 0                 5 \n##  CTACTCCTCGGAGA.1  CTACTCCTGTTAGC.1  CTACTCCTTTTACC.1  CTAGAGACCGCATA.1 \n##                 2                 2                 6                 0 \n##  CTAGAGACTTAGGC.1  CTAGAGACTTTGGG.1  CTAGATCTAAAAGC.1  CTAGATCTAGAGAT.1 \n##                 6                 1                 0                10 \n##  CTAGATCTAGTCAC.1  CTAGATCTGGGAGT.1  CTAGATCTTCCAAG.1  CTAGGATGAAACGA.1 \n##                 0                 8                 1                 1 \n##  CTAGGATGCACCAA.1  CTAGGATGCATGGT.1  CTAGGATGCTGAGT.1  CTAGGATGCTGTAG.1 \n##                 1                 0                 0                 0 \n##  CTAGGATGGAGGCA.1  CTAGGATGTAGAGA.1  CTAGGATGTCAGAC.1  CTAGGATGTGCCAA.1 \n##                 1                 9                 2                 5 \n##  CTAGGATGTGTCCC.1  CTAGGATGTGTCTT.1  CTAGGCCTACGCTA.1  CTAGGCCTGGAGCA.1 \n##                 0                 0                 4                 0 \n##  CTAGGCCTTGTCCC.1  CTAGGTGACACAAC.1  CTAGGTGACCACAA.1  CTAGGTGACGTTAG.1 \n##                 0                 4                 0                 7 \n##  CTAGGTGAGGACTT.1  CTAGGTGAGGTAGG.1  CTAGGTGATTATCC.1  CTAGTTACCGTGTA.1 \n##                 5                 0                 8                 0 \n##  CTAGTTTGCCATAG.1  CTAGTTTGGATAAG.1  CTAGTTTGGCGTTA.1  CTATAAGACCAGTA.1 \n##                 3                 5                 2                11 \n##  CTATAAGACCCGTT.1  CTATAAGATGGATC.1  CTATACTGAGCTAC.1  CTATACTGAGTGTC.1 \n##                 2                 0                 7                 9 \n##  CTATACTGCGGAGA.1  CTATACTGCTCTAT.1  CTATACTGGGCATT.1  CTATACTGGTGAGG.1 \n##                 4                 7                 4                 6 \n##  CTATACTGTCCCGT.1  CTATACTGTGTCGA.1  CTATACTGTTATCC.1  CTATACTGTTTGTC.1 \n##                 3                 1                 0                 0 \n##  CTATAGCTACCATG.1  CTATCAACATCTCT.1  CTATCAACGACTAC.1  CTATCAACGAGACG.1 \n##                 0                 0                 2                 0 \n##  CTATCAACGGTTCA.1  CTATCAACTCTCAT.1  CTATCAACTGCATG.1  CTATCATGTCTCGC.1 \n##                 4                 0                 1                 3 \n##  CTATCCCTCGATAC.1  CTATGACTCGAATC.1  CTATGACTGCTACA.1  CTATGACTTGTCGA.1 \n##                 0                 9                 7                 9 \n##  CTATGACTTTAGGC.1  CTATGACTTTTGTC.1  CTATGTACGCATCA.1  CTATGTACGCTGAT.1 \n##                 3                 6                 0                 2 \n##  CTATGTACTCGCCT.1  CTATGTTGACCTCC.1  CTATGTTGTGGTCA.1  CTATGTTGTGTTCT.1 \n##                 9                 0                 3                 0 \n##  CTATTGACAACAGA.1  CTATTGACGTCAAC.1  CTATTGACTCTAGG.1  CTATTGTGAACGAA.1 \n##                 4                 4                 1                 0 \n##  CTATTGTGTACTGG.1  CTATTGTGTAGAGA.1  CTATTGTGTCCTAT.1  CTATTGTGTGTCTT.1 \n##                 2                12                 2                 0 \n##  CTCAATTGCCAATG.1  CTCAATTGCGTTAG.1  CTCAATTGGACACT.1  CTCAATTGGCGATT.1 \n##                 3                 0                 2                 1 \n##  CTCAATTGGCTTCC.1  CTCAATTGTTGGCA.1  CTCAGAGAAAGGCG.1  CTCAGAGAGCAAGG.1 \n##                 2                 0                 3                 1 \n##  CTCAGAGAGGTAGG.1  CTCAGAGATCTGGA.1  CTCAGCACAAAGCA.1  CTCAGCACCCAATG.1 \n##                 4                 0                 1                 1 \n##  CTCAGCACCGATAC.1  CTCAGCACCTGCTC.1  CTCAGCACGGTAAA.1  CTCAGCACTGGTGT.1 \n##                 2                 0                 4                 8 \n##  CTCAGCTGCATCAG.1  CTCAGCTGCTACTT.1  CTCAGCTGCTGATG.1  CTCAGCTGGTTTGG.1 \n##                 0                 4                 0                 7 \n##  CTCAGCTGTGGATC.1  CTCAGGCTAAAGTG.1  CTCAGGCTAAGCCT.1  CTCAGGCTAGAGAT.1 \n##                 4                 2                 0                12 \n##  CTCAGGCTATCTTC.1  CTCAGGCTCCAGTA.1  CTCAGGCTCGTGTA.1  CTCAGGCTCTCGAA.1 \n##                 5                 1                 0                 0 \n##  CTCAGGCTGGACAG.1  CTCATTGAATGACC.1  CTCATTGAGGTCAT.1  CTCATTGATGGTAC.1 \n##                 1                 0                 8                 6 \n##  CTCCACGAAACGTC.1  CTCCACGAAAGGGC.1  CTCCACGAACGGGA.1  CTCCACGACTCGCT.1 \n##                 0                 5                 1                 0 \n##  CTCCACGACTCTTA.1  CTCCACGAGGAGTG.1  CTCCACGATAGACC.1  CTCCACGATTGAGC.1 \n##                 0                 0                 4                 6 \n##  CTCCATCTAAAGTG.1  CTCCATCTAAGAAC.1  CTCCATCTATGCTG.1  CTCCATCTGAATGA.1 \n##                 0                 1                 1                 2 \n##  CTCCATCTGTATGC.1  CTCCATCTTAGCCA.1  CTCCGAACCCTATT.1  CTCCGAACGGATCT.1 \n##                 0                 5                 9                 6 \n##  CTCCTACTAGTAGA.1  CTCCTACTGCGATT.1  CTCCTACTGTCATG.1  CTCCTACTGTGCTA.1 \n##                 0                 0                 0                 1 \n##  CTCCTACTTGTCCC.1  CTCGAAGAGAGGAC.1  CTCGAAGAGCGAAG.1  CTCGAAGAGTGTCA.1 \n##                 4                 0                 3                 0 \n##  CTCGACACAATGCC.1  CTCGACACGGTTAC.1  CTCGACACGTTCAG.1  CTCGACTGAGATGA.1 \n##                 4                 2                 3                 0 \n##  CTCGACTGCATTTC.1  CTCGACTGCGACAT.1  CTCGACTGGACACT.1  CTCGACTGGCTAAC.1 \n##                 0                 2                10                 9 \n##  CTCGACTGGTACCA.1  CTCGAGCTATGACC.1  CTCGAGCTATGGTC.1  CTCGAGCTCAGATC.1 \n##                 0                 1                 4                 0 \n##  CTCGAGCTCATTCT.1  CTCGCATGAGAGAT.1  CTCGCATGCTTATC.1  CTCGCATGTCGCAA.1 \n##                 3                 0                 0                 4 \n##  CTCTAAACCCCTTG.1  CTCTAAACCTACGA.1  CTCTAAACCTCTAT.1  CTCTAAACGGACAG.1 \n##                 0                 0                 5                 0 \n##  CTCTAAACTTTGGG.1  CTCTAATGCTTGTT.1  CTCTAATGGAACCT.1  CTCTAATGGTAAGA.1 \n##                 1                 2                 6                 7 \n##  CTCTAATGGTTCTT.1  CTCTAATGTCCTAT.1  CTCTAATGTCGTTT.1  CTCTAATGTGCACA.1 \n##                 0                 4                 1                 1 \n##  CTCTAATGTGTCAG.1  CTGAACGAGATAGA.1  CTGAACGAGTAAAG.1  CTGAAGACAGTACC.1 \n##                 9                 8                 6                 3 \n##  CTGAAGACAGTCAC.1  CTGAAGACCACTCC.1  CTGAAGTGACCGAT.1  CTGAAGTGATCTCT.1 \n##                 0                 0                 1                 0 \n##  CTGAAGTGCTCTTA.1  CTGAAGTGGATGAA.1  CTGAAGTGTTTACC.1  CTGAATCTTAGCCA.1 \n##                 6                 0                 4                 0 \n##  CTGAATCTTTTACC.1  CTGACAGAAAACAG.1  CTGACAGACCTTGC.1  CTGACAGACGCCTT.1 \n##                 0                 3                 0                 5 \n##  CTGACAGACGTACA.1  CTGACAGAGAATGA.1  CTGACAGAGAGGGT.1  CTGACAGAGTCTAG.1 \n##                 0                 2                 3                 4 \n##  CTGACAGATGCCCT.1  CTGACCACGGAGGT.1  CTGACCACTGTCTT.1  CTGAGAACGTCAAC.1 \n##                 2                 0                 1                 6 \n##  CTGAGAACTAAAGG.1  CTGAGAACTGAGCT.1  CTGAGAACTGCCAA.1  CTGAGAACTTGCAG.1 \n##                 3                 9                 4                 8 \n##  CTGAGCCTAACCGT.1  CTGAGCCTCCCTCA.1  CTGAGCCTCTTATC.1  CTGAGCCTTGAACC.1 \n##                 1                 0                 0                 9 \n##  CTGAGCCTTTGTGG.1  CTGATACTAATCGC.1  CTGATACTACGTAC.1  CTGATACTCTAGTG.1 \n##                 0                 0                 0                 1 \n##  CTGATACTGGACGA.1  CTGATACTTCTACT.1  CTGATGGACTATTC.1  CTGATGGAGGTATC.1 \n##                 0                 3                 2                 4 \n##  CTGATGGATCCTCG.1  CTGATGGATGGTGT.1  CTGATGGATTTGGG.1  CTGATTTGAACCAC.1 \n##                 6                 1                 7                 4 \n##  CTGATTTGACTAGC.1  CTGCAGCTCCTTCG.1  CTGCAGCTCGTTAG.1  CTGCAGCTCTTACT.1 \n##                 7                 5                 0                 4 \n##  CTGCAGCTGAAACA.1  CTGCAGCTTACAGC.1  CTGCAGCTTCGACA.1  CTGCAGCTTTCTAC.1 \n##                 2                 0                 2                 4 \n##  CTGCCAACGACACT.1  CTGCCAACGTACCA.1  CTGCGACTAGTCAC.1  CTGCGACTATCGTG.1 \n##                 0                 0                 4                 2 \n##  CTGGAAACATACCG.1  CTGGAAACGCTAAC.1  CTGGAAACGGTACT.1  CTGGAAACGTTCGA.1 \n##                 0                 0                 4                 2 \n##  CTGGATGAAACGAA.1  CTGGATGAACAGCT.1  CTGGATGAAGTCTG.1  CTGGATGACGAGAG.1 \n##                 3                12                 8                 1 \n##  CTGGATGAGCAGAG.1  CTGGATGATAGTCG.1  CTGGATGATTTCTG.1  CTGGCACTTATCGG.1 \n##                 4                 0                 5                 0 \n##  CTGTAACTAAAGTG.1  CTGTAACTACACGT.1  CTGTAACTAGACTC.1  CTGTAACTCTTGAG.1 \n##                 5                 2                 1                 1 \n##  CTGTAACTGGATTC.1  CTGTAACTGTTAGC.1  CTGTATACAAGTAG.1  CTGTATACATGCTG.1 \n##                 0                 1                 3                 2 \n##  CTGTATACTGTCAG.1  CTGTGAGATGGGAG.1  CTTAAAGAATACCG.1  CTTAACACCTGACA.1 \n##                 2                 0                 5                 0 \n##  CTTAACACGGAGTG.1  CTTAACACTCTCTA.1  CTTAACACTTACTC.1  CTTAAGCTAGCCTA.1 \n##                 4                 1                 6                 0 \n##  CTTAAGCTATGCCA.1  CTTAAGCTGCTGTA.1  CTTAAGCTTAACGC.1  CTTAAGCTTACTCT.1 \n##                 0                 0                 7                 2 \n##  CTTAAGCTTTCCCG.1  CTTACAACAGCAAA.1  CTTACAACCCAGTA.1  CTTACAACCCTTTA.1 \n##                 0                 0                 0                 0 \n##  CTTACAACGCGTTA.1  CTTACATGAGTGTC.1  CTTACATGCAGGAG.1  CTTACATGGTACAC.1 \n##                 4                 2                 1                 2 \n##  CTTACATGGTCATG.1  CTTACATGGTGTCA.1  CTTACATGTCGATG.1  CTTACTGACCGTTC.1 \n##                 0                 1                 7                 1 \n##  CTTACTGACGAGTT.1  CTTACTGATGCAAC.1  CTTACTGATGCTTT.1  CTTAGACTAGAGAT.1 \n##                 8                 7                 1                 6 \n##  CTTAGACTCGTAGT.1  CTTAGACTCTTGAG.1  CTTAGACTGGGCAA.1  CTTAGACTGGTTCA.1 \n##                 1                 1                 2                 4 \n##  CTTAGACTGTCATG.1  CTTAGACTGTGCAT.1  CTTAGGGAAATGCC.1  CTTAGGGAACTGTG.1 \n##                 2                 9                 0                 6 \n##  CTTAGGGACAGCTA.1  CTTAGGGACGTGAT.1  CTTAGGGACTAGTG.1  CTTAGGGATTCACT.1 \n##                 4                 1                 7                 4 \n##  CTTATCGAACACGT.1  CTTATCGAGACGGA.1  CTTATCGATCGCCT.1  CTTATCGATCTCGC.1 \n##                 2                 2                 9                 0 \n##  CTTCACCTACGGGA.1  CTTCACCTCGAGTT.1  CTTCACCTCGTTAG.1  CTTCACCTGGTGTT.1 \n##                 1                12                 6                 5 \n##  CTTCACCTTTTCGT.1  CTTCATGACTCCCA.1  CTTCTAGAACGTTG.1  CTTCTAGAAGTGCT.1 \n##                 3                13                 0                 2 \n##  CTTCTAGAATTTCC.1  CTTCTAGACGCAAT.1  CTTCTAGACTCCAC.1  CTTCTAGAGCCTTC.1 \n##                 0                 0                 0                 8 \n##  CTTCTAGATACGCA.1  CTTCTAGATGTGAC.1  CTTGAACTAAGGCG.1  CTTGAACTCTTATC.1 \n##                 3                 0                 0                 9 \n##  CTTGAACTGAATAG.1  CTTGAACTGCTGAT.1  CTTGAACTGTGCAT.1  CTTGAACTTGACTG.1 \n##                 5                 0                 0                 4 \n##  CTTGAGGATAGCCA.1  CTTGATTGACGGGA.1  CTTGATTGTATTCC.1  CTTGATTGTCCTTA.1 \n##                 0                 6                 5                 7 \n##  CTTGATTGTGGTTG.1  CTTGTATGAGTACC.1  CTTGTATGATCTTC.1  CTTGTATGGGTGAG.1 \n##                 3                 6                 2                 4 \n##  CTTGTATGGTTACG.1  CTTGTATGTTGCAG.1  CTTTACGAAAAGCA.1  CTTTACGACAGAAA.1 \n##                 2                 2                 8                 0 \n##  CTTTACGAGGAAGC.1  CTTTACGAGGATTC.1  CTTTAGACGCCATA.1  CTTTAGTGACCATG.1 \n##                 1                 0                 0                 3 \n##  CTTTAGTGAGGCGA.1  CTTTAGTGTCCCAC.1  CTTTCAGATCCGAA.1  CTTTCAGATTGCAG.1 \n##                 4                 2                 2                 0 \n##  CTTTGATGGGACGA.1  CTTTGATGGTTGCA.1  CTTTGATGTGGAAA.1  CTTTGATGTTCTAC.1 \n##                 4                 4                 2                11 \n##  GAAACAGACTGGTA.1  GAAACAGAGAGGCA.1  GAAACAGATGCTCC.1  GAAACAGATGTCCC.1 \n##                 2                 2                 0                 2 \n##  GAAACCTGCCACAA.1  GAAACCTGCGTCTC.1  GAAACCTGGCCCTT.1  GAAACCTGGGTAGG.1 \n##                 6                 0                 1                 0 \n##  GAAACCTGTCCTAT.1  GAAACCTGTCTATC.1  GAAACCTGTTCTCA.1  GAAAGATGATTCTC.1 \n##                 0                 4                 4                 7 \n##  GAAAGATGCTTGTT.1  GAAAGCCTACCTAG.1  GAAAGCCTTCTTAC.1  GAAAGTGACGATAC.1 \n##                 0                 4                 1                 2 \n##  GAAAGTGAGCAGTT.1  GAAAGTGATGCTGA.1  GAAATACTCCAGTA.1  GAAATACTGGACAG.1 \n##                 2                10                 9                 1 \n##  GAACACACAACAGA.1  GAACACACACCCAA.1  GAACACACACTACG.1  GAACACACATCGTG.1 \n##                 1                 3                 0                 8 \n##  GAACACACCCGCTT.1  GAACACACGGCAAG.1  GAACAGCTAAGGCG.1  GAACAGCTAAGTAG.1 \n##                 0                 1                 2                 7 \n##  GAACAGCTACGGAG.1  GAACAGCTCTAGCA.1  GAACAGCTTGTTTC.1  GAACCAACGGAGGT.1 \n##                 2                 8                 0                 5 \n##  GAACCAACGTGCTA.1  GAACCAACTACGCA.1  GAACCAACTGCTCC.1  GAACCTGAACGGGA.1 \n##                 8                 9                 5                 4 \n##  GAACCTGAATGCTG.1  GAACCTGAATGGTC.1  GAACCTGACCCGTT.1  GAACCTGAGCTCCT.1 \n##                 8                 2                 1                 0 \n##  GAACCTGATATCTC.1  GAACCTGATCGCAA.1  GAACGGGACACTCC.1  GAACGGGATACGCA.1 \n##                 1                 3                 1                 3 \n##  GAACGGGATGAGGG.1  GAACGTTGCCCACT.1  GAACGTTGGCCTTC.1  GAACGTTGGTTTGG.1 \n##                 1                 7                 3                 1 \n##  GAACGTTGTCGTAG.1  GAACGTTGTGCAAC.1  GAACGTTGTGGTTG.1  GAACTGTGACGGTT.1 \n##                 1                 0                 2                 2 \n##  GAACTGTGCAGATC.1  GAACTGTGCGAATC.1  GAACTGTGCTGAGT.1  GAACTGTGTATCTC.1 \n##                 1                 1                 0                 1 \n##  GAACTGTGTGAGCT.1  GAAGAATGCTACCC.1  GAAGATGAACCTGA.1  GAAGATGAGCAGTT.1 \n##                 6                 0                 5                 4 \n##  GAAGATGAGTCTAG.1  GAAGATGATATGGC.1  GAAGCGGAACGCTA.1  GAAGCGGAAGAAGT.1 \n##                 3                 0                 3                 1 \n##  GAAGCGGACATCAG.1  GAAGCGGATGAAGA.1  GAAGCGGATGGAGG.1  GAAGCTACCAGAAA.1 \n##                 0                 0                 0                 5 \n##  GAAGCTACCAGTTG.1  GAAGCTACCCATAG.1  GAAGCTACTAAGGA.1  GAAGCTACTGGATC.1 \n##                 0                 0                 4                 9 \n##  GAAGCTTGACCTTT.1  GAAGCTTGACGGTT.1  GAAGCTTGATGTGC.1  GAAGCTTGCCACAA.1 \n##                 0                 1                 9                 2 \n##  GAAGCTTGCCCTTG.1  GAAGCTTGCTCATT.1  GAAGCTTGGGAGTG.1  GAAGCTTGGGGAGT.1 \n##                 0                 0                 7                 7 \n##  GAAGGGTGAGCTCA.1  GAAGGGTGCTGGAT.1  GAAGGGTGGTACGT.1  GAAGGGTGTGTGGT.1 \n##                 2                 7                 0                 0 \n##  GAAGGGTGTTATCC.1  GAAGGTCTCAGGAG.1  GAAGGTCTTAGCCA.1  GAAGTAGACCCTTG.1 \n##                 4                 7                 0                 8 \n##  GAAGTCACACCACA.1  GAAGTCACACCTAG.1  GAAGTCTGAACGAA.1  GAAGTCTGAACGGG.1 \n##                 4                 8                 0                 4 \n##  GAAGTCTGCATGAC.1  GAAGTCTGGTTACG.1  GAAGTCTGTAAGGA.1  GAAGTCTGTCCGAA.1 \n##                 0                 4                 8                 0 \n##  GAAGTCTGTTCGTT.1  GAAGTCTGTTTCAC.1  GAAGTGCTTAGCCA.1  GAAGTGCTTTTCGT.1 \n##                 3                 4                 3                 0 \n##  GAATGCACCTTCCG.1  GAATGCACCTTTAC.1  GAATGCACTATCTC.1  GAATGCACTCTTTG.1 \n##                 0                 2                 7                 5 \n##  GAATGCTGGATAGA.1  GAATGCTGTTGCAG.1  GAATGGCTCTCAAG.1  GAATGGCTCTGGAT.1 \n##                 4                 1                 7                 0 \n##  GAATGGCTGAAGGC.1  GAATGGCTGCTTAG.1  GAATGGCTGTGTAC.1  GAATGGCTTTCAGG.1 \n##                 3                 8                 3                 0 \n##  GAATTAACTCTTAC.1  GACAACACACGTTG.1  GACAACTGCGTACA.1  GACAACTGTACAGC.1 \n##                 6                 5                 5                 1 \n##  GACAACTGTCGTAG.1  GACAACTGTCTTTG.1  GACAACTGTGACAC.1  GACAACTGTTGGTG.1 \n##                 0                 7                 0                11 \n##  GACACTGAAGGAGC.1  GACACTGACACTCC.1  GACACTGACTGCAA.1  GACACTGAGTTGGT.1 \n##                 1                 0                 1                 0 \n##  GACACTGATTTGCT.1  GACAGGGAACTGTG.1  GACAGGGAAGATGA.1  GACAGGGATCGTTT.1 \n##                 8                 8                 4                 0 \n##  GACAGGGATTGGCA.1  GACAGTACCCTGAA.1  GACAGTACGAATCC.1  GACAGTACGTCTTT.1 \n##                 0                 0                 4                 1 \n##  GACAGTACTATTCC.1  GACAGTACTGTCAG.1  GACAGTTGATCGGT.1  GACAGTTGGTTGCA.1 \n##                10                 3                 1                 0 \n##  GACAGTTGTAAGGA.1  GACATTCTGAGGGT.1  GACATTCTGATACC.1  GACATTCTGGGACA.1 \n##                 0                 2                 5                 0 \n##  GACATTCTGTCTTT.1  GACATTCTGTGCAT.1  GACATTCTTCTTAC.1  GACCAAACCTAAGC.1 \n##                 6                 5                 1                13 \n##  GACCAAACCTGACA.1  GACCATGACTTGCC.1  GACCATGAGGGACA.1  GACCCTACACGTAC.1 \n##                 7                 0                 0                 2 \n##  GACCCTACCGAACT.1  GACCCTACGGAGCA.1  GACCCTACTGGAGG.1  GACCTAGAAGTCAC.1 \n##                 6                 1                 6                 2 \n##  GACCTAGAATACCG.1  GACCTAGACGACTA.1  GACCTAGACTGAGT.1  GACCTAGAGAGGTG.1 \n##                 1                 0                 1                 1 \n##  GACCTAGATGGAGG.1  GACCTCACAGATCC.1  GACCTCACGTCGAT.1  GACCTCACTTCCGC.1 \n##                 6                 6                 1                 0 \n##  GACCTCTGCGCAAT.1  GACCTCTGTCCTAT.1  GACCTCTGTGGAAA.1  GACCTCTGTTGAGC.1 \n##                 1                 9                 3                 0 \n##  GACGAACTAACCTG.1  GACGAACTAGTCGT.1  GACGAACTCCGCTT.1  GACGAGGAAGTTCG.1 \n##                 4                 4                 0                 0 \n##  GACGAGGATTCCGC.1  GACGATTGACCACA.1  GACGATTGCTAGAC.1  GACGATTGGCATCA.1 \n##                 0                 0                 7                 0 \n##  GACGATTGTGTGCA.1  GACGCCGAACCTGA.1  GACGCCGAACGTAC.1  GACGCCGACGTAGT.1 \n##                 9                 0                 1                 0 \n##  GACGCCGAGTCATG.1  GACGCCGAGTCCTC.1  GACGCCGATCCTCG.1  GACGCTCTCATTTC.1 \n##                 7                 0                 0                 3 \n##  GACGCTCTCTGCAA.1  GACGCTCTTCTAGG.1  GACGGCACAATCGC.1  GACGGCACCTCCCA.1 \n##                 8                 2                 3                 0 \n##  GACGGCACCTGAGT.1  GACGGCACGGCGAA.1  GACGGCACGGTTTG.1  GACGTAACACCTAG.1 \n##                11                 0                 4                 3 \n##  GACGTAACCGCTAA.1  GACGTAACCGGTAT.1  GACGTAACCTGACA.1  GACGTAACGAACCT.1 \n##                12                 6                 0                 7 \n##  GACGTATGACAGCT.1  GACGTATGAGTAGA.1  GACGTATGATTCTC.1  GACGTATGCCCACT.1 \n##                 0                 2                 1                 0 \n##  GACGTATGCCTGAA.1  GACGTATGGTACAC.1  GACGTATGTGCAAC.1  GACGTATGTTGTGG.1 \n##                 3                 2                 2                 0 \n##  GACGTCCTATTCCT.1  GACGTCCTCAGTTG.1  GACGTCCTGATGAA.1  GACGTCCTTGTCAG.1 \n##                 3                 2                 0                 2 \n##  GACTACGAGTGAGG.1  GACTACGATCCTGC.1  GACTCCTGACAGTC.1  GACTCCTGCGGGAA.1 \n##                 4                 1                 2                 1 \n##  GACTCCTGGAGAGC.1  GACTCCTGGTCCTC.1  GACTCCTGTCTACT.1  GACTGAACCGCATA.1 \n##                 3                 2                 1                 4 \n##  GACTGAACCTCGCT.1  GACTGAACTGGAGG.1  GACTGATGCCGTAA.1  GACTGATGGTAGGG.1 \n##                 1                 1                 5                 2 \n##  GACTGATGGTCACA.1  GACTGATGTACTGG.1  GACTGATGTGAAGA.1  GACTGTGACGGGAA.1 \n##                 2                10                 0                 0 \n##  GACTGTGAGTTACG.1  GACTGTGATAGAAG.1  GACTTTACATAAGG.1  GACTTTACATGCTG.1 \n##                 7                 2                 2                 5 \n##  GACTTTACCATGCA.1  GACTTTACCTCATT.1  GACTTTACGCGAAG.1  GACTTTACGTACGT.1 \n##                 0                 0                 2                 2 \n##  GACTTTACTCAGGT.1  GAGAAATGCCCGTT.1  GAGAAATGCCTTGC.1  GAGAAATGCGAGTT.1 \n##                 4                 1                 4                11 \n##  GAGAAATGCTACGA.1  GAGAAATGTCTGGA.1  GAGAGGTGAAGGCG.1  GAGAGGTGAGCATC.1 \n##                 4                 0                 0                 4 \n##  GAGAGGTGCAGTCA.1  GAGAGGTGCTCCAC.1  GAGAGGTGGAATCC.1  GAGAGGTGGGAGCA.1 \n##                 2                 1                 2                 2 \n##  GAGAGGTGGGAGTG.1  GAGAGGTGTCCTAT.1  GAGATAGAACCTCC.1  GAGATAGAATCGTG.1 \n##                 0                 9                 0                 0 \n##  GAGATAGACTGACA.1  GAGATAGAGTTAGC.1  GAGATAGATCTCAT.1  GAGATAGATTTCTG.1 \n##                 1                 0                 2                 1 \n##  GAGATGCTACGGGA.1  GAGATGCTGGGTGA.1  GAGATGCTGTTACG.1  GAGCAACTATCAGC.1 \n##                 0                 5                 0                 1 \n##  GAGCAACTGAGGGT.1  GAGCAACTGGTCTA.1  GAGCAGGACTTAGG.1  GAGCAGGATGCTAG.1 \n##                 6                 1                 4                 2 \n##  GAGCATACAGCCTA.1  GAGCATACGAGCTT.1  GAGCATACGGGAGT.1  GAGCATACTCGCCT.1 \n##                 3                 2                 3                 0 \n##  GAGCATACTGATGC.1  GAGCGAGAAACCGT.1  GAGCGAGAGGAGTG.1  GAGCGAGATCATTC.1 \n##                 0                 0                 2                 2 \n##  GAGCGCTGATTCGG.1  GAGCGCTGCATACG.1  GAGCGCTGTGTTCT.1  GAGCGGCTGTTACG.1 \n##                 1                 4                 8                 0 \n##  GAGCGGCTTACAGC.1  GAGCTCCTAGCATC.1  GAGCTCCTATACCG.1  GAGCTCCTCACTTT.1 \n##                 1                 0                 6                 0 \n##  GAGCTCCTGCATCA.1  GAGGACGACGAATC.1  GAGGACGACGATAC.1  GAGGACGACGTGAT.1 \n##                 8                 0                 3                 0 \n##  GAGGACGAGGAGCA.1  GAGGACGATAGACC.1  GAGGACGATTTGTC.1  GAGGATCTGACAAA.1 \n##                 2                 2                 1                 0 \n##  GAGGATCTTGGTAC.1  GAGGCAGAACTGTG.1  GAGGCAGAGAATAG.1  GAGGCAGAGAGACG.1 \n##                 0                 4                 0                 1 \n##  GAGGCCACATGTGC.1  GAGGCCACCGAATC.1  GAGGCCACCTAAGC.1  GAGGCCACTCTCCG.1 \n##                 3                 1                 4                 8 \n##  GAGGCCACTTCGTT.1  GAGGGAACAATGCC.1  GAGGGAACATGTCG.1  GAGGGAACCAGAAA.1 \n##                 0                 0                 3                 2 \n##  GAGGGAACCCTATT.1  GAGGGAACTATCTC.1  GAGGGATGAAGGGC.1  GAGGGATGTATTCC.1 \n##                 2                 0                 0                 9 \n##  GAGGGCCTAGCTAC.1  GAGGGCCTTGAGAA.1  GAGGGTGAATGCCA.1  GAGGGTGACCCTTG.1 \n##                 1                 1                 1                 9 \n##  GAGGGTGAGGCAAG.1  GAGGGTGATGCAAC.1  GAGGTACTAGGTCT.1  GAGGTACTGCGAAG.1 \n##                 1                 3                 1                 7 \n##  GAGGTACTGTGTCA.1  GAGGTACTGTTGAC.1  GAGGTGGAACGTAC.1  GAGGTGGAAGAGAT.1 \n##                10                 5                 7                 1 \n##  GAGGTGGAAGTCAC.1  GAGGTGGAGCTAAC.1  GAGGTGGATGCCCT.1  GAGGTGGATGTGGT.1 \n##                 2                 0                 0                 1 \n##  GAGGTTACACCTGA.1  GAGGTTACAGGCGA.1  GAGGTTACCATACG.1  GAGGTTACTGCCTC.1 \n##                 0                 0                 5                 0 \n##  GAGGTTACTTGAGC.1  GAGGTTTGAGTCAC.1  GAGGTTTGGACGTT.1  GAGGTTTGGTCGTA.1 \n##                 7                 2                 0                 1 \n##  GAGTACACATACCG.1  GAGTACACCATTTC.1  GAGTACACCCACCT.1  GAGTACACCTGACA.1 \n##                 2                 9                 0                 4 \n##  GAGTACACTACAGC.1  GAGTACACTGAGGG.1  GAGTACTGACCGAT.1  GAGTACTGTTCCAT.1 \n##                 0                 4                 7                 1 \n##  GAGTCAACGGGAGT.1  GAGTCAACTCGCAA.1  GAGTCAACTCTACT.1  GAGTCAACTGACAC.1 \n##                 0                 0                 1                 6 \n##  GAGTCTGAAAGCCT.1  GAGTCTGAGAGGCA.1  GAGTCTGAGGTAGG.1  GAGTCTGAGTAAAG.1 \n##                 2                 4                 3                 2 \n##  GAGTCTGATACTGG.1  GAGTGACTAGTCTG.1  GAGTGACTCCACCT.1  GAGTGACTGACACT.1 \n##                 3                 0                 4                 3 \n##  GAGTGACTTGAACC.1  GAGTGACTTGTTTC.1  GAGTGGGACTAGTG.1  GAGTGGGACTATTC.1 \n##                 0                 5                 2                 6 \n##  GAGTGGGATCTATC.1  GAGTGGGATGTCAG.1  GAGTGTTGCACTTT.1  GAGTGTTGCCTGTC.1 \n##                11                 3                 0                 0 \n##  GAGTGTTGCGGGAA.1  GAGTGTTGTGTGCA.1  GAGTTGTGAACGAA.1  GAGTTGTGATAAGG.1 \n##                 9                 2                 3                 0 \n##  GAGTTGTGTGCTCC.1  GATAAGGAATTTCC.1  GATAAGGACACAAC.1  GATAAGGACCGCTT.1 \n##                 0                 1                 0                 1 \n##  GATAAGGAGAGATA.1  GATAAGGAGTTGAC.1  GATAAGGATGGTTG.1  GATAAGGATTACCT.1 \n##                 3                 2                 0                 4 \n##  GATAATACAGTGCT.1  GATAATACCAACCA.1  GATAATACCGCCTT.1  GATAATACCTTCGC.1 \n##                 0                 9                 2                 0 \n##  GATAATACGGAGGT.1  GATAATACTTCTAC.1  GATACTCTGAGGAC.1  GATACTCTGCATAC.1 \n##                 4                 0                 4                 0 \n##  GATACTCTTGCATG.1  GATAGAGAAGAAGT.1  GATAGAGACGAGAG.1  GATAGAGACGGAGA.1 \n##                 2                 0                 4                 3 \n##  GATAGCACTGAGGG.1  GATAGCACTTTCGT.1  GATATAACAGGTCT.1  GATATAACCCACAA.1 \n##                 4                 6                 0                 2 \n##  GATATAACTTTGCT.1  GATATATGCCTGAA.1  GATATATGGGGAGT.1  GATATATGGTAAAG.1 \n##                 3                 0                 5                 1 \n##  GATATATGTGCTTT.1  GATATATGTGTTTC.1  GATATTGAAACTGC.1  GATATTGAAATGCC.1 \n##                 0                 5                 0                 0 \n##  GATATTGAACACGT.1  GATATTGAAGTCGT.1  GATATTGACGCTAA.1  GATATTGAGGTGGA.1 \n##                 1                 3                 1                 0 \n##  GATATTGATCGACA.1  GATCATCTAGGGTG.1  GATCATCTCTGGAT.1  GATCCCTGAGCCTA.1 \n##                 3                 4                 1                 3 \n##  GATCCCTGATTGGC.1  GATCCCTGCTCCAC.1  GATCCCTGGCATCA.1  GATCCCTGGCTTAG.1 \n##                 6                 0                 2                 4 \n##  GATCCCTGTCTTCA.1  GATCCGCTAAGGGC.1  GATCCGCTACCCAA.1  GATCGAACAATGCC.1 \n##                 2                 3                 0                 1 \n##  GATCGAACATCAGC.1  GATCGAACATCGGT.1  GATCGAACGGGTGA.1  GATCGATGACCACA.1 \n##                 0                 3                 0                 1 \n##  GATCGATGACCTTT.1  GATCGATGCCATAG.1  GATCGATGTAAGGA.1  GATCGTGAACCTAG.1 \n##                 2                 0                 5                 9 \n##  GATCTACTATCTTC.1  GATCTACTCGGTAT.1  GATCTTACCTACCC.1  GATCTTACCTGAAC.1 \n##                 1                 1                12                 0 \n##  GATCTTACCTGATG.1  GATCTTACGGACAG.1  GATCTTACTATCTC.1  GATCTTTGCACCAA.1 \n##                 0                 2                 6                 4 \n##  GATCTTTGCCTCAC.1  GATCTTTGCTTCTA.1  GATCTTTGGACGAG.1  GATCTTTGGAGGCA.1 \n##                 2                 0                 1                 1 \n##  GATGACACAGCTCA.1  GATGACACTGCTAG.1  GATGCAACACCACA.1  GATGCAACACCAGT.1 \n##                 7                 1                 1                 8 \n##  GATGCAACCATGGT.1  GATGCAACGCCTTC.1  GATGCATGAGGTTC.1  GATGCATGATTCGG.1 \n##                 0                 2                 6                 3 \n##  GATGCATGGTACGT.1  GATGCATGTAACGC.1  GATGCCCTAGAATG.1  GATGCCCTGACACT.1 \n##                 1                10                 0                 4 \n##  GATGCCCTGCGATT.1  GATGCCCTGGTCTA.1  GATGCCCTTGGGAG.1  GATTACCTAATGCC.1 \n##                 1                 5                 0                 0 \n##  GATTACCTCTCCCA.1  GATTACCTGCGTAT.1  GATTACCTGCTACA.1  GATTACCTGGTGTT.1 \n##                 7                 0                10                 4 \n##  GATTACCTTATTCC.1  GATTCGGAATAAGG.1  GATTCGGAATCTCT.1  GATTCGGAATGGTC.1 \n##                 0                 0                 0                 0 \n##  GATTCGGACGCCTT.1  GATTCGGAGAACTC.1  GATTCGGAGAATAG.1  GATTCGGAGGCATT.1 \n##                 2                 0                 3                 0 \n##  GATTCGGAGTATCG.1  GATTCTACAAGAGT.1  GATTCTACCCCACT.1  GATTCTACCGGGAA.1 \n##                 1                 5                 2                 0 \n##  GATTCTACGCAGAG.1  GATTCTACGGTCTA.1  GATTCTTGAACCAC.1  GATTCTTGTCAGAC.1 \n##                 1                 1                 0                 2 \n##  GATTCTTGTGCAAC.1  GATTCTTGTGGTTG.1  GATTGGACAGACTC.1  GATTGGACATCACG.1 \n##                 4                 0                 0                 6 \n##  GATTGGACCATGCA.1  GATTGGACCGTACA.1  GATTGGACCTCCAC.1  GATTGGACGGAGGT.1 \n##                 8                 0                 1                 7 \n##  GATTGGACTGGTTG.1  GATTGGTGCTGATG.1  GATTGGTGTAACCG.1  GATTGGTGTTCCGC.1 \n##                 0                 0                 7                 2 \n##  GATTTAGAGCTATG.1  GATTTAGAGTACAC.1  GATTTAGAGTACGT.1  GATTTAGAGTGAGG.1 \n##                 0                 9                 1                 2 \n##  GATTTAGATGCGTA.1  GATTTGCTAGTCTG.1  GATTTGCTCTAGCA.1  GATTTGCTGAGACG.1 \n##                 0                 1                 0                 9 \n##  GATTTGCTGCGTTA.1  GCAAACTGAGATCC.1  GCAAACTGCGGGAA.1  GCAAACTGCGTAAC.1 \n##                 0                 7                 6                 0 \n##  GCAACCCTCAGAGG.1  GCAACCCTCCAATG.1  GCAACCCTGAGGGT.1  GCAACCCTGGCAAG.1 \n##                 0                 3                 0                 6 \n##  GCAACCCTTACTGG.1  GCAACCCTTGTCGA.1  GCAACTGAAGAGGC.1  GCAACTGACCGAAT.1 \n##                 0                 5                 0                 2 \n##  GCAACTGACTCGCT.1  GCAACTGATCAGGT.1  GCAACTGATTCAGG.1  GCAAGACTGGTAGG.1 \n##                 0                 1                 0                 5 \n##  GCAAGACTGTTCTT.1  GCAATCGAGGAAGC.1  GCAATCGAGGTAGG.1  GCAATCGATCTCCG.1 \n##                 1                 5                 2                 4 \n##  GCAATTCTAAAGTG.1  GCAATTCTCTCGCT.1  GCAATTCTTGAGAA.1  GCAATTCTTGGAAA.1 \n##                 1                 3                 2                 9 \n##  GCACAAACACAGTC.1  GCACAATGACTACG.1  GCACAATGCTACGA.1  GCACAATGCTTGCC.1 \n##                 0                 4                 3                 0 \n##  GCACAATGGCTAAC.1  GCACAATGTCCCGT.1  GCACACCTCTGAGT.1  GCACACCTCTGTCC.1 \n##                 2                 0                 1                 3 \n##  GCACACCTGGGATG.1  GCACCACTAGGTTC.1  GCACCACTCGTCTC.1  GCACCACTGCGGAA.1 \n##                 0                 3                 2                 4 \n##  GCACCACTTAAGCC.1  GCACCTACAACGGG.1  GCACCTACACTCTT.1  GCACCTACGCTCCT.1 \n##                 4                 0                 2                 4 \n##  GCACCTACGTAGGG.1  GCACGGACACGCAT.1  GCACGGACCCAATG.1  GCACGGACCCGCTT.1 \n##                 1                10                 0                 1 \n##  GCACGGACCCTTAT.1  GCACGGACCGATAC.1  GCACGGACTGTTCT.1  GCACGGTGCTTGCC.1 \n##                 3                 2                 0                 7 \n##  GCACGGTGCTTGTT.1  GCACGGTGTCTACT.1  GCACGGTGTGCCCT.1  GCACGGTGTGTTTC.1 \n##                 8                 4                 6                 0 \n##  GCACGTCTAACCGT.1  GCACGTCTGAGGGT.1  GCACGTCTGGTGGA.1  GCACGTCTGGTGTT.1 \n##                 8                 5                 2                 0 \n##  GCACGTCTTTACTC.1  GCACGTCTTTCACT.1  GCACTAGAAGGTTC.1  GCACTAGACAGAGG.1 \n##                 0                 0                 1                 3 \n##  GCACTAGAGGAGTG.1  GCACTAGATACTTC.1  GCACTGCTGCAGAG.1  GCACTGCTTCTCGC.1 \n##                 1                 2                 1                10 \n##  GCACTGCTTTCCCG.1  GCAGATACCGATAC.1  GCAGATACGACTAC.1  GCAGATACGGCGAA.1 \n##                 0                 3                 1                 3 \n##  GCAGATACTTGACG.1  GCAGATACTTTGTC.1  GCAGCCGAAGAGAT.1  GCAGCGTGTAAGCC.1 \n##                 3                 0                 5                 1 \n##  GCAGCGTGTAGCGT.1  GCAGCGTGTGACAC.1  GCAGCTCTATTCGG.1  GCAGCTCTGTTGTG.1 \n##                 1                 0                 1                 0 \n##  GCAGCTCTTACTTC.1  GCAGGCACGGCATT.1  GCAGGCACTTACCT.1  GCAGGGCTAGATGA.1 \n##                 3                 3                 4                 4 \n##  GCAGGGCTGAACCT.1  GCAGGGCTGGCGAA.1  GCAGGGCTGTACAC.1  GCAGGGCTTCGCCT.1 \n##                 1                 9                 0                 2 \n##  GCAGTCCTAGTTCG.1  GCAGTCCTCGGAGA.1  GCAGTCCTGAGCTT.1  GCAGTCCTTCGTAG.1 \n##                 0                 5                 0                 3 \n##  GCAGTTGAAACCTG.1  GCAGTTGACCGTAA.1  GCAGTTGACGAATC.1  GCAGTTGACGCAAT.1 \n##                 1                 4                 0                 0 \n##  GCAGTTGACTACGA.1  GCAGTTGACTGAGT.1  GCAGTTGAGGTGGA.1  GCAGTTGAGTTGTG.1 \n##                 0                 8                 0                 1 \n##  GCAGTTGATCCGAA.1  GCATCAGAAACCGT.1  GCATCAGACATTCT.1  GCATCAGAGGTTTG.1 \n##                 1                 0                11                 7 \n##  GCATCAGATGCTCC.1  GCATGATGAACTGC.1  GCATGATGGCCCTT.1  GCATGTGACATGAC.1 \n##                 0                 6                 1                 9 \n##  GCATGTGACCGAAT.1  GCATGTGAGCCAAT.1  GCATTGGACTCAAG.1  GCATTGGAGTTGGT.1 \n##                 8                 1                 2                13 \n##  GCATTGGATAACCG.1  GCATTGGATCCGAA.1  GCATTGGATTCATC.1  GCCAAAACGGGCAA.1 \n##                 1                 0                 6                 0 \n##  GCCAAATGATCGTG.1  GCCAAATGCGTACA.1  GCCAAATGGTTGAC.1  GCCAACCTAACGAA.1 \n##                 2                 4                 0                 0 \n##  GCCAACCTCTTCGC.1  GCCAACCTGTTCTT.1  GCCAACCTTCCTTA.1  GCCAACCTTGCTTT.1 \n##                 1                 0                 0                 0 \n##  GCCACGGAACGTTG.1  GCCACGGAAGCGTT.1  GCCACGGACATGGT.1  GCCACGGACGAATC.1 \n##                 4                 1                 0                 0 \n##  GCCACGGACGATAC.1  GCCACGGACTGTCC.1  GCCACGGAGGATCT.1  GCCACTACAGCCAT.1 \n##                 1                 7                 0                 0 \n##  GCCACTACCCATAG.1  GCCACTACGCGAGA.1  GCCACTACTTACCT.1  GCCACTACTTTACC.1 \n##                 4                 6                 1                 4 \n##  GCCATCACAGGAGC.1  GCCATCACTATGGC.1  GCCATGCTCTCCCA.1  GCCCAACTACTGGT.1 \n##                10                 4                 0                 0 \n##  GCCCAACTTGCTTT.1  GCCCAGGAAGTCTG.1  GCCCAGGACTAGTG.1  GCCCAGGAGAAGGC.1 \n##                 5                 9                 8                 2 \n##  GCCCAGGAGGATCT.1  GCCCAGGATGAGCT.1  GCCCATACACTTTC.1  GCCCATACTGATGC.1 \n##                 1                 6                 3                 0 \n##  GCCGACGACCACCT.1  GCCGACGATAACCG.1  GCCGACGATACTCT.1  GCCGACGATGGTCA.1 \n##                 4                 8                 3                 0 \n##  GCCGACGATTCCAT.1  GCCGAGTGACAGTC.1  GCCGAGTGCTGAGT.1  GCCGAGTGGCTCCT.1 \n##                 5                 1                 0                 4 \n##  GCCGAGTGGTTCTT.1  GCCGAGTGGTTTGG.1  GCCGAGTGTGCCCT.1  GCCGGAACAATGCC.1 \n##                 5                 0                 2                 9 \n##  GCCGGAACACCAGT.1  GCCGGAACCTACTT.1  GCCGGAACGTCTTT.1  GCCGGAACTTCGTT.1 \n##                 0                 0                 5                 0 \n##  GCCGTACTAACCTG.1  GCCGTACTCAGTTG.1  GCCGTACTCCACCT.1  GCCGTACTCCGATA.1 \n##                 4                 6                 3                 2 \n##  GCCGTACTTGTGGT.1  GCCTACACATAAGG.1  GCCTACACCCCGTT.1  GCCTACACGAATGA.1 \n##                 3                 1                 0                 0 \n##  GCCTACACTGTCTT.1  GCCTAGCTACCAGT.1  GCCTAGCTCCACCT.1  GCCTAGCTCCATAG.1 \n##                 0                 0                 4                 0 \n##  GCCTAGCTGCATCA.1  GCCTAGCTGTCGTA.1  GCCTAGCTTGCCTC.1  GCCTCAACCCCTCA.1 \n##                 3                 1                 0                 4 \n##  GCCTCAACCCTCCA.1  GCCTCAACGGGATG.1  GCCTCAACTCTAGG.1  GCCTCATGAAGAGT.1 \n##                 0                 2                 0                 0 \n##  GCCTCATGCCTGTC.1  GCCTCATGCGGGAA.1  GCCTCATGGTCCTC.1  GCCTCATGTAAGGA.1 \n##                 7                 0                 9                 2 \n##  GCCTCATGTGCGTA.1  GCCTGACTCCTTCG.1  GCCTGACTCGTGTA.1  GCCTGACTTAAGCC.1 \n##                 1                 0                 3                 1 \n##  GCCTGACTTAGTCG.1  GCGAAGGACTAGTG.1  GCGAAGGACTGAAC.1  GCGAAGGAGAGGGT.1 \n##                 4                 0                 0                 4 \n##  GCGAAGGAGGTAAA.1  GCGAAGGAGGTTAC.1  GCGAAGGATCTCCG.1  GCGACTCTAGAGGC.1 \n##                 0                 1                 1                 8 \n##  GCGACTCTAGTGTC.1  GCGACTCTTCGACA.1  GCGAGAGAAGTCAC.1  GCGAGAGAAGTGCT.1 \n##                 0                 0                 3                 6 \n##  GCGAGAGAGAACTC.1  GCGAGAGATGCTGA.1  GCGAGCACAGTCAC.1  GCGAGCACGGTAGG.1 \n##                 2                 4                 6                 7 \n##  GCGCACGAGGTGAG.1  GCGCACGATTCACT.1  GCGCATCTACACGT.1  GCGCATCTACGGTT.1 \n##                 5                 1                 0                 2 \n##  GCGCATCTCCCTTG.1  GCGCATCTCGTACA.1  GCGCATCTGCTGTA.1  GCGCGAACAACAGA.1 \n##                 0                 0                 1                 9 \n##  GCGCGAACTGTCAG.1  GCGCGAACTTCGGA.1  GCGCGATGCAGAAA.1  GCGCGATGTAAGGA.1 \n##                 4                10                 1                 0 \n##  GCGCGATGTAGAAG.1  GCGGACTGATACCG.1  GCGGACTGCCAACA.1  GCGGACTGGAAGGC.1 \n##                 0                 6                 0                 1 \n##  GCGGACTGGTCACA.1  GCGGAGCTCTCCCA.1  GCGGAGCTGGCATT.1  GCGGAGCTTATGGC.1 \n##                 0                 3                 1                 1 \n##  GCGGAGCTTTACTC.1  GCGGAGCTTTTCTG.1  GCGGCAACCGACTA.1  GCGGGACTGGACAG.1 \n##                 1                 0                 1                 6 \n##  GCGGGACTGTCCTC.1  GCGGGACTTCCTGC.1  GCGTAAACATTTCC.1  GCGTAAACCAAAGA.1 \n##                 2                 0                 1                 5 \n##  GCGTAAACCACAAC.1  GCGTAAACTCTTTG.1  GCGTAATGCACTAG.1  GCGTAATGCGTTGA.1 \n##                 2                 0                 4                 2 \n##  GCGTAATGTATCTC.1  GCGTAATGTGGCAT.1  GCGTACCTCGGGAA.1  GCGTACCTTATCGG.1 \n##                 8                 0                 4                 0 \n##  GCGTACCTTGCAAC.1  GCGTACCTTGCATG.1  GCGTATGACGAACT.1  GCGTATGATCCGAA.1 \n##                 8                 0                 1                 2 \n##  GCGTATGATGAGAA.1  GCGTATGATTGGCA.1  GCTACAGAGTCGAT.1  GCTACAGATTCAGG.1 \n##                 0                 6                 4                 0 \n##  GCTACAGATTCGTT.1  GCTACCTGTCCTCG.1  GCTACGCTTGGTAC.1  GCTAGAACACGACT.1 \n##                 1                 0                 4                 1 \n##  GCTAGAACCAATCG.1  GCTAGAACGAACTC.1  GCTAGAACTCGACA.1  GCTAGAACTCGCAA.1 \n##                 2                 0                 4                 0 \n##  GCTAGATGCGCAAT.1  GCTAGATGCTTCGC.1  GCTAGATGGCCATA.1  GCTAGATGTGAGCT.1 \n##                 9                 2                 0                 1 \n##  GCTAGATGTGGTGT.1  GCTAGATGTGGTTG.1  GCTATACTAAAGTG.1  GCTATACTATCGTG.1 \n##                 1                 2                 0                 5 \n##  GCTATACTCATTCT.1  GCTATACTGCCATA.1  GCTATACTGGAGCA.1  GCTATACTTTGACG.1 \n##                 7                 0                 6                 3 \n##  GCTATACTTTGCGA.1  GCTCAAGAGGACAG.1  GCTCAAGAGTGAGG.1  GCTCAAGAGTGTCA.1 \n##                 8                 4                 9                 4 \n##  GCTCAAGATATCGG.1  GCTCACTGCAAAGA.1  GCTCACTGCCTTAT.1  GCTCACTGGGGAGT.1 \n##                 2                 2                 0                 0 \n##  GCTCAGCTAAACAG.1  GCTCAGCTATTCGG.1  GCTCAGCTGAGGCA.1  GCTCAGCTGGCATT.1 \n##                 9                 0                 0                 3 \n##  GCTCAGCTGTTACG.1  GCTCAGCTTGTCAG.1  GCTCAGCTTTCGTT.1  GCTCAGCTTTCTTG.1 \n##                 0                 0                 2                 7 \n##  GCTCCATGACGTAC.1  GCTCCATGCCTCGT.1  GCTCCATGTCTACT.1  GCTCCATGTTGCGA.1 \n##                 0                 0                 6                 0 \n##  GCTCGACTACACCA.1  GCTGATGAAGTACC.1  GCTGATGAATCTCT.1  GCTGATGACTCAAG.1 \n##                 0                 8                 0                 1 \n##  GCTGATGATAGACC.1  GCTTAACTACCTAG.1  GCTTAACTCCTTGC.1  GCTTAACTGGAAAT.1 \n##                 0                 0                 0                 2 \n##  GCTTAACTTCAGTG.1  GCTTGAGAGTACCA.1  GCTTGAGAGTTAGC.1  GCTTGAGATAGTCG.1 \n##                 9                 2                 8                 0 \n##  GGAACACTACCAGT.1  GGAACACTAGGCGA.1  GGAACACTCCGTAA.1  GGAACACTCTTACT.1 \n##                 0                 3                 0                 0 \n##  GGAACACTGAACCT.1  GGAACACTTCTCAT.1  GGAACTACACCATG.1  GGAACTTGCCCAAA.1 \n##                 0                 1                 0                13 \n##  GGAACTTGCGTGTA.1  GGAACTTGCTCCCA.1  GGAACTTGGGTCAT.1  GGAACTTGTTCATC.1 \n##                 0                 8                 7                 2 \n##  GGAAGGTGGACGGA.1  GGAAGGTGTCGACA.1  GGAAGGTGTGCACA.1  GGAATGCTACCTGA.1 \n##                 6                10                 1                 0 \n##  GGAATGCTCGATAC.1  GGAATGCTCGGTAT.1  GGAATGCTGACAGG.1  GGAATGCTGCAGTT.1 \n##                 0                 2                 0                 0 \n##  GGAATGCTGGCATT.1  GGACAACTCCGCTT.1  GGACAACTTTCTCA.1  GGACAGGACCCAAA.1 \n##                 0                 0                 2                 0 \n##  GGACAGGACTAGTG.1  GGACAGGACTGCAA.1  GGACAGGATCTTTG.1  GGACATTGATGCTG.1 \n##                 0                 3                 1                 6 \n##  GGACATTGTATTCC.1  GGACCCGACCGTTC.1  GGACCCGAGCTTCC.1  GGACCCGAGTCAAC.1 \n##                 4                 0                 2                 1 \n##  GGACCCGATCCTAT.1  GGACCCGATGGAAA.1  GGACCGTGAAAGTG.1  GGACCGTGACTTTC.1 \n##                 0                 2                 2                 7 \n##  GGACCGTGCAAAGA.1  GGACCGTGCATTTC.1  GGACCGTGCCAATG.1  GGACCGTGGACGGA.1 \n##                 0                 7                 2                 4 \n##  GGACCGTGGCCTTC.1  GGACCTCTCACCAA.1  GGACCTCTGTTGTG.1  GGACCTCTTCAGAC.1 \n##                 0                 0                 0                 0 \n##  GGACCTCTTCGTTT.1  GGACCTCTTTGACG.1  GGACGAGAAAGGGC.1  GGACGAGACTTGCC.1 \n##                 0                 4                 0                 2 \n##  GGACGAGAGCATAC.1  GGACGCACAAGATG.1  GGACGCACACGTGT.1  GGACGCACACTACG.1 \n##                 8                 2                 2                 5 \n##  GGACGCACCATGAC.1  GGACGCACTAACCG.1  GGACGCTGAGTACC.1  GGACGCTGGGTATC.1 \n##                 3                 9                 8                 0 \n##  GGACTATGAAGGTA.1  GGACTATGCTCTAT.1  GGACTATGTACAGC.1  GGAGACGAGTCAAC.1 \n##                 6                 2                 0                 9 \n##  GGAGAGACCGCAAT.1  GGAGAGACGTGTTG.1  GGAGAGACGTTGGT.1  GGAGAGACTCGTGA.1 \n##                 3                 0                 6                 8 \n##  GGAGAGACTGATGC.1  GGAGCAGACCATGA.1  GGAGCAGAGGGTGA.1  GGAGCAGAGTAAAG.1 \n##                 4                 3                 9                 7 \n##  GGAGCAGATAGCCA.1  GGAGCAGATGTAGC.1  GGAGCCACAAGGTA.1  GGAGCCACAGAGAT.1 \n##                 3                 6                 2                 7 \n##  GGAGCCACCTATGG.1  GGAGCCACGAACCT.1  GGAGCCACGTCGTA.1  GGAGCCACTTTGCT.1 \n##                 0                 1                 0                 5 \n##  GGAGCGCTACACTG.1  GGAGCGCTCCACCT.1  GGAGCGCTGTCGAT.1  GGAGCGCTTCTCGC.1 \n##                 0                 0                 7                 5 \n##  GGAGGATGGATAGA.1  GGAGGCCTCACTCC.1  GGAGGCCTCATGCA.1  GGAGGCCTCCGATA.1 \n##                 0                 0                 1                 4 \n##  GGAGGCCTGGAGGT.1  GGAGGCCTTGAGCT.1  GGAGGTGACACACA.1  GGAGGTGAGGCGAA.1 \n##                 0                 1                 3                 1 \n##  GGAGGTGATTGACG.1  GGAGTTACTCCCGT.1  GGAGTTACTTTGTC.1  GGAGTTTGAACCTG.1 \n##                 0                 3                 0                 5 \n##  GGAGTTTGAAGATG.1  GGAGTTTGTGTCCC.1  GGATACTGCTTAGG.1  GGATACTGGAGCTT.1 \n##                 0                 1                 5                 0 \n##  GGATACTGGGACAG.1  GGATAGCTCAGTCA.1  GGATAGCTCTTGGA.1  GGATAGCTGTATCG.1 \n##                 0                 0                 0                 4 \n##  GGATAGCTTCCTGC.1  GGATAGCTTGAGGG.1  GGATGTACCCCTCA.1  GGATGTACCTGTAG.1 \n##                 0                 1                 2                 3 \n##  GGATGTACGATAAG.1  GGATGTACGTTTGG.1  GGATGTACTGATGC.1  GGATGTTGACTGGT.1 \n##                 1                 5                 4                 2 \n##  GGATGTTGAGTCTG.1  GGATGTTGCGGAGA.1  GGATGTTGGGAAGC.1  GGATGTTGGGGATG.1 \n##                 1                 1                 0                 1 \n##  GGATTGTGAACGTC.1  GGATTGTGACGGGA.1  GGATTGTGGCTTCC.1  GGATTGTGGTGCAT.1 \n##                11                 2                 0                 0 \n##  GGATTGTGTGCTCC.1  GGATTTCTCCCGTT.1  GGATTTCTCTCTTA.1  GGATTTCTGGTTCA.1 \n##                 0                 1                 1                 8 \n##  GGATTTCTTGGAGG.1  GGATTTCTTTTCTG.1  GGCAAGGAACACTG.1  GGCAATACACCTAG.1 \n##                 2                 0                 2                10 \n##  GGCAATACGGGAGT.1  GGCAATACTTCGTT.1  GGCACGTGCACTAG.1  GGCACGTGCCGATA.1 \n##                 7                 1                 3                 2 \n##  GGCACGTGGGTAAA.1  GGCACTCTAGCTAC.1  GGCACTCTCACTGA.1  GGCACTCTCTGGAT.1 \n##                13                 6                 2                 0 \n##  GGCACTCTGCAGTT.1  GGCACTCTTTCACT.1  GGCATATGGGGACA.1  GGCCACGAACGGGA.1 \n##                 0                 3                 2                 0 \n##  GGCCACGAATGTGC.1  GGCCACGACACTCC.1  GGCCACGAGAGGGT.1  GGCCACGATAACGC.1 \n##                 2                 6                 0                 8 \n##  GGCCAGACAAGTGA.1  GGCCAGACATCTTC.1  GGCCAGACCGAGAG.1  GGCCAGACCGAGTT.1 \n##                 0                 8                 0                 0 \n##  GGCCAGACGCTGAT.1  GGCCAGACGTTAGC.1  GGCCAGACGTTTGG.1  GGCCAGACTCTAGG.1 \n##                 0                 3                 0                 1 \n##  GGCCCAGATCGCTC.1  GGCCCAGATGCTTT.1  GGCCGAACCAGAGG.1  GGCCGAACCTGACA.1 \n##                 0                 0                 0                 0 \n##  GGCCGAACGCTGAT.1  GGCCGAACGTACGT.1  GGCCGATGCCACAA.1  GGCCGATGCCGTTC.1 \n##                 6                 0                 0                 0 \n##  GGCCGATGTCGACA.1  GGCGACACCACTTT.1  GGCGACACCTTAGG.1  GGCGACACGGTAGG.1 \n##                 5                 4                 5                 6 \n##  GGCGACACTGATGC.1  GGCGACACTTTGGG.1  GGCGACTGAACCTG.1  GGCGACTGAACTGC.1 \n##                 2                 0                 0                 0 \n##  GGCGACTGCTATGG.1  GGCGACTGTGCATG.1  GGCGCATGACTCAG.1  GGCGCATGACTTTC.1 \n##                 0                 5                 0                 4 \n##  GGCGCATGCCTTGC.1  GGCGCATGCGTTAG.1  GGCGCATGCTTATC.1  GGCGCATGGCAAGG.1 \n##                12                 9                 8                 6 \n##  GGCGGACTCATGGT.1  GGCGGACTGAACCT.1  GGCGGACTTGAGCT.1  GGCGGACTTTCATC.1 \n##                 1                 4                 0                 0 \n##  GGCTAAACACACGT.1  GGCTAAACCACTAG.1  GGCTAAACGGTTTG.1  GGCTAAACGTATGC.1 \n##                 1                 0                 1                 7 \n##  GGCTAAACTTCTGT.1  GGCTAATGATTTCC.1  GGCTAATGCTGATG.1  GGCTAATGGAACTC.1 \n##                 1                 6                 3                 1 \n##  GGCTAATGGCTACA.1  GGCTAATGTCTCAT.1  GGCTAATGTTTGGG.1  GGCTACCTAGGCGA.1 \n##                 1                 0                 6                 1 \n##  GGCTACCTATCGAC.1  GGCTACCTATGTCG.1  GGCTACCTCTCGAA.1  GGCTACCTGGACGA.1 \n##                 2                 6                 0                 2 \n##  GGCTACCTTCGCCT.1  GGCTACCTTGCTCC.1  GGCTACCTTTCCGC.1  GGCTCACTCAGATC.1 \n##                 4                 2                 0                 2 \n##  GGCTCACTCTGGTA.1  GGCTCACTGTGTTG.1  GGCTCACTTCCCGT.1  GGGAACGAACAGCT.1 \n##                10                 2                 6                 0 \n##  GGGAACGAAGGGTG.1  GGGAACGAGAGGTG.1  GGGAACGAGGTGGA.1  GGGAACGATGCTGA.1 \n##                 2                 3                 1                 4 \n##  GGGAACGATTATCC.1  GGGAAGACAGTTCG.1  GGGAAGACGCTACA.1  GGGAAGACTCCCGT.1 \n##                 5                10                 0                 1 \n##  GGGAAGACTCTTTG.1  GGGAAGTGCAGAAA.1  GGGAAGTGCTTCTA.1  GGGACCACACCCTC.1 \n##                 1                 5                 9                 0 \n##  GGGACCACAGGAGC.1  GGGACCACCAAGCT.1  GGGACCACGAGACG.1  GGGACCACTCAAGC.1 \n##                 1                 2                 0                11 \n##  GGGACCTGGAGACG.1  GGGACCTGTTGTGG.1  GGGATGGAACTGTG.1  GGGATGGAAGGAGC.1 \n##                 5                 1                 1                 0 \n##  GGGATGGAATGGTC.1  GGGATGGACAAGCT.1  GGGATGGATAAAGG.1  GGGATGGATCTATC.1 \n##                 0                 7                 1                 3 \n##  GGGATGGATGCCCT.1  GGGATGGATGTAGC.1  GGGATTACCACTTT.1  GGGATTACCTCCCA.1 \n##                 1                 0                 7                 6 \n##  GGGATTACGGTTAC.1  GGGATTACTTGTGG.1  GGGCAAGAGCTGAT.1  GGGCAAGAGCTGTA.1 \n##                 0                 3                 0                 0 \n##  GGGCACACACTTTC.1  GGGCACACATGTCG.1  GGGCACACCAGAGG.1  GGGCACACCGTAGT.1 \n##                10                 0                 8                 2 \n##  GGGCACACGTTCGA.1  GGGCACACTGGAAA.1  GGGCAGCTCACTAG.1  GGGCAGCTCATGAC.1 \n##                 2                 3                 1                 9 \n##  GGGCAGCTGTCGTA.1  GGGCAGCTTGTCGA.1  GGGCCAACCTTGCC.1  GGGCCAACGCAAGG.1 \n##                 3                 3                 0                 2 \n##  GGGCCAACGGTCTA.1  GGGCCAACTCTTTG.1  GGGCCAACTTCCGC.1  GGGCCAACTTCTGT.1 \n##                 7                 0                 3                 0 \n##  GGGCCATGAAGGGC.1  GGGCCATGCCGAAT.1  GGGCCATGCCTTGC.1  GGGCCATGCGCAAT.1 \n##                 0                 0                 3                 4 \n##  GGGCCATGCTACTT.1  GGGCCATGGGTATC.1  GGGCCATGTTCTCA.1  GGGTAACTACACCA.1 \n##                 1                 3                 1                 0 \n##  GGGTAACTATCACG.1  GGGTAACTATGTCG.1  GGGTAACTCCTACC.1  GGGTAACTCGTCTC.1 \n##                 0                 1                 0                 0 \n##  GGGTAACTGTTTCT.1  GGGTTAACACCTCC.1  GGGTTAACAGAAGT.1  GGGTTAACGGGAGT.1 \n##                 0                 0                 5                 7 \n##  GGGTTAACTTCTGT.1  GGGTTATGGCCTTC.1  GGGTTATGGGAAGC.1  GGGTTATGTCTCTA.1 \n##                 0                 0                 0                 0 \n##  GGTAAAGACACTTT.1  GGTAAAGAGTCATG.1  GGTACAACAGACTC.1  GGTACAACGGAACG.1 \n##                 0                 0                 6                 3 \n##  GGTACAACTCACCC.1  GGTACAACTCTAGG.1  GGTACATGCCTCGT.1  GGTACATGCTATGG.1 \n##                 2                 0                 7                 6 \n##  GGTACTGAACGCAT.1  GGTACTGAACGGGA.1  GGTACTGAATGACC.1  GGTACTGACGCAAT.1 \n##                 4                 1                 9                 0 \n##  GGTACTGAGGTGTT.1  GGTACTGATCCCAC.1  GGTACTGATCGACA.1  GGTAGTACAACCTG.1 \n##                 1                 0                13                 0 \n##  GGTAGTACCGTAAC.1  GGTATCGAAGCAAA.1  GGTATCGACACTTT.1  GGTATCGAGAGGTG.1 \n##                 0                 1                 0                 0 \n##  GGTATCGAGGTCTA.1  GGTATGACAGATGA.1  GGTATGACTGACTG.1  GGTCAAACGGGATG.1 \n##                 2                 0                 2                 0 \n##  GGTCAAACTCCAGA.1  GGTCTAGACAAGCT.1  GGTCTAGACCCAAA.1  GGTCTAGAGCTAAC.1 \n##                 0                 0                 0                 3 \n##  GGTCTAGAGTCCTC.1  GGTCTAGATGTAGC.1  GGTGATACAGAGTA.1  GGTGATACCAATCG.1 \n##                 0                 0                 1                 6 \n##  GGTGATACCTTGCC.1  GGTGATACGAGCTT.1  GGTGATACGAGGCA.1  GGTGGAGAGAGGCA.1 \n##                 0                 2                 0                 0 \n##  GGTGGAGAGGAACG.1  GGTGGAGAGTTGGT.1  GGTTGAACAAGGGC.1  GGTTGAACCATGCA.1 \n##                 1                 1                 0                 8 \n##  GGTTGAACTAGCCA.1  GGTTGAACTCTTAC.1  GGTTGAACTGACTG.1  GGTTGAACTGCTGA.1 \n##                 1                 0                 0                 6 \n##  GGTTGAACTGGTCA.1  GGTTGAACTGTGCA.1  GGTTTACTAAGCCT.1  GGTTTACTCTCCAC.1 \n##                 0                 2                 1                 1 \n##  GGTTTACTCTCGCT.1  GGTTTACTGAACCT.1  GGTTTACTGACTAC.1  GGTTTACTGATGAA.1 \n##                 9                 1                 1                 0 \n##  GTAACGTGAACCAC.1  GTAACGTGCTTCTA.1  GTAACGTGGGTAAA.1  GTAACGTGGTCGTA.1 \n##                 1                 1                 4                 0 \n##  GTAACGTGTCTAGG.1  GTAAGCACAGAACA.1  GTAAGCACCTAGTG.1  GTAAGCACTGTTTC.1 \n##                 6                 3                 0                 7 \n##  GTAAGCTGAGTTCG.1  GTAAGCTGTCAGAC.1  GTAATAACCCTCCA.1  GTAATAACGAGACG.1 \n##                 1                 1                 0                 3 \n##  GTAATAACTATGGC.1  GTAATAACTGGTTG.1  GTAATATGAAAACG.1  GTAATATGAAGAAC.1 \n##                 0                 0                 0                 2 \n##  GTAATATGTCCTTA.1  GTAATATGTTTGGG.1  GTACAGTGACCCAA.1  GTACAGTGGAACTC.1 \n##                 0                 4                 4                 2 \n##  GTACAGTGGCCAAT.1  GTACAGTGGCTTAG.1  GTACCCTGGAGCAG.1  GTACCCTGGGTTCA.1 \n##                 0                 0                 0                 3 \n##  GTACCCTGGTAAGA.1  GTACCCTGTCGCTC.1  GTACCCTGTGACCA.1  GTACCCTGTTCGTT.1 \n##                 5                 9                 0                 4 \n##  GTACGAACACCTAG.1  GTACGAACCAAGCT.1  GTACGAACTCAGAC.1  GTACGTGACAATCG.1 \n##                 0                 0                 0                 3 \n##  GTACGTGACTAGCA.1  GTACGTGAGCATAC.1  GTACGTGAGTTGTG.1  GTACTACTAAACAG.1 \n##                 0                 0                 5                 3 \n##  GTACTACTCATACG.1  GTACTACTCCTCCA.1  GTACTACTTAAAGG.1  GTACTTTGAAGGTA.1 \n##                 4                 0                 8                 1 \n##  GTACTTTGCCACCT.1  GTACTTTGCCGTAA.1  GTACTTTGTCTAGG.1  GTACTTTGTGCGTA.1 \n##                 2                 5                 1                 3 \n##  GTACTTTGTGCTGA.1  GTAGACTGCCAACA.1  GTAGACTGCTACCC.1  GTAGCAACACACCA.1 \n##                 1                 2                 1                 0 \n##  GTAGCAACACCTTT.1  GTAGCAACAGTGCT.1  GTAGCAACGAATAG.1  GTAGCAACGTTTCT.1 \n##                 3                 0                 7                 4 \n##  GTAGCAACTCCTAT.1  GTAGCAACTCTCAT.1  GTAGCATGATCTTC.1  GTAGCATGGGACAG.1 \n##                 0                 1                 2                10 \n##  GTAGCATGTCGACA.1  GTAGCCCTATCTCT.1  GTAGCCCTTACGCA.1  GTAGCTGAGCGTTA.1 \n##                 1                 5                 1                 0 \n##  GTAGCTGAGGCGAA.1  GTAGCTGATATTCC.1  GTAGGTACAACGTC.1  GTAGGTACAATCGC.1 \n##                 2                 4                 4                 0 \n##  GTAGGTACAGTGCT.1  GTAGGTACCCAATG.1  GTAGGTACCCCGTT.1  GTAGGTACCCCTCA.1 \n##                 2                 1                 0                 0 \n##  GTAGGTACCTCATT.1  GTAGGTACGTCACA.1  GTAGGTACGTCGAT.1  GTAGGTACTCAGAC.1 \n##                 2                 0                 3                 1 \n##  GTAGGTACTTCCCG.1  GTAGTCGAAGTGCT.1  GTAGTCGAGCTGAT.1  GTAGTCGATCAGAC.1 \n##                 6                 7                 0                 1 \n##  GTAGTGACGCCATA.1  GTAGTGACGTATCG.1  GTAGTGACTGACCA.1  GTAGTGTGATCAGC.1 \n##                 4                 4                 0                 2 \n##  GTAGTGTGGGTCAT.1  GTAGTGTGGTTTCT.1  GTAGTGTGGTTTGG.1  GTAGTGTGTCCAGA.1 \n##                 1                 3                 3                 4 \n##  GTAGTGTGTGCCTC.1  GTAGTGTGTTATCC.1  GTAGTGTGTTCGTT.1  GTATCACTACCTTT.1 \n##                 3                 0                 5                 0 \n##  GTATCACTAGTAGA.1  GTATCACTATCTTC.1  GTATCACTCCAACA.1  GTATCTACCCTGTC.1 \n##                 1                 0                 2                 2 \n##  GTATCTACCGAGTT.1  GTATGGTGACACAC.1  GTATGGTGAGAGTA.1  GTATGGTGCACTTT.1 \n##                 0                 0                 0                 2 \n##  GTATGGTGGTGAGG.1  GTATGGTGTTTCAC.1  GTATGGTGTTTCGT.1  GTATGGTGTTTGGG.1 \n##                 6                 3                 2                 0 \n##  GTATTAGACAACCA.1  GTATTAGACGCATA.1  GTATTAGAGCATAC.1  GTATTAGAGCGGAA.1 \n##                 2                 2                 7                 0 \n##  GTATTCACAATGCC.1  GTATTCACGACGTT.1  GTATTCACGCTCCT.1  GTATTCACGGAGGT.1 \n##                 0                 5                 2                 5 \n##  GTATTCACTCACCC.1  GTCAACGAGAGGGT.1  GTCAACGAGATAAG.1  GTCAACGAGCAGAG.1 \n##                 0                 8                 1                 1 \n##  GTCAATCTCACTCC.1  GTCAATCTCCTCGT.1  GTCACAGACGGAGA.1  GTCACAGAGTATGC.1 \n##                 1                 7                 8                 1 \n##  GTCACCTGAAAAGC.1  GTCACCTGAACGAA.1  GTCACCTGTGCTAG.1  GTCATACTGGTTAC.1 \n##                 1                 0                 0                10 \n##  GTCATACTGTATGC.1  GTCATACTTAGAAG.1  GTCATACTTAGACC.1  GTCATACTTCCTAT.1 \n##                 1                 0                 3                 2 \n##  GTCCAAGATGAACC.1  GTCCAAGATGGCAT.1  GTCCACACAAGGCG.1  GTCCACACCGACTA.1 \n##                 0                 1                 0                 0 \n##  GTCCACACTACGAC.1  GTCCACACTCAGAC.1  GTCCACACTCCTGC.1  GTCCACTGCAGCTA.1 \n##                 4                 0                 2                 7 \n##  GTCCACTGCAGTCA.1  GTCCACTGCTTGAG.1  GTCCACTGTGCTAG.1  GTCCACTGTTCACT.1 \n##                 3                 1                 0                 2 \n##  GTCCACTGTTCGGA.1  GTCCAGCTAAGCCT.1  GTCCAGCTCTGTGA.1  GTCCAGCTGAATAG.1 \n##                 0                 5                 2                 1 \n##  GTCCAGCTGTGTTG.1  GTCCAGCTTGTTTC.1  GTCCAGCTTTACTC.1  GTCCCATGAGTACC.1 \n##                 0                 4                 7                 0 \n##  GTCCCATGCCGATA.1  GTCCCATGCTTGTT.1  GTCGAATGACGCAT.1  GTCGAATGATGCCA.1 \n##                 2                 0                 2                 4 \n##  GTCGAATGCTCTAT.1  GTCGAATGCTTCCG.1  GTCGAATGGGTCAT.1  GTCGACCTATTTCC.1 \n##                 0                 1                 9                 3 \n##  GTCGACCTCGCTAA.1  GTCGACCTGAAAGT.1  GTCGACCTGCATCA.1  GTCGACCTTCTCGC.1 \n##                 2                 0                 0                 0 \n##  GTCGCACTAGCGGA.1  GTCGCACTGCCTTC.1  GTCGCACTTCGTTT.1  GTCTAACTAGAATG.1 \n##                 0                 0                 1                 1 \n##  GTCTAACTAGGTTC.1  GTCTAACTCTACGA.1  GTCTAACTGACGAG.1  GTCTAACTTCAGGT.1 \n##                 1                 0                 7                 4 \n##  GTCTAGGACAACTG.1  GTCTAGGAGCAGAG.1  GTCTAGGATTGAGC.1  GTCTGAGACACCAA.1 \n##                 1                 1                12                 1 \n##  GTCTGAGACCTTCG.1  GTCTGAGAGACACT.1  GTCTGAGATGGGAG.1  GTCTGAGATGGTGT.1 \n##                 0                 1                 0                 4 \n##  GTGAACACACGTTG.1  GTGAACACGCCTTC.1  GTGAACACTACTTC.1  GTGACAACCACCAA.1 \n##                 4                 0                 1                 4 \n##  GTGACAACGGCAAG.1  GTGACAACTAGTCG.1  GTGACAACTTCATC.1  GTGACCCTACCTAG.1 \n##                 1                 2                 1                 0 \n##  GTGACCCTACTGTG.1  GTGACCCTAGAATG.1  GTGACCCTCGTTGA.1  GTGACCCTGTTCGA.1 \n##                 1                 0                 0                 0 \n##  GTGACCCTTAAGCC.1  GTGACCCTTCCAGA.1  GTGAGGGAAGGGTG.1  GTGAGGGACTAGTG.1 \n##                 3                 5                 0                 8 \n##  GTGAGGGAGGAAGC.1  GTGAGGGAGGGATG.1  GTGAGGGATTGGTG.1  GTGATCGATGCTCC.1 \n##                 4                 8                 0                 0 \n##  GTGATGACCCATGA.1  GTGATGACTTCAGG.1  GTGATTCTAAAGTG.1  GTGATTCTCGCCTT.1 \n##                 1                 1                 1                 2 \n##  GTGATTCTGTACGT.1  GTGATTCTTAGAAG.1  GTGCAAACAAGTAG.1  GTGCAAACCAGATC.1 \n##                 1                 2                 8                 0 \n##  GTGCAAACTGAGGG.1  GTGCCACTTGCCCT.1  GTGCTAGAAACGAA.1  GTGCTAGAGTATCG.1 \n##                 0                 5                 3                 6 \n##  GTGCTAGATTTGGG.1  GTGGAGGAGTCTTT.1  GTGGATTGAGAACA.1  GTGGATTGCCATGA.1 \n##                 1                 7                 8                 0 \n##  GTGGATTGGATAGA.1  GTGGATTGGGAGTG.1  GTGGTAACACAGTC.1  GTGGTAACCCCAAA.1 \n##                 1                 9                 1                 0 \n##  GTGGTAACGGATCT.1  GTGGTAACGTGAGG.1  GTGTACGAAAACGA.1  GTGTACGAAAGCCT.1 \n##                 1                 4                 3                 1 \n##  GTGTACGAACTCAG.1  GTGTACGACATGAC.1  GTGTACGACTAGTG.1  GTGTACGAGAACTC.1 \n##                 0                 0                 9                 0 \n##  GTGTACGATTGTGG.1  GTGTAGTGAACGTC.1  GTGTAGTGACTACG.1  GTGTAGTGGCAGTT.1 \n##                 0                 1                 2                 6 \n##  GTGTAGTGGTTGTG.1  GTGTAGTGTAGAGA.1  GTGTAGTGTTCTTG.1  GTGTATCTGCGTAT.1 \n##                 1                 0                 1                 5 \n##  GTGTATCTTGGTAC.1  GTGTATCTTTCGGA.1  GTGTCAGAATAAGG.1  GTGTCAGAATGCCA.1 \n##                 2                 0                 0                 1 \n##  GTGTCAGAGGAGCA.1  GTGTCAGATCGCTC.1  GTGTGATGCTAAGC.1  GTGTGATGCTGAAC.1 \n##                 0                12                 0                 3 \n##  GTGTGATGGTACCA.1  GTTAAAACCGGAGA.1  GTTAAAACCTCAAG.1  GTTAAAACGTAAAG.1 \n##                 8                10                 4                 6 \n##  GTTAAAACTAGCGT.1  GTTAAATGACTGTG.1  GTTAAATGATGTGC.1  GTTAAATGCGCCTT.1 \n##                12                 9                 3                 5 \n##  GTTAAATGCTTGAG.1  GTTAAATGGGTTCA.1  GTTAAATGGTATCG.1  GTTAAATGTATGGC.1 \n##                 0                 6                 2                 2 \n##  GTTAAATGTGGTGT.1  GTTAACCTCATTCT.1  GTTAACCTCGCAAT.1  GTTAACCTGTTTCT.1 \n##                 5                 0                 6                 0 \n##  GTTACGGAACTGGT.1  GTTACGGATTGCGA.1  GTTACTACACACAC.1  GTTACTACGGACAG.1 \n##                 4                 3                 2                 3 \n##  GTTAGGTGACAGCT.1  GTTAGGTGAGAGGC.1  GTTAGGTGCCTGAA.1  GTTAGGTGGAGGAC.1 \n##                 6                 0                 0                 1 \n##  GTTAGGTGGCCATA.1  GTTAGGTGGGTGAG.1  GTTAGTCTAGGTCT.1  GTTAGTCTGGTGAG.1 \n##                 0                 5                 3                 1 \n##  GTTATAGATATCTC.1  GTTATAGATCAGTG.1  GTTATAGATGCTCC.1  GTTATAGATTATCC.1 \n##                 3                 7                 1                 0 \n##  GTTATAGATTGCAG.1  GTTATCTGCACTAG.1  GTTATCTGCTCTTA.1  GTTATCTGTCATTC.1 \n##                 0                 6                 2                 9 \n##  GTTATGCTTCAAGC.1  GTTATGCTTCGCAA.1  GTTCAACTACGCTA.1  GTTCAACTACTGTG.1 \n##                 2                 3                 1                 2 \n##  GTTCAACTAGATCC.1  GTTCAACTCACCAA.1  GTTCAACTGACAAA.1  GTTCAACTTGCAGT.1 \n##                 1                 0                10                 5 \n##  GTTCAACTTGCCAA.1  GTTCAGGAAGCTCA.1  GTTCAGGAGCTTCC.1  GTTCAGGAGTGCTA.1 \n##                 7                10                 5                 5 \n##  GTTCATACACACCA.1  GTTCATACACACGT.1  GTTCATACAGCTAC.1  GTTCATACCAGCTA.1 \n##                 0                 1                 6                 0 \n##  GTTCATACCCCGTT.1  GTTCATACGTGTTG.1  GTTGACGAATCGAC.1  GTTGACGAGACTAC.1 \n##                 3                 2                 7                 0 \n##  GTTGACGAGTCGTA.1  GTTGACGATTATCC.1  GTTGACGATTTCGT.1  GTTGAGTGAACAGA.1 \n##                 2                 2                 1                 5 \n##  GTTGAGTGATTCCT.1  GTTGAGTGCAGAAA.1  GTTGAGTGTCAGTG.1  GTTGAGTGTGAGAA.1 \n##                 0                 0                 2                 3 \n##  GTTGAGTGTGAGGG.1  GTTGAGTGTGGAGG.1  GTTGAGTGTTCATC.1  GTTGATCTACTTTC.1 \n##                 0                 3                 0                 0 \n##  GTTGATCTAGCTCA.1  GTTGATCTCACCAA.1  GTTGGATGACAGCT.1  GTTGGATGCGCAAT.1 \n##                 4                 7                 6                 4 \n##  GTTGGATGTCACGA.1  GTTGGATGTCAGAC.1  GTTGGATGTGCTTT.1  GTTGTACTAAGTGA.1 \n##                 1                 2                 0                 2 \n##  GTTGTACTCACTGA.1  GTTTAAGACACTAG.1  GTTTAAGAGAATGA.1  GTTTAAGAGCGAGA.1 \n##                 1                 4                 4                 5 \n##  GTTTAAGAGGAAGC.1  GTTTAAGAGTCAAC.1  GTTTAAGATGCTTT.1  TAAACAACAAAAGC.1 \n##                10                 0                 1                 7 \n##  TAAACAACACCAGT.1  TAAACAACCCATGA.1  TAAACAACCGAGTT.1  TAAACAACTCTCGC.1 \n##                 5                 0                 0                 3 \n##  TAAAGACTCGCATA.1  TAAAGACTCTGTTT.1  TAAAGACTGGACAG.1  TAAAGACTGGGCAA.1 \n##                 1                 2                 0                 3 \n##  TAAAGACTTTTGGG.1  TAAAGTTGAGTCGT.1  TAAAGTTGAGTTCG.1  TAAAGTTGATTGGC.1 \n##                 2                 1                 0                 0 \n##  TAAAGTTGTCAGGT.1  TAAAGTTGTCCGTC.1  TAAAGTTGTCGACA.1  TAAATCGAAACTGC.1 \n##                 1                 1                 0                 1 \n##  TAAATCGAACCATG.1  TAAATCGAACCTGA.1  TAAATCGACCATAG.1  TAAATCGACTAAGC.1 \n##                 2                 2                 0                 0 \n##  TAAATCGATACTGG.1  TAAATCGATCCCAC.1  TAAATCGATGCCTC.1  TAAATGTGAGGAGC.1 \n##                 3                 0                 1                 2 \n##  TAAATGTGCTCAGA.1  TAAATGTGCTTAGG.1  TAAATGTGTCCTGC.1  TAACAATGAGGTTC.1 \n##                 7                 0                 4                 1 \n##  TAACAATGCCTCCA.1  TAACAATGTAGTCG.1  TAACAATGTGGGAG.1  TAACACCTAAGATG.1 \n##                 1                 0                 1                 0 \n##  TAACACCTAGCAAA.1  TAACACCTGTCATG.1  TAACACCTTTGTGG.1  TAACATGACTCGAA.1 \n##                 0                 5                 3                 2 \n##  TAACATGAGTCTAG.1  TAACATGATGCTTT.1  TAACCGGAATTCCT.1  TAACCGGACATGGT.1 \n##                 1                 4                 0                10 \n##  TAACCGGACCGTAA.1  TAACCGGAGAGATA.1  TAACCGGAGAGGTG.1  TAACCGGAGGTTCA.1 \n##                 0                 7                 0                 1 \n##  TAACCGGATATCTC.1  TAACCGGATGAACC.1  TAACCGGATGACAC.1  TAACCGGATGTCCC.1 \n##                 1                 7                10                 0 \n##  TAACGTCTACCGAT.1  TAACGTCTCCTCAC.1  TAACGTCTCGCAAT.1  TAACTAGAAAAAGC.1 \n##                 0                 2                 3                 6 \n##  TAACTAGAGAGCTT.1  TAACTAGAGCCTTC.1  TAACTAGATCCTGC.1  TAACTAGATCGCCT.1 \n##                 0                 2                 4                 9 \n##  TAACTAGATTAGGC.1  TAACTAGATTGCGA.1  TAACTCACACGCAT.1  TAACTCACAGTAGA.1 \n##                 2                 1                 9                 5 \n##  TAACTCACCATTTC.1  TAACTCACTACAGC.1  TAACTCACTTCCCG.1  TAAGAACTCTTAGG.1 \n##                 0                 4                 0                 2 \n##  TAAGAACTTCTCAT.1  TAAGAGGAATTGGC.1  TAAGAGGACCCTAC.1  TAAGAGGACCTCGT.1 \n##                 5                 1                 1                 1 \n##  TAAGAGGAGTCGTA.1  TAAGAGGATGATGC.1  TAAGAGGATGCTAG.1  TAAGAGGATTGTGG.1 \n##                 0                 0                 7                 9 \n##  TAAGAGGATTTGTC.1  TAAGATACCCCTTG.1  TAAGATACCCTAAG.1  TAAGATACGAAACA.1 \n##                 0                 0                 8                11 \n##  TAAGATACGAGCAG.1  TAAGATACTCACCC.1  TAAGATACTTGTCT.1  TAAGATTGGCGATT.1 \n##                 4                 3                 3                 0 \n##  TAAGATTGGTGAGG.1  TAAGATTGTCTGGA.1  TAAGATTGTGGTTG.1  TAAGATTGTGTCGA.1 \n##                 0                 5                 0                 4 \n##  TAAGCGTGATTGGC.1  TAAGCGTGCCTACC.1  TAAGCGTGCTGTTT.1  TAAGCGTGGTCACA.1 \n##                 4                 2                10                10 \n##  TAAGCTCTACTACG.1  TAAGCTCTCCTAAG.1  TAAGCTCTGCTAAC.1  TAAGGCTGAACTGC.1 \n##                 1                 3                 5                12 \n##  TAAGGCTGACCTGA.1  TAAGGCTGAGCATC.1  TAAGGCTGATGACC.1  TAAGGCTGTAGCCA.1 \n##                 0                 2                 1                 1 \n##  TAAGGGCTACCTGA.1  TAAGGGCTCATTGG.1  TAAGGGCTCTTCCG.1  TAAGGGCTGGTTAC.1 \n##                 0                 0                 0                 1 \n##  TAAGGGCTTAAGGA.1  TAAGTAACGGAGCA.1  TAAGTAACTCCAAG.1  TAAGTAACTGCTGA.1 \n##                 0                 3                 9                 1 \n##  TAAGTCCTCGAGTT.1  TAAGTCCTGTATGC.1  TAATCCACACAGCT.1  TAATCCACATGTGC.1 \n##                 0                 2                 1                 0 \n##  TAATCCACCGTGAT.1  TAATCCACCTCTAT.1  TAATCCACGGTCTA.1  TAATCGCTACCATG.1 \n##                 1                 0                 6                 5 \n##  TAATCGCTCGGGAA.1  TAATCGCTCTACCC.1  TAATCGCTGAGCTT.1  TAATCGCTGCGTTA.1 \n##                 0                 0                 3                 0 \n##  TAATCGCTTGGCAT.1  TAATGAACCAGTTG.1  TAATGAACCCTTAT.1  TAATGAACGGTCTA.1 \n##                 6                 0                 7                 0 \n##  TAATGAACTCTAGG.1  TAATGATGATCGTG.1  TAATGATGGCTGAT.1  TAATGATGGGTGAG.1 \n##                 0                 0                 0                 5 \n##  TAATGCCTAGCTAC.1  TAATGCCTAGTCGT.1  TAATGCCTCAGAAA.1  TAATGCCTCATGGT.1 \n##                 6                 4                 1                 9 \n##  TAATGCCTCTGGAT.1  TAATGCCTGACGAG.1  TAATGCCTGCAGAG.1  TAATGTGAACGTAC.1 \n##                 4                 0                 0                 4 \n##  TAATGTGACCCTCA.1  TAATGTGACCGTAA.1  TAATGTGAGCTTAG.1  TAATGTGAGGATCT.1 \n##                 2                 0                 2                 5 \n##  TAATGTGATATTCC.1  TAATGTGATGACAC.1  TAATGTGATGAGCT.1  TACAAATGCGAACT.1 \n##                 0                 1                 0                 5 \n##  TACAAATGGTGCAT.1  TACAAATGTCAGTG.1  TACAAATGTGCTGA.1  TACAATGACTCAAG.1 \n##                 1                 1                 8                 0 \n##  TACACACTAACAGA.1  TACACACTACCGAT.1  TACACACTATGTCG.1  TACACACTGGTTAC.1 \n##                 0                 2                 2                 0 \n##  TACACACTTAACGC.1  TACACACTTGCTTT.1  TACACACTTTGCTT.1  TACATAGATGGTGT.1 \n##                 0                 0                 1                 1 \n##  TACATCACACACTG.1  TACATCACACGGGA.1  TACATCACCTGTAG.1  TACATCACCTTCGC.1 \n##                 1                 0                 4                 4 \n##  TACATCACGTTCAG.1  TACATCACTCTGGA.1  TACCATTGCGTTAG.1  TACCATTGCTTATC.1 \n##                 0                 1                 6                 2 \n##  TACCATTGGCTACA.1  TACCATTGTCGACA.1  TACCATTGTGCGTA.1  TACCATTGTGCTCC.1 \n##                 0                 0                 0                 1 \n##  TACCATTGTTATCC.1  TACCATTGTTGGCA.1  TACCGAGAACCCAA.1  TACCGAGACCTCAC.1 \n##                 0                 1                 7                 2 \n##  TACCGAGATGTGAC.1  TACCGAGATTCTCA.1  TACCGCTGACAGCT.1  TACCGCTGGATAAG.1 \n##                 4                 2                 3                 1 \n##  TACCGCTGGGTCAT.1  TACCGCTGGTCGAT.1  TACCGCTGGTTGGT.1  TACCGCTGTCCCGT.1 \n##                 7                 4                 1                 9 \n##  TACCGCTGTGAGCT.1  TACCGGCTAACGTC.1  TACCGGCTCCATGA.1  TACCGGCTCTCGCT.1 \n##                 1                 0                 0                 1 \n##  TACCGGCTTAACGC.1  TACGACGAAACCGT.1  TACGACGAAACGGG.1  TACGAGACCACCAA.1 \n##                 6                 2                 4                 0 \n##  TACGAGACCATACG.1  TACGAGACTCCAAG.1  TACGAGACTGGCAT.1  TACGAGACTGGTGT.1 \n##                 2                 0                 0                 2 \n##  TACGAGTGACTAGC.1  TACGAGTGAGTGCT.1  TACGAGTGCGCCTT.1  TACGAGTGCTACGA.1 \n##                 2                12                 0                 0 \n##  TACGAGTGCTCTCG.1  TACGAGTGTTATCC.1  TACGATCTAAGTGA.1  TACGATCTATAAGG.1 \n##                 1                 4                 2                 0 \n##  TACGATCTCCAGTA.1  TACGATCTCGAGAG.1  TACGATCTCTATGG.1  TACGATCTGATAAG.1 \n##                 0                 0                 2                 4 \n##  TACGCAGAAGGTCT.1  TACGCAGAATGTGC.1  TACGCAGACTCATT.1  TACGCAGACTTGTT.1 \n##                 0                10                 1                 1 \n##  TACGCAGATGTCAG.1  TACGCCACAAGGGC.1  TACGCCACACGACT.1  TACGCCACGCGGAA.1 \n##                 0                 3                 0                 0 \n##  TACGCCACTGGCAT.1  TACGCCACTTCGTT.1  TACGCGCTACTCTT.1  TACGCGCTCTCCAC.1 \n##                 0                 1                 2                 9 \n##  TACGCGCTGTTAGC.1  TACGCGCTTCATTC.1  TACGCGCTTGCAAC.1  TACGGAACCGTGAT.1 \n##                 0                 3                 1                 2 \n##  TACGGAACGTGTCA.1  TACGGCCTTCCAGA.1  TACGTACTAGCGTT.1  TACGTACTATTTCC.1 \n##                 1                 0                 0                 5 \n##  TACGTACTCACTAG.1  TACGTTACCGAATC.1  TACGTTACTGTAGC.1  TACTAAGAAACGAA.1 \n##                 0                 0                 4                 3 \n##  TACTAAGAATCGTG.1  TACTAAGAGAGACG.1  TACTAAGATACGAC.1  TACTACACAAGGCG.1 \n##                 1                 0                 0                 0 \n##  TACTACACACCCTC.1  TACTACACCGATAC.1  TACTACACTACTCT.1  TACTACACTCACGA.1 \n##                 7                 0                 5                 1 \n##  TACTACACTGAACC.1  TACTACACTTCTTG.1  TACTACTGACTGTG.1  TACTACTGCGAATC.1 \n##                 1                 0                 4                 0 \n##  TACTACTGCGTGAT.1  TACTACTGTCAGGT.1  TACTACTGTGACAC.1  TACTCAACCTAGAC.1 \n##                 7                 1                 4                 2 \n##  TACTCAACCTAGTG.1  TACTCCCTCACTAG.1  TACTCCCTGAAAGT.1  TACTCCCTTGGGAG.1 \n##                 2                 7                 5                 0 \n##  TACTCTGACCCGTT.1  TACTCTGAGAACTC.1  TACTCTGAGAATCC.1  TACTCTGATCTTTG.1 \n##                 5                 9                 1                 1 \n##  TACTGGGAACTGGT.1  TACTGGGAGACGTT.1  TACTGGGAGCTACA.1  TACTGGGATTGAGC.1 \n##                 2                 1                 6                 8 \n##  TACTGGGATTTCGT.1  TACTGTTGCCCTTG.1  TACTGTTGCGCTAA.1  TACTGTTGCTATGG.1 \n##                 2                 0                 4                 6 \n##  TACTGTTGCTGAGT.1  TACTGTTGCTGCTC.1  TACTGTTGGTAAAG.1  TACTGTTGTCCGAA.1 \n##                 4                 1                 3                 0 \n##  TACTGTTGTTTGTC.1  TACTTGACAACCGT.1  TACTTGACATGCTG.1  TACTTGACCGCTAA.1 \n##                 3                 0                 0                10 \n##  TACTTGACCTGACA.1  TACTTGACTGAGGG.1  TACTTGACTTCCAT.1  TACTTTCTAACGGG.1 \n##                 0                 3                 0                 5 \n##  TACTTTCTAACTGC.1  TACTTTCTCATTTC.1  TACTTTCTGCTATG.1  TAGAAACTACCATG.1 \n##                 2                 0                 5                 0 \n##  TAGAAACTACTTTC.1  TAGAAACTATCGAC.1  TAGAAACTGTAAAG.1  TAGAAACTGTCTGA.1 \n##                 7                 0                 2                 9 \n##  TAGAATACAAGGCG.1  TAGAATACATCGAC.1  TAGAATACCATTTC.1  TAGAATACCCGATA.1 \n##                 4                 1                 2                 8 \n##  TAGAATACCGTTGA.1  TAGAATACGTACGT.1  TAGAATACTACAGC.1  TAGAATTGAGATGA.1 \n##                 1                 0                 0                 4 \n##  TAGAATTGATCGAC.1  TAGAATTGCGAGTT.1  TAGAATTGCTCATT.1  TAGAATTGGTAAAG.1 \n##                 0                 3                 6                 4 \n##  TAGAATTGGTCATG.1  TAGAATTGTACGAC.1  TAGAATTGTCTCGC.1  TAGAATTGTGGTGT.1 \n##                 3                 1                 3                 0 \n##  TAGAATTGTGTTCT.1  TAGACGTGATAAGG.1  TAGACGTGATCGTG.1  TAGACGTGTATGGC.1 \n##                 0                 2                 3                 9 \n##  TAGAGAGAACGCAT.1  TAGAGAGAATCACG.1  TAGAGAGACTGGTA.1  TAGAGAGAGTACCA.1 \n##                 2                 0                 0                 0 \n##  TAGAGCACATTGGC.1  TAGAGCACCGAATC.1  TAGAGCACGAGCAG.1  TAGAGCACGCGAGA.1 \n##                 0                 6                 3                 0 \n##  TAGAGCACGGAGGT.1  TAGAGCACGGGCAA.1  TAGAGCACGGTGTT.1  TAGAGCACTCCAGA.1 \n##                 1                13                 0                 0 \n##  TAGATCCTCATACG.1  TAGATCCTCCGCTT.1  TAGATCCTCGTTGA.1  TAGATCCTTCTCTA.1 \n##                 1                 0                 2                 0 \n##  TAGATTGAACCTCC.1  TAGATTGACGCTAA.1  TAGATTGACTATTC.1  TAGATTGACTCCCA.1 \n##                 0                 5                 1                 3 \n##  TAGATTGAGCGTAT.1  TAGCATCTTCGCCT.1  TAGCCCACAAGCCT.1  TAGCCCACGTTGTG.1 \n##                 1                 3                 0                 0 \n##  TAGCCCTGGTAAAG.1  TAGCCGCTAGGTTC.1  TAGCCGCTGAAGGC.1  TAGCCGCTGCGAAG.1 \n##                 1                 2                 0                 9 \n##  TAGCGATGGGACTT.1  TAGCGATGTTGTGG.1  TAGCTACTAGCGTT.1  TAGCTACTATCGTG.1 \n##                 2                 9                 2                 0 \n##  TAGCTACTCCAATG.1  TAGCTACTCTACCC.1  TAGCTACTGGTGTT.1  TAGGACTGAAGAAC.1 \n##                 4                 1                 4                 4 \n##  TAGGACTGCATCAG.1  TAGGACTGGCTCCT.1  TAGGACTGTGAGCT.1  TAGGACTGTTCAGG.1 \n##                 0                 2                 0                 0 \n##  TAGGAGCTACCTCC.1  TAGGAGCTAGAGTA.1  TAGGAGCTGCGGAA.1  TAGGAGCTTCATTC.1 \n##                 0                 0                 5                 0 \n##  TAGGCAACATTTCC.1  TAGGCAACCGGGAA.1  TAGGCAACGCTTAG.1  TAGGCAACGGACAG.1 \n##                 3                 5                 0                 4 \n##  TAGGCAACGTCTGA.1  TAGGCATGAAGCCT.1  TAGGCATGACGGTT.1  TAGGCATGGGGAGT.1 \n##                 1                 1                 7                 2 \n##  TAGGCATGGGGATG.1  TAGGCATGTCCTGC.1  TAGGCTGACACTCC.1  TAGGCTGAGCCATA.1 \n##                 0                 0                 5                 0 \n##  TAGGGACTACCCAA.1  TAGGGACTAGTGTC.1  TAGGGACTATTCTC.1  TAGGGACTCACAAC.1 \n##                 2                 0                 0                 0 \n##  TAGGGACTCTAAGC.1  TAGGGACTTTCACT.1  TAGGGACTTTGCGA.1  TAGGTCGAACGTGT.1 \n##                 1                 2                 0                 0 \n##  TAGGTCGACCAAGT.1  TAGGTCGACCTATT.1  TAGGTCGACTACTT.1  TAGGTCGACTGTGA.1 \n##                 1                 0                10                 1 \n##  TAGGTCGAGGCAAG.1  TAGGTCGATCTGGA.1  TAGGTGACAGGAGC.1  TAGGTGACCGACTA.1 \n##                 5                 0                 0                 3 \n##  TAGGTGACCTCGAA.1  TAGGTGACTGCTGA.1  TAGGTGTGACCCTC.1  TAGGTGTGCAGATC.1 \n##                 1                 1                 0                 0 \n##  TAGGTGTGGAGGAC.1  TAGGTGTGGCGGAA.1  TAGGTGTGTCCCAC.1  TAGGTTCTGAGGAC.1 \n##                 0                 0                 5                 5 \n##  TAGGTTCTGAGGTG.1  TAGGTTCTGGAGCA.1  TAGGTTCTTCGTTT.1  TAGGTTCTTCTACT.1 \n##                 2                 0                 1                 2 \n##  TAGGTTCTTCTGGA.1  TAGGTTCTTGAGGG.1  TAGGTTCTTGTCAG.1  TAGTAAACAGAACA.1 \n##                 8                 7                 6                 0 \n##  TAGTAAACAGAGTA.1  TAGTAAACCCCTAC.1  TAGTAAACTAACCG.1  TAGTAATGAAAAGC.1 \n##                 1                 1                 4                 0 \n##  TAGTAATGAACAGA.1  TAGTAATGCGTCTC.1  TAGTAATGTTTCAC.1  TAGTACCTAAGCCT.1 \n##                 5                 4                 1                 0 \n##  TAGTACCTCCTCCA.1  TAGTACCTCTAGCA.1  TAGTATGAAGCTAC.1  TAGTATGACCGCTT.1 \n##                 1                 4                 0                 2 \n##  TAGTATGACTACGA.1  TAGTCACTCATTCT.1  TAGTCACTCTAAGC.1  TAGTCACTGGGACA.1 \n##                 1                 0                 2                 2 \n##  TAGTCACTTGACTG.1  TAGTCGGAAGTCGT.1  TAGTCGGACAGAGG.1  TAGTCGGATACTGG.1 \n##                 2                 2                 0                 4 \n##  TAGTCGGATCCTAT.1  TAGTCGGATGATGC.1  TAGTCTTGGAAAGT.1  TAGTCTTGGGGATG.1 \n##                 1                 1                 4                 8 \n##  TAGTCTTGGTTGAC.1  TAGTCTTGTAGCCA.1  TAGTCTTGTCCCGT.1  TAGTGGTGAAAAGC.1 \n##                 7                 0                 3                10 \n##  TAGTGGTGAGTCTG.1  TAGTGGTGAGTGTC.1  TAGTGGTGCACTCC.1  TAGTGGTGCTGGAT.1 \n##                10                 1                 0                10 \n##  TAGTGGTGGAATCC.1  TAGTGGTGGGACAG.1  TAGTGGTGGGGTGA.1  TAGTTAGAAAACAG.1 \n##                 2                 1                 1                 1 \n##  TAGTTAGAGGACGA.1  TAGTTAGAGTCAAC.1  TAGTTCACAACGTC.1  TAGTTCACAAGGTA.1 \n##                 8                 7                 2                 0 \n##  TAGTTCACCTGACA.1  TAGTTCACGTTGAC.1  TAGTTCACTCAGTG.1  TAGTTCACTGTCGA.1 \n##                 0                 0                 7                 8 \n##  TAGTTGCTCTACTT.1  TAGTTGCTTATCGG.1  TAGTTGCTTCGCCT.1  TAGTTGCTTGCCCT.1 \n##                 6                 2                 2                 0 \n##  TATAAGACGCTGAT.1  TATAAGTGAGCATC.1  TATAAGTGTTACTC.1  TATACAGACTGTAG.1 \n##                 0                 1                 0                 4 \n##  TATACAGAGACGTT.1  TATACAGAGTGTCA.1  TATACAGATAGAGA.1  TATACAGATTCCAT.1 \n##                 0                 1                 2                 0 \n##  TATACCACAAAACG.1  TATACCACCTGTGA.1  TATACCACGCAAGG.1  TATACCACTTATCC.1 \n##                 0                 1                 2                 2 \n##  TATACGCTAGGGTG.1  TATACGCTATGTGC.1  TATACGCTGTCATG.1  TATACGCTTCGCCT.1 \n##                 6                 1                 9                 5 \n##  TATACGCTTGCCAA.1  TATAGATGCTTCGC.1  TATAGATGGCTGAT.1  TATAGATGTGCAAC.1 \n##                 5                 2                 0                 0 \n##  TATAGCCTATCAGC.1  TATAGCCTCTCGCT.1  TATAGCCTGTAAAG.1  TATAGCCTTCTTTG.1 \n##                 1                 0                 0                 6 \n##  TATAGCCTTGCTTT.1  TATAGCCTTTCTTG.1  TATAGCCTTTGACG.1  TATCAAGACGTAGT.1 \n##                 4                 1                 0                 7 \n##  TATCAAGATCTCTA.1  TATCAAGATTCTAC.1  TATCACTGACCTTT.1  TATCACTGCACTCC.1 \n##                 1                 0                 1                 4 \n##  TATCACTGCCTCCA.1  TATCACTGGTCGTA.1  TATCACTGTAACCG.1  TATCAGCTAGTAGA.1 \n##                 2                 1                 1                 3 \n##  TATCAGCTCCAACA.1  TATCAGCTCCTGAA.1  TATCAGCTTGAACC.1  TATCAGCTTTATCC.1 \n##                 3                 1                 1                 4 \n##  TATCAGCTTTTACC.1  TATCCAACCTCTAT.1  TATCCAACCTTTAC.1  TATCCAACTTTGTC.1 \n##                 1                 2                 0                 3 \n##  TATCCTGAAGTGCT.1  TATCCTGACCCAAA.1  TATCCTGAGGATTC.1  TATCCTGATGACAC.1 \n##                 1                 3                 1                 3 \n##  TATCCTGATGCCTC.1  TATCGACTAAGATG.1  TATCGACTACGACT.1  TATCGACTACTACG.1 \n##                 7                 1                 2                 0 \n##  TATCGACTAGCAAA.1  TATCGACTCACTCC.1  TATCGACTCGAGAG.1  TATCGACTTACGAC.1 \n##                 6                 3                 1                 0 \n##  TATCGACTTGCACA.1  TATCGACTTGGTGT.1  TATCGTACTATCGG.1  TATCGTACTTGCGA.1 \n##                 5                 0                 0                 4 \n##  TATCTCGAACAGCT.1  TATCTCGAGTAAAG.1  TATCTCGATCTATC.1  TATCTGACAAAAGC.1 \n##                 1                 4                 0                 0 \n##  TATCTGACTGTGAC.1  TATCTTCTAAGTAG.1  TATCTTCTAGAACA.1  TATCTTCTATCGAC.1 \n##                 2                 0                 1                 9 \n##  TATCTTCTCTCCCA.1  TATCTTCTGGGAGT.1  TATCTTCTTCTACT.1  TATCTTCTTTCGGA.1 \n##                 1                 1                 0                 2 \n##  TATGAATGATTCTC.1  TATGAATGCTTCGC.1  TATGAATGGCAAGG.1  TATGAATGGTATCG.1 \n##                 5                 1                 1                 0 \n##  TATGAATGTCTTAC.1  TATGAATGTTTCGT.1  TATGCGGAAGTCAC.1  TATGCGGAATTCGG.1 \n##                 5                 1                 1                 0 \n##  TATGCGGACGTCTC.1  TATGCGGACTATTC.1  TATGGGACACCCAA.1  TATGGGACATCGTG.1 \n##                 6                 0                 8                 9 \n##  TATGGGACGGAAGC.1  TATGGGACGTTGCA.1  TATGGGACTACTCT.1  TATGGGTGCAGGAG.1 \n##                 6                 6                 1                 5 \n##  TATGGGTGGCCATA.1  TATGGGTGGTAGCT.1  TATGGTCTACACCA.1  TATGGTCTCCGAAT.1 \n##                 3                 1                 9                 0 \n##  TATGGTCTTGCATG.1  TATGTCACCAACCA.1  TATGTCACCTCATT.1  TATGTCACCTGACA.1 \n##                 1                12                 9                 0 \n##  TATGTCACTATCTC.1  TATGTCACTCGTAG.1  TATGTCTGCTGCAA.1  TATGTCTGGAACCT.1 \n##                 1                 0                 0                 0 \n##  TATGTCTGGTGAGG.1  TATGTCTGTAGAGA.1  TATGTCTGTGATGC.1  TATGTGCTATGGTC.1 \n##                12                 0                 1                 0 \n##  TATGTGCTCTCCAC.1  TATGTGCTCTTGAG.1  TATGTGCTTCAGTG.1  TATTGCTGAATCGC.1 \n##                 0                 0                 2                 2 \n##  TATTGCTGAGAGAT.1  TATTGCTGCAACTG.1  TATTGCTGCGCTAA.1  TATTGCTGTATCTC.1 \n##                 2                 1                 3                 1 \n##  TATTGCTGTATGGC.1  TATTGCTGTGGTGT.1  TATTTCCTAACCGT.1  TATTTCCTAAGTGA.1 \n##                 0                 2                 0                 4 \n##  TATTTCCTACGCTA.1  TATTTCCTAGGGTG.1  TATTTCCTCCTAAG.1  TATTTCCTCGGAGA.1 \n##                 0                 1                 1                 0 \n##  TATTTCCTGTATGC.1  TCAACACTAGCGTT.1  TCAACACTATCGAC.1  TCAACACTGGCAAG.1 \n##                 1                 2                 4                 1 \n##  TCAACACTTGGTAC.1  TCAAGGACCCGTTC.1  TCAAGGACCTTCCG.1  TCAAGGACGGAGCA.1 \n##                 0                 0                 2                 4 \n##  TCAAGGTGAGATGA.1  TCAAGGTGCAATCG.1  TCAAGGTGCTCAAG.1  TCAAGGTGTAGAAG.1 \n##                 2                 1                 3                 3 \n##  TCAAGGTGTCTCGC.1  TCAAGGTGTCTTCA.1  TCAAGTCTACCATG.1  TCAAGTCTCTCATT.1 \n##                 1                 2                 3                10 \n##  TCAAGTCTCTTATC.1  TCAAGTCTGAAAGT.1  TCAAGTCTGTCATG.1  TCAAGTCTGTTAGC.1 \n##                 5                 1                 6                 0 \n##  TCAAGTCTTACTTC.1  TCAAGTCTTAGCCA.1  TCAAGTCTTCTAGG.1  TCAAGTCTTGTCGA.1 \n##                 2                 2                 1                 2 \n##  TCAATAGAAGCTAC.1  TCAATAGAGCGATT.1  TCAATAGAGTAGGG.1  TCAATAGATTTGCT.1 \n##                 0                 0                 0                 2 \n##  TCAATCACACGGGA.1  TCAATCACCTTGCC.1  TCAATCACGGAGGT.1  TCAATCACGGGATG.1 \n##                 0                 6                 1                 9 \n##  TCAATCACTTGAGC.1  TCACAACTACCTGA.1  TCACAACTGGTGGA.1  TCACAACTGGTTTG.1 \n##                 5                 6                 0                 0 \n##  TCACAACTTGCATG.1  TCACAACTTTTCTG.1  TCACATACAACTGC.1  TCACATACCTTGCC.1 \n##                 1                 5                 0                 0 \n##  TCACATACGGTCAT.1  TCACATACTTTCAC.1  TCACCCGAACTGGT.1  TCACCCGAACTTTC.1 \n##                 2                 0                 0                 0 \n##  TCACCCGAATTCGG.1  TCACCCGATCCTCG.1  TCACCGTGAACCAC.1  TCACCGTGAAGGTA.1 \n##                 3                 8                 0                 0 \n##  TCACCGTGCTGAGT.1  TCACCGTGGCTTCC.1  TCACCGTGGGGCAA.1  TCACCGTGTAAGCC.1 \n##                 6                 0                 7                 2 \n##  TCACCGTGTGATGC.1  TCACCGTGTTCAGG.1  TCACCTCTAGGTTC.1  TCACCTCTCACTTT.1 \n##                 4                 5                 0                 1 \n##  TCACCTCTGAATGA.1  TCACCTCTGGACGA.1  TCACGAGAATTCGG.1  TCACGAGACCCGTT.1 \n##                 5                 5                 0                 2 \n##  TCACGAGAGCGATT.1  TCACGAGATCTACT.1  TCACGAGATGTCCC.1  TCACTATGATCACG.1 \n##                 1                 0                 2                 2 \n##  TCACTATGCACTAG.1  TCACTATGCGACAT.1  TCACTATGCTTCTA.1  TCACTATGTGACTG.1 \n##                 6                 0                 0                 3 \n##  TCACTATGTTCATC.1  TCACTATGTTGAGC.1  TCAGACGAAACCAC.1  TCAGACGAGGTCAT.1 \n##                 5                 8                 1                 0 \n##  TCAGAGACAAGCCT.1  TCAGAGACCTCTAT.1  TCAGAGACCTTGGA.1  TCAGAGACTCTGGA.1 \n##                 0                 7                 0                 1 \n##  TCAGAGACTTTCGT.1  TCAGCAGAAACCGT.1  TCAGCAGAACGTGT.1  TCAGCAGAAGAACA.1 \n##                 0                 6                 3                 0 \n##  TCAGCAGATAAAGG.1  TCAGCAGATTTGGG.1  TCAGCGCTAAGGTA.1  TCAGCGCTACACTG.1 \n##                 5                 5                 1                 0 \n##  TCAGCGCTCCTTAT.1  TCAGCGCTGGTCAT.1  TCAGCGCTTGGAGG.1  TCAGGATGAGCACT.1 \n##                 5                 0                 2                 1 \n##  TCAGGATGCTCAAG.1  TCAGGATGGCATCA.1  TCAGGATGGCGAAG.1  TCAGGATGTAAGCC.1 \n##                 0                 1                 1                 0 \n##  TCAGGATGTCCTAT.1  TCAGGATGTGCATG.1  TCAGGATGTGGTCA.1  TCAGGATGTTGCTT.1 \n##                 4                 0                 2                 0 \n##  TCAGTACTAAGAAC.1  TCAGTACTACTGTG.1  TCAGTACTCCACCT.1  TCAGTACTCCCTTG.1 \n##                 0                 4                 2                 2 \n##  TCAGTACTGCTGTA.1  TCAGTACTTGTTTC.1  TCAGTGGAATCGGT.1  TCAGTGGACAATCG.1 \n##                 3                 3                 0                12 \n##  TCAGTGGAGGAGGT.1  TCAGTTACCTCCCA.1  TCAGTTACGAGGGT.1  TCATCAACCGTTGA.1 \n##                 7                 2                 0                 1 \n##  TCATCAACGTTCTT.1  TCATCAACTATGCG.1  TCATCAACTCACCC.1  TCATCATGCACTCC.1 \n##                 4                 0                 0                 1 \n##  TCATCATGCAGCTA.1  TCATCCCTAACGGG.1  TCATCCCTACACGT.1  TCATCCCTAGCGGA.1 \n##                 8                 0                 3                 0 \n##  TCATCCCTCCCACT.1  TCATGTACAAAAGC.1  TCATGTACATCGTG.1  TCATGTACTGACAC.1 \n##                 0                 0                 1                 1 \n##  TCATTCGAATCACG.1  TCATTCGAGATACC.1  TCATTCGATGCAAC.1  TCATTGACACCATG.1 \n##                 0                 0                 5                 2 \n##  TCATTGACACCCTC.1  TCATTGACACGCTA.1  TCATTGACCTGATG.1  TCATTGACTGCCTC.1 \n##                 3                 0                 3                 4 \n##  TCCACGTGCGTGTA.1  TCCACGTGCTTACT.1  TCCACGTGTCGTTT.1  TCCACGTGTGCAGT.1 \n##                 0                 3                 0                 2 \n##  TCCACGTGTGTGGT.1  TCCACTCTAAAGCA.1  TCCACTCTGGGTGA.1  TCCAGAGAACTACG.1 \n##                 0                 0                 2                 1 \n##  TCCAGAGAATAAGG.1  TCCAGAGATAGAGA.1  TCCAGAGATCTCGC.1  TCCATAACCCTTCG.1 \n##                 0                 1                 9                 2 \n##  TCCATAACGGAAAT.1  TCCATAACGTATGC.1  TCCATCCTAGCCTA.1  TCCATCCTGGAACG.1 \n##                 4                 0                 0                 0 \n##  TCCATCCTTCGCAA.1  TCCCACGACTGGTA.1  TCCCACGATCCTAT.1  TCCCAGACAGCCAT.1 \n##                 4                 1                 1                 0 \n##  TCCCAGACCAAAGA.1  TCCCAGACTTCTTG.1  TCCCAGACTTGTCT.1  TCCCATCTCGTACA.1 \n##                 8                 8                 1                 0 \n##  TCCCATCTGCTACA.1  TCCCATCTGGAAAT.1  TCCCATCTTGAGGG.1  TCCCGAACACGCAT.1 \n##                 0                 4                 6                 0 \n##  TCCCGAACAGTTCG.1  TCCCGAACCAGATC.1  TCCCGAACGCCAAT.1  TCCCGAACTCCTCG.1 \n##                 0                 2                 1                 0 \n##  TCCCGATGACGTTG.1  TCCCGATGAGCATC.1  TCCCGATGCTACCC.1  TCCCGATGGTTAGC.1 \n##                 6                 6                 0                 4 \n##  TCCCTACTAACCTG.1  TCCCTACTACTGTG.1  TCCCTACTAGATGA.1  TCCCTACTCAACCA.1 \n##                 8                 6                 6                 5 \n##  TCCCTACTCCTTAT.1  TCCCTACTCTGGTA.1  TCCCTACTGATGAA.1  TCCCTACTTGAGAA.1 \n##                 0                 1                 1                 2 \n##  TCCCTACTTGCTCC.1  TCCGAAGAACCTGA.1  TCCGAAGATACTTC.1  TCCGAAGATATGCG.1 \n##                 6                 4                 0                 5 \n##  TCCGAGCTAGATGA.1  TCCTAAACAAGTGA.1  TCCTAAACCGCATA.1  TCCTAAACGCATAC.1 \n##                 1                 6                 0                 4 \n##  TCCTAATGAGCACT.1  TCCTAATGCTGCAA.1  TCCTAATGCTTGTT.1  TCCTAATGGGTAAA.1 \n##                 2                 0                 5                 1 \n##  TCCTAATGTCTGGA.1  TCCTAATGTGTGGT.1  TCCTAATGTTCATC.1  TCCTACCTACAGCT.1 \n##                 1                 1                 4                 1 \n##  TCCTACCTCTCAGA.1  TCCTACCTTGAGGG.1  TCCTATGAAGCCTA.1  TCCTATGAAGCTAC.1 \n##                 0                 1                 8                 0 \n##  TCCTATGATAAAGG.1  TCCTATGATATCTC.1  TCGAATCTCCTCAC.1  TCGAATCTCCTTCG.1 \n##                 3                 0                 5                 0 \n##  TCGAATCTCTTCGC.1  TCGAATCTGTACGT.1  TCGAATCTTTCATC.1  TCGACCTGACCTGA.1 \n##                 0                 2                 0                 3 \n##  TCGACCTGTCATTC.1  TCGACCTGTTATCC.1  TCGACGCTCAGCTA.1  TCGACGCTGAGCTT.1 \n##                 0                 6                 1                 3 \n##  TCGACGCTGGTTCA.1  TCGACGCTTAGAGA.1  TCGAGAACGGTAAA.1  TCGAGAACTCTCCG.1 \n##                 0                 1                 2                 0 \n##  TCGAGAACTGCAAC.1  TCGAGAACTGCTTT.1  TCGAGCCTCCTCGT.1  TCGAGCCTCCTTAT.1 \n##                 0                 1                 1                 0 \n##  TCGAGCCTGACGGA.1  TCGATACTAGAACA.1  TCGATACTCACAAC.1  TCGATTTGACGGAG.1 \n##                 0                 7                 0                 1 \n##  TCGATTTGGATACC.1  TCGATTTGGGTGGA.1  TCGATTTGGTCAAC.1  TCGATTTGTGACAC.1 \n##                 2                 1                 1                 0 \n##  TCGATTTGTGCCTC.1  TCGATTTGTGCTTT.1  TCGCAAGACAGAAA.1  TCGCAAGAGCGATT.1 \n##                 5                 2                 1                12 \n##  TCGCAAGATGAGCT.1  TCGCAAGATGCCAA.1  TCGCAAGATGCCTC.1  TCGCACACCCTTGC.1 \n##                 0                 0                 2                 0 \n##  TCGCACACGGTTTG.1  TCGCACACTACTTC.1  TCGCACACTAGCCA.1  TCGCACACTGGAAA.1 \n##                 6                 0                 1                 5 \n##  TCGCACACTGGTGT.1  TCGCACTGACTCAG.1  TCGCACTGATGGTC.1  TCGCACTGATTCCT.1 \n##                 1                 8                 0                 2 \n##  TCGCACTGCTCGCT.1  TCGCACTGCTGATG.1  TCGCACTGGGTCTA.1  TCGCACTGTACAGC.1 \n##                 0                 0                 1                 0 \n##  TCGCACTGTTAGGC.1  TCGCACTGTTGCAG.1  TCGCAGCTGCCATA.1  TCGCCATGAGCTAC.1 \n##                 5                 7                 5                 7 \n##  TCGCCATGATGTCG.1  TCGCCATGCAACTG.1  TCGCCATGCATTGG.1  TCGCCATGCCGATA.1 \n##                 2                13                 0                 7 \n##  TCGCCATGCCTTAT.1  TCGCCATGCGGGAA.1  TCGCCATGCGTAGT.1  TCGCCATGCTGCAA.1 \n##                 9                 1                 2                 4 \n##  TCGCCATGTATTCC.1  TCGGACCTCCTATT.1  TCGGACCTCTCAAG.1  TCGGACCTCTCATT.1 \n##                 6                 2                 2                 0 \n##  TCGGCACTCCCACT.1  TCGGCACTGGTATC.1  TCGGCACTTGTCAG.1  TCGTAGGACGAGTT.1 \n##                 0                 2                10                 1 \n##  TCGTAGGACTGTTT.1  TCGTAGGATGCTCC.1  TCGTGAGAACCCTC.1  TCGTGAGAACGCTA.1 \n##                 3                 8                 3                 0 \n##  TCGTGAGACCTATT.1  TCGTGAGAGGTGAG.1  TCGTTATGAAGATG.1  TCGTTATGAGAGAT.1 \n##                 1                 0                 3                 1 \n##  TCGTTATGAGATCC.1  TCGTTATGCTGTCC.1  TCGTTATGGACACT.1  TCGTTATGGTCATG.1 \n##                 0                 0                 5                 3 \n##  TCGTTATGTTCAGG.1  TCTAACACAAAAGC.1  TCTAACACATTTCC.1  TCTAACACGAATGA.1 \n##                 3                 0                 0                 0 \n##  TCTAACACGCTAAC.1  TCTAACACTCTGGA.1  TCTAACACTGCAAC.1  TCTAACACTGGTTG.1 \n##                 0                 6                 9                 0 \n##  TCTAACTGAAGGGC.1  TCTAACTGGCGAGA.1  TCTAAGCTCTCTAT.1  TCTAAGCTTGGAGG.1 \n##                 0                 2                 0                 4 \n##  TCTACAACAACAGA.1  TCTACAACAACCAC.1  TCTACAACAGGCGA.1  TCTACAACCGATAC.1 \n##                 7                 0                 1                 0 \n##  TCTAGACTCAAGCT.1  TCTAGACTCGTCTC.1  TCTAGACTTGGGAG.1  TCTAGACTTTGGTG.1 \n##                 4                 1                 4                 9 \n##  TCTAGTTGACCCAA.1  TCTAGTTGAGAACA.1  TCTAGTTGATTGGC.1  TCTAGTTGCCATGA.1 \n##                 3                 9                 4                 2 \n##  TCTAGTTGGAAAGT.1  TCTAGTTGTCTTAC.1  TCTATGTGAGAACA.1  TCTATGTGCCGTAA.1 \n##                 1                 9                 2                 6 \n##  TCTATGTGGATAAG.1  TCTATGTGGTGAGG.1  TCTATGTGTTCTCA.1  TCTCAAACAAGGGC.1 \n##                 3                 3                 0                 2 \n##  TCTCAAACACCTCC.1  TCTCAAACCTTGAG.1  TCTCAAACTCCAAG.1  TCTCAAACTGGTCA.1 \n##                 0                 1                 7                 1 \n##  TCTCCACTCAAAGA.1  TCTCCACTCCCTAC.1  TCTCCACTCTACCC.1  TCTCCACTGGTCTA.1 \n##                 0                 1                10                 3 \n##  TCTCCACTTTCTGT.1  TCTCTAGAACTTTC.1  TCTCTAGAGGAACG.1  TCTCTAGAGGAGCA.1 \n##                 7                 0                 8                 0 \n##  TCTCTAGATGGGAG.1  TCTCTAGATTCCGC.1  TCTCTAGATTCGTT.1  TCTGATACCGTGAT.1 \n##                 2                 0                 0                 1 \n##  TCTGATACGGAACG.1  TCTGATACTTACCT.1  TCTGATACTTGTCT.1  TCTTACGAAGAATG.1 \n##                 0                 2                 8                 0 \n##  TCTTACGAGAAGGC.1  TCTTACGAGGTAGG.1  TCTTACGATCGCCT.1  TCTTCAGAACCTAG.1 \n##                 0                 3                 3                 1 \n##  TCTTCAGAAGTAGA.1  TCTTCAGACGACTA.1  TCTTCAGAGTCCTC.1  TCTTGATGGACGAG.1 \n##                 6                 0                 1                 4 \n##  TCTTGATGGCGATT.1  TCTTGATGGCTTAG.1  TCTTGATGTTCGCC.1  TGAAATTGCTCTAT.1 \n##                 2                10                 0                 3 \n##  TGAAATTGGTGCAT.1  TGAAATTGTCCAGA.1  TGAAATTGTCTAGG.1  TGAACCGATAGCCA.1 \n##                 7                 0                 4                 5 \n##  TGAAGCACCTGTGA.1  TGAAGCACGTACCA.1  TGAAGCACTTACTC.1  TGAAGCTGCGAACT.1 \n##                 4                 9                 8                 7 \n##  TGAAGCTGGGCAAG.1  TGAAGCTGTATGCG.1  TGAATAACACCGAT.1  TGAATAACCTGGAT.1 \n##                 0                 1                11                 1 \n##  TGAATAACTCTAGG.1  TGAATAACTTGCGA.1  TGACACGAAAGTGA.1  TGACACGACATACG.1 \n##                 1                 4                 0                 3 \n##  TGACACGACCACCT.1  TGACACGAGGATCT.1  TGACACGAGGTAAA.1  TGACACGAGTACCA.1 \n##                 1                 1                 9                 0 \n##  TGACCAGAAAGGTA.1  TGACCAGAATCGAC.1  TGACCAGACCAATG.1  TGACCAGATCAGTG.1 \n##                 5                 5                 3                 0 \n##  TGACCAGATGCACA.1  TGACCAGATTCTCA.1  TGACCGCTCTAGCA.1  TGACCGCTCTGGTA.1 \n##                 0                 1                 2                 1 \n##  TGACCGCTTAAGGA.1  TGACGAACTGTCTT.1  TGACGATGACACGT.1  TGACGATGTCAAGC.1 \n##                 6                 3                 3                 7 \n##  TGACGATGTCTGGA.1  TGACGCCTAGTTCG.1  TGACGCCTCACCAA.1  TGACGCCTCAGTCA.1 \n##                 0                 0                 4                 0 \n##  TGACGCCTCGTGTA.1  TGACGCCTGCCCTT.1  TGACGCCTGCCTTC.1  TGACGCCTTCTGGA.1 \n##                 3                 6                 4                 7 \n##  TGACGCCTTGTAGC.1  TGACTGGAAGGAGC.1  TGACTGGACACTTT.1  TGACTGGACTCTTA.1 \n##                 0                 1                 0                 0 \n##  TGACTGGAGCCCTT.1  TGACTGGAGTCTAG.1  TGACTGGATAACCG.1  TGACTGGATCGATG.1 \n##                 2                 0                 5                 5 \n##  TGACTTACAGAAGT.1  TGACTTACGGTGTT.1  TGACTTACTAAAGG.1  TGACTTACTGAACC.1 \n##                 0                 0                 2                 0 \n##  TGACTTTGAGATGA.1  TGACTTTGCTGACA.1  TGACTTTGTGGCAT.1  TGACTTTGTTCATC.1 \n##                 0                 0                 4                 2 \n##  TGAGACACAAAAGC.1  TGAGACACGCGTAT.1  TGAGACACGCTTAG.1  TGAGACACGGGACA.1 \n##                 3                 0                 7                 5 \n##  TGAGACACTCTTAC.1  TGAGACACTTTGTC.1  TGAGCAACAGAGAT.1  TGAGCAACCTCAGA.1 \n##                 3                 0                 1                 2 \n##  TGAGCAACGATAAG.1  TGAGCTGAAAGATG.1  TGAGCTGAAGTACC.1  TGAGCTGACAGCTA.1 \n##                 6                 4                 2                 0 \n##  TGAGCTGACCGATA.1  TGAGCTGATAGCCA.1  TGAGCTGATCGTGA.1  TGAGCTGATGTGCA.1 \n##                 9                 2                 7                 1 \n##  TGAGGACTGACTAC.1  TGAGGACTTTTCGT.1  TGAGGTACAGGCGA.1  TGAGGTACAGTCTG.1 \n##                 0                 6                 2                 0 \n##  TGAGGTACATGCTG.1  TGAGGTACGGTCAT.1  TGAGGTACGTTAGC.1  TGAGGTACTATCGG.1 \n##                 1                 0                 1                 2 \n##  TGAGGTACTCACGA.1  TGAGGTACTCTCCG.1  TGAGTCGACCTATT.1  TGAGTCGAGCGTAT.1 \n##                 0                 4                 3                 0 \n##  TGAGTCGATAACCG.1  TGAGTCGATATCTC.1  TGAGTCGATCTATC.1  TGAGTGACAAGGCG.1 \n##                 8                 5                 0                 7 \n##  TGAGTGACAGAGTA.1  TGAGTGACCCAATG.1  TGAGTGACTCCTCG.1  TGAGTGACTTTCGT.1 \n##                 0                10                 0                 5 \n##  TGATAAACAGGTTC.1  TGATAAACCCGTAA.1  TGATACCTATGTGC.1  TGATACCTCGGTAT.1 \n##                 6                 0                 6                 0 \n##  TGATACCTTCCTTA.1  TGATATGATGTTCT.1  TGATCACTCCTCGT.1  TGATCACTTGGCAT.1 \n##                 6                 2                 1                 2 \n##  TGATCGGACTCTCG.1  TGATCGGAGGTAAA.1  TGATCGGATCGCAA.1  TGATCGGATGTAGC.1 \n##                 1                 4                 0                 4 \n##  TGATTAGACCCGTT.1  TGATTCACCAGCTA.1  TGATTCACCCTTCG.1  TGATTCACCGAATC.1 \n##                 0                 6                 6                 0 \n##  TGATTCACGGCGAA.1  TGATTCACTAGCGT.1  TGATTCTGACGTTG.1  TGATTCTGATTCCT.1 \n##                 4                 0                 1                 6 \n##  TGATTCTGGCTATG.1  TGATTCTGGTAGGG.1  TGATTCTGTCAGGT.1  TGCAACGACACACA.1 \n##                 4                 0                 0                 4 \n##  TGCAACGACCCAAA.1  TGCAACGAGGAGCA.1  TGCAACGATCAAGC.1  TGCAAGACCTTGCC.1 \n##                 1                 8                 5                 0 \n##  TGCAAGTGACACTG.1  TGCAAGTGCTCCAC.1  TGCAAGTGGAATAG.1  TGCAAGTGGTAGGG.1 \n##                10                 1                 7                 2 \n##  TGCAAGTGGTCTTT.1  TGCAAGTGTCTAGG.1  TGCAAGTGTGGTTG.1  TGCAAGTGTTCCGC.1 \n##                 0                 0                 0                 2 \n##  TGCAATCTAAGTGA.1  TGCAATCTACGCAT.1  TGCACAGAAAGCAA.1  TGCACAGATCGCAA.1 \n##                 4                 0                 1                 1 \n##  TGCACAGATTTGTC.1  TGCACGCTCAGAAA.1  TGCACGCTGGTTAC.1  TGCAGATGACGTTG.1 \n##                 0                 5                 0                 0 \n##  TGCAGATGAGCGGA.1  TGCAGATGGCTCCT.1  TGCAGATGTCGTTT.1  TGCAGATGTTGGCA.1 \n##                 2                 1                 0                 1 \n##  TGCATGGACTGCAA.1  TGCATGGATGTGGT.1  TGCCAAGAACCAGT.1  TGCCAAGACTCGCT.1 \n##                 1                 3                 0                 0 \n##  TGCCAAGATAGACC.1  TGCCAAGATCAGTG.1  TGCCACTGCACTAG.1  TGCCACTGCTAGCA.1 \n##                 2                 7                 1                 7 \n##  TGCCACTGCTGTGA.1  TGCCACTGGGTGTT.1  TGCCACTGTATGGC.1  TGCCACTGTCGCCT.1 \n##                 0                 7                 0                 0 \n##  TGCCAGCTAGCACT.1  TGCCAGCTCCGCTT.1  TGCCAGCTGCTATG.1  TGCCCAACAGGTTC.1 \n##                 0                 2                 9                 0 \n##  TGCCCAACCACTGA.1  TGCCCAACCTGACA.1  TGCCCAACGCCATA.1  TGCCCAACTTCTGT.1 \n##                 9                 1                 4                 0 \n##  TGCCGACTATCGTG.1  TGCCGACTATGCTG.1  TGCCGACTGCATCA.1  TGCCGACTGTGTAC.1 \n##                 3                 1                 0                 1 \n##  TGCCGACTTATGCG.1  TGCCGACTTGCAGT.1  TGCGAAACCGCTAA.1  TGCGAAACGCATCA.1 \n##                 2                 0                10                 1 \n##  TGCGAAACGCCATA.1  TGCGAAACGGGATG.1  TGCGAAACTGAAGA.1  TGCGATGAAAAAGC.1 \n##                 0                 2                 8                 0 \n##  TGCGATGACTGTGA.1  TGCGATGATCGTGA.1  TGCGATGATGGAGG.1  TGCGATGATGTGCA.1 \n##                 4                 2                 0                 5 \n##  TGCGATGATTCGGA.1  TGCGCACTAGGGTG.1  TGCGCACTAGTTCG.1  TGCGTAGACTCTTA.1 \n##                 4                 2                 0                 4 \n##  TGCGTAGAGTCGTA.1  TGCGTAGATAAGGA.1  TGCGTAGATTTCGT.1  TGCTAGGACCGAAT.1 \n##                 2                 4                 3                 1 \n##  TGCTAGGACCGTAA.1  TGCTAGGACTTACT.1  TGCTAGGAGTACGT.1  TGCTATACCGCAAT.1 \n##                 4                 4                 8                 4 \n##  TGCTATACTCAAGC.1  TGCTATACTGAGAA.1  TGCTATACTTAGGC.1  TGCTGAGAGCGTTA.1 \n##                 2                 1                 0                 4 \n##  TGCTGAGAGTGTCA.1  TGCTGAGATCCTAT.1  TGCTGAGATGCTAG.1  TGCTTAACACTGTG.1 \n##                 4                 0                 0                 1 \n##  TGCTTAACATTCCT.1  TGCTTAACTTTCTG.1  TGGAAAGAACACCA.1  TGGAAAGAAGTTCG.1 \n##                 3                 0                 0                 0 \n##  TGGAAAGAGGATTC.1  TGGAAAGATTCCCG.1  TGGAACACTCTCCG.1  TGGAACACTTATCC.1 \n##                10                 1                 0                 0 \n##  TGGAACTGTAAGGA.1  TGGAACTGTCTCTA.1  TGGAAGCTGATAGA.1  TGGAAGCTGGCATT.1 \n##                 5                 0                 1                 0 \n##  TGGAAGCTTCCGTC.1  TGGACCCTGGGATG.1  TGGACCCTGTACGT.1  TGGACCCTTCGCTC.1 \n##                 1                 0                 3                 7 \n##  TGGACCCTTTGCAG.1  TGGACTGAAACTGC.1  TGGACTGAAGATGA.1  TGGACTGACCAAGT.1 \n##                 6                 7                 1                 0 \n##  TGGACTGATCGCTC.1  TGGACTGATGCCCT.1  TGGAGACTACTTTC.1  TGGAGACTAGCAAA.1 \n##                 3                 1                 0                 1 \n##  TGGAGACTCTTTAC.1  TGGAGACTGCCTTC.1  TGGAGACTTAAGGA.1  TGGAGGGAACTGTG.1 \n##                 0                 2                 1                 5 \n##  TGGAGGGAGGTTAC.1  TGGAGGGATATCTC.1  TGGAGGGATGTAGC.1  TGGATCGAGCGTTA.1 \n##                 1                 0                 1                 1 \n##  TGGATCGAGTGTCA.1  TGGATCGATCCTGC.1  TGGATCGATCGCCT.1  TGGATCGATGCAAC.1 \n##                 4                 0                 6                 2 \n##  TGGATGACAGCAAA.1  TGGATGTGAAGAGT.1  TGGATGTGAGCTAC.1  TGGATGTGCACTTT.1 \n##                 0                 2                 4                 2 \n##  TGGATGTGCATTTC.1  TGGATGTGGTATCG.1  TGGATGTGGTTGTG.1  TGGATGTGTAGCGT.1 \n##                 0                 3                 2                 2 \n##  TGGATGTGTCTTAC.1  TGGATGTGTGCTCC.1  TGGATGTGTGTGCA.1  TGGATTCTATAAGG.1 \n##                 0                 6                 2                 0 \n##  TGGATTCTCAGTCA.1  TGGATTCTGAGGAC.1  TGGATTCTGTCACA.1  TGGCAATGAGAAGT.1 \n##                 0                 0                 5                 9 \n##  TGGCAATGAGGGTG.1  TGGCAATGATACCG.1  TGGCAATGATCACG.1  TGGCAATGCCATAG.1 \n##                 3                 0                 2                 4 \n##  TGGCAATGCTACGA.1  TGGCAATGGGTCTA.1  TGGCAATGTGCCTC.1  TGGCAATGTGTTCT.1 \n##                 0                 7                 0                 1 \n##  TGGCACCTACAGTC.1  TGGCACCTGATAAG.1  TGGGTATGACCATG.1  TGGGTATGAGATCC.1 \n##                 7                 0                 0                 0 \n##  TGGGTATGCGATAC.1  TGGGTATGCGGAGA.1  TGGGTATGGACACT.1  TGGGTATGTACTGG.1 \n##                12                 0                 2                 1 \n##  TGGGTATGTGGTAC.1  TGGGTATGTTGACG.1  TGGTACGAACCTAG.1  TGGTACGAAGCTAC.1 \n##                 0                 2                 0                 0 \n##  TGGTACGACTTAGG.1  TGGTACGATACGAC.1  TGGTAGACACCACA.1  TGGTAGACACCCTC.1 \n##                 0                 1                 0                 3 \n##  TGGTAGACGGAGTG.1  TGGTAGACGTTCAG.1  TGGTAGACTAACCG.1  TGGTAGACTACTGG.1 \n##                 8                 7                 7                 0 \n##  TGGTAGACTCTTTG.1  TGGTAGTGAAGAAC.1  TGGTAGTGACTACG.1  TGGTAGTGGGACTT.1 \n##                 1                 7                 0                 0 \n##  TGGTAGTGGTCATG.1  TGGTAGTGTGTGAC.1  TGGTATCTAAGTAG.1  TGGTATCTACAGCT.1 \n##                 6                 2                 0                 3 \n##  TGGTATCTAGCTAC.1  TGGTATCTCGGAGA.1  TGGTATCTTTCGCC.1  TGGTCAGAAGGTTC.1 \n##                 4                 7                 5                 2 \n##  TGGTCAGATTCACT.1  TGGTTACTCCATAG.1  TGGTTACTGCGTTA.1  TGGTTACTTTCTTG.1 \n##                 2                 0                 0                 0 \n##  TGGTTACTTTGCTT.1  TGGTTACTTTGGTG.1  TGTAAAACAGGGTG.1  TGTAAAACATACCG.1 \n##                 0                 0                 0                 1 \n##  TGTAAAACCAACTG.1  TGTAAAACCAGATC.1  TGTAAAACCTCGAA.1  TGTAAAACGAAAGT.1 \n##                 3                 7                 0                 6 \n##  TGTAACCTAAGTAG.1  TGTAACCTACGTAC.1  TGTAACCTCCACAA.1  TGTAACCTCCCTCA.1 \n##                 9                 0                 7                 0 \n##  TGTAACCTCTCCAC.1  TGTAACCTTTCATC.1  TGTAATGAACTTTC.1  TGTAATGAATCGGT.1 \n##                 1                 1                 0                 4 \n##  TGTAATGACAGTCA.1  TGTAATGACCCGTT.1  TGTAATGACCGATA.1  TGTAATGACTCGCT.1 \n##                 7                 2                 6                 5 \n##  TGTACTTGCACAAC.1  TGTACTTGCAGAGG.1  TGTACTTGCGACAT.1  TGTACTTGCGCATA.1 \n##                 6                 6                 4                 0 \n##  TGTACTTGGCAAGG.1  TGTACTTGGTTAGC.1  TGTACTTGTCCTAT.1  TGTACTTGTCGCAA.1 \n##                 2                 2                 2                 7 \n##  TGTACTTGTGTCTT.1  TGTAGGTGTCCCAC.1  TGTAGTCTACCCAA.1  TGTAGTCTGCGGAA.1 \n##                 0                 1                 1                 3 \n##  TGTAGTCTTAACCG.1  TGTAGTCTTCGCAA.1  TGTAGTCTTTGAGC.1  TGTATCTGAACGAA.1 \n##                 2                 2                 1                 0 \n##  TGTATCTGGTAAGA.1  TGTATCTGGTGTTG.1  TGTATGCTCGTCTC.1  TGTATGCTTCTCGC.1 \n##                 1                 1                 8                 2 \n##  TGTCAGGACATGAC.1  TGTCAGGACGAATC.1  TGTCAGGACTTGAG.1  TGTCTAACGGAGCA.1 \n##                 0                 9                 8                 6 \n##  TGTGACGAAACGTC.1  TGTGACGAAGCCTA.1  TGTGACGACAACCA.1  TGTGACGACCCTCA.1 \n##                 0                 0                 5                 0 \n##  TGTGACGAGAGATA.1  TGTGACGATCATTC.1  TGTGACGATCTAGG.1  TGTGAGACATTCCT.1 \n##                 1                 2                 6                 5 \n##  TGTGAGACCATACG.1  TGTGAGACCATGCA.1  TGTGAGACCGCAAT.1  TGTGAGTGAACCAC.1 \n##                 2                 2                 1                 0 \n##  TGTGAGTGAAGTAG.1  TGTGAGTGCTGATG.1  TGTGAGTGCTTCTA.1  TGTGAGTGTATTCC.1 \n##                 1                 5                 3                 2 \n##  TGTGAGTGTTATCC.1  TGTGAGTGTTTCAC.1  TGTGATCTTAACGC.1  TGTGGATGAGCCTA.1 \n##                13                 3                 1                 4 \n##  TGTGGATGGGCAAG.1  TGTGGATGGGTTCA.1  TGTGGATGTTACTC.1  TGTTAAGACAAAGA.1 \n##                 8                 7                 2                 6 \n##  TGTTAAGACTATTC.1  TGTTAAGAGTGTCA.1  TGTTAAGATTGTCT.1  TGTTACACAGTGCT.1 \n##                 0                 2                 1                 4 \n##  TGTTACACATCGAC.1  TGTTACACGTTCTT.1  TGTTACACTCCTAT.1  TGTTACACTGTAGC.1 \n##                 2                 9                 0                 0 \n##  TGTTACTGAAACAG.1  TGTTACTGAAAGCA.1  TGTTACTGCTTCCG.1  TGTTACTGGAGCTT.1 \n##                 2                 4                 7                 0 \n##  TGTTACTGTCAGTG.1  TGTTACTGTGCTCC.1  TTAACCACGGTGAG.1  TTAACCACTGTCAG.1 \n##                 1                 2                 2                 2 \n##  TTACAGCTCATGCA.1  TTACAGCTCGTGTA.1  TTACAGCTTACTGG.1  TTACCATGCCTATT.1 \n##                 1                 3                 0                 3 \n##  TTACCATGCCTTTA.1  TTACCATGGACAGG.1  TTACCATGTTCGTT.1  TTACGACTAACCTG.1 \n##                 6                 2                 9                 0 \n##  TTACGACTCCGCTT.1  TTACGACTCCTCCA.1  TTACGACTCTCAGA.1  TTACGACTGGACAG.1 \n##                 8                 1                 0                 4 \n##  TTACGACTTGCCCT.1  TTACGTACGTAAGA.1  TTACGTACTGTCAG.1  TTACGTACTGTGAC.1 \n##                 8                 1                 8                 0 \n##  TTACTCGAAACGAA.1  TTACTCGAACCAAC.1  TTAGAATGAAAGTG.1  TTAGAATGTGTGAC.1 \n##                 1                 1                 9                 7 \n##  TTAGACCTAAGAGT.1  TTAGACCTAGAATG.1  TTAGACCTAGTGTC.1  TTAGACCTCCATAG.1 \n##                12                 1                 0                 0 \n##  TTAGACCTGTTAGC.1  TTAGCTACTGTCAG.1  TTAGGGACAAGAGT.1  TTAGGGACAGCAAA.1 \n##                 6                 0                 6                 0 \n##  TTAGGGACCCACAA.1  TTAGGGACGTACGT.1  TTAGGGACTCTATC.1  TTAGGGACTGAAGA.1 \n##                 0                 4                 1                 1 \n##  TTAGGGTGACGCAT.1  TTAGGGTGAGCCTA.1  TTAGGGTGGCTGAT.1  TTAGGGTGTTTCGT.1 \n##                 2                 4                 5                 0 \n##  TTAGGTCTTCTGGA.1  TTAGGTCTTTGGTG.1  TTAGTCACCGAGTT.1  TTAGTCACGGTCAT.1 \n##                 1                 9                 0                 3 \n##  TTAGTCACTATGCG.1  TTAGTCACTGAGGG.1  TTAGTCTGAGTCGT.1  TTAGTCTGCTGTAG.1 \n##                 5                 4                 0                 1 \n##  TTAGTCTGGAAGGC.1  TTAGTCTGGCGAGA.1  TTAGTCTGTAGCCA.1  TTAGTCTGTGGATC.1 \n##                 2                 1                 0                 0 \n##  TTAGTCTGTTCACT.1  TTATCCGAAGGTTC.1  TTATCCGAGATACC.1  TTATCCGAGTGTTG.1 \n##                 6                 1                 3                 2 \n##  TTATCCGATCCTTA.1  TTATCCGATTGGCA.1  TTATGAGAGGCAAG.1  TTATGAGATACGCA.1 \n##                 5                 0                 1                 0 \n##  TTATGCACCACTAG.1  TTATGCACCCGCTT.1  TTATGCACCCTCAC.1  TTATGGCTCCTTCG.1 \n##                 1                 6                 1                 9 \n##  TTATGGCTGGTCAT.1  TTATGGCTTCATTC.1  TTATGGCTTGGAGG.1  TTATTCCTCCAACA.1 \n##                 1                 0                 1                 4 \n##  TTATTCCTCGTGTA.1  TTATTCCTGAGCTT.1  TTATTCCTGCGATT.1  TTATTCCTTCTCTA.1 \n##                 0                 0                 0                 0 \n##  TTATTCCTTCTTTG.1  TTCAAAGAACCCTC.1  TTCAAAGAAGGTCT.1  TTCAAAGACATGAC.1 \n##                 4                 0                 0                 0 \n##  TTCAAAGACCCGTT.1  TTCAAAGACGTCTC.1  TTCAAAGATAACCG.1  TTCAAAGATGACCA.1 \n##                 0                 1                 5                 2 \n##  TTCAAAGATTGACG.1  TTCAACACATGCCA.1  TTCAACACCAACTG.1  TTCAACACCTGTGA.1 \n##                 7                 5                 0                 5 \n##  TTCAAGCTACAGTC.1  TTCAAGCTGACAAA.1  TTCAAGCTGTACAC.1  TTCAAGCTGTTACG.1 \n##                 7                 0                 0                 1 \n##  TTCACAACATCTTC.1  TTCACAACCCGTTC.1  TTCACAACCTGAGT.1  TTCACAACTGACTG.1 \n##                 1                 0                 0                 3 \n##  TTCACAACTGCAAC.1  TTCACCCTACGACT.1  TTCACCCTGGTAGG.1  TTCACCCTTGCACA.1 \n##                 0                 2                 0                 0 \n##  TTCAGACTAAGGGC.1  TTCAGACTAGCCTA.1  TTCAGACTCCGAAT.1  TTCAGTACAGCCAT.1 \n##                 0                 0                 2                 2 \n##  TTCAGTACCTGTTT.1  TTCAGTACGCTAAC.1  TTCAGTACTTCGCC.1  TTCAGTTGAAAGCA.1 \n##                 1                 0                 4                12 \n##  TTCAGTTGCCCTTG.1  TTCAGTTGCGAATC.1  TTCAGTTGCGTCTC.1  TTCAGTTGCTACGA.1 \n##                 0                 9                 0                 2 \n##  TTCAGTTGTCTTTG.1  TTCATCGAGTCTGA.1  TTCATCGATCAGGT.1  TTCATCGATGAGAA.1 \n##                 0                 2                 0                 0 \n##  TTCATCGATTGCAG.1  TTCATGACAGCCAT.1  TTCATGACAGCGGA.1  TTCATGACCTGACA.1 \n##                 0                 5                 5                 8 \n##  TTCATGTGCGACTA.1  TTCATGTGCGTGAT.1  TTCATGTGCTCTAT.1  TTCATGTGGCGTTA.1 \n##                 7                 4                 0                 1 \n##  TTCATGTGGTATCG.1  TTCATGTGTTCTCA.1  TTCATTCTAAAAGC.1  TTCATTCTACAGCT.1 \n##                 4                 1                 2                 0 \n##  TTCATTCTACAGTC.1  TTCATTCTCACAAC.1  TTCATTCTCCAAGT.1  TTCATTCTTCCTGC.1 \n##                 3                 5                 4                 1 \n##  TTCATTCTTCTCGC.1  TTCCAAACAGGTTC.1  TTCCAAACGGCGAA.1  TTCCAAACGTGTCA.1 \n##                 0                 8                 4                 2 \n##  TTCCAAACGTTCTT.1  TTCCATGAAAGGTA.1  TTCCATGAATGACC.1  TTCCATGACTTACT.1 \n##                 0                 9                 5                 1 \n##  TTCCATGAGCATCA.1  TTCCATGATCGCCT.1  TTCCCACTGCAGTT.1  TTCCCACTTTACCT.1 \n##                 1                 0                 0                 1 \n##  TTCCTAGACTGTCC.1  TTCCTAGAGGATCT.1  TTCGAGGACATGCA.1  TTCGAGGATGCAGT.1 \n##                 0                 0                 0                 8 \n##  TTCGATTGAAGTGA.1  TTCGATTGCTTGGA.1  TTCGATTGTGCCTC.1  TTCGGAGAATTCGG.1 \n##                 0                 3                 3                 1 \n##  TTCGGAGACATTGG.1  TTCGGAGACGAACT.1  TTCGGAGACGTGTA.1  TTCGTATGATCGAC.1 \n##                 1                 4                 0                 0 \n##  TTCGTATGTCCGTC.1  TTCGTATGTGACAC.1  TTCTACGAAACGTC.1  TTCTACGAGAGATA.1 \n##                 8                 2                 2                 8 \n##  TTCTACGAGTCGAT.1  TTCTACGATACAGC.1  TTCTAGTGAGGAGC.1  TTCTAGTGAGTGTC.1 \n##                 0                 1                 1                 4 \n##  TTCTAGTGCGCCTT.1  TTCTAGTGGAAAGT.1  TTCTCAGAAAAACG.1  TTCTCAGAAATCGC.1 \n##                 4                 5                 0                 8 \n##  TTCTCAGACCTTAT.1  TTCTCAGATACGCA.1  TTCTCAGATACTGG.1  TTCTCAGATCTCGC.1 \n##                 2                 5                 2                 3 \n##  TTCTGATGAGCATC.1  TTCTGATGAGCTAC.1  TTCTGATGAGTTCG.1  TTCTGATGCCAACA.1 \n##                 6                 0                 4                10 \n##  TTCTGATGGAGGAC.1  TTCTGATGGCCTTC.1  TTCTGATGGTCATG.1  TTCTGATGTACTTC.1 \n##                 8                 0                 1                 0 \n##  TTCTGATGTCATTC.1  TTCTGATGTCTCGC.1  TTCTTACTCGGAGA.1  TTCTTACTGGTAGG.1 \n##                 7                 7                 2                 4 \n##  TTGAACCTAACTGC.1  TTGAACCTAATGCC.1  TTGAACCTCCGTAA.1  TTGAACCTCGGTAT.1 \n##                 3                 0                 0                 5 \n##  TTGAACCTCTACCC.1  TTGAATGAAAACGA.1  TTGAATGAAGTTCG.1  TTGAATGACTGACA.1 \n##                 4                 1                 0                 0 \n##  TTGACACTCTGCTC.1  TTGACACTGACACT.1  TTGACACTGAGGTG.1  TTGAGGACATGCTG.1 \n##                 3                 4                 1                 2 \n##  TTGAGGACCTTGCC.1  TTGAGGACTAGCCA.1  TTGAGGTGACGTAC.1  TTGAGGTGATCAGC.1 \n##                 0                 1                 1                 1 \n##  TTGAGGTGCATCAG.1  TTGAGGTGGGTTTG.1  TTGAGGTGTAGACC.1  TTGATCTGACGGGA.1 \n##                 1                 2                 1                 4 \n##  TTGATCTGGACGTT.1  TTGATCTGGCTGAT.1  TTGATCTGGGAACG.1  TTGATCTGGGTTTG.1 \n##                 0                 0                 0                 1 \n##  TTGATCTGTACTGG.1  TTGCATTGACCACA.1  TTGCATTGAGCACT.1  TTGCATTGCAGAGG.1 \n##                 1                 2                 2                 2 \n##  TTGCATTGCAGTTG.1  TTGCATTGCTCATT.1  TTGCATTGCTGAGT.1  TTGCATTGGGTAGG.1 \n##                 4                 0                 1                 0 \n##  TTGCATTGGGTCAT.1  TTGCATTGGGTGGA.1  TTGCATTGGTAGCT.1  TTGCATTGTTTGGG.1 \n##                 7                11                 7                10 \n##  TTGCTAACACCACA.1  TTGCTAACCGCATA.1  TTGCTAACCTAGCA.1  TTGCTATGGCTCCT.1 \n##                 0                 0                 5                 4 \n##  TTGCTATGGTGTAC.1  TTGCTATGTCAGGT.1  TTGCTATGTGCGTA.1  TTGGAGACACGTAC.1 \n##                 2                 1                 0                 1 \n##  TTGGAGTGAGGGTG.1  TTGGAGTGCACTGA.1  TTGGAGTGCTCGAA.1  TTGGAGTGCTGTAG.1 \n##                 3                 0                 1                 0 \n##  TTGGAGTGGTATGC.1  TTGGAGTGGTTGTG.1  TTGGAGTGTATTCC.1  TTGGAGTGTTCCCG.1 \n##                 1                 1                 0                 2 \n##  TTGGGAACTAGCCA.1  TTGGTACTACACCA.1  TTGGTACTCTCTTA.1  TTGGTACTGCTTAG.1 \n##                 1                 0                 0                 2 \n##  TTGGTACTGGTTCA.1  TTGGTACTGTCATG.1  TTGGTACTGTTCGA.1  TTGGTACTTACTGG.1 \n##                 0                 1                 3                 6 \n##  TTGGTACTTAGAAG.1  TTGTACACATAAGG.1  TTGTACACCAGAAA.1  TTGTACACCGGTAT.1 \n##                 0                 0                 2                 2 \n##  TTGTAGCTAAGATG.1  TTGTAGCTAATGCC.1  TTGTAGCTAGTCAC.1  TTGTAGCTCGCCTT.1 \n##                 8                 1                 2                 3 \n##  TTGTAGCTCTCATT.1  TTGTAGCTCTCGCT.1  TTGTAGCTGCGTTA.1  TTGTAGCTGGTGAG.1 \n##                 0                 0                 1                 8 \n##  TTGTCATGAGATGA.1  TTGTCATGCTAGTG.1  TTGTCATGCTGGTA.1  TTGTCATGGTCACA.1 \n##                 6                 1                10                 2 \n##  TTTAGAGAATCAGC.1  TTTAGAGACTGGAT.1  TTTAGAGAGACGAG.1  TTTAGAGAGCATAC.1 \n##                 1                 1                 0                10 \n##  TTTAGAGAGGACTT.1  TTTAGAGATCCAAG.1  TTTAGAGATCCTAT.1  TTTAGAGATTCATC.1 \n##                 2                 1                 2                 0 \n##  TTTAGCTGATTCCT.1  TTTAGCTGCAATCG.1  TTTAGCTGCATCAG.1  TTTAGCTGTTTGTC.1 \n##                 0                 0                 3                 0 \n##  TTTAGGCTACACGT.1  TTTAGGCTCCCTAC.1  TTTAGGCTCTCGAA.1  TTTAGGCTTAGCCA.1 \n##                 3                 0                 3                 0 \n##  TTTAGGCTTTCGGA.1  TTTATCCTAAGTGA.1  TTTATCCTCCCTTG.1  TTTATCCTGCGAGA.1 \n##                 0                 1                 3                 4 \n##  TTTATCCTGGAAAT.1  TTTATCCTGGGATG.1  TTTCACGAGAAACA.1  TTTCACGATACTTC.1 \n##                 0                 1                 0                 3 \n##  TTTCACGATGCTGA.1  TTTCAGTGCCTGTC.1  TTTCAGTGGACGAG.1  TTTCAGTGTCCTGC.1 \n##                 5                 1                 2                 1 \n##  TTTCCAGACGCATA.1  TTTCGAACCAGATC.1  TTTCGAACTTGCGA.1  TTTCGAACTTGCTT.1 \n##                 1                 1                 2                 0 \n##  TTTCTACTATGACC.1  TTTCTACTGAGGGT.1  TTTCTACTGGTCTA.1  TTTGACTGAAGCAA.1 \n##                 2                 3                 2                 1 \n##  TTTGACTGAGTCGT.1  TTTGACTGCCGCTT.1  TTTGACTGTTACCT.1  TTTGCATGCTTCGC.1 \n##                 3                 1                 0                 3 \n##  TTTGCATGGTCCTC.1  AAACATACCAAGCT.1  AAACATACCCCTAC.1  AAACATACCCGTAA.1 \n##                 3                 5                11                 1 \n##  AAACATACCCTCGT.1  AAACATACGAGGTG.1  AAACATACGTCGTA.1  AAACATACTCAGGT.1 \n##                 3                 1                 1                 0 \n##  AAACATTGACCTGA.1  AAACATTGACTTTC.1  AAACATTGGTACCA.1  AAACATTGGTGTCA.1 \n##                 0                 1                 3                 3 \n##  AAACATTGTAGCCA.1  AAACATTGTCCAGA.1  AAACATTGTGCTAG.1  AAACATTGTGTCCC.1 \n##                 0                 0                 7                11 \n##  AAACATTGTGTGGT.1  AAACATTGTTTGTC.1  AAACCGTGCTCTCG.1  AAACCGTGCTGGAT.1 \n##                 1                 0                 0                 7 \n##  AAACGCACAAGGGC.1  AAACGCACGCAGAG.1  AAACGCACGTACAC.1  AAACGCTGAAGAAC.1 \n##                 0                 0                 0                 0 \n##  AAACGCTGAGCACT.1  AAACGCTGGCCCTT.1  AAACGCTGGGTGGA.1  AAACGGCTCTTGGA.1 \n##                 5                 1                 0                 0 \n## AAACGGCTTACTCT.11  AAACGGCTTGCTCC.1 AAACTTGACGTGTA.11  AAACTTGAGACACT.1 \n##                 0                 9                 0                 0 \n##  AAACTTGAGCTATG.1  AAACTTGATCTAGG.1  AAACTTGATCTCAT.1  AAAGAGACAGCCAT.1 \n##                 0                 0                 2                 6 \n##  AAAGAGACCTCTAT.1  AAAGAGACGCAGAG.1  AAAGAGACTGTGAC.1  AAAGATCTGAGAGC.1 \n##                 3                 7                 0                 4 \n##  AAAGATCTTGCGTA.1  AAAGATCTTTCTCA.1  AAAGCAGAAACAGA.1  AAAGCAGAACGGGA.1 \n##                 1                 3                 0                 0 \n##  AAAGCAGAACGTGT.1  AAAGCAGAATTGGC.1  AAAGCAGATTGCGA.1  AAAGCCTGGGTTCA.1 \n##                 9                 9                 6                 9 \n##  AAAGCCTGGTATCG.1  AAAGCCTGTTCTAC.1  AAAGGCCTACCATG.1  AAAGGCCTAGCTCA.1 \n##                 0                 2                 1                 0 \n##  AAAGGCCTCAAAGA.1  AAAGGCCTCCGATA.1  AAAGGCCTGACACT.1  AAAGGCCTGTCTTT.1 \n##                 0                 8                 0                 2 \n##  AAAGGCCTTCCCAC.1  AAAGGCCTTTGCAG.1  AAAGTTTGACCCTC.1  AAAGTTTGCTTTAC.1 \n##                 1                 8                 4                 2 \n##  AAAGTTTGTCCTTA.1  AAAGTTTGTTATCC.1  AAAGTTTGTTCGCC.1  AAATACTGCAGCTA.1 \n##                 4                 1                 6                 4 \n##  AAATACTGCATGAC.1  AAATACTGGACGAG.1  AAATCAACAAGAAC.1  AAATCAACGGCGAA.1 \n##                 7                11                 5                 0 \n##  AAATCAACTTACTC.1  AAATCATGAAGGTA.1  AAATCATGCTCATT.1  AAATCATGGATAGA.1 \n##                 3                 5                 2                 8 \n##  AAATCATGGGACTT.1  AAATCATGTTGAGC.1  AAATCCCTAGACTC.1  AAATCCCTAGGTCT.1 \n##                10                 2                 2                 1 \n##  AAATCTGAACCACA.1  AAATCTGATCGCCT.1  AAATGGGAAACGTC.1 AAATGGGAAGATCC.11 \n##                 6                 5                 1                 0 \n##  AAATGGGACATGGT.1  AAATGGGACCTCCA.1  AAATGGGACGTTAG.1  AAATGGGAGTATGC.1 \n##                 5                 8                 2                 6 \n##  AAATGGGATAGCGT.1  AAATGGGATGAGAA.1  AAATGTTGACCTAG.1  AAATGTTGAGTAGA.1 \n##                 9                 3                 0                 4 \n##  AAATGTTGCCTTCG.1  AAATGTTGCGTAGT.1  AAATGTTGCTACTT.1  AAATGTTGGATAGA.1 \n##                 1                 1                 1                 0 \n##  AAATGTTGGATGAA.1  AAATGTTGTAAGGA.1  AAATTCGAATACCG.1  AAATTCGACTCTAT.1 \n##                 4                 1                 1                 1 \n##  AAATTCGACTGTCC.1  AAATTCGAGTACAC.1  AAATTCGATACTTC.1  AAATTCGATAGACC.1 \n##                 7                 3                 3                10 \n##  AAATTCGATCTCGC.1  AAATTCGATGCTAG.1 AAATTCGATGTGCA.11  AAATTGACGACAGG.1 \n##                 2                 0                10                 9 \n##  AACAAACTATACCG.1  AACAAACTCAGGAG.1  AACAAACTGCGTAT.1  AACAAACTTGAAGA.1 \n##                 2                 1                 1                 0 \n##  AACAATACAAGTGA.1  AACAATACCGTTAG.1  AACAATACCTGAAC.1  AACAATACGATAAG.1 \n##                 0                 1                 1                 6 \n##  AACAATACGCAGAG.1  AACACGTGCAATCG.1  AACACGTGTGCTTT.1  AACACTCTTCAAGC.1 \n##                 1                 3                 7                 0 \n##  AACACTCTTGATGC.1  AACAGAGAACGGAG.1  AACAGAGAAGTTCG.1  AACAGAGACATGCA.1 \n##                 7                 1                 2                 4 \n##  AACAGAGACTACCC.1  AACAGAGATCTGGA.1  AACAGAGATGCTAG.1  AACAGCACAATCGC.1 \n##                 9                 1                 0                 4 \n##  AACAGCACAGAGTA.1  AACAGCACCCCAAA.1  AACAGCACCCGTAA.1  AACAGCACTATGGC.1 \n##                 0                 0                 3                 4 \n##  AACAGCACTCTTTG.1  AACATATGAGTACC.1  AACATATGCACTGA.1  AACATATGGCAAGG.1 \n##                 4                 1                 5                 2 \n##  AACATATGGCTCCT.1  AACATTGAAGAACA.1  AACATTGAAGTTCG.1  AACATTGACAGGAG.1 \n##                 0                 1                 2                12 \n##  AACATTGAGTTTGG.1  AACATTGATGGTGT.1  AACCACGAAGCCAT.1  AACCACGAAGGTTC.1 \n##                 4                 0                 0                 1 \n## AACCACGAGAATCC.11  AACCACGAGCCATA.1  AACCACGAGCCCTT.1  AACCACGAGGTGTT.1 \n##                 0                 0                 0                 2 \n##  AACCACGAGTTCGA.1  AACCACGATCGATG.1  AACCACGATCTTAC.1  AACCACGATGCCTC.1 \n##                 4                 4                 1                 0 \n##  AACCACGATTCTTG.1  AACCAGTGACGCAT.1  AACCAGTGATCTCT.1  AACCAGTGATGTCG.1 \n##                 0                 0                11                 0 \n##  AACCAGTGCTGCAA.1  AACCAGTGGGAACG.1  AACCAGTGTGCACA.1  AACCCAGAACCCAA.1 \n##                 4                 1                 5                 1 \n##  AACCCAGAACGGTT.1  AACCCAGAAGCTAC.1  AACCCAGAGCCTTC.1  AACCCAGAGTGAGG.1 \n##                 0                 5                 4                 0 \n##  AACCCAGATTGCTT.1  AACCGATGACACGT.1  AACCGATGCAGATC.1  AACCGATGCTGAAC.1 \n##                 1                 5                11                 1 \n##  AACCGATGGAGGGT.1  AACCGATGGCGGAA.1  AACCGCCTAATCGC.1  AACCGCCTATCGAC.1 \n##                 0                 1                 1                 1 \n##  AACCGCCTCAACTG.1  AACCGCCTCACTCC.1  AACCGCCTCCCACT.1  AACCGCCTCTTCTA.1 \n##                 0                 1                 1                 0 \n##  AACCGCCTGTGTCA.1  AACCGCCTTAACCG.1  AACCTACTATTGGC.1  AACCTACTCCCGTT.1 \n##                 4                 1                 6                 2 \n##  AACCTACTCTCATT.1  AACCTACTCTCGAA.1  AACCTTACATACCG.1  AACCTTACGCTGTA.1 \n##                 0                 2                 4                 0 \n##  AACCTTACGTACCA.1  AACCTTTGAAACGA.1  AACCTTTGACGTGT.1  AACCTTTGAGTAGA.1 \n##                 2                 1                 0                 1 \n##  AACCTTTGCATTGG.1  AACCTTTGTTTCAC.1  AACCTTTGTTTGGG.1  AACGCAACAGGGTG.1 \n##                 4                 3                 6                 5 \n##  AACGCAACGTTACG.1  AACGCAACTCCTAT.1  AACGCATGACTACG.1  AACGCATGTAGACC.1 \n##                 7                 8                 4                 1 \n##  AACGCATGTGCTCC.1  AACGCATGTGTCCC.1 AACGCCCTCCCTCA.11  AACGCCCTCCCTTG.1 \n##                 0                 6                 3                 4 \n##  AACGCCCTCCTCGT.1  AACGCCCTCGATAC.1  AACGCCCTGTAAAG.1  AACGGTACATGCCA.1 \n##                 2                 0                 2                 4 \n##  AACGGTACCGTGAT.1  AACGGTACGAGGCA.1  AACGGTACGCTATG.1  AACGGTACGGACGA.1 \n##                 2                 0                 2                11 \n##  AACGGTACGTATGC.1  AACGGTACGTTACG.1  AACGGTACTACAGC.1  AACGGTACTCGATG.1 \n##                 2                 1                 3                 7 \n##  AACGGTACTGTCAG.1  AACGGTTGCTGACA.1  AACGGTTGGGTCTA.1  AACGGTTGGTATGC.1 \n##                 0                 4                 0                 1 \n##  AACGGTTGTCCCAC.1  AACGTCGACAAAGA.1  AACGTCGACCTGAA.1  AACGTGTGAAAAGC.1 \n##                 0                 0                 1                 0 \n##  AACGTGTGAAGGGC.1  AACGTGTGGACGGA.1  AACGTGTGTGAGGG.1  AACGTTCTAGCAAA.1 \n##                 1                 0                 8                 0 \n##  AACGTTCTAGCGTT.1  AACGTTCTCCTATT.1  AACGTTCTGGGTGA.1  AACGTTCTGTTGGT.1 \n##                 4                 1                 3                 1 \n##  AACGTTCTTACTTC.1 AACGTTCTTCGCTC.11  AACGTTCTTTTGCT.1  AACTACCTAAACAG.1 \n##                 1                 1                 6                 1 \n##  AACTACCTAAGCCT.1  AACTACCTAGATCC.1  AACTACCTCAATCG.1  AACTACCTCTAGCA.1 \n##                 0                 4                 2                 9 \n##  AACTCACTCCCTAC.1  AACTCACTGAGGGT.1  AACTCACTTATCGG.1  AACTCACTTGAGGG.1 \n##                 8                 7                 1                 2 \n##  AACTCGGACCCAAA.1  AACTCGGACTAGCA.1  AACTCGGATAAGGA.1  AACTCTTGGGCATT.1 \n##                 9                 0                 4                 1 \n##  AACTCTTGGTCTTT.1  AACTCTTGTTGACG.1  AACTGTCTCGGAGA.1  AACTGTCTCTATGG.1 \n##                 0                 0                 0                 0 \n##  AACTGTCTGCTTAG.1  AACTGTCTGGACTT.1  AACTGTCTGGATCT.1  AACTGTCTTAAGCC.1 \n##                 4                 3                 0                 9 \n##  AACTGTCTTGGTAC.1  AACTTGCTATGCTG.1  AACTTGCTCAACTG.1  AACTTGCTCACTGA.1 \n##                 1                 4                 0                 3 \n##  AACTTGCTCCCACT.1  AACTTGCTGGGACA.1  AACTTGCTGGGATG.1  AACTTGCTTCTGGA.1 \n##                 1                 0                 4                 0 \n##  AAGAACGAATTCGG.1 AAGAACGACCCAAA.11  AAGAACGACTACTT.1  AAGAACGACTTGTT.1 \n##                 5                 0                12                 2 \n##  AAGAACGATGTGCA.1  AAGAAGACGGGATG.1  AAGAAGACTCTACT.1  AAGAAGACTCTTCA.1 \n##                11                 3                 1                 1 \n##  AAGAAGACTGTAGC.1  AAGAAGACTTCCAT.1  AAGAATCTACTGTG.1  AAGAATCTATCGGT.1 \n##                 7                 0                 0                 3 \n##  AAGAATCTCGTACA.1  AAGAATCTCTGCTC.1  AAGAATCTGACGAG.1  AAGAATCTGAGCAG.1 \n##                 0                 0                 0                 2 \n##  AAGAATCTGGTTAC.1  AAGAATCTGTGCAT.1  AAGACAGAAAAACG.1  AAGACAGACGTACA.1 \n##                 5                 5                 6                 1 \n##  AAGACAGATTCGGA.1  AAGACAGATTGGCA.1  AAGAGATGAACAGA.1  AAGAGATGCAAAGA.1 \n##                 2                 0                 0                 0 \n##  AAGAGATGCCGATA.1  AAGAGATGTACGAC.1  AAGAGATGTGCAAC.1  AAGAGATGTTGCTT.1 \n##                 3                 0                 0                 9 \n##  AAGATGGAAGACTC.1  AAGATGGACGGTAT.1  AAGATGGAGTCAAC.1  AAGATTACACACCA.1 \n##                 1                 0                 2                 4 \n##  AAGATTACGAATCC.1  AAGATTACGCTATG.1  AAGATTACGGTTTG.1  AAGCAAGACCCTCA.1 \n##                 0                 1                 5                 0 \n##  AAGCAAGAGGTATC.1  AAGCAAGATTCACT.1  AAGCACTGAGGGTG.1  AAGCACTGCCGCTT.1 \n##                 2                 4                 4                 6 \n##  AAGCACTGGAATGA.1  AAGCACTGTTCGCC.1  AAGCCAACCCGCTT.1  AAGCCAACGCCATA.1 \n##                 0                 0                 2                 4 \n##  AAGCCAACGTGTCA.1  AAGCCAACTCTCCG.1  AAGCCAACTGACCA.1  AAGCCATGGTCACA.1 \n##                 1                 0                 8                 7 \n##  AAGCCATGGTCTTT.1  AAGCCATGTCCTCG.1  AAGCCATGTCGTTT.1  AAGCCATGTGACTG.1 \n##                 8                 6                 1                 6 \n##  AAGCCATGTTCGCC.1  AAGCCTGAAACGTC.1  AAGCCTGAAGCTCA.1  AAGCGACTAGTCAC.1 \n##                 1                 1                 0                10 \n##  AAGCGACTCCACAA.1  AAGCGACTGCAGTT.1  AAGCGACTGTACAC.1  AAGCGACTTAAAGG.1 \n##                 1                 1                 0                 0 \n##  AAGCGTACTACAGC.1  AAGCGTACTCTGGA.1  AAGCGTACTGTCAG.1  AAGGCTACAAGGGC.1 \n##                 0                 1                 2                 3 \n##  AAGGCTACATCAGC.1  AAGGCTACCTACCC.1  AAGGCTACGAAAGT.1  AAGGCTACTGCTGA.1 \n##                 7                 0                 1                 3 \n##  AAGGCTACTGTCAG.1  AAGGCTTGCAAGCT.1  AAGGCTTGCCCAAA.1  AAGGCTTGGAGAGC.1 \n##                 9                 6                 2                10 \n##  AAGGCTTGGCGTAT.1  AAGGCTTGGCTCCT.1  AAGGTCACAGCCTA.1  AAGGTCACCAAGCT.1 \n##                 1                 1                 5                 2 \n##  AAGGTCACCTTGTT.1  AAGGTCACGTCGAT.1  AAGGTCACTACTGG.1  AAGGTCTGCAGAGG.1 \n##                 1                 1                 2                 5 \n##  AAGGTCTGCTCAGA.1  AAGGTCTGCTCTAT.1  AAGGTCTGGACAGG.1  AAGGTCTGTTCAGG.1 \n##                 0                 0                 4                 0 \n##  AAGGTGCTAAGGGC.1  AAGGTGCTAATCGC.1  AAGGTGCTCTGATG.1  AAGGTGCTGGTTCA.1 \n##                 3                 1                 0                 3 \n##  AAGGTGCTGTCTTT.1  AAGGTGCTTCCGAA.1  AAGGTGCTTGGATC.1  AAGGTGCTTTCACT.1 \n##                 0                 0                 1                 2 \n##  AAGTAACTCTCTCG.1  AAGTAACTTACGAC.1  AAGTAGGACAGGAG.1  AAGTAGGACTAGCA.1 \n##                 2                 1                 0                 1 \n##  AAGTAGGATCGCAA.1  AAGTAGGATTGAGC.1  AAGTATACCTAGAC.1  AAGTATACTACAGC.1 \n##                 4                 1                 0                 5 \n##  AAGTATACTCTAGG.1  AAGTATACTTCTCA.1  AAGTCCGAAATGCC.1  AAGTCCGAATCGGT.1 \n##                 0                 0                 1                 4 \n##  AAGTCCGACCTTCG.1  AAGTCCGACTCTTA.1  AAGTCCGAGGTAAA.1  AAGTCTCTCGAACT.1 \n##                 4                 0                 5                 1 \n##  AAGTCTCTTCATTC.1  AAGTCTCTTTGCTT.1  AAGTGCACAACGAA.1  AAGTGCACAAGCAA.1 \n##                 6                 3                 1                 1 \n##  AAGTGCACGTTAGC.1  AAGTGCACTGCCAA.1  AAGTGGCTGTCTAG.1  AAGTTATGACACTG.1 \n##                 1                 0                 0                 0 \n##  AAGTTATGGAACTC.1  AAGTTATGTACGCA.1  AAGTTATGTTCACT.1  AAGTTATGTTTCGT.1 \n##                 0                 5                 2                 0 \n##  AAGTTCCTAAACAG.1  AAGTTCCTAACGAA.1  AAGTTCCTAGCCTA.1  AAGTTCCTCCCGTT.1 \n##                 1                 8                 5                 3 \n##  AAGTTCCTGAAACA.1  AAGTTCCTGACGAG.1 AAGTTCCTGGTGGA.11  AAGTTCCTGTATCG.1 \n##                 0                 7                 7                 3 \n##  AAGTTCCTGTTCGA.1  AAGTTCCTTGCTCC.1  AAGTTCCTTTCCCG.1  AATAACACATACCG.1 \n##                 1                 2                 1                 7 \n##  AATAACACTCCGTC.1  AATAACACTGCTGA.1  AATAACACTGGTCA.1  AATAAGCTAGAGGC.1 \n##                 5                 2                 9                 1 \n##  AATAAGCTTGTAGC.1  AATAAGCTTGTGCA.1  AATAAGCTTTCCGC.1  AATACCCTACCTCC.1 \n##                 0                 0                 9                 1 \n## AATACCCTCGTGAT.11 AATACTGACCTGTC.11  AATACTGACTGGTA.1  AATACTGAGGACTT.1 \n##                 0                 2                 5                 1 \n## AATACTGATCACGA.11  AATAGGGAACCCAA.1  AATAGGGAACTACG.1  AATAGGGAGTCCTC.1 \n##                 4                 4                 1                11 \n##  AATAGGGATCAGGT.1  AATAGGGATTAGGC.1  AATAGGGATTCTCA.1  AATAGGGATTCTGT.1 \n##                 1                 4                 0                 5 \n##  AATATCGAATGTCG.1  AATATCGACACCAA.1  AATATCGACTCTCG.1  AATATCGACTTTAC.1 \n##                 0                 0                 3                 8 \n## AATATCGAGAGGCA.11  AATATCGAGCGTAT.1  AATATCGAGTCGAT.1  AATCAAACCAGGAG.1 \n##                 2                 0                 4                 0 \n##  AATCAAACTGATGC.1  AATCAAACTGGTCA.1  AATCAAACTGTCTT.1  AATCAAACTTAGGC.1 \n##                 2                 1                 3                 8 \n##  AATCCGGAAGCAAA.1  AATCCGGAAGTGCT.1  AATCCGGACTCGCT.1  AATCCGGATCGTTT.1 \n##                 0                 0                 4                 1 \n##  AATCCGGATCTCTA.1  AATCCGGATGACCA.1  AATCCTACACGTGT.1  AATCCTACCGCCTT.1 \n##                 0                 2                 1                 0 \n##  AATCCTACCTCCAC.1  AATCCTACGAATCC.1  AATCCTACGGTTTG.1  AATCCTACTCACGA.1 \n##                 7                 8                 0                 1 \n##  AATCCTACTCGCCT.1  AATCCTTGATGTCG.1 AATCCTTGCATGGT.11  AATCCTTGCTGGAT.1 \n##                 6                 0                 0                 0 \n##  AATCCTTGGTCGTA.1  AATCCTTGTGGATC.1  AATCCTTGTGGTTG.1  AATCGGTGACCCAA.1 \n##                 1                 1                 0                 1 \n##  AATCGGTGCGAACT.1  AATCGGTGCGTAGT.1  AATCGGTGCTAAGC.1  AATCGGTGTTGAGC.1 \n##                 0                 0                 3                 0 \n##  AATCTAGAACACGT.1  AATCTAGAATAAGG.1  AATCTAGACGACTA.1  AATCTAGAGCGTAT.1 \n##                10                 6                 0                 0 \n##  AATCTAGATATCGG.1  AATCTAGATCTTTG.1  AATCTCACAAGAGT.1  AATCTCACGCTCCT.1 \n##                 0                 3                 3                 5 \n##  AATCTCTGAGAGGC.1  AATCTCTGAGCCTA.1  AATCTCTGCAAAGA.1  AATCTCTGCCCAAA.1 \n##                 2                 8                 4                 4 \n##  AATCTCTGCGACAT.1  AATCTCTGCGTCTC.1  AATCTCTGCTATTC.1  AATCTCTGGAACCT.1 \n##                 5                 0                 0                 0 \n##  AATCTCTGGTCTGA.1  AATGAGGAAGGTCT.1  AATGAGGACTATTC.1  AATGAGGACTCAGA.1 \n##                 1                 1                 1                 5 \n##  AATGAGGAGTATCG.1  AATGAGGATGCCAA.1 AATGAGGATGTAGC.11  AATGATACGTTTCT.1 \n##                 0                 0                 4                 3 \n##  AATGATACTTGAGC.1  AATGCGTGCTGTGA.1  AATGCGTGTACAGC.1  AATGCGTGTCCAAG.1 \n##                 2                 1                 4                 2 \n##  AATGCGTGTGTTCT.1  AATGGAGAGCAGTT.1  AATGGAGAGGCAAG.1  AATGGCTGAACTGC.1 \n##                 1                 2                 2                 0 \n##  AATGGCTGCTGGTA.1  AATGGCTGTCAGAC.1  AATGGCTGTGGTCA.1  AATGTAACAAACAG.1 \n##                 2                 8                 0                 1 \n##  AATGTAACCGTGTA.1  AATGTAACCTGTTT.1  AATGTAACGTCATG.1  AATGTAACTTCGTT.1 \n##                 2                 2                 3                 8 \n##  AATGTAACTTGGCA.1 AATGTCCTACGTTG.11  AATGTCCTAGTACC.1  AATGTCCTATTCTC.1 \n##                 0                 0                 0                 0 \n##  AATGTCCTCCGAAT.1  AATGTCCTCGAACT.1 AATGTCCTGTACGT.11  AATGTCCTTGGGAG.1 \n##                 2                 2                 0                 0 \n##  AATGTTGAAACCGT.1  AATGTTGAAGGGTG.1  AATGTTGACGCAAT.1  AATTACGAAAGAAC.1 \n##                 7                 0                 0                 1 \n##  AATTACGACCTTTA.1  AATTACGACTGGAT.1  AATTACGAGAATGA.1  AATTCCTGAAGGTA.1 \n##                 1                 0                 2                 0 \n##  AATTCCTGACACAC.1  AATTCCTGCATTTC.1  AATTCCTGGTACAC.1  AATTGATGCGTTAG.1 \n##                 2                11                 1                 0 \n##  AATTGATGCTCATT.1  AATTGATGGGTCTA.1  AATTGATGTCAGAC.1  AATTGTGACATCAG.1 \n##                 4                 1                 3                 0 \n##  AATTGTGACTTCTA.1  AATTGTGATGTGAC.1  AATTGTGATTTCGT.1  ACAAAGGAAGCACT.1 \n##                 2                 4                 2                 3 \n##  ACAAAGGAGACTAC.1  ACAAAGGAGTACGT.1  ACAAAGGATCAGTG.1  ACAAAGGATGGGAG.1 \n##                 7                 7                 4                 4 \n##  ACAAATTGAGACTC.1  ACAAATTGCTGAAC.1  ACAAATTGGTTGTG.1 ACAAATTGTAGAAG.11 \n##                 5                 7                 0                 1 \n##  ACAACCGACAAAGA.1  ACAACCGAGGTGGA.1  ACAACCGATGTCAG.1  ACAAGAGAAGAGGC.1 \n##                 2                 4                 3                 2 \n##  ACAAGAGACGCATA.1  ACAAGAGACTAGCA.1  ACAAGAGAGTTGAC.1  ACAAGAGATAGAAG.1 \n##                 0                 3                 0                 8 \n##  ACAAGAGATCTTCA.1  ACAAGAGATTGTGG.1  ACAAGCACATTGGC.1  ACAAGCACCGCAAT.1 \n##                 3                 8                 1                 1 \n##  ACAAGCACCTTCTA.1  ACAAGCACTACGCA.1  ACAATAACATTCCT.1  ACAATAACCAGCTA.1 \n##                 4                 7                 4                 0 \n##  ACAATAACCCTGAA.1  ACAATAACTCGATG.1  ACAATCCTATCAGC.1  ACAATCCTATTCGG.1 \n##                 1                 1                 0                 2 \n##  ACAATCCTCCTCCA.1  ACAATCCTCTCGCT.1  ACAATCCTGACAGG.1  ACAATCCTGTGTCA.1 \n##                 1                 0                 4                12 \n##  ACAATCCTTAAGCC.1  ACAATCCTTGGCAT.1  ACAATTGAAAAGCA.1  ACAATTGAAAGGCG.1 \n##                 0                 1                 5                 2 \n##  ACAATTGAACGGAG.1  ACAATTGAAGATGA.1  ACAATTGACATTCT.1  ACAATTGAGAATAG.1 \n##                 0                 1                 0                 5 \n##  ACAATTGAGAGGTG.1  ACAATTGATTGTCT.1  ACACAGACACGGTT.1  ACACAGACATGTGC.1 \n##                 1                 5                 0                 2 \n##  ACACAGACCGTTGA.1  ACACAGACTTCTAC.1  ACACAGACTTGACG.1  ACACAGACTTGCGA.1 \n##                 7                 1                 1                 0 \n##  ACACATCTACACCA.1 ACACATCTCGCCTT.11  ACACCAGAAAGGCG.1  ACACCAGAAATCGC.1 \n##                 0                11                 3                 0 \n##  ACACCAGAATGCTG.1  ACACCAGAGACGGA.1  ACACCAGAGATGAA.1  ACACCAGAGCGTTA.1 \n##                 4                 2                 1                 5 \n##  ACACCAGAGTAAAG.1  ACACCAGATGACCA.1  ACACCAGATTCGTT.1  ACACCCTGACGTGT.1 \n##                 1                 1                 0                 0 \n##  ACACCCTGGTAAAG.1  ACACCCTGGTTGAC.1  ACACCCTGTCAGAC.1  ACACCCTGTCCAGA.1 \n##                 2                 4                 3                11 \n##  ACACCCTGTTGGCA.1  ACACGAACCCTGAA.1  ACACGAACCTCTAT.1  ACACGAACGTCTAG.1 \n##                 3                 1                 5                 1 \n##  ACACGAACGTTGAC.1  ACACGAACTTGTCT.1  ACACGATGAAAAGC.1  ACACGATGAAGCCT.1 \n##                 0                 6                 7                 0 \n##  ACACGATGACCACA.1  ACACGATGACCTTT.1  ACACGATGACTTTC.1  ACACGATGCTGGAT.1 \n##                 2                 4                 8                 0 \n##  ACACGATGGGTCAT.1  ACACGATGTTCAGG.1  ACACGTGAGAATCC.1  ACACGTGAGCTTAG.1 \n##                 2                 1                 5                 0 \n##  ACACGTGAGTATGC.1  ACACGTGATCCCAC.1  ACACGTGATCCCGT.1  ACACGTGATGAACC.1 \n##                 0                 0                 6                 8 \n##  ACACGTGATGGTCA.1  ACAGACACACGGAG.1  ACAGACACCGAGAG.1 ACAGACACCTAAGC.11 \n##                 0                 0                 0                 0 \n##  ACAGACACGGTAAA.1  ACAGACACTCAGGT.1  ACAGACACTCTTAC.1  ACAGCAACCATGGT.1 \n##                 5                 0                 3                 0 \n##  ACAGCAACGAACTC.1  ACAGCAACGAGACG.1  ACAGCAACTATGCG.1  ACAGCAACTGAGGG.1 \n##                 1                 1                 0                 2 \n##  ACAGGTACATGACC.1  ACAGGTACCGAGTT.1  ACAGGTACCGTGTA.1 ACAGGTACGATGAA.11 \n##                 0                 1                 0                 5 \n##  ACAGGTACGCCCTT.1  ACAGGTACGGACTT.1  ACAGGTACTGCTCC.1  ACAGTCGACATGGT.1 \n##                 0                 4                 0                 0 \n##  ACAGTCGAGAGGAC.1  ACAGTCGATTCGGA.1  ACAGTGACATGTGC.1  ACAGTGACCACCAA.1 \n##                 4                 0                 6                 6 \n##  ACAGTGACCCACCT.1  ACAGTGACGAGGAC.1  ACAGTGACGGTACT.1  ACAGTGACTGCGTA.1 \n##                 3                 3                 9                 1 \n##  ACAGTGACTGTCCC.1  ACAGTGTGAAGATG.1  ACAGTGTGAAGTGA.1  ACAGTGTGACGGGA.1 \n##                 1                 0                 2                 1 \n##  ACAGTGTGAGATGA.1  ACAGTGTGCCCAAA.1  ACAGTGTGGCCTTC.1  ACAGTGTGGTTTCT.1 \n##                 0                 0                10                11 \n##  ACAGTGTGTGCTGA.1  ACAGTGTGTGGATC.1  ACAGTTCTCTGATG.1  ACAGTTCTCTTAGG.1 \n##                 3                 0                 1                 2 \n##  ACATACCTGTTGAC.1  ACATCACTCAGTCA.1  ACATCACTCTGTTT.1  ACATCACTGGAGGT.1 \n##                 9                 2                 0                 2 \n##  ACATCACTGGTGGA.1  ACATCACTGTTTCT.1  ACATGGTGACCCTC.1  ACATGGTGACGCAT.1 \n##                 1                 0                 0                 5 \n##  ACATGGTGACGGAG.1  ACATGGTGCCTATT.1  ACATGGTGCGTTAG.1  ACATGGTGCTCCCA.1 \n##                 3                 0                 1                 1 \n##  ACATGGTGCTGGTA.1  ACATGGTGGGTATC.1  ACATGGTGTGCGTA.1  ACATTCTGCCCTAC.1 \n##                 0                 5                 1                 1 \n##  ACATTCTGCGAATC.1  ACATTCTGCTACTT.1  ACATTCTGGTAGCT.1  ACCAACGAACTGTG.1 \n##                 6                 2                 1                 0 \n##  ACCAACGACCACAA.1  ACCAACGATTGAGC.1  ACCACAGAACGTGT.1  ACCACCTGCGATAC.1 \n##                 0                 5                 9                 5 \n##  ACCACCTGCTTCTA.1  ACCACCTGTCTATC.1  ACCACGCTGACGGA.1  ACCACGCTTCCTCG.1 \n##                 4                 1                 0                 4 \n##  ACCACGCTTGGATC.1  ACCAGCCTCTTATC.1  ACCAGCCTTCCCAC.1  ACCAGCCTTTATCC.1 \n##                 1                 6                 0                 7 \n##  ACCAGCCTTTGGCA.1  ACCAGTGAAATGCC.1  ACCAGTGAGACGTT.1  ACCATTACATGGTC.1 \n##                 3                 0                 3                 0 \n##  ACCATTACGCGGAA.1  ACCATTTGCCGCTT.1  ACCATTTGCTCCCA.1  ACCATTTGTTCCAT.1 \n##                 1                 5                 1                 4 \n##  ACCATTTGTTGACG.1  ACCCAAGAAGCACT.1  ACCCAAGAGAAACA.1  ACCCAAGAGAAGGC.1 \n##                 9                 4                 0                 0 \n##  ACCCAAGAGCTAAC.1  ACCCACTGACAGTC.1  ACCCACTGACGTTG.1  ACCCACTGGGAAAT.1 \n##                 1                 7                 1                 1 \n##  ACCCACTGGGTTAC.1  ACCCACTGTAAGCC.1  ACCCACTGTAAGGA.1  ACCCACTGTGGAGG.1 \n##                 7                 0                 3                 1 \n##  ACCCAGCTAGTCAC.1  ACCCAGCTAGTCTG.1  ACCCGTACAAAGTG.1  ACCCGTACAGCGGA.1 \n##                10                 3                 1                 2 \n## ACCCGTACAGCGTT.11  ACCCGTACCCTGAA.1  ACCCGTACCGTGTA.1  ACCCGTACGAGCTT.1 \n##                 1                 1                 0                 0 \n##  ACCCGTACGTCTAG.1  ACCCGTACTAAAGG.1  ACCCGTTGATCTTC.1  ACCCGTTGCATTTC.1 \n##                 0                 1                10                 7 \n##  ACCCGTTGGAGAGC.1  ACCCGTTGGCGTAT.1  ACCCGTTGTGACAC.1  ACCCTCGACGAGAG.1 \n##                 1                 1                10                 2 \n##  ACCCTCGACGATAC.1  ACCCTCGACGTAGT.1  ACCCTCGAGGTACT.1  ACCCTCGAGTATGC.1 \n##                 1                 0                 6                 2 \n##  ACCCTCGAGTCTAG.1  ACCCTCGATGTGCA.1  ACCCTCGATTCGCC.1  ACCGAAACATTGGC.1 \n##                 4                 0                 1                 6 \n##  ACCGAAACTACTTC.1  ACCGCGGAAAGATG.1  ACCGCGGAAAGTGA.1  ACCGCGGACTGATG.1 \n##                 4                 6                10                12 \n##  ACCGCGGATGGTAC.1  ACCGTGCTTTGCTT.1  ACCTATTGAATGCC.1  ACCTATTGACCGAT.1 \n##                 0                 1                 1                 2 \n##  ACCTATTGATTCTC.1  ACCTATTGGAAGGC.1  ACCTATTGGCGAGA.1  ACCTATTGGTCGAT.1 \n##                 0                 4                 1                 0 \n##  ACCTATTGTTCACT.1  ACCTCCGAACTGTG.1  ACCTCCGAAGGAGC.1  ACCTCCGAATTGGC.1 \n##                 0                 1                 3                 2 \n## ACCTCCGACACTCC.11  ACCTCCGACCTTAT.1  ACCTCCGATGGTTG.1  ACCTCCGATTCATC.1 \n##                 0                 8                 0                 5 \n##  ACCTCGTGCAAGCT.1  ACCTCGTGCATACG.1  ACCTCGTGTATCTC.1  ACCTGAGAAAAGTG.1 \n##                 5                 0                 2                 1 \n##  ACCTGAGAACACGT.1  ACCTGAGAACGTTG.1  ACCTGAGAGTCGAT.1  ACCTGAGATCCGTC.1 \n##                 1                 0                 1                 4 \n##  ACCTGAGATCCTTA.1 ACCTGAGATGCTAG.11  ACCTGAGATGGTTG.1  ACCTGGCTCGTAAC.1 \n##                 1                 4                 6                 0 \n##  ACCTGGCTGACGTT.1  ACCTTTGAAAGCCT.1  ACCTTTGACGTTGA.1  ACCTTTGATCGCAA.1 \n##                 7                 1                 9                 0 \n##  ACCTTTGATGCATG.1  ACCTTTGATGGATC.1  ACCTTTGATTCTTG.1  ACGAACACTAGACC.1 \n##                 1                 8                 0                 0 \n##  ACGAACTGCAACCA.1  ACGAACTGCTACGA.1  ACGAACTGGCAAGG.1  ACGAACTGGCTAAC.1 \n##                 2                 0                 6                 1 \n##  ACGAACTGGTATGC.1  ACGAACTGTATCTC.1  ACGAACTGTCCAGA.1  ACGAAGCTCTTGGA.1 \n##                 2                 0                 4                 6 \n##  ACGAAGCTTCTACT.1  ACGACAACTAAGGA.1  ACGACAACTGGTCA.1  ACGACCCTAGATCC.1 \n##                 1                 7                 1                 5 \n##  ACGACCCTAGCACT.1  ACGACCCTATGCTG.1  ACGACCCTCAGTCA.1  ACGACCCTCTCTCG.1 \n##                 5                 0                 4                 1 \n##  ACGACCCTCTGAGT.1  ACGACCCTCTGTCC.1  ACGACCCTGGTAGG.1  ACGAGGGACGTTGA.1 \n##                 0                 7                 2                 5 \n##  ACGAGGGAGAATCC.1  ACGAGGGAGGGAGT.1  ACGAGGGATAGTCG.1  ACGAGTACCAGCTA.1 \n##                 8                 1                 0                 1 \n##  ACGAGTACCCCGTT.1  ACGAGTACCTCAAG.1  ACGAGTACCTCGAA.1 ACGAGTACTATGGC.11 \n##                 3                 3                 1                 9 \n##  ACGAGTACTCGATG.1  ACGAGTACTGAGGG.1  ACGATCGACATTTC.1  ACGATCGACGGTAT.1 \n##                 0                 2                 0                 3 \n##  ACGATCGAGGAACG.1  ACGATCGAGTACAC.1  ACGATCGATCTAGG.1  ACGATGACATCTCT.1 \n##                 1                 4                 0                 1 \n##  ACGATGACGTTACG.1  ACGATGACTGAGGG.1  ACGATTCTCTATTC.1  ACGATTCTGATACC.1 \n##                 0                 8                 3                 0 \n##  ACGATTCTGTGTAC.1  ACGATTCTTCGACA.1  ACGATTCTTGCCAA.1  ACGCAATGACGGTT.1 \n##                 9                 0                 0                 4 \n##  ACGCAATGGCGTAT.1  ACGCACCTACCTGA.1  ACGCACCTATCGTG.1  ACGCACCTCAACTG.1 \n##                 1                 5                 0                 8 \n##  ACGCACCTGAACTC.1  ACGCACCTGACGTT.1  ACGCACCTGAGGAC.1  ACGCACCTGCATCA.1 \n##                 2                 1                 6                 4 \n##  ACGCACCTGGATTC.1  ACGCACCTTCTGGA.1  ACGCACCTTGGGAG.1  ACGCCACTACTAGC.1 \n##                 2                 1                 7                 1 \n##  ACGCCACTATGCCA.1  ACGCCACTCAACCA.1 ACGCCACTCAATCG.11  ACGCCACTCCCACT.1 \n##                 0                 0                 5                 5 \n##  ACGCCACTCCGAAT.1  ACGCCACTCTTACT.1  ACGCCACTCTTCTA.1  ACGCCACTGAAGGC.1 \n##                 7                 0                 7                 0 \n##  ACGCCACTTCAAGC.1  ACGCCACTTGGATC.1  ACGCCACTTTTCAC.1  ACGCCGGAAACGGG.1 \n##                 0                 1                 1                 1 \n##  ACGCCGGAAGACTC.1  ACGCCGGACCGAAT.1  ACGCCGGACCTTTA.1  ACGCCGGAGCGGAA.1 \n##                 3                 0                 1                 9 \n##  ACGCCGGATATCGG.1  ACGCCTTGCCGTTC.1  ACGCCTTGCTTCTA.1  ACGCCTTGGTTAGC.1 \n##                 8                 7                 6                 4 \n##  ACGCCTTGTAAAGG.1  ACGCCTTGTCCCGT.1  ACGCCTTGTCGATG.1  ACGCCTTGTCTTTG.1 \n##                 0                 4                 0                 2 \n##  ACGCGGTGACAGTC.1  ACGCGGTGAGCACT.1  ACGCGGTGAGCATC.1  ACGCGGTGGGAGTG.1 \n##                 7                 2                 9                 3 \n##  ACGCGGTGGTCGAT.1  ACGCGGTGTTCAGG.1  ACGCTCACAGTCTG.1  ACGCTCACCTTCTA.1 \n##                 7                 1                 1                 1 \n##  ACGCTCACGGTAGG.1  ACGCTCACGTAGCT.1  ACGCTCACTTGGCA.1  ACGCTGCTGACAGG.1 \n##                 0                 0                 2                 5 \n##  ACGCTGCTGGTACT.1  ACGCTGCTGTTGGT.1  ACGCTGCTTGAAGA.1  ACGGAACTAGACTC.1 \n##                 0                 9                 0                 1 \n##  ACGGAACTCATACG.1  ACGGAACTGAGGGT.1  ACGGAACTTCCCGT.1  ACGGAACTTGCTCC.1 \n##                 1                 2                 1                 4 \n##  ACGGAGGACTACCC.1  ACGGATTGCTCAAG.1  ACGGATTGCTGATG.1  ACGGATTGCTTCTA.1 \n##                 0                 5                 1                 0 \n##  ACGGATTGGAATAG.1  ACGGATTGGGCAAG.1  ACGGATTGTCGTTT.1  ACGGATTGTGTAGC.1 \n##                 3                 4                 0                 1 \n##  ACGGCGTGCACACA.1  ACGGCGTGCTGACA.1  ACGGCGTGGAGCAG.1  ACGGCTCTATCGTG.1 \n##                 1                 0                 4                 6 \n##  ACGGCTCTGAGGGT.1  ACGGCTCTTCTGGA.1  ACGGCTCTTGTCTT.1  ACGGGAGAAGCAAA.1 \n##                 1                 1                 1                 1 \n##  ACGGGAGACCTTGC.1  ACGGGAGAGCAAGG.1  ACGGGAGAGGTCAT.1  ACGGGAGATAAGGA.1 \n##                 0                 1                 7                 2 \n##  ACGGGAGATCCCAC.1  ACGGGAGATGAACC.1  ACGGTAACCAACTG.1  ACGGTAACCTCGCT.1 \n##                 0                 1                 0                 2 \n##  ACGGTAACGCGAGA.1  ACGGTAACGGGCAA.1  ACGGTATGCTGTTT.1  ACGGTATGGCTCCT.1 \n##                 0                11                 0                 6 \n##  ACGGTATGGTTGGT.1  ACGGTATGTTCACT.1  ACGGTCCTAAAACG.1  ACGGTCCTAGCTCA.1 \n##                 0                 1                 0                 7 \n##  ACGGTCCTCAGATC.1  ACGGTCCTCTCCCA.1  ACGGTCCTGAACTC.1 ACGGTCCTGCATAC.11 \n##                 7                 0                 0                 1 \n##  ACGGTCCTGTCTAG.1  ACGGTCCTTTGGTG.1  ACGTAGACATCTCT.1  ACGTAGACCAGTCA.1 \n##                 2                 3                 3                10 \n##  ACGTCAGAAAGGCG.1  ACGTCAGAACCTGA.1  ACGTCAGAATGACC.1  ACGTCAGAGCTTCC.1 \n##                 4                 2                 0                 1 \n##  ACGTCAGATGAAGA.1  ACGTCCTGACTTTC.1  ACGTCCTGGGTGGA.1 ACGTCCTGTCATTC.11 \n##                 3                 1                 2                 0 \n##  ACGTCGCTAGTAGA.1  ACGTCGCTGGCGAA.1  ACGTCGCTTATGCG.1  ACGTCGCTTTGACG.1 \n##                 0                 2                 8                 1 \n##  ACGTGATGACCAAC.1  ACGTGATGTATCTC.1  ACGTGCCTAGCATC.1  ACGTGCCTCGCCTT.1 \n##                 9                11                 3                 1 \n##  ACGTGCCTCTAGTG.1  ACGTGCCTGGAGTG.1  ACGTGCCTGTACGT.1  ACGTTACTCACTCC.1 \n##                 1                 0                 1                 6 \n##  ACGTTACTGCGTTA.1  ACGTTACTGGACTT.1  ACGTTACTTATGCG.1  ACGTTACTTCTAGG.1 \n##                 7                 3                 0                 1 \n##  ACGTTACTTGTCAG.1  ACGTTGGAAAGGTA.1  ACGTTGGAACTGGT.1  ACGTTGGACTTGAG.1 \n##                 2                 1                 0                 0 \n##  ACGTTGGATCGTGA.1  ACGTTGGATGAACC.1  ACGTTGGATGGTTG.1  ACGTTTACGAGCAG.1 \n##                 0                 1                 0                 1 \n##  ACTAAAACATAAGG.1  ACTAAAACATCTTC.1  ACTAAAACCACTCC.1  ACTAAAACCACTGA.1 \n##                 3                 0                 1                 3 \n##  ACTAAAACTCATTC.1  ACTAAAACTTCGGA.1  ACTAAAACTTGGCA.1  ACTACGGAGAGCTT.1 \n##                 0                 3                 9                 0 \n##  ACTACGGATTTACC.1  ACTACTACAGCGGA.1  ACTACTACAGTCAC.1  ACTACTACCTAAGC.1 \n##                 1                 0                10                 1 \n##  ACTACTACGCTCCT.1  ACTAGGTGCAGGAG.1  ACTAGGTGCCGCTT.1  ACTAGGTGCTCAGA.1 \n##                10                 0                 2                 2 \n##  ACTAGGTGGGCATT.1  ACTAGGTGTGCTTT.1  ACTATCACAACGTC.1  ACTATCACGCCAAT.1 \n##                 1                 1                 9                 1 \n##  ACTATCACTGAGAA.1  ACTCAGGAAGATCC.1  ACTCAGGAAGATGA.1  ACTCAGGACTATTC.1 \n##                 3                 0                 2                 9 \n##  ACTCAGGATCTAGG.1  ACTCCCGACTTCGC.1  ACTCCCGAGCTCCT.1  ACTCCCGATACGAC.1 \n##                 0                 1                 5                 1 \n##  ACTCCTCTAGCACT.1  ACTCCTCTAGGGTG.1  ACTCCTCTCAATCG.1  ACTCCTCTCCCTTG.1 \n##                 0                 5                 1                 1 \n##  ACTCCTCTCTGTAG.1  ACTCCTCTGTAAGA.1  ACTCCTCTGTGAGG.1  ACTCCTCTTGGTCA.1 \n##                10                 0                 1                 0 \n## ACTCGAGACTTGTT.11  ACTCGAGAGCCAAT.1  ACTCGAGAGTTTGG.1  ACTCGCACACCAAC.1 \n##                 1                 2                 2                 3 \n##  ACTCGCACAGCCAT.1  ACTCGCACATGCCA.1  ACTCGCACCTTAGG.1  ACTCGCACGGTATC.1 \n##                 2                 1                 4                 2 \n##  ACTCGCACGTAGCT.1  ACTCGCACTGCACA.1  ACTCGCACTGTTCT.1 ACTCTATGAGATCC.11 \n##                 6                 0                 2                 1 \n##  ACTCTATGCCAAGT.1  ACTCTATGCCTTTA.1  ACTCTATGGGAAGC.1 ACTCTATGGTACGT.11 \n##                 1                 0                11                 0 \n##  ACTCTATGTGGTCA.1  ACTCTCCTAGCAAA.1  ACTCTCCTGGTAGG.1  ACTCTCCTTGAAGA.1 \n##                 0                 0                 4                 0 \n##  ACTCTCCTTGCTTT.1  ACTCTCCTTTGTGG.1  ACTGAGACAACGTC.1  ACTGAGACCCACCT.1 \n##                 2                 3                 0                 9 \n##  ACTGAGACGCGATT.1  ACTGAGACGGAACG.1  ACTGAGACGTGTAC.1  ACTGAGACTCAGGT.1 \n##                 2                 3                 0                 0 \n##  ACTGCCACGTCATG.1  ACTGCCACTCAGAC.1  ACTGCCTGACTGTG.1  ACTGCCTGCCGTTC.1 \n##                 2                 1                 0                 6 \n##  ACTGCCTGCTGACA.1  ACTGCCTGGGCAAG.1  ACTGCCTGGTGCTA.1  ACTGCCTGTGGAGG.1 \n##                 1                 5                 1                 1 \n##  ACTGGCCTAGAATG.1  ACTGGCCTAGCATC.1  ACTGGCCTCACTAG.1  ACTGGCCTCTACTT.1 \n##                 2                 3                 0                 0 \n##  ACTGGCCTCTTAGG.1  ACTGGCCTGGACAG.1  ACTGGCCTGGGATG.1  ACTGGCCTGTCTTT.1 \n##                 4                 0                 4                 1 \n##  ACTGGCCTTCTCCG.1  ACTGGCCTTGTGGT.1  ACTGTGGAACGGAG.1  ACTGTGGAACTGGT.1 \n##                 9                 6                 0                 0 \n##  ACTGTGGATGCTAG.1  ACTGTGGATGGTGT.1  ACTGTTACATGTCG.1  ACTGTTACCAAAGA.1 \n##                 1                 9                 2                 0 \n##  ACTGTTACCGTGTA.1  ACTGTTACGTATGC.1  ACTGTTACGTGCTA.1  ACTTAAGAAGCGTT.1 \n##                 1                 1                 0                 0 \n##  ACTTAAGAATTGGC.1  ACTTAAGATGCACA.1  ACTTAGCTTCGTGA.1  ACTTCAACACGGAG.1 \n##                 6                12                 5                 2 \n##  ACTTCAACAGAATG.1  ACTTCAACCCACAA.1  ACTTCAACCCCTTG.1  ACTTCAACCTACTT.1 \n##                 1                 2                 0                 1 \n##  ACTTCAACTTAGGC.1  ACTTCCCTCGGAGA.1 ACTTCCCTTTCTTG.11  ACTTCCCTTTTACC.1 \n##                 2                 0                 0                 0 \n##  ACTTCTGAACGTGT.1  ACTTCTGAGGTTTG.1  ACTTCTGATACGCA.1  ACTTCTGATTACCT.1 \n##                 3                 1                 0                 4 \n##  ACTTCTGATTCACT.1  ACTTGACTGAGCTT.1  ACTTGACTTGTGCA.1  ACTTGGGAAAAGTG.1 \n##                 0                 1                 2                 5 \n##  ACTTGGGACAAAGA.1  ACTTGGGACCTCAC.1  ACTTGGGATGTGCA.1  ACTTGTACAGGCGA.1 \n##                 5                 7                 3                 7 \n##  ACTTGTACATCGGT.1  ACTTGTACCTATGG.1  ACTTGTACGTAAGA.1  ACTTGTACTAAGGA.1 \n##                 0                 6                 3                 0 \n##  ACTTGTACTACTTC.1  ACTTTGTGAAAAGC.1  ACTTTGTGATAAGG.1  ACTTTGTGATTTCC.1 \n##                 2                 1                 0                 2 \n##  ACTTTGTGCGTGAT.1  AGAAACGAACCTAG.1  AGAAAGTGAGTCAC.1  AGAAAGTGCAGAGG.1 \n##                 7                 2                 2                 3 \n##  AGAAAGTGGCAGTT.1  AGAAAGTGGTGTCA.1  AGAACAGAACGCAT.1  AGAACAGAGTGTAC.1 \n##                 0                 0                 7                 6 \n##  AGAACAGATTCTTG.1  AGAACGCTCCACAA.1  AGAACGCTGTTTCT.1  AGAACGCTTCGCAA.1 \n##                 5                 3                 0                 2 \n##  AGAAGATGCTTGCC.1  AGAATACTACTGTG.1  AGAATACTGGTAGG.1  AGAATACTTCCTGC.1 \n##                 3                 6                 2                 0 \n##  AGAATACTTTCCGC.1  AGAATACTTTTCGT.1  AGAATGGAACCCTC.1  AGAATGGAACTACG.1 \n##                 0                 9                 3                13 \n##  AGAATGGACTAAGC.1  AGAATTTGAAACAG.1  AGAATTTGCGTGAT.1  AGAATTTGCTGAGT.1 \n##                 2                 0                 3                 5 \n##  AGAATTTGGGATCT.1  AGAATTTGGGTGAG.1  AGAATTTGGTTCTT.1  AGAATTTGTGCACA.1 \n##                 7                 5                 0                 0 \n##  AGAATTTGTTGCAG.1  AGACACACACCTAG.1  AGACACACAGTCAC.1  AGACACACAGTGTC.1 \n##                 2                 2                 7                 4 \n##  AGACACACCACTTT.1  AGACACACCATTGG.1  AGACACACCTGATG.1  AGACACACCTGGAT.1 \n##                 3                 0                10                 1 \n##  AGACACACTATGCG.1  AGACACTGAAGCAA.1  AGACACTGAGTCGT.1  AGACACTGATTGGC.1 \n##                 1                 2                 2                 0 \n##  AGACACTGCCGAAT.1  AGACACTGTAACCG.1  AGACACTGTACAGC.1  AGACACTGTCTCTA.1 \n##                 1                 4                 5                 0 \n##  AGACACTGTCTTAC.1  AGACACTGTCTTTG.1  AGACACTGTTAGGC.1  AGACACTGTTCACT.1 \n##                 3                 3                13                 0 \n##  AGACCTGAAAGCCT.1  AGACCTGACGGTAT.1  AGACCTGACTTAGG.1  AGACCTGATCGTAG.1 \n##                 1                 4                 2                10 \n##  AGACGTACAGGCGA.1  AGACGTACCTCTTA.1  AGACGTACGAGATA.1  AGACGTACGAGGGT.1 \n##                 2                 6                 1                 8 \n##  AGACGTACGGCGAA.1  AGACGTACTAGAGA.1  AGACTCGACATTCT.1  AGACTCGACTACCC.1 \n##                 6                 2                 2                 3 \n##  AGACTCGAGGTACT.1  AGACTGACCCTCGT.1  AGACTGACTCCTAT.1  AGACTGACTCTCGC.1 \n##                 1                 0                10                 1 \n##  AGACTGACTTCTTG.1  AGACTTCTCCAACA.1  AGACTTCTGTGCTA.1  AGAGAAACATAAGG.1 \n##                 1                 1                 0                 4 \n##  AGAGAAACCATCAG.1  AGAGAAACCTGTAG.1  AGAGAAACGGAAGC.1  AGAGAAACTCTTCA.1 \n##                 1                 2                 2                 1 \n##  AGAGAAACTGATGC.1  AGAGAAACTTGAGC.1  AGAGAAACTTTCTG.1  AGAGAATGCTGTAG.1 \n##                 5                 5                 4                 3 \n##  AGAGAATGGAGGTG.1  AGAGAATGGCTGTA.1  AGAGAATGGGGATG.1  AGAGATGAACCAGT.1 \n##                 1                 0                 0                 1 \n##  AGAGATGAACCTGA.1  AGAGATGAGTTGGT.1  AGAGATGATGGAAA.1  AGAGATGATGGTCA.1 \n##                 1                 5                 3                 6 \n##  AGAGATGATGTCGA.1  AGAGCGGACAACCA.1  AGAGCGGACCTCGT.1  AGAGCGGAGATAGA.1 \n##                 0                 3                 1                 2 \n##  AGAGCGGATGATGC.1  AGAGCTACCGATAC.1  AGAGCTACTCGCAA.1  AGAGCTACTCGTGA.1 \n##                 5                 0                 2                 9 \n##  AGAGGTCTACACGT.1  AGAGGTCTACGACT.1  AGAGGTCTGAAACA.1  AGAGGTCTGCGAGA.1 \n##                 1                 6                 0                 4 \n##  AGAGGTCTGTACCA.1  AGAGTCACAAGCAA.1  AGAGTCACACCTAG.1  AGAGTCACCGATAC.1 \n##                 4                 1                 5                 1 \n##  AGAGTCACTGCTCC.1  AGAGTCTGACGTAC.1  AGAGTCTGCTCAAG.1  AGAGTGCTCGTGAT.1 \n##                 1                 4                 0                 0 \n##  AGAGTGCTGCAGTT.1  AGAGTGCTGGCAAG.1  AGAGTGCTGGTAAA.1  AGAGTGCTGTTGAC.1 \n##                 3                 1                 2                 0 \n##  AGATATACACGCTA.1  AGATATACCGAATC.1  AGATATACGTTGGT.1  AGATATTGGCTCCT.1 \n##                 0                 1                 1                 0 \n##  AGATATTGGCTTAG.1  AGATATTGGGTATC.1  AGATATTGTGGAGG.1  AGATCGTGCCAAGT.1 \n##                 0                 1                 2                 1 \n##  AGATCGTGTTCCCG.1  AGATCTCTTGGTCA.1  AGATCTCTTTCGGA.1  AGATTAACCACCAA.1 \n##                 7                 1                 7                 9 \n##  AGATTAACCCTGTC.1  AGATTAACCGTAAC.1  AGATTAACCGTCTC.1  AGATTAACGACAGG.1 \n##                11                 7                 1                 5 \n##  AGATTAACGGAGTG.1  AGATTAACGGCAAG.1 AGATTAACGGTGTT.11  AGATTAACTATTCC.1 \n##                 0                 1                 2                 4 \n## AGATTAACTGAAGA.11  AGATTAACTTCACT.1  AGATTCCTAGTCTG.1  AGATTCCTGAATGA.1 \n##                 1                 0                 1                 0 \n##  AGATTCCTGGTAGG.1  AGATTCCTGTCTAG.1  AGATTCCTGTTGTG.1  AGATTCCTTTCTTG.1 \n##                 0                 1                 0                 0 \n##  AGCAAAGACTTTAC.1 AGCAACACCGAGAG.11  AGCAACACGACGGA.1  AGCAACACGATACC.1 \n##                 3                 1                 6                 8 \n##  AGCAACACGGACAG.1  AGCAACACGGACGA.1  AGCAACACGGTTAC.1  AGCAACACTGCCTC.1 \n##                 9                 4                 0                 8 \n##  AGCAAGCTAAGGTA.1  AGCAAGCTAGCACT.1  AGCAAGCTCCCAAA.1  AGCAAGCTCGCAAT.1 \n##                 6                11                 2                 1 \n##  AGCAAGCTTGGTAC.1  AGCAAGCTTGGTCA.1  AGCAAGCTTGTGGT.1  AGCACAACCCGCTT.1 \n##                 3                 0                 0                 1 \n##  AGCACAACCGGAGA.1  AGCACAACGAACTC.1  AGCACTGAAGCCTA.1  AGCACTGAATAAGG.1 \n##                 2                 4                 0                 0 \n##  AGCACTGAATGACC.1  AGCACTGAATGCCA.1  AGCACTGACCTTGC.1  AGCACTGATTATCC.1 \n##                 0                 1                 1                 4 \n##  AGCATCGAACTCAG.1  AGCATCGAGGGTGA.1  AGCATCGATGAGAA.1  AGCATCGATTCGCC.1 \n##                 0                 4                 4                 0 \n##  AGCATGACAGCTCA.1  AGCATGACGCTAAC.1  AGCATGACGTAAGA.1  AGCATGACTTACTC.1 \n##                 0                 1                 3                 1 \n##  AGCATTCTAAGTAG.1  AGCATTCTACGTGT.1  AGCATTCTAGTCAC.1  AGCATTCTGAGCTT.1 \n##                 2                 1                 5                 6 \n##  AGCATTCTTAGAAG.1  AGCCAATGAGTGCT.1  AGCCAATGCAGTCA.1  AGCCAATGCCTATT.1 \n##                 0                 0                 7                 0 \n##  AGCCAATGGTCTAG.1  AGCCAATGGTTCTT.1  AGCCAATGTCAGGT.1  AGCCAATGTGCTTT.1 \n##                 6                 1                 3                 1 \n##  AGCCAATGTTTGGG.1  AGCCACCTAGAATG.1  AGCCACCTCCCTAC.1  AGCCACCTTGAAGA.1 \n##                 4                 1                 2                 0 \n##  AGCCACCTTGTAGC.1  AGCCACCTTGTTCT.1  AGCCGGACCGAATC.1  AGCCGGACCGTCTC.1 \n##                 3                 5                 1                 2 \n##  AGCCGGACCTCTCG.1  AGCCGGACTCCAGA.1  AGCCGGTGACGTGT.1  AGCCGGTGAGAGAT.1 \n##                 8                 3                 8                 0 \n##  AGCCGGTGAGAGGC.1  AGCCGGTGCCTTCG.1  AGCCGGTGCTACTT.1  AGCCGGTGCTGACA.1 \n##                 0                 2                 0                 9 \n##  AGCCGGTGGAATAG.1  AGCCGGTGTAGAAG.1  AGCCGTCTACAGTC.1  AGCCGTCTTGAGAA.1 \n##                 3                10                 1                 0 \n##  AGCCTCACAAAAGC.1  AGCCTCACACGACT.1  AGCCTCACACGTAC.1  AGCCTCACCCCACT.1 \n##                 0                 0                 6                 2 \n##  AGCCTCACCGCTAA.1  AGCCTCACCTCCAC.1  AGCCTCACGGTCAT.1  AGCCTCACGTCCTC.1 \n##                 1                 6                 3                 0 \n## AGCCTCACTAACCG.11  AGCCTCACTGAAGA.1 AGCCTCTGACTGGT.11  AGCCTCTGCCCAAA.1 \n##                 1                 2                 0                 0 \n##  AGCCTCTGTATCTC.1  AGCCTCTGTGTTCT.1  AGCCTCTGTTGCGA.1  AGCGAACTAAAACG.1 \n##                 2                10                 2                 8 \n##  AGCGAACTAATGCC.1  AGCGAACTCCATGA.1  AGCGAACTGAGCAG.1  AGCGAACTGCTACA.1 \n##                 0                11                 6                 7 \n##  AGCGAACTGCTGTA.1  AGCGAACTTATGCG.1  AGCGAACTTTCCAT.1  AGCGATACGGGCAA.1 \n##                 3                 0                 1                 1 \n##  AGCGATACTTGAGC.1  AGCGATTGAGCGTT.1  AGCGATTGTTTGTC.1  AGCGCCGAAAAGCA.1 \n##                 2                 3                 8                 1 \n##  AGCGCCGAGCAGAG.1  AGCGCCGATACTTC.1  AGCGCCGATGACCA.1  AGCGCTCTCATGAC.1 \n##                 1                 0                 7                 2 \n##  AGCGCTCTCTCTTA.1  AGCGCTCTGGCATT.1 AGCGCTCTGTATGC.11  AGCGCTCTGTGTTG.1 \n##                 1                 1                 4                 1 \n##  AGCGCTCTTTAGGC.1  AGCGGCACCAACTG.1  AGCGGCACCTCGAA.1 AGCGGCACCTTAGG.11 \n##                 0                 2                 2                 0 \n##  AGCGGCACCTTCTA.1  AGCGGCACCTTGGA.1  AGCGGCACGGTTCA.1  AGCGGCACGTCTAG.1 \n##                 0                 1                 7                 4 \n##  AGCGGCTGAAGATG.1  AGCGGCTGACACTG.1  AGCGGCTGAGGTCT.1  AGCGGCTGCATGGT.1 \n##                 4                10                 3                 1 \n##  AGCGGCTGCCTCGT.1  AGCGGCTGGTTGGT.1  AGCGGCTGTCATTC.1  AGCGGCTGTGTTCT.1 \n##                 1                 2                 1                10 \n##  AGCGGCTGTTGTGG.1  AGCGGGCTAACCTG.1  AGCGGGCTACGGAG.1  AGCGGGCTCACCAA.1 \n##                 1                 1                 9                 1 \n##  AGCGGGCTCCAAGT.1  AGCGGGCTCCTGTC.1  AGCGGGCTGTAGGG.1  AGCGGGCTTGTAGC.1 \n##                 1                 5                 1                 1 \n##  AGCGGGCTTTACCT.1  AGCGTAACAGATCC.1  AGCGTAACCGTAGT.1  AGCGTAACGCATCA.1 \n##                12                 3                 0                 0 \n##  AGCGTAACGGAGCA.1  AGCGTAACGTAAGA.1  AGCTCGCTCATGGT.1  AGCTCGCTGATAGA.1 \n##                 0                 0                 6                 1 \n##  AGCTGAACACACCA.1  AGCTGAACCTGACA.1  AGCTGAACGCATCA.1  AGCTGAACGGAACG.1 \n##                 2                 2                 0                 4 \n##  AGCTGAACTGTGCA.1  AGCTGCCTACACCA.1  AGCTGCCTACCGAT.1  AGCTGCCTCCTTGC.1 \n##                 4                 3                 0                 1 \n##  AGCTGCCTGAATCC.1  AGCTGCCTGACAAA.1  AGCTGCCTGACAGG.1  AGCTGCCTTCGACA.1 \n##                 2                 7                 5                 1 \n##  AGCTGCCTTCGATG.1  AGCTGCCTTCTGGA.1  AGCTGTGACGACTA.1  AGCTGTGAGAGGGT.1 \n##                 7                 3                 7                 2 \n##  AGCTGTGAGCAGTT.1  AGCTTACTAATGCC.1  AGCTTACTAGCCAT.1  AGCTTACTCACACA.1 \n##                 2                 2                 0                 0 \n##  AGCTTACTGTCATG.1  AGCTTACTTCAGGT.1  AGCTTACTTCCGAA.1  AGCTTTACAGTGTC.1 \n##                 0                 1                 1                 1 \n##  AGCTTTACCTATGG.1  AGCTTTACCTCAGA.1  AGCTTTACTGCTGA.1  AGCTTTACTTTCTG.1 \n##                 1                 1                 6                 1 \n##  AGGAAATGCAACTG.1  AGGAAATGGAAACA.1  AGGAAATGGGTCTA.1  AGGAAATGGTTACG.1 \n##                 1                 0                 0                 6 \n##  AGGAAATGTGCTAG.1  AGGAACCTCCTAAG.1  AGGAACCTGAAAGT.1  AGGAATGAAAGATG.1 \n##                 3                 1                 3                 2 \n##  AGGAATGATCACGA.1  AGGAATGATGCCCT.1  AGGACACTACAGCT.1  AGGACACTCATGGT.1 \n##                 2                 8                 9                 1 \n##  AGGACACTGGAGCA.1  AGGACACTTGCATG.1  AGGACTTGAAGAAC.1  AGGACTTGACCAAC.1 \n##                 0                 1                13                 2 \n##  AGGACTTGAGTACC.1  AGGACTTGAGTGCT.1  AGGACTTGCTAGAC.1  AGGACTTGGGTTTG.1 \n##                 0                 2                 0                 7 \n##  AGGACTTGGTTCAG.1  AGGACTTGGTTGGT.1  AGGACTTGTCTCCG.1  AGGAGTCTACTGTG.1 \n##                 0                 0                 2                 1 \n##  AGGAGTCTCGTAAC.1  AGGAGTCTCGTCTC.1  AGGAGTCTGAGACG.1  AGGAGTCTGTTGTG.1 \n##                 1                 0                 2                 1 \n##  AGGAGTCTTGAGGG.1  AGGAGTCTTTACCT.1  AGGATAGACAACTG.1  AGGATAGACGACAT.1 \n##                 0                 9                 4                 0 \n##  AGGATAGAGGACTT.1  AGGATGCTCTCAAG.1  AGGATGCTTATGCG.1  AGGATGCTTCCCAC.1 \n##                 9                 1                 4                 3 \n##  AGGCAACTAGTCGT.1  AGGCAACTATTGGC.1  AGGCAACTTAAGGA.1  AGGCAACTTGCTAG.1 \n##                 0                 0                 4                 1 \n##  AGGCAGGAAAAAGC.1  AGGCAGGAACGTGT.1  AGGCAGGAGCTTCC.1  AGGCAGGATCCAGA.1 \n##                 7                 0                 1                 3 \n##  AGGCCTCTACCATG.1  AGGCCTCTAGAATG.1  AGGCCTCTGACGTT.1  AGGCCTCTGTAGCT.1 \n##                 7                 4                 0                 3 \n##  AGGCCTCTTCACCC.1  AGGCCTCTTGTGAC.1  AGGCCTCTTTGACG.1  AGGCTAACATAAGG.1 \n##                 5                 0                 1                 2 \n##  AGGCTAACGTACAC.1  AGGCTAACTGAAGA.1  AGGCTAACTGACAC.1  AGGGACGAACTAGC.1 \n##                 0                 2                 0                 0 \n##  AGGGACGACCTGTC.1  AGGGACGAGCCCTT.1  AGGGACGAGGGAGT.1  AGGGACGATCCGTC.1 \n##                 1                 3                 1                 7 \n##  AGGGACGATCTACT.1  AGGGAGTGCTTCTA.1  AGGGCCACACAGTC.1  AGGGCCACCCATGA.1 \n##                 3                 1                 6                 2 \n##  AGGGCCACCGGGAA.1  AGGGCCACTCCTGC.1  AGGGCCTGAAGGCG.1  AGGGCCTGCGCTAA.1 \n##                 2                 0                 0                 0 \n##  AGGGCCTGGACAGG.1  AGGGCCTGTCGTTT.1  AGGGCGCTATTTCC.1  AGGGCGCTCATTTC.1 \n##                 1                 3                 0                 0 \n##  AGGGCGCTTAGTCG.1  AGGGCGCTTATGGC.1  AGGGCGCTTGAAGA.1  AGGGCGCTTGCTTT.1 \n##                 2                 0                 5                 0 \n##  AGGGCGCTTTCTAC.1  AGGGTGGAATCTTC.1  AGGGTGGACACTTT.1  AGGGTGGAGGAAGC.1 \n##                 2                 1                 5                 4 \n##  AGGGTGGATGAGGG.1  AGGGTGGATTGGTG.1  AGGGTTTGACGGTT.1  AGGGTTTGACGTTG.1 \n##                 5                 4                 0                 0 \n##  AGGGTTTGATGACC.1  AGGGTTTGGTAAGA.1  AGGGTTTGGTTGCA.1  AGGTACACAGGCGA.1 \n##                 4                 4                 2                 8 \n##  AGGTACACAGTCAC.1  AGGTACACCCAAGT.1 AGGTACACCGTGTA.11  AGGTACACGAGACG.1 \n##                 6                 1                 5                 0 \n##  AGGTACTGATGCTG.1  AGGTACTGCCCACT.1  AGGTACTGGAAAGT.1  AGGTACTGTTCCAT.1 \n##                 4                 9                 6                 0 \n##  AGGTCATGCTTATC.1  AGGTCATGGGAACG.1  AGGTCATGTTTCAC.1  AGGTCTGACTTCTA.1 \n##                 0                 6                 5                 0 \n##  AGGTCTGATAGCGT.1  AGGTCTGATCTCCG.1  AGGTCTGATGCCTC.1  AGGTGGGAATGCCA.1 \n##                 3                 0                 3                 8 \n##  AGGTGTTGGTACGT.1  AGGTGTTGGTGTCA.1  AGGTGTTGGTTGTG.1  AGGTGTTGGTTTGG.1 \n##                 2                 1                 0                 8 \n##  AGGTGTTGTCTTCA.1  AGGTTCGAGTCTTT.1  AGGTTCGATTCACT.1  AGGTTGTGACTGGT.1 \n##                 0                 0                 2                 1 \n##  AGGTTGTGCAGTTG.1  AGGTTGTGCCTTGC.1  AGGTTGTGGTAGGG.1  AGGTTGTGTGGCAT.1 \n##                 2                 4                 1                10 \n##  AGTAAGGAACACCA.1  AGTAAGGATCGATG.1  AGTAAGGATGAACC.1  AGTAATACATCGGT.1 \n##                 5                 1                 0                10 \n##  AGTAATACCTCTTA.1  AGTAATACCTGGTA.1  AGTAATACGCATCA.1  AGTAATACGGTCTA.1 \n##                 0                 1                 4                 6 \n##  AGTAATACGTCTGA.1  AGTAATACTAGAGA.1  AGTAATACTAGCGT.1  AGTAATTGAGCGGA.1 \n##                 3                 6                 4                 8 \n##  AGTAATTGCTAAGC.1  AGTAATTGCTGACA.1  AGTAATTGCTGATG.1  AGTAATTGGCGAAG.1 \n##                 5                 1                 1                 3 \n##  AGTAATTGGTTCTT.1  AGTAATTGTTGGCA.1  AGTACGTGCATCAG.1  AGTACGTGCCGTAA.1 \n##                 2                 5                 0                 0 \n##  AGTACGTGGATAGA.1  AGTACGTGGCTGAT.1  AGTACGTGTGTCAG.1  AGTACTCTACACAC.1 \n##                 1                 4                 0                 3 \n##  AGTACTCTCCTATT.1  AGTACTCTGAGACG.1  AGTACTCTTCGCAA.1  AGTACTCTTCTTAC.1 \n##                 3                 1                 1                10 \n##  AGTAGAGAAAAGCA.1  AGTAGAGAAACGTC.1  AGTAGAGACTGAGT.1  AGTAGAGAGAGGGT.1 \n##                 0                 0                 1                 0 \n##  AGTAGAGAGTTTCT.1  AGTAGGCTCAGATC.1  AGTAGGCTCTTGAG.1  AGTAGGCTTACTTC.1 \n##                 6                 4                 0                 9 \n##  AGTATAACGGCAAG.1  AGTATAACGTCACA.1  AGTATCCTACCGAT.1  AGTATCCTCTACGA.1 \n##                 2                 2                 0                 0 \n##  AGTATCCTCTTACT.1  AGTATCCTGCAGTT.1  AGTATCCTGCTATG.1  AGTATCCTGGGACA.1 \n##                 0                 2                 1                 2 \n##  AGTATCCTGGTGGA.1  AGTATCCTGGTTTG.1  AGTATCCTGTACAC.1  AGTATCCTTCGTTT.1 \n##                 1                 0                 2                 2 \n##  AGTATCCTTGGCAT.1  AGTCACGACTGGAT.1  AGTCACGAGCAGTT.1  AGTCAGACGGTAGG.1 \n##                 0                 0                 2                 6 \n## AGTCAGACTTACCT.11  AGTCCAGACCGATA.1  AGTCCAGACCTTTA.1  AGTCGAACAGAGTA.1 \n##                 0                 0                 2                 3 \n##  AGTCGAACCCATGA.1  AGTCGAACGGGTGA.1  AGTCGCCTCATGCA.1  AGTCGCCTCGGGAA.1 \n##                 0                 0                 4                 2 \n##  AGTCGCCTGTAAGA.1  AGTCGCCTTGTGCA.1  AGTCTACTACACGT.1  AGTCTACTAGCAAA.1 \n##                 6                 0                 2                 3 \n##  AGTCTACTCTATGG.1  AGTCTACTTGTGCA.1  AGTCTTACACACCA.1  AGTCTTACCAACCA.1 \n##                 3                 5                 5                 0 \n##  AGTCTTACGATACC.1  AGTCTTACGTGCTA.1  AGTCTTACTGAGGG.1  AGTGAAGACACTCC.1 \n##                 9                 5                 5                 0 \n##  AGTGAAGACAGAGG.1  AGTGAAGACGAATC.1  AGTGAAGAGGTTCA.1  AGTGAAGAGTTACG.1 \n##                 1                 4                 5                 2 \n##  AGTGACACGAACCT.1  AGTGACACGTACGT.1  AGTGACACTCGCCT.1  AGTGACACTGTCTT.1 \n##                 0                 2                 4                 9 \n##  AGTGACTGAGTCGT.1  AGTGACTGATGTGC.1  AGTGACTGCACACA.1  AGTGACTGCACTCC.1 \n##                 1                 9                 0                 2 \n##  AGTGACTGTTCGTT.1  AGTGCAACAGATGA.1  AGTGCAACCACTTT.1  AGTGCAACCGGTAT.1 \n##                 5                 1                 3                 0 \n##  AGTGTGACACACAC.1  AGTGTGACCAGAGG.1  AGTGTGACCATGCA.1  AGTGTGACCGTTAG.1 \n##                 0                 1                 1                 0 \n##  AGTGTGACCTGTAG.1  AGTGTGACGCGAAG.1  AGTGTGACGCTACA.1  AGTGTGACGGAACG.1 \n##                 9                 1                 1                 1 \n##  AGTGTGACGGGCAA.1  AGTGTTCTAAGGTA.1  AGTGTTCTAGTGTC.1  AGTTAAACCCGTTC.1 \n##                 4                 2                 1                 9 \n##  AGTTAAACCGCAAT.1  AGTTAAACCGTACA.1  AGTTAAACCTGAGT.1  AGTTAAACCTGTCC.1 \n##                 8                 6                 2                 1 \n##  AGTTAAACTGCCTC.1  AGTTATGACACTAG.1  AGTTATGACTACGA.1  AGTTATGAGCGTAT.1 \n##                 7                 9                 1                 2 \n##  AGTTATGATAGCGT.1  AGTTATGATGAAGA.1  AGTTATGATGAGCT.1  AGTTATGATTTACC.1 \n##                 6                 0                 5                 1 \n##  AGTTATGATTTCTG.1  AGTTCTACAGAAGT.1  AGTTCTACAGGTTC.1  AGTTCTACCAGGAG.1 \n##                 5                 1                 7                 2 \n##  AGTTCTACCTACCC.1  AGTTCTACGGGTGA.1  AGTTCTACGTACCA.1  AGTTCTACTAAGGA.1 \n##                 1                 1                 0                 6 \n##  AGTTCTACTGTCAG.1  AGTTCTTGCTGAGT.1  AGTTCTTGTCCGAA.1  AGTTGTCTACACCA.1 \n##                 0                 7                 9                 0 \n##  AGTTGTCTACACGT.1  AGTTGTCTATTCCT.1  AGTTGTCTCCTTTA.1  AGTTGTCTGGGATG.1 \n##                 0                 8                 1                 4 \n##  AGTTGTCTTACTGG.1  AGTTGTCTTCAAGC.1  AGTTTAGACCACCT.1  AGTTTCACCTGACA.1 \n##                 0                 1                 1                 4 \n##  AGTTTCACGACACT.1  AGTTTCACTGCTAG.1  AGTTTGCTCTATTC.1  AGTTTGCTGCTACA.1 \n##                 1                 0                 6                 2 \n##  AGTTTGCTGGGATG.1  AGTTTGCTGGTTCA.1  AGTTTGCTTCAAGC.1  AGTTTGCTTGAAGA.1 \n##                 2                 0                 0                 1 \n## AGTTTGCTTGTGGT.11  AGTTTGCTTTCTGT.1  AGTTTGCTTTGTCT.1  ATAAACACCGAGTT.1 \n##                 3                 0                 2                 0 \n## ATAAACACCTACGA.11  ATAAACACCTGTAG.1  ATAAACACGGAGCA.1  ATAAACACTTCGGA.1 \n##                 4                 1                 3                 2 \n##  ATAACAACAGTCGT.1  ATAACAACCGAATC.1  ATAACAACGGATCT.1  ATAACAACTGTAGC.1 \n##                 0                 1                 3                 3 \n##  ATAACATGACTCAG.1  ATAACATGCTGATG.1  ATAACATGTTCTGT.1  ATAACCCTACGCAT.1 \n##                 1                 1                 2                11 \n##  ATAACCCTCCCGTT.1  ATAACCCTGAACCT.1  ATAACCCTTCACGA.1  ATAAGTACAAGTGA.1 \n##                 3                 2                 2                 0 \n##  ATAAGTACAGAACA.1  ATAAGTACCTCTCG.1  ATAAGTACTAGAGA.1  ATAAGTACTCAGTG.1 \n##                 2                 1                 4                 9 \n##  ATAAGTACTGGGAG.1  ATAAGTTGCTCATT.1  ATAAGTTGGTGCTA.1  ATAATCGAAAGTAG.1 \n##                 0                 1                 6                 3 \n##  ATAATCGAGTCGAT.1  ATAATCGAGTTTGG.1  ATAATCGATCGATG.1  ATAATGACCTTGAG.1 \n##                 1                 1                 1                 6 \n##  ATAATGACGTGCAT.1  ATAATGACTATGCG.1  ATACAATGCACTTT.1  ATACAATGCTCCAC.1 \n##                 1                 3                 1                 1 \n##  ATACAATGCTGAGT.1  ATACAATGTCATTC.1  ATACAATGTTGCAG.1  ATACAATGTTGCTT.1 \n##                 0                 0                 1                 0 \n##  ATACACCTGTAAGA.1  ATACACCTTAAAGG.1  ATACACCTTTGCGA.1  ATACCACTACCATG.1 \n##                10                 3                 6                 3 \n##  ATACCACTACTAGC.1  ATACCACTCCAACA.1  ATACCACTGGTACT.1  ATACCGGACTTATC.1 \n##                 0                 0                 9                 1 \n##  ATACCGGAGAAGGC.1  ATACCGGAGAATGA.1  ATACCGGAGCCAAT.1  ATACCGGATCGCAA.1 \n##                 1                 2                 7                 1 \n##  ATACCGGATCTTCA.1  ATACCGGATTACTC.1  ATACCGGATTCGTT.1  ATACCTACAAGGGC.1 \n##                 2                 1                 3                 3 \n##  ATACCTACAGAGGC.1  ATACCTACGTAAGA.1  ATACCTACTGGAAA.1  ATACCTTGACACAC.1 \n##                 0                 0                 0                 2 \n##  ATACCTTGACCGAT.1  ATACCTTGTCTTTG.1  ATACCTTGTGGCAT.1  ATACGGACAGATCC.1 \n##                 1                 9                 5                 5 \n## ATACGGACCGTAGT.11  ATACGGACGAATCC.1  ATACGGACGAATGA.1  ATACGGACGTTGCA.1 \n##                 0                 0                 0                 1 \n##  ATACGTCTACTCAG.1  ATACGTCTTCGTAG.1  ATAGAACTACCTGA.1  ATAGAACTACTACG.1 \n##                 0                 5                 1                 1 \n##  ATAGAACTCGCCTT.1  ATAGAACTGCAAGG.1  ATAGAACTTGACTG.1  ATAGAACTTTGACG.1 \n##                 0                 2                 0                 0 \n##  ATAGATACAGAACA.1  ATAGATACATGCCA.1  ATAGATACCTGTCC.1  ATAGATACCTTCTA.1 \n##                 7                 1                 0                 0 \n##  ATAGATACGTTACG.1  ATAGATACGTTGTG.1 ATAGATACTGACTG.11 ATAGATTGAAACAG.11 \n##                 0                 5                 0                 3 \n##  ATAGATTGCCCTTG.1  ATAGATTGGGGAGT.1  ATAGATTGTACTGG.1  ATAGATTGTTCACT.1 \n##                 0                10                 2                 3 \n##  ATAGCCGACAGTTG.1  ATAGCCGACCCACT.1  ATAGCCGACTTGCC.1  ATAGCGTGAGAGAT.1 \n##                 4                 2                 0                 0 \n##  ATAGCGTGAGGTTC.1  ATAGCGTGCTCGAA.1  ATAGCTCTACTCAG.1  ATAGGAGAACACGT.1 \n##                 0                 0                 0                 0 \n##  ATAGGAGAACCTGA.1  ATAGGAGACACACA.1  ATAGGAGAGCTATG.1  ATAGGAGATGTCCC.1 \n##                 6                 4                 4                 0 \n##  ATAGGAGATTGCTT.1  ATAGGCTGAGCTAC.1  ATAGGCTGGGAAGC.1  ATAGGCTGGTAAAG.1 \n##                 1                 0                 4                 0 \n##  ATAGTCCTAAACGA.1  ATAGTCCTCAAAGA.1  ATAGTCCTCTGCAA.1  ATAGTCCTGCCATA.1 \n##                 0                 4                 1                 4 \n##  ATAGTCCTTCGACA.1  ATAGTTGAAACGTC.1  ATAGTTGACAGCTA.1  ATAGTTGACCTCCA.1 \n##                 8                 2                 1                 1 \n##  ATAGTTGATCGTAG.1  ATATACGACCTACC.1  ATATACGAGTAGGG.1  ATATACGATGTTTC.1 \n##                 7                 0                 7                 5 \n##  ATATAGTGAGGCGA.1  ATATAGTGCAATCG.1  ATATAGTGGATGAA.1  ATATAGTGTGCTAG.1 \n##                 5                 1                 2                 9 \n##  ATATGAACAGGGTG.1  ATATGAACGAAACA.1  ATATGAACGGTGGA.1  ATATGAACTGGATC.1 \n##                 2                 1                 0                 4 \n##  ATATGCCTAAACGA.1  ATATGCCTAACGAA.1  ATATGCCTAGGTCT.1  ATATGCCTGCATAC.1 \n##                 1                 4                 8                 2 \n##  ATATGCCTTCACCC.1  ATATGCCTTTTACC.1  ATCAAATGCAACTG.1  ATCAAATGGAATGA.1 \n##                 1                 0                 0                 2 \n##  ATCAAATGTTCTCA.1  ATCAACCTCGTTGA.1  ATCAACCTTTCACT.1  ATCACACTATTCGG.1 \n##                 5                 1                 0                 3 \n##  ATCACACTCCATAG.1  ATCACACTCGTAAC.1  ATCACACTCTGGAT.1  ATCACACTGATAGA.1 \n##                 0                 3                 0                 1 \n##  ATCACACTGGCGAA.1  ATCACACTGTCGAT.1 ATCACGGAACCCTC.11  ATCACGGAAGTAGA.1 \n##                 0                 3                 7                 7 \n##  ATCACGGACCTTGC.1  ATCACGGACTAAGC.1  ATCACGGAGACGTT.1  ATCACGGATCACCC.1 \n##                 1                 4                 0                 1 \n##  ATCACGGATGTCAG.1  ATCACTACAGCCTA.1  ATCACTACGAGACG.1  ATCACTACGTGAGG.1 \n##                 2                 3                 3                 0 \n##  ATCACTACTGCAAC.1  ATCACTACTGGAGG.1  ATCACTTGACGTGT.1  ATCACTTGGAATAG.1 \n##                 2                 0                 1                 0 \n##  ATCACTTGTCCAGA.1  ATCAGGTGGCTACA.1  ATCAGGTGTCATTC.1  ATCAGGTGTGAGGG.1 \n##                 1                 0                13                 0 \n##  ATCATCTGACGACT.1  ATCATCTGCCACCT.1  ATCATCTGGCTAAC.1  ATCATCTGGCTATG.1 \n##                 3                 5                 1                 9 \n##  ATCATCTGTAACCG.1  ATCATCTGTACTTC.1  ATCATGCTATTGGC.1  ATCATGCTCAATCG.1 \n##                 0                 1                 5                 1 \n##  ATCATGCTCAGATC.1  ATCATGCTCTGACA.1  ATCATGCTGAGGGT.1  ATCATGCTGCTCCT.1 \n##                 0                 4                 4                 2 \n##  ATCATGCTGGAGCA.1  ATCATGCTTCAGTG.1  ATCATGCTTGAGAA.1  ATCCAGGAACAGTC.1 \n##                 3                 4                 0                 0 \n##  ATCCAGGAAGAACA.1  ATCCAGGAATAAGG.1  ATCCAGGACTGACA.1 ATCCAGGATAGTCG.11 \n##                 0                 1                 3                 2 \n##  ATCCAGGATCTCGC.1  ATCCATACGAGACG.1  ATCCATACGCAGTT.1  ATCCATACTTCTGT.1 \n##                 0                 0                 0                 7 \n##  ATCCCGTGAAGCCT.1  ATCCCGTGAGTCTG.1  ATCCCGTGGATGAA.1  ATCCCGTGGGTGAG.1 \n##                 5                 0                 0                 0 \n##  ATCCCGTGTGCACA.1  ATCCGCACCCAACA.1  ATCCGCACCGTAGT.1  ATCCGCACGGACAG.1 \n##                 2                 3                 1                 5 \n##  ATCCGCACGGAGGT.1  ATCCGCACGTTAGC.1  ATCCGCACTCCTTA.1  ATCCGCACTTGAGC.1 \n##                 0                 1                 7                 2 \n##  ATCCTAACACTGTG.1  ATCCTAACCCTTCG.1  ATCCTAACCTGGAT.1  ATCCTAACGCGTAT.1 \n##                 2                 4                 0                 5 \n##  ATCCTAACTATGGC.1  ATCGACGAACTAGC.1  ATCGACGAAGTAGA.1  ATCGACGACTGTTT.1 \n##                 1                 1                 3                 5 \n##  ATCGAGTGCTGTAG.1  ATCGCAGAAAGGTA.1  ATCGCAGAACTGTG.1  ATCGCAGAAGGTCT.1 \n##                 0                 1                 1                 0 \n##  ATCGCAGATAAAGG.1  ATCGCCACAGAGAT.1  ATCGCCACTGTAGC.1 ATCGCCACTGTCCC.11 \n##                 1                 2                 0                 4 \n##  ATCGCCTGACCTTT.1  ATCGCCTGCAGTTG.1  ATCGCCTGCTTGAG.1  ATCGCCTGTGTTCT.1 \n##                 1                 1                 4                 3 \n##  ATCGCCTGTTTCTG.1  ATCGCGCTAGAAGT.1  ATCGCGCTAGATCC.1  ATCGCGCTCAATCG.1 \n##                 5                 0                 6                 1 \n##  ATCGCGCTCACTTT.1  ATCGCGCTGCCAAT.1  ATCGCGCTTCTTTG.1  ATCGGAACACCTCC.1 \n##                 1                 5                 0                 3 \n##  ATCGGTGAAACAGA.1  ATCGGTGAAACGGG.1  ATCGGTGAACCAGT.1  ATCGGTGACGAGAG.1 \n##                 5                 1                 6                 2 \n##  ATCGGTGACTCAAG.1  ATCGGTGACTGCTC.1  ATCGGTGAGAGGCA.1  ATCGGTGAGCGTAT.1 \n##                 5                 0                 1                 0 \n##  ATCGGTGAGTTGCA.1  ATCGGTGATCCCAC.1  ATCGTTTGACGTGT.1  ATCGTTTGCTGTTT.1 \n##                 1                 2                10                 4 \n##  ATCGTTTGTTGAGC.1  ATCTACACAACTGC.1  ATCTACACACGCAT.1  ATCTACACCTGACA.1 \n##                 0                 6                 0                 2 \n##  ATCTACACCTGGAT.1  ATCTACTGGGTCAT.1  ATCTACTGTTTGCT.1  ATCTCAACAACCAC.1 \n##                 3                 2                 2                 6 \n## ATCTCAACGTCAAC.11  ATCTCAACTCCTGC.1  ATCTCAACTTCGTT.1  ATCTGACTAGATGA.1 \n##                 0                 0                 5                 0 \n##  ATCTGACTAGCTCA.1  ATCTGACTCACTGA.1  ATCTGACTCAGCTA.1  ATCTGACTCATTTC.1 \n##                 6                 2                 8                 1 \n##  ATCTGACTGATAAG.1  ATCTGGGAAGCACT.1  ATCTGGGAATTTCC.1  ATCTGGGACACACA.1 \n##                 6                 4                 0                 0 \n##  ATCTGGGACTTCCG.1  ATCTGGGAGTCGAT.1  ATCTGGGATAAGGA.1  ATCTGGGATGCCCT.1 \n##                 6                 1                 4                 2 \n##  ATCTGTTGAGCTAC.1  ATCTGTTGTGGTGT.1  ATCTTGACAGAGAT.1  ATCTTGACCACAAC.1 \n##                 9                 3                 5                 3 \n##  ATCTTGACCTCGCT.1  ATCTTGACGCTGAT.1  ATCTTGACTCTACT.1  ATCTTTCTAAAAGC.1 \n##                 0                 5                 4                 1 \n##  ATCTTTCTGTTGCA.1  ATCTTTCTGTTTCT.1  ATCTTTCTTCATTC.1  ATCTTTCTTCCCGT.1 \n##                 2                 0                 2                 3 \n##  ATCTTTCTTGCCTC.1  ATCTTTCTTTCGTT.1  ATGAAACTAGAGTA.1 ATGAAACTGCTGTA.11 \n##                 7                 1                 1                 0 \n##  ATGAAACTGGTAAA.1  ATGAAGGATGCTGA.1  ATGAAGGATGGTAC.1  ATGACGTGCCCTCA.1 \n##                 0                 1                 5                 6 \n##  ATGACGTGCGACAT.1  ATGACGTGTGAGAA.1  ATGAGAGAAAGGCG.1  ATGAGAGACTTCGC.1 \n##                 2                 4                 1                 0 \n##  ATGAGAGAGTTGGT.1  ATGAGCACACGACT.1  ATGAGCACATGACC.1  ATGAGCACCCTGTC.1 \n##                 4                 1                 7                 0 \n##  ATGAGCACCCTTCG.1  ATGATAACAAACAG.1  ATGATAACCGTGAT.1  ATGATAACCTAAGC.1 \n##                 1                 1                 0                 0 \n##  ATGATAACGAGGAC.1  ATGATAACTGCCTC.1  ATGATATGAAAAGC.1  ATGATATGACCCAA.1 \n##                 4                 2                 0                 0 \n##  ATGATATGCCGCTT.1  ATGATATGGACACT.1  ATGATATGGCATAC.1  ATGATATGGTCAAC.1 \n##                13                 2                 4                 3 \n##  ATGATATGGTCGTA.1  ATGCACGAAAAGCA.1  ATGCACGACTGGTA.1  ATGCACGAGAATAG.1 \n##                 5                 0                 0                 5 \n##  ATGCACGATGGAAA.1  ATGCAGACACTCTT.1  ATGCAGACATGCTG.1  ATGCAGACCTCTAT.1 \n##                 2                 2                 0                 1 \n##  ATGCAGACGCGAAG.1  ATGCAGACTGCACA.1  ATGCAGTGCATGAC.1  ATGCAGTGCGATAC.1 \n##                 1                 7                 3                 5 \n##  ATGCAGTGGAGGGT.1  ATGCAGTGGGTAGG.1  ATGCAGTGGTCACA.1  ATGCAGTGTCACGA.1 \n##                 2                 0                 1                 3 \n##  ATGCAGTGTTTGGG.1  ATGCCAGACTTATC.1  ATGCCAGATCCTGC.1  ATGCCGCTACGTTG.1 \n##                 0                 0                 6                 2 \n##  ATGCCGCTATCTTC.1  ATGCCGCTCCTGTC.1  ATGCGATGGCGAGA.1  ATGCGATGTACAGC.1 \n##                 6                 0                 1                 0 \n##  ATGCGATGTCACCC.1  ATGCGATGTCGCAA.1  ATGCGCCTAGCACT.1  ATGCGCCTCACTTT.1 \n##                 0                 1                13                 0 \n##  ATGCGCCTGTACGT.1  ATGCTTTGAAAGTG.1  ATGCTTTGCAGTTG.1  ATGCTTTGTAAGGA.1 \n##                 1                 1                 4                 0 \n##  ATGGACACACGCTA.1  ATGGGTACAAGGCG.1  ATGGGTACCTGGAT.1  ATGGGTACCTTCGC.1 \n##                 1                 6                 4                 0 \n##  ATGGGTACTCCGTC.1  ATGGTGACCCCAAA.1  ATGGTGACCCGCTT.1  ATGGTGACCTGCTC.1 \n##                 0                 0                 6                 1 \n##  ATGGTGACTAGACC.1  ATGGTGACTAGTCG.1  ATGGTGACTGCACA.1  ATGTAAACCAGAAA.1 \n##                 6                 8                 0                 1 \n##  ATGTAAACCTGCAA.1  ATGTAAACGTGCAT.1  ATGTAAACTTCGCC.1  ATGTACCTACAGTC.1 \n##                 3                 0                 4                 0 \n##  ATGTACCTCGCATA.1  ATGTACCTCTCGCT.1  ATGTACCTTCTATC.1  ATGTCACTCAACCA.1 \n##                 1                 1                 1                 1 \n##  ATGTCACTGGTAGG.1  ATGTCACTTGGTCA.1  ATGTCACTTTGGCA.1  ATGTCACTTTTCAC.1 \n##                 1                10                10                 2 \n##  ATGTCGGAAGCCAT.1  ATGTCGGACTATGG.1  ATGTCGGACTTACT.1  ATGTCGGAGGGACA.1 \n##                 2                 2                 8                 2 \n##  ATGTTAGAAGAGTA.1  ATGTTAGACCTACC.1  ATGTTAGACTTGTT.1  ATGTTAGAGGAGCA.1 \n##                 4                 2                 8                 1 \n##  ATGTTAGAGGTTTG.1  ATGTTAGATATGGC.1  ATGTTCACAGCGTT.1  ATGTTCACGAGCAG.1 \n##                 1                 6                 4                 1 \n##  ATGTTCACGAGCTT.1  ATGTTCACTTACCT.1  ATGTTGCTGGTTCA.1  ATTAACGATTTCGT.1 \n##                 4                 7                 1                 0 \n##  ATTAAGACATACCG.1  ATTAAGACCCCTCA.1  ATTAAGACGAGAGC.1  ATTAAGACTCAGTG.1 \n##                 7                 9                 2                 1 \n##  ATTAAGACTGTCAG.1  ATTAAGACTGTGGT.1  ATTACCACCCTCAC.1  ATTACCACGGAGGT.1 \n##                 1                 0                 0                 8 \n##  ATTACCACGGTGAG.1  ATTACCTGACCTAG.1  ATTACCTGTTAGGC.1  ATTAGATGACAGCT.1 \n##                 3                 0                 0                 2 \n##  ATTAGATGACGGGA.1 ATTAGATGAGCAAA.11  ATTAGATGCTTCTA.1  ATTAGATGGCTCCT.1 \n##                 1                 0                 0                 6 \n##  ATTAGATGTGGTAC.1  ATTAGTGACAGATC.1  ATTAGTGACCTTTA.1  ATTAGTGACGTAAC.1 \n##                 5                 2                 4                 2 \n##  ATTAGTGAGTTGTG.1  ATTAGTGATGCTGA.1  ATTATGGAACCCTC.1  ATTATGGAACGGTT.1 \n##                 5                 0                 2                 0 \n##  ATTATGGATCCCAC.1  ATTATGGATGCTCC.1  ATTCAAGAACACAC.1  ATTCAAGAAGTCAC.1 \n##                 4                 1                 0                 3 \n## ATTCAAGAAGTGCT.11  ATTCAAGAAGTTCG.1  ATTCAAGACCTACC.1  ATTCAAGACTAGTG.1 \n##                 0                 2                 1                 0 \n##  ATTCAAGACTTATC.1  ATTCAGCTAAACGA.1  ATTCAGCTACGTGT.1  ATTCAGCTGGTGGA.1 \n##                 3                 2                 0                 0 \n##  ATTCAGCTGTCCTC.1  ATTCCAACAAGGTA.1  ATTCCAACATCGTG.1  ATTCCAACCTGCAA.1 \n##                 1                 0                 1                 6 \n##  ATTCCAACGGTCTA.1  ATTCCAACGTAAAG.1  ATTCCAACGTTGAC.1  ATTCCATGAGTGTC.1 \n##                 0                 7                 2                 2 \n##  ATTCCATGATGACC.1  ATTCCATGCTCGCT.1  ATTCCATGTAAGCC.1  ATTCCATGTGAGCT.1 \n##                 0                10                 1                 2 \n##  ATTCGACTGCGATT.1  ATTCGACTGGTCTA.1  ATTCGACTTCCGTC.1  ATTCGACTTGGTTG.1 \n##                 0                 3                 1                 0 \n##  ATTCGGGAACTCTT.1  ATTCGGGACATGAC.1  ATTCGGGACCCTCA.1  ATTCGGGACTTACT.1 \n##                 0                 0                 3                 1 \n##  ATTCGGGAGAGATA.1  ATTCGGGAGATAAG.1  ATTCGGGAGCGATT.1  ATTCGGGAGGGACA.1 \n##                 1                 2                 1                 3 \n##  ATTCGGGAGGGTGA.1  ATTCGGGATGTCCC.1  ATTCTGACACTCAG.1  ATTCTGACCATCAG.1 \n##                 0                 3                 1                 1 \n##  ATTCTGACGCCATA.1  ATTCTGACTACTTC.1  ATTCTGACTGCTGA.1  ATTCTTCTCGAGAG.1 \n##                 2                 1                 5                 8 \n##  ATTCTTCTTGAACC.1  ATTCTTCTTGGTGT.1  ATTCTTCTTTGTGG.1  ATTGAAACACGTGT.1 \n##                10                 1                 2                 2 \n## ATTGAAACAGTACC.11  ATTGAAACGCGAAG.1  ATTGAAACTTAGGC.1  ATTGAATGACCATG.1 \n##                 4                 0                 2                 1 \n##  ATTGAATGCCAGTA.1  ATTGAATGTAAAGG.1  ATTGAATGTCCTGC.1  ATTGAATGTTCCCG.1 \n##                 0                 0                 3                 2 \n##  ATTGATGAATGCTG.1  ATTGATGAGGTACT.1  ATTGATGAGGTGAG.1  ATTGATGAGTCCTC.1 \n##                 7                 3                 0                 0 \n##  ATTGATGATCCTTA.1  ATTGATGATGCAAC.1  ATTGATGATTCTTG.1  ATTGCACTGAACCT.1 \n##                 1                 1                 0                 0 \n## ATTGCACTTGTCGA.11  ATTGCGGAAAACGA.1  ATTGCGGACCGCTT.1  ATTGCGGACGAGTT.1 \n##                 1                 7                 6                 4 \n##  ATTGCGGAGCTGAT.1  ATTGCGGAGTACGT.1  ATTGCGGAGTTGCA.1  ATTGCGGATACTCT.1 \n##                 6                 2                 0                10 \n##  ATTGCGGATTACCT.1  ATTGCTACCTAGTG.1  ATTGCTACCTTGGA.1  ATTGCTACGAAGGC.1 \n##                 6                 1                 0                 0 \n##  ATTGCTACTACGAC.1  ATTGCTACTCGCTC.1  ATTGCTTGACACCA.1  ATTGCTTGCTGCTC.1 \n##                 0                 0                 1                 0 \n##  ATTGCTTGGAGGCA.1  ATTGCTTGGCTGTA.1  ATTGCTTGGGAGTG.1  ATTGCTTGTCGCCT.1 \n##                 1                 4                 0                 7 \n##  ATTGCTTGTTCGTT.1  ATTGGGTGACCTGA.1  ATTGGGTGCCACCT.1  ATTGGGTGGTACCA.1 \n##                 0                 3                 1                 1 \n##  ATTGGGTGTCCAAG.1 ATTGGGTGTCCTCG.11  ATTGGGTGTGAACC.1  ATTGGTCTAGGTCT.1 \n##                 1                 6                 0                 5 \n##  ATTGGTCTCTTGGA.1  ATTGGTCTGGGATG.1  ATTGGTCTGTAAGA.1  ATTGTAGAAGCTAC.1 \n##                 3                 2                 4                 2 \n##  ATTGTAGACACTGA.1  ATTGTAGACAGCTA.1  ATTGTAGAGGTTAC.1  ATTGTAGAGGTTCA.1 \n##                 2                 0                 1                 1 \n##  ATTGTAGAGTAAAG.1  ATTGTAGAGTACCA.1  ATTGTCTGCAGATC.1  ATTGTCTGGGTTCA.1 \n##                 1                 0                 2                 5 \n##  ATTGTCTGGTGTTG.1  ATTGTCTGTGCTAG.1  ATTTAGGACCAGTA.1  ATTTAGGACTCATT.1 \n##                 0                 3                 0                 2 \n##  ATTTAGGATCAGAC.1  ATTTAGGATGTCAG.1  ATTTAGGATTGAGC.1  ATTTCCGAAAGTGA.1 \n##                 2                 7                 0                 2 \n##  ATTTCCGACATCAG.1  ATTTCCGAGACAGG.1  ATTTCCGAGGGAGT.1  ATTTCCGAGTAAAG.1 \n##                 6                 1                 2                 3 \n##  ATTTCCGATTGAGC.1  ATTTCGTGAGTGTC.1  ATTTCGTGGACGTT.1  ATTTCGTGGGTTAC.1 \n##                 0                 7                 6                 0 \n##  ATTTCGTGGTCACA.1 ATTTCGTGTCATTC.11  ATTTCTCTCACAAC.1  ATTTCTCTCTTGAG.1 \n##                 0                 2                 4                 2 \n##  ATTTCTCTGGTTTG.1  ATTTCTCTGTCTTT.1  ATTTGCACAAGGTA.1  ATTTGCACGAGAGC.1 \n##                 3                 0                 2                 8 \n##  ATTTGCACTCCTGC.1  CAAACTCTAATGCC.1  CAAACTCTACCCTC.1  CAAACTCTCCATAG.1 \n##                 4                 0                 0                 0 \n##  CAAACTCTTCGATG.1 CAAACTCTTCGTAG.11  CAAACTCTTGTGGT.1 CAAACTCTTTACCT.11 \n##                 0                 1                 1                 0 \n##  CAAAGCACAAACAG.1  CAAAGCACACCTCC.1  CAAAGCACCACCAA.1  CAAAGCACCCCGTT.1 \n##                 7                 2                 2                 3 \n##  CAAAGCACCGGTAT.1 CAAAGCACGGTAGG.11  CAAAGCTGCCCAAA.1  CAAAGCTGGGGAGT.1 \n##                 1                 0                 1                 0 \n##  CAAAGCTGTAGCGT.1  CAAAGCTGTTGGTG.1  CAAATATGACGCAT.1  CAAATATGCGAGTT.1 \n##                 7                 2                 2                 2 \n##  CAAATTGAACGGGA.1  CAAATTGACCTATT.1  CAAATTGACTGACA.1  CAACAGACATCTTC.1 \n##                 0                 0                 6                 0 \n##  CAACCAGACTTCGC.1  CAACCAGAGACTAC.1  CAACCAGAGAGCAG.1  CAACCAGAGCCCTT.1 \n##                 0                 0                 2                 2 \n##  CAACCAGAGTATCG.1  CAACCAGATAGAAG.1  CAACCGCTCAGGAG.1  CAACGAACATTCGG.1 \n##                 8                 1                 0                 9 \n##  CAACGAACCAATCG.1  CAACGAACGCTTCC.1  CAACGATGGGTAGG.1  CAACGATGTGTGGT.1 \n##                 0                 7                 0                 0 \n##  CAACGTGACACTCC.1  CAACGTGAGAGGGT.1  CAACGTGAGGAACG.1  CAACGTGATGAAGA.1 \n##                 2                 0                 3                 0 \n##  CAACGTGATGTGCA.1  CAACGTGATTCTCA.1  CAACTTTGGGTCAT.1  CAACTTTGTTGCAG.1 \n##                 0                 1                 1                 3 \n##  CAAGAAGAAAGAGT.1  CAAGAAGAACTAGC.1  CAAGAAGACTCTCG.1  CAAGAAGACTCTTA.1 \n##                 0                 0                 0                 9 \n##  CAAGAAGATGCTCC.1  CAAGAAGATTTCGT.1  CAAGACACAGAGGC.1  CAAGACACGATACC.1 \n##                11                 1                 0                10 \n##  CAAGACACTTCACT.1  CAAGACACTTCCCG.1  CAAGACTGAGGTTC.1  CAAGACTGATACCG.1 \n##                 0                 3                 5                 3 \n##  CAAGACTGCACTGA.1  CAAGACTGGAGCTT.1  CAAGACTGGCTATG.1  CAAGACTGGGACAG.1 \n##                 3                 5                 1                 7 \n##  CAAGACTGGTTTGG.1  CAAGACTGTCGTAG.1  CAAGCATGCCTCGT.1  CAAGCATGTCTCAT.1 \n##                 1                 2                 6                 3 \n##  CAAGCCCTAGCGGA.1  CAAGCCCTCTTGCC.1  CAAGCCCTGTCGTA.1  CAAGCCCTTCAAGC.1 \n##                 2                 1                 2                 0 \n##  CAAGCCCTTCGACA.1  CAAGCCCTTTCGGA.1  CAAGCTGAACCCAA.1  CAAGCTGAACGGGA.1 \n##                 0                 3                 9                 4 \n##  CAAGCTGACTGTTT.1  CAAGCTGAGCAAGG.1  CAAGCTGATCCCGT.1  CAAGGACTCTTACT.1 \n##                 7                 7                 5                 6 \n##  CAAGGACTTGCAAC.1  CAAGGTTGAAAACG.1  CAAGGTTGCTCAGA.1  CAAGGTTGCTTTAC.1 \n##                 4                 0                 9                 0 \n##  CAAGGTTGTGGATC.1  CAAGTCGACTACGA.1  CAAGTCGACTATTC.1  CAAGTCGAGAGGCA.1 \n##                 0                 0                 3                 1 \n##  CAAGTCGATACGCA.1  CAAGTTCTCACTGA.1  CAAGTTCTGTGCTA.1  CAAGTTCTTCACGA.1 \n##                 4                 0                 2                 7 \n##  CAAGTTCTTGCTAG.1  CAAGTTCTTGGTAC.1  CAATAAACACTGGT.1  CAATAAACAGTTCG.1 \n##                 9                 3                 1                10 \n##  CAATAAACCCATAG.1  CAATAAACCCTCAC.1  CAATAAACGAATAG.1  CAATAAACGACGGA.1 \n##                 0                 0                 6                 0 \n##  CAATAAACGCTAAC.1  CAATAAACGGTTTG.1  CAATAAACGTACGT.1  CAATAATGACCAGT.1 \n##                 2                 1                 3                 2 \n##  CAATAATGCCTCGT.1  CAATAATGGACAAA.1  CAATAATGTATTCC.1  CAATATGAAGACTC.1 \n##                 1                 1                 0                10 \n##  CAATATGAAGCCTA.1  CAATATGAATGTCG.1  CAATATGAGATAGA.1  CAATATGAGTTCAG.1 \n##                10                 2                 0                 7 \n##  CAATATGATACAGC.1  CAATATGATCACGA.1  CAATCGGAATTGGC.1  CAATCGGACTCCCA.1 \n##                 2                 0                 1                 2 \n##  CAATCGGACTCGAA.1  CAATCGGACTGTAG.1  CAATCGGAGTCCTC.1  CAATCGGAGTGTTG.1 \n##                 0                 0                 1                 1 \n##  CAATCGGATTGCTT.1  CAATCTACCTACGA.1  CAATCTACGTACCA.1  CAATGGACAGAATG.1 \n##                 4                 1                 0                 4 \n##  CAATGGACCCTCCA.1  CAATGGACCGAGAG.1  CAATGGACGAATCC.1  CAATGGACGGAGCA.1 \n##                 0                13                 2                 1 \n##  CAATGGACGGCGAA.1  CAATTCACAAAGCA.1  CAATTCACCAACTG.1  CAATTCACTATGGC.1 \n##                 0                 0                 1                 2 \n## CAATTCACTGAGAA.11  CAATTCTGACGGTT.1  CAATTCTGTGCACA.1  CAATTCTGTGTTTC.1 \n##                 3                 4                 0                 0 \n##  CACAACGAAAGATG.1  CACAACGAGGGTGA.1  CACAATCTACTGGT.1  CACAATCTCCCGTT.1 \n##                11                10                 0                 1 \n##  CACACCTGGTACGT.1  CACACCTGTCAGGT.1  CACACCTGTCGCTC.1  CACAGAACACCCTC.1 \n##                 0                 0                 2                 7 \n##  CACAGAACCTGTCC.1  CACAGAACTGACAC.1  CACAGATGAGCTAC.1  CACAGATGCACCAA.1 \n##                 5                 1                 2                 3 \n##  CACAGATGCATACG.1  CACAGATGCTGCTC.1  CACAGATGGCAGTT.1  CACAGATGTGACTG.1 \n##                 0                 8                 1                 1 \n##  CACAGCCTACGTTG.1  CACAGCCTCCACCT.1  CACAGCCTCGGAGA.1  CACAGCCTCGTAGT.1 \n##                 5                 1                 0                 7 \n##  CACAGCCTTCCAAG.1  CACAGTGAAAGGGC.1  CACAGTGATCGCAA.1  CACATACTAGAACA.1 \n##                 1                 0                 1                 7 \n##  CACATACTCGGTAT.1  CACATACTGTCTGA.1  CACATACTTTCGCC.1  CACATGGAATCTTC.1 \n##                 1                 0                 5                 1 \n##  CACATGGACCTACC.1  CACATGGACGCATA.1  CACATGGATTCTCA.1  CACATGGATTGACG.1 \n##                 4                 6                 2                 1 \n##  CACCACTGAACGGG.1  CACCACTGGATGAA.1  CACCACTGGGTTCA.1  CACCCATGAGAATG.1 \n##                 1                 0                 3                 2 \n##  CACCGGGACTGTTT.1  CACCGTACAAAAGC.1  CACCGTACCCTATT.1  CACCGTACGCGTTA.1 \n##                 0                 1                 0                 0 \n##  CACCGTACGTCTGA.1  CACCGTACTCCGAA.1  CACCGTACTTCATC.1  CACCGTTGACGTTG.1 \n##                 1                 2                 0                 1 \n##  CACCGTTGAGCACT.1  CACCGTTGATGACC.1  CACCGTTGCCATAG.1  CACCGTTGGTCGTA.1 \n##                 0                 4                 0                13 \n## CACCGTTGGTGAGG.11  CACCGTTGTAGAAG.1  CACCTGACACTGTG.1  CACCTGACCAGTTG.1 \n##                 4                 0                 3                 7 \n##  CACCTGACCCATAG.1  CACCTGACCCCGTT.1  CACCTGACCCTATT.1  CACCTGACGCGATT.1 \n##                 9                 2                 2                 0 \n## CACCTGACTGACTG.11  CACCTGACTTGCAG.1  CACGAAACCGAGAG.1  CACGAAACGAAGGC.1 \n##                 2                 6                 0                 0 \n##  CACGAAACTCGACA.1  CACGACCTCCACAA.1  CACGACCTCCCAAA.1  CACGACCTCCTTGC.1 \n##                 0                 1                 5                 9 \n##  CACGATGAACACGT.1  CACGATGAAGCTAC.1  CACGATGACGTGAT.1  CACGCTACAAACAG.1 \n##                 1                 0                 2                 1 \n##  CACGCTACAACGTC.1  CACGCTACACAGTC.1  CACGCTACAGTGTC.1  CACGCTACGAATGA.1 \n##                 0                 2                 5                 0 \n##  CACGCTACGGTATC.1  CACGCTACGGTTCA.1  CACGCTACTACAGC.1  CACGGGACACGCAT.1 \n##                 8                 2                 1                 0 \n##  CACGGGACAGGTTC.1  CACGGGACGGTTCA.1  CACGGGACTATCGG.1  CACGGGTGCTCGAA.1 \n##                 4                 0                10                 0 \n##  CACGGGTGTCCAAG.1  CACTAACTACTGGT.1  CACTAACTGTAGCT.1  CACTAACTTTCCCG.1 \n##                10                 3                 6                 4 \n##  CACTAGGAACGGTT.1  CACTAGGAGACAGG.1  CACTAGGATTGGTG.1  CACTATACAGCAAA.1 \n##                 1                 1                 0                 0 \n##  CACTATACCAATCG.1 CACTATACCAGAAA.11  CACTATACCGGAGA.1  CACTATACCTGATG.1 \n##                 1                 1                 2                 0 \n##  CACTATACGTCGTA.1  CACTCCGACCTTGC.1  CACTCCGAGGTGGA.1  CACTCCGATCAAGC.1 \n##                 4                 0                 2                 3 \n##  CACTCCGATTCACT.1  CACTCTCTAGAATG.1  CACTCTCTCTGATG.1 CACTGAGATTGCAG.11 \n##                 0                 0                 1                 5 \n##  CACTGAGATTGCGA.1  CACTGCACACGACT.1  CACTGCACGCCCTT.1  CACTGCACGTGCAT.1 \n##                 6                 0                 0                 2 \n##  CACTGCACTGAGAA.1  CACTGCACTTCTCA.1  CACTGCTGAGTGCT.1  CACTGCTGGAGATA.1 \n##                 3                 0                 0                 0 \n##  CACTGCTGGAGGTG.1  CACTGCTGGCGGAA.1  CACTGCTGTTTACC.1  CACTTAACCCGTAA.1 \n##                 5                 5                 4                 1 \n##  CACTTAACGGGATG.1  CACTTATGAACGTC.1  CACTTATGAGAGTA.1  CACTTATGAGTGCT.1 \n##                 2                 3                 2                 1 \n##  CACTTATGCCAACA.1  CACTTATGCGAATC.1  CACTTATGGGCGAA.1  CACTTATGTACGCA.1 \n##                 2                 8                 4                 2 \n##  CACTTTGACCGTAA.1  CACTTTGAGAATAG.1  CACTTTGAGATAGA.1  CACTTTGAGTTAGC.1 \n##                 6                 7                 0                 1 \n##  CACTTTGATAACCG.1  CACTTTGATCTCCG.1  CAGAAGCTCCCAAA.1  CAGAAGCTCCCACT.1 \n##                 0                 3                 4                 0 \n##  CAGAAGCTCTTCCG.1  CAGAAGCTGCCTTC.1  CAGACAACAGTTCG.1  CAGACAACGAAGGC.1 \n##                 0                 1                 1                 5 \n##  CAGACAACGCTCCT.1  CAGACAACTATCGG.1  CAGACAACTCCTTA.1  CAGACATGAACAGA.1 \n##                 0                 9                 7                 6 \n##  CAGACATGACTAGC.1  CAGACATGAGAACA.1  CAGACATGCGATAC.1  CAGACATGGAAGGC.1 \n##                 0                 4                 0                 3 \n##  CAGACATGGCGTAT.1  CAGACCCTCCAAGT.1  CAGACCCTCTTGCC.1  CAGACCCTGAAAGT.1 \n##                 1                 4                 1                 2 \n##  CAGACCCTTCATTC.1  CAGACTGACTGTAG.1  CAGACTGAGCGAAG.1  CAGAGGGAAACGGG.1 \n##                 9                 0                 3                 1 \n##  CAGAGGGAGCTTCC.1  CAGATCGACATCAG.1  CAGATCGACCCTTG.1  CAGATCGACTGTCC.1 \n##                 6                 2                 3                 2 \n##  CAGATGACAGGAGC.1  CAGATGACAGGTTC.1  CAGATGACCTCATT.1  CAGATGACTAGAGA.1 \n##                 2                 0                 2                 2 \n##  CAGCAATGCTCAGA.1  CAGCAATGTCATTC.1  CAGCACCTAAACGA.1  CAGCACCTAACGTC.1 \n##                 0                 2                 1                 0 \n##  CAGCACCTAGTCAC.1  CAGCACCTATACCG.1  CAGCACCTCCGATA.1  CAGCACCTCGGGAA.1 \n##                 4                 1                 3                 0 \n##  CAGCACCTTACGAC.1  CAGCACCTTGACTG.1  CAGCACCTTGTCCC.1  CAGCACCTTTCTCA.1 \n##                 2                 0                 2                 7 \n##  CAGCATGAACACCA.1  CAGCATGAAGAAGT.1  CAGCATGACTTGTT.1  CAGCATGAGGAACG.1 \n##                 1                 0                 2                 0 \n##  CAGCATGAGTCCTC.1  CAGCCTACAAACGA.1  CAGCCTACATCACG.1  CAGCCTACCAACCA.1 \n##                 4                 1                 2                 3 \n##  CAGCCTACGGCAAG.1  CAGCCTACTGGTTG.1  CAGCCTACTTCATC.1  CAGCGGACAGGAGC.1 \n##                10                 2                 0                 0 \n##  CAGCGGACTCCGTC.1  CAGCGTCTACACGT.1  CAGCGTCTCGACAT.1  CAGCGTCTCGGAGA.1 \n##                 3                 3                 0                 2 \n##  CAGCGTCTCGTAAC.1  CAGCGTCTCTTGTT.1  CAGCGTCTGGTTCA.1  CAGCGTCTTTTGTC.1 \n##                 1                 1                 8                 5 \n##  CAGCTAGAACCACA.1  CAGCTAGAACGGTT.1  CAGCTAGAAGCCAT.1  CAGCTAGATGCTGA.1 \n##                 0                 3                 1                 0 \n##  CAGCTAGATGTGAC.1  CAGCTCACGAATGA.1  CAGCTCACGTGTCA.1  CAGCTCACTCCTGC.1 \n##                 1                 1                 3                 0 \n##  CAGCTCACTCGACA.1  CAGCTCACTGGTGT.1  CAGCTCTGAGTGCT.1 CAGCTCTGCCTTGC.11 \n##                10                 1                 0                 2 \n##  CAGCTCTGCTCTCG.1  CAGCTCTGGGGAGT.1  CAGCTCTGGGGATG.1  CAGGAACTCAACTG.1 \n##                 0                 1                 0                 1 \n##  CAGGAACTGCCAAT.1  CAGGAACTGGTTCA.1  CAGGAACTGTGAGG.1  CAGGAACTTGCTAG.1 \n##                 1                 0                 3                 1 \n##  CAGGCCGAAGCCAT.1  CAGGCCGAATACCG.1  CAGGCCGACAACTG.1  CAGGCCGACTTATC.1 \n##                 1                 0                 1                 5 \n##  CAGGCCGAGTGAGG.1  CAGGCCGATGACAC.1  CAGGCCGATGTTCT.1  CAGGGCACAATGCC.1 \n##                 2                 1                 0                 5 \n##  CAGGGCACACACCA.1  CAGGGCACAGTTCG.1  CAGGGCACCGGAGA.1  CAGGGCACGACAGG.1 \n##                 7                 1                 0                 0 \n##  CAGGTAACCAGCTA.1  CAGGTAACCTCCCA.1  CAGGTAACGGTGGA.1  CAGGTAACGTTAGC.1 \n##                 0                 5                 0                 0 \n##  CAGGTAACTAAGGA.1 CAGGTATGGAATGA.11  CAGGTATGGGAGGT.1  CAGGTATGTGCTGA.1 \n##                 6                 7                 2                 6 \n##  CAGGTTGAAGGTCT.1  CAGGTTGACGACAT.1  CAGGTTGAGGTCTA.1  CAGGTTGATCTTCA.1 \n##                 1                 4                 3                 0 \n##  CAGTCAGAAAACAG.1  CAGTCAGAAACGGG.1  CAGTCAGAAAGAAC.1  CAGTCAGAACACTG.1 \n##                 0                 6                 0                 0 \n##  CAGTCAGAACTAGC.1  CAGTCAGACGACTA.1  CAGTCAGAGACACT.1  CAGTCAGATGACTG.1 \n##                 3                 0                 0                 3 \n##  CAGTGATGACGCAT.1  CAGTGATGCGTTAG.1  CAGTGATGTGTCTT.1  CAGTGATGTGTGGT.1 \n##                 6                10                 0                 1 \n##  CAGTGATGTTAGGC.1  CAGTGTGAGTGAGG.1  CAGTGTGATGTCTT.1  CAGTTACTGAGACG.1 \n##                 0                 0                 0                 3 \n##  CAGTTGGAAAAACG.1  CAGTTGGAAGCAAA.1  CAGTTGGAGTGCTA.1  CAGTTGGATTCCGC.1 \n##                 5                10                 9                 0 \n##  CAGTTTACCGGTAT.1  CAGTTTACTGTCTT.1  CATAAAACACTGGT.1  CATAAAACCGTGAT.1 \n##                 2                 4                 2                 0 \n##  CATAAAACGCCAAT.1  CATAAAACTCATTC.1  CATAAATGAATGCC.1  CATAAATGATGGTC.1 \n##                 6                 1                 0                 3 \n##  CATAAATGGAAGGC.1  CATAAATGGAGATA.1  CATAAATGTCTCTA.1  CATAACCTAAGGTA.1 \n##                 2                 0                 0                 1 \n##  CATAACCTGAAGGC.1  CATAACCTGCTGTA.1  CATAACCTTGAGAA.1  CATACTACCTGAAC.1 \n##                13                 9                 2                 4 \n##  CATACTACGCTGTA.1  CATACTTGAGAGAT.1  CATACTTGAGCATC.1  CATACTTGATTTCC.1 \n##                13                 6                 5                 5 \n##  CATACTTGGCTCCT.1  CATACTTGGTCGTA.1  CATACTTGTATCGG.1  CATACTTGTCCTCG.1 \n##                 2                 2                 1                 1 \n##  CATAGTCTCTTCTA.1  CATATAGACAGGAG.1  CATATAGAGGTTTG.1  CATCAACTCCGTAA.1 \n##                 1                 1                 7                 1 \n##  CATCAACTGCTTAG.1  CATCAACTGTCCTC.1  CATCAGGAAAGATG.1  CATCAGGACACCAA.1 \n##                 2                 4                 3                 9 \n##  CATCAGGAGACAAA.1 CATCAGGAGTATCG.11  CATCAGGAGTTGTG.1  CATCAGGATGTGCA.1 \n##                 3                 3                10                 0 \n##  CATCATACACCTTT.1  CATCATACAGCGGA.1  CATCATACCTTCGC.1  CATCCCGACGTACA.1 \n##                 1                 0                 6                 0 \n##  CATCCCGAGGTTCA.1  CATCCCGAGTGCTA.1  CATCCCGATTATCC.1  CATCGCTGAACAGA.1 \n##                 5                 0                 1                 1 \n##  CATCGCTGAAGTAG.1  CATCGCTGACGGGA.1 CATCGCTGCAGAAA.11  CATCGCTGCCTTTA.1 \n##                 3                 1                 4                 3 \n##  CATCGCTGTGGTCA.1  CATCGGCTAGGCGA.1  CATCGGCTCCTTAT.1  CATCGGCTCTCGCT.1 \n##                 0                 5                 8                 0 \n##  CATCGGCTGAAGGC.1  CATCTCCTAGGGTG.1  CATCTCCTCATTGG.1  CATCTCCTCTGCTC.1 \n##                 1                 2                 0                 0 \n##  CATCTCCTGTTCGA.1  CATCTCCTTCTATC.1  CATCTTGACTCCAC.1  CATGAGACACACGT.1 \n##                 3                 0                 0                 9 \n##  CATGAGACCACTTT.1  CATGAGACTAGTCG.1  CATGCCACAGCTAC.1  CATGCCACCAGAAA.1 \n##                 8                11                 2                 8 \n##  CATGCCACCATGGT.1  CATGCCACCGAACT.1  CATGCCACGAGGAC.1  CATGCCACGCCATA.1 \n##                 1                 4                 2                 2 \n##  CATGCCACGTTCAG.1  CATGCGCTAAAACG.1  CATGCGCTAAAGTG.1 CATGCGCTACCTCC.11 \n##                 0                12                 6                 7 \n##  CATGCGCTCAGAGG.1  CATGCGCTCGTGAT.1  CATGCGCTCTTAGG.1  CATGCGCTGAGCTT.1 \n##                 0                 3                 0                 0 \n##  CATGCGCTTGGTGT.1  CATGGATGAGAGAT.1  CATGGATGTAAGCC.1  CATGGCCTAAGAGT.1 \n##                 2                 7                 0                 6 \n##  CATGGCCTCAGTCA.1  CATGGCCTCTGTAG.1  CATGGCCTGTAGGG.1  CATGGCCTTTTCTG.1 \n##                 1                 2                 9                 0 \n##  CATGTACTACACAC.1  CATGTACTAGGTTC.1  CATGTACTCCTATT.1  CATGTACTGAGAGC.1 \n##                 4                 1                 1                 0 \n##  CATGTACTGTTACG.1  CATGTTACAATCGC.1  CATGTTACTAGCGT.1  CATGTTACTCCAAG.1 \n##                 1                 3                 0                 0 \n##  CATGTTACTGACAC.1  CATGTTACTGATGC.1  CATGTTACTGCAGT.1  CATGTTTGACGCTA.1 \n##                 7                 0                 1                 0 \n##  CATGTTTGCACTCC.1  CATGTTTGCATGCA.1  CATGTTTGCTGTAG.1  CATGTTTGCTTGGA.1 \n##                 0                 0                 6                 3 \n##  CATGTTTGGCGAGA.1  CATGTTTGGGTTCA.1  CATGTTTGTTCTGT.1  CATTACACCCTCGT.1 \n##                 0                 0                 3                 1 \n##  CATTACACCGATAC.1  CATTACACTCGTTT.1  CATTAGCTCGACAT.1  CATTAGCTGTGTAC.1 \n##                 0                 4                 5                 1 \n##  CATTAGCTTGAGGG.1  CATTAGCTTGGTTG.1  CATTAGCTTTGACG.1  CATTCCCTACACAC.1 \n##                 0                 1                 1                10 \n##  CATTCCCTACGGTT.1  CATTCCCTCTGCTC.1  CATTCCCTGCGAAG.1  CATTCCCTGTCACA.1 \n##                 1                 6                 1                 2 \n##  CATTCCCTTCGTGA.1  CATTGACTCGAACT.1  CATTGACTGCAAGG.1  CATTGACTGCGAGA.1 \n##                 2                 1                 6                 0 \n##  CATTGACTGGTGAG.1  CATTGACTGTTTCT.1  CATTGACTTTCCAT.1  CATTGACTTTTGGG.1 \n##                 1                 1                 3                 2 \n##  CATTGGGAAAAAGC.1  CATTGGGACAAAGA.1  CATTGGGACCCTAC.1  CATTGGGAGATGAA.1 \n##                 0                 0                 0                 4 \n##  CATTGGGAGTTGAC.1  CATTGGGATACGAC.1  CATTGTACAGGAGC.1  CATTGTACGCAGAG.1 \n##                 9                 1                 8                 0 \n##  CATTGTACGGTTTG.1  CATTGTACTCTCTA.1  CATTGTACTGAAGA.1  CATTGTACTTGGCA.1 \n##                 0                 4                 1                 4 \n##  CATTGTACTTGGTG.1  CATTGTTGGGAGCA.1  CATTGTTGGGTCAT.1  CATTTCGATAACGC.1 \n##                 3                 0                 1                 1 \n##  CATTTGACTGCCCT.1  CATTTGACTTTACC.1 CATTTGTGAACAGA.11  CATTTGTGATCACG.1 \n##                 0                 5                 0                 4 \n##  CATTTGTGCATGGT.1  CATTTGTGCCAACA.1  CATTTGTGTTCGCC.1  CCAAAGTGACCGAT.1 \n##                 2                 1                 0                 0 \n##  CCAAAGTGATCTTC.1  CCAAAGTGCGCTAA.1  CCAAAGTGGCTTAG.1  CCAAAGTGGGACTT.1 \n##                 5                 3                 0                 0 \n##  CCAAAGTGTAGAGA.1  CCAAAGTGTCACCC.1  CCAAAGTGTGTCCC.1  CCAACCTGAGAAGT.1 \n##                 0                 4                 1                 2 \n##  CCAACCTGTAACGC.1  CCAACCTGTGGGAG.1  CCAACCTGTTCTCA.1  CCAAGAACAACGAA.1 \n##                 0                 1                 0                10 \n##  CCAAGAACACGGAG.1  CCAAGAACAGCAAA.1  CCAAGAACTCCTAT.1  CCAAGAACTCTAGG.1 \n##                 0                 4                 3                 2 \n##  CCAAGAACTGCTCC.1  CCAAGATGACCAGT.1  CCAAGATGCCTTGC.1  CCAAGATGCGTAGT.1 \n##                 7                 4                 7                 5 \n##  CCAAGATGGAGGAC.1  CCAAGATGTGAGGG.1  CCAAGTGACAGAGG.1  CCAAGTGACCCAAA.1 \n##                 0                 0                 0                 3 \n##  CCAAGTGACTCTTA.1  CCAAGTGACTGTTT.1  CCAAGTGACTTATC.1  CCAATGGAAGTGTC.1 \n##                 0                 0                 0                 2 \n##  CCAATGGAATGGTC.1  CCAATGGACCGATA.1  CCAATGGACCTGTC.1  CCAATGGAGACTAC.1 \n##                 2                 2                 4                 0 \n##  CCAATGGAGATAGA.1  CCAATGGAGTATCG.1  CCAATGGATAGACC.1  CCAATTTGAGGCGA.1 \n##                 2                 7                 1                 0 \n##  CCAATTTGCACTTT.1  CCACCATGATTCGG.1 CCACCATGCAGTCA.11  CCACCATGCATTTC.1 \n##                 2                 0                 2                 5 \n##  CCACCATGTGCTAG.1  CCACCTGAAAGAAC.1  CCACCTGAGCGAGA.1  CCACCTGAGCGGAA.1 \n##                 6                 0                 2                 0 \n##  CCACCTGATGTTCT.1  CCACGGGAAACGAA.1  CCACGGGAAGGCGA.1  CCACGGGAATCTTC.1 \n##                 0                 8                 0                 1 \n##  CCACGGGACCATAG.1  CCACGGGACTCGCT.1  CCACGGGAGCATCA.1  CCACGGGATAGTCG.1 \n##                 0                 6                 3                 9 \n##  CCACGGGATGCAAC.1  CCACTGACAGCCAT.1  CCACTGACCGCATA.1  CCACTGACCGTACA.1 \n##                 0                 1                 0                 3 \n##  CCACTGTGAGTTCG.1  CCACTGTGGCGAAG.1  CCACTGTGGTCACA.1  CCACTGTGGTTGTG.1 \n##                 1                 4                 0                 4 \n##  CCACTTCTAGCTCA.1  CCACTTCTCCTATT.1  CCACTTCTCTTATC.1  CCACTTCTTACTCT.1 \n##                 1                 0                 0                 0 \n##  CCACTTCTTGCAAC.1  CCAGAAACACCTCC.1  CCAGAAACCTACCC.1  CCAGAAACCTCCCA.1 \n##                 1                 0                 2                 0 \n##  CCAGAAACGTTGAC.1  CCAGAAACGTTGCA.1  CCAGAAACTGGAAA.1 CCAGACCTGAGACG.11 \n##                 3                 8                11                 5 \n##  CCAGACCTGGGTGA.1  CCAGATGAACCAAC.1  CCAGATGACAATCG.1  CCAGATGACCTATT.1 \n##                 1                 0                 6                 0 \n##  CCAGATGACTGTAG.1  CCAGATGAGAATGA.1  CCAGATGAGTAAAG.1  CCAGATGATCGTTT.1 \n##                 0                 5                 0                 2 \n##  CCAGATGATGAGAA.1  CCAGCACTACACGT.1  CCAGCACTCGTCTC.1  CCAGCACTCTTAGG.1 \n##                 0                 2                 1                 0 \n##  CCAGCACTGTAGGG.1  CCAGCACTGTGAGG.1  CCAGCACTTAGACC.1  CCAGCACTTGTCTT.1 \n##                 1                 1                 5                 1 \n##  CCAGCACTTGTTCT.1  CCAGCACTTTGTGG.1  CCAGCGGAGCGGAA.1  CCAGCGGAGGACAG.1 \n##                 0                 2                 4                 0 \n##  CCAGCGGAGGTAAA.1  CCAGCGGAGTTAGC.1  CCAGCGGATGAGAA.1  CCAGCTACAAGTAG.1 \n##                 0                 0                 1                 2 \n##  CCAGCTACACGGGA.1 CCAGCTACCAGTCA.11  CCAGCTACTCAGAC.1  CCAGGTCTCACAAC.1 \n##                 0                 4                 9                 0 \n##  CCAGGTCTCTGTCC.1  CCAGGTCTGCTGTA.1 CCAGGTCTGGAGGT.11  CCAGGTCTTACGCA.1 \n##                 4                 1                10                 7 \n##  CCAGGTCTTGTGCA.1  CCAGTCACCGGAGA.1  CCAGTCTGCTCAGA.1  CCAGTCTGGAGACG.1 \n##                 9                 9                 0                 0 \n##  CCAGTCTGGCGGAA.1  CCAGTCTGGTAGGG.1  CCAGTCTGTTACTC.1  CCAGTGCTAAGGGC.1 \n##                 2                 0                 1                 7 \n##  CCAGTGCTAGAATG.1  CCAGTGCTAGATCC.1  CCAGTGCTATTCTC.1  CCAGTGCTCTTGGA.1 \n##                 8                 2                 4                11 \n##  CCAGTGCTTGTTCT.1  CCATAGGAACACGT.1  CCATAGGAATTTCC.1  CCATAGGACAGATC.1 \n##                 1                 2                 1                 0 \n##  CCATAGGACGTAAC.1  CCATAGGACTGAGT.1  CCATAGGATCATTC.1  CCATAGGATTTACC.1 \n##                 3                 0                 3                 2 \n##  CCATATACAAACGA.1  CCATATACCAACTG.1  CCATATACCAGTTG.1  CCATATACCGAGAG.1 \n##                 5                 4                 1                 1 \n##  CCATATACGCCATA.1  CCATATACGCTGAT.1  CCATATACGGAACG.1  CCATCCGACACTAG.1 \n##                 4                 5                 2                 8 \n##  CCATCCGACCACAA.1  CCATCCGACCGCTT.1  CCATCCGACTGTCC.1  CCATCCGATCAGGT.1 \n##                 1                 3                 7                 1 \n##  CCATCCGATGTTTC.1  CCATCGTGCGAACT.1  CCATCGTGTATGGC.1  CCATCGTGTCCCGT.1 \n##                 0                 9                 0                 4 \n##  CCATCGTGTCGACA.1  CCATGCTGACCCTC.1 CCATGCTGCTAAGC.11  CCATGCTGCTGTGA.1 \n##                 0                 0                 0                 0 \n## CCATGCTGGAGATA.11  CCATGCTGGATACC.1  CCATGCTGGCCAAT.1  CCATGCTGGCCTTC.1 \n##                 6                 6                 1                 0 \n##  CCATGCTGGGTGAG.1  CCATGCTGTCAGAC.1  CCATGCTGTCCCAC.1  CCATTAACAAAACG.1 \n##                 0                 5                 1                 0 \n##  CCATTAACAAGAGT.1  CCATTAACACGGTT.1  CCATTAACCGAGTT.1  CCATTAACGGACAG.1 \n##                 2                 0                 1                 0 \n##  CCATTAACGTACCA.1  CCATTAACTGAAGA.1  CCATTAACTGTTTC.1  CCATTAACTTACCT.1 \n##                 3                 1                 3                 8 \n##  CCATTAACTTCGGA.1  CCCAAAGAATGCTG.1  CCCAAAGACCCGTT.1  CCCAAAGACGTAGT.1 \n##                 1                 0                 3                 2 \n## CCCAAAGAGCCCTT.11  CCCAAAGATCCTCG.1  CCCAACACTAAGCC.1  CCCAACTGAGCGTT.1 \n##                 2                 0                 0                 0 \n##  CCCAACTGGCCTTC.1  CCCACATGAACCGT.1  CCCACATGAGCAAA.1  CCCACATGCGCTAA.1 \n##                 1                 1                 5                 5 \n##  CCCACATGCTTGAG.1  CCCACATGTCTTCA.1  CCCAGACTCCCACT.1  CCCAGACTCCTTTA.1 \n##                 1                 2                 6                 0 \n##  CCCAGACTGTTCGA.1  CCCAGTTGAGGTCT.1  CCCAGTTGCAGGAG.1  CCCAGTTGTTCTAC.1 \n##                 3                 5                 3                 0 \n##  CCCATCGAAAGTAG.1  CCCATCGACCCTAC.1  CCCATCGACTGGAT.1  CCCATCGATAGTCG.1 \n##                 2                 0                 0                 1 \n##  CCCATCGATCTAGG.1  CCCATGTGAGTTCG.1  CCCATGTGCTCTTA.1 CCCATGTGCTTGGA.11 \n##                 0                 1                 1                 0 \n##  CCCATGTGTGGGAG.1  CCCGAACTACCTGA.1  CCCGAACTGAGGAC.1  CCCGAACTGCTGTA.1 \n##                 0                 4                 0                 3 \n##  CCCGATTGAGATGA.1  CCCGATTGCGAGTT.1  CCCGATTGCTCGCT.1  CCCGATTGGACAGG.1 \n##                 9                 1                 2                 1 \n##  CCCGATTGGGAAAT.1  CCCGATTGTATTCC.1  CCCGGAGAACTGTG.1  CCCGGAGATTACCT.1 \n##                 0                 5                 1                 0 \n##  CCCTACGAAAGAAC.1  CCCTACGACCCGTT.1  CCCTACGACTCTCG.1  CCCTACGAGTACCA.1 \n##                 2                 0                 0                 1 \n##  CCCTACGATATGCG.1  CCCTACGATGACCA.1  CCCTACGATTCTCA.1  CCCTAGTGCGCAAT.1 \n##                 0                12                 0                 5 \n##  CCCTAGTGCGTCTC.1  CCCTAGTGGTGTTG.1  CCCTAGTGTGCAAC.1  CCCTCAGAATCGGT.1 \n##                 1                 5                 0                 7 \n##  CCCTCAGATACTTC.1  CCCTCAGATTCTGT.1  CCCTGAACAACGGG.1  CCCTGAACTCTGGA.1 \n##                 1                 3                 0                 1 \n##  CCCTTACTAAGAAC.1  CCCTTACTACACGT.1  CCCTTACTCCAATG.1 CCCTTACTCTGGAT.11 \n##                 4                 9                 1                 4 \n##  CCCTTACTGGTTCA.1  CCCTTACTTGAACC.1  CCGAAAACACTGTG.1  CCGAAAACCTGGAT.1 \n##                 8                 0                 4                 1 \n##  CCGAAAACGAGCAG.1  CCGAAAACGAGGCA.1  CCGAAAACGGAACG.1  CCGAAAACTTCGTT.1 \n##                 0                 1                 3                11 \n##  CCGACACTAAGGCG.1  CCGACACTAGCGTT.1  CCGACACTCTACTT.1  CCGACACTGCCAAT.1 \n##                 2                 1                 8                 1 \n##  CCGACACTTATCGG.1  CCGACTACCTTGGA.1  CCGACTACGTTGCA.1  CCGATAGACTGTCC.1 \n##                 0                 1                 1                 0 \n##  CCGATAGAGATAGA.1  CCGATAGAGATGAA.1  CCGATAGAGTATCG.1  CCGCGAGAACTGTG.1 \n##                 0                 3                10                 2 \n##  CCGCGAGACATTGG.1  CCGCGAGACTGCAA.1  CCGCGAGAGGTGTT.1  CCGCGAGAGTTCAG.1 \n##                 2                 1                 1                 5 \n##  CCGCGAGATCGCTC.1  CCGCTATGATTCGG.1  CCGCTATGGGTGTT.1  CCGCTATGGTCCTC.1 \n##                 6                 0                 0                 3 \n##  CCGCTATGTTACTC.1  CCGGAGACACCTAG.1  CCGGAGACAGAACA.1  CCGGAGACGAAAGT.1 \n##                 1                 1                 0                 1 \n##  CCGGAGACTGGTAC.1  CCGGAGTGAGCCAT.1  CCGGAGTGAGGGTG.1  CCGGAGTGGGACGA.1 \n##                 4                10                10                 1 \n##  CCGGAGTGGTCGAT.1  CCGGAGTGGTTCTT.1 CCGGAGTGTATGGC.11  CCGGAGTGTCTGGA.1 \n##                 0                 2                 0                 0 \n##  CCGGTACTAAGAGT.1  CCGGTACTCCTTTA.1  CCGGTACTCGCATA.1  CCGGTACTGTCCTC.1 \n##                 5                11                 1                 4 \n##  CCGGTACTTATCTC.1  CCGGTACTTTCTGT.1  CCGTAAGAACGTAC.1  CCGTAAGACCGCTT.1 \n##                 0                 3                 1                 3 \n##  CCGTAAGATTCAGG.1  CCGTACACAAAACG.1  CCGTACACAAGATG.1  CCGTACACCAGATC.1 \n##                 0                 3                 0                 7 \n##  CCGTACACGAGGGT.1  CCGTACACGGAGGT.1  CCGTACACTACTGG.1  CCGTACACTGCCTC.1 \n##                 9                 0                 0                 5 \n##  CCTAAACTACTCAG.1  CCTAAACTAGCATC.1  CCTAAACTCAGCTA.1  CCTAAACTTCGTAG.1 \n##                 1                 0                 3                 1 \n##  CCTAAGGAAAAACG.1  CCTAAGGAACGTGT.1  CCTAAGGATCCTGC.1  CCTACCGACGCCTT.1 \n##                 1                 6                 1                 4 \n##  CCTAGAGAACCCTC.1  CCTAGAGACCTAAG.1  CCTAGAGACGGAGA.1  CCTAGAGAGGATTC.1 \n##                 0                 8                 0                 0 \n##  CCTAGAGATCAGGT.1  CCTATAACGCCATA.1  CCTATAACGTTCGA.1  CCTATAACTGGTGT.1 \n##                 1                 4                 1                 1 \n##  CCTATTGACATGAC.1  CCTATTGAGATACC.1  CCTATTGAGGTATC.1  CCTATTGATTTCAC.1 \n##                 0                 1                 1                 1 \n##  CCTATTGATTTGCT.1  CCTCATCTAGTCAC.1  CCTCATCTATGCTG.1  CCTCATCTGTCTGA.1 \n##                 5                 1                 2                 0 \n##  CCTCGAACACCTCC.1  CCTCGAACCATACG.1  CCTCTACTACGGGA.1  CCTCTACTGAGAGC.1 \n##                 0                 0                 6                 2 \n## CCTCTACTGCATAC.11  CCTCTACTGGGACA.1  CCTCTACTGGTTTG.1  CCTCTACTTGCTTT.1 \n##                 0                 1                 0                 4 \n##  CCTGACTGCGCATA.1  CCTGACTGCGGTAT.1  CCTGACTGTGCAGT.1  CCTGAGCTCACACA.1 \n##                 0                 0                 0                 0 \n##  CCTGAGCTGGTGAG.1  CCTGAGCTGTTTCT.1  CCTGCAACAACCTG.1  CCTGCAACCAGGAG.1 \n##                 0                 1                 5                 0 \n##  CCTGCAACTGAGCT.1  CCTGGACTACCTCC.1  CCTGGACTAGTGCT.1  CCTGGACTGTATCG.1 \n##                 4                 8                 1                 0 \n##  CCTTAATGCATGAC.1  CCTTAATGCGGAGA.1  CCTTAATGGAATAG.1  CCTTAATGGAATGA.1 \n##                 2                 2                 1                 3 \n##  CCTTAATGGAGATA.1  CCTTAATGGATAGA.1  CCTTAATGGTGAGG.1  CCTTAATGTCCTAT.1 \n##                 3                 0                 5                 0 \n##  CCTTAATGTTCATC.1  CCTTCACTGGACGA.1  CCTTCACTGGAGGT.1  CCTTCACTTCCAGA.1 \n##                 4                11                 4                 0 \n##  CCTTCACTTGCTAG.1  CCTTCACTTTCTTG.1  CCTTTAGAAGCGTT.1  CCTTTAGACAGTCA.1 \n##                 5                 0                 2                 2 \n##  CCTTTAGACTTGGA.1  CCTTTAGATCGTGA.1  CGAACATGAGCAAA.1  CGAACATGCTGGAT.1 \n##                 6                 2                 4                 3 \n##  CGAACATGGTCACA.1  CGAACATGTGACTG.1  CGAACATGTTGCGA.1  CGAACATGTTTCGT.1 \n##                 3                 2                10                 5 \n##  CGAAGACTAGTCAC.1  CGAAGACTCCCTTG.1  CGAAGACTCGTTAG.1  CGAAGACTCTGTGA.1 \n##                 6                 1                 7                 6 \n##  CGAAGACTGGATTC.1  CGAAGACTGTCAAC.1  CGAAGGGAAAGTAG.1  CGAAGGGACACCAA.1 \n##                 4                 2                 2                 5 \n##  CGAAGGGAGACACT.1  CGAAGGGAGCTGTA.1  CGAAGGGATCAGGT.1  CGAAGGGATCGTTT.1 \n##                 9                 2                 2                 0 \n##  CGAAGGGATGCTAG.1  CGAAGGGATGGTGT.1  CGAAGTACCCACAA.1  CGAAGTACCCTTGC.1 \n##                 1                 8                 1                 1 \n##  CGAAGTACTCCTAT.1  CGAATCGACATACG.1  CGAATCGACTGATG.1  CGACAAACAGTAGA.1 \n##                 4                 4                 1                 2 \n##  CGACAAACCCAAGT.1  CGACCACTCGAGTT.1  CGACCGGAGCGGAA.1  CGACCGGAGGTAAA.1 \n##                 4                 9                 0                 1 \n##  CGACCGGAGTTCGA.1  CGACCTACCGGTAT.1 CGACCTACCTTCCG.11  CGACCTACTGCAGT.1 \n##                 0                 0                 2                 0 \n##  CGACCTACTGTAGC.1  CGACCTTGAACCGT.1  CGACCTTGCTAGAC.1  CGACCTTGGCTTCC.1 \n##                 1                 0                 2                 0 \n##  CGACCTTGGGACTT.1  CGACCTTGGGAGCA.1  CGACCTTGTGCACA.1  CGACCTTGTGCTAG.1 \n##                 0                 1                 1                 0 \n##  CGACCTTGTTATCC.1  CGACGTCTACCGAT.1  CGACGTCTAGGAGC.1  CGACGTCTCGAATC.1 \n##                 1                 4                 1                 6 \n##  CGACGTCTGGAGCA.1  CGACTCACATTTCC.1  CGACTCACCACTTT.1  CGACTCTGATACCG.1 \n##                 1                 5                 7                 0 \n##  CGACTCTGCCTTAT.1  CGACTCTGGTATGC.1 CGACTCTGGTTTCT.11  CGACTCTGTCCGAA.1 \n##                 1                 1                 2                 0 \n##  CGACTCTGTGAGGG.1  CGACTGCTCGCCTT.1  CGACTGCTGGACGA.1  CGAGAACTATTCGG.1 \n##                 0                 1                 1                 2 \n##  CGAGAACTCCCTTG.1  CGAGATTGACACGT.1  CGAGATTGACCCTC.1  CGAGATTGATAAGG.1 \n##                 0                 8                 2                 6 \n##  CGAGATTGATTTCC.1  CGAGATTGCAGATC.1  CGAGATTGCTCGAA.1  CGAGATTGTCTCCG.1 \n##                 9                 7                 5                 1 \n##  CGAGCCGAAAGGGC.1  CGAGCCGAATTTCC.1  CGAGCCGACCTTCG.1  CGAGCCGAGGGAGT.1 \n##                 3                 4                 1                 2 \n##  CGAGCCGATGAAGA.1  CGAGCGTGATCGTG.1  CGAGGAGACCGTTC.1  CGAGGAGACTTTAC.1 \n##                 6                 5                 5                 4 \n##  CGAGGAGAGAGAGC.1  CGAGGAGAGCTCCT.1  CGAGGAGATTATCC.1  CGAGGAGATTCATC.1 \n##                 0                 4                 1                 2 \n##  CGAGGCACATCGGT.1  CGAGGCACATTGGC.1  CGAGGCACCATGGT.1  CGAGGCACGCGTTA.1 \n##                 0                 5                 4                 5 \n##  CGAGGCACGGGTGA.1  CGAGGCACTGTTCT.1  CGAGGCTGCAGCTA.1  CGAGGCTGCGCCTT.1 \n##                 0                 0                 7                 1 \n##  CGAGGGCTAGTACC.1  CGAGGGCTCTGACA.1  CGAGGGCTCTGATG.1  CGAGGGCTTAAAGG.1 \n##                 4                 1                 0                13 \n##  CGAGTATGTTCTGT.1  CGATACGAATTCGG.1  CGATACGAGAATCC.1  CGATAGACATGGTC.1 \n##                 4                 1                 0                 0 \n##  CGATAGACATTCTC.1  CGATAGACCCCAAA.1  CGATAGACGCCCTT.1  CGATAGACGTTGGT.1 \n##                 2                 3                 9                 0 \n##  CGATAGACTCATTC.1  CGATAGACTGCCTC.1  CGATCAGAGAACTC.1  CGATCAGAGTTAGC.1 \n##                 0                 0                 0                 0 \n##  CGATCAGATCGTGA.1  CGATCCACAGAGGC.1  CGATCCACCCATAG.1  CGATCCACCCTCGT.1 \n##                 6                 8                 9                 0 \n##  CGATCCACCTTGGA.1  CGATCCACGGAGGT.1  CGATCCACTACTTC.1  CGATCCACTGGCAT.1 \n##                 6                 3                 9                 0 \n##  CGATCCACTGTCGA.1  CGCAAATGACTCTT.1  CGCAAATGAGTCTG.1  CGCAAATGATAAGG.1 \n##                 0                 6                 0                10 \n##  CGCAAATGCACTGA.1  CGCAAATGGTTCTT.1  CGCAAATGTTGTGG.1  CGCAACCTAGTTCG.1 \n##                 1                 2                 7                 7 \n##  CGCAACCTATCAGC.1  CGCAACCTCACCAA.1  CGCAACCTCTTTAC.1  CGCAACCTGCTTCC.1 \n##                11                 0                 1                 4 \n##  CGCAACCTGGAGTG.1  CGCAACCTTCCGTC.1  CGCACGGAAATCGC.1  CGCACGGAAGCGGA.1 \n##                 0                 3                 2                 4 \n##  CGCACGGACAACCA.1 CGCACGGACGAATC.11  CGCACGGACGTAAC.1  CGCACGGACTTATC.1 \n##                 0                 1                 0                 1 \n##  CGCACGGATCGTTT.1  CGCACTACCAGCTA.1  CGCACTACTTCTTG.1  CGCACTTGAAAGCA.1 \n##                 1                 2                 0                 5 \n##  CGCACTTGACGACT.1  CGCACTTGACTAGC.1  CGCACTTGCAGTTG.1  CGCACTTGCCTGTC.1 \n##                 7                 6                 7                 2 \n##  CGCACTTGGCGAAG.1  CGCACTTGTCAGTG.1  CGCACTTGTGGTAC.1  CGCAGGACCTTGGA.1 \n##                 2                 8                 4                 6 \n##  CGCAGGACGAAAGT.1  CGCAGGACTCTCCG.1 CGCAGGTGACGCTA.11  CGCAGGTGAGAAGT.1 \n##                 5                 1                 0                 0 \n##  CGCAGGTGCATGGT.1  CGCAGGTGCCTCAC.1  CGCAGGTGTGTGCA.1  CGCAGGTGTTTCAC.1 \n##                 1                 0                 0                 2 \n##  CGCATAGACTCCAC.1  CGCATAGACTGAAC.1  CGCATAGACTGTTT.1  CGCATAGATCCCAC.1 \n##                 1                 1                 0                 0 \n##  CGCATAGATGCAAC.1  CGCATAGATTTGTC.1  CGCCATACAATGCC.1  CGCCATACTGACCA.1 \n##                 1                 0                 8                 0 \n##  CGCCATTGTGTCAG.1  CGCCGAGAACTACG.1  CGCCGAGACCTCGT.1  CGCCGAGACGATAC.1 \n##                 0                 1                 4                 2 \n##  CGCCGAGAGAATCC.1  CGCCGAGAGAGATA.1  CGCCGAGATCTAGG.1  CGCCGAGATGGCAT.1 \n##                 6                 6                 5                 1 \n##  CGCCTAACAAGCCT.1  CGCCTAACCAGATC.1  CGCCTAACCAGCTA.1  CGCCTAACCCTACC.1 \n##                 1                 2                 1                 9 \n##  CGCCTAACCGGTAT.1  CGCGAGACTAAGGA.1  CGCGATCTACGACT.1  CGCGATCTCTGCTC.1 \n##                 2                 1                 4                 0 \n##  CGCGATCTGTGTCA.1  CGCGATCTTCCAAG.1  CGCGGATGCCACAA.1  CGCGGATGGCATCA.1 \n##                 0                 0                 0                 1 \n##  CGCGGATGGGACTT.1  CGCTAAGAAAGGCG.1 CGCTAAGAATTCCT.11  CGCTAAGAGGTATC.1 \n##                 4                 4                 7                 3 \n##  CGCTAAGAGTCATG.1  CGCTAAGAGTTGAC.1  CGCTAAGATGGTAC.1  CGCTACACACTACG.1 \n##                 0                 0                 0                 5 \n##  CGCTACACAGTACC.1  CGCTACACCCACCT.1  CGCTACACCTCAAG.1  CGCTACACGCGATT.1 \n##                 4                 9                 9                 1 \n##  CGCTACACTTCTTG.1  CGCTACACTTTGCT.1  CGCTACTGACTGTG.1  CGCTACTGAGAGAT.1 \n##                 7                 0                 8                 0 \n##  CGCTACTGCCATGA.1  CGCTACTGCGCAAT.1  CGCTACTGCGTTGA.1  CGCTACTGCTAGAC.1 \n##                 3                 4                 1                11 \n##  CGCTACTGCTATGG.1  CGCTACTGGAACTC.1  CGCTACTGGCAAGG.1  CGCTCATGCTTCCG.1 \n##                 8                 5                 0                 4 \n##  CGCTCATGTATCGG.1  CGCTCATGTGACTG.1  CGCTCATGTTCGGA.1  CGGAATTGAGTGCT.1 \n##                 2                 2                 1                 7 \n##  CGGAATTGCTGTCC.1  CGGAATTGCTGTTT.1  CGGAATTGTTATCC.1  CGGACCGAAGCAAA.1 \n##                 1                 1                 6                 1 \n##  CGGACCGAAGGTCT.1  CGGACCGAATGGTC.1  CGGACCGACCTCAC.1  CGGACCGACGAGTT.1 \n##                 1                 6                 0                 9 \n##  CGGACTCTACCTTT.1  CGGACTCTCCAAGT.1  CGGAGGCTACCCAA.1  CGGAGGCTAGCGTT.1 \n##                 2                 3                 7                 5 \n##  CGGAGGCTAGGGTG.1  CGGAGGCTCGCATA.1  CGGAGGCTGGCAAG.1  CGGAGGCTGGGCAA.1 \n##                 4                 4                 8                 5 \n##  CGGATAACACACCA.1  CGGATAACCGTTAG.1 CGGATAACCTTCCG.11  CGGATAACCTTGTT.1 \n##                 9                 0                 2                 5 \n##  CGGATAACGACAGG.1  CGGATAACGACGGA.1  CGGATAACTTTACC.1  CGGATATGAAGCCT.1 \n##                 0                 7                 2                 3 \n##  CGGATATGACTACG.1  CGGATATGAGTCAC.1  CGGATATGCGAACT.1  CGGATATGCTGGAT.1 \n##                 3                 0                 0                 3 \n##  CGGATATGGGCAAG.1  CGGCACGAAGGAGC.1  CGGCACGACTACCC.1  CGGCACGAGGACAG.1 \n##                 0                 0                 0                 5 \n##  CGGCACGATTCGCC.1  CGGCACGATTTGCT.1  CGGCATCTAAAACG.1  CGGCATCTAAGTGA.1 \n##                 3                 3                 1                 3 \n##  CGGCATCTCCTCGT.1  CGGCATCTCTATTC.1  CGGCATCTGCATAC.1  CGGCATCTTAACCG.1 \n##                 3                 1                 2                 0 \n##  CGGCCAGAAACCTG.1  CGGCCAGACCTAAG.1  CGGCCAGATATGGC.1  CGGCCAGATCTTAC.1 \n##                 4                 6                 7                 1 \n##  CGGCGAACATCTCT.1  CGGCGAACGAATAG.1  CGGCGAACTCTCTA.1  CGGCGATGAAACGA.1 \n##                 4                 1                 9                 2 \n##  CGGCGATGCATGGT.1  CGGCGATGCTACCC.1  CGGCGATGTCCAGA.1  CGGCGATGTTCTCA.1 \n##                 0                 0                 0                 5 \n##  CGGGACTGAGTCAC.1  CGGGCATGACACGT.1  CGGGCATGAGACTC.1  CGGGCATGCATACG.1 \n##                 0                 1                 1                 4 \n##  CGGGCATGCGTACA.1  CGGGCATGCGTAGT.1  CGGGCATGCTACTT.1  CGGGCATGCTCAGA.1 \n##                 3                 2                 6                 3 \n##  CGGGCATGGGAGTG.1  CGGGCATGTGCCCT.1  CGGGCATGTGTTCT.1  CGGTAAACACGTTG.1 \n##                 1                 3                 5                 5 \n##  CGGTAAACAGTACC.1  CGGTAAACCCACCT.1  CGGTAAACGAAAGT.1  CGGTAAACGACGGA.1 \n##                 2                 1                 1                 2 \n##  CGGTAAACGTTAGC.1  CGGTACCTAATGCC.1  CGGTACCTCAGATC.1  CGGTACCTTGGAAA.1 \n##                 0                 1                 1                 2 \n##  CGGTACCTTTACTC.1  CGGTACCTTTGAGC.1  CGGTCACTAGCACT.1  CGGTCACTATCGAC.1 \n##                 8                 0                 0                10 \n##  CGGTCACTGGGATG.1  CGGTCACTTCGCAA.1  CGTAACGACCCTCA.1  CGTAACGAGCATCA.1 \n##                 8                 2                 2                10 \n##  CGTAACGAGGACTT.1  CGTAACGAGGCATT.1  CGTAACGATACAGC.1  CGTAACGATCGCAA.1 \n##                 1                 1                 0                 0 \n##  CGTACAGAACGCTA.1  CGTACAGAATGGTC.1  CGTACAGATACGCA.1  CGTACCACAGATGA.1 \n##                 5                 1                 0                 2 \n##  CGTACCACATAAGG.1  CGTACCACCCATAG.1  CGTACCACCGGTAT.1  CGTACCACTAAAGG.1 \n##                 0                 5                 1                 0 \n##  CGTACCACTCCGTC.1  CGTACCACTTGCTT.1  CGTACCACTTTCGT.1  CGTACCTGACAGTC.1 \n##                 1                 0                 5                 2 \n##  CGTACCTGCGTGTA.1  CGTACCTGCTGGTA.1  CGTACCTGCTTGGA.1  CGTACCTGGAAACA.1 \n##                 3                 0                 4                 0 \n##  CGTACCTGGTGCAT.1  CGTACCTGTCCTTA.1  CGTACCTGTGGAAA.1  CGTAGCCTAAACGA.1 \n##                 2                 3                 4                 6 \n##  CGTAGCCTCCGTTC.1 CGTAGCCTCGTTGA.11  CGTAGCCTCTGAAC.1  CGTAGCCTGGGTGA.1 \n##                 1                 3                 7                 0 \n##  CGTAGCCTGTAGCT.1  CGTAGCCTTCAGAC.1  CGTAGCCTTCTTCA.1  CGTAGCCTTTGGTG.1 \n##                 0                 3                 2                 1 \n##  CGTCAAGAAGCCAT.1  CGTCAAGACCCTCA.1  CGTCAAGATGGGAG.1  CGTCAAGATGGTCA.1 \n##                 0                 4                 7                 5 \n##  CGTCCAACATCGAC.1  CGTCCAACCTTCCG.1  CGTCCATGACTCAG.1  CGTCCATGCAGATC.1 \n##                 1                 1                 1                 7 \n##  CGTCCATGCCGTAA.1  CGTCCATGCCTCCA.1  CGTCCATGCTGTGA.1 CGTCCATGGCGATT.11 \n##                 5                 0                 0                 3 \n##  CGTCCATGGGTAAA.1  CGTCCATGTGCCCT.1  CGTCGACTAGCGTT.1  CGTCGACTCTACCC.1 \n##                 6                 4                 0                 0 \n##  CGTCGACTCTCAGA.1  CGTCGACTTAAAGG.1  CGTCGACTTTCTTG.1  CGTGAAACAGTTCG.1 \n##                 0                 3                 4                 1 \n##  CGTGAAACCGTTAG.1  CGTGAAACGAGACG.1  CGTGAAACTGAGCT.1  CGTGAATGAAGGGC.1 \n##                 4                 1                 3                 0 \n##  CGTGAATGACCTGA.1  CGTGAATGAGCCTA.1  CGTGAATGAGTCGT.1  CGTGAATGCATGCA.1 \n##                 3                 0                 0                 6 \n##  CGTGAATGGGTATC.1  CGTGAATGGTATCG.1  CGTGAATGTCTTTG.1  CGTGATGAAGTCTG.1 \n##                 3                 0                 4                 2 \n##  CGTGATGACGTCTC.1  CGTGATGACTTCTA.1  CGTGATGATGGTGT.1  CGTGCACTCTATGG.1 \n##                 0                 0                 2                 3 \n##  CGTGCACTGCTAAC.1  CGTGCACTTTCGCC.1  CGTGTAGACCAACA.1  CGTGTAGACGTGAT.1 \n##                 0                 1                 6                 9 \n##  CGTTAACTTAGCGT.1  CGTTAGGAAACCTG.1  CGTTAGGAGCCAAT.1  CGTTAGGAGTATCG.1 \n##                 2                 2                 0                 7 \n##  CGTTATACACAGTC.1  CGTTATACGAGCAG.1  CGTTATACGCGATT.1  CGTTATACGTCTAG.1 \n##                 0                 2                 3                 1 \n##  CGTTATACTGAAGA.1  CGTTATACTTCTCA.1  CGTTTAACAGCGTT.1  CGTTTAACCTCATT.1 \n##                 2                 3                 2                 4 \n##  CGTTTAACGTGAGG.1  CTAAACCTAAGAAC.1  CTAAACCTCAGTCA.1  CTAAACCTCGCATA.1 \n##                 7                 4                 9                 6 \n##  CTAAACCTCTGAAC.1  CTAAACCTGTACGT.1  CTAACACTACACCA.1  CTAACACTACCACA.1 \n##                 6                 0                 0                 1 \n##  CTAACACTAGATGA.1  CTAACACTGCTAAC.1  CTAACACTGGAGGT.1  CTAACACTTACAGC.1 \n##                 5                 1                10                 4 \n## CTAACACTTGTGAC.11  CTAACGGACAACCA.1  CTAACGGACCGCTT.1  CTAACGGAGAAAGT.1 \n##                 2                 3                 8                 3 \n##  CTAACGGATTTGTC.1  CTAACTACAACCAC.1  CTAACTACCCTGTC.1  CTAACTACTCACGA.1 \n##                 0                 1                 1                 7 \n##  CTAAGGACACCTGA.1  CTAAGGACAGTCGT.1  CTAAGGACCACCAA.1  CTAAGGACCCATAG.1 \n##                 1                 2                10                 1 \n##  CTAAGGACTCATTC.1  CTAAGGACTCGTGA.1  CTAAGGACTGGTGT.1  CTAAGGTGGAAAGT.1 \n##                 6                 7                 3                 0 \n##  CTAAGGTGGTGTAC.1  CTAAGGTGGTTGTG.1  CTAATAGAAGGTTC.1  CTAATAGACGAATC.1 \n##                 1                 1                10                 3 \n##  CTAATAGACTCCCA.1  CTAATAGAGGGACA.1  CTAATAGAGTACCA.1  CTAATAGATGGTTG.1 \n##                 1                 1                 4                 4 \n##  CTAATGCTAAGGGC.1 CTAATGCTAGCGGA.11  CTAATGCTCAGAAA.1  CTAATGCTCCTAAG.1 \n##                 4                 0                 0                 2 \n##  CTAATGCTGAACTC.1  CTAATGCTGGATTC.1  CTAATGCTTCCGAA.1  CTAATGCTTCTCTA.1 \n##                 8                 0                 2                 2 \n##  CTAATGCTTGTCCC.1  CTACAACTACACTG.1  CTACAACTGAGACG.1  CTACAACTGGCAAG.1 \n##                 1                 0                 1                 5 \n##  CTACAACTGTATCG.1  CTACAACTTCCCGT.1  CTACCTCTATCACG.1  CTACCTCTCCTTGC.1 \n##                 0                 4                 5                 1 \n##  CTACCTCTCTTTAC.1  CTACCTCTGTTGTG.1  CTACCTCTTATCGG.1  CTACGCACCGTAGT.1 \n##                 6                 0                 0                 6 \n##  CTACGCACGAGGCA.1  CTACGCACGTCATG.1  CTACGCACGTGTAC.1  CTACGGCTTATGCG.1 \n##                 0                 6                 0                 5 \n##  CTACGGCTTCCCAC.1  CTACGGCTTTTCGT.1  CTACTATGCCCACT.1  CTACTATGCGACAT.1 \n##                 0                 0                 3                 0 \n##  CTACTATGCTTGGA.1  CTACTATGTGCTCC.1  CTACTATGTGTCCC.1  CTACTCCTACTCAG.1 \n##                 0                 1                 1                 1 \n##  CTACTCCTATCGGT.1  CTACTCCTGCTTCC.1  CTACTCCTGGTAGG.1  CTACTCCTGGTGGA.1 \n##                 5                 1                 1                 1 \n##  CTAGAGACGCTAAC.1  CTAGAGACGTCTGA.1  CTAGAGACGTTCGA.1  CTAGAGACTCCTAT.1 \n##                 9                 8                 0                 3 \n##  CTAGGATGACGGTT.1  CTAGGATGAGTAGA.1  CTAGGATGATGCTG.1  CTAGGATGCCCTAC.1 \n##                 7                 8                 4                 5 \n##  CTAGGATGCTAGCA.1  CTAGGATGGAGATA.1  CTAGGATGGCCATA.1  CTAGGATGTGCCCT.1 \n##                 2                 0                 0                 1 \n##  CTAGGATGTGCGTA.1  CTAGGCCTAAACAG.1  CTAGGCCTCACTCC.1  CTAGGCCTCCGAAT.1 \n##                 0                 1                 0                 1 \n##  CTAGGCCTCCTATT.1  CTAGGCCTGGTATC.1  CTAGGTGATAAGCC.1  CTAGGTGATGGAAA.1 \n##                 8                 1                 5                 0 \n##  CTAGTTACACCCAA.1  CTAGTTACAGAGAT.1  CTAGTTACCAGAAA.1  CTAGTTACCTATTC.1 \n##                 0                 0                 0                 1 \n##  CTAGTTACGGGACA.1  CTAGTTACGTCTGA.1 CTAGTTACTGGTAC.11  CTAGTTTGAATGCC.1 \n##                 0                 1                 5                 0 \n##  CTAGTTTGCTAGAC.1  CTAGTTTGGAGATA.1  CTAGTTTGGCCAAT.1  CTAGTTTGGGTGTT.1 \n##                 5                 2                 2                 2 \n##  CTAGTTTGTACTGG.1  CTAGTTTGTAGCGT.1  CTATAAGATAAAGG.1  CTATACTGCCCGTT.1 \n##                 2                 1                 6                 0 \n##  CTATACTGCTACCC.1  CTATACTGGAGAGC.1  CTATACTGTATCTC.1  CTATAGCTACACGT.1 \n##                 3                 0                 0                 1 \n##  CTATAGCTAGAAGT.1  CTATAGCTCATGGT.1  CTATAGCTGGCATT.1  CTATCAACCAACTG.1 \n##                 1                 1                 2                 4 \n##  CTATCAACCTACGA.1  CTATCAACCTGTTT.1  CTATCAACCTTAGG.1  CTATCAACGAATCC.1 \n##                 3                 4                10                 1 \n##  CTATCATGGAATAG.1  CTATCATGGGACAG.1  CTATCATGTCCGAA.1  CTATCATGTCTAGG.1 \n##                 0                 2                 6                 1 \n## CTATCATGTTGGTG.11  CTATCATGTTTCTG.1  CTATCCCTAAGTGA.1  CTATCCCTAGATCC.1 \n##                 9                 1                 0                 3 \n##  CTATCCCTATGACC.1  CTATCCCTATGCCA.1  CTATCCCTATTCTC.1  CTATCCCTCATTTC.1 \n##                 1                 1                 4                 0 \n##  CTATGACTCGTAAC.1  CTATGACTCTAGAC.1  CTATGACTGAGCTT.1 CTATGACTGCTACA.11 \n##                 5                 7                 1                 0 \n##  CTATGACTGGCGAA.1  CTATGACTGTACAC.1  CTATGACTTTCTCA.1  CTATGTACAAAGCA.1 \n##                 1                 3                 0                 0 \n##  CTATGTACCGTGTA.1  CTATGTACTACTTC.1  CTATGTACTGTGAC.1  CTATGTACTTTCGT.1 \n##                 4                 1                 0                 6 \n## CTATGTTGGGAGCA.11  CTATGTTGTGCCCT.1  CTATGTTGTGGTTG.1  CTATTGACCTAGCA.1 \n##                 5                 1                 5                 1 \n##  CTATTGACCTGATG.1  CTATTGTGAAAGCA.1  CTATTGTGATCACG.1  CTATTGTGATCGTG.1 \n##                 1                 0                 0                 5 \n##  CTATTGTGCGTTGA.1  CTCAATTGCCTGTC.1  CTCAATTGGACTAC.1  CTCAATTGGTAGCT.1 \n##                 0                 0                 0                 2 \n##  CTCAATTGTTGCGA.1  CTCAGAGAAGAAGT.1  CTCAGAGACTGAAC.1  CTCAGAGACTTATC.1 \n##                 6                 1                 3                 6 \n##  CTCAGAGAGGATTC.1  CTCAGAGATCGACA.1  CTCAGCACCAGCTA.1  CTCAGCACCCAACA.1 \n##                 4                 0                 7                 0 \n##  CTCAGCACCCTATT.1  CTCAGCACCTGTTT.1  CTCAGCACGCGGAA.1  CTCAGCACTCCGAA.1 \n##                 1                 0                 5                 0 \n##  CTCAGCACTCGCCT.1  CTCAGCTGACAGCT.1  CTCAGCTGCGTCTC.1  CTCAGCTGTTTCTG.1 \n##                 3                 1                 2                 1 \n##  CTCAGGCTACGACT.1  CTCAGGCTAGCCTA.1  CTCAGGCTCTGAAC.1  CTCAGGCTTAACGC.1 \n##                 1                 1                 3                 0 \n##  CTCAGGCTTTCGGA.1  CTCAGGCTTTGACG.1  CTCATTGAGCTATG.1  CTCATTGAGGGATG.1 \n##                 1                 2                 0                 7 \n##  CTCATTGATCGACA.1  CTCATTGATGGGAG.1 CTCCACGAACGGGA.11  CTCCACGATTGACG.1 \n##                10                 0                 2                 2 \n##  CTCCATCTGATACC.1  CTCCATCTTAGAGA.1  CTCCATCTTTCTGT.1  CTCCGAACAGCAAA.1 \n##                 1                 1                 1                 0 \n##  CTCCGAACTAAAGG.1  CTCCGAACTAGAAG.1  CTCCGAACTCCCGT.1  CTCCTACTGTCTAG.1 \n##                 1                 6                 4                 1 \n##  CTCCTACTTCCGTC.1  CTCGAAGAACACAC.1  CTCGAAGAAGGCGA.1  CTCGAAGACTAAGC.1 \n##                 1                 1                 7                 1 \n##  CTCGAAGAGAGATA.1  CTCGACACCGCAAT.1  CTCGACACGTGTAC.1  CTCGACACTACGCA.1 \n##                 2                 0                 7                 2 \n##  CTCGACACTCCAAG.1  CTCGACTGTCGATG.1 CTCGACTGTTCACT.11  CTCGAGCTCAGGAG.1 \n##                 0                 1                 0                 3 \n##  CTCGAGCTCCTGAA.1  CTCGAGCTCTCTTA.1  CTCGAGCTGATGAA.1  CTCGAGCTGGAGGT.1 \n##                 3                 1                 6                 0 \n##  CTCGAGCTGGTAGG.1  CTCGAGCTTCCGAA.1  CTCGAGCTTTGTCT.1  CTCGCATGTCGACA.1 \n##                 1                10                 8                 4 \n##  CTCGCATGTTCGTT.1  CTCGCATGTTGACG.1  CTCTAAACACTGTG.1  CTCTAAACATCTCT.1 \n##                 0                 0                 0                 1 \n##  CTCTAAACGAGCAG.1  CTCTAAACGTGCAT.1  CTCTAATGCCTCGT.1  CTCTAATGGAATCC.1 \n##                 0                 5                 4                 0 \n##  CTCTAATGGACAGG.1  CTCTAATGGCCCTT.1  CTGAACGACCAAGT.1  CTGAACGACGCCTT.1 \n##                 5                 1                 0                 0 \n##  CTGAACGACTGGAT.1  CTGAACGATTCATC.1  CTGAACGATTCCCG.1  CTGAAGACCACACA.1 \n##                 9                 0                 9                 1 \n##  CTGAAGACCATGGT.1  CTGAAGACCCTCAC.1  CTGAAGACGAGCTT.1  CTGAAGTGACGTGT.1 \n##                 5                 1                 9                 0 \n##  CTGAAGTGGCTTCC.1  CTGAAGTGTGCACA.1  CTGAAGTGTTTCAC.1  CTGAATCTAAACAG.1 \n##                 0                 3                 1                 1 \n##  CTGAATCTAGAGAT.1  CTGAATCTAGATGA.1  CTGAATCTGGAACG.1  CTGAATCTTAAGCC.1 \n##                 1                 0                 6                 2 \n##  CTGAATCTTCGCAA.1  CTGAATCTTGGCAT.1  CTGACAGACAACCA.1  CTGACAGACAACTG.1 \n##                 0                 0                 5                 5 \n##  CTGACAGACCAGTA.1  CTGACCACACAGCT.1  CTGACCACGGTATC.1  CTGACCACGTAGGG.1 \n##                 4                 5                 8                 9 \n## CTGACCACTGAGCT.11  CTGACCACTGGCAT.1  CTGACCACTGGTGT.1  CTGAGAACCATCAG.1 \n##                 1                 2                 7                 3 \n##  CTGAGAACCCTGTC.1  CTGAGAACCTTGTT.1  CTGAGCCTCTGTTT.1  CTGAGCCTGAGGTG.1 \n##                 4                 1                13                 2 \n##  CTGAGCCTTACGCA.1  CTGAGCCTTCTCAT.1  CTGAGCCTTGACAC.1  CTGATACTCACTTT.1 \n##                 1                 1                 5                 1 \n##  CTGATACTCCTTGC.1  CTGATACTCTGTTT.1  CTGATACTTAGAGA.1  CTGATACTTGCAAC.1 \n##                 2                 0                 3                 0 \n##  CTGATACTTTCATC.1  CTGATACTTTGACG.1  CTGATGGAAATGCC.1  CTGATGGACTATGG.1 \n##                 5                 1                 1                 5 \n##  CTGATTTGAACGGG.1  CTGATTTGCAGGAG.1  CTGATTTGCTTATC.1  CTGATTTGGACAGG.1 \n##                 3                 3                 4                 3 \n##  CTGATTTGGTGAGG.1  CTGATTTGTCACCC.1  CTGATTTGTCTCCG.1  CTGCAGCTTAGACC.1 \n##                 0                 3                 2                 6 \n##  CTGCAGCTTGAAGA.1  CTGCAGCTTTGGCA.1  CTGCCAACCCATAG.1  CTGCCAACCCATGA.1 \n##                 0                10                 0                 7 \n##  CTGCCAACCCCTAC.1  CTGCCAACCTAAGC.1  CTGCCAACTTGTCT.1  CTGCGACTTGAAGA.1 \n##                 3                 4                 2                 1 \n##  CTGGAAACACACGT.1  CTGGAAACACCACA.1  CTGGAAACATGTCG.1  CTGGAAACCACTTT.1 \n##                 4                 3                 1                 1 \n##  CTGGAAACGGAGGT.1  CTGGATGAAGTAGA.1  CTGGATGAGACAAA.1  CTGGATGAGAGGTG.1 \n##                 1                 1                 0                 7 \n##  CTGGATGAGCTACA.1  CTGGATGATAAGGA.1  CTGGATGATACTCT.1  CTGGATGATGACCA.1 \n##                 7                 0                 1                 2 \n##  CTGGATGATGTTCT.1  CTGGATGATTATCC.1  CTGGCACTCCGTAA.1  CTGGCACTCCTCCA.1 \n##                 2                 1                 0                 0 \n##  CTGGCACTCTTGCC.1  CTGGCACTGAGAGC.1  CTGGCACTGTCGTA.1  CTGTAACTATGTGC.1 \n##                 2                 7                 5                 4 \n##  CTGTAACTTCACCC.1  CTGTAACTTGGTAC.1  CTGTATACAGACTC.1  CTGTATACCCTGTC.1 \n##                 5                 2                 1                 6 \n##  CTGTATACGTATGC.1  CTGTATACTGCTCC.1  CTGTGAGAATGCCA.1  CTGTGAGAGGCATT.1 \n##                 1                 5                 0                 1 \n##  CTGTGAGATCTCTA.1  CTGTGAGATGTCTT.1  CTTAAAGAAAAGCA.1  CTTAAAGAACGTGT.1 \n##                 3                 3                 0                 1 \n##  CTTAAAGACTATTC.1  CTTAAAGAGTAGCT.1  CTTAAAGATATGCG.1  CTTAAAGATGTCTT.1 \n##                 1                 1                 4                 7 \n##  CTTAAAGATTTCTG.1  CTTAACACAGCCAT.1  CTTAACACAGTTCG.1  CTTAAGCTACGTTG.1 \n##                 4                 8                 1                 4 \n##  CTTAAGCTGGTACT.1  CTTAAGCTTATGGC.1  CTTACAACACGTGT.1  CTTACAACACGTTG.1 \n##                 5                 3                 2                 2 \n##  CTTACAACCTTAGG.1  CTTACAACGCGAGA.1  CTTACAACGCTATG.1  CTTACAACTGGTCA.1 \n##                 4                 0                 0                 5 \n##  CTTACAACTTGGCA.1  CTTACAACTTTCTG.1  CTTACATGCCATGA.1  CTTACATGCGAATC.1 \n##                 0                 2                 5                 9 \n##  CTTACATGCGCAAT.1  CTTACATGCGTTAG.1  CTTACATGGTTAGC.1  CTTACATGGTTCAG.1 \n##                 1                12                 8                 5 \n##  CTTACATGTTTCTG.1  CTTACTGAAAGGGC.1  CTTACTGAACCACA.1  CTTACTGAACGCAT.1 \n##                 0                 6                 0                 5 \n##  CTTACTGACTCTTA.1  CTTACTGAGGAGGT.1  CTTACTGAGGTTAC.1 CTTACTGATTGTCT.11 \n##                 0                 3                12                 2 \n##  CTTAGACTAACCAC.1  CTTAGACTACCAGT.1  CTTAGACTACTACG.1  CTTAGACTCACCAA.1 \n##                 1                 0                 8                 0 \n##  CTTAGGGAAAAAGC.1  CTTAGGGACTGCAA.1  CTTAGGGATCGATG.1  CTTAGGGATGGTCA.1 \n##                 4                 4                 4                 0 \n##  CTTATCGACAGCTA.1  CTTATCGAGATAAG.1  CTTATCGATTTCGT.1  CTTCACCTAGAAGT.1 \n##                 2                 2                 8                 0 \n##  CTTCACCTAGTGCT.1  CTTCACCTATGTGC.1  CTTCACCTCCCTTG.1  CTTCACCTCGACAT.1 \n##                 5                 1                 1                 1 \n##  CTTCACCTGTCGTA.1  CTTCACCTTAAGCC.1  CTTCACCTTCGACA.1  CTTCACCTTCTTTG.1 \n##                 2                 1                 0                 7 \n##  CTTCACCTTGACTG.1  CTTCACCTTGGTCA.1  CTTCATGAAACCTG.1  CTTCATGACTAGCA.1 \n##                 1                 2                 9                 0 \n##  CTTCATGAGGGTGA.1  CTTCATGATCTCAT.1  CTTCTAGAATGACC.1  CTTCTAGACTTGAG.1 \n##                 9                 7                 1                 1 \n##  CTTCTAGACTTGTT.1  CTTGAACTAACGGG.1  CTTGAACTATGACC.1  CTTGAACTCCTGAA.1 \n##                 3                 5                 3                 0 \n##  CTTGAACTCTGTAG.1  CTTGAACTGCCATA.1  CTTGAACTGCCCTT.1  CTTGAGGAAACCGT.1 \n##                 3                 9                 0                 5 \n##  CTTGAGGAAAGCAA.1  CTTGAGGAAGCTAC.1  CTTGAGGAATGGTC.1  CTTGAGGACTCAAG.1 \n##                 1                 0                 1                 1 \n##  CTTGAGGACTCATT.1  CTTGAGGATTGCAG.1  CTTGAGGATTGGTG.1  CTTGATTGAATGCC.1 \n##                 1                 0                 5                 1 \n##  CTTGATTGCTACCC.1  CTTGATTGGGTACT.1  CTTGATTGTAAGGA.1  CTTGATTGTACAGC.1 \n##                 1                 0                 1                 1 \n##  CTTGTATGACGACT.1  CTTGTATGATCGTG.1  CTTGTATGTCTATC.1  CTTTACGAAGCCAT.1 \n##                 1                 4                 0                 5 \n##  CTTTACGACGAATC.1  CTTTACGACTTCCG.1  CTTTACGAGTTAGC.1  CTTTACGATTCATC.1 \n##                 5                 2                 2                 7 \n##  CTTTAGACGACTAC.1  CTTTAGACGTCACA.1  CTTTAGACTCGCAA.1 CTTTAGACTGGGAG.11 \n##                 3                 5                 3                 7 \n##  CTTTAGTGCTACCC.1  CTTTAGTGCTTTAC.1  CTTTAGTGGGTGTT.1  CTTTCAGACAACCA.1 \n##                 6                 1                 3                 9 \n##  CTTTCAGAGACGAG.1  CTTTCAGAGTGTCA.1  CTTTCAGATAGCCA.1  CTTTCAGATCTCCG.1 \n##                 3                 2                 1                 0 \n##  CTTTCAGATTTCTG.1  CTTTGATGCCGAAT.1  CTTTGATGGGGTGA.1  CTTTGATGGGTGGA.1 \n##                 3                 5                 4                 4 \n##  CTTTGATGGTAGGG.1  CTTTGATGGTCACA.1  CTTTGATGGTGTTG.1 GAAACAGAAGTTCG.11 \n##                 1                 0                 5                 6 \n##  GAAACAGATACTTC.1  GAAACAGATGGGAG.1  GAAACAGATGGTAC.1  GAAACCTGCTATTC.1 \n##                 0                 1                 0                 8 \n##  GAAACCTGGCAAGG.1  GAAACCTGGTAAGA.1  GAAACCTGTCTTTG.1  GAAAGATGAGTACC.1 \n##                 7                 5                 7                 7 \n##  GAAAGATGCACTTT.1  GAAAGATGGGATCT.1  GAAAGATGGGCAAG.1  GAAAGATGTAAAGG.1 \n##                 0                 2                 7                 1 \n##  GAAAGTGAAGAAGT.1  GAAAGTGACGTCTC.1  GAAAGTGACTTCGC.1  GAAAGTGAGAATCC.1 \n##                 1                 1                 0                 3 \n##  GAAAGTGAGGTGTT.1  GAAAGTGATTCAGG.1  GAAATACTACCTCC.1  GAAATACTAGTCAC.1 \n##                10                 5                 1                 0 \n##  GAAATACTCGACTA.1  GAAATACTCTGAAC.1  GAAATACTGGTTTG.1  GAAATACTTGGGAG.1 \n##                 9                 1                 2                 4 \n##  GAAATACTTGGTAC.1  GAAATACTTTGCAG.1  GAACACACAGCCAT.1  GAACACACTGGTGT.1 \n##                 1                 0                 1                 0 \n##  GAACACACTTCAGG.1  GAACAGCTCACTGA.1  GAACAGCTGCCTTC.1  GAACAGCTGGACGA.1 \n##                 6                 4                 9                 2 \n##  GAACAGCTGTACAC.1  GAACCAACCGGAGA.1  GAACCAACCTCCCA.1  GAACCTGAACACCA.1 \n##                 5                 0                 1                 1 \n##  GAACCTGATCAAGC.1  GAACGGGAACCACA.1  GAACGGGAATGCTG.1  GAACGGGACTCGAA.1 \n##                 0                 1                 0                 3 \n##  GAACGGGACTGATG.1  GAACGGGATACGAC.1  GAACGGGATGGTCA.1  GAACGTTGAAAGCA.1 \n##                 1                 9                 1                 4 \n##  GAACGTTGCTACTT.1  GAACGTTGTGAGAA.1  GAACGTTGTTCATC.1  GAACTGTGCGTTAG.1 \n##                 3                 3                 0                 2 \n##  GAACTGTGGTTGAC.1  GAACTGTGTAGAGA.1  GAACTGTGTATCGG.1  GAAGAATGATGTGC.1 \n##                 8                 3                 5                 0 \n##  GAAGAATGCTAGCA.1  GAAGAATGGCAGTT.1  GAAGAATGTACGCA.1  GAAGAATGTGAGCT.1 \n##                 3                 0                 3                 0 \n##  GAAGATGACTGAGT.1  GAAGATGACTTCCG.1  GAAGATGAGTATCG.1  GAAGATGATCAGTG.1 \n##                 0                 4                 1                 2 \n##  GAAGATGATGGTTG.1  GAAGCGGAAAGATG.1  GAAGCGGAAAGGCG.1  GAAGCGGAAAGGTA.1 \n##                 1                 5                 2                 1 \n##  GAAGCGGAAGACTC.1  GAAGCGGACTTGCC.1  GAAGCGGAGCGGAA.1  GAAGCTACCAGAGG.1 \n##                 5                 2                 3                 5 \n##  GAAGCTACCAGGAG.1  GAAGCTACCCCTCA.1  GAAGCTACCCGCTT.1  GAAGCTACGTAGGG.1 \n##                 4                 0                 4                 4 \n##  GAAGCTTGACTACG.1  GAAGCTTGCCTTTA.1  GAAGCTTGTAACCG.1  GAAGCTTGTCCGTC.1 \n##                 0                 5                 0                 2 \n##  GAAGGGTGAGAAGT.1  GAAGGGTGAGCACT.1  GAAGGGTGATACCG.1  GAAGGGTGCATCAG.1 \n##                 3                 0                 0                 0 \n##  GAAGGGTGGAACCT.1  GAAGGGTGGACGGA.1  GAAGGTCTAGAAGT.1  GAAGGTCTAGTTCG.1 \n##                 0                 1                 4                 0 \n##  GAAGGTCTATCGTG.1  GAAGGTCTGCAAGG.1  GAAGTAGAACGGGA.1  GAAGTAGACGTAAC.1 \n##                 8                 1                 1                 1 \n##  GAAGTAGACTGTAG.1  GAAGTAGAGTTGCA.1  GAAGTCACATCTTC.1  GAAGTCACCCAGTA.1 \n##                 0                 0                 7                 2 \n##  GAAGTCACGGACGA.1  GAAGTCACTCGTAG.1  GAAGTCTGAAACGA.1  GAAGTCTGACTCAG.1 \n##                 0                 3                 0                 0 \n##  GAAGTCTGCACTGA.1  GAAGTCTGCCTAAG.1  GAAGTCTGGTCATG.1  GAAGTCTGTTCACT.1 \n##                 5                 1                 6                11 \n##  GAAGTGCTAGCGTT.1  GAAGTGCTGTCTTT.1  GAATGCACCAGAAA.1  GAATGCACCATACG.1 \n##                 1                 0                 1                 0 \n##  GAATGCACGCTATG.1  GAATGCACGTTCGA.1  GAATGCACTTACCT.1  GAATGCTGCCACCT.1 \n##                 3                 2                 0                 1 \n##  GAATGCTGCCCACT.1  GAATGCTGGCTCCT.1  GAATGCTGTTCATC.1  GAATGGCTAGATCC.1 \n##                 0                 0                 3                 8 \n##  GAATGGCTATTCTC.1  GAATGGCTCCCTAC.1  GAATGGCTCTAAGC.1 GAATGGCTCTCAAG.11 \n##                 0                 4                 4                 2 \n##  GAATGGCTCTCATT.1  GAATGGCTGGTATC.1  GAATGGCTGTTCAG.1  GAATGGCTTCTCCG.1 \n##                 4                 4                 6                 8 \n##  GAATGGCTTGTCGA.1  GAATTAACACTTTC.1  GAATTAACTTCAGG.1  GACAACACACGTAC.1 \n##                 4                 0                 1                 0 \n##  GACAACACCGTCTC.1  GACAACACGGAGTG.1  GACAACACGTTAGC.1  GACAACACTTGAGC.1 \n##                 0                 8                 1                 0 \n##  GACAACTGCCAATG.1  GACAACTGCCATAG.1  GACAACTGCGCTAA.1  GACAACTGCTAGTG.1 \n##                10                 8                 6                 2 \n##  GACAACTGTGCGTA.1  GACACTGAACTACG.1  GACACTGACTGTAG.1  GACACTGAGGTCAT.1 \n##                 0                 8                 0                 1 \n##  GACACTGATTCTAC.1  GACACTGATTTACC.1  GACAGGGATCGCCT.1  GACAGTACCAGTTG.1 \n##                 0                 1                 2                10 \n##  GACAGTACCATTTC.1  GACAGTACGCAAGG.1  GACAGTACGCTGTA.1  GACAGTACGTCAAC.1 \n##                 0                 7                 2                 3 \n##  GACAGTACTTCCGC.1  GACAGTTGCCTTAT.1  GACAGTTGGAAGGC.1  GACAGTTGTCAGAC.1 \n##                 9                 5                 2                 3 \n##  GACAGTTGTCCGAA.1  GACATTCTACAGTC.1  GACATTCTACCGAT.1  GACATTCTGACGAG.1 \n##                 2                 7                 1                 2 \n##  GACATTCTGAGCTT.1  GACATTCTGGAACG.1  GACATTCTGTTTGG.1  GACCAAACACGGGA.1 \n##                 3                 0                 5                 4 \n##  GACCAAACAGTGTC.1  GACCAAACATTGGC.1  GACCAAACCTACCC.1  GACCAAACGATAGA.1 \n##                 0                 4                 0                 0 \n##  GACCAAACGTTCAG.1  GACCAAACTAGCGT.1  GACCATGAAAGGTA.1  GACCCTACATTCTC.1 \n##                 0                 2                 1                 0 \n##  GACCTAGAAAGCAA.1  GACCTAGACGCCTT.1  GACCTAGACGCTAA.1  GACCTCACAAGATG.1 \n##                 4                 1                 0                 4 \n##  GACCTCACACCCAA.1  GACCTCACAGGGTG.1  GACCTCACGTATCG.1  GACCTCACTGCTAG.1 \n##                 1                 5                 0                 5 \n##  GACCTCACTGGTCA.1  GACCTCTGAGGGTG.1  GACCTCTGCTGAAC.1  GACCTCTGGTGCTA.1 \n##                 0                 0                 3                 4 \n##  GACCTCTGTCTTCA.1  GACCTCTGTGCTTT.1  GACCTCTGTTGCGA.1  GACGAACTCATCAG.1 \n##                 1                 5                 0                 2 \n##  GACGAACTTATCTC.1  GACGAACTTTTGTC.1  GACGAGGACATGAC.1  GACGAGGACCCGTT.1 \n##                 1                 1                 2                 0 \n##  GACGAGGACCGATA.1  GACGAGGACGTGAT.1  GACGAGGAGGACAG.1  GACGAGGAGGGACA.1 \n##                 6                 2                 3                 4 \n##  GACGAGGAGTCTAG.1  GACGAGGATGTGAC.1  GACGAGGATTGAGC.1  GACGATTGACGGGA.1 \n##                 4                 1                 4                 5 \n##  GACGATTGAGAGGC.1  GACGATTGCTTATC.1  GACGCCGAGCTGAT.1  GACGCCGAGGAGGT.1 \n##                 2                 0                 4                 5 \n##  GACGCCGAGTGTAC.1  GACGCCGAGTTAGC.1  GACGCCGAGTTGAC.1  GACGCCGATTTCTG.1 \n##                 2                 5                 0                 4 \n##  GACGCTCTCGATAC.1  GACGCTCTCTGTGA.1  GACGCTCTGTGCTA.1  GACGCTCTTCCGAA.1 \n##                 4                 1                 0                 4 \n##  GACGCTCTTGCTAG.1  GACGCTCTTGTGAC.1  GACGGCACACAGCT.1  GACGGCACGTTCAG.1 \n##                 1                 0                 1                 0 \n##  GACGGCACTTTACC.1  GACGTAACAAAAGC.1  GACGTAACACGTGT.1  GACGTAACCACACA.1 \n##                 6                 9                 0                 9 \n## GACGTAACCGCTAA.11  GACGTAACCGTTAG.1  GACGTAACGAATCC.1  GACGTAACGAGAGC.1 \n##                 0                10                 0                 1 \n##  GACGTAACGTAGGG.1  GACGTAACGTTTGG.1  GACGTAACTGCTAG.1  GACGTAACTGCTCC.1 \n##                 0                 5                 1                 0 \n##  GACGTATGACTAGC.1  GACGTATGCCGTTC.1  GACGTATGGAAACA.1  GACGTCCTAAGTAG.1 \n##                 2                 5                 1                 2 \n##  GACGTCCTATCTTC.1 GACGTCCTGAGGCA.11  GACGTCCTGCGATT.1  GACGTCCTGGTAGG.1 \n##                 1                 3                 1                 4 \n##  GACGTCCTTCTTCA.1  GACGTCCTTGAACC.1  GACGTCCTTGTTCT.1 GACGTCCTTTTCTG.11 \n##                 1                 1                 0                 8 \n##  GACTACGACCTTTA.1 GACTACGAGAGGGT.11  GACTACGAGTCTGA.1 GACTACGAGTGAGG.11 \n##                 0                 6                 1                 1 \n##  GACTACGATGTGAC.1  GACTACGATGTTTC.1  GACTACGATTCACT.1  GACTCCTGAACTGC.1 \n##                 0                 1                 0                 0 \n##  GACTCCTGCTTCTA.1  GACTCCTGGAGCAG.1  GACTCCTGGGTTTG.1  GACTCCTGTATCTC.1 \n##                 1                 8                 0                 0 \n##  GACTCCTGTGTAGC.1  GACTGAACAAGTGA.1  GACTGAACATCTCT.1  GACTGAACCCAGTA.1 \n##                 1                 0                 6                 0 \n##  GACTGATGAAGGGC.1  GACTGATGACACAC.1  GACTGATGGAATCC.1  GACTGATGGTCCTC.1 \n##                 0                 9                 2                 0 \n##  GACTGATGGTTTGG.1  GACTGATGTAGACC.1  GACTGATGTGCCAA.1  GACTGTGAAAGCAA.1 \n##                 2                 6                 5                 2 \n##  GACTGTGAAGATCC.1  GACTGTGAAGGCGA.1  GACTGTGACAGATC.1  GACTGTGAGGAAGC.1 \n##                 0                 4                 0                 0 \n##  GACTGTGAGGTGGA.1  GACTGTGATCTTCA.1  GACTGTGATGCCAA.1  GACTGTGATTCGGA.1 \n##                 1                 6                 6                 0 \n##  GACTTTACATTCGG.1  GACTTTACCAGATC.1  GACTTTACTAAAGG.1  GACTTTACTTGCGA.1 \n##                 3                 1                 1                 1 \n##  GAGAAATGTCCAAG.1  GAGAAATGTTTCTG.1  GAGAAATGTTTGTC.1  GAGAGGTGAGCACT.1 \n##                 5                 1                 3                 4 \n##  GAGAGGTGCCTGAA.1  GAGAGGTGCTGGAT.1  GAGAGGTGTCGCCT.1  GAGAGGTGTTTCGT.1 \n##                11                 1                 2                 0 \n##  GAGATAGAAACGGG.1  GAGATAGACCGTAA.1  GAGATAGATGAGGG.1  GAGATAGATGCTAG.1 \n##                 0                 2                 0                 1 \n##  GAGATAGATGGTAC.1  GAGATCACACACTG.1  GAGATCACAGACTC.1  GAGATCACCCAAGT.1 \n##                 1                 0                 0                 6 \n##  GAGATCACCTTGGA.1  GAGATCACTCCCGT.1  GAGATCACTGATGC.1  GAGATCACTGCATG.1 \n##                 0                 2                 2                 0 \n##  GAGATGCTAAGGGC.1  GAGATGCTACCTAG.1  GAGATGCTATCGAC.1  GAGATGCTCGGTAT.1 \n##                 1                 6                 0                 0 \n##  GAGATGCTGTCATG.1  GAGATGCTTACAGC.1  GAGATGCTTGACTG.1  GAGATGCTTTAGGC.1 \n##                 1                10                 0                 4 \n##  GAGATGCTTTCTAC.1  GAGCAACTACGTGT.1  GAGCAACTCTAAGC.1  GAGCAACTGCTGAT.1 \n##                11                 1                 0                 0 \n##  GAGCAACTGTAAAG.1  GAGCAGGAACAGCT.1  GAGCAGGAAGTCTG.1  GAGCAGGACACTAG.1 \n##                 6                 0                 7                 4 \n##  GAGCAGGACGTAAC.1  GAGCAGGAGGCAAG.1  GAGCAGGATCGACA.1  GAGCATACACCAGT.1 \n##                 3                 8                 0                 1 \n##  GAGCATACATCGAC.1  GAGCATACCCAAGT.1  GAGCATACGGAAGC.1  GAGCATACGGAGTG.1 \n##                 3                 0                 1                 4 \n##  GAGCATACGGATCT.1  GAGCATACGGGATG.1  GAGCGAGAACTCTT.1  GAGCGAGACACAAC.1 \n##                 0                 0                 1                 1 \n##  GAGCGAGACGAGTT.1  GAGCGAGAGAATAG.1  GAGCGAGAGCGTAT.1  GAGCGAGATGGTCA.1 \n##                 0                 7                 2                 0 \n##  GAGCGAGATGTCGA.1  GAGCGAGATTCTAC.1  GAGCGCACAGAGAT.1  GAGCGCACCAGAGG.1 \n##                 1                 9                 0                 2 \n##  GAGCGCACCCAATG.1  GAGCGCTGACCTCC.1  GAGCGCTGCAAAGA.1  GAGCGCTGCTGGAT.1 \n##                 3                 4                 0                 6 \n##  GAGCGCTGGGATTC.1  GAGCGCTGGGCGAA.1  GAGCGCTGTTGTGG.1  GAGCGCTGTTTCTG.1 \n##                10                 2                 3                 5 \n##  GAGCGGCTAACGGG.1  GAGCGGCTATGGTC.1  GAGCGGCTTGTCTT.1  GAGCTCCTGTTGTG.1 \n##                 8                 2                 9                 0 \n##  GAGCTCCTTACAGC.1  GAGGACGAACTCTT.1  GAGGACGACGGGAA.1  GAGGACGAGCAGTT.1 \n##                 0                 3                 1                 3 \n##  GAGGACGAGGCAAG.1  GAGGACGAGGTTTG.1  GAGGACGATGACCA.1  GAGGATCTGGCATT.1 \n##                 0                 0                 0                 3 \n##  GAGGATCTTAGCGT.1  GAGGATCTTCACGA.1  GAGGATCTTCTAGG.1  GAGGCAGATCATTC.1 \n##                 1                 0                 0                 3 \n##  GAGGCAGATGGTGT.1  GAGGCCACACAGTC.1  GAGGCCACAGTGCT.1  GAGGCCACCTACCC.1 \n##                 1                 3                 2                 4 \n##  GAGGCCACTGTTTC.1  GAGGGAACGATAAG.1  GAGGGAACGTTGTG.1  GAGGGAACTTATCC.1 \n##                 6                 6                 2                 0 \n##  GAGGGAACTTTGCT.1  GAGGGATGAGGGTG.1  GAGGGATGATCTCT.1  GAGGGATGGGGATG.1 \n##                 2                 3                 5                 1 \n##  GAGGGATGGTCACA.1  GAGGGATGTAGCCA.1  GAGGGATGTGCCAA.1  GAGGGATGTGTGAC.1 \n##                 0                 0                 8                 1 \n##  GAGGGATGTTCACT.1  GAGGGATGTTGAGC.1  GAGGGCCTAACGGG.1  GAGGGCCTACCTCC.1 \n##                 2                 2                 0                 0 \n##  GAGGGCCTACTAGC.1  GAGGGCCTAGAGGC.1  GAGGGCCTCAGAAA.1  GAGGGCCTCCTGTC.1 \n##                 1                 3                 0                 1 \n##  GAGGGTGAAGTAGA.1  GAGGGTGATAGTCG.1  GAGGGTGATGTCTT.1  GAGGGTGATTGCGA.1 \n##                 1                 1                 0                 1 \n##  GAGGGTGATTGCTT.1  GAGGGTGATTGGCA.1  GAGGTACTAAAACG.1  GAGGTACTAACGGG.1 \n##                 0                 2                 3                 1 \n##  GAGGTACTACGCAT.1  GAGGTACTACTACG.1  GAGGTACTCATGAC.1  GAGGTACTCTCTAT.1 \n##                 1                 3                 0                 4 \n##  GAGGTACTTGGTCA.1  GAGGTGGAATTCTC.1  GAGGTGGACTCATT.1  GAGGTGGAGCGAAG.1 \n##                 1                 3                 4                 0 \n##  GAGGTGGAGGTTCA.1  GAGGTGGATTGGTG.1  GAGGTTACCACTTT.1  GAGGTTACGAGAGC.1 \n##                 0                 2                 3                 0 \n##  GAGGTTACGCGGAA.1  GAGGTTTGAAGATG.1  GAGGTTTGAATCGC.1  GAGGTTTGATGCTG.1 \n##                 3                 8                 2                 5 \n##  GAGGTTTGCCTTAT.1  GAGGTTTGCGAGAG.1  GAGGTTTGGTCTAG.1  GAGGTTTGTGGAAA.1 \n##                 1                 7                10                 9 \n##  GAGTAAGACTTGCC.1  GAGTAAGATCAGTG.1  GAGTAAGATGTGGT.1  GAGTACACACACAC.1 \n##                 0                 7                 1                 4 \n##  GAGTACACCATTGG.1 GAGTACACCATTTC.11 GAGTACACCTGACA.11 GAGTACACGCGTTA.11 \n##                 9                 1                 0                 9 \n##  GAGTACTGCGTAGT.1  GAGTACTGTCACGA.1  GAGTACTGTGATGC.1  GAGTCAACGAGACG.1 \n##                 0                 1                 3                 5 \n##  GAGTCAACGCAGAG.1  GAGTCAACGTGCAT.1  GAGTCAACTCGTGA.1  GAGTCTGAACCCTC.1 \n##                 8                 0                 0                 0 \n##  GAGTCTGAAGAAGT.1  GAGTCTGACCTTGC.1  GAGTGACTAAGCAA.1  GAGTGACTGCTGTA.1 \n##                 8                 6                 0                 1 \n##  GAGTGACTGGACGA.1  GAGTGACTTCGATG.1  GAGTGACTTCTCCG.1  GAGTGACTTGTCAG.1 \n##                 0                 2                 1                 9 \n##  GAGTGGGAAGCACT.1  GAGTGGGACATGAC.1  GAGTGGGATCTCGC.1  GAGTGGGATTGTGG.1 \n##                 0                 1                 1                 0 \n##  GAGTGTTGCTCAAG.1  GAGTGTTGGACAAA.1  GAGTGTTGGTCGAT.1  GAGTGTTGTTCCAT.1 \n##                 6                 0                 3                 0 \n##  GAGTTGTGACTTTC.1  GAGTTGTGCTTCTA.1  GAGTTGTGGAAAGT.1  GAGTTGTGGTCTAG.1 \n##                 3                 1                 1                 1 \n##  GAGTTGTGTGGAAA.1  GAGTTGTGTGGCAT.1  GATAAGGACCTCCA.1  GATAAGGACTGACA.1 \n##                 1                10                 4                 0 \n##  GATAAGGAGTGTAC.1  GATAAGGATTTGGG.1  GATAATACGGTTTG.1  GATAATACTGAAGA.1 \n##                 1                 1                 2                 1 \n##  GATAATACTGTAGC.1  GATACTCTAACCTG.1  GATACTCTAATCGC.1  GATACTCTCCACCT.1 \n##                 5                 0                 4                 0 \n##  GATACTCTCGGTAT.1  GATACTCTGCAAGG.1  GATAGAGAAAACGA.1  GATAGAGAAACCGT.1 \n##                 2                 1                 0                 7 \n##  GATAGAGACCTTAT.1  GATAGAGACTGTTT.1  GATAGAGATGAGCT.1  GATAGAGATTTCAC.1 \n##                 0                 1                11                 3 \n##  GATAGCACAAGCAA.1  GATAGCACACACTG.1  GATAGCACGAGATA.1  GATAGCACGGAGTG.1 \n##                 0                 0                 2                 0 \n##  GATAGCACTTGGTG.1  GATATAACAAAGCA.1  GATATAACATTTCC.1  GATATAACCTTAGG.1 \n##                 0                 0                 0                 1 \n##  GATATAACGAACTC.1  GATATAACGGTGGA.1  GATATAACGTTCGA.1  GATATATGAACTGC.1 \n##                 0                 0                 0                 9 \n##  GATATATGAATGCC.1  GATATATGATGCTG.1  GATATATGCTGGAT.1  GATATATGGTGTTG.1 \n##                 2                 2                 0                 7 \n##  GATATCCTACCAAC.1  GATATCCTAGGAGC.1  GATATCCTGTAAAG.1  GATATCCTGTGTTG.1 \n##                 7                 6                 8                 0 \n##  GATATCCTTGGGAG.1  GATATTGAAGCGTT.1  GATATTGAAGTGTC.1  GATATTGATTGGTG.1 \n##                 6                 5                 0                 3 \n##  GATCATCTCTGATG.1  GATCCCTGACTCTT.1  GATCCCTGCTACGA.1  GATCCCTGGTAGGG.1 \n##                10                 0                 2                 4 \n##  GATCCGCTAGGTTC.1  GATCCGCTTCTCGC.1  GATCGAACACTTTC.1  GATCGAACATGCCA.1 \n##                 2                 5                 4                 1 \n##  GATCGAACATGTGC.1 GATCGAACCATACG.11  GATCGAACCGGGAA.1  GATCGAACGGTGTT.1 \n##                 0                 2                 0                 2 \n##  GATCGAACTTTGTC.1  GATCGATGAAAGTG.1  GATCGATGAGATCC.1  GATCGATGCGTTAG.1 \n##                 4                 7                 0                 0 \n##  GATCGATGGAAAGT.1  GATCGTGAATGTGC.1  GATCGTGACAGGAG.1  GATCGTGACCACAA.1 \n##                 1                 2                 0                 4 \n##  GATCGTGACGGAGA.1  GATCGTGACTACCC.1  GATCGTGAGAACCT.1  GATCGTGATCCGTC.1 \n##                 1                10                 1                 5 \n##  GATCGTGATGAGCT.1  GATCTACTCGCTAA.1  GATCTACTCTCGAA.1  GATCTTACACACCA.1 \n##                 6                 0                 1                 1 \n##  GATCTTACAGAATG.1  GATCTTACCCAACA.1  GATCTTACGGTCTA.1  GATCTTACTCCCAC.1 \n##                10                 7                 4                11 \n##  GATCTTTGAGTCGT.1  GATCTTTGCGACAT.1  GATCTTTGGCTGAT.1  GATCTTTGTCAGTG.1 \n##                 1                 1                 6                 1 \n##  GATGACACACGTTG.1  GATGACACCATACG.1  GATGACACTTCTCA.1  GATGCAACATCGGT.1 \n##                 0                 1                 0                 6 \n##  GATGCAACGAATAG.1  GATGCAACTTGGTG.1  GATGCATGAGCAAA.1  GATGCATGCACTAG.1 \n##                 9                 0                 2                 0 \n##  GATGCATGCCTTTA.1  GATGCATGCGCCTT.1  GATGCATGGAGGCA.1  GATGCATGGGAACG.1 \n##                 9                 0                 0                 1 \n##  GATGCATGTTTGGG.1  GATGCCCTACGTAC.1  GATGCCCTCGTAGT.1  GATGCCCTGACAGG.1 \n##                 2                 0                 2                 0 \n##  GATGCCCTTCTTAC.1  GATGCCCTTGAGAA.1  GATTACCTAAAAGC.1  GATTACCTAAACAG.1 \n##                 1                 4                11                 0 \n##  GATTACCTAACAGA.1  GATTACCTAACGAA.1  GATTACCTAGGGTG.1  GATTACCTCATGAC.1 \n##                11                 1                 5                 5 \n##  GATTACCTCGGGAA.1  GATTACCTCTGTGA.1  GATTACCTGGATTC.1  GATTACCTGGGATG.1 \n##                 3                 0                11                 6 \n##  GATTACCTTACAGC.1  GATTACCTTCCTAT.1  GATTACCTTCTAGG.1  GATTACCTTCTATC.1 \n##                 1                 8                 1                 4 \n##  GATTACCTTGTCGA.1  GATTCGGAACGGGA.1  GATTCGGACGATAC.1  GATTCGGAGGCAAG.1 \n##                 0                 5                 3                 1 \n##  GATTCGGATCACGA.1  GATTCGGATGTCCC.1  GATTCTACACTCTT.1  GATTCTACGAGGCA.1 \n##                 0                 4                 7                 0 \n##  GATTCTACGTCACA.1  GATTCTACTTAGGC.1  GATTCTACTTCTAC.1  GATTCTTGAGTGTC.1 \n##                 1                 3                 0                 1 \n##  GATTCTTGCAACTG.1  GATTCTTGGTTAGC.1  GATTCTTGTCGCAA.1  GATTCTTGTCTATC.1 \n##                 6                 1                 0                 1 \n##  GATTCTTGTCTTTG.1  GATTCTTGTTGTCT.1  GATTCTTGTTTCGT.1  GATTGGACATGCTG.1 \n##                 9                 0                 3                 0 \n## GATTGGACTCACGA.11  GATTGGACTGTTTC.1  GATTGGACTTACTC.1  GATTGGTGACCTTT.1 \n##                 9                 0                 7                 3 \n##  GATTGGTGAGGAGC.1  GATTGGTGCTGACA.1  GATTGGTGTATCTC.1  GATTGGTGTATGCG.1 \n##                 1                 4                 9                 2 \n##  GATTGGTGTGGAAA.1  GATTGGTGTGGTGT.1  GATTTAGAACCAAC.1  GATTTAGAATGACC.1 \n##                 2                10                 1                 6 \n##  GATTTAGAATTCCT.1  GATTTAGAGAATAG.1  GATTTAGAGTAGCT.1  GATTTAGATTTCAC.1 \n##                 1                 1                 0                 0 \n##  GATTTGCTACCCTC.1  GATTTGCTACGCTA.1  GATTTGCTACGTAC.1  GATTTGCTCTTACT.1 \n##                10                 1                 1                 1 \n##  GATTTGCTGTACCA.1  GCAAACTGAAGATG.1  GCAAACTGACACCA.1  GCAAACTGAGTGCT.1 \n##                 0                 1                 2                 0 \n##  GCAAACTGCTCAGA.1  GCAAACTGGTGCTA.1  GCAACCCTAGGAGC.1  GCAACCCTCTGTGA.1 \n##                 5                 0                11                 7 \n##  GCAACCCTGTCACA.1  GCAACCCTTTACTC.1  GCAACTGAAAGTAG.1  GCAACTGAACCTAG.1 \n##                 7                 1                 7                 4 \n##  GCAACTGACACACA.1  GCAACTGACGATAC.1 GCAACTGATCAGGT.11  GCAACTGATTCGGA.1 \n##                 5                 2                 0                 4 \n##  GCAAGACTAACCGT.1  GCAAGACTCGGAGA.1  GCAAGACTGAACCT.1  GCAAGACTGACGAG.1 \n##                 3                 3                 0                 2 \n##  GCAAGACTTGCCTC.1  GCAAGACTTTACTC.1  GCAAGACTTTATCC.1  GCAATCGATGCTCC.1 \n##                 1                 5                 8                 1 \n##  GCAATCGATGTCCC.1  GCAATTCTACCCAA.1  GCAATTCTACCCTC.1  GCAATTCTACTACG.1 \n##                 1                 1                 0                 2 \n##  GCAATTCTCTAGCA.1  GCAATTCTTGGGAG.1  GCACAAACACTGTG.1  GCACAAACCCATGA.1 \n##                 4                 3                 7                 0 \n##  GCACAAACGGTAGG.1  GCACAATGAATCGC.1  GCACAATGACTGTG.1  GCACAATGAGCTCA.1 \n##                 5                 1                 1                 8 \n##  GCACAATGATGTCG.1  GCACAATGCAGTCA.1  GCACAATGCTTCGC.1  GCACAATGGTAGCT.1 \n##                 2                 5                 6                 0 \n##  GCACAATGTCCCAC.1  GCACACCTACGCTA.1  GCACACCTCCATAG.1  GCACCACTAAGGTA.1 \n##                 0                12                 0                 7 \n##  GCACCACTCTCTCG.1  GCACCTACTCAAGC.1  GCACCTACTGGTTG.1  GCACCTTGAGTGCT.1 \n##                 1                 0                 3                 0 \n##  GCACCTTGATGCCA.1  GCACCTTGGGGAGT.1  GCACGGACATGACC.1  GCACGGACCGTGAT.1 \n##                 7                 9                 0                 0 \n##  GCACGGACCTCTCG.1  GCACGGACCTTGCC.1  GCACGGACGGTGTT.1  GCACGGTGACTGTG.1 \n##                 2                 3                 0                 3 \n##  GCACGGTGCCTACC.1  GCACGGTGGACTAC.1  GCACGGTGGGCAAG.1  GCACGGTGGGGATG.1 \n##                 1                 1                 1                 0 \n##  GCACGTCTAATCGC.1  GCACGTCTACTGGT.1  GCACGTCTCCTCCA.1  GCACGTCTCTGGTA.1 \n##                 1                 1                 1                 4 \n##  GCACGTCTCTTACT.1  GCACGTCTGAACCT.1  GCACGTCTGGTCTA.1  GCACGTCTGTTACG.1 \n##                 1                 2                 0                 0 \n##  GCACGTCTTCGTTT.1  GCACGTCTTGTTCT.1  GCACTAGAAGTGCT.1  GCACTAGAATTTCC.1 \n##                 0                 0                 0                 2 \n##  GCACTAGACGAACT.1  GCACTAGAGCGTAT.1  GCACTGCTACGGTT.1  GCACTGCTATCAGC.1 \n##                 1                 2                 7                 4 \n##  GCACTGCTGAAACA.1  GCACTGCTGCCATA.1  GCACTGCTGGTATC.1  GCACTGCTGGTGAG.1 \n##                 2                10                 4                 1 \n##  GCACTGCTTCCGAA.1  GCACTGCTTGCTCC.1 GCAGATACAAGCCT.11  GCAGATACAGGTCT.1 \n##                 2                 1                 1                 4 \n##  GCAGATACCCCAAA.1  GCAGATACGGAAAT.1  GCAGATACGGTATC.1  GCAGATACTTCTGT.1 \n##                 1                 6                 2                 4 \n##  GCAGCCGAAGCCAT.1  GCAGCCGACTCCAC.1  GCAGCCGACTCTAT.1  GCAGCCGATCGCAA.1 \n##                 1                 0                 2                 8 \n##  GCAGCGTGAACGGG.1  GCAGCGTGCTCTCG.1  GCAGCGTGTCCCGT.1  GCAGCGTGTGAGGG.1 \n##                 0                 4                 0                 0 \n##  GCAGCGTGTGTCTT.1  GCAGGCACACTCTT.1  GCAGGCACCTGGAT.1  GCAGGGCTACGTTG.1 \n##                 1                 0                 0                 6 \n##  GCAGGGCTCGTTGA.1 GCAGGGCTGAAAGT.11  GCAGGGCTGCCAAT.1  GCAGGGCTTGAGCT.1 \n##                 0                 5                 1                 4 \n##  GCAGGGCTTGCAAC.1  GCAGTCCTAACGAA.1  GCAGTCCTACTGTG.1  GCAGTCCTCAACCA.1 \n##                 0                 7                 1                 1 \n##  GCAGTCCTCTCCAC.1  GCAGTCCTTGACAC.1  GCAGTTGAATGCTG.1  GCAGTTGAGCGAAG.1 \n##                 0                 2                 9                 0 \n##  GCAGTTGATATCTC.1  GCAGTTGATTCTTG.1  GCATCAGAAAGTGA.1  GCATCAGACCTCGT.1 \n##                 4                10                 1                 1 \n##  GCATCAGAGTTCTT.1  GCATGATGAGGGTG.1  GCATGATGGTCAAC.1  GCATGATGTCAAGC.1 \n##                 0                 8                 1                 0 \n##  GCATGTGACAAAGA.1  GCATGTGACTAAGC.1  GCATGTGAGAGGTG.1  GCATGTGATTCAGG.1 \n##                 6                 6                 1                 0 \n##  GCATTGGAAGTACC.1  GCATTGGAGATAGA.1  GCATTGGAGGTAAA.1  GCATTGGATTCTGT.1 \n##                 0                 4                 3                 1 \n##  GCCAAAACAGGTTC.1  GCCAAAACATGCTG.1  GCCAAATGGAAACA.1  GCCAAATGGCTATG.1 \n##                 7                 4                 0                 0 \n##  GCCAAATGGTACAC.1  GCCAACCTGAGGAC.1  GCCAACCTGCATAC.1  GCCAACCTGGACTT.1 \n##                 0                 1                 1                 6 \n##  GCCAACCTGGAGCA.1  GCCAACCTGTGCAT.1  GCCAACCTGTTGTG.1 GCCACGGACGAATC.11 \n##                 1                 0                 5                 6 \n##  GCCACGGACGCCTT.1  GCCACGGAGACGAG.1  GCCACGGATGCTTT.1  GCCACGGATTTGTC.1 \n##                 2                 0                 2                 3 \n##  GCCACTACAAACGA.1  GCCACTACGAATCC.1  GCCACTACGCCTTC.1  GCCACTACGGTAGG.1 \n##                 9                 0                 0                 1 \n##  GCCACTACGTCGTA.1  GCCACTACGTTGTG.1  GCCACTACTCCAGA.1  GCCACTACTGCATG.1 \n##                 1                 1                 0                 6 \n##  GCCACTACTGGTAC.1 GCCACTACTTCGCC.11  GCCATCACCATGGT.1  GCCATCACCCCGTT.1 \n##                 1                 0                 3                 6 \n##  GCCATCACCTCTAT.1  GCCATCACGATACC.1  GCCATCACGGATCT.1  GCCATCACGGTTTG.1 \n##                 1                 1                 2                 0 \n##  GCCATCACTAGCCA.1 GCCATCACTTCTCA.11  GCCATGCTAACGGG.1  GCCATGCTACTACG.1 \n##                10                 3                 0                 3 \n##  GCCATGCTCCCTCA.1  GCCATGCTCTCCAC.1  GCCATGCTGGGCAA.1  GCCCAACTCAACTG.1 \n##                 1                 9                 8                 4 \n##  GCCCAACTCCGCTT.1  GCCCAACTGCATAC.1  GCCCAACTTTCGGA.1  GCCCAGGAAGCCTA.1 \n##                 0                 5                 1                 0 \n##  GCCCAGGACATCAG.1  GCCCAGGACATTCT.1  GCCCAGGACCACAA.1  GCCCAGGAGAGATA.1 \n##                 6                10                 0                 0 \n##  GCCCATACACAGCT.1  GCCCATACGAACCT.1  GCCCATACGAGGAC.1  GCCCATACGTCAAC.1 \n##                 7                 6                 3                 2 \n##  GCCCATACTAAGCC.1  GCCCATACTCTACT.1  GCCGACGACGAATC.1  GCCGACGATGCATG.1 \n##                 6                 0                 4                 6 \n##  GCCGACGATTCTCA.1  GCCGAGTGATCTCT.1  GCCGAGTGTCTATC.1  GCCGAGTGTGGTTG.1 \n##                 0                 1                 4                 1 \n##  GCCGGAACGCTTAG.1  GCCGGAACGTTTCT.1  GCCGGAACTCGCTC.1  GCCGGAACTGCGTA.1 \n##                 3                 0                 0                 5 \n##  GCCGTACTACGGTT.1  GCCGTACTAGCTAC.1  GCCGTACTGCCATA.1  GCCTACACCACCAA.1 \n##                 9                 0                11                 0 \n## GCCTACACCTGCAA.11  GCCTACACTGCTCC.1  GCCTAGCTAGGAGC.1  GCCTAGCTGGAAGC.1 \n##                10                 0                 7                 1 \n##  GCCTAGCTGGTAGG.1  GCCTAGCTGTTCTT.1  GCCTAGCTTTCTGT.1  GCCTCAACCTGAAC.1 \n##                 1                 0                 0                 0 \n##  GCCTCAACTAGAAG.1  GCCTCATGATGCTG.1  GCCTCATGCAGTTG.1  GCCTCATGGAAACA.1 \n##                 0                 4                 1                 3 \n##  GCCTCATGGAATCC.1  GCCTCATGGATACC.1  GCCTCATGGTGAGG.1  GCCTGACTCCAATG.1 \n##                 9                 2                 2                 6 \n##  GCCTGACTCTCTTA.1  GCCTGACTGACTAC.1  GCCTGACTGAGATA.1  GCCTGACTGCTAAC.1 \n##                 0                 0                 2                 0 \n##  GCCTGACTTATGCG.1  GCCTGACTTGATGC.1  GCCTGACTTGGATC.1  GCGAAGGAAGTGCT.1 \n##                 3                 6                 5                12 \n##  GCGAAGGAATTCCT.1  GCGACTCTCTGTAG.1  GCGACTCTCTTCTA.1  GCGACTCTGCGTTA.1 \n##                 0                 0                 0                 1 \n##  GCGACTCTTTTCTG.1  GCGAGAGAAGATGA.1  GCGAGAGAGCAAGG.1  GCGAGAGATAAGGA.1 \n##                 1                 2                 0                 4 \n##  GCGAGCACACCAAC.1  GCGAGCACGAGCTT.1  GCGAGCACTCCTTA.1  GCGAGCACTGAACC.1 \n##                 3                 4                 2                 9 \n##  GCGATATGCGACTA.1  GCGATATGGAGGGT.1  GCGATATGTACTCT.1 GCGATATGTGACCA.11 \n##                 0                 4                 0                 0 \n##  GCGATATGTTGCGA.1 GCGCACGAACACCA.11  GCGCACGAAGTACC.1  GCGCACGACCACAA.1 \n##                 4                 0                 2                 0 \n##  GCGCACGAGCTCCT.1  GCGCACGAGGCGAA.1  GCGCACGATATCGG.1  GCGCATCTCAGAAA.1 \n##                 0                 5                 4                 0 \n##  GCGCATCTCCCTCA.1  GCGCATCTGGAGCA.1  GCGCGAACACCCAA.1  GCGCGAACCCTTAT.1 \n##                 0                 4                 6                 1 \n##  GCGCGATGAAGAAC.1  GCGCGATGAAGATG.1  GCGCGATGACCCTC.1  GCGCGATGCCTAAG.1 \n##                10                 1                 0                 0 \n##  GCGCGATGGCAAGG.1  GCGCGATGTCGTGA.1  GCGGACTGAAAGCA.1  GCGGACTGCTTCTA.1 \n##                 4                 1                 0                 0 \n##  GCGGACTGGACAAA.1  GCGGACTGGCAGTT.1  GCGGACTGGCTACA.1  GCGGACTGGTAGGG.1 \n##                 3                10                 0                 8 \n##  GCGGACTGTCTTCA.1  GCGGACTGTTCTGT.1  GCGGAGCTACCTGA.1  GCGGAGCTAGATCC.1 \n##                 0                 4                 3                 1 \n##  GCGGAGCTCGCTAA.1  GCGGAGCTCTAGCA.1  GCGGAGCTGCCCTT.1  GCGGAGCTTCTTTG.1 \n##                 2                 1                 1                 2 \n##  GCGGAGCTTGAGAA.1  GCGGAGCTTGCAAC.1  GCGGCAACGCTGTA.1  GCGGCAACTCTTAC.1 \n##                 0                 0                 8                 4 \n##  GCGGGACTCAGAGG.1  GCGGGACTTTCAGG.1  GCGTAAACAAAGTG.1  GCGTAAACCACTGA.1 \n##                 3                 3                 1                 4 \n##  GCGTAAACCAGCTA.1  GCGTAAACGTTAGC.1  GCGTAATGCTGCTC.1  GCGTAATGGATAGA.1 \n##                 4                 0                10                 1 \n##  GCGTAATGGGTAAA.1  GCGTAATGTGCATG.1  GCGTACCTACGCTA.1  GCGTACCTCGTAGT.1 \n##                 2                 0                 6                 5 \n##  GCGTACCTGTTGCA.1  GCGTATGACTCTAT.1  GCGTATGACTTCCG.1  GCGTATGAGTTGGT.1 \n##                 3                 0                 5                 2 \n##  GCGTATGATCTCGC.1  GCGTATGATTCATC.1  GCTACAGAAAGCAA.1  GCTACAGAACACAC.1 \n##                 2                 0                 3                 7 \n##  GCTACAGACATTCT.1  GCTACAGACTACCC.1  GCTACAGACTAGTG.1  GCTACAGACTGAAC.1 \n##                 0                 2                 2                 5 \n##  GCTACAGACTTGCC.1  GCTACAGATTCTAC.1  GCTACCTGGAATAG.1  GCTACCTGGGAGTG.1 \n##                 0                 0                 1                 2 \n##  GCTACCTGTGGTCA.1  GCTACCTGTGGTTG.1  GCTACGCTCGTTAG.1  GCTACGCTCTCCCA.1 \n##                 1                 2                 0                 1 \n##  GCTACGCTCTTCGC.1  GCTACGCTGAACTC.1  GCTACGCTGGTACT.1  GCTACGCTTCGACA.1 \n##                 5                 0                 0                 2 \n##  GCTACGCTTGCACA.1  GCTAGAACCGCTAA.1  GCTAGAACTTTCAC.1  GCTAGATGAAGGTA.1 \n##                 0                 0                 1                 6 \n##  GCTAGATGCGATAC.1  GCTAGATGTCCCGT.1  GCTAGATGTCTTTG.1  GCTAGATGTGTTCT.1 \n##                 1                 3                 1                 2 \n##  GCTAGATGTTTCTG.1  GCTATACTCAGTCA.1  GCTATACTTGACTG.1  GCTCAAGAAGGTCT.1 \n##                 5                 0                 1                 1 \n##  GCTCAAGAATGGTC.1  GCTCAAGACGTACA.1  GCTCAAGAGGAGCA.1  GCTCAAGAGGGACA.1 \n##                 5                 0                 1                 3 \n##  GCTCACTGAAAAGC.1 GCTCACTGCTCATT.11  GCTCACTGCTCGCT.1  GCTCACTGGGTTCA.1 \n##                 0                 9                 0                 0 \n##  GCTCAGCTAACCTG.1  GCTCAGCTATGTCG.1  GCTCAGCTCGCCTT.1  GCTCAGCTTGCTTT.1 \n##                 3                 0                 4                 6 \n##  GCTCCATGAGCAAA.1  GCTCCATGAGCATC.1  GCTCCATGAGCCTA.1  GCTCCATGCTCATT.1 \n##                 5                 5                 6                 3 \n##  GCTCCATGCTGTAG.1  GCTCCATGCTTGTT.1  GCTCCATGGGCAAG.1  GCTCCATGGTCAAC.1 \n##                 5                 4                 4                 5 \n##  GCTCCATGTCAGAC.1  GCTCCATGTCCCAC.1  GCTCGACTCCTAAG.1  GCTCGACTCCTCGT.1 \n##                 1                 4                 5                 0 \n##  GCTCGACTGCATCA.1  GCTCGACTGTCACA.1  GCTCGACTGTTGTG.1  GCTCGACTTTGGTG.1 \n##                 1                 1                 1                 5 \n##  GCTGATGAAGCCAT.1  GCTGATGACTCGCT.1  GCTGATGATGGTTG.1  GCTTAACTAAGTGA.1 \n##                 3                 7                 1                 0 \n##  GCTTAACTCACAAC.1  GCTTAACTCTGTAG.1  GCTTAACTGCATCA.1  GCTTAACTTCTCAT.1 \n##                 1                 4                 0                 5 \n##  GCTTGAGAAAGATG.1  GCTTGAGAAGACTC.1  GCTTGAGAAGTACC.1  GCTTGAGAAGTCTG.1 \n##                 0                 4                 6                 5 \n##  GCTTGAGAATGCTG.1  GCTTGAGAGAGGAC.1  GCTTGAGAGTCGTA.1  GCTTGAGATTCGGA.1 \n##                 2                 2                 1                 6 \n##  GGAACACTCAGATC.1  GGAACACTCCAGTA.1  GGAACACTGGATCT.1  GGAACACTTCGATG.1 \n##                 0                 4                 5                 0 \n##  GGAACACTTCGTAG.1 GGAACACTTTCGGA.11  GGAACTACCCTTAT.1  GGAACTACCTTGCC.1 \n##                 1                 1                 4                 0 \n##  GGAACTACGTTCAG.1  GGAACTACTCCTCG.1  GGAACTTGACACAC.1  GGAACTTGACTGTG.1 \n##                 0                 0                 2                 1 \n##  GGAACTTGCACTGA.1  GGAACTTGCGAGAG.1  GGAACTTGCGGGAA.1  GGAACTTGCTACTT.1 \n##                 0                 0                 1                 0 \n##  GGAACTTGGGGCAA.1  GGAACTTGTCTGGA.1  GGAAGGACAGTCTG.1  GGAAGGACCCATGA.1 \n##                 1                 1                 9                 3 \n##  GGAAGGTGAGCCAT.1  GGAAGGTGAGTAGA.1  GGAAGGTGCAGGAG.1  GGAAGGTGCCCTCA.1 \n##                 1                 2                 0                 0 \n##  GGAATCTGAGAACA.1  GGAATCTGCTGAAC.1  GGAATCTGGGGACA.1  GGAATGCTCTTGAG.1 \n##                 2                 3                 5                13 \n##  GGAATGCTGTAAAG.1  GGAATGCTTGGAGG.1  GGAATGCTTGTTTC.1  GGAATGCTTTCATC.1 \n##                 1                 1                 0                 1 \n##  GGAATGCTTTGTGG.1  GGACAACTAGTGTC.1  GGACAACTCCGTAA.1  GGACAACTGAGAGC.1 \n##                 0                 2                 0                 1 \n##  GGACAACTGCTCCT.1  GGACAGGAACCTTT.1  GGACAGGAATTCCT.1  GGACAGGACTTAGG.1 \n##                 0                 5                 1                 0 \n##  GGACAGGAGATGAA.1  GGACAGGATTGTGG.1  GGACATTGAAAGCA.1  GGACATTGATGCCA.1 \n##                 9                 0                11                 4 \n##  GGACATTGCTTGCC.1  GGACATTGCTTGGA.1  GGACATTGTTCTCA.1  GGACCCGACTGTAG.1 \n##                 3                 0                 8                 5 \n##  GGACCCGAGCGAAG.1  GGACCCGAGTACGT.1  GGACCCGATTATCC.1  GGACCGTGCATTCT.1 \n##                12                 2                 2                11 \n##  GGACCGTGTCCGTC.1  GGACCTCTACCAGT.1  GGACCTCTACGCAT.1  GGACCTCTACTACG.1 \n##                 0                 0                 0                 0 \n##  GGACCTCTAGCTAC.1  GGACCTCTCGAACT.1  GGACCTCTGAGGGT.1  GGACCTCTTCCAGA.1 \n##                 1                 0                 0                 1 \n##  GGACCTCTTGCACA.1  GGACGAGAAAGGCG.1  GGACGAGAATGGTC.1  GGACGAGACGAACT.1 \n##                 6                 1                 3                 1 \n##  GGACGAGAGAGGGT.1  GGACGAGAGCCAAT.1  GGACGAGATGTTTC.1  GGACGAGATTGGTG.1 \n##                 0                 0                 1                 0 \n##  GGACGCACACGGGA.1  GGACGCACATGCTG.1  GGACGCACCGCCTT.1  GGACGCACTTAGGC.1 \n##                 4                 5                 4                 8 \n##  GGACGCTGAATCGC.1  GGACGCTGACTCTT.1  GGACGCTGCCAAGT.1  GGACGCTGGAATGA.1 \n##                 4                 5                 3                 2 \n##  GGACGCTGTCGTTT.1  GGACTATGATCGTG.1  GGACTATGCACCAA.1  GGACTATGCTGATG.1 \n##                 0                 3                12                 0 \n##  GGACTATGGACAGG.1  GGACTATGGGAACG.1 GGACTATGGGAGGT.11  GGACTATGGGTCTA.1 \n##                 0                12                 1                 2 \n##  GGACTATGTACTGG.1  GGACTATGTGAGGG.1  GGAGACGAAACGTC.1  GGAGACGAACGTGT.1 \n##                 2                 1                 2                 0 \n##  GGAGACGAAGATGA.1  GGAGACGAAGGCGA.1  GGAGACGAAGTCTG.1  GGAGACGACTAGCA.1 \n##                 5                 1                 0                 7 \n##  GGAGACGACTCCCA.1  GGAGACGATACTCT.1  GGAGACGATTCCGC.1  GGAGAGACATGCTG.1 \n##                 0                 7                 0                 1 \n##  GGAGAGACCTGTCC.1  GGAGAGACGCTGTA.1 GGAGAGACTAGACC.11  GGAGCAGAAAGGTA.1 \n##                 1                 1                 6                11 \n##  GGAGCAGAACGGGA.1  GGAGCAGAGAACTC.1  GGAGCAGAGTGCAT.1  GGAGCAGATGCTAG.1 \n##                 3                 0                 4                 2 \n##  GGAGCAGATGCTCC.1  GGAGCAGATTATCC.1  GGAGCCACAAAACG.1  GGAGCCACCATCAG.1 \n##                 6                 2                 0                 1 \n##  GGAGCCACGCGGAA.1  GGAGCCACGTCATG.1  GGAGGATGGGGAGT.1  GGAGGATGGTGTTG.1 \n##                 1                 0                 2                 0 \n##  GGAGGATGTCATTC.1  GGAGGATGTGTAGC.1  GGAGGCCTACTACG.1  GGAGGCCTAGTACC.1 \n##                 5                 2                13                 2 \n##  GGAGGCCTCATCAG.1  GGAGGCCTCCTCAC.1  GGAGGCCTGCATAC.1  GGAGGCCTTCGACA.1 \n##                 3                 1                 0                 0 \n##  GGAGGCCTTTAGGC.1  GGAGGCCTTTGCGA.1  GGAGGCCTTTTACC.1  GGAGGTGAATGCCA.1 \n##                 0                 4                 1                 1 \n##  GGAGGTGACTTCTA.1  GGAGGTGAGCGAGA.1  GGAGGTGAGTGTTG.1  GGAGGTGAGTTACG.1 \n##                10                 0                 0                 2 \n##  GGAGTTACAAACGA.1  GGAGTTACACTTTC.1  GGAGTTACAGTGCT.1  GGAGTTACATTCTC.1 \n##                 0                 0                 1                 2 \n##  GGAGTTACCAATCG.1  GGAGTTACCACTGA.1  GGAGTTACGGATTC.1  GGAGTTACGTTCTT.1 \n##                 0                 4                 1                 5 \n##  GGAGTTACGTTGCA.1  GGAGTTACTATCGG.1  GGAGTTACTCTACT.1  GGAGTTTGACTCAG.1 \n##                11                 9                 9                 2 \n##  GGAGTTTGTGGAAA.1  GGAGTTTGTTCGGA.1  GGATACTGACCGAT.1  GGATACTGAGAAGT.1 \n##                 2                 1                 2                 0 \n##  GGATACTGAGCCAT.1  GGATACTGCCCACT.1  GGATACTGCCGATA.1  GGATACTGGTCGTA.1 \n##                 5                 3                 6                 0 \n##  GGATAGCTCGAGAG.1  GGATAGCTGCAGTT.1  GGATAGCTGCCCTT.1  GGATAGCTGTCTGA.1 \n##                 0                 2                 5                 1 \n##  GGATGTACCCAATG.1  GGATGTACTCGACA.1  GGATGTTGAGATGA.1  GGATGTTGAGCCAT.1 \n##                 0                 0                 2                 2 \n##  GGATGTTGATCTCT.1  GGATGTTGGGTGAG.1  GGATGTTGGTATCG.1  GGATGTTGTCAGAC.1 \n##                 5                 2                 0                 1 \n##  GGATGTTGTTTCGT.1  GGATTGTGACGGTT.1  GGATTGTGACTCAG.1  GGATTGTGACTGGT.1 \n##                 3                 4                 2                 9 \n## GGATTGTGATCGGT.11  GGATTGTGCTTAGG.1  GGATTGTGTCAAGC.1  GGATTGTGTGCAGT.1 \n##                 2                 5                 4                 1 \n##  GGATTGTGTGTGGT.1  GGATTTCTTCCAAG.1  GGATTTCTTCGCCT.1  GGCAAGGAACGCAT.1 \n##                 0                 2                 5                 6 \n##  GGCAAGGATCTATC.1  GGCAATACTCCCGT.1  GGCAATACTGCTTT.1  GGCACGTGAGCGTT.1 \n##                10                 1                 1                 6 \n##  GGCACGTGCATTGG.1  GGCACGTGTATGGC.1  GGCACGTGTGGTCA.1  GGCACTCTAAGAAC.1 \n##                 7                 1                 1                 3 \n##  GGCACTCTCGTAAC.1  GGCACTCTCTAGTG.1  GGCACTCTTAGCGT.1  GGCACTCTTGCACA.1 \n##                 0                 6                 2                 0 \n##  GGCACTCTTGGAGG.1  GGCATATGAACGTC.1  GGCATATGATCGTG.1  GGCATATGCCTAAG.1 \n##                 2                 1                 6                 3 \n##  GGCATATGTCTATC.1  GGCATATGTCTCGC.1  GGCCACGAATCTCT.1  GGCCACGACCGATA.1 \n##                 7                 2                 0                 1 \n##  GGCCACGAGTCCTC.1  GGCCACGAGTTGAC.1  GGCCAGACAAACAG.1  GGCCAGACATGGTC.1 \n##                 0                 1                 0                 4 \n##  GGCCAGACCATTTC.1  GGCCAGACTAGTCG.1  GGCCAGACTTCATC.1  GGCCCAGAACCCTC.1 \n##                 4                 0                11                 6 \n##  GGCCCAGACGACTA.1  GGCCCAGACGTGTA.1  GGCCCAGAGGGCAA.1  GGCCCAGAGTAGGG.1 \n##                 4                 6                 2                 2 \n##  GGCCCAGATATTCC.1  GGCCGAACCCCTAC.1  GGCCGAACTGTCCC.1  GGCCGATGGCGTTA.1 \n##                 1                 0                 1                 8 \n##  GGCCGATGGTAGGG.1  GGCGACACAAACAG.1  GGCGACACTTCCGC.1  GGCGACTGAGCACT.1 \n##                10                 0                 1                 1 \n##  GGCGACTGCAGAAA.1  GGCGACTGTGACAC.1  GGCGCATGACTCTT.1  GGCGCATGCCACAA.1 \n##                 0                 3                 0                 1 \n##  GGCGCATGCCCGTT.1  GGCGCATGCCTAAG.1  GGCGCATGCGCCTT.1  GGCGCATGCTCAGA.1 \n##                 0                 1                 2                 3 \n##  GGCGCATGGAACTC.1  GGCGCATGGAGCTT.1  GGCGCATGGCGTTA.1  GGCGCATGTCAGTG.1 \n##                 0                 3                 1                 0 \n##  GGCGCATGTCTATC.1  GGCGCATGTTAGGC.1  GGCGGACTACTCAG.1  GGCGGACTAGCCTA.1 \n##                 1                 1                 4                 9 \n##  GGCGGACTCGAATC.1  GGCGGACTGTATCG.1  GGCGGACTTCGACA.1  GGCGGACTTCGCTC.1 \n##                 1                 1                 0                 1 \n##  GGCTAAACATCTCT.1  GGCTAAACCGAACT.1  GGCTAAACCTATGG.1  GGCTAAACTCGCCT.1 \n##                 0                 0                 0                 0 \n##  GGCTAAACTGGAAA.1  GGCTAATGAGCGTT.1  GGCTAATGCTCGAA.1  GGCTAATGGAGATA.1 \n##                 0                 8                 0                 6 \n##  GGCTAATGGCGTTA.1  GGCTAATGTCACGA.1  GGCTACCTAACAGA.1  GGCTACCTAGAATG.1 \n##                 9                 2                 3                 0 \n##  GGCTACCTGGTTAC.1  GGCTACCTTCCGAA.1  GGCTCACTACTTTC.1  GGCTCACTTCCAAG.1 \n##                 5                 0                 1                 5 \n##  GGGAACGAGGTTTG.1  GGGAAGACATCGTG.1  GGGAAGACCCGCTT.1  GGGAAGACCCTACC.1 \n##                 0                 0                 4                 0 \n##  GGGAAGACCTGAGT.1 GGGAAGACGAATCC.11  GGGAAGACGAATGA.1  GGGAAGACGGTTCA.1 \n##                 6                 0                 0                 0 \n##  GGGAAGACTCAGAC.1  GGGAAGTGAGAGTA.1  GGGAAGTGTATTCC.1  GGGACCACATACCG.1 \n##                 5                 3                 1                 7 \n##  GGGACCACCCTCGT.1  GGGACCACCCTTGC.1 GGGACCACCTTCGC.11  GGGACCACTTCCAT.1 \n##                 4                 5                 2                 5 \n##  GGGACCTGGAGGCA.1  GGGACCTGGCCATA.1  GGGACCTGGGATCT.1  GGGACCTGTACGCA.1 \n##                 0                 2                 2                 2 \n##  GGGACCTGTCTTCA.1  GGGACCTGTTCCGC.1  GGGATGGACTGACA.1  GGGATGGATCCAGA.1 \n##                 2                 9                 2                 2 \n## GGGATGGATGCCCT.11  GGGATGGATGTGCA.1  GGGATTACAAAGCA.1  GGGATTACCCCACT.1 \n##                 1                 0                 1                 0 \n##  GGGCAAGAACGCAT.1  GGGCAAGAACTGTG.1  GGGCAAGAAGCTAC.1  GGGCAAGAATCGAC.1 \n##                 0                 0                 4                 1 \n##  GGGCAAGAGCGAGA.1  GGGCAAGATCCCAC.1  GGGCACACACCGAT.1  GGGCACACACCTCC.1 \n##                 1                 7                 1                 1 \n##  GGGCACACCTGTCC.1  GGGCACACGAGATA.1  GGGCACACTATCGG.1  GGGCAGCTGAGAGC.1 \n##                 2                 1                 4                 1 \n##  GGGCAGCTTGAACC.1  GGGCCAACCAGATC.1  GGGCCAACCGCTAA.1  GGGCCAACCTAGCA.1 \n##                 1                 0                 2                 0 \n##  GGGCCAACGAGAGC.1  GGGCCAACTGTGGT.1  GGGCCATGAACCAC.1  GGGCCATGAAGTAG.1 \n##                 0                 7                 0                 0 \n##  GGGCCATGCAGAAA.1  GGGCCATGCAGTCA.1  GGGCCATGCATCAG.1  GGGCCATGCATGAC.1 \n##                 3                 0                 3                 7 \n##  GGGCCATGCCCTTG.1  GGGCCATGCTATTC.1  GGGCCATGCTGTAG.1  GGGCCATGTAGCCA.1 \n##                 0                 2                 0                10 \n##  GGGTAACTCTGAGT.1  GGGTAACTGTACGT.1  GGGTAACTGTCTAG.1  GGGTAACTTGAGAA.1 \n##                 0                 5                 4                 1 \n##  GGGTTAACCATGCA.1  GGGTTAACCGAATC.1  GGGTTAACGTAGCT.1  GGGTTATGAAGTGA.1 \n##                 3                 0                 4                 6 \n##  GGGTTATGGTTGGT.1 GGGTTATGTGCAAC.11  GGTAAAGAAATGCC.1  GGTAAAGAACGGGA.1 \n##                 9                 3                11                 0 \n##  GGTACAACCCCGTT.1  GGTACAACCGAACT.1  GGTACAACCGCAAT.1  GGTACAACGTCTTT.1 \n##                 5                 0                 0                 7 \n##  GGTACATGAGCAAA.1  GGTACATGATGGTC.1  GGTACATGCAGAAA.1  GGTACATGCCCTCA.1 \n##                 1                 1                 7                 5 \n##  GGTACATGCCGATA.1  GGTACATGGAATCC.1  GGTACATGGACGAG.1  GGTACTGAAGGTTC.1 \n##                 1                 0                 1                 5 \n##  GGTACTGAGACTAC.1  GGTAGTACAGCATC.1  GGTAGTACAGTTCG.1  GGTAGTACGAATAG.1 \n##                 2                 6                 0                 6 \n##  GGTAGTACGGTAGG.1  GGTAGTACGTAGGG.1  GGTAGTACGTCTTT.1  GGTAGTACTCACGA.1 \n##                 1                 4                 1                 7 \n##  GGTATCGAAGAACA.1  GGTATCGACTTCGC.1  GGTATCGAGACACT.1  GGTATCGAGTGCTA.1 \n##                 6                 6                 0                 1 \n##  GGTATCGATCGCAA.1  GGTATCGATGCCAA.1  GGTATGACACACTG.1  GGTATGACACGTAC.1 \n##                 2                11                 6                 3 \n##  GGTATGACAGTAGA.1  GGTATGACGAAAGT.1  GGTATGACTTGTGG.1  GGTCAAACAACCTG.1 \n##                 9                 0                 3                 7 \n##  GGTCAAACACACCA.1  GGTCAAACCGTAGT.1  GGTCAAACCGTTGA.1  GGTCAAACGGGCAA.1 \n##                 9                 2                 1                 1 \n##  GGTCAAACGTAAGA.1  GGTCTAGAAGTGTC.1  GGTCTAGACATACG.1  GGTCTAGACCCACT.1 \n##                 0                 1                 0                 0 \n##  GGTCTAGAGTCATG.1  GGTCTAGAGTCTGA.1  GGTCTAGATGTCCC.1  GGTCTAGATTGTGG.1 \n##                 3                 0                 1                 4 \n##  GGTGATACAGTAGA.1  GGTGATACCCGCTT.1  GGTGATACCCTCGT.1  GGTGGAGAACCATG.1 \n##                 0                 1                 0                 0 \n##  GGTGGAGACGCAAT.1  GGTGGAGAGAATCC.1  GGTGGAGAGCATAC.1 GGTGGAGAGGAACG.11 \n##                 0                 4                11                 0 \n##  GGTGGAGATGCGTA.1  GGTGGAGATGTCAG.1  GGTTGAACAGTCAC.1  GGTTGAACGAACCT.1 \n##                 0                 2                 0                 3 \n##  GGTTGAACGCTTAG.1  GGTTGAACTGCAGT.1  GGTTGAACTGCGTA.1  GGTTGAACTTTCTG.1 \n##                 1                 0                 1                 8 \n##  GGTTTACTGCGGAA.1  GGTTTACTGTGTCA.1  GGTTTACTTAAGCC.1  GGTTTACTTCGTGA.1 \n##                 0                 1                 0                11 \n##  GTAACGTGCAACCA.1  GTAACGTGCACACA.1  GTAACGTGGCCAAT.1  GTAACGTGTATCTC.1 \n##                 6                 6                 0                 1 \n##  GTAAGCACCCTTGC.1  GTAAGCACCGTGTA.1  GTAAGCACCTCCAC.1  GTAAGCACGCATAC.1 \n##                 1                 2                 2                 3 \n##  GTAAGCACGTAAGA.1  GTAAGCACTAGAAG.1 GTAAGCACTGATGC.11  GTAAGCACTGGGAG.1 \n##                 0                 1                10                 5 \n##  GTAAGCTGCAGCTA.1  GTAAGCTGGATAAG.1  GTAAGCTGGGTGAG.1  GTAATAACACACGT.1 \n##                 2                 3                 1                 5 \n##  GTAATAACTGACTG.1  GTAATAACTTTACC.1  GTAATATGACGACT.1  GTAATATGAGGGTG.1 \n##                 2                 1                 3                 1 \n##  GTAATATGCTGATG.1  GTAATATGGAATAG.1  GTAATATGGTTCAG.1  GTAATATGTTACCT.1 \n##                 0                 7                 0                 0 \n##  GTACAGTGACACAC.1  GTACAGTGGACAGG.1  GTACAGTGTCCGTC.1  GTACCCTGAACCGT.1 \n##                 0                 9                 2                 5 \n##  GTACCCTGCTCCAC.1  GTACCCTGGCGTAT.1  GTACGAACCCTAAG.1  GTACGAACGCAGAG.1 \n##                 1                 5                 5                 2 \n##  GTACGAACGGTAGG.1  GTACGAACTACAGC.1  GTACGAACTTGCTT.1  GTACGTGAAAGTGA.1 \n##                 3                 5                 3                 4 \n##  GTACGTGATAGCGT.1  GTACGTGATGCAGT.1  GTACTACTAGATCC.1  GTACTACTCATGCA.1 \n##                 4                 1                 8                 4 \n##  GTACTACTGCCTTC.1  GTACTACTGTTTGG.1  GTACTTTGAAAGTG.1  GTACTTTGAACAGA.1 \n##                 0                 0                 7                 9 \n##  GTACTTTGGCAGAG.1  GTACTTTGGGAACG.1  GTACTTTGGTGTAC.1  GTACTTTGTGAGGG.1 \n##                 6                 4                 2                 9 \n##  GTAGACTGCTTCGC.1  GTAGACTGGCTATG.1  GTAGACTGGCTGTA.1  GTAGACTGTGGATC.1 \n##                 0                 1                 0                 7 \n##  GTAGACTGTGTCAG.1  GTAGACTGTTTACC.1 GTAGCAACAAGCCT.11  GTAGCAACAATGCC.1 \n##                 6                 5                 0                10 \n##  GTAGCAACAGCAAA.1  GTAGCAACATTCCT.1  GTAGCAACCTGTCC.1  GTAGCAACCTTGAG.1 \n##                 0                 0                 1                 0 \n##  GTAGCAACTAGACC.1  GTAGCAACTCAGAC.1  GTAGCAACTGTGAC.1  GTAGCAACTTTCAC.1 \n##                 2                 1                 0                 3 \n##  GTAGCATGAGTGTC.1  GTAGCATGCATGAC.1  GTAGCATGGAACCT.1  GTAGCATGGTGTTG.1 \n##                 2                 2                 6                 1 \n## GTAGCCCTAAGATG.11 GTAGCCCTAGACTC.11  GTAGCCCTCTTCCG.1 GTAGCCCTCTTGAG.11 \n##                 5                 7                 0                 2 \n##  GTAGCCCTTGCTCC.1  GTAGCCCTTTGTGG.1  GTAGCTGACGTAAC.1  GTAGCTGAGCAGTT.1 \n##                 0                 3                 6                 0 \n##  GTAGCTGAGGTGTT.1  GTAGGTACCACTTT.1  GTAGGTACCAGGAG.1  GTAGGTACTCTACT.1 \n##                 8                 0                 6                 0 \n##  GTAGGTACTCTCGC.1  GTAGTCGAAGAGTA.1  GTAGTCGACCACAA.1  GTAGTCGACCTTCG.1 \n##                 4                 0                 0                 3 \n##  GTAGTCGACGAACT.1  GTAGTCGACGCATA.1  GTAGTCGATCCCAC.1  GTAGTCGATGCCCT.1 \n##                 1                 2                 9                 3 \n##  GTAGTCGATGGAGG.1  GTAGTCGATTTCTG.1  GTAGTGACATCGGT.1  GTAGTGACCAGTTG.1 \n##                10                 0                 0                 0 \n##  GTAGTGACGCCTTC.1  GTAGTGACGGTAAA.1  GTAGTGACTGTTTC.1  GTAGTGTGAACGAA.1 \n##                 0                 1                 4                 0 \n##  GTAGTGTGAAGATG.1  GTAGTGTGCCGATA.1  GTAGTGTGCTTGAG.1  GTATCACTACGTGT.1 \n##                 0                 9                 3                 3 \n##  GTATCACTAGAGAT.1  GTATCACTCGGTAT.1  GTATCACTCTAGCA.1 GTATCACTGCGAGA.11 \n##                 3                 3                 0                 7 \n##  GTATCTACAGTGTC.1  GTATCTACCCGCTT.1  GTATCTACGCCATA.1  GTATCTACGGAACG.1 \n##                 3                 7                 3                 0 \n## GTATCTACTGACTG.11  GTATCTACTTCCGC.1  GTATCTACTTCTAC.1  GTATGGTGCGACTA.1 \n##                 0                 5                 4                 2 \n##  GTATGGTGCTGTAG.1  GTATGGTGGAATGA.1  GTATGGTGGCATCA.1  GTATGGTGTGGAGG.1 \n##                 1                 1                 6                 1 \n##  GTATGGTGTTCTGT.1  GTATTAGACCAGTA.1  GTATTAGACGTAAC.1  GTATTAGAGTCATG.1 \n##                 3                 2                 5                 8 \n##  GTATTCACATACCG.1  GTATTCACCCTATT.1  GTATTCACTCCCAC.1  GTATTCACTGACAC.1 \n##                 2                 0                 0                 1 \n##  GTCAACGAACCACA.1  GTCAACGAAGTGCT.1  GTCAACGACCGATA.1  GTCAACGAGATACC.1 \n##                 1                 6                 0                 5 \n##  GTCAACGAGGATTC.1  GTCAACGATAGACC.1  GTCAATCTATGCTG.1  GTCAATCTCCCGTT.1 \n##                 1                 1                 0                 1 \n##  GTCAATCTCTTCGC.1  GTCAATCTTCCAAG.1  GTCAATCTTCCTGC.1  GTCACAGAAAACAG.1 \n##                 1                 0                 0                 5 \n##  GTCACAGAACCACA.1  GTCACAGAACGCAT.1  GTCACAGAATCGAC.1  GTCACAGATCGTTT.1 \n##                 2                 3                 1                 1 \n##  GTCACCTGCCTAAG.1  GTCACCTGCTTTAC.1  GTCACCTGTTCGTT.1  GTCATACTACCAAC.1 \n##                 0                 4                 5                10 \n##  GTCATACTACGCAT.1  GTCATACTAGCTAC.1  GTCATACTAGTCGT.1  GTCATACTATGGTC.1 \n##                 3                 1                 5                 7 \n##  GTCATACTCGAGTT.1  GTCATACTGCTGAT.1  GTCATACTGGTAGG.1  GTCATACTGTGCTA.1 \n##                 0                 4                 1                 8 \n## GTCATACTTAGACC.11  GTCATACTTCCAGA.1  GTCATACTTTTCAC.1  GTCCAAGAACCTTT.1 \n##                 3                 2                 2                 3 \n##  GTCCAAGACCAAGT.1  GTCCAAGACTACGA.1  GTCCAAGAGATAGA.1  GTCCAAGATCAGGT.1 \n##                 3                 1                 2                 0 \n##  GTCCAAGATGCTAG.1  GTCCACACACTAGC.1  GTCCACACCGTAGT.1  GTCCACACGAAACA.1 \n##                 2                 0                 1                11 \n##  GTCCACACTTCTCA.1  GTCCACTGACTACG.1  GTCCACTGGTGCTA.1  GTCCACTGTAGTCG.1 \n##                 0                 4                 5                 0 \n##  GTCCACTGTTACCT.1  GTCCACTGTTCGTT.1  GTCCAGCTATTTCC.1  GTCCAGCTTGACAC.1 \n##                 1                 2                 2                 5 \n##  GTCCAGCTTGCCAA.1  GTCCCATGCTCAGA.1 GTCCCATGCTTGTT.11  GTCCCATGTGTCGA.1 \n##                 8                 0                 0                 1 \n##  GTCGAATGACAGTC.1  GTCGAATGAGCTAC.1  GTCGAATGCAGAAA.1  GTCGAATGCATGGT.1 \n##                 2                 1                 2                 2 \n##  GTCGAATGCCCGTT.1  GTCGAATGGGATTC.1  GTCGAATGTTGACG.1  GTCGACCTAGTCAC.1 \n##                 1                 5                 2                 2 \n##  GTCGACCTTCGTGA.1  GTCGACCTTTCACT.1  GTCGACCTTTGGCA.1  GTCGCACTCTCAAG.1 \n##                 0                 1                 0                 6 \n##  GTCGCACTTCGCAA.1  GTCGCACTTTGCGA.1  GTCTAACTACCATG.1  GTCTAACTACTCAG.1 \n##                 1                 2                 0                 0 \n##  GTCTAACTTAAGCC.1  GTCTAACTTCCTCG.1  GTCTAACTTTTCTG.1  GTCTAGGAACGGGA.1 \n##                 0                 1                 3                 6 \n##  GTCTAGGAAGGCGA.1  GTCTAGGACCTATT.1  GTCTAGGACGTACA.1  GTCTAGGAGCGATT.1 \n##                 3                 3                 0                 1 \n## GTCTAGGATGCTAG.11  GTCTAGGATGTGCA.1  GTCTGAGAAGCATC.1  GTCTGAGACAACCA.1 \n##                 2                 0                 2                 2 \n##  GTCTGAGAGGTATC.1  GTCTGAGATCCCAC.1  GTGAACACACTTTC.1  GTGAACACAGAGAT.1 \n##                 1                 3                 0                 2 \n##  GTGAACACAGAGTA.1  GTGAACACCTAGTG.1  GTGAACACGAATAG.1  GTGAACACGGGATG.1 \n##                 0                 0                 1                 2 \n##  GTGACAACAAGTGA.1  GTGACAACCAGGAG.1  GTGACAACCCAACA.1  GTGACAACTTCCCG.1 \n##                 2                 2                 2                 0 \n##  GTGACCCTAGCCTA.1  GTGACCCTGAACTC.1  GTGACCCTGCGGAA.1 GTGACCCTTAAGCC.11 \n##                 2                 3                 0                 9 \n##  GTGACCCTTGAAGA.1  GTGAGGGAACAGCT.1  GTGAGGGAATCAGC.1  GTGAGGGACCGTAA.1 \n##                 1                 7                 1                 5 \n##  GTGAGGGACGACTA.1  GTGAGGGACTCGAA.1  GTGAGGGAGCTGTA.1  GTGAGGGATAACCG.1 \n##                 0                 1                 0                 7 \n##  GTGAGGGATCCTAT.1  GTGATCGATCTCCG.1  GTGATCGATGAGGG.1  GTGATGACCAACTG.1 \n##                 5                 9                 7                 9 \n##  GTGATGACCACACA.1  GTGATGACGAATCC.1  GTGATGACGCATCA.1  GTGATGACGTAAGA.1 \n##                 2                 6                 0                 2 \n##  GTGATTCTCCAAGT.1  GTGATTCTCCATGA.1  GTGATTCTCCCACT.1 GTGATTCTGTACGT.11 \n##                 5                 1                 1                 3 \n##  GTGATTCTGTTCTT.1  GTGATTCTTTACCT.1  GTGCAAACAGGTTC.1  GTGCAAACGGACGA.1 \n##                 4                 0                 3                 2 \n##  GTGCAAACTCGTGA.1  GTGCAAACTGTCCC.1  GTGCCACTCGCTAA.1  GTGCCACTCTACCC.1 \n##                 7                 0                 1                 3 \n##  GTGCCACTGTCAAC.1  GTGCCACTTAGACC.1  GTGCTAGAAGAGTA.1  GTGCTAGACGAACT.1 \n##                 1                 3                 1                 0 \n##  GTGCTAGAGAAAGT.1  GTGCTAGAGAGGTG.1  GTGCTAGATCTTTG.1  GTGCTAGATTCGCC.1 \n##                 0                 4                 0                 5 \n##  GTGCTAGATTTCAC.1  GTGGAGGACTCGCT.1  GTGGAGGAGGGACA.1  GTGGATTGAGTACC.1 \n##                 2                 1                 1                 2 \n##  GTGGATTGAGTCTG.1  GTGGATTGCCAACA.1  GTGGATTGCGTTGA.1  GTGGATTGTAAAGG.1 \n##                 6                 3                 2                 0 \n##  GTGGATTGTGGCAT.1  GTGGTAACGTAAGA.1  GTGGTAACTACTGG.1  GTGGTAACTCGTAG.1 \n##                 0                 0                 5                 3 \n##  GTGTACGACCCGTT.1  GTGTACGAGAAGGC.1  GTGTACGAGCCTTC.1  GTGTACGAGGGATG.1 \n##                 2                 0                 8                 7 \n##  GTGTAGTGAGCGGA.1 GTGTAGTGCCTACC.11  GTGTAGTGCTGTCC.1  GTGTAGTGTCGCTC.1 \n##                 7                 2                 1                 0 \n##  GTGTAGTGTGGTTG.1  GTGTATCTAGCACT.1  GTGTATCTATCTCT.1  GTGTATCTCCCTCA.1 \n##                 7                 1                 0                 3 \n##  GTGTATCTCCTTTA.1  GTGTATCTCTGGTA.1  GTGTATCTGGTAGG.1  GTGTGATGAAACGA.1 \n##                10                 2                 1                 0 \n##  GTGTGATGAAGTAG.1  GTGTGATGCTGTAG.1  GTGTGATGGCATAC.1  GTTAAAACGAGACG.1 \n##                 2                 1                 8                11 \n##  GTTAAAACTCCCGT.1 GTTAAAACTGCATG.11  GTTAAAACTTCTCA.1  GTTAAAACTTGGTG.1 \n##                 0                 4                 2                 5 \n##  GTTAAATGACCTTT.1 GTTAAATGCGCCTT.11  GTTAAATGGAAAGT.1  GTTAAATGGGTTAC.1 \n##                 1                10                 6                 7 \n##  GTTAAATGTACAGC.1  GTTAAATGTTGCTT.1  GTTAACCTCCTTGC.1  GTTAACCTCCTTTA.1 \n##                 1                 1                 0                 5 \n##  GTTACGGAACGTAC.1  GTTACGGACCTCGT.1  GTTACGGACTACGA.1  GTTACGGAGTCTAG.1 \n##                 0                 2                 1                 3 \n##  GTTACGGATGAGAA.1  GTTACTACGCGAAG.1  GTTACTACGCTATG.1  GTTACTACTGCAAC.1 \n##                 7                 1                 4                 0 \n##  GTTAGGTGACCTAG.1  GTTAGGTGAGGCGA.1  GTTAGGTGCAGGAG.1  GTTAGGTGGTTGGT.1 \n##                 2                 5                 2                 0 \n##  GTTAGGTGTTTGCT.1  GTTAGTCTATCGGT.1  GTTAGTCTGAGGGT.1  GTTAGTCTGATAGA.1 \n##                 0                 0                 4                 3 \n##  GTTATAGAATTTCC.1  GTTATAGACCAAGT.1  GTTATAGACTCGAA.1  GTTATAGAGAGGAC.1 \n##                 0                12                 1                 1 \n##  GTTATAGAGCCAAT.1  GTTATAGATTTCTG.1  GTTATCTGACACGT.1  GTTATCTGCCAAGT.1 \n##                10                 7                 1                 1 \n##  GTTATCTGGCGAAG.1  GTTATCTGGGCGAA.1  GTTATGCTCATCAG.1  GTTATGCTCCTCCA.1 \n##                 2                 0                 0                 1 \n##  GTTATGCTCTACGA.1  GTTATGCTGAGGTG.1  GTTATGCTTCTCTA.1  GTTATGCTTTCCCG.1 \n##                 0                 3                 3                 0 \n##  GTTCAACTCCACCT.1  GTTCAACTGAATGA.1  GTTCAACTGCGGAA.1 GTTCAACTGCTAAC.11 \n##                 2                 1                 3                 1 \n##  GTTCAACTGTTGGT.1  GTTCAACTTAGACC.1  GTTCAACTTTCTAC.1  GTTCAGGAACCATG.1 \n##                 1                 1                 4                 7 \n##  GTTCAGGAAGAGTA.1  GTTCAGGACGGGAA.1  GTTCAGGACTGATG.1  GTTCAGGAGTAGGG.1 \n##                 0                12                 5                 5 \n##  GTTCATACAAAGTG.1  GTTCATACAGGGTG.1  GTTCATACATTCGG.1  GTTCATACATTCTC.1 \n##                 1                 2                 9                 3 \n##  GTTCATACTAGACC.1  GTTCATACTCGTAG.1  GTTCATACTTCGGA.1  GTTGACGAACACCA.1 \n##                 2                 0                 6                10 \n##  GTTGACGAATCGGT.1  GTTGACGACATTGG.1  GTTGACGACCCGTT.1  GTTGACGACGCAAT.1 \n##                 0                 1                 1                 1 \n##  GTTGACGACTTGTT.1  GTTGACGAGCAGTT.1  GTTGACGATAAGCC.1  GTTGACGATGTTTC.1 \n##                 2                10                 0                 3 \n##  GTTGAGTGAAAGTG.1  GTTGATCTACACCA.1  GTTGATCTACTCTT.1  GTTGATCTAGCCAT.1 \n##                 1                 4                 2                 4 \n##  GTTGATCTTACTTC.1  GTTGATCTTTAGGC.1  GTTGATCTTTTCTG.1  GTTGGATGAAACGA.1 \n##                 0                 1                 3                 3 \n##  GTTGGATGAAGGCG.1  GTTGGATGACTCAG.1  GTTGGATGAGCCTA.1  GTTGGATGAGCTCA.1 \n##                 0                 0                 2                 3 \n##  GTTGGATGCTACGA.1  GTTGGATGCTCATT.1  GTTGGATGGAACCT.1  GTTGGATGGACTAC.1 \n##                 0                 0                 6                 1 \n##  GTTGGATGTAGCCA.1  GTTGGATGTGGGAG.1  GTTGTACTAGCGTT.1  GTTGTACTCCTCAC.1 \n##                 3                 6                 4                 5 \n##  GTTGTACTGTGTAC.1  GTTTAAGAACACGT.1  GTTTAAGACACTCC.1  GTTTAAGACGTTAG.1 \n##                 2                 0                 4                 3 \n##  GTTTAAGACTCCCA.1  GTTTAAGACTCTTA.1  GTTTAAGACTTGTT.1  GTTTAAGAGACGAG.1 \n##                 0                 1                 2                 1 \n##  GTTTAAGAGAGCAG.1  GTTTAAGAGTAAGA.1  TAAACAACACAGTC.1  TAAACAACAGAACA.1 \n##                 1                 0                 1                 5 \n##  TAAACAACCGTACA.1  TAAACAACGAGATA.1  TAAACAACGGACAG.1  TAAAGACTAGATCC.1 \n##                 1                 2                 0                 0 \n##  TAAAGACTAGTTCG.1  TAAAGACTCGTTGA.1  TAAAGACTTCGACA.1  TAAAGACTTCTAGG.1 \n##                10                 3                 1                 1 \n##  TAAAGACTTCTCGC.1  TAAAGTTGATTTCC.1  TAAAGTTGCCGATA.1  TAAAGTTGGGTGAG.1 \n##                 2                 1                 0                 1 \n##  TAAAGTTGGTCGTA.1  TAAAGTTGTCCTTA.1  TAAAGTTGTCTATC.1  TAAAGTTGTTGTGG.1 \n##                 0                 1                 2                 0 \n##  TAAAGTTGTTTGTC.1  TAAATCGACTCAGA.1  TAAATCGAGAGGAC.1  TAAATCGATAACGC.1 \n##                 0                10                 6                 2 \n##  TAAATGTGACGTAC.1  TAAATGTGGAAGGC.1  TAAATGTGTCCTTA.1  TAAATGTGTTTGGG.1 \n##                 6                 3                 7                 0 \n##  TAACAATGACTGTG.1  TAACAATGCGGGAA.1  TAACAATGGTCACA.1  TAACAATGGTCTTT.1 \n##                 2                 4                 1                 0 \n##  TAACACCTAGAGAT.1  TAACACCTAGGTCT.1  TAACACCTTCCCAC.1  TAACATGACATTGG.1 \n##                 7                 1                 2                 0 \n##  TAACATGACCTATT.1  TAACATGAGCGTAT.1  TAACATGAGTGCTA.1  TAACCGGACCGAAT.1 \n##                 1                 2                 1                 0 \n##  TAACCGGACTCGCT.1  TAACCGGACTCTTA.1  TAACCGGACTGTGA.1  TAACCGGACTTCCG.1 \n##                 2                 2                 1                 0 \n##  TAACCGGAGCTACA.1  TAACCGGATAAAGG.1  TAACCGGATCGCTC.1  TAACCGGATGAGAA.1 \n##                 9                 2                 1                 0 \n##  TAACCGGATTGCTT.1  TAACCGGATTTACC.1  TAACGTCTATCTTC.1  TAACGTCTGAAAGT.1 \n##                 2                 0                 1                 2 \n##  TAACGTCTGAACCT.1  TAACGTCTGACAGG.1  TAACGTCTGGGAGT.1  TAACGTCTTCTAGG.1 \n##                 0                 0                 1                 0 \n##  TAACTAGAACGGGA.1  TAACTAGATGCAGT.1  TAACTAGATTTCTG.1  TAACTCACATTCCT.1 \n##                 2                 1                 0                 1 \n##  TAACTCACTCTCAT.1  TAACTCACTTGCAG.1  TAAGAACTCCCAAA.1  TAAGAGGAAAAAGC.1 \n##                 2                 5                 3                 6 \n##  TAAGAGGATTAGGC.1  TAAGATACGTGTCA.1  TAAGATACTCACGA.1 TAAGATACTGTCCC.11 \n##                 4                 0                 7                 1 \n##  TAAGATTGAGATGA.1  TAAGATTGATAAGG.1  TAAGATTGATGGTC.1  TAAGATTGCCACCT.1 \n##                 4                 0                 0                 2 \n##  TAAGCGTGCACTAG.1  TAAGCGTGCTGCAA.1  TAAGCGTGGACAGG.1  TAAGCGTGGACGTT.1 \n##                 3                 2                 3                 0 \n##  TAAGCGTGGCGTAT.1  TAAGCGTGGGGAGT.1  TAAGCGTGTGTGAC.1  TAAGCTCTACCATG.1 \n##                 3                 0                 1                 0 \n##  TAAGCTCTAGTCAC.1  TAAGCTCTAGTGTC.1  TAAGCTCTGGTGAG.1  TAAGCTCTGTCTAG.1 \n##                 1                 0                 7                 1 \n##  TAAGCTCTTAGAGA.1  TAAGCTCTTTGGCA.1  TAAGGCTGAAGCAA.1  TAAGGCTGACGGGA.1 \n##                 1                 0                 6                 2 \n##  TAAGGCTGATCGTG.1  TAAGGCTGCACAAC.1  TAAGGCTGCCCTCA.1  TAAGGCTGGAAAGT.1 \n##                 0                 0                 9                 2 \n## TAAGGCTGTCAAGC.11  TAAGGCTGTCCTGC.1  TAAGGCTGTGTCGA.1  TAAGGGCTCAATCG.1 \n##                 2                 7                 1                 9 \n##  TAAGTAACAGAAGT.1  TAAGTAACAGAGTA.1  TAAGTAACCGCATA.1  TAAGTAACCGTTGA.1 \n##                 3                 5                 5                 0 \n##  TAAGTAACGAGGCA.1  TAAGTAACTGTGGT.1  TAAGTCCTACCAGT.1  TAAGTCCTCTACTT.1 \n##                 2                 6                 1                 1 \n##  TAAGTCCTGGTCTA.1  TAAGTCCTGTACAC.1  TAATCCACACGTAC.1  TAATCCACATGTCG.1 \n##                 1                 5                 1                 1 \n## TAATCCACCTCTAT.11  TAATCCACTTCGCC.1  TAATCGCTTTCCAT.1  TAATGAACAGACTC.1 \n##                 0                 1                13                 1 \n##  TAATGAACGAAGGC.1  TAATGAACGCATAC.1  TAATGAACGTTCAG.1  TAATGAACGTTGAC.1 \n##                 2                 1                 2                 3 \n##  TAATGAACTGGCAT.1  TAATGATGACCTGA.1  TAATGATGAGGGTG.1  TAATGATGCGACAT.1 \n##                 0                 2                 2                 4 \n##  TAATGATGGCGAGA.1  TAATGATGGGCGAA.1  TAATGCCTACGTAC.1  TAATGCCTCCACCT.1 \n##                 4                 0                 0                 4 \n##  TAATGCCTCCATAG.1  TAATGCCTTACTTC.1  TAATGCCTTGTGAC.1  TAATGTGAAGATGA.1 \n##                 1                 5                 4                 4 \n##  TAATGTGACACAAC.1  TAATGTGAGCGGAA.1 TAATGTGAGGTCAT.11  TAATGTGATAACGC.1 \n##                 2                 2                 6                 1 \n##  TAATGTGATTCATC.1  TAATGTGATTCGTT.1  TACAAATGACGCAT.1  TACAAATGACGTTG.1 \n##                 4                 3                 0                 6 \n##  TACAAATGCGAATC.1  TACAAATGGCGAAG.1  TACAAATGTACGCA.1  TACAAATGTTGCTT.1 \n##                 2                 1                10                 4 \n##  TACAATGACATTCT.1  TACAATGAGCGGAA.1  TACAATGAGTACGT.1  TACAATGATGAGCT.1 \n##                 0                 5                 0                 0 \n##  TACAATGATGGAGG.1  TACAATGATTCAGG.1  TACACACTCCACCT.1  TACACACTTAACCG.1 \n##                 0                 7                 7                 5 \n##  TACACACTTTGGTG.1  TACATAGAATCACG.1  TACATAGACTGAAC.1  TACATAGATGGCAT.1 \n##                 5                 0                12                 1 \n##  TACATCACGAATGA.1  TACATCACGCAGAG.1  TACATCACTAGCCA.1  TACATCACTGATGC.1 \n##                 4                 1                 0                 0 \n##  TACATCACTTCTTG.1  TACCATTGACGTAC.1  TACCATTGGGCGAA.1  TACCGAGAAACCAC.1 \n##                 2                 0                 2                 1 \n##  TACCGAGAAACTGC.1  TACCGAGAACACAC.1  TACCGAGAACTGTG.1  TACCGAGACGAGTT.1 \n##                 2                 9                 0                 4 \n##  TACCGAGACGGGAA.1  TACCGAGACTTACT.1  TACCGAGAGTCGTA.1  TACCGAGATCCTAT.1 \n##                 2                 1                 0                 1 \n##  TACCGCTGCCGTAA.1  TACCGCTGCCGTTC.1  TACCGCTGCTAGAC.1  TACCGCTGGCTTAG.1 \n##                 1                 2                 7                 1 \n##  TACCGCTGTTCTCA.1  TACCGCTGTTGCTT.1  TACCGGCTATTCGG.1  TACCGGCTTCGCTC.1 \n##                 5                 0                 7                 1 \n##  TACCGGCTTCGTAG.1  TACCGGCTTCTAGG.1  TACGACGAAAGCAA.1  TACGACGACCTAAG.1 \n##                 0                 0                 2                 3 \n##  TACGACGACGTAGT.1  TACGACGACTCAAG.1  TACGACGACTGTGA.1  TACGACGAGCTACA.1 \n##                10                 7                 1                 1 \n##  TACGACGAGTGTCA.1  TACGACGATTCGTT.1  TACGACGATTTGGG.1  TACGAGACATGCTG.1 \n##                 1                 0                 0                 1 \n##  TACGAGACCTATTC.1  TACGAGTGAATCGC.1  TACGAGTGCTAGTG.1  TACGAGTGCTGGTA.1 \n##                 1                 3                 0                 0 \n##  TACGAGTGGTACCA.1  TACGAGTGTACAGC.1  TACGAGTGTAGCGT.1  TACGATCTAAAGCA.1 \n##                 1                 1                 7                 1 \n##  TACGATCTGGAGCA.1  TACGATCTGTCGAT.1  TACGATCTTTACTC.1  TACGCAGAACACAC.1 \n##                 5                 1                 4                 6 \n##  TACGCAGACCGTAA.1  TACGCAGACTATTC.1  TACGCAGACTTATC.1  TACGCAGACTTGGA.1 \n##                 3                 3                 4                 1 \n##  TACGCAGAGGTCTA.1  TACGCAGATACTCT.1  TACGCAGATTGCAG.1  TACGCCACCGAATC.1 \n##                 2                 0                 0                 4 \n##  TACGCCACCGTAAC.1  TACGCCACGGGCAA.1  TACGCCACTCAGGT.1  TACGCGCTAAAACG.1 \n##                 8                 0                 0                 0 \n##  TACGCGCTACCATG.1  TACGCGCTACTAGC.1  TACGCGCTAGAAGT.1  TACGCGCTCTATGG.1 \n##                 5                 0                 0                 0 \n##  TACGCGCTGAATAG.1  TACGCGCTGGTGAG.1  TACGCGCTTGTCAG.1  TACGGAACCACTCC.1 \n##                 2                 1                 1                 0 \n##  TACGGAACCCTCCA.1  TACGGAACTGGAAA.1  TACGGCCTACCAAC.1  TACGGCCTAGAAGT.1 \n##                 2                 2                 0                 3 \n##  TACGGCCTCATGGT.1  TACGGCCTCTCGAA.1  TACGGCCTGCTCCT.1  TACGTACTTAAGCC.1 \n##                 1                 1                 6                 0 \n##  TACGTTACAGATGA.1  TACGTTACGAATAG.1  TACGTTACGTTGGT.1  TACGTTACTTTCGT.1 \n##                 2                 3                 1                 0 \n##  TACTAAGACTAGAC.1  TACTAAGATCTCTA.1  TACTAAGATTCAGG.1  TACTACACAAGGTA.1 \n##                 0                 7                 7                 1 \n##  TACTACACACGGAG.1  TACTACACAGGCGA.1  TACTACACCAATCG.1  TACTACACTCTACT.1 \n##                 0                 6                 1                 0 \n##  TACTACTGCCTCGT.1  TACTACTGGAATCC.1  TACTACTGGCATAC.1  TACTACTGGCTTAG.1 \n##                 0                 0                12                 0 \n##  TACTACTGGTCGTA.1  TACTCAACACACGT.1  TACTCAACAGTGTC.1  TACTCAACATCGGT.1 \n##                 1                 7                 2                 1 \n##  TACTCAACCATTGG.1  TACTCAACCTACCC.1  TACTCCCTACTGGT.1  TACTCCCTGACAAA.1 \n##                 5                 1                 1                 7 \n## TACTCCCTGCATCA.11  TACTCCCTTCATTC.1  TACTCCCTTGCCTC.1  TACTCCCTTGCTTT.1 \n##                 1                 2                 0                 5 \n##  TACTCTGAAGAGTA.1  TACTCTGAAGTGTC.1  TACTCTGACAGCTA.1  TACTCTGACGTACA.1 \n##                 6                 1                 1                 8 \n##  TACTCTGACTGGTA.1  TACTCTGAGCTCCT.1  TACTCTGAGTTGAC.1  TACTCTGATTCACT.1 \n##                 0                 0                 0                 0 \n##  TACTGGGACTGAGT.1  TACTGTTGAGAAGT.1  TACTGTTGATAAGG.1  TACTGTTGATTCGG.1 \n##                 1                 5                 1                 1 \n##  TACTGTTGCGCATA.1  TACTGTTGTACAGC.1  TACTGTTGTCAGTG.1  TACTGTTGTCGTGA.1 \n##                 1                 1                 1                 0 \n##  TACTGTTGTCGTTT.1  TACTTGACGCATCA.1  TACTTGACGGCAAG.1  TACTTGACTCTGGA.1 \n##                 3                 0                 3                 1 \n##  TACTTGACTTTGGG.1  TACTTTCTAATGCC.1  TACTTTCTAGGGTG.1  TACTTTCTATCGAC.1 \n##                 1                 7                 1                 1 \n##  TACTTTCTCCCGTT.1  TACTTTCTCCCTCA.1  TACTTTCTGAATCC.1  TACTTTCTTCAGAC.1 \n##                 2                 5                 0                 2 \n##  TACTTTCTTTCGGA.1  TACTTTCTTTGTCT.1  TAGAAACTGCAAGG.1  TAGAAACTTCAGGT.1 \n##                 3                 0                 4                 3 \n##  TAGAAACTTCCTAT.1  TAGAATACTGCACA.1  TAGAATACTGGTCA.1  TAGAATTGGACAGG.1 \n##                 2                 0                 0                 2 \n##  TAGAATTGGGGATG.1  TAGAATTGGGTATC.1  TAGAATTGTCGATG.1  TAGAATTGTCTACT.1 \n##                 7                 1                 0                 2 \n## TAGAATTGTTTGTC.11  TAGACGTGAGGAGC.1  TAGACGTGCAAAGA.1  TAGACGTGCGAACT.1 \n##                 0                 1                 6                 0 \n##  TAGACGTGCTAGAC.1  TAGACGTGTGAAGA.1  TAGACGTGTGAGAA.1  TAGACGTGTGAGGG.1 \n##                 3                 1                 5                 4 \n##  TAGACGTGTTCCGC.1  TAGAGAGAACGGAG.1  TAGAGAGAGTTCTT.1  TAGAGAGATGCTGA.1 \n##                 7                 2                 0                 5 \n##  TAGAGCACACGGGA.1  TAGAGCACCAGGAG.1  TAGAGCACCCTTGC.1  TAGAGCACGCTACA.1 \n##                 7                 1                 1                 2 \n## TAGAGCACGCTTAG.11  TAGAGCACGGCAAG.1  TAGAGCACGGGATG.1  TAGAGCACTCCTGC.1 \n##                 5                 0                 4                 2 \n##  TAGATCCTACTCAG.1  TAGATCCTAGTGTC.1  TAGATCCTCCGTTC.1  TAGATCCTTATCTC.1 \n##                 1                 1                 1                 1 \n##  TAGATCCTTGAGAA.1  TAGATCCTTTCACT.1  TAGATTGAACCTAG.1  TAGATTGAACGTAC.1 \n##                 1                 2                 5                13 \n##  TAGATTGAAGTCAC.1  TAGATTGACTTGTT.1  TAGCATCTCTGTAG.1  TAGCATCTTGCCAA.1 \n##                 6                 6                 7                 1 \n##  TAGCCCACAAACAG.1  TAGCCCACAATGCC.1  TAGCCCACATGCTG.1  TAGCCCACTTCGGA.1 \n##                 6                 0                 0                 6 \n##  TAGCCCTGACCTCC.1  TAGCCCTGCGAGAG.1  TAGCCCTGGATGAA.1  TAGCCCTGTATCGG.1 \n##                 1                 0                 1                 2 \n##  TAGCCCTGTGTCGA.1  TAGCCCTGTTCCGC.1  TAGCCGCTAACGAA.1  TAGCCGCTCCTTAT.1 \n##                 0                 0                 1                 0 \n##  TAGCCGCTGTACCA.1  TAGCGATGAACGGG.1  TAGCGATGGGGACA.1  TAGCGATGGTCTGA.1 \n##                 1                 1                 1                 0 \n##  TAGCGATGTCGACA.1  TAGCTACTCTGTGA.1  TAGCTACTGCTATG.1  TAGCTACTGTCAAC.1 \n##                 4                 2                 4                 0 \n##  TAGCTACTTTTGTC.1  TAGGACTGACGCAT.1  TAGGACTGCAGAAA.1  TAGGACTGCTCTTA.1 \n##                 1                 3                 8                 1 \n##  TAGGACTGTTCGGA.1  TAGGAGCTCATTCT.1  TAGGCAACAGATCC.1  TAGGCAACTAACGC.1 \n##                 0                 0                 0                 2 \n##  TAGGCATGAGGTTC.1  TAGGCATGATGCTG.1  TAGGCATGCTATTC.1  TAGGCTGAAATCGC.1 \n##                 3                 4                 6                 5 \n##  TAGGCTGAAGAGTA.1  TAGGCTGACTCAGA.1 TAGGCTGAGCATAC.11  TAGGCTGAGCTGAT.1 \n##                 1                 5                 4                 8 \n##  TAGGCTGAGTAAGA.1  TAGGCTGAGTGCAT.1  TAGGCTGATCTCCG.1  TAGGCTGATTGAGC.1 \n##                 1                 1                 0                 0 \n##  TAGGGACTATCAGC.1 TAGGGACTTGCATG.11  TAGGGACTTTACTC.1  TAGGTCGACTTCGC.1 \n##                 8                 8                 3                 1 \n##  TAGGTCGAGTCTGA.1  TAGGTCGATGCATG.1  TAGGTGACACGCTA.1  TAGGTGACATAAGG.1 \n##                 0                 2                 2                 2 \n##  TAGGTGACCCAATG.1  TAGGTGACTGTCAG.1  TAGGTGACTTGCAG.1  TAGGTGTGATCGTG.1 \n##                10                 9                 0                 3 \n##  TAGGTGTGCTATTC.1  TAGGTGTGGAGAGC.1  TAGGTGTGGTCTGA.1  TAGGTGTGTCAAGC.1 \n##                 0                 0                 2                 5 \n##  TAGGTGTGTGCCCT.1  TAGGTTCTCGACAT.1  TAGGTTCTCTGGTA.1  TAGGTTCTGACACT.1 \n##                11                 0                 3                 0 \n##  TAGGTTCTGGACGA.1  TAGGTTCTGTTCTT.1 TAGGTTCTTCTACT.11  TAGGTTCTTTATCC.1 \n##                10                 0                 7                 1 \n## TAGTAAACACACGT.11  TAGTAAACTTGCAG.1  TAGTAATGAGCACT.1  TAGTAATGGAGCAG.1 \n##                 1                 7                 5                 0 \n##  TAGTAATGGATGAA.1  TAGTAATGTTGAGC.1  TAGTACCTCTAGTG.1  TAGTACCTGCTACA.1 \n##                 0                 1                 1                 0 \n##  TAGTACCTTAACCG.1  TAGTACCTTCTGGA.1  TAGTACCTTGCGTA.1  TAGTATGAACTGTG.1 \n##                 2                 1                 9                 2 \n##  TAGTATGACTTCTA.1 TAGTATGAGTACCA.11  TAGTATGAGTTTCT.1  TAGTCACTCTACGA.1 \n##                 2                 1                 7                 1 \n##  TAGTCACTGAGATA.1  TAGTCACTTGCATG.1  TAGTCACTTGGCAT.1  TAGTCGGAAAAGTG.1 \n##                 1                 9                 4                 1 \n##  TAGTCGGAGATAAG.1  TAGTCGGAGGTCAT.1  TAGTCGGATGACCA.1  TAGTCTTGAGCACT.1 \n##                 0                 1                11                 1 \n##  TAGTCTTGCGGTAT.1  TAGTCTTGGAATCC.1  TAGTCTTGGCAAGG.1  TAGTCTTGGTAGCT.1 \n##                 2                 2                 0                 1 \n##  TAGTCTTGTCCTAT.1  TAGTCTTGTGTGAC.1  TAGTCTTGTTCATC.1  TAGTGGTGAACCAC.1 \n##                 4                 0                 1                 2 \n##  TAGTGGTGACGACT.1  TAGTTCACAGTCAC.1  TAGTTCACCGACAT.1  TAGTTCACTCGTTT.1 \n##                 0                10                 0                 1 \n##  TAGTTCACTGTGCA.1  TAGTTGCTCCAACA.1  TAGTTGCTCCAAGT.1  TAGTTGCTTCGCAA.1 \n##                11                 0                 7                 5 \n##  TATAAGACACAGTC.1  TATAAGACCACACA.1  TATAAGACCCACCT.1  TATAAGACCCTGTC.1 \n##                 1                 0                 0                 2 \n##  TATAAGACCGTACA.1  TATAAGACGAATAG.1  TATAAGACTGTAGC.1  TATAAGACTTCGTT.1 \n##                13                 1                 1                 6 \n##  TATAAGTGACCTCC.1  TATAAGTGGATAAG.1  TATAAGTGGCTGTA.1  TATAAGTGGGTCTA.1 \n##                 1                 1                 2                 0 \n##  TATACAGACCTTCG.1  TATACAGACGAGAG.1  TATACAGACTACTT.1  TATACAGATGTTCT.1 \n##                 0                 0                 1                 4 \n##  TATACCACACACCA.1  TATACCACTGCAGT.1  TATACCACTGCGTA.1  TATACGCTAGAATG.1 \n##                 4                 7                 3                 3 \n##  TATACGCTAGATCC.1  TATACGCTCTAAGC.1  TATACGCTGATACC.1  TATAGATGAGAGGC.1 \n##                 6                 3                 2                 5 \n##  TATAGATGGGGAGT.1  TATAGATGTTGTCT.1  TATAGCCTAGACTC.1  TATAGCCTAGAGTA.1 \n##                 0                 2                 2                 1 \n##  TATAGCCTCAATCG.1  TATAGCCTCACACA.1  TATAGCCTCCATAG.1  TATAGCCTCTGAGT.1 \n##                 0                 4                 0                 2 \n##  TATAGCCTGACGTT.1  TATAGCCTTGGCAT.1  TATCAAGAACTTTC.1  TATCAAGAGTAAAG.1 \n##                 8                 4                 0                 1 \n##  TATCACTGATGCCA.1  TATCACTGCATGCA.1  TATCACTGCGTGAT.1  TATCACTGGAAGGC.1 \n##                 1                 8                 0                 2 \n##  TATCACTGGTACGT.1  TATCACTGGTCTGA.1  TATCACTGGTTACG.1  TATCACTGTCAGTG.1 \n##                 0                 2                 1                 8 \n##  TATCACTGTCTCCG.1  TATCACTGTGGGAG.1  TATCACTGTTGTCT.1  TATCAGCTAGTACC.1 \n##                 1                 3                 0                 5 \n##  TATCAGCTGGACTT.1  TATCAGCTTGCACA.1  TATCCAACAACGAA.1  TATCCAACCAACTG.1 \n##                 1                 0                 2                 1 \n##  TATCCAACCAGTTG.1  TATCCAACCCAGTA.1  TATCCAACCTCGAA.1  TATCCAACCTTAGG.1 \n##                 4                 1                 2                 1 \n##  TATCCAACCTTGCC.1  TATCCAACGAACCT.1  TATCCAACGAATAG.1  TATCCAACGAGGCA.1 \n##                 1                 3                 0                 0 \n##  TATCCAACTAGCCA.1  TATCCAACTATCTC.1  TATCCAACTCAGTG.1  TATCCAACTCCGTC.1 \n##                 3                 2                 0                 3 \n##  TATCCAACTTTGGG.1  TATCCTGAAAGCCT.1  TATCCTGAACCTGA.1  TATCCTGAAGGTTC.1 \n##                 7                 0                 1                 5 \n##  TATCCTGAATCGTG.1  TATCCTGAATGTGC.1  TATCCTGAGGTAAA.1  TATCCTGATACTGG.1 \n##                 1                 2                10                 1 \n##  TATCCTGATCTCCG.1  TATCCTGATCTCTA.1  TATCCTGATGACCA.1  TATCCTGATGGCAT.1 \n##                 3                 6                 0                 0 \n##  TATCCTGATTCGGA.1  TATCCTGATTGAGC.1  TATCGACTAAAAGC.1  TATCGACTCAACTG.1 \n##                 4                10                 3                 1 \n##  TATCGACTCAATCG.1  TATCGACTCTTGCC.1  TATCGACTGGAGTG.1  TATCGACTGTAGCT.1 \n##                 3                 0                 2                 3 \n##  TATCGTACACCTAG.1  TATCGTACACGCAT.1  TATCGTACACTAGC.1  TATCGTACCACTCC.1 \n##                 0                 3                 7                 0 \n##  TATCGTACTTATCC.1  TATCTCGACGTAAC.1  TATCTCGATACTGG.1  TATCTGACGAGATA.1 \n##                 0                 2                 3                 1 \n##  TATCTGACTCCCAC.1  TATCTTCTCAGAGG.1  TATCTTCTTAGCCA.1  TATCTTCTTTGGTG.1 \n##                 6                 1                 1                 2 \n##  TATGAATGGTACGT.1  TATGAATGGTCGTA.1  TATGAATGGTTTGG.1  TATGAATGTACTCT.1 \n##                 1                 0                 0                 2 \n##  TATGAATGTATGCG.1  TATGAATGTCACGA.1  TATGCGGACTGAGT.1  TATGCGGATCTATC.1 \n##                 3                 1                11                 2 \n##  TATGGGACACCACA.1  TATGGGACGGATCT.1  TATGGGACGGTAAA.1  TATGGGACGTTAGC.1 \n##                 3                 0                 2                 6 \n##  TATGGGACTCCCGT.1  TATGGGACTTGCAG.1  TATGGGACTTGGTG.1  TATGGGTGCCCGTT.1 \n##                 0                 2                 9                 0 \n##  TATGGGTGTCGACA.1  TATGGGTGTCGATG.1  TATGGGTGTTCCCG.1  TATGGTCTCACTTT.1 \n##                 1                 0                 1                 7 \n##  TATGGTCTGCTATG.1  TATGGTCTGTATGC.1  TATGGTCTTCCCAC.1  TATGTCACAGTAGA.1 \n##                 2                10                 2                 2 \n##  TATGTCACATCGAC.1  TATGTCACCATTGG.1  TATGTCACCCGTTC.1  TATGTCACGCGTTA.1 \n##                 1                 3                 2                 5 \n##  TATGTCTGCACAAC.1  TATGTCTGCACACA.1  TATGTCTGGTTGTG.1  TATGTCTGTCGACA.1 \n##                 0                 4                 4                 4 \n##  TATGTCTGTCTCGC.1  TATGTGCTAGTGTC.1  TATGTGCTGATAAG.1  TATGTGCTTCCTAT.1 \n##                 0                 2                 0                 0 \n##  TATGTGCTTGCAGT.1  TATTGCTGACACAC.1  TATTGCTGATTGGC.1  TATTGCTGCCAATG.1 \n##                 0                 9                 5                 2 \n##  TATTGCTGCTAGAC.1  TATTGCTGCTCCCA.1  TATTGCTGTGACAC.1  TATTTCCTCGTACA.1 \n##                 9                 1                 0                 0 \n##  TATTTCCTGCATAC.1  TATTTCCTTGCTTT.1  TCAACACTAAGGGC.1  TCAACACTCGAATC.1 \n##                 0                 7                 0                 9 \n##  TCAACACTGACACT.1  TCAACACTGTTACG.1  TCAACACTTTACTC.1  TCAAGGACCCACAA.1 \n##                 5                 6                 0                 2 \n##  TCAAGGACGGGTGA.1  TCAAGGACGTTGTG.1  TCAAGGTGAAGAGT.1  TCAAGGTGAGGTTC.1 \n##                 0                 7                 2                 1 \n##  TCAAGGTGGAATGA.1  TCAAGGTGTAGTCG.1  TCAAGGTGTGGTGT.1  TCAAGGTGTTGACG.1 \n##                 4                 4                 5                 1 \n## TCAAGTCTGAAAGT.11  TCAAGTCTTCAGAC.1  TCAATAGAACTAGC.1  TCAATAGAATTCCT.1 \n##                 6                 1                 1                 1 \n##  TCAATAGACCTTAT.1  TCAATAGAGGCAAG.1  TCAATAGAGGGAGT.1  TCAATCACCATCAG.1 \n##                 0                 7                 1                 0 \n## TCAATCACGGGATG.11  TCAATCACGTCTTT.1  TCAATCACGTTCGA.1  TCAATCACTTAGGC.1 \n##                 6                13                 1                 7 \n##  TCACATACAGAATG.1  TCACATACAGCTCA.1  TCACATACAGGAGC.1  TCACATACCAGAAA.1 \n##                 2                 1                 1                 2 \n##  TCACATACCATTGG.1  TCACATACTTGTCT.1  TCACCCGAAGATGA.1  TCACCCGACGTGTA.1 \n##                 1                 2                 0                 0 \n##  TCACCCGACTATTC.1  TCACCCGAGTAGCT.1  TCACCGTGAAGCAA.1  TCACCGTGACCCAA.1 \n##                 1                 0                 7                 1 \n##  TCACCGTGCAAAGA.1  TCACCGTGCCATAG.1  TCACCGTGCCTAAG.1  TCACCGTGCGTTAG.1 \n##                 1                 1                 2                 1 \n##  TCACCGTGGGGACA.1 TCACCGTGTTGCTT.11  TCACCTCTAGGTCT.1  TCACCTCTATGTCG.1 \n##                 4                 3                 0                 4 \n##  TCACCTCTGGTGAG.1  TCACGAGAAGCGGA.1  TCACGAGACGAACT.1  TCACGAGACGGTAT.1 \n##                 9                 1                 0                 0 \n##  TCACGAGAGGGTGA.1  TCACGAGAGTCGTA.1  TCACGAGAGTTGGT.1  TCACGAGATACTGG.1 \n##                 8                 9                 5                 0 \n##  TCACGAGATCGTAG.1  TCACTATGCAGAGG.1  TCACTATGGAATCC.1  TCACTATGGTCTTT.1 \n##                 1                 1                 1                 5 \n##  TCACTATGTATGCG.1  TCACTATGTCTCGC.1  TCAGACGAAAAGTG.1  TCAGACGAAAGCAA.1 \n##                 2                 0                 5                 0 \n##  TCAGACGAGATACC.1  TCAGACGATGCTTT.1  TCAGAGACCCTATT.1  TCAGAGACCTCATT.1 \n##                 2                 0                 1                 0 \n## TCAGAGACCTCTAT.11  TCAGAGACCTCTTA.1  TCAGCAGATACAGC.1  TCAGCGCTCTACGA.1 \n##                 1                 5                 2                 0 \n##  TCAGCGCTCTGATG.1  TCAGCGCTGTAGGG.1  TCAGCGCTTTCGCC.1  TCAGGATGACCATG.1 \n##                 3                 0                 6                11 \n##  TCAGGATGACGCAT.1  TCAGGATGAGAGTA.1  TCAGGATGAGTACC.1  TCAGGATGCGGGAA.1 \n##                 9                 4                 0                 0 \n##  TCAGGATGCGTGAT.1  TCAGTGGACATCAG.1  TCAGTGGACCTTGC.1  TCAGTGGAGCTGAT.1 \n##                 0                 1                 0                 2 \n##  TCAGTGGAGTTAGC.1  TCAGTGGATACAGC.1  TCAGTTACAATCGC.1  TCAGTTACACTTTC.1 \n##                 5                 5                 0                 1 \n## TCAGTTACAGCAAA.11  TCAGTTACATCGGT.1  TCAGTTACCCAACA.1  TCAGTTACCTACTT.1 \n##                 1                 0                 0                 2 \n##  TCAGTTACTCCTAT.1  TCAGTTACTGCACA.1  TCAGTTACTGGAGG.1  TCAGTTACTTTCGT.1 \n##                 4                 0                 2                 2 \n##  TCATCAACACCAGT.1 TCATCAACGTTCTT.11  TCATCAACGTTGGT.1  TCATCATGACGGGA.1 \n##                 1                 5                 0                 2 \n##  TCATCATGCTAAGC.1  TCATCATGGTAAGA.1  TCATCATGTACTTC.1  TCATCATGTTCGTT.1 \n##                 6                 8                 4                 1 \n##  TCATCATGTTCTCA.1  TCATCCCTACGGAG.1  TCATCCCTAGTACC.1  TCATCCCTCAGAGG.1 \n##                 0                 0                 0                 0 \n## TCATCCCTTAAAGG.11  TCATGTACACTACG.1  TCATGTACATCTCT.1  TCATGTACATGGTC.1 \n##                 6                 4                 1                 1 \n##  TCATGTACCCTAAG.1  TCATGTACGCAAGG.1  TCATGTACGTAAAG.1  TCATTCGAAAGCCT.1 \n##                 0                 1                 1                 5 \n##  TCATTCGATACTCT.1  TCATTCGATATTCC.1  TCATTCGATCGCTC.1  TCATTGACACTAGC.1 \n##                 0                 0                 1                 1 \n##  TCATTGACCGGTAT.1  TCCACGTGAACGTC.1  TCCACGTGACACAC.1  TCCACGTGATGCTG.1 \n##                 3                 6                 4                 0 \n##  TCCACGTGCGCTAA.1  TCCACGTGCTACCC.1  TCCACGTGGACGGA.1  TCCACGTGGTAGCT.1 \n##                 5                 0                 0                 2 \n##  TCCACGTGTGACTG.1  TCCACGTGTTCCAT.1 TCCACTCTAAAGCA.11  TCCAGAGACAAGCT.1 \n##                 1                 0                 0                 1 \n##  TCCAGAGACCCGTT.1  TCCAGAGAGCCCTT.1  TCCATAACACCACA.1  TCCATAACTCACCC.1 \n##                10                 1                 2                 0 \n##  TCCATAACTCAGGT.1  TCCATCCTCGAACT.1  TCCATCCTCTCCCA.1  TCCATCCTGCAGTT.1 \n##                 4                 1                 2                 0 \n##  TCCATCCTGGTTCA.1  TCCATCCTGTGTTG.1  TCCATCCTTTGGCA.1  TCCCACGACATGAC.1 \n##                 4                 1                 1                 4 \n## TCCCACGACTGGTA.11  TCCCACGAGTCATG.1  TCCCACGAGTTCGA.1  TCCCACGATCGTAG.1 \n##                12                 0                 3                 1 \n##  TCCCAGACCATACG.1  TCCCAGACCCCAAA.1  TCCCAGACCCTACC.1  TCCCAGACTAGAGA.1 \n##                 3                 2                 0                 6 \n##  TCCCAGACTAGTCG.1  TCCCAGACTCGATG.1  TCCCATCTAAGTAG.1  TCCCATCTAGAAGT.1 \n##                 1                10                 2                 2 \n##  TCCCATCTCGAATC.1  TCCCATCTGATAAG.1  TCCCATCTTCGATG.1  TCCCGAACAACAGA.1 \n##                 0                 0                 5                 1 \n##  TCCCGAACAGGTTC.1  TCCCGAACCATCAG.1  TCCCGAACCGTTGA.1  TCCCGAACGTATGC.1 \n##                 1                 5                 9                 0 \n##  TCCCGAACGTTGGT.1  TCCCGAACTTCGTT.1  TCCCGATGACCGAT.1  TCCCGATGCCCAAA.1 \n##                 9                 0                 0                 2 \n##  TCCCGATGCCGATA.1  TCCCGATGGAGGGT.1  TCCCGATGGTTCTT.1  TCCCGATGTACTGG.1 \n##                 0                 2                 2                 2 \n##  TCCCGATGTTGTCT.1  TCCCTACTATCTTC.1  TCCCTACTTAACCG.1  TCCGAAGACTTACT.1 \n##                 0                 8                 0                 2 \n##  TCCGAAGATGCTCC.1  TCCGAAGATGTCGA.1  TCCGAGCTACCCAA.1  TCCGAGCTAGGTCT.1 \n##                 5                 2                 3                 1 \n##  TCCGAGCTCTCCAC.1  TCCGAGCTTAGAGA.1  TCCGGACTCTCTAT.1  TCCGGACTGACGAG.1 \n##                 1                 5                 0                 0 \n##  TCCGGACTGAGGCA.1  TCCGGACTTGTCAG.1  TCCGGACTTTCTAC.1  TCCTAAACTCCTTA.1 \n##                 2                 0                 3                 4 \n##  TCCTAAACTGGAAA.1  TCCTAAACTTTCTG.1 TCCTAATGAAGCCT.11  TCCTAATGCAACTG.1 \n##                 0                 1                 4                 0 \n##  TCCTAATGCGGGAA.1 TCCTAATGTTGACG.11  TCCTACCTAAGTGA.1  TCCTACCTGGGACA.1 \n##                 6                 0                 0                 6 \n##  TCCTACCTTCAGTG.1  TCCTACCTTGTGAC.1  TCCTACCTTTCCAT.1  TCCTATGACACTTT.1 \n##                 4                 1                 0                 4 \n##  TCCTATGACTCTCG.1  TCCTATGAGTCCTC.1  TCCTATGAGTGTAC.1  TCCTATGATGCCAA.1 \n##                 4                 6                 1                 2 \n##  TCGAATCTCCGTTC.1  TCGAATCTGAACCT.1  TCGAATCTGTTGTG.1  TCGAATCTTAAAGG.1 \n##                 0                 1                 7                 2 \n##  TCGAATCTTAAGCC.1  TCGAATCTTTCGGA.1  TCGACCTGACGACT.1  TCGACCTGAGTAGA.1 \n##                 1                 0                 0                 1 \n##  TCGACCTGCTCAGA.1  TCGACCTGGTTAGC.1  TCGACCTGTGCACA.1  TCGACGCTCCATAG.1 \n##                 9                 1                 3                 0 \n##  TCGACGCTGGCATT.1  TCGACGCTTCTTCA.1  TCGACGCTTGACAC.1  TCGAGAACATGTCG.1 \n##                 0                 1                 0                 2 \n##  TCGAGAACCGTGAT.1  TCGAGAACTTCATC.1  TCGAGCCTAAACAG.1  TCGAGCCTCGGAGA.1 \n##                 5                 5                 1                 5 \n##  TCGATACTCCATGA.1  TCGATACTCCCACT.1  TCGATACTGAGCTT.1 TCGATACTGGGACA.11 \n##                 0                 9                 0                 1 \n##  TCGATACTTCACGA.1  TCGATACTTGGTCA.1  TCGATACTTGTGCA.1  TCGATTTGAATCGC.1 \n##                10                 1                 0                 2 \n##  TCGATTTGAGATGA.1  TCGATTTGCTCTAT.1  TCGATTTGTGGTCA.1  TCGCAAGAGAGGCA.1 \n##                 7                 9                 3                 0 \n##  TCGCAAGATGAGAA.1  TCGCAAGATTTCTG.1  TCGCACACAGTAGA.1  TCGCACACCACTCC.1 \n##                 0                 3                 0                 1 \n##  TCGCACACCCGTAA.1  TCGCACACGGCGAA.1  TCGCACACTACTCT.1 TCGCACACTGGAAA.11 \n##                 2                 0                 4                 0 \n##  TCGCACTGTCTCCG.1  TCGCACTGTGTTCT.1  TCGCAGCTCACTTT.1  TCGCAGCTCAGATC.1 \n##                 8                 1                 1                 1 \n##  TCGCAGCTCCCTAC.1  TCGCAGCTGGTTCA.1  TCGCAGCTTAACGC.1  TCGCCATGACGACT.1 \n##                 2                 8                 1                 3 \n##  TCGCCATGACTGTG.1  TCGCCATGAGACTC.1  TCGCCATGCAGAAA.1  TCGCCATGCTCATT.1 \n##                 2                 6                 4                 6 \n##  TCGCCATGGTTTGG.1  TCGCCATGTAGAAG.1  TCGCCATGTGACTG.1  TCGCCATGTTGCAG.1 \n##                 0                 0                 4                 2 \n##  TCGGACCTATCAGC.1  TCGGACCTATGACC.1  TCGGACCTCTAGTG.1  TCGGACCTGAAAGT.1 \n##                13                 1                 2                 0 \n##  TCGGACCTGGACAG.1  TCGGACCTGTTAGC.1  TCGGACCTTCGATG.1  TCGGACCTTTGAGC.1 \n##                 1                 0                 1                 6 \n##  TCGGCACTCTCGAA.1  TCGGCACTCTGGTA.1  TCGGCACTTATCGG.1  TCGGCACTTCGACA.1 \n##                10                 5                 1                 0 \n##  TCGGCACTTCGTGA.1  TCGGCACTTTCCGC.1  TCGGCACTTTGAGC.1  TCGGCACTTTTACC.1 \n##                 1                 7                 3                 0 \n##  TCGGTAGAAACAGA.1  TCGGTAGAGCGTAT.1  TCGGTAGATACGAC.1  TCGGTAGATTTGGG.1 \n##                 5                 3                 0                 0 \n##  TCGTAGGAACACCA.1  TCGTAGGACACTGA.1  TCGTAGGACCTTAT.1  TCGTAGGAGAATAG.1 \n##                 0                 0                 0                 0 \n##  TCGTAGGAGTCGTA.1  TCGTGAGAACCTGA.1  TCGTGAGAAGTCTG.1  TCGTGAGAAGTTCG.1 \n##                 0                 0                 2                 0 \n##  TCGTGAGACATACG.1  TCGTGAGACCGATA.1  TCGTGAGACGCCTT.1  TCGTGAGACTTCCG.1 \n##                 0                 3                 5                 0 \n##  TCGTGAGAGGAACG.1  TCGTGAGATTTGGG.1  TCGTTATGACTGTG.1  TCGTTATGCAGGAG.1 \n##                 9                 2                 2                 1 \n##  TCGTTATGGGAGCA.1  TCGTTATGTCGCCT.1  TCTAACACTCGCTC.1  TCTAACACTGTGGT.1 \n##                 1                 3                11                 0 \n##  TCTAACTGAACCGT.1  TCTAACTGATTTCC.1  TCTAACTGCACTCC.1  TCTAACTGCGACTA.1 \n##                 0                 1                 0                 0 \n##  TCTAACTGCGGAGA.1  TCTAACTGCTCAAG.1  TCTAACTGGTACAC.1  TCTAACTGTCCTAT.1 \n##                 1                 4                 3                 4 \n##  TCTAACTGTGTTTC.1  TCTAAGCTCTGCAA.1  TCTAAGCTGTAGGG.1  TCTACAACGTCATG.1 \n##                 3                 0                 1                 1 \n##  TCTACAACGTCTGA.1  TCTACAACGTGCTA.1  TCTACAACGTTAGC.1  TCTACAACTCTATC.1 \n##                 3                10                 2                 0 \n##  TCTAGACTAGGTCT.1  TCTAGACTATGTCG.1  TCTAGACTCATGAC.1  TCTAGACTCCTAAG.1 \n##                 1                 9                 1                 4 \n##  TCTAGACTTCGCTC.1  TCTAGACTTTCTCA.1  TCTAGTTGCACACA.1  TCTAGTTGCATGAC.1 \n##                 2                 0                 0                 5 \n##  TCTAGTTGCGAGTT.1  TCTAGTTGCTCCAC.1  TCTAGTTGGATAGA.1  TCTAGTTGGCTACA.1 \n##                 1                 0                 4                 4 \n##  TCTAGTTGGGGTGA.1  TCTAGTTGTCGTAG.1  TCTAGTTGTCTCCG.1  TCTAGTTGTCTCGC.1 \n##                 0                 9                 1                 5 \n##  TCTATGTGACCTAG.1  TCTATGTGATTCGG.1  TCTATGTGCGAACT.1  TCTATGTGCGTAGT.1 \n##                 1                 0                 2                 0 \n##  TCTATGTGGCTACA.1  TCTATGTGTCAGAC.1  TCTATGTGTGCATG.1  TCTATGTGTTGCTT.1 \n##                 0                 2                 1                 3 \n##  TCTCAAACCGCTAA.1  TCTCAAACTCGTAG.1  TCTCCACTCACACA.1  TCTCCACTCTAGCA.1 \n##                 1                 2                 1                 3 \n##  TCTCCACTTTTACC.1  TCTCTAGAAACTGC.1  TCTCTAGAAGTTCG.1  TCTCTAGACCTACC.1 \n##                 1                12                 0                 7 \n##  TCTCTAGACCTTAT.1  TCTCTAGAGAGAGC.1  TCTCTAGAGGTTAC.1  TCTCTAGATGTCAG.1 \n##                 5                 1                 1                 6 \n##  TCTGATACACACAC.1  TCTGATACACGGGA.1  TCTGATACAGTCAC.1  TCTGATACATCGTG.1 \n##                 1                 1                 0                 3 \n##  TCTGATACCCGAAT.1  TCTTACGATCACGA.1  TCTTACGATGAGAA.1  TCTTCAGAAACCAC.1 \n##                11                 3                 3                10 \n##  TCTTCAGACTACGA.1  TCTTCAGATCTTCA.1  TCTTCAGATGTTCT.1  TCTTCAGATTCATC.1 \n##                 5                 7                 0                 0 \n## TCTTCAGATTGAGC.11  TCTTGATGCCGATA.1  TCTTGATGCCTAAG.1  TCTTGATGCTGCAA.1 \n##                10                 1                 4                 0 \n##  TCTTGATGGCGTTA.1  TCTTGATGGGGTGA.1  TCTTGATGTCCTGC.1  TCTTGATGTTCCGC.1 \n##                 1                 1                 0                 1 \n##  TGAAATTGCATCAG.1  TGAAATTGCCGTAA.1  TGAAATTGCTGAAC.1  TGAAATTGGACGGA.1 \n##                 1                 0                10                 3 \n##  TGAAATTGGAGATA.1  TGAAATTGGCATAC.1  TGAAATTGGTCGAT.1  TGAAATTGGTTTGG.1 \n##                 1                 2                 2                 1 \n##  TGAAATTGTTTCTG.1  TGAACCGACGATAC.1  TGAACCGATCCAAG.1  TGAACCGATTTACC.1 \n##                 5                 5                 3                 0 \n##  TGAAGCACCCATAG.1 TGAAGCACTCTCTA.11  TGAAGCACTTGAGC.1  TGAAGCTGCATACG.1 \n##                 2                 4                 6                 0 \n##  TGAAGCTGCCGTTC.1  TGAAGCTGCGACAT.1  TGAATAACACACAC.1  TGAATAACTCTTAC.1 \n##                 2                 0                 0                 4 \n##  TGACACGACATTTC.1  TGACACGACGAACT.1  TGACACGACGTACA.1  TGACACGAGCTCCT.1 \n##                 4                 0                 0                 0 \n##  TGACACGAGGTAGG.1  TGACACGAGTTCGA.1  TGACCAGATGCTGA.1  TGACCGCTTTCGGA.1 \n##                 6                 0                 0                 7 \n##  TGACCGCTTTCTGT.1  TGACCGCTTTTACC.1  TGACGAACAGGAGC.1  TGACGAACATCAGC.1 \n##                 7                 2                 0                 0 \n##  TGACGAACCAGTCA.1  TGACGAACCCTTTA.1  TGACGAACCTATGG.1  TGACGAACGCGATT.1 \n##                 5                 6                 5                 2 \n##  TGACGAACTACGCA.1  TGACGATGACTAGC.1  TGACGATGAGTGCT.1  TGACGATGCACTAG.1 \n##                 9                 4                 4                 2 \n##  TGACGATGCATGAC.1  TGACGATGCCAAGT.1  TGACGATGCGCCTT.1  TGACGATGGTAAGA.1 \n##                 1                 5                 0                 4 \n##  TGACGCCTAGGAGC.1  TGACGCCTTCATTC.1  TGACTGGAATTCGG.1  TGACTGGATACAGC.1 \n##                 3                 0                 1                 2 \n##  TGACTGGATAGCCA.1  TGACTGGATCGTGA.1  TGACTTACAGTGTC.1  TGACTTACGAACCT.1 \n##                 1                 6                 1                 0 \n##  TGACTTACTACTTC.1  TGACTTACTTCTGT.1  TGACTTTGCGACAT.1  TGACTTTGCGGTAT.1 \n##                 0                 5                 0                 0 \n##  TGACTTTGCTGTGA.1  TGACTTTGGGTATC.1  TGACTTTGGTCTAG.1  TGACTTTGGTTTGG.1 \n##                 1                 4                 0                 1 \n##  TGACTTTGTGTTTC.1  TGACTTTGTTGGCA.1  TGAGACACCACACA.1  TGAGACACGACTAC.1 \n##                 6                 5                 4                 2 \n##  TGAGACACGGAACG.1  TGAGACACTGGTTG.1  TGAGACACTTCATC.1  TGAGACACTTCGCC.1 \n##                 6                 2                 1                 1 \n##  TGAGCAACATGCTG.1  TGAGCAACCCATGA.1  TGAGCAACGCGTAT.1  TGAGCAACGTGTAC.1 \n##                 2                 3                 0                 2 \n##  TGAGCAACTGAAGA.1  TGAGCTGAACCATG.1  TGAGCTGAACGTTG.1  TGAGCTGACACTTT.1 \n##                10                 0                 4                 0 \n##  TGAGCTGACCCACT.1  TGAGCTGACGCCTT.1  TGAGCTGACTATTC.1  TGAGCTGAGCCAAT.1 \n##                 1                 0                 3                 1 \n##  TGAGCTGAGCTTAG.1  TGAGCTGAGTCAAC.1 TGAGCTGAGTGCAT.11  TGAGGTACACTTTC.1 \n##                 0                 1                 2                 0 \n##  TGAGGTACAGAACA.1  TGAGGTACCGAGTT.1  TGAGGTACCTTCCG.1  TGAGGTACGAAACA.1 \n##                 1                 2                 2                 5 \n##  TGAGGTACGGAAGC.1  TGAGTCGAGAATCC.1  TGAGTCGATTGACG.1  TGAGTGACGTAAAG.1 \n##                 5                 2                 1                 6 \n## TGATAAACAAGAGT.11  TGATAAACCTAAGC.1  TGATAAACCTAGAC.1  TGATAAACCTCGCT.1 \n##                 7                 0                 3                 2 \n##  TGATAAACCTGCAA.1  TGATAAACGAAAGT.1  TGATACCTGCCCTT.1  TGATACCTGCCTTC.1 \n##                 2                 0                 5                 0 \n##  TGATACCTGCGAAG.1  TGATACCTGCTAAC.1  TGATACCTGGAAGC.1  TGATACCTGGCGAA.1 \n##                 6                 0                 6                 1 \n##  TGATACCTGTAAGA.1  TGATATGACCTGAA.1  TGATATGAGTCAAC.1  TGATATGATGTGCA.1 \n##                 1                 4                 1                 4 \n##  TGATCACTCGCCTT.1  TGATCACTGCAGAG.1  TGATCACTGTAAGA.1  TGATCACTTAAGGA.1 \n##                 2                 1                 2                 0 \n##  TGATCACTTGAGGG.1  TGATCGGAATGTGC.1  TGATCGGACCATGA.1  TGATCGGAGAGATA.1 \n##                 7                 1                 2                 4 \n##  TGATCGGATCAGGT.1  TGATTAGAAAGAGT.1  TGATTAGAGAACTC.1  TGATTAGAGGACGA.1 \n##                 4                 0                 2                 0 \n##  TGATTCACGCGGAA.1  TGATTCACGCTCCT.1  TGATTCACGTACCA.1  TGATTCACGTCGTA.1 \n##                 5                 2                 1                 1 \n##  TGATTCACTCACGA.1  TGATTCACTCAGTG.1  TGATTCACTGCATG.1  TGATTCTGCAGGAG.1 \n##                 5                 7                 4                 1 \n##  TGATTCTGGAAAGT.1  TGATTCTGGTCATG.1  TGATTCTGTAAGGA.1  TGCAACGAAAGTAG.1 \n##                 3                 0                 3                 6 \n##  TGCAACGAAAGTGA.1  TGCAACGACCTACC.1  TGCAACGATACTGG.1  TGCAACGATATCTC.1 \n##                 2                 4                 0                 1 \n##  TGCAACGATGAAGA.1  TGCAACGATTATCC.1  TGCAAGACAAGTGA.1  TGCAAGACGCGAGA.1 \n##                10                 1                 2                 6 \n##  TGCAAGACGTTAGC.1  TGCAAGACTGCTGA.1  TGCAAGACTTCAGG.1  TGCAAGTGCAGAAA.1 \n##                10                 4                 0                 0 \n##  TGCAAGTGCTTCTA.1  TGCAATCTAAACGA.1  TGCAATCTATTTCC.1  TGCAATCTGAGACG.1 \n##                 3                 0                 1                 0 \n##  TGCAATCTGCTTAG.1  TGCAATCTTCTATC.1  TGCAATCTTCTCGC.1  TGCAATCTTTTCAC.1 \n##                 8                 1                 0                 0 \n##  TGCACAGAAGTCGT.1  TGCACAGATAGCGT.1  TGCAGATGCTAAGC.1  TGCAGATGTCGTAG.1 \n##                 4                 8                 1                 1 \n##  TGCATGGAAATCGC.1  TGCATGGACTGTGA.1  TGCATGGAGAGGCA.1  TGCATGGAGTGTAC.1 \n##                 2                 0                 7                 2 \n##  TGCATGGATTACTC.1  TGCCAAGACAAGCT.1  TGCCAAGACTCAAG.1  TGCCAAGAGATAAG.1 \n##                 0                 5                 2                 0 \n## TGCCAAGAGCTTCC.11  TGCCAAGAGGGACA.1  TGCCAAGAGTGTCA.1  TGCCAAGATAAAGG.1 \n##                 0                 1                 3                 1 \n##  TGCCAAGATCTTCA.1  TGCCAAGATGCCAA.1  TGCCAAGATGGGAG.1  TGCCACTGAGAGTA.1 \n##                 1                 0                 1                 2 \n## TGCCACTGCATCAG.11  TGCCACTGGGAACG.1  TGCCAGCTACTACG.1  TGCCAGCTATCACG.1 \n##                 3                 0                 1                 8 \n##  TGCCCAACCTTGTT.1  TGCCCAACGGGAGT.1  TGCCGACTGGTAAA.1  TGCCGACTTCAGTG.1 \n##                 1                 1                 7                 1 \n##  TGCCGACTTGCCTC.1  TGCGAAACAGCTCA.1  TGCGAAACCTTCCG.1  TGCGAAACGTAAAG.1 \n##                 4                 0                 2                 9 \n##  TGCGATGAACCAAC.1  TGCGATGACTCTAT.1  TGCGATGAGGTGTT.1  TGCGATGAGTACCA.1 \n##                 1                 2                 5                 1 \n##  TGCGATGATCTCAT.1  TGCGCACTCAAAGA.1  TGCGCACTCAATCG.1  TGCGCACTGAACTC.1 \n##                 2                 1                 3                 0 \n##  TGCGCACTTCCTGC.1  TGCGCACTTTACTC.1  TGCGTAGACGTAAC.1  TGCGTAGACTTAGG.1 \n##                 1                 1                 6                 2 \n##  TGCGTAGAGCAGAG.1  TGCGTAGAGCATAC.1  TGCGTAGATAGACC.1  TGCTATACATTGGC.1 \n##                 3                 3                 0                 8 \n##  TGCTATACCCAGTA.1  TGCTATACGCTGAT.1  TGCTATACGGTGGA.1  TGCTATACTGACAC.1 \n##                 1                 0                 0                 1 \n##  TGCTGAGAAAACGA.1  TGCTGAGACATGAC.1  TGCTGAGACTTGAG.1  TGCTGAGATTCTTG.1 \n##                 0                 2                 0                 3 \n##  TGCTTAACAGCTCA.1  TGCTTAACCCTCCA.1  TGCTTAACGCCTTC.1  TGCTTAACTGGTGT.1 \n##                 1                 1                 1                 4 \n##  TGGAAAGAAACGAA.1 TGGAAAGAACTAGC.11  TGGAAAGAATGCCA.1  TGGAAAGACAGTTG.1 \n##                 2                10                 7                 1 \n##  TGGAAAGACTTTAC.1  TGGAAAGAGACAGG.1  TGGAAAGAGCGGAA.1  TGGAAAGAGGGATG.1 \n##                 0                 6                 0                 3 \n##  TGGAAAGATGCCCT.1  TGGAAAGATTCGGA.1  TGGAAAGATTCTGT.1  TGGAACACAGCCAT.1 \n##                 0                 3                 1                 2 \n##  TGGAACACAGCTAC.1  TGGAACACATCGTG.1  TGGAACACCTCCAC.1  TGGAACACTTTGTC.1 \n##                 4                 0                 1                 1 \n##  TGGAACTGACTAGC.1  TGGAACTGCAACCA.1  TGGAACTGCATCAG.1  TGGAACTGGCTATG.1 \n##                 3                 0                 1                 1 \n##  TGGAACTGGGTGAG.1  TGGAACTGGTCATG.1  TGGAACTGTGTCCC.1  TGGAAGCTAAGAAC.1 \n##                 0                 0                 2                 0 \n##  TGGACCCTCGCTAA.1  TGGACCCTGGAACG.1  TGGACCCTGTGCTA.1  TGGACCCTTGAGAA.1 \n##                 1                 0                 2                 0 \n##  TGGACTGAATGTCG.1  TGGACTGACACCAA.1  TGGACTGAGCGATT.1  TGGACTGAGCGGAA.1 \n##                 6                 1                 1                 1 \n##  TGGACTGAGTATCG.1  TGGAGACTACACAC.1  TGGAGACTCGAATC.1  TGGAGACTGACGGA.1 \n##                 1                 5                 0                 0 \n##  TGGAGACTGAGATA.1  TGGAGACTGTCGTA.1  TGGAGACTTTCCAT.1  TGGAGGGAAATCGC.1 \n##                 0                 5                 0                 3 \n##  TGGAGGGAAATGCC.1  TGGAGGGAAGGTTC.1  TGGAGGGACGGTAT.1  TGGAGGGACTCTTA.1 \n##                 1                 6                 0                 1 \n##  TGGAGGGAGGAGGT.1  TGGATGACGTTGTG.1  TGGATGTGAAACGA.1  TGGATGTGCTTCGC.1 \n##                 1                 0                 1                 0 \n##  TGGATGTGGATAAG.1  TGGATGTGGCAGAG.1  TGGATGTGTCCCGT.1  TGGATTCTAACGAA.1 \n##                 6                 0                 0                 3 \n##  TGGATTCTCGATAC.1  TGGATTCTGAACCT.1 TGGATTCTGAGGAC.11  TGGATTCTTACTTC.1 \n##                 0                 0                 1                 5 \n##  TGGCAATGAAAGTG.1  TGGCAATGCTGGTA.1  TGGCAATGTAGCGT.1  TGGCAATGTATCTC.1 \n##                 3                 0                 0                 7 \n## TGGCAATGTGCCTC.11  TGGCAATGTTAGGC.1  TGGCACCTGACGTT.1  TGGCACCTGGGCAA.1 \n##                 1                 1                 4                 0 \n##  TGGCACCTGGTAGG.1  TGGCACCTGTCATG.1  TGGCACCTTCGCAA.1  TGGGTATGGACAGG.1 \n##                 0                 9                 0                 1 \n##  TGGGTATGGGGAGT.1  TGGGTATGTGGAAA.1  TGGTACGAACACTG.1  TGGTACGAACCAGT.1 \n##                 1                 7                 3                 0 \n##  TGGTACGAAGCGGA.1  TGGTACGAGACGAG.1  TGGTAGACAAACGA.1  TGGTAGACATGACC.1 \n##                 4                 3                 8                 2 \n##  TGGTAGACCCGTTC.1  TGGTAGACCTTACT.1  TGGTAGACGCTTCC.1  TGGTAGACGTGTCA.1 \n##                 2                 5                 3                 0 \n##  TGGTAGACTGAGCT.1  TGGTAGTGATGCTG.1  TGGTAGTGCACTCC.1  TGGTAGTGGTGAGG.1 \n##                 0                 2                 4                 0 \n##  TGGTAGTGTGGTAC.1  TGGTATCTATGTGC.1  TGGTATCTCACTAG.1  TGGTATCTCGTTAG.1 \n##                 4                 5                 0                 0 \n##  TGGTATCTGACGAG.1  TGGTATCTGGAGTG.1  TGGTATCTTGAACC.1  TGGTATCTTGTCGA.1 \n##                 4                 1                 6                 7 \n##  TGGTCAGAACGTGT.1  TGGTCAGAAGCTCA.1  TGGTCAGAAGTCTG.1  TGGTCAGAATTCGG.1 \n##                 0                 1                 0                 2 \n##  TGGTCAGACAAGCT.1  TGGTCAGACCCTTG.1  TGGTCAGACGAGAG.1  TGGTCAGACGTGTA.1 \n##                13                 0                 1                 1 \n##  TGGTCAGATCAGTG.1  TGGTTACTAACGGG.1  TGGTTACTACCTGA.1  TGGTTACTCTATGG.1 \n##                 1                 1                 0                 8 \n## TGGTTACTGGTTCA.11  TGGTTACTGTCGAT.1  TGGTTACTTGAACC.1  TGGTTACTTGCTAG.1 \n##                 0                 1                 4                 7 \n##  TGGTTACTTTAGGC.1  TGGTTACTTTTCGT.1 TGTAAAACCCCTAC.11  TGTAAAACCCTTGC.1 \n##                 0                 0                 2                 0 \n##  TGTAAAACGTAAGA.1  TGTAAAACGTCTAG.1  TGTAAAACTAACCG.1  TGTAAAACTCACGA.1 \n##                 4                 0                 5                 0 \n##  TGTAAAACTCCAGA.1  TGTAAAACTCCCGT.1  TGTAACCTCCGTAA.1  TGTAACCTCCTACC.1 \n##                 0                 1                 0                 1 \n##  TGTAACCTCGTCTC.1  TGTAACCTGCGTAT.1  TGTAACCTGCTGAT.1  TGTAACCTTGTCGA.1 \n##                 0                 5                 0                 2 \n##  TGTAACCTTTACCT.1  TGTAATGACAGCTA.1  TGTAATGACATGGT.1  TGTAATGACTTCTA.1 \n##                 1                 7                 2                 3 \n##  TGTAATGATAACGC.1  TGTAATGATGCCAA.1  TGTAATGATTCTGT.1  TGTACTTGAGCGGA.1 \n##                12                 3                 2                 0 \n##  TGTACTTGCAAGCT.1  TGTACTTGGCGATT.1  TGTACTTGTGAACC.1  TGTAGGTGACGTAC.1 \n##                 9                 3                 0                 3 \n##  TGTAGGTGCTACTT.1  TGTAGGTGGCGGAA.1  TGTAGGTGGGAACG.1  TGTAGGTGGTTCTT.1 \n##                 0                 1                 5                 0 \n##  TGTAGGTGTGACAC.1  TGTAGGTGTTCCGC.1  TGTAGGTGTTCGTT.1  TGTAGTCTAACCAC.1 \n##                 3                 4                 0                 9 \n##  TGTAGTCTACGACT.1  TGTAGTCTCAGTCA.1  TGTAGTCTCCCAAA.1  TGTAGTCTGTTTGG.1 \n##                 3                 2                 9                 2 \n##  TGTATCTGACGGAG.1  TGTATCTGAGCACT.1  TGTATCTGAGGGTG.1  TGTATCTGCACAAC.1 \n##                 0                 6                 2                 1 \n##  TGTATCTGCGTCTC.1  TGTATCTGGCTATG.1  TGTATCTGTGGTTG.1  TGTATGCTAAAGCA.1 \n##                 0                 5                 0                 3 \n##  TGTATGCTATCACG.1  TGTATGCTGGAGCA.1  TGTCAGGACATTCT.1  TGTCAGGACCTATT.1 \n##                 0                 4                 0                 1 \n## TGTCAGGACGTAAC.11  TGTCAGGACTCAAG.1  TGTCAGGAGACAGG.1  TGTCAGGAGGACAG.1 \n##                 0                 2                 5                 0 \n##  TGTCAGGATAGCCA.1  TGTCAGGATCGTAG.1  TGTCAGGATTGGTG.1  TGTCTAACAGAACA.1 \n##                 1                 9                 5                 4 \n##  TGTCTAACAGAGGC.1  TGTCTAACATCGAC.1  TGTCTAACCCTTGC.1  TGTCTAACGCAGTT.1 \n##                 7                 0                 2                 1 \n##  TGTCTAACTCCTCG.1  TGTCTAACTCTCTA.1  TGTCTAACTTGCAG.1  TGTGACGAAAGAGT.1 \n##                 8                 6                 3                 0 \n##  TGTGACGAAAGTGA.1  TGTGACGAACAGTC.1  TGTGACGAACCTGA.1  TGTGACGAAGTAGA.1 \n##                 9                 4                 0                 3 \n##  TGTGACGACCCTAC.1  TGTGACGACGGAGA.1  TGTGACGACGTTAG.1  TGTGACGAGGGTGA.1 \n##                 0                 1                 3                 7 \n##  TGTGACGATATCGG.1  TGTGAGACAAACGA.1  TGTGAGACCCTCCA.1  TGTGAGTGCCGAAT.1 \n##                 0                 1                 0                 5 \n##  TGTGAGTGGAGATA.1  TGTGAGTGTCTCAT.1  TGTGAGTGTCTTAC.1  TGTGATCTAGTCAC.1 \n##                 1                 0                13                 2 \n##  TGTGATCTCACAAC.1  TGTGATCTGACGGA.1  TGTGATCTTGCTCC.1  TGTGATCTTTGACG.1 \n##                 0                 4                 0                 4 \n##  TGTGGATGAAACAG.1  TGTGGATGCTCAAG.1  TGTGGATGCTCCAC.1  TGTGGATGGTCCTC.1 \n##                 3                 0                 5                 3 \n##  TGTGGATGTCGCAA.1  TGTGGATGTCTTAC.1  TGTGGATGTCTTTG.1  TGTTAAGAAGTGCT.1 \n##                 4                 2                 0                10 \n##  TGTTAAGAATGCCA.1  TGTTAAGATGTTCT.1  TGTTAAGATTTACC.1  TGTTACACCCCACT.1 \n##                 5                 5                 1                 0 \n##  TGTTACACCCTTAT.1  TGTTACACGTACGT.1  TGTTACACGTTGAC.1  TGTTACACTCTTCA.1 \n##                 0                 0                 0                 8 \n##  TGTTACACTGATGC.1  TGTTACTGACCTCC.1  TGTTACTGCACACA.1  TGTTACTGCCTATT.1 \n##                 3                 1                 9                 7 \n##  TGTTACTGCGATAC.1  TTAACCACAGGCGA.1  TTAACCACAGGGTG.1  TTAACCACAGTAGA.1 \n##                 0                 2                 3                 0 \n##  TTAACCACCCCTTG.1  TTAACCACCCGATA.1  TTAACCACCCGTAA.1  TTAACCACCTGCAA.1 \n##                 9                 0                 4                 0 \n##  TTAACCACGCTCCT.1  TTAACCACGGTACT.1  TTACACACCAAAGA.1  TTACACACCCAAGT.1 \n##                 6                 8                 1                 3 \n##  TTACACACGTAGCT.1  TTACACACTAAGGA.1  TTACACACTGGTAC.1  TTACACACTGGTCA.1 \n##                 8                 3                 4                 2 \n##  TTACAGCTAAGGGC.1  TTACAGCTACGTAC.1  TTACAGCTGCGAAG.1  TTACAGCTGGTGTT.1 \n##                 0                 1                 1                 4 \n##  TTACAGCTTCCCGT.1  TTACAGCTTGTGGT.1  TTACCATGACGTGT.1  TTACCATGATAAGG.1 \n##                 0                 3                 6                 8 \n##  TTACCATGCAGCTA.1  TTACCATGGGTCAT.1  TTACCATGGTCCTC.1  TTACCATGTGAAGA.1 \n##                 1                 8                 5                 4 \n##  TTACGACTGGGACA.1  TTACGTACACCATG.1  TTACGTACACGACT.1  TTACGTACACGTGT.1 \n##                 6                 0                 2                 0 \n##  TTACGTACAGTGTC.1  TTACGTACATGTGC.1  TTACGTACCCATAG.1  TTACGTACCTTACT.1 \n##                 4                 2                 1                 3 \n##  TTACGTACTTCTTG.1  TTACTCGAAAAAGC.1  TTACTCGAAGCTAC.1  TTACTCGACTTATC.1 \n##                 0                 0                 0                 4 \n##  TTACTCGAGCGTAT.1  TTACTCGAGTGTTG.1  TTACTCGATTATCC.1  TTAGAATGCCTCGT.1 \n##                 1                 2                 7                 0 \n##  TTAGAATGCTCTTA.1  TTAGACCTAAACGA.1  TTAGACCTCATACG.1  TTAGACCTCCTGTC.1 \n##                 7                 2                 6                 1 \n##  TTAGACCTCGAATC.1  TTAGACCTGATAGA.1  TTAGACCTGGTCTA.1  TTAGACCTTGGAGG.1 \n##                 1                 1                 1                 2 \n##  TTAGCTACACGGAG.1  TTAGCTACCCACAA.1  TTAGCTACCCACCT.1  TTAGCTACCGATAC.1 \n##                 5                 0                 0                 8 \n##  TTAGCTACGAATGA.1  TTAGCTACGACTAC.1  TTAGCTACGGGATG.1  TTAGCTACTGGTTG.1 \n##                 7                 1                 6                 8 \n##  TTAGCTACTTGTCT.1  TTAGGGACACTGGT.1  TTAGGGACCAGATC.1  TTAGGGACCTTGAG.1 \n##                 0                 0                 4                 1 \n##  TTAGGGACGGTCAT.1  TTAGGGACTGTGGT.1  TTAGGGTGAGTCAC.1  TTAGGGTGATACCG.1 \n##                 9                 0                 0                 1 \n##  TTAGGGTGCAGAGG.1  TTAGGGTGCTACCC.1  TTAGGGTGCTCAAG.1  TTAGGGTGGCTGTA.1 \n##                 5                 1                 0                 1 \n##  TTAGGGTGGGTAGG.1  TTAGGGTGTCCTCG.1  TTAGGGTGTGAAGA.1  TTAGGTCTTAGTCG.1 \n##                 2                 4                 1                 2 \n##  TTAGTCACAGTGCT.1  TTAGTCACCTTTAC.1  TTAGTCACGACAAA.1  TTAGTCACTGCAGT.1 \n##                 0                 6                 0                 2 \n##  TTAGTCTGACGTAC.1  TTAGTCTGCAAAGA.1  TTAGTCTGCCTTCG.1  TTAGTCTGCTGTTT.1 \n##                 0                 1                 5                 8 \n##  TTAGTCTGCTTCCG.1  TTAGTCTGGCATAC.1  TTAGTCTGGGAAGC.1  TTAGTCTGGTAGCT.1 \n##                 6                 7                 3                 1 \n##  TTATCCGAAAGTGA.1  TTATCCGACCCAAA.1  TTATCCGAGCTACA.1 TTATCCGATGTTTC.11 \n##                 3                 1                 3                 2 \n##  TTATGAGAAGATGA.1  TTATGAGACAACTG.1  TTATGAGACGATAC.1  TTATGAGAGCATCA.1 \n##                 0                 9                 4                 3 \n##  TTATGAGAGCTGTA.1  TTATGAGATCTGGA.1  TTATGAGATTTCTG.1  TTATGCACCCTCGT.1 \n##                 0                 1                 0                 8 \n##  TTATGCACTCGATG.1  TTATGGCTAAGCAA.1  TTATGGCTAGGTTC.1  TTATGGCTTATGCG.1 \n##                 1                 0                 3                 0 \n##  TTATGGCTTGTCAG.1  TTATGGCTTTCCGC.1  TTATGGCTTTGTCT.1  TTATTCCTCAACTG.1 \n##                 3                 0                 1                 1 \n##  TTATTCCTGAATGA.1  TTATTCCTGAGGAC.1  TTATTCCTTAACCG.1  TTATTCCTTGCGTA.1 \n##                 2                 1                 1                 2 \n##  TTCAAAGAGTCGAT.1  TTCAAAGATTTCTG.1  TTCAACACACTACG.1  TTCAACACGTACAC.1 \n##                 0                 0                 1                 3 \n##  TTCAACACTAGCCA.1  TTCAAGCTCTTACT.1  TTCAAGCTGACGGA.1  TTCAAGCTTAGCGT.1 \n##                 2                 5                 6                 2 \n##  TTCAAGCTTGAGAA.1  TTCAAGCTTGTAGC.1  TTCAAGCTTTTGCT.1  TTCACAACGCAAGG.1 \n##                 8                 0                 0                 9 \n##  TTCACAACGCCAAT.1  TTCACCCTCCACCT.1  TTCACCCTGTATCG.1  TTCACCCTTGCTTT.1 \n##                 1                 0                 5                 1 \n##  TTCAGACTAAGGCG.1  TTCAGACTAGGTTC.1  TTCAGACTATCGGT.1  TTCAGACTATGCTG.1 \n##                 1                 4                 0                 5 \n##  TTCAGACTCATTGG.1  TTCAGACTCGTAAC.1  TTCAGACTCTCAAG.1  TTCAGACTGACGAG.1 \n##                 7                 4                 1                 3 \n##  TTCAGACTTTCTCA.1  TTCAGTACCTCTAT.1  TTCAGTACGGAGCA.1  TTCAGTTGAACCTG.1 \n##                 5                 1                 0                 8 \n##  TTCAGTTGACCCTC.1  TTCAGTTGCTGGAT.1  TTCAGTTGTGTGGT.1  TTCATCGAACTCAG.1 \n##                 6                 1                 2                 5 \n##  TTCATCGAATTCTC.1  TTCATCGACCAAGT.1  TTCATCGACCCAAA.1  TTCATCGAGACGAG.1 \n##                 0                 0                 0                 0 \n##  TTCATCGAGTACCA.1  TTCATCGATCTAGG.1  TTCATGACAACAGA.1  TTCATGACAACCTG.1 \n##                 7                 1                 1                 7 \n##  TTCATGACACTAGC.1  TTCATGACCAATCG.1  TTCATGACCCGTAA.1  TTCATGACCGAATC.1 \n##                 2                 1                 0                 9 \n##  TTCATGACGACGTT.1  TTCATGACGAGATA.1  TTCATGACGAGGTG.1  TTCATGACTTATCC.1 \n##                 0                 0                 1                 0 \n##  TTCATGACTTCAGG.1  TTCATGTGAAGATG.1  TTCATGTGGTTTGG.1  TTCATGTGTCTCCG.1 \n##                 7                 2                 0                10 \n##  TTCATGTGTTGAGC.1  TTCATTCTTATGCG.1  TTCATTCTTCTTAC.1  TTCCAAACACAGCT.1 \n##                 0                 4                 5                 1 \n##  TTCCAAACAGCGTT.1  TTCCAAACCTCCAC.1  TTCCAAACGCCAAT.1  TTCCAAACTTGTCT.1 \n##                 0                 0                 1                 2 \n##  TTCCATGAAGCTCA.1  TTCCATGACCATAG.1  TTCCATGACTTGCC.1  TTCCCACTCGTAGT.1 \n##                 0                 9                 1                 0 \n##  TTCCCACTGGTGGA.1  TTCCCACTTGATGC.1  TTCCTAGAACAGCT.1  TTCCTAGAGGTGAG.1 \n##                 5                 0                 0                 0 \n##  TTCGAGGAACGGTT.1  TTCGAGGACAGAGG.1  TTCGAGGACCGCTT.1  TTCGAGGAGGGCAA.1 \n##                 0                 3                 0                 5 \n##  TTCGAGGATGAAGA.1  TTCGATTGACCAAC.1  TTCGATTGTCAGAC.1  TTCGATTGTCCTGC.1 \n##                 1                 2                 0                 1 \n##  TTCGGAGAACACCA.1  TTCGGAGATTTCAC.1  TTCGTATGAACCTG.1  TTCGTATGGAGAGC.1 \n##                11                 4                 0                 0 \n##  TTCGTATGTGCGTA.1  TTCGTATGTTCCGC.1  TTCTACGACTGCTC.1  TTCTAGTGCTGGAT.1 \n##                 5                 0                 0                 2 \n##  TTCTAGTGGGTGTT.1  TTCTAGTGTAGTCG.1  TTCTCAGAAACAGA.1  TTCTCAGAACCAAC.1 \n##                 8                 5                 0                 0 \n##  TTCTGATGACACCA.1  TTCTGATGAGATCC.1  TTCTTACTAAGTAG.1  TTCTTACTCGAATC.1 \n##                 2                 9                 3                 0 \n##  TTCTTACTCTGAAC.1  TTCTTACTCTGAGT.1  TTCTTACTGACTAC.1  TTCTTACTTGCGTA.1 \n##                 0                 2                 9                 1 \n##  TTGAACCTAACCGT.1  TTGAACCTACGACT.1  TTGAACCTACGTAC.1  TTGAACCTCTCTTA.1 \n##                 8                 5                 4                 0 \n##  TTGAACCTCTTATC.1  TTGAACCTGTGCAT.1  TTGAACCTTTACTC.1  TTGAACCTTTCACT.1 \n##                 3                 1                 4                 1 \n##  TTGAATGAACCAGT.1  TTGAATGAGAGGAC.1  TTGAATGAGTCTTT.1  TTGACACTAGTACC.1 \n##                 7                 3                 0                 2 \n##  TTGACACTCCGATA.1  TTGACACTGGTCTA.1  TTGACACTGTGCTA.1  TTGACACTTCCTGC.1 \n##                 4                 9                 1                 4 \n##  TTGACACTTTGGTG.1  TTGAGGACAAGCCT.1  TTGAGGACACGACT.1  TTGAGGACAGGAGC.1 \n##                 8                 1                 0                 3 \n##  TTGAGGACGTTCGA.1  TTGAGGACTCGCTC.1  TTGAGGTGAACCAC.1 TTGAGGTGAAGAAC.11 \n##                 4                 1                 0                 5 \n##  TTGAGGTGAGAGGC.1  TTGAGGTGTGACAC.1  TTGAGGTGTTCGTT.1 TTGATCTGACACTG.11 \n##                 3                 3                 2                 4 \n##  TTGATCTGATGCTG.1  TTGATCTGTCTTTG.1  TTGCATTGACTTTC.1  TTGCATTGCAGGAG.1 \n##                 2                 1                 5                 2 \n##  TTGCATTGGACGTT.1  TTGCATTGGTACGT.1  TTGCATTGTTGGTG.1  TTGCTAACGAGCAG.1 \n##                 3                 7                 3                 0 \n##  TTGCTATGAACAGA.1  TTGCTATGTCTTTG.1  TTGGAGACACTGGT.1  TTGGAGACAGCGTT.1 \n##                 1                 5                 0                 1 \n##  TTGGAGTGACGTTG.1  TTGGAGTGAGATCC.1  TTGGAGTGCATGCA.1 TTGGAGTGCTCGAA.11 \n##                 1                 1                 0                 0 \n##  TTGGAGTGGTTGCA.1  TTGGGAACCAACCA.1  TTGGGAACCTTGTT.1  TTGGGAACGTGTTG.1 \n##                 6                 0                 1                 8 \n##  TTGGTACTAGTCTG.1  TTGGTACTCCACAA.1  TTGGTACTCCTTGC.1  TTGGTACTCGCAAT.1 \n##                 1                 0                 2                 1 \n##  TTGGTACTCTTGAG.1  TTGGTACTGTCAAC.1  TTGGTACTTTGCTT.1  TTGTACACAAAAGC.1 \n##                 1                 0                 3                 3 \n##  TTGTACACAAGAGT.1  TTGTACACCTGGTA.1  TTGTACACCTTACT.1  TTGTACACGACGAG.1 \n##                 2                 1                 4                 9 \n##  TTGTACACGGCATT.1  TTGTACACGTCATG.1  TTGTACACTACTCT.1  TTGTAGCTAGAAGT.1 \n##                 3                 0                 3                 0 \n##  TTGTAGCTCCAGTA.1  TTGTAGCTGAAAGT.1  TTGTAGCTGAATAG.1  TTGTAGCTTAAGCC.1 \n##                 1                 0                 2                 1 \n##  TTGTAGCTTGGTTG.1  TTGTCATGCCGATA.1  TTGTCATGTTAGGC.1  TTGTCATGTTTGGG.1 \n##                 4                 0                 0                 0 \n##  TTTAGAGAAGTGCT.1  TTTAGAGACTAGCA.1  TTTAGAGATCTCTA.1  TTTAGAGATGGTAC.1 \n##                 6                 7                 1                 0 \n##  TTTAGCTGAGAGTA.1  TTTAGCTGCAGAGG.1 TTTAGCTGCGAACT.11  TTTAGCTGCTAGTG.1 \n##                 3                 2                 0                 6 \n##  TTTAGCTGGCCTTC.1  TTTAGCTGGGGAGT.1  TTTAGCTGGTCATG.1  TTTAGCTGTGCCAA.1 \n##                 1                 0                 0                 0 \n##  TTTAGGCTCAGTCA.1  TTTAGGCTCTTGTT.1  TTTAGGCTTAAGGA.1  TTTAGGCTTACTCT.1 \n##                 6                 1                 5                 1 \n##  TTTAGGCTTCTTCA.1  TTTATCCTAGGAGC.1  TTTATCCTCTCTTA.1 TTTATCCTGCGAGA.11 \n##                 5                 0                 3                 9 \n##  TTTATCCTGGCATT.1  TTTATCCTTACGCA.1  TTTATCCTTCAGTG.1  TTTATCCTTCTAGG.1 \n##                 4                 2                 3                 0 \n##  TTTCACGAAACTGC.1  TTTCACGAAAGCAA.1  TTTCACGAAAGTAG.1  TTTCACGACCAACA.1 \n##                 0                 1                 1                 3 \n##  TTTCACGAGCGAAG.1  TTTCACGAGCGATT.1  TTTCACGAGGACAG.1  TTTCACGATCTCCG.1 \n##                 3                 9                 4                 0 \n##  TTTCAGTGAGCATC.1  TTTCAGTGATTCGG.1  TTTCAGTGCCACCT.1  TTTCAGTGCGAGAG.1 \n##                 6                 1                 0                 6 \n##  TTTCAGTGTCACGA.1  TTTCCAGACGAGTT.1  TTTCCAGAGAGCAG.1  TTTCCAGAGTCTAG.1 \n##                 1                 0                 2                 1 \n##  TTTCCAGAGTTGGT.1  TTTCCAGATGGTAC.1  TTTCCAGATGGTGT.1  TTTCGAACGCTGTA.1 \n##                 5                 4                 1                 4 \n##  TTTCGAACTGTCAG.1  TTTCGAACTGTGCA.1  TTTCTACTGGTATC.1  TTTCTACTTCAGAC.1 \n##                 1                 2                 2                 6 \n##  TTTGACTGACGTAC.1  TTTGACTGATCACG.1  TTTGACTGCCCACT.1  TTTGACTGCCCTAC.1 \n##                 1                 0                 0                 0 \n##  TTTGACTGCTACCC.1  TTTGACTGCTTGGA.1  TTTGACTGGCGAAG.1  TTTGACTGGGTACT.1 \n##                 1                 2                 3                 3 \n##  TTTGCATGACGTAC.1  TTTGCATGCCTGTC.1  TTTGCATGCTAAGC.1  TTTGCATGGGACGA.1 \n##                 2                 3                 1                 1 \n## Levels: 0 1 2 3 4 5 6 7 8 9 10 11 12 13\n</code></pre> <pre><code>ifnb.filtered &lt;- RenameIdents(ifnb.filtered, '4' = 'CD16 Mono') # Let's rename cells in cluster 3 with a new cell type label\nIdents(ifnb.filtered) # we can take a look at the cell identities again\n</code></pre> Cell identities <pre><code>##  AAACATACATTTCC.1  AAACATACCAGAAA.1  AAACATACCTCGCT.1  AAACATACCTGGTA.1 \n##                 0                 0                 0                11 \n##  AAACATACGATGAA.1  AAACATACGGCATT.1  AAACATACTGCGTA.1  AAACATACTGCTGA.1 \n##                 2                 0                 7                 1 \n##  AAACATTGAGTGTC.1  AAACATTGCTTCGC.1  AAACCGTGAGCCAT.1  AAACCGTGGAGGCA.1 \n##                 5                 0                 1                 7 \n##  AAACCGTGTGCTAG.1  AAACGCACACTTTC.1  AAACGCACAGTACC.1  AAACGCACCAACCA.1 \n##                 5                 5                10                 1 \n##  AAACGCACGCTGTA.1  AAACGCACGGGAGT.1  AAACGCACTCGCCT.1  AAACGCTGACCTTT.1 \n##                 9                 1                 0                 7 \n##  AAACGCTGCAGTTG.1  AAACGCTGCCTAAG.1  AAACGCTGCGTTGA.1  AAACGCTGCTGACA.1 \n##                 5                 1                 1                 9 \n##  AAACGCTGGATAAG.1  AAACGCTGGGACAG.1  AAACGCTGGGGATG.1  AAACGCTGGGTTTG.1 \n##                 1                 0                 0                 5 \n##  AAACGCTGTAGCGT.1  AAACGCTGTGCTAG.1  AAACGCTGTTCCAT.1  AAACGGCTAGAGTA.1 \n##                 3                 9                 7                 0 \n##  AAACGGCTAGTACC.1  AAACGGCTGGTCAT.1  AAACGGCTTACTCT.1  AAACGGCTTCTCTA.1 \n##                 1                 5         CD16 Mono                 0 \n##  AAACTTGACCTGAA.1  AAACTTGACTCTTA.1  AAACTTGACTGAGT.1  AAACTTGACTGGAT.1 \n##                 0                 6                 3         CD16 Mono \n##  AAACTTGAGACGAG.1  AAACTTGAGCCCTT.1  AAACTTGAGGAAAT.1  AAAGACGAAACAGA.1 \n##                 6                 2                 2                 0 \n##  AAAGACGAACACGT.1  AAAGACGAAGTCTG.1  AAAGACGACCCGTT.1  AAAGACGACGCCTT.1 \n##                 2                 1                 6                 5 \n##  AAAGACGACGGAGA.1  AAAGACGAGTAAGA.1  AAAGAGACGAGGTG.1  AAAGAGACTCAGAC.1 \n##                 1                 0                 0                 1 \n##  AAAGAGACTCTGGA.1  AAAGATCTACCCTC.1  AAAGATCTGACACT.1  AAAGATCTTGCAGT.1 \n##                 2                 0                 1                 0 \n##  AAAGCAGAAGTTCG.1  AAAGCAGAGTTTCT.1  AAAGCAGATGCAAC.1  AAAGCCTGAAGTAG.1 \n##                10                 0         CD16 Mono                 0 \n##  AAAGCCTGACGTGT.1  AAAGCCTGCTAGCA.1  AAAGCCTGGCTAAC.1  AAAGCCTGGGATTC.1 \n##                 1                 3                 5         CD16 Mono \n##  AAAGCCTGTACAGC.1  AAAGCCTGTGGTAC.1  AAAGGCCTAAACGA.1  AAAGGCCTAGTCTG.1 \n##                 5                 2         CD16 Mono                 0 \n##  AAAGGCCTCGAGAG.1  AAAGGCCTGAGGAC.1  AAAGTTTGAACCAC.1  AAAGTTTGACTCTT.1 \n##                12         CD16 Mono                 3                 7 \n##  AAAGTTTGCGAGAG.1  AAAGTTTGCTGAGT.1  AAAGTTTGTAGCGT.1  AAAGTTTGTGTGGT.1 \n##         CD16 Mono                 1                 2                 0 \n##  AAAGTTTGTTCGTT.1  AAATACTGGGTTCA.1  AAATACTGGTTCTT.1  AAATACTGGTTGAC.1 \n##                 0         CD16 Mono                 0                 7 \n##  AAATCAACCTGTAG.1  AAATCAACGGTCAT.1  AAATCATGACACCA.1  AAATCATGACACGT.1 \n##         CD16 Mono                 0                 1                 2 \n##  AAATCATGCTCTAT.1  AAATCATGGAGAGC.1  AAATCATGGGTTCA.1  AAATCCCTAAGAAC.1 \n##                 0                 0                 0                 0 \n##  AAATCCCTACACAC.1  AAATCCCTCTTGAG.1  AAATCCCTGCTATG.1  AAATCCCTGTTGAC.1 \n##                 2                 0                 2                 2 \n##  AAATCCCTTAGCGT.1  AAATCCCTTTCCAT.1  AAATCTGACTTTAC.1  AAATCTGAGCTTCC.1 \n##                 6                 3                 3                 0 \n##  AAATGGGAAACCTG.1  AAATGGGACTCATT.1  AAATGGGAGACAGG.1  AAATGGGAGGGAGT.1 \n##                10                 5                 3                 0 \n##  AAATGGGAGTCCTC.1  AAATGGGAGTCTGA.1  AAATGTTGAGAGTA.1  AAATGTTGAGCTCA.1 \n##                 1                 0                 6                 0 \n##  AAATGTTGCCAAGT.1  AAATGTTGCCTCCA.1  AAATGTTGTCTTTG.1  AAATTCGAAGCTCA.1 \n##                 2         CD16 Mono                 0                 0 \n##  AAATTCGATGTGCA.1  AAATTGACAAACAG.1  AAATTGACCACTTT.1  AAATTGACCTGAGT.1 \n##                 0                 0                 1                 0 \n##  AAATTGACCTGATG.1  AAATTGACTGCCCT.1  AAATTGACTTTCTG.1  AACAAACTCATGCA.1 \n##                 0                 8                 1                 3 \n##  AACAATACCCCAAA.1  AACAATACCCCTCA.1  AACAATACGCAAGG.1  AACAATACGGATTC.1 \n##                 1                 0                 0                 5 \n##  AACACGTGAAACGA.1  AACACGTGCCCTCA.1  AACACGTGCGCATA.1  AACACGTGCTGTGA.1 \n##                 2         CD16 Mono                10                 5 \n##  AACACTCTAAGGGC.1  AACACTCTAAGTAG.1  AACACTCTCAGAGG.1  AACACTCTCTTGTT.1 \n##                 1                 0                 2                 0 \n##  AACACTCTGAAAGT.1  AACACTCTGGAGGT.1  AACAGAGAACGGTT.1  AACAGAGAAGTACC.1 \n##                 0                 0                 0                 1 \n##  AACAGAGACAGATC.1  AACAGAGACGTTGA.1  AACAGAGACTTCCG.1  AACAGAGAGGCGAA.1 \n##                 1                 2                 3                 2 \n##  AACAGAGATGCTTT.1  AACAGCACAACGTC.1  AACAGCACAGTCAC.1  AACAGCACATCGAC.1 \n##                 0                 0                 0                 1 \n##  AACAGCACGAGACG.1  AACAGCACTGGGAG.1  AACCACGAAGTAGA.1  AACCACGAAGTGTC.1 \n##                 0                 0                 2                 3 \n##  AACCACGACCACCT.1  AACCACGAGAATCC.1  AACCACGAGGTGGA.1  AACCAGTGGACGAG.1 \n##                 9                 0                 3                 1 \n##  AACCAGTGTTTCTG.1  AACCCAGAAGCCAT.1  AACCCAGACCGATA.1  AACCCAGAGCTGTA.1 \n##                 3                 3                 0                 5 \n##  AACCCAGAGTAGGG.1  AACCCAGATCCTCG.1  AACCCAGATGAGGG.1  AACCGATGCTGATG.1 \n##                 1                 7                 8                 2 \n##  AACCGATGTCCAGA.1  AACCGCCTAGTTCG.1  AACCGCCTCAGGAG.1  AACCGCCTGCATAC.1 \n##                 1                12                 3                 1 \n##  AACCGCCTGTGTAC.1  AACCGCCTTGCCTC.1  AACCTACTTCTCCG.1  AACCTTACAGGGTG.1 \n##                 1                 3                 1                 5 \n##  AACCTTACCAAGCT.1  AACCTTACGCTACA.1  AACCTTACGGTATC.1  AACCTTACTCCCAC.1 \n##                 0                 2                 1                 1 \n##  AACCTTACTTTGTC.1  AACCTTTGAAGGTA.1  AACCTTTGCGCATA.1  AACCTTTGTGCCCT.1 \n##                 2                 1                 9                 0 \n##  AACGCAACTTGCAG.1  AACGCATGACCTAG.1  AACGCATGGAACTC.1  AACGCATGGCCATA.1 \n##                 1                 0         CD16 Mono                 0 \n##  AACGCATGGGGAGT.1  AACGCATGTAGAAG.1  AACGCCCTAATCGC.1  AACGCCCTATTGGC.1 \n##                 5                 0                 1                 1 \n##  AACGCCCTTCTTAC.1  AACGCCCTTCTTTG.1  AACGGTACAAGAGT.1  AACGGTACGGTCTA.1 \n##                 6                 7                 0                 0 \n##  AACGGTTGACGTTG.1  AACGGTTGACTACG.1  AACGGTTGTCCAGA.1  AACGTCGACATTGG.1 \n##                 9         CD16 Mono                 0                 8 \n##  AACGTCGACGTTGA.1  AACGTGTGAAGGTA.1  AACGTGTGCACTCC.1  AACGTGTGTATTCC.1 \n##                 8                 2                 0                 0 \n##  AACGTTCTATGTCG.1  AACGTTCTCGTTGA.1  AACGTTCTCTAGTG.1  AACGTTCTTCCGTC.1 \n##                 0                 0                 0                 7 \n##  AACGTTCTTTCATC.1  AACTACCTACCATG.1  AACTACCTCCCTAC.1  AACTACCTGTAAAG.1 \n##                 3                 1                 8         CD16 Mono \n##  AACTACCTGTACAC.1  AACTACCTTCGCCT.1  AACTACCTTTCGGA.1  AACTACCTTTGGCA.1 \n##                 5                 1                10                 2 \n##  AACTCACTCTTGTT.1  AACTCACTGACGTT.1  AACTCACTTTAGGC.1  AACTCGGAATTCTC.1 \n##                 0                 0                 9                 0 \n##  AACTCGGACTGCAA.1  AACTCGGAGCATAC.1  AACTCGGATGCAGT.1  AACTCTTGCACACA.1 \n##         CD16 Mono                 9         CD16 Mono                 1 \n##  AACTCTTGCATTCT.1  AACTCTTGGTAGGG.1  AACTCTTGTTCACT.1  AACTCTTGTTCCCG.1 \n##         CD16 Mono                 0                 0                 2 \n##  AACTGTCTATCTCT.1  AACTGTCTGACGTT.1  AACTTGCTCGAGAG.1  AACTTGCTTGAGCT.1 \n##                 0                 3                 1                 1 \n##  AACTTGCTTGGTTG.1  AAGAACGAAACGAA.1  AAGAACGAAGAGTA.1  AAGAACGACAGGAG.1 \n##         CD16 Mono         CD16 Mono                 9                 0 \n##  AAGAACGACCTCAC.1  AAGAACGATACGCA.1  AAGAACGATCGCAA.1  AAGAAGACCCAAGT.1 \n##                 7                 0                 2                 0 \n##  AAGAAGACCGTGAT.1  AAGAAGACCTGTCC.1  AAGAAGACGGTGGA.1  AAGAAGACTGCTGA.1 \n##                 0                 1                 0                 2 \n##  AAGAATCTCTGTGA.1  AAGAATCTGTGAGG.1  AAGACAGAACCTGA.1  AAGACAGAGCCCTT.1 \n##                 6                 0                 0                 0 \n##  AAGACAGAGTTAGC.1  AAGAGATGACGCTA.1  AAGAGATGGGTCAT.1  AAGAGATGTTGAGC.1 \n##                 0                 5                 5                 0 \n##  AAGATGGACCGATA.1  AAGATGGATCCAAG.1  AAGATGGATCTTTG.1  AAGATTACCAAGCT.1 \n##                 1                 6                11                 6 \n##  AAGATTACGGAGTG.1  AAGATTACTCTCCG.1  AAGCAAGAAGGGTG.1  AAGCAAGATAACCG.1 \n##                 3                 0                 2         CD16 Mono \n##  AAGCAAGATATGCG.1  AAGCAAGATCACCC.1  AAGCAAGATGGTCA.1  AAGCAAGATTGCGA.1 \n##                 1                 0         CD16 Mono                10 \n##  AAGCACTGAGGTCT.1  AAGCACTGCAAAGA.1  AAGCACTGCCATGA.1  AAGCCAACAGAATG.1 \n##                 0         CD16 Mono                 3                 2 \n##  AAGCCAACCTTGAG.1  AAGCCAACGTGTTG.1  AAGCCAACTTCGGA.1  AAGCCATGTCCCGT.1 \n##                12                 9                 0                 3 \n##  AAGCCATGTGTGGT.1  AAGCCTGATCAGTG.1  AAGCGACTATGTCG.1  AAGCGACTCTGGAT.1 \n##         CD16 Mono                 1                 1                 0 \n##  AAGCGACTGTCAAC.1  AAGCGACTGTCTGA.1  AAGCGACTTCTTAC.1  AAGCGACTTGCGTA.1 \n##                 0                 3                 1                 1 \n##  AAGCGACTTGCTAG.1  AAGCGTACGGTGTT.1  AAGCGTACTGAAGA.1  AAGCGTACTTTGCT.1 \n##                 0                 1                 5                 1 \n##  AAGGCTACCTTGTT.1  AAGGCTTGCGTACA.1  AAGGCTTGGAGACG.1  AAGGCTTGGTTCGA.1 \n##                 2                 1                 8                10 \n##  AAGGCTTGTCAGAC.1  AAGGCTTGTCAGTG.1  AAGGCTTGTCCAGA.1  AAGGCTTGTTCCAT.1 \n##                 0                 0                 1                 6 \n##  AAGGTCACACCTTT.1  AAGGTCACCGGGAA.1  AAGGTCACTCGATG.1  AAGGTCACTGGAAA.1 \n##                 3                 2                 2                 3 \n##  AAGGTCTGACGGTT.1  AAGGTCTGTGTGGT.1  AAGGTGCTTAAGCC.1  AAGGTGCTTCAGAC.1 \n##                 2                 1                 0                 1 \n##  AAGTAACTATCAGC.1  AAGTAACTGTCAAC.1  AAGTAACTTCAGTG.1  AAGTAGGACACAAC.1 \n##                 0                 2                 6                 0 \n##  AAGTAGGAGACGTT.1  AAGTAGGAGGAAGC.1  AAGTAGGAGTCGTA.1  AAGTAGGATTATCC.1 \n##                 0                 0                 3                 0 \n##  AAGTATACCGCCTT.1  AAGTATACTGGAAA.1  AAGTCCGACGTAAC.1  AAGTCCGACTCAAG.1 \n##                 3                 1                 2                 0 \n##  AAGTCCGACTCTCG.1  AAGTCCGACTGGTA.1  AAGTCCGATTCGGA.1  AAGTCTCTGAAAGT.1 \n##                 1                 2                 1                 1 \n##  AAGTCTCTGGTAAA.1  AAGTGCACCCTTTA.1  AAGTGCACCTACGA.1  AAGTGCACCTACTT.1 \n##         CD16 Mono                 0                 8                 2 \n##  AAGTGCACGTGAGG.1  AAGTGCACTCTAGG.1  AAGTGCACTCTATC.1  AAGTGCACTGCTCC.1 \n##                 0                 0                 0                 1 \n##  AAGTGGCTACCCTC.1  AAGTGGCTACGGGA.1  AAGTGGCTACTGTG.1  AAGTGGCTCCAGTA.1 \n##                 1                 1                 0                 0 \n##  AAGTGGCTCCTACC.1  AAGTGGCTCGGGAA.1  AAGTGGCTGGTGTT.1  AAGTGGCTGTAAAG.1 \n##                 0                 0                 3         CD16 Mono \n##  AAGTTATGAGTTCG.1  AAGTTATGCAAGCT.1  AAGTTATGCAGAAA.1  AAGTTATGCAGATC.1 \n##                 2                 0                 0                 0 \n##  AAGTTATGCGGGAA.1  AAGTTATGCTAAGC.1  AAGTTATGGGTGTT.1  AAGTTATGGTCGAT.1 \n##                 2                 0                 3                 0 \n##  AAGTTATGTGCTAG.1  AAGTTATGTTACTC.1  AAGTTCCTACCAAC.1  AAGTTCCTAGAAGT.1 \n##                 1                 2                 3                 2 \n##  AAGTTCCTTGCAAC.1  AATAACACTGGTTG.1  AATAAGCTAGTTCG.1  AATAAGCTCTATTC.1 \n##                 1                 3                 8                 2 \n##  AATAAGCTGGACGA.1  AATAAGCTTGCCCT.1  AATAAGCTTGGAAA.1  AATACCCTACCTTT.1 \n##                 6                 1                 2                 8 \n##  AATACCCTGACACT.1  AATACCCTGGACGA.1  AATACCCTGTCGAT.1  AATACCCTTTAGGC.1 \n##                 5                10                 1                 1 \n##  AATACTGAAGGAGC.1  AATACTGAAGTTCG.1  AATACTGAGGTACT.1  AATACTGATCGCTC.1 \n##                 0                 0                 0                 0 \n##  AATACTGATTGTGG.1  AATAGGGAAAGGGC.1  AATAGGGACAGATC.1  AATAGGGACATTTC.1 \n##                 1                 0                 5                 7 \n##  AATAGGGAGGGAGT.1  AATAGGGATTATCC.1  AATATCGAGAGGCA.1  AATCAAACACCTTT.1 \n##                 0                 8                 0         CD16 Mono \n##  AATCAAACCCTGTC.1  AATCAAACTCCTTA.1  AATCCGGAGCTACA.1  AATCCGGATTGCTT.1 \n##                 0                 0                 1                 0 \n##  AATCCTACACGGGA.1  AATCCTACGGATTC.1  AATCCTACTCGTTT.1  AATCCTACTGCAGT.1 \n##                 3                 0         CD16 Mono                 0 \n##  AATCCTACTGTCCC.1  AATCCTTGCGCTAA.1  AATCCTTGCTCTTA.1  AATCCTTGGTATGC.1 \n##                 2                 0                 0                 8 \n##  AATCCTTGGTGTTG.1  AATCGGTGAGGAGC.1  AATCGGTGGAGATA.1  AATCGGTGGGTACT.1 \n##                 0                 1                 1                 0 \n##  AATCGGTGGTAAAG.1  AATCGGTGGTCAAC.1  AATCGGTGTTGGTG.1  AATCTAGAAAAGCA.1 \n##                 2                 1                 6                 9 \n##  AATCTAGAGCCTTC.1  AATCTAGAGGCATT.1  AATCTAGATAGCCA.1  AATCTAGATTCTAC.1 \n##                 0                 0                 0                 7 \n##  AATCTCACGACGAG.1  AATCTCACTTCGCC.1  AATCTCTGAGTCGT.1  AATCTCTGAGTCTG.1 \n##                 6                 1                 0                 7 \n##  AATCTCTGTGGTCA.1  AATCTCTGTTCGTT.1  AATGAGGAGGGCAA.1  AATGCGTGCACACA.1 \n##                 3                 7                 5                 2 \n##  AATGCGTGGGGACA.1  AATGCGTGTCCCAC.1  AATGCGTGTGAACC.1  AATGGAGACAAAGA.1 \n##                 2                 6                 2                 0 \n##  AATGGAGAGTCTAG.1  AATGGAGATACGAC.1  AATGGAGATCTACT.1  AATGGAGATCTGGA.1 \n##                 0                 1                 0                 3 \n##  AATGGCTGAAGGTA.1  AATGGCTGCACCAA.1  AATGGCTGCATCAG.1  AATGGCTGGTTAGC.1 \n##                 0                 1                 0                 0 \n##  AATGGCTGTTCGTT.1  AATGTAACACGGTT.1  AATGTAACCTCCCA.1  AATGTAACGGTCAT.1 \n##                 6         CD16 Mono                 2                 0 \n##  AATGTAACTGAGAA.1  AATGTAACTGCATG.1  AATGTAACTTTGCT.1  AATGTCCTAGCATC.1 \n##                 0                 0                 0                 1 \n##  AATGTCCTCACAAC.1  AATGTCCTGGAACG.1  AATGTCCTTACGCA.1  AATGTTGAAAACAG.1 \n##                 2                 1                 3                 0 \n##  AATGTTGAAACAGA.1  AATGTTGAACTTTC.1  AATGTTGAATTTCC.1  AATGTTGAGAATAG.1 \n##                 7                 2                 0         CD16 Mono \n##  AATGTTGAGGTATC.1  AATGTTGATTGTGG.1  AATTACGAAAACGA.1  AATTACGAACCTTT.1 \n##                 3                 0                 1                11 \n##  AATTACGACTATTC.1  AATTACGATTGCTT.1  AATTCCTGATCAGC.1  AATTCCTGCAGAAA.1 \n##                 1                 0         CD16 Mono                 0 \n##  AATTCCTGCCACCT.1  AATTCCTGCTATTC.1  AATTCCTGGAACCT.1  AATTCCTGTTGACG.1 \n##                 0                 1         CD16 Mono                 0 \n##  AATTCCTGTTTACC.1  AATTGATGCACTAG.1  AATTGATGCATTGG.1  AATTGATGCCACCT.1 \n##                 0                 0                 3                 8 \n##  AATTGATGGAACCT.1  AATTGATGTGCTCC.1  AATTGTGAAGATGA.1  AATTGTGACCTAAG.1 \n##                 1                11                 7                 0 \n##  AATTGTGACGCTAA.1  AATTGTGACTGTTT.1  AATTGTGAGTACAC.1  ACAAAGGAACAGCT.1 \n##                 1         CD16 Mono                 0                 0 \n##  ACAAAGGAAGATCC.1  ACAAAGGAAGGAGC.1  ACAAAGGATCCAGA.1  ACAAAGGATTATCC.1 \n##                 0                 6                 5                 2 \n##  ACAAATTGACCTGA.1  ACAAATTGGTTCGA.1  ACAAATTGTAGAAG.1  ACAACCGAAGCATC.1 \n##                 0                 0                 5                 0 \n##  ACAACCGACGAGAG.1  ACAACCGACTGGTA.1  ACAACCGATCCAGA.1  ACAACCGATCTTCA.1 \n##                 0                 7         CD16 Mono                 3 \n##  ACAACCGATTTACC.1  ACAAGAGAAAAACG.1  ACAAGAGAAAACGA.1  ACAAGAGACAATCG.1 \n##                 5                 1                 0                 2 \n##  ACAAGAGACAGTTG.1  ACAAGAGACGAGTT.1  ACAAGAGACTTGAG.1  ACAAGAGATATCTC.1 \n##                 0                 3                 0                 8 \n##  ACAAGCACAATCGC.1  ACAAGCACCTTACT.1  ACAAGCACTACGAC.1  ACAAGCACTTCACT.1 \n##                 0                 0                 2                 1 \n##  ACAATAACACACTG.1  ACAATAACCGTACA.1  ACAATAACTGCCAA.1  ACAATCCTAGTCGT.1 \n##         CD16 Mono                 1         CD16 Mono                 0 \n##  ACAATCCTATCTCT.1  ACAATCCTTCGACA.1  ACAATCCTTCTTCA.1  ACAATCCTTGGAGG.1 \n##                 1                 2         CD16 Mono                 0 \n##  ACAATTGAAGCTCA.1  ACAATTGACTAGAC.1  ACAATTGATTCATC.1  ACACAGACTTTCAC.1 \n##                 0                 2                 0                 1 \n##  ACACATCTACCAGT.1  ACACATCTCGCCTT.1  ACACATCTCTAGAC.1  ACACATCTCTGTGA.1 \n##                 0                 0                 2                 2 \n##  ACACATCTGTATCG.1  ACACATCTTCACCC.1  ACACCAGACATGAC.1  ACACCAGACTAGTG.1 \n##                 2                 6         CD16 Mono                 7 \n##  ACACCAGAGTCATG.1  ACACCCTGATGGTC.1  ACACCCTGTCCTAT.1  ACACGAACACTAGC.1 \n##                 0                 8                 2                 2 \n##  ACACGAACGCTGTA.1  ACACGAACTGTCCC.1  ACACGATGAGCGTT.1  ACACGATGCATGGT.1 \n##                 9                 8                 1                 3 \n##  ACACGATGGGCATT.1  ACACGATGTCCCAC.1  ACACGATGTTCTAC.1  ACACGTGAAGACTC.1 \n##                 0                 0                 2         CD16 Mono \n##  ACACGTGAAGATGA.1  ACACGTGATTCATC.1  ACAGACACAAGTAG.1  ACAGACACACCTAG.1 \n##                 2                 0                 1                 7 \n##  ACAGACACCTAAGC.1  ACAGCAACTCTTTG.1  ACAGCAACTTCGGA.1  ACAGCAACTTGTGG.1 \n##                 7         CD16 Mono                 0                 8 \n##  ACAGGTACAGAATG.1  ACAGGTACCCTACC.1  ACAGGTACGAATCC.1  ACAGGTACGATGAA.1 \n##                 0                 0                 0                 7 \n##  ACAGGTACGTAGCT.1  ACAGGTACGTTGCA.1  ACAGGTACTTTGCT.1  ACAGTCGACATGAC.1 \n##                10                 2                 1                 0 \n##  ACAGTCGACCCTAC.1  ACAGTCGACTACGA.1  ACAGTGACCCCTAC.1  ACAGTGACCGTTAG.1 \n##                 0                 8                 2                 0 \n##  ACAGTGACCTGCAA.1  ACAGTGACGTGCTA.1  ACAGTGTGCCAAGT.1  ACAGTGTGCCGCTT.1 \n##                 3                 2         CD16 Mono                 9 \n##  ACAGTGTGCTGTAG.1  ACAGTGTGGCGAAG.1  ACAGTGTGTCTTAC.1  ACAGTGTGTGAACC.1 \n##                 0                 2                 0                 0 \n##  ACAGTGTGTTTGTC.1  ACAGTTCTGGTGAG.1  ACAGTTCTTACGAC.1  ACATACCTAAACGA.1 \n##                 6                 0         CD16 Mono                 3 \n##  ACATACCTCTAGCA.1  ACATACCTCTCCCA.1  ACATACCTGTAAGA.1  ACATACCTTCCAGA.1 \n##         CD16 Mono                 7                 1                 8 \n##  ACATCACTAAAACG.1  ACATCACTCAACCA.1  ACATCACTTCTTTG.1  ACATCACTTGGAGG.1 \n##                 5                 1                 2                 7 \n##  ACATGGTGCGATAC.1  ACATGGTGGAATAG.1  ACATGGTGGATGAA.1  ACATGGTGGTTCTT.1 \n##                 0                 0                 6                 0 \n##  ACATGGTGTTCGGA.1  ACATTCTGATAAGG.1  ACATTCTGATGGTC.1  ACATTCTGCCCGTT.1 \n##                 2                 0                 7                 3 \n##  ACATTCTGTATGGC.1  ACATTCTGTCGCCT.1  ACATTCTGTTTGGG.1  ACCAACGAATAAGG.1 \n##                 0                 1                13                 0 \n##  ACCAACGACATGGT.1  ACCAACGAGCTTAG.1  ACCAACGATACGAC.1  ACCACAGACGAGTT.1 \n##                 0                 6         CD16 Mono                 8 \n##  ACCACAGACGCCTT.1  ACCACAGAGTGTTG.1  ACCACAGATGACAC.1  ACCACAGATGACTG.1 \n##                 3                 2                 1                 0 \n##  ACCACCTGGTACGT.1  ACCACCTGGTGTTG.1  ACCACCTGGTTGAC.1  ACCACGCTACCTTT.1 \n##                 2                 1         CD16 Mono                 7 \n##  ACCACGCTATCTTC.1  ACCACGCTCTATTC.1  ACCACGCTGACTAC.1  ACCACGCTTTTGTC.1 \n##                 5                 0                 0                 0 \n##  ACCAGCCTGCAGTT.1  ACCAGCCTGGGTGA.1  ACCAGCCTGGTTTG.1  ACCAGTGAAACGGG.1 \n##         CD16 Mono                 1                 8                 0 \n##  ACCAGTGAACCTTT.1  ACCAGTGAACTGGT.1  ACCAGTGACCGATA.1  ACCAGTGACTCAGA.1 \n##                 3                 7                 5                 1 \n##  ACCATTACTCGCCT.1  ACCATTACTCTTTG.1  ACCATTACTTGCTT.1  ACCATTTGCCACCT.1 \n##                 2                 0                 7                 6 \n##  ACCCAAGAACTGTG.1  ACCCAAGACCTTAT.1  ACCCAAGACTCATT.1  ACCCACTGAACGGG.1 \n##                 0                 2                 3                 0 \n##  ACCCACTGCGGTAT.1  ACCCACTGCTGTAG.1  ACCCAGCTCCCTTG.1  ACCCAGCTTATCGG.1 \n##                 0                 1                 3                 0 \n##  ACCCAGCTTGGATC.1  ACCCAGCTTTGCAG.1  ACCCGTACAACCTG.1  ACCCGTACAGCGTT.1 \n##                 0                 0                 6                 0 \n##  ACCCGTACCGAGAG.1  ACCCGTACCGCAAT.1  ACCCGTACGGAACG.1  ACCCGTACGGACAG.1 \n##                 2                 8                 2                 5 \n##  ACCCGTACTGTGCA.1  ACCCGTTGACCAAC.1  ACCCGTTGCTACTT.1  ACCCGTTGGAGGTG.1 \n##                 0                 1                 5                 0 \n##  ACCCGTTGGCATCA.1  ACCCGTTGGCTATG.1  ACCCGTTGGCTGAT.1  ACCCGTTGTGTGGT.1 \n##         CD16 Mono                 1                 0                 5 \n##  ACCCTCGAACTCTT.1  ACCCTCGACGCAAT.1  ACCGAAACAGCGTT.1  ACCGAAACCTGTCC.1 \n##                 2         CD16 Mono                 0                 0 \n##  ACCGAAACGTCCTC.1  ACCGAAACGTGTAC.1  ACCGCGGAACACGT.1  ACCGCGGACAATCG.1 \n##                 0                 0                 0                 5 \n##  ACCGCGGAGAGCAG.1  ACCGTGCTTAACCG.1  ACCTATTGAGCACT.1  ACCTATTGTGAACC.1 \n##                 3                 0                 0                 1 \n##  ACCTATTGTGGAAA.1  ACCTCCGAATCTTC.1  ACCTCCGACACCAA.1  ACCTCCGAGAAAGT.1 \n##                 3                 0                 0                 2 \n##  ACCTCCGAGGTGAG.1  ACCTCGTGCTTGTT.1  ACCTGAGACCGCTT.1  ACCTGAGAGTTGGT.1 \n##                 0         CD16 Mono         CD16 Mono                 1 \n##  ACCTGAGATCGCAA.1  ACCTGAGATGCTAG.1  ACCTGGCTACGTGT.1  ACCTGGCTATCGTG.1 \n##                 2         CD16 Mono                 0                 0 \n##  ACCTGGCTTCTTCA.1  ACCTTTGAAATGCC.1  ACCTTTGAAGATCC.1  ACCTTTGAAGCACT.1 \n##                 0                 0                 6                 2 \n##  ACCTTTGAAGTCTG.1  ACCTTTGATCCCGT.1  ACGAACACGAGCAG.1  ACGAACACGTCTAG.1 \n##                 3                 0                 8                 0 \n##  ACGAACTGACCTCC.1  ACGAACTGCTCCCA.1  ACGAACTGGCGGAA.1  ACGAACTGGTACCA.1 \n##                 0                10                 6                 5 \n##  ACGAACTGTTTGCT.1  ACGAAGCTAGAGGC.1  ACGAAGCTATACCG.1  ACGAAGCTGACGAG.1 \n##                 0                 2                 7                 2 \n##  ACGAAGCTTCGTGA.1  ACGAAGCTTGACCA.1  ACGAAGCTTTCGTT.1  ACGACAACACACGT.1 \n##                 1                 0                 8                10 \n##  ACGACAACGGAAGC.1  ACGACAACGTTACG.1  ACGACAACTTGTGG.1  ACGACCCTCAACTG.1 \n##                 1         CD16 Mono                 0                 0 \n##  ACGACCCTGAACTC.1  ACGACCCTGGTGGA.1  ACGACCCTGTATGC.1  ACGACCCTTATGCG.1 \n##                10                 0                 8                 8 \n##  ACGAGGGAACCTTT.1  ACGAGGGACCTTAT.1  ACGAGGGAGTCACA.1  ACGAGTACCTCCCA.1 \n##                 0                 1                 0                 2 \n##  ACGAGTACGTCCTC.1  ACGAGTACTATGGC.1  ACGATCGAACGCAT.1  ACGATCGAAGATGA.1 \n##         CD16 Mono                10                 0         CD16 Mono \n##  ACGATCGAATGGTC.1  ACGATCGACCGAAT.1  ACGATCGACGAGAG.1  ACGATCGATGAGGG.1 \n##                 9         CD16 Mono                 0                 0 \n##  ACGATCGATTGCGA.1  ACGATGACAATGCC.1  ACGATGACCACACA.1  ACGATGACGAACTC.1 \n##                 7                 0                 1                 1 \n##  ACGATGACGGATCT.1  ACGATTCTCCCACT.1  ACGATTCTGACACT.1  ACGATTCTGCGATT.1 \n##                 0         CD16 Mono                 9                 3 \n##  ACGATTCTGTCACA.1  ACGATTCTTGGAAA.1  ACGCAATGAAGGGC.1  ACGCAATGAGGGTG.1 \n##                 0                 0                 9                 0 \n##  ACGCAATGCACAAC.1  ACGCAATGCCGATA.1  ACGCAATGGTCTAG.1  ACGCAATGGTTCTT.1 \n##         CD16 Mono                 3                 0         CD16 Mono \n##  ACGCAATGTATGGC.1  ACGCACCTCCATAG.1  ACGCACCTGCTATG.1  ACGCACCTTTCCGC.1 \n##                 7                 0                 0                 7 \n##  ACGCCACTACAGTC.1  ACGCCACTGACAGG.1  ACGCCACTTCTTTG.1  ACGCCACTTTCGGA.1 \n##                 2                 1                 9                 8 \n##  ACGCCGGAACTCAG.1  ACGCCGGACATGGT.1  ACGCCGGACGCAAT.1  ACGCCGGATTGCGA.1 \n##         CD16 Mono                 0         CD16 Mono                 0 \n##  ACGCCTTGACCTGA.1  ACGCCTTGCGCTAA.1  ACGCCTTGTGTCGA.1  ACGCCTTGTTCTGT.1 \n##                 2                 1                 1                 2 \n##  ACGCGGTGGACGTT.1  ACGCGGTGGGAAAT.1  ACGCGGTGTCTCCG.1  ACGCGGTGTGGCAT.1 \n##         CD16 Mono                 0                 6                 1 \n##  ACGCTCACAGGTCT.1  ACGCTCACCTAGCA.1  ACGCTCACCTCCAC.1  ACGCTCACGTATGC.1 \n##                 0                 3                 0                 1 \n##  ACGCTCACTAGAGA.1  ACGCTCACTCTTTG.1  ACGCTGCTACTGGT.1  ACGCTGCTAGTTCG.1 \n##                 8                 0                 8         CD16 Mono \n##  ACGCTGCTATCGTG.1  ACGCTGCTCGTACA.1  ACGCTGCTGCGTAT.1  ACGCTGCTGCTGTA.1 \n##         CD16 Mono                 0                 8                 0 \n##  ACGCTGCTGGAAAT.1  ACGGAACTCGCAAT.1  ACGGAACTGTGAGG.1  ACGGAACTGTTCAG.1 \n##                 0                 1                 2                13 \n##  ACGGAACTTCCCAC.1  ACGGAGGACGTAAC.1  ACGGAGGATCTTTG.1  ACGGATTGCTCCAC.1 \n##                 0         CD16 Mono                 0         CD16 Mono \n##  ACGGATTGGGGCAA.1  ACGGATTGGTTGTG.1  ACGGCGTGCAGCTA.1  ACGGCGTGCTTTAC.1 \n##                 1                 6         CD16 Mono                 7 \n##  ACGGCGTGGACGTT.1  ACGGCGTGGCGGAA.1  ACGGCGTGGTCCTC.1  ACGGCGTGGTTCAG.1 \n##         CD16 Mono                 3                 2                 0 \n##  ACGGCGTGTACTTC.1  ACGGCGTGTGCTCC.1  ACGGCTCTAGACTC.1  ACGGCTCTATCGGT.1 \n##                 1                 6                 0                 0 \n##  ACGGCTCTCATACG.1  ACGGCTCTCTGTTT.1  ACGGCTCTGTATGC.1  ACGGCTCTTTCTGT.1 \n##                 0                 0                 0                 6 \n##  ACGGGAGAAAGGCG.1  ACGGGAGAAGCCAT.1  ACGGGAGAATCTCT.1  ACGGGAGACCAACA.1 \n##                 1                 7                 6                 5 \n##  ACGGGAGACCAGTA.1  ACGGGAGACTCAAG.1  ACGGGAGAGGAAGC.1  ACGGGAGAGGACAG.1 \n##                 0                 9                 3                 0 \n##  ACGGGAGATACTCT.1  ACGGGAGATGTAGC.1  ACGGTATGACCAGT.1  ACGGTATGACCATG.1 \n##                 6                 1                12                 0 \n##  ACGGTATGCCGCTT.1  ACGGTATGCTCAGA.1  ACGGTATGTTTCTG.1  ACGGTCCTACCCAA.1 \n##                 0                 1                 9                 0 \n##  ACGGTCCTGAGATA.1  ACGTAGACCGTTAG.1  ACGTCAGAAGGGTG.1  ACGTCAGACATTTC.1 \n##                 0                 6         CD16 Mono                 0 \n##  ACGTCAGACTACTT.1  ACGTCAGAGCTACA.1  ACGTCCTGCCTTCG.1  ACGTCCTGCTGAAC.1 \n##                 1                 1                 0                 0 \n##  ACGTCCTGGGGTGA.1  ACGTCCTGGGTGAG.1  ACGTCCTGTCGCCT.1  ACGTCCTGTGCCTC.1 \n##                 1                 6                 2                 3 \n##  ACGTCCTGTTCTGT.1  ACGTCGCTAGATGA.1  ACGTCGCTATGCTG.1  ACGTCGCTCAGGAG.1 \n##         CD16 Mono                 1                 1                 2 \n##  ACGTCGCTGCATCA.1  ACGTCGCTGTTGAC.1  ACGTGATGAACCGT.1  ACGTGATGAGATGA.1 \n##                 0                 0                 8                 8 \n##  ACGTGATGCCTGAA.1  ACGTGATGCTGAGT.1  ACGTGATGGCATCA.1  ACGTGATGGCTACA.1 \n##                 1         CD16 Mono                 9                 0 \n##  ACGTGATGGTCGTA.1  ACGTGCCTCCATAG.1  ACGTGCCTGACGGA.1  ACGTGCCTTGTCCC.1 \n##                 7                 7                 0                 5 \n##  ACGTTACTCACTGA.1  ACGTTACTCTGTTT.1  ACGTTACTGCATCA.1  ACGTTACTGCGATT.1 \n##                 1                 0                 6                 5 \n##  ACGTTACTGCTTAG.1  ACGTTACTGGAGTG.1  ACGTTGGAACCTCC.1  ACGTTGGACGAACT.1 \n##                 0                 1                 8                 2 \n##  ACGTTGGACTCAGA.1  ACGTTTACACTAGC.1  ACGTTTACAGCTCA.1  ACTAAAACACCTAG.1 \n##                 1                 1                 7                 6 \n##  ACTAAAACCGTAGT.1  ACTAAAACCTCTTA.1  ACTAAAACGGAACG.1  ACTACGGAACCTGA.1 \n##                 1                 3                 0                 0 \n##  ACTACGGAATTCTC.1  ACTACGGACCCTAC.1  ACTACGGACTCATT.1  ACTACGGACTTGGA.1 \n##                 3                 2                 0                 2 \n##  ACTACGGAGAATGA.1  ACTACGGAGTTGTG.1  ACTACTACACTTTC.1  ACTAGGTGAGTACC.1 \n##                 0                 0                 0                 1 \n##  ACTAGGTGCAGAAA.1  ACTAGGTGCCTAAG.1  ACTATCACGGAAGC.1  ACTATCACGGTATC.1 \n##         CD16 Mono                 2                12                 2 \n##  ACTATCACTTCACT.1  ACTCAGGAAGTCTG.1  ACTCAGGACATGCA.1  ACTCAGGACCAACA.1 \n##                 6                 1                 2                 1 \n##  ACTCAGGACTGTAG.1  ACTCAGGACTGTGA.1  ACTCAGGAGGCGAA.1  ACTCAGGATATGCG.1 \n##                 1                 1                 0                 5 \n##  ACTCAGGATATGGC.1  ACTCCTCTTAGAAG.1  ACTCCTCTTGTTCT.1  ACTCGAGAAGTAGA.1 \n##         CD16 Mono                 2                10                 6 \n##  ACTCGAGAATCGAC.1  ACTCGAGACTCATT.1  ACTCGAGAGAGAGC.1  ACTCGAGATGCTGA.1 \n##                 5                 9                 2                 1 \n##  ACTCGCACATCAGC.1  ACTCGCACATGTCG.1  ACTCGCACGACGTT.1  ACTCGCACTCTTTG.1 \n##                 1                 1                 1                 7 \n##  ACTCTATGACCCAA.1  ACTCTATGACTCTT.1  ACTCTATGAGATCC.1  ACTCTATGAGTACC.1 \n##                 3                 7                 2                 0 \n##  ACTCTATGCTAGCA.1  ACTCTATGCTTATC.1  ACTCTATGGTACGT.1  ACTCTATGTGCACA.1 \n##                 9                 3                 0                 0 \n##  ACTCTCCTCGAGTT.1  ACTCTCCTCTTACT.1  ACTCTCCTGCGAGA.1  ACTGAGACCGGGAA.1 \n##                 3                 5                 0         CD16 Mono \n##  ACTGAGACGGACTT.1  ACTGAGACTTCTTG.1  ACTGCCACCCTGAA.1  ACTGCCACCGGGAA.1 \n##                 1                 2                 3         CD16 Mono \n##  ACTGCCACTGTGCA.1  ACTGCCTGAGCTCA.1  ACTGCCTGCTCAAG.1  ACTGCCTGGAATAG.1 \n##                 0                 2                 0                 2 \n##  ACTGCCTGGGTTCA.1  ACTGCCTGTGAGCT.1  ACTGCCTGTTCTTG.1  ACTGGCCTATGTCG.1 \n##                 5                 5                 0                 0 \n##  ACTGGCCTCTAAGC.1  ACTGGCCTGCAGAG.1  ACTGGCCTGCCAAT.1  ACTGGCCTGCTGTA.1 \n##                 0                 8                 0                 0 \n##  ACTGGCCTTAAGGA.1  ACTGGCCTTGGTTG.1  ACTGTGGAAACCAC.1  ACTGTGGAGAATCC.1 \n##                 0         CD16 Mono                 0                 2 \n##  ACTGTGGAGGACGA.1  ACTGTGGAGTTCAG.1  ACTGTTACCAACCA.1  ACTGTTACGACAGG.1 \n##                 1                 3                 1                 0 \n##  ACTTAAGAACCATG.1  ACTTAAGAAGCTAC.1  ACTTAAGACTCTCG.1  ACTTAAGAGGTGAG.1 \n##                 0                 0                 1                 0 \n##  ACTTAAGATATGGC.1  ACTTAGCTATCTTC.1  ACTTAGCTCGATAC.1  ACTTAGCTCGGGAA.1 \n##                 3                 0                 1                 1 \n##  ACTTAGCTCTCCCA.1  ACTTAGCTTTCGCC.1  ACTTCAACACGCAT.1  ACTTCAACAGGAGC.1 \n##                 5                 8                 0         CD16 Mono \n##  ACTTCAACCGACTA.1  ACTTCAACGTGCTA.1  ACTTCAACTTTCGT.1  ACTTCCCTGCTATG.1 \n##                 1                 8                 1                 6 \n##  ACTTCTGACACTCC.1  ACTTCTGATCAGGT.1  ACTTCTGATGGTCA.1  ACTTCTGATGTCAG.1 \n##                12                 0                 2                 0 \n##  ACTTGACTCCAACA.1  ACTTGACTGGACTT.1  ACTTGACTTCACCC.1  ACTTGGGACTACCC.1 \n##                 9                 5                 0         CD16 Mono \n##  ACTTGGGAGCCAAT.1  ACTTGGGAGCTGAT.1  ACTTGGGATCAGTG.1  ACTTGTACACGTAC.1 \n##                 0                 1                 0                 1 \n##  ACTTGTACAGTCGT.1  ACTTGTACCCATGA.1  ACTTTGTGGTCAAC.1  ACTTTGTGGTCCTC.1 \n##                 1                 2                 9                 1 \n##  ACTTTGTGGTCGTA.1  ACTTTGTGTCCCAC.1  ACTTTGTGTGTTTC.1  AGAAACGAACAGCT.1 \n##                 0                 1         CD16 Mono                12 \n##  AGAAACGAACTCTT.1  AGAAACGACTGATG.1  AGAAACGAGCGATT.1  AGAAAGTGCATCAG.1 \n##                 2                 5                 0         CD16 Mono \n##  AGAAAGTGCCGATA.1  AGAAAGTGCTGCAA.1  AGAAAGTGGACAAA.1  AGAAAGTGTGCATG.1 \n##                 0                 2                 6                 2 \n##  AGAACAGAAACGTC.1  AGAACAGACCTCCA.1  AGAACAGAGAGACG.1  AGAACAGAGCTGTA.1 \n##                 0                 1                 6                 0 \n##  AGAACAGATATGGC.1  AGAACGCTAGGAGC.1  AGAACGCTCACTTT.1  AGAACGCTCAGATC.1 \n##                 9                 1                 6                 0 \n##  AGAACGCTGAATAG.1  AGAACGCTGAGATA.1  AGAACGCTTCCCGT.1  AGAAGATGAAGAGT.1 \n##                 1                 1         CD16 Mono                 0 \n##  AGAAGATGACACAC.1  AGAAGATGCATTGG.1  AGAAGATGCCCTAC.1  AGAAGATGCCTCAC.1 \n##                 0         CD16 Mono                 0                 1 \n##  AGAAGATGCTGCAA.1  AGAAGATGGCAGTT.1  AGAAGATGTGATGC.1  AGAAGATGTGCCTC.1 \n##                 0                 2         CD16 Mono                 8 \n##  AGAATACTCAACTG.1  AGAATACTCATCAG.1  AGAATACTGGTACT.1  AGAATACTTCAGAC.1 \n##                 2                 7                 3                 5 \n##  AGAATACTTTCGTT.1  AGAATGGAAAACAG.1  AGAATGGAACTCAG.1  AGAATGGAAGTCAC.1 \n##                 0                 0                 1                 5 \n##  AGAATGGAATCTCT.1  AGAATTTGATACCG.1  AGAATTTGATTGGC.1  AGAATTTGCAACTG.1 \n##                 0                 0                 2                 0 \n##  AGAATTTGCGACAT.1  AGAATTTGCGCATA.1  AGAATTTGCTCAGA.1  AGAATTTGCTTGAG.1 \n##                 0                 0                 1         CD16 Mono \n##  AGAATTTGGAGAGC.1  AGACACACACGCAT.1  AGACACACAGCCTA.1  AGACACACCGTGAT.1 \n##                 2                 6                 1                 0 \n##  AGACACACCGTTGA.1  AGACACACGAATAG.1  AGACACACGTCAAC.1  AGACACACTGATGC.1 \n##         CD16 Mono                 0                 0                10 \n##  AGACACACTGTCGA.1  AGACACTGAGCACT.1  AGACACTGCACACA.1  AGACACTGCTGGTA.1 \n##                 1                 0                 1                 8 \n##  AGACACTGTCCGAA.1  AGACCTGACATGAC.1  AGACCTGACTACTT.1  AGACCTGATACTTC.1 \n##                 9                 1                 0                 0 \n##  AGACGTACACCGAT.1  AGACGTACATCTTC.1  AGACGTACCAATCG.1  AGACTCGAAGTTCG.1 \n##                 0                 6                 1                 6 \n##  AGACTCGAGCAGTT.1  AGACTCGATTTACC.1  AGACTGACGATGAA.1  AGACTGACGGCATT.1 \n##                 2                 0                 0                 0 \n##  AGACTGACGTGCTA.1  AGACTTCTACGACT.1  AGACTTCTATCAGC.1  AGACTTCTCAGTTG.1 \n##                 2                 5                 1         CD16 Mono \n##  AGACTTCTCTGGAT.1  AGACTTCTGGAACG.1  AGACTTCTGGATCT.1  AGACTTCTGTGAGG.1 \n##                 0                 3                 8                 1 \n##  AGACTTCTTTGGCA.1  AGACTTCTTTGGTG.1  AGAGAAACACCAGT.1  AGAGAAACCCTTTA.1 \n##                 0                 6                 3         CD16 Mono \n##  AGAGAAACCTGGTA.1  AGAGAAACTAGAGA.1  AGAGAATGAACTGC.1  AGAGAATGGCATAC.1 \n##                 6                 6                 2                 5 \n##  AGAGAATGTGGAAA.1  AGAGAATGTTCTCA.1  AGAGAATGTTTGGG.1  AGAGATGACTACTT.1 \n##                 1                 2         CD16 Mono                 0 \n##  AGAGATGACTTGAG.1  AGAGATGAGCGTAT.1  AGAGATGAGCTTAG.1  AGAGATGAGTATGC.1 \n##                 7                 0                 0                 6 \n##  AGAGATGAGTTTGG.1  AGAGATGATCCCAC.1  AGAGATGATGGATC.1  AGAGCGGACGTACA.1 \n##                 9                 5                 0                 0 \n##  AGAGCGGAGTAGCT.1  AGAGCGGAGTGCAT.1  AGAGCGGATGTGCA.1  AGAGCTACATCACG.1 \n##                 2                 0                 5                 0 \n##  AGAGCTACCCCTAC.1  AGAGCTACCCTTCG.1  AGAGCTACGCTCCT.1  AGAGCTACTAGAGA.1 \n##                 6                 0                 1                 3 \n##  AGAGGTCTAAACGA.1  AGAGGTCTAGATCC.1  AGAGGTCTTCCAGA.1  AGAGTCACAGAGGC.1 \n##                 0                 2                 9                 9 \n##  AGAGTCACCCGATA.1  AGAGTCACGTAGCT.1  AGAGTCTGACACGT.1  AGAGTCTGCCTCCA.1 \n##                 0                 0                 0                 2 \n##  AGAGTCTGGTGTAC.1  AGAGTCTGTGCTGA.1  AGAGTGCTCTCCAC.1  AGAGTGCTGACAGG.1 \n##                 1                 0                 0                 2 \n##  AGAGTGCTGCTTCC.1  AGAGTGCTTAGCGT.1  AGATATACACGACT.1  AGATATACAGCGTT.1 \n##                 1         CD16 Mono                 1                 2 \n##  AGATATACCCGATA.1  AGATATACGTTACG.1  AGATATACTCACCC.1  AGATATACTCTGGA.1 \n##                 6                 5                 2                 2 \n##  AGATATACTTAGGC.1  AGATATTGACGTGT.1  AGATATTGCACTTT.1  AGATATTGCTCCAC.1 \n##                 2                 1         CD16 Mono                 6 \n##  AGATATTGGGACTT.1  AGATATTGTAAAGG.1  AGATATTGTAGTCG.1  AGATATTGTGTTTC.1 \n##                 0                 2                 0                 0 \n##  AGATCGTGACCCTC.1  AGATCGTGACCTTT.1  AGATCGTGGGGTGA.1  AGATCGTGGTGAGG.1 \n##                 5                 0                 3                 6 \n##  AGATCTCTAGTCGT.1  AGATCTCTATTCTC.1  AGATCTCTCCTACC.1  AGATCTCTCGTGTA.1 \n##                 5                 2                 1                 0 \n##  AGATCTCTGGAAAT.1  AGATCTCTTAGAGA.1  AGATCTCTTGTCGA.1  AGATCTCTTTCCGC.1 \n##         CD16 Mono                 0                 0                 5 \n##  AGATTAACGCTTAG.1  AGATTAACGGTGTT.1  AGATTAACGTATCG.1  AGATTAACTGAAGA.1 \n##                 1                 9                 0                 3 \n##  AGATTCCTACGCAT.1  AGATTCCTAGCGTT.1  AGATTCCTCTACTT.1  AGATTCCTCTGCAA.1 \n##                13                 0                 0                 1 \n##  AGATTCCTGACTAC.1  AGATTCCTTAGTCG.1  AGATTCCTTCCAGA.1  AGCAAAGAAAAGCA.1 \n##                 1         CD16 Mono                 0         CD16 Mono \n##  AGCAAAGAATGTGC.1  AGCAAAGATGGATC.1  AGCAACACAGCATC.1  AGCAACACAGCCTA.1 \n##                 0                 1                 0                 3 \n##  AGCAACACGACAAA.1  AGCAACACGCTCCT.1  AGCAACACTGCTAG.1  AGCAAGCTAACGGG.1 \n##                 1                 0                13                 6 \n##  AGCAAGCTCAAGCT.1  AGCAAGCTCTGGAT.1  AGCAAGCTTGCTTT.1  AGCACAACACCTCC.1 \n##                 1                 0                 0                 2 \n##  AGCACAACCTTGTT.1  AGCACAACGACGAG.1  AGCACAACGATAGA.1  AGCACAACGGATTC.1 \n##                 0                12         CD16 Mono                 5 \n##  AGCACAACTCGCCT.1  AGCACAACTGTAGC.1  AGCACAACTTCGTT.1  AGCACTGAAACGAA.1 \n##                 2                 0                 0                 2 \n##  AGCACTGAAGCTCA.1  AGCACTGAGACGTT.1  AGCACTGATTCTTG.1  AGCATCGAGAGAGC.1 \n##                 0                 1                 9                 1 \n##  AGCATCGAGAGATA.1  AGCATCGATAGCCA.1  AGCATGACATCTTC.1  AGCATGACCTCGAA.1 \n##                 5                 0                 2                 0 \n##  AGCATGACGCAGTT.1  AGCATGACTAACGC.1  AGCATTCTGACTAC.1  AGCATTCTGTCTTT.1 \n##                 0                 0                 0                 1 \n##  AGCATTCTTGATGC.1  AGCCAATGAAACAG.1  AGCCAATGACGTAC.1  AGCCAATGCCCTAC.1 \n##                 0                 0         CD16 Mono                 0 \n##  AGCCACCTCAAAGA.1  AGCCACCTCGGGAA.1  AGCCACCTTAGTCG.1  AGCCACCTTGGAAA.1 \n##         CD16 Mono                 1                 1         CD16 Mono \n##  AGCCACCTTTGGCA.1  AGCCGGACAGCACT.1  AGCCGGACGAGCTT.1  AGCCGGACGTAAGA.1 \n##                 1                 1                 2                 1 \n##  AGCCGGACGTCCTC.1  AGCCGGACTCCGTC.1  AGCCGGACTTCCGC.1  AGCCGGTGCTGAGT.1 \n##                 1                 3                 0                 5 \n##  AGCCGGTGGAAGGC.1  AGCCGGTGGGGATG.1  AGCCGGTGTTCCAT.1  AGCCGTCTGTCGAT.1 \n##                 5                 0                 0                10 \n##  AGCCTCACACGGGA.1  AGCCTCACTAACCG.1  AGCCTCACTAACGC.1  AGCCTCACTCGCCT.1 \n##                 2                 0                 1                 5 \n##  AGCCTCTGAAAAGC.1  AGCCTCTGCGTAAC.1  AGCCTCTGGAGGGT.1  AGCGAACTGCGTAT.1 \n##                 1         CD16 Mono                 1                 6 \n##  AGCGAACTGGACAG.1  AGCGAACTGGTACT.1  AGCGAACTGTTGCA.1  AGCGATACAAGCCT.1 \n##                 7                 3                 2                 0 \n##  AGCGATACGAGATA.1  AGCGATACGGTACT.1  AGCGATACTCAGAC.1  AGCGATTGTGTGCA.1 \n##                 6         CD16 Mono                 0                 2 \n##  AGCGCCGAACTCTT.1  AGCGCCGACCTCAC.1  AGCGCCGACGTTGA.1  AGCGCCGAGATACC.1 \n##                 1                 3         CD16 Mono                 7 \n##  AGCGCCGAGTTGCA.1  AGCGCTCTACCACA.1  AGCGCTCTCCTTTA.1  AGCGCTCTCGCATA.1 \n##                 0                 8                 0                 2 \n##  AGCGCTCTGTATGC.1  AGCGGCACAACTGC.1  AGCGGCACACGCAT.1  AGCGGCACCTTAGG.1 \n##                 1         CD16 Mono                 3                 3 \n##  AGCGGCACGGTGAG.1  AGCGGCACTGCGTA.1  AGCGGCACTTGGCA.1  AGCGGCTGACACGT.1 \n##                 8                 1                 3                 0 \n##  AGCGGCTGCACACA.1  AGCGGCTGCTGACA.1  AGCGGCTGTATCTC.1  AGCGGCTGTCTAGG.1 \n##                 0                 0                 2                 9 \n##  AGCGGCTGTGCCCT.1  AGCGGGCTCAGATC.1  AGCGGGCTCGAGTT.1  AGCGGGCTCGCCTT.1 \n##                 0                 9                 3                 0 \n##  AGCGGGCTGGGAGT.1  AGCGTAACCGATAC.1  AGCGTAACTGCAGT.1  AGCGTAACTGTTTC.1 \n##                 0                 2                 2                 2 \n##  AGCTCGCTAAGGTA.1  AGCTCGCTAGAACA.1  AGCTCGCTATCGTG.1  AGCTCGCTCCTTCG.1 \n##                 0         CD16 Mono                 1                 0 \n##  AGCTCGCTCTCTCG.1  AGCTGAACCCGCTT.1  AGCTGAACTAAAGG.1  AGCTGCCTGCTAAC.1 \n##                 2                 0                 0                 3 \n##  AGCTGCCTTCGCTC.1  AGCTGTGAACTAGC.1  AGCTGTGACCTTCG.1  AGCTGTGAGTATCG.1 \n##                 9                 0         CD16 Mono                 1 \n##  AGCTGTGATAGTCG.1  AGCTGTGATGTCTT.1  AGCTGTGATTCGGA.1  AGCTTACTCGTCTC.1 \n##                 0                13                 0                 3 \n##  AGCTTACTGAGGCA.1  AGCTTACTGTCGAT.1  AGCTTACTTCTAGG.1  AGCTTACTTTCACT.1 \n##                 6                 5                 2                12 \n##  AGCTTTACAGAAGT.1  AGCTTTACAGAATG.1  AGCTTTACGACGTT.1  AGCTTTACGTAGCT.1 \n##                 5                 0         CD16 Mono                 0 \n##  AGGAAATGAGACTC.1  AGGAAATGAGTGCT.1  AGGAAATGGCTACA.1  AGGAAATGGTCTTT.1 \n##                 2                 1                 8                 9 \n##  AGGAACCTCACCAA.1  AGGAACCTCCTTAT.1  AGGAACCTTACTGG.1  AGGAATGAACTGGT.1 \n##                 8                 6                 5         CD16 Mono \n##  AGGAATGACGTCTC.1  AGGAATGACTGTCC.1  AGGAATGATACTTC.1  AGGACACTGCCCTT.1 \n##         CD16 Mono                 2                 8         CD16 Mono \n##  AGGACACTGGACAG.1  AGGACACTTAAAGG.1  AGGACTTGATCACG.1  AGGACTTGCAGAGG.1 \n##                 2                 1                 8                 3 \n##  AGGACTTGCGTTAG.1  AGGACTTGCTCTTA.1  AGGAGTCTAAGAGT.1  AGGAGTCTCGATAC.1 \n##                 2                 1                 0                 0 \n##  AGGAGTCTTCCTCG.1  AGGATAGAATCGAC.1  AGGATAGACACAAC.1  AGGATAGACATGGT.1 \n##                 2                 7                 7                 0 \n##  AGGATAGACGAACT.1  AGGATAGACGGAGA.1  AGGATAGAGACTAC.1  AGGATAGAGGTAAA.1 \n##         CD16 Mono                 1                 2                 1 \n##  AGGATAGATCCCGT.1  AGGATAGATGCTAG.1  AGGATGCTAGAGGC.1  AGGATGCTCTGCAA.1 \n##                 0                 8         CD16 Mono                 7 \n##  AGGATGCTGGACGA.1  AGGATGCTGTACAC.1  AGGATGCTTTGCAG.1  AGGATGCTTTGTGG.1 \n##                 5                 1                 3                 2 \n##  AGGCAGGAGTACGT.1  AGGCAGGATATCTC.1  AGGCAGGATGTCAG.1  AGGCCTCTCGTTGA.1 \n##                 1                 2                 6                 1 \n##  AGGCCTCTCTGGTA.1  AGGCCTCTGGGTGA.1  AGGCCTCTGTTGGT.1  AGGCCTCTTCACGA.1 \n##                 2                 2                 0                 0 \n##  AGGCCTCTTCGACA.1  AGGCTAACAGATGA.1  AGGCTAACAGGTCT.1  AGGCTAACAGTGTC.1 \n##                 3                 6                 0                 3 \n##  AGGCTAACTGTGGT.1  AGGGACGAAACGGG.1  AGGGACGAAGTACC.1  AGGGACGACCAAGT.1 \n##                 2                 1                 0                 2 \n##  AGGGACGACTCGCT.1  AGGGACGACTTCGC.1  AGGGACGATTCTGT.1  AGGGAGTGATGGTC.1 \n##                 8                 0                 2                 6 \n##  AGGGAGTGTGACCA.1  AGGGAGTGTGAGCT.1  AGGGCCACAAGGTA.1  AGGGCCACATCGAC.1 \n##                 0                 5                10                 2 \n##  AGGGCCACGTGTAC.1  AGGGCCACTACAGC.1  AGGGCCACTATCTC.1  AGGGCCACTCGCAA.1 \n##                 0                 0                 1                 0 \n##  AGGGCCACTGACCA.1  AGGGCCTGAACGAA.1  AGGGCCTGTTACCT.1  AGGGCGCTACGGGA.1 \n##                 8         CD16 Mono                 3                 0 \n##  AGGGCGCTATCGGT.1  AGGGCGCTCGTGAT.1  AGGGCGCTCTATGG.1  AGGGCGCTTGGTGT.1 \n##                 0                 0                 0                 1 \n##  AGGGCGCTTTACTC.1  AGGGTGGAAGACTC.1  AGGGTGGAAGGGTG.1  AGGGTGGAAGTCAC.1 \n##                 8                 8         CD16 Mono         CD16 Mono \n##  AGGGTGGACACCAA.1  AGGGTGGACAGCTA.1  AGGGTGGACCCACT.1  AGGGTGGAGGTGGA.1 \n##                 1                 2                 6                 1 \n##  AGGGTTTGACAGTC.1  AGGGTTTGCGCTAA.1  AGGGTTTGTCCGAA.1  AGGTACACGAAAGT.1 \n##                 5                 3                 7                 2 \n##  AGGTACTGAGTAGA.1  AGGTCATGGTTTCT.1  AGGTCATGTGGTGT.1  AGGTCATGTGTCTT.1 \n##                 0                 0                 6                 0 \n##  AGGTCTGACGCTAA.1  AGGTCTGAGGTGAG.1  AGGTCTGAGTTGTG.1  AGGTCTGATCACGA.1 \n##                 1                 2                 0                 0 \n##  AGGTCTGATCGCTC.1  AGGTCTGATGGAGG.1  AGGTCTGATTATCC.1  AGGTGGGAATGCTG.1 \n##                 1                 1                 2                 1 \n##  AGGTGGGACCAATG.1  AGGTGTTGCCATGA.1  AGGTGTTGCTCTCG.1  AGGTGTTGGAGAGC.1 \n##                 7                 2                 0                 2 \n##  AGGTGTTGGAGGTG.1  AGGTGTTGGTCACA.1  AGGTGTTGTGGTGT.1  AGGTGTTGTGTTCT.1 \n##                 0                 2                 0                 9 \n##  AGGTGTTGTTCTGT.1  AGGTTCGATAGAAG.1  AGGTTCGATTCCAT.1  AGGTTGTGACCCAA.1 \n##                 0                 6                 2                 0 \n##  AGGTTGTGAGCATC.1  AGGTTGTGCCGTAA.1  AGGTTGTGCGCCTT.1  AGGTTGTGGGCAAG.1 \n##                 0                 0                 6                 0 \n##  AGGTTGTGGTAAAG.1  AGGTTGTGGTCGAT.1  AGTAAGGAACCCAA.1  AGTAAGGATTGACG.1 \n##                 3                 2                 0                 2 \n##  AGTAATACACCACA.1  AGTAATACACTAGC.1  AGTAATACTGAAGA.1  AGTAATACTTGCGA.1 \n##                 0                 1                 0                 1 \n##  AGTAATTGCTTGGA.1  AGTAATTGGAGAGC.1  AGTAATTGGGTCAT.1  AGTAATTGTCGTTT.1 \n##                 1                 0                 1                 7 \n##  AGTAATTGTGCCCT.1  AGTAATTGTTCTTG.1  AGTACGTGCCATAG.1  AGTACGTGTGAGCT.1 \n##                 8                 1                 0                 0 \n##  AGTACGTGTGTAGC.1  AGTACGTGTTCCAT.1  AGTACTCTCACTAG.1  AGTACTCTCGGGAA.1 \n##                 6                 0                 0                 1 \n##  AGTACTCTGTAGGG.1  AGTAGAGAAAACGA.1  AGTAGAGAACAGCT.1  AGTAGAGAAGAAGT.1 \n##                 3                 1                 0                 2 \n##  AGTAGAGACAGGAG.1  AGTAGAGAGCAAGG.1  AGTAGAGATGAAGA.1  AGTAGAGATGCTGA.1 \n##                 1                 3                 0                 6 \n##  AGTAGGCTAAACGA.1  AGTAGGCTACACTG.1  AGTAGGCTACCTGA.1  AGTAGGCTAGGCGA.1 \n##                 2         CD16 Mono                 3                 0 \n##  AGTAGGCTATTGGC.1  AGTAGGCTTGGTGT.1  AGTATAACCTCTTA.1  AGTATAACTAGAAG.1 \n##                 0                 0                 2                 1 \n##  AGTATAACTGCAGT.1  AGTATCCTACCATG.1  AGTCACGAACCTTT.1  AGTCACGAACGGAG.1 \n##                 5                 2                 2                 2 \n##  AGTCACGAGCTTCC.1  AGTCAGACACCTAG.1  AGTCAGACATTGGC.1  AGTCAGACCATGCA.1 \n##                 6                11                 2                 0 \n##  AGTCAGACGCAGTT.1  AGTCAGACTAGCGT.1  AGTCAGACTGCATG.1  AGTCAGACTTACCT.1 \n##                 9                11                 2         CD16 Mono \n##  AGTCGAACGGTTAC.1  AGTCGCCTGAACTC.1  AGTCGCCTTCGACA.1  AGTCGCCTTGGCAT.1 \n##                 1                 6                 5                 1 \n##  AGTCGCCTTTGCTT.1  AGTCTACTAAAACG.1  AGTCTACTCGTGAT.1  AGTCTTACCTCAGA.1 \n##         CD16 Mono                 0                 2                 2 \n##  AGTCTTACGCTGTA.1  AGTCTTACTAGAAG.1  AGTCTTACTTCGCC.1  AGTGAAGAACTGTG.1 \n##                 0         CD16 Mono                10                 7 \n##  AGTGAAGACGTGAT.1  AGTGAAGAGTTCAG.1  AGTGACACAAGGTA.1  AGTGACACAGCAAA.1 \n##                 0                 5                 0                 6 \n##  AGTGACACCCTTAT.1  AGTGACACCTGGAT.1  AGTGACACGACGAG.1  AGTGACACGGACAG.1 \n##                 2                 0                10         CD16 Mono \n##  AGTGACACTTTGCT.1  AGTGACTGAAGGTA.1  AGTGACTGATCGGT.1  AGTGACTGATCGTG.1 \n##                 3                 8                 0         CD16 Mono \n##  AGTGACTGCGTGTA.1  AGTGACTGGAGCAG.1  AGTGACTGTTTCGT.1  AGTGCAACAATCGC.1 \n##                 0                 0                 6                 0 \n##  AGTGCAACATCGTG.1  AGTGCAACCGTCTC.1  AGTGCAACGGCGAA.1  AGTGCAACTAACGC.1 \n##         CD16 Mono                 1                 2         CD16 Mono \n##  AGTGTGACAGTCGT.1  AGTGTGACTGCCTC.1  AGTGTTCTAGCGTT.1  AGTGTTCTCTGATG.1 \n##                 0                 6                 2                 1 \n##  AGTGTTCTTTGCGA.1  AGTTAAACACTCTT.1  AGTTAAACCTGACA.1  AGTTAAACGGACAG.1 \n##                 0                 3                 2                 1 \n##  AGTTATGAACCTAG.1  AGTTATGAATCTCT.1  AGTTATGACACACA.1  AGTTATGAGGAAAT.1 \n##                 1                 8                 0                 1 \n##  AGTTATGAGGAGCA.1  AGTTATGAGTAAAG.1  AGTTATGATGGATC.1  AGTTCTACGACGAG.1 \n##                 0                 0                 0                 7 \n##  AGTTCTACTTTCAC.1  AGTTCTTGAACGGG.1  AGTTCTTGCAGTCA.1  AGTTGTCTAAACAG.1 \n##                 9                 2                 8                 3 \n##  AGTTGTCTAAAGTG.1  AGTTGTCTACTTTC.1  AGTTGTCTATGCTG.1  AGTTGTCTCATTGG.1 \n##                 0                 5                 2                 2 \n##  AGTTGTCTGAGGTG.1  AGTTGTCTGCTACA.1  AGTTGTCTTCCGAA.1  AGTTTAGAATTCTC.1 \n##                 0                 7                 0                 1 \n##  AGTTTAGAGTTCGA.1  AGTTTAGATAAGCC.1  AGTTTCACACACTG.1  AGTTTCACAGCACT.1 \n##                 0                 0                 0         CD16 Mono \n##  AGTTTCACGCATCA.1  AGTTTCACTCACCC.1  AGTTTGCTCGAGTT.1  AGTTTGCTCTTTAC.1 \n##                 3                 0                 1                 1 \n##  AGTTTGCTGAATCC.1  AGTTTGCTGGTCAT.1  AGTTTGCTTCCTGC.1  AGTTTGCTTCTTCA.1 \n##                 0                10                 0                 0 \n##  ATAAACACACGTGT.1  ATAAACACCTTCGC.1  ATAACAACAAGAGT.1  ATAACAACCAGATC.1 \n##                 0                 1                 1                 9 \n##  ATAACATGCAGGAG.1  ATAACATGCTGTCC.1  ATAACATGCTTGCC.1  ATAACATGGATACC.1 \n##         CD16 Mono                 3                 2                 2 \n##  ATAACATGGGTTCA.1  ATAACCCTACCTCC.1  ATAACCCTTGACTG.1  ATAAGTACACCCAA.1 \n##                 3                 0                 0                 0 \n##  ATAAGTTGATCTCT.1  ATAAGTTGCCTTAT.1  ATAAGTTGCTCCAC.1  ATAAGTTGCTTAGG.1 \n##                 6         CD16 Mono                 0                 0 \n##  ATAAGTTGGGAGCA.1  ATAAGTTGTACTTC.1  ATAAGTTGTGAGAA.1  ATAATCGAAAACGA.1 \n##                 3                 2                 3                 2 \n##  ATAATCGATTCTGT.1  ATAATGACAACGGG.1  ATAATGACACCTTT.1  ATAATGACCACTGA.1 \n##                 0                 2                 1                 5 \n##  ATAATGACGACAAA.1  ATAATGACTTATCC.1  ATACAATGACGTAC.1  ATACAATGATTCCT.1 \n##                 0                 0                 5                 0 \n##  ATACAATGTCAGAC.1  ATACAATGTCTTTG.1  ATACACCTAAAGTG.1  ATACACCTACAGTC.1 \n##                 0                 0                 0                 0 \n##  ATACACCTGGACGA.1  ATACACCTTGCTAG.1  ATACCACTAGGTCT.1  ATACCACTATCAGC.1 \n##                 0         CD16 Mono                 2                 6 \n##  ATACCACTCCTGAA.1  ATACCACTGGTGAG.1  ATACCACTGTCACA.1  ATACCACTTGTGGT.1 \n##                 3                 1                 0                 5 \n##  ATACCGGAATCGAC.1  ATACCGGACCCACT.1  ATACCGGACTCTCG.1  ATACCTACATCGTG.1 \n##                 5                 2         CD16 Mono                 0 \n##  ATACCTACGACTAC.1  ATACCTACGGAAGC.1  ATACCTACGTCTGA.1  ATACCTACTGCAAC.1 \n##                 1                10                 0                 9 \n##  ATACCTTGATGACC.1  ATACCTTGATGTGC.1  ATACCTTGGACAAA.1  ATACCTTGTTCTGT.1 \n##                 0                 0                 1                 0 \n##  ATACGGACAGTCAC.1  ATACGGACCAACTG.1  ATACGTCTAAGTAG.1  ATACGTCTATCGGT.1 \n##                 1                 2                 3                 6 \n##  ATACGTCTCACCAA.1  ATACGTCTGAAACA.1  ATACGTCTGGTTAC.1  ATACTCTGATTTCC.1 \n##                 1                 0                 0                 3 \n##  ATACTCTGCACTAG.1  ATACTCTGCTTAGG.1  ATACTCTGGACGTT.1  ATAGAACTACTCAG.1 \n##                 3                 0                 5                 1 \n##  ATAGAACTCTCAGA.1  ATAGAACTGAGAGC.1  ATAGAACTGGATCT.1  ATAGAACTGTCCTC.1 \n##                10                 0                 7                 0 \n##  ATAGAACTGTCGTA.1  ATAGAACTTCACGA.1  ATAGAACTTTTCAC.1  ATAGATACACCTGA.1 \n##                 0                 1                 1                 2 \n##  ATAGATACCATGGT.1  ATAGATACCGTTAG.1  ATAGATACGTTCAG.1  ATAGATTGAAACAG.1 \n##                 0                 5                 0                 1 \n##  ATAGATTGAATCGC.1  ATAGATTGTCGTTT.1  ATAGCCGACGATAC.1  ATAGCCGAGTACGT.1 \n##                 0                 6         CD16 Mono                 5 \n##  ATAGCCGAGTTAGC.1  ATAGCGTGGCGAGA.1  ATAGCGTGTAACGC.1  ATAGCTCTAAGTGA.1 \n##                 1                 6                 2                 0 \n##  ATAGCTCTACGTGT.1  ATAGCTCTCATGGT.1  ATAGCTCTCGCATA.1  ATAGCTCTGATAAG.1 \n##                 1                 0                 0                 3 \n##  ATAGCTCTGGATCT.1  ATAGCTCTTCCGTC.1  ATAGGAGACTAGAC.1  ATAGGAGATGAAGA.1 \n##                 0                 0                 0                 0 \n##  ATAGGAGATGAGCT.1  ATAGGAGATTTCTG.1  ATAGGCTGAAAGTG.1  ATAGGCTGAGAAGT.1 \n##                 6                 0                 0                 0 \n##  ATAGGCTGCTGCTC.1  ATAGGCTGGGACGA.1  ATAGTCCTGGACTT.1  ATAGTCCTGGTGTT.1 \n##                 2                10                 7                 8 \n##  ATAGTCCTTGCTTT.1  ATAGTTGAAAGGCG.1  ATAGTTGAAAGTAG.1  ATAGTTGAACTAGC.1 \n##                 0                 0                 0                 6 \n##  ATAGTTGAAGTCTG.1  ATAGTTGACTCGCT.1  ATAGTTGATAAAGG.1  ATAGTTGATTCGCC.1 \n##                 0                 2                11                 7 \n##  ATAGTTGATTGGTG.1  ATAGTTGATTTGTC.1  ATATACGACTGAAC.1  ATATACGACTGTTT.1 \n##                 0                 1                 3                 6 \n##  ATATACGAGGGCAA.1  ATATACGAGGTTTG.1  ATATACGAGTCACA.1  ATATACGAGTCTAG.1 \n##                 5                 3                 1                 0 \n##  ATATACGATCCCAC.1  ATATACGATGCATG.1  ATATAGTGTGACTG.1  ATATGAACTGAACC.1 \n##                 1                 2                 2                 9 \n##  ATATGCCTAAGATG.1  ATATGCCTATGTGC.1  ATATGCCTCCTTTA.1  ATATGCCTCTGTGA.1 \n##                 3                10                 5                 1 \n##  ATCAAATGAGTACC.1  ATCAAATGATTCCT.1  ATCAAATGCTGTCC.1  ATCAACCTCAACCA.1 \n##                 2                 0                 0                 0 \n##  ATCAACCTGGACGA.1  ATCAACCTTAGAAG.1  ATCAACCTTCTCGC.1  ATCAACCTTTCGTT.1 \n##                 0                 8                 3                 6 \n##  ATCACACTGACGAG.1  ATCACACTGCTTAG.1  ATCACACTGTTGCA.1  ATCACGGAAAAGCA.1 \n##                 0                 3                 3         CD16 Mono \n##  ATCACGGAACCCTC.1  ATCACGGAACTGTG.1  ATCACGGAGCGATT.1  ATCACGGATAACGC.1 \n##                 8                11         CD16 Mono                 6 \n##  ATCACGGATCAGGT.1  ATCACTACCTATTC.1  ATCACTACCTTCTA.1  ATCACTACTGCACA.1 \n##                 1                 1                 0                 1 \n##  ATCACTACTGGTAC.1  ATCACTTGCGCAAT.1  ATCACTTGCTAGCA.1  ATCACTTGGCGAGA.1 \n##                 0                 2                 0                 7 \n##  ATCACTTGTCCGTC.1  ATCACTTGTTCCGC.1  ATCACTTGTTGCAG.1  ATCAGGTGACTGTG.1 \n##                 2                 3                 1                 1 \n##  ATCAGGTGGAACCT.1  ATCAGGTGGAACTC.1  ATCAGGTGGGCGAA.1  ATCAGGTGGGGCAA.1 \n##         CD16 Mono                 1                 0                 0 \n##  ATCAGGTGTCCAAG.1  ATCATCTGAGCAAA.1  ATCATCTGTTCTGT.1  ATCCAGGACTACTT.1 \n##                 0                 1                 0                 8 \n##  ATCCAGGACTCCAC.1  ATCCAGGATATGGC.1  ATCCATACATTCCT.1  ATCCCGTGCCAAGT.1 \n##                 0                 0                 0                 6 \n##  ATCCCGTGCTGCAA.1  ATCCCGTGGTCTAG.1  ATCCCGTGTACTGG.1  ATCCCGTGTCACGA.1 \n##         CD16 Mono                 0                 0                 2 \n##  ATCCCGTGTCTCAT.1  ATCCGCACAACAGA.1  ATCCGCACTCCCGT.1  ATCCTAACATCAGC.1 \n##         CD16 Mono                 2                 0                 8 \n##  ATCCTAACATCGAC.1  ATCCTAACCAACTG.1  ATCCTAACTGCCTC.1  ATCGACGAGTAAGA.1 \n##                 2                 2         CD16 Mono                 8 \n##  ATCGACGATAAGGA.1  ATCGACGATTGTGG.1  ATCGAGTGTCTCGC.1  ATCGCAGAAGCATC.1 \n##                 0                 8                 0                 6 \n##  ATCGCAGACAGGAG.1  ATCGCAGACGACAT.1  ATCGCAGACTTCCG.1  ATCGCAGATTCTAC.1 \n##                 5                 6                 0                 0 \n##  ATCGCCACACGGTT.1  ATCGCCACAGGCGA.1  ATCGCCACCTGTAG.1  ATCGCCTGAGGAGC.1 \n##                 0                 0                 2                 0 \n##  ATCGCGCTACTTTC.1  ATCGCGCTAGCTAC.1  ATCGCGCTATGGTC.1  ATCGCGCTGGGAGT.1 \n##                 8                 2                 3                 2 \n##  ATCGCGCTGTGCTA.1  ATCGCGCTTACTTC.1  ATCGCGCTTTGCAG.1  ATCGGAACAAACGA.1 \n##                 0                 1         CD16 Mono                 8 \n##  ATCGGAACACTGTG.1  ATCGGAACAGCAAA.1  ATCGGAACCATCAG.1  ATCGGAACCCTCCA.1 \n##                 0                 0                 1                 0 \n##  ATCGGAACTGGCAT.1  ATCGGAACTGGTCA.1  ATCGGAACTTCTAC.1  ATCGGAACTTTCGT.1 \n##                 2                 1                 0                 2 \n##  ATCGGTGAAGCGGA.1  ATCGGTGAAGCGTT.1  ATCGGTGACCCTAC.1  ATCGGTGACTACGA.1 \n##                 3                 8                 2                 0 \n##  ATCGGTGAGGTTCA.1  ATCGGTGATATGGC.1  ATCGTTTGGAGATA.1  ATCGTTTGGCGGAA.1 \n##         CD16 Mono                 1                 1         CD16 Mono \n##  ATCGTTTGTATGGC.1  ATCTACACACCCTC.1  ATCTACACAGATGA.1  ATCTACACCAACCA.1 \n##                 0                 1                 2                 2 \n##  ATCTACACCATTTC.1  ATCTACACCTGTTT.1  ATCTACACGGAGGT.1  ATCTACACGGGTGA.1 \n##                10                 0                 3                 1 \n##  ATCTACACGTTGGT.1  ATCTACACTGTCTT.1  ATCTACTGAAGGTA.1  ATCTACTGATTTCC.1 \n##                 0                 1                 1                 0 \n##  ATCTACTGCCAAGT.1  ATCTACTGTGTGGT.1  ATCTACTGTTTCAC.1  ATCTCAACACAGTC.1 \n##                12                 1                 0                 2 \n##  ATCTCAACGCTGAT.1  ATCTCAACGGGACA.1  ATCTCAACGGTGTT.1  ATCTCAACTTGCAG.1 \n##                 2                 6                 0                 7 \n##  ATCTGACTACAGCT.1  ATCTGACTACGGGA.1  ATCTGACTCTCCCA.1  ATCTGACTGTACGT.1 \n##                 0                 0                 2                 0 \n##  ATCTGGGACATTCT.1  ATCTGGGACCTTAT.1  ATCTGGGATCCAGA.1  ATCTGGGATCCGAA.1 \n##                 0                 0                 0                 2 \n##  ATCTGTTGATGTCG.1  ATCTGTTGCTTAGG.1  ATCTGTTGGCTCCT.1  ATCTGTTGTAGAGA.1 \n##                 2                 0                 6                 3 \n##  ATCTGTTGTGGCAT.1  ATCTTGACGCCATA.1  ATCTTGACGGGATG.1  ATCTTGACGTCGAT.1 \n##                 0         CD16 Mono                 5                 3 \n##  ATCTTTCTCACTAG.1  ATCTTTCTCTTGTT.1  ATCTTTCTGAACTC.1  ATCTTTCTGGCATT.1 \n##                 2                 0         CD16 Mono         CD16 Mono \n##  ATCTTTCTTGCATG.1  ATGAAACTAACCAC.1  ATGAAACTAACGTC.1  ATGAAACTACCAGT.1 \n##                 2                 0                 6                 2 \n##  ATGAAACTGCTGTA.1  ATGAAACTGTCACA.1  ATGAAACTGTGCTA.1  ATGAAACTTCCTGC.1 \n##                 0                 2                 0                 0 \n##  ATGAAACTTCGCAA.1  ATGAAGGACACAAC.1  ATGAAGGACGATAC.1  ATGACGTGCATTTC.1 \n##                 6                 8                 0                 0 \n##  ATGACGTGCCAAGT.1  ATGACGTGGCATAC.1  ATGAGAGAAACCTG.1  ATGAGAGAAGCGGA.1 \n##                 0                 3                 2                 0 \n##  ATGAGAGACGACTA.1  ATGAGAGACTCCCA.1  ATGAGCACGCTAAC.1  ATGAGCACGTAGCT.1 \n##         CD16 Mono                 0         CD16 Mono                 5 \n##  ATGAGCACTCGCAA.1  ATGAGCACTTTGGG.1  ATGATATGAAGCCT.1  ATGATATGCGCTAA.1 \n##                 1                 2                 5                 0 \n##  ATGATATGTCTAGG.1  ATGATATGTTGGCA.1  ATGATATGTTTGCT.1  ATGCACGAGCTTCC.1 \n##         CD16 Mono                 1                 3                 0 \n##  ATGCACGAGTTAGC.1  ATGCACGATCCGTC.1  ATGCAGACGCAAGG.1  ATGCAGACGTAAGA.1 \n##                10                 0                 1         CD16 Mono \n##  ATGCAGACTGGATC.1  ATGCAGTGACACCA.1  ATGCAGTGACCCAA.1  ATGCAGTGCTTCCG.1 \n##                 0                 0                 0                 3 \n##  ATGCAGTGTCAGGT.1  ATGCCAGAAAGGTA.1  ATGCCAGAAGATCC.1  ATGCCAGACCGTAA.1 \n##                 0                 1                 1                10 \n##  ATGCCAGACCTTCG.1  ATGCCAGAGTGTTG.1  ATGCCAGATGTAGC.1  ATGCCGCTGGACTT.1 \n##                 1                 0                 1                 0 \n##  ATGCCGCTGTATCG.1  ATGCCGCTGTCATG.1  ATGCCGCTTGAAGA.1  ATGCGATGAAAACG.1 \n##                 0                 1                 2                 8 \n##  ATGCGATGTGCTGA.1  ATGCGCCTAGAAGT.1  ATGCGCCTATTTCC.1  ATGCGCCTCTGACA.1 \n##                 1                 7                 7         CD16 Mono \n##  ATGCGCCTCTTCTA.1  ATGCGCCTGCAAGG.1  ATGCTTTGACTTTC.1  ATGCTTTGCTTCCG.1 \n##                 0                10                 2                 0 \n##  ATGCTTTGGTGCAT.1  ATGCTTTGGTGCTA.1  ATGCTTTGTCTATC.1  ATGCTTTGTTCTGT.1 \n##                 0                 8                 5                 8 \n##  ATGGACACAAACAG.1  ATGGACACAACTGC.1  ATGGACACCCGCTT.1  ATGGACACGGTTTG.1 \n##                 1                 2                 0         CD16 Mono \n##  ATGGGTACAGACTC.1  ATGGGTACCCCGTT.1  ATGGGTACCTGATG.1  ATGGGTACTCGTAG.1 \n##                 0                12                 0                 1 \n##  ATGGGTACTGAGAA.1  ATGGGTACTGGAGG.1  ATGGTGACTCGTGA.1  ATGTAAACACTACG.1 \n##                 2                 9                 0                 8 \n##  ATGTAAACACTCTT.1  ATGTAAACATGGTC.1  ATGTAAACGATAGA.1  ATGTAAACGTTTGG.1 \n##         CD16 Mono                 2                 0         CD16 Mono \n##  ATGTACCTACGGTT.1  ATGTACCTAGCTAC.1  ATGTACCTCGACAT.1  ATGTACCTCTAGCA.1 \n##                 3                 3                 5                 0 \n##  ATGTACCTCTCAAG.1  ATGTCACTAAAAGC.1  ATGTCACTGTCTAG.1  ATGTCGGAATGCTG.1 \n##                 0                 1                 0                 1 \n##  ATGTCGGACTGGAT.1  ATGTCGGATGAAGA.1  ATGTCGGATGGAGG.1  ATGTCGGATGTGAC.1 \n##                 1                 7                 1                 1 \n##  ATGTCGGATGTGGT.1  ATGTTAGACACTCC.1  ATGTTAGAGCCATA.1  ATGTTAGAGTGCTA.1 \n##                 2                 0                 7                 0 \n##  ATGTTCACACCAGT.1  ATGTTCACAGTCTG.1  ATGTTCACCTACGA.1  ATGTTCACGCTGAT.1 \n##                10                 0                 0                 9 \n##  ATGTTCACTTCGCC.1  ATGTTGCTACCTCC.1  ATGTTGCTCCATAG.1  ATTAACGAAAGAGT.1 \n##                 2                 3                 1                 8 \n##  ATTAACGAACTGTG.1  ATTAACGACCATGA.1  ATTAACGAGACACT.1  ATTAACGATCAGTG.1 \n##                 1                 2                 0                 5 \n##  ATTAAGACTTCAGG.1  ATTACCACCTGGAT.1  ATTACCTGGGAGTG.1  ATTACCTGTCCAGA.1 \n##                 5                 2                 0                 0 \n##  ATTAGATGAAAGCA.1  ATTAGATGAAGCCT.1  ATTAGATGCACTGA.1  ATTAGATGCCGTAA.1 \n##                 0                 6                 0                 0 \n##  ATTAGATGGAGGAC.1  ATTAGATGTCACGA.1  ATTAGATGTGCTTT.1  ATTAGTGACATTCT.1 \n##                 9         CD16 Mono                 6                 0 \n##  ATTAGTGACGGTAT.1  ATTAGTGACTCTCG.1  ATTAGTGATACGAC.1  ATTAGTGATTCTAC.1 \n##                 6                 7                 0                 7 \n##  ATTATGGAAGATCC.1  ATTATGGAGAGACG.1  ATTATGGATCGTGA.1  ATTATGGATCTACT.1 \n##                 2                 3                 2                 7 \n##  ATTCAAGAAGTGCT.1  ATTCAAGAGACTAC.1  ATTCAAGAGGAGCA.1  ATTCAAGATGCAAC.1 \n##                 6                 1                 0                 2 \n##  ATTCAGCTATCGTG.1  ATTCAGCTGGAGGT.1  ATTCCATGACCAAC.1  ATTCCATGCAGAAA.1 \n##                 2                 2                 0                 0 \n##  ATTCCATGCTATTC.1  ATTCCATGCTTGCC.1  ATTCCATGGATGAA.1  ATTCGACTACGTTG.1 \n##                 1                 0                 0                 0 \n##  ATTCGGGAGAGGCA.1  ATTCGGGATGAACC.1  ATTCTGACGCTCCT.1  ATTCTTCTAGTGTC.1 \n##                 0                 3                 5                 5 \n##  ATTCTTCTCTGATG.1  ATTCTTCTGGCAAG.1  ATTGAAACAGTCTG.1  ATTGAAACGATACC.1 \n##                 0                 0                 8                 7 \n##  ATTGAAACGGTACT.1  ATTGAAACTTCGGA.1  ATTGAATGACGGGA.1  ATTGAATGGGACTT.1 \n##                 0                 0                 0                 3 \n##  ATTGATGAAAAACG.1  ATTGATGAGGTGGA.1  ATTGATGATCCTCG.1  ATTGCACTTACTTC.1 \n##                 1                 0                 2                 7 \n##  ATTGCACTTCGATG.1  ATTGCACTTGTCGA.1  ATTGCGGAACCACA.1  ATTGCGGAATTGGC.1 \n##                 1                13                 0                 6 \n##  ATTGCGGATCGTTT.1  ATTGCGGATGTCTT.1  ATTGCGGATGTTTC.1  ATTGCTACACCTCC.1 \n##                 1                 0                 5         CD16 Mono \n##  ATTGCTACACTCAG.1  ATTGCTACACTGTG.1  ATTGCTACCTCTCG.1  ATTGCTACGAGCTT.1 \n##                 0                 0         CD16 Mono                 0 \n##  ATTGCTACGGCAAG.1  ATTGCTACTCCGAA.1  ATTGCTTGCGTCTC.1  ATTGCTTGCTGGTA.1 \n##                 1                 5                 0                 3 \n##  ATTGCTTGGTCATG.1  ATTGCTTGTCACCC.1  ATTGCTTGTGCAAC.1  ATTGGGTGGAGGCA.1 \n##                 3                 6                 2                 6 \n##  ATTGGTCTCTCAGA.1  ATTGGTCTGACAAA.1  ATTGGTCTGCATAC.1  ATTGTAGAGACGGA.1 \n##                 1                 2                10                 5 \n##  ATTGTAGAGGCAAG.1  ATTGTCTGACGGAG.1  ATTGTCTGAGAATG.1  ATTGTCTGCACAAC.1 \n##                 1                 8                 1                 1 \n##  ATTGTCTGCTTTAC.1  ATTGTCTGGTTTGG.1  ATTGTCTGTACAGC.1  ATTTAGGAAACGAA.1 \n##                 0                 6         CD16 Mono                 0 \n##  ATTTAGGAAGAGAT.1  ATTTAGGACGAGTT.1  ATTTAGGAGATACC.1  ATTTAGGAGTGAGG.1 \n##                 0                 5                 8                 0 \n##  ATTTAGGATGCAGT.1  ATTTAGGATTTACC.1  ATTTCCGAATGTCG.1  ATTTCCGACTCGCT.1 \n##                 6                 2                 3                 3 \n##  ATTTCGTGCACTAG.1  ATTTCGTGTCATTC.1  ATTTCGTGTTTCTG.1  ATTTCTCTATAAGG.1 \n##                 7                 0                 1                 0 \n##  ATTTCTCTCATGCA.1  ATTTCTCTCTACTT.1  ATTTCTCTCTTGGA.1  ATTTCTCTGTCACA.1 \n##                 1                 0                 1         CD16 Mono \n##  ATTTCTCTGTTTGG.1  ATTTGCACCAAGCT.1  ATTTGCACCCTATT.1  ATTTGCACCTTCGC.1 \n##                 0                 0                 2                 0 \n##  ATTTGCACGTGAGG.1  ATTTGCACTATCGG.1  CAAACTCTAGCATC.1  CAAACTCTATCGGT.1 \n##                 1                 0                 2                 6 \n##  CAAACTCTTCGTAG.1  CAAACTCTTGGTGT.1  CAAACTCTTTACCT.1  CAAAGCACACACAC.1 \n##                 0                 7                 0                 6 \n##  CAAAGCACACACTG.1  CAAAGCACCGACAT.1  CAAAGCACCTACGA.1  CAAAGCACGAATGA.1 \n##                 0                 7                 1                 0 \n##  CAAAGCACTCTATC.1  CAAAGCTGCATTGG.1  CAAAGCTGCCTACC.1  CAAAGCTGTGAGGG.1 \n##                 0                 0                 1                 1 \n##  CAAATATGACGTGT.1  CAAATATGCGTAAC.1  CAAATTGAACACGT.1  CAAATTGACATTCT.1 \n##                 0                 3                 1                 0 \n##  CAAATTGACCCTCA.1  CAAATTGAGCGTAT.1  CAAATTGATATGCG.1  CAACAGACAGGAGC.1 \n##                 0                 0                 0                 5 \n##  CAACAGACATACCG.1  CAACAGACCGCATA.1  CAACAGACGTACGT.1  CAACCAGAGGAAGC.1 \n##                 5                 0                 0                 0 \n##  CAACCAGAGTGCAT.1  CAACCGCTCAGAAA.1  CAACCGCTCTGACA.1  CAACCGCTGACAGG.1 \n##                 2                 2                 6                 1 \n##  CAACCGCTGTTTCT.1  CAACCGCTTCTGGA.1  CAACGAACCTCCCA.1  CAACGAACGTCACA.1 \n##                 1                 0                 0                 6 \n##  CAACGAACTGTCAG.1  CAACGATGACGTTG.1  CAACGTGACGAGTT.1  CAACGTGAGACACT.1 \n##                 2                10                 0                10 \n##  CAACGTGAGCCTTC.1  CAACTTTGTAACCG.1  CAACTTTGTGGTCA.1  CAAGAAGAAGTCGT.1 \n##                 2                 3                 0                 3 \n##  CAAGAAGAAGTTCG.1  CAAGAAGACCAACA.1  CAAGAAGAGACGTT.1  CAAGAAGAGAGGAC.1 \n##                 0                 7                 0                 3 \n##  CAAGAAGAGGAGTG.1  CAAGAAGAGTCACA.1  CAAGAAGATAGACC.1  CAAGAAGATCCTGC.1 \n##                 7                 5                 5                 0 \n##  CAAGACACCTGGTA.1  CAAGACACGGGTGA.1  CAAGACACTCGTAG.1  CAAGACACTGCATG.1 \n##                 0                 5                 8                 2 \n##  CAAGACTGAACGGG.1  CAAGACTGTGGAGG.1  CAAGACTGTTCGCC.1  CAAGCATGAAGCCT.1 \n##                 6                 1                 3                 0 \n##  CAAGCATGACGGGA.1  CAAGCATGCAGATC.1  CAAGCATGCTAGTG.1  CAAGCATGGGTAAA.1 \n##                 0                 2                 2                 0 \n##  CAAGCATGGGTTAC.1  CAAGCATGGTTGCA.1  CAAGCATGTAGCGT.1  CAAGCATGTGTGAC.1 \n##                 0                 0                 0                 1 \n##  CAAGCCCTACAGCT.1  CAAGCCCTCAATCG.1  CAAGCCCTCTCGAA.1  CAAGCTGACTCCAC.1 \n##                 5                 2                 0                 8 \n##  CAAGCTGAGAGAGC.1  CAAGCTGAGGTACT.1  CAAGCTGATTCTCA.1  CAAGGACTCCAACA.1 \n##                 2                 7                 0                 1 \n##  CAAGGACTCCACAA.1  CAAGGACTCCTTGC.1  CAAGGACTCGTAGT.1  CAAGGACTTCCGTC.1 \n##                 0                 0                 1                 3 \n##  CAAGGACTTTGCGA.1  CAAGGTTGAGTCAC.1  CAAGGTTGCCTTAT.1  CAAGGTTGGAGGAC.1 \n##                 0                 9                 7         CD16 Mono \n##  CAAGGTTGGTCTGA.1  CAAGGTTGTGAACC.1  CAAGGTTGTGACAC.1  CAAGTTCTACGACT.1 \n##         CD16 Mono                 2                 3                 0 \n##  CAAGTTCTACTCTT.1  CAAGTTCTAGTCTG.1  CAAGTTCTGCTTCC.1  CAAGTTCTGTCGTA.1 \n##                 0                 0                 1                 1 \n##  CAAGTTCTTCCAGA.1  CAAGTTCTTCTTAC.1  CAATAAACGACAGG.1  CAATAAACGTACCA.1 \n##                 2                 9                 2                 1 \n##  CAATAATGCCCTCA.1  CAATAATGCCGCTT.1  CAATAATGCGAATC.1  CAATAATGGAATCC.1 \n##                 1                 2                 0                 0 \n##  CAATAATGGTTGAC.1  CAATATGAAACGTC.1  CAATATGAAGCCAT.1  CAATATGATGAGGG.1 \n##                 7                12                 1                 2 \n##  CAATATGATGGAAA.1  CAATCGGAACCAAC.1  CAATCGGAGATAAG.1  CAATCGGATCGTTT.1 \n##                 0                 7                 1                 6 \n##  CAATCGGATGGTGT.1  CAATCTACAGGTCT.1  CAATCTACATCGGT.1  CAATCTACCCAGTA.1 \n##                 2                 1                 1                 1 \n##  CAATCTACGGTCTA.1  CAATCTACGGTTAC.1  CAATGGACAAGAGT.1  CAATGGACCAGGAG.1 \n##                11                 0                 2                 1 \n##  CAATGGACCAGTTG.1  CAATGGACTCCAGA.1  CAATGGACTCTTAC.1  CAATTCACTGAGAA.1 \n##                 5         CD16 Mono                 0                 0 \n##  CAATTCTGAACCAC.1  CAATTCTGCCCTAC.1  CAATTCTGGTAGCT.1  CACAACGAACGACT.1 \n##                 1                 0         CD16 Mono                 9 \n##  CACAACGACCGTTC.1  CACAACGACCTCAC.1  CACAATCTCATCAG.1  CACAATCTGCCATA.1 \n##                 9         CD16 Mono                 0         CD16 Mono \n##  CACAATCTTGAGGG.1  CACACCTGAGTCTG.1  CACACCTGCAGATC.1  CACACCTGCATACG.1 \n##                 3                 5                 2                 8 \n##  CACACCTGTATCTC.1  CACACCTGTCCCAC.1  CACACCTGTGTCTT.1  CACAGAACACCATG.1 \n##                 0                11                 7                 1 \n##  CACAGAACGCATCA.1  CACAGAACGGTACT.1  CACAGAACGTCCTC.1  CACAGATGAAGAGT.1 \n##                11                 1                 0                 5 \n##  CACAGATGAGTGTC.1  CACAGATGGAGGTG.1  CACAGATGGCTGTA.1  CACAGCCTCTACGA.1 \n##                 0                 1                 1                 6 \n##  CACAGCCTGTCACA.1  CACAGTGAACCATG.1  CACAGTGACCGCTT.1  CACAGTGACTTAGG.1 \n##                 1                10                 0                 2 \n##  CACAGTGAGGGTGA.1  CACAGTGATGTTCT.1  CACATACTAGCGTT.1  CACATACTATCTTC.1 \n##                 2                 0                 8                 1 \n##  CACATACTCATGCA.1  CACATACTCTGCTC.1  CACATACTTGTGGT.1  CACATGGACGGAGA.1 \n##                 0                 3                 1                 0 \n##  CACATGGACTTTAC.1  CACATGGATCCTTA.1  CACCACTGACGTAC.1  CACCACTGCTACCC.1 \n##                 2                 1                 6                 1 \n##  CACCACTGCTGGAT.1  CACCACTGGCTATG.1  CACCACTGGTAAAG.1  CACCACTGTAGAGA.1 \n##                 1                 1                 9                 0 \n##  CACCCATGACGTTG.1  CACCCATGGACACT.1  CACCCATGGTTTGG.1  CACCGGGACTGGAT.1 \n##                 0                 0                 0                 9 \n##  CACCGGGAGACGTT.1  CACCGGGAGCGAGA.1  CACCGGGATCTTCA.1  CACCGTACACTCAG.1 \n##                 0                 3                 2                 0 \n##  CACCGTACCCCGTT.1  CACCGTACCCTTAT.1  CACCGTACGGACGA.1  CACCGTACGGTTTG.1 \n##         CD16 Mono                 2                 1                 2 \n##  CACCGTACTACTTC.1  CACCGTTGACTAGC.1  CACCGTTGCAGAAA.1  CACCGTTGCTGGTA.1 \n##                 9                 1                 2                 0 \n##  CACCGTTGGTTCGA.1  CACCGTTGTAGTCG.1  CACCGTTGTCGTAG.1  CACCTGACGACAGG.1 \n##                 0                 0         CD16 Mono                12 \n##  CACCTGACGACGAG.1  CACCTGACGGGCAA.1  CACCTGACGTGTTG.1  CACCTGACTGACTG.1 \n##                 0                 0                 1                 1 \n##  CACCTGACTTGCTT.1  CACGAAACCGCAAT.1  CACGAAACCGTAGT.1  CACGAAACGCAGTT.1 \n##         CD16 Mono                 0                 1                 0 \n##  CACGACCTACACGT.1  CACGACCTCGATAC.1  CACGATGAAACCAC.1  CACGATGACGTACA.1 \n##                 2                 6                 2                 0 \n##  CACGATGAGCAAGG.1  CACGATGAGCTACA.1  CACGATGATAACCG.1  CACGCTACCGTCTC.1 \n##                 9                 2                 0                 3 \n##  CACGCTACTAAGCC.1  CACGGGACCTAAGC.1  CACGGGACGAGACG.1  CACGGGACGCTGAT.1 \n##                 8                 5                 3                 2 \n##  CACGGGACGGATCT.1  CACGGGACTCGATG.1  CACGGGACTTCTCA.1  CACGGGTGGAACCT.1 \n##                 0                 3                 3                 0 \n##  CACGGGTGTCGCAA.1  CACTAACTACACGT.1  CACTAACTCGCCTT.1  CACTAACTGTCGAT.1 \n##                 9                 5                10                 1 \n##  CACTAACTTGGGAG.1  CACTAACTTTGACG.1  CACTAGGAACACCA.1  CACTAGGACAACCA.1 \n##                 0                 1         CD16 Mono                 0 \n##  CACTAGGAGTAAAG.1  CACTAGGATACGAC.1  CACTATACCAGAAA.1  CACTATACGTATCG.1 \n##                 0                 9                 0                 2 \n##  CACTATACGTTACG.1  CACTATACTTCTCA.1  CACTCCGACATGAC.1  CACTCCGACCGTTC.1 \n##                 9                 5                 8                 0 \n##  CACTCCGAGCCCTT.1  CACTCCGATTCAGG.1  CACTCTCTAGCACT.1  CACTCTCTAGCTAC.1 \n##                 5         CD16 Mono                 0                 0 \n##  CACTCTCTCGGTAT.1  CACTCTCTTGCAGT.1  CACTGAGACAGATC.1  CACTGAGACCCTTG.1 \n##                 2                 0                 1                 3 \n##  CACTGAGACTGTTT.1  CACTGAGAGGAACG.1  CACTGCACACAGCT.1  CACTGCACATCAGC.1 \n##                 1                 0                 0                 0 \n##  CACTGCACGTAGGG.1  CACTGCTGACCCTC.1  CACTGCTGCAGGAG.1  CACTGCTGCTGCTC.1 \n##                 0                 2                 5                11 \n##  CACTGCTGGAATCC.1  CACTGCTGTCCAGA.1  CACTGCTGTGCAAC.1  CACTGCTGTGGTCA.1 \n##                 6                 1                 5                 1 \n##  CACTTAACAGAATG.1  CACTTAACATTCTC.1  CACTTAACCCGATA.1  CACTTATGCCCAAA.1 \n##                 8                 5                 1                 0 \n##  CACTTATGGGACGA.1  CACTTATGTGCCTC.1  CACTTATGTGGTCA.1  CACTTTGAACTCAG.1 \n##                 6                 0                 7                 2 \n##  CACTTTGAAGCTCA.1  CACTTTGACACTCC.1  CACTTTGAGAGCAG.1  CACTTTGATCTCTA.1 \n##                 0                 8                 5                 2 \n##  CAGAAGCTCACTTT.1  CAGAAGCTGCGAAG.1  CAGACAACAACTGC.1  CAGACAACCGCCTT.1 \n##                 7                 1                 1                 8 \n##  CAGACAACCGTACA.1  CAGACAACCTCAGA.1  CAGACATGAACGTC.1  CAGACATGACTACG.1 \n##                 0                 9                 2         CD16 Mono \n##  CAGACATGCATTGG.1  CAGACATGCCCACT.1  CAGACATGCTCGCT.1  CAGACCCTGAAACA.1 \n##                 0                 2                 2                 0 \n##  CAGACTGAAAGGTA.1  CAGACTGACAATCG.1  CAGACTGACAGAAA.1  CAGACTGAGGCATT.1 \n##                 8                 5         CD16 Mono                 0 \n##  CAGACTGATAGCGT.1  CAGAGGGAAAAGTG.1  CAGAGGGAACTAGC.1  CAGAGGGAGACACT.1 \n##                 1                 2                 2                 0 \n##  CAGAGGGAGCTGAT.1  CAGATGACAGAACA.1  CAGATGACAGAATG.1  CAGATGACAGTGTC.1 \n##                 7                 2                 0                 0 \n##  CAGATGACCCTCGT.1  CAGATGACCGAGTT.1  CAGATGACGAGGAC.1  CAGATGACGGGCAA.1 \n##                 8         CD16 Mono                 0                 0 \n##  CAGCAATGACTAGC.1  CAGCAATGCGTAGT.1  CAGCAATGGCCATA.1  CAGCAATGGGTACT.1 \n##                 3                 6                 1                 1 \n##  CAGCAATGGTCACA.1  CAGCACCTCCTACC.1  CAGCACCTCTTGCC.1  CAGCATGAACCCAA.1 \n##                 7                 6                 5                 0 \n##  CAGCATGAGTTTGG.1  CAGCATGATATCTC.1  CAGCATGATGTCAG.1  CAGCCTACGAGGAC.1 \n##                 5                12                 0                 5 \n##  CAGCCTACTCTCGC.1  CAGCCTTGACACGT.1  CAGCCTTGCTGAGT.1  CAGCCTTGTGCAAC.1 \n##                 0                 2                 2                 0 \n##  CAGCCTTGTTGCGA.1  CAGCGGACAGCGTT.1  CAGCGGACCACAAC.1  CAGCGGACCCAGTA.1 \n##                 1         CD16 Mono                 1                 1 \n##  CAGCGGACTTATCC.1  CAGCGGACTTTGCT.1  CAGCGTCTAACGGG.1  CAGCGTCTATGTCG.1 \n##                 9                 2                 0                 0 \n##  CAGCGTCTATGTGC.1  CAGCGTCTGTTCTT.1  CAGCGTCTTCGTGA.1  CAGCTAGACCGAAT.1 \n##                 1                 0                 5                 0 \n##  CAGCTCACGGTACT.1  CAGCTCACTGAGGG.1  CAGCTCACTTCCCG.1  CAGCTCTGAGGTCT.1 \n##                 7                 0                 2         CD16 Mono \n##  CAGGAACTCCACAA.1  CAGGAACTCTTTAC.1  CAGGAACTGACGTT.1  CAGGCCGAAAGATG.1 \n##                 0                 0                 5                 5 \n##  CAGGCCGAGAGGTG.1  CAGGCCGAGTCGAT.1  CAGGGCACACGCAT.1  CAGGGCACCTTGAG.1 \n##                 0                 2                 1                 1 \n##  CAGGGCACGCGAAG.1  CAGGGCACTCTGGA.1  CAGGTAACGCCCTT.1  CAGGTAACGTTCAG.1 \n##                 7                11                10                 0 \n##  CAGGTATGCCAATG.1  CAGGTATGCCCTTG.1  CAGGTATGCTTCGC.1  CAGGTATGGAATGA.1 \n##                 1                 3                 0                 0 \n##  CAGGTTGAAACAGA.1  CAGGTTGACTCGCT.1  CAGGTTGAGAGAGC.1  CAGGTTGAGGGATG.1 \n##                 5                 2                 0                 2 \n##  CAGGTTGAGTATGC.1  CAGTCAGAAGGCGA.1  CAGTCAGACATGGT.1  CAGTCAGAGTTAGC.1 \n##         CD16 Mono                 0                 0                 2 \n##  CAGTGATGAGCAAA.1  CAGTGATGCCTCCA.1  CAGTGATGCTATTC.1  CAGTGATGGGTCAT.1 \n##                 1                 8                13                 0 \n##  CAGTGATGGTATCG.1  CAGTGTGAATTCTC.1  CAGTGTGACCTCCA.1  CAGTGTGACTGCTC.1 \n##                 1         CD16 Mono                 5                 1 \n##  CAGTGTGATCAGGT.1  CAGTGTGATGTGCA.1  CAGTGTGATTTGGG.1  CAGTTACTCCCACT.1 \n##                 5                 8                 5                 5 \n##  CAGTTACTTGAACC.1  CAGTTACTTGCCCT.1  CAGTTACTTTCGTT.1  CAGTTGGAACGACT.1 \n##                 0                 6                 1                 7 \n##  CAGTTGGAAGTCGT.1  CAGTTGGACGGGAA.1  CAGTTGGAGGAGCA.1  CAGTTGGATTCCCG.1 \n##                 0                 0                 0         CD16 Mono \n##  CAGTTTACCCAGTA.1  CAGTTTACGTTCGA.1  CAGTTTACTATCTC.1  CATAAAACACCCTC.1 \n##                 8                 9                 0                 0 \n##  CATAAAACAGAGAT.1  CATAAAACGTCCTC.1  CATAAAACTGAGAA.1  CATAAATGCAAGCT.1 \n##                 0                 5                 0                 0 \n##  CATAAATGCCTTAT.1  CATAAATGGGTCTA.1  CATAACCTACCTAG.1  CATAACCTGGTAGG.1 \n##                 2                 0                 0                 1 \n##  CATAACCTGTTCAG.1  CATAACCTTAACGC.1  CATACTACCCGAAT.1  CATACTACCTATGG.1 \n##                 5                 0                 1                 3 \n##  CATACTACTGTGCA.1  CATACTTGACTACG.1  CATACTTGGGGTGA.1  CATACTTGGGTAGG.1 \n##                 0                 2                10                 6 \n##  CATACTTGTGCCAA.1  CATAGTCTACACTG.1  CATAGTCTCCCTTG.1  CATAGTCTCTGTTT.1 \n##                 2                 0                 2                 0 \n##  CATAGTCTGGAACG.1  CATAGTCTTAGCCA.1  CATATAGAATCGTG.1  CATATAGACCTGTC.1 \n##                 2                 0                 0                 1 \n##  CATATAGAGTACGT.1  CATATAGATAAGCC.1  CATATAGATATCTC.1  CATATAGATCTTTG.1 \n##                 6                 2                 7                 0 \n##  CATATAGATGTCCC.1  CATCAACTACTACG.1  CATCAACTGCCCTT.1  CATCAACTTAACGC.1 \n##                 2                10                11                 1 \n##  CATCAACTTAGACC.1  CATCAACTTTCAGG.1  CATCAACTTTCCAT.1  CATCAACTTTCCCG.1 \n##                 8                 1                 0                 1 \n##  CATCAGGAGCGGAA.1  CATCAGGAGGGACA.1  CATCAGGAGGTGTT.1  CATCAGGAGTCCTC.1 \n##         CD16 Mono                 3                 1                 3 \n##  CATCAGGATGCTGA.1  CATCAGGATTGACG.1  CATCATACCCTGTC.1  CATCATACCGTCTC.1 \n##                 0                 8                 0                 1 \n##  CATCATACTCAGAC.1  CATCATACTGTGCA.1  CATCCCGATCATTC.1  CATCGGCTATGTGC.1 \n##                 0                 1                 1                 0 \n##  CATCGGCTGCATCA.1  CATCGGCTTCGATG.1  CATCTCCTAGTCTG.1  CATCTCCTCTATGG.1 \n##                 3                 2         CD16 Mono                 2 \n##  CATCTCCTTGAGAA.1  CATCTCCTTTGGCA.1  CATCTCCTTTTACC.1  CATCTTGAAGCACT.1 \n##                 6                 0                 0                 0 \n##  CATCTTGAGCTAAC.1  CATCTTGATTTGCT.1  CATGAGACAGGTCT.1  CATGAGACATGCTG.1 \n##                10                 0                 0                 5 \n##  CATGAGACCTATTC.1  CATGAGACCTCTCG.1  CATGCCACTCATTC.1  CATGCGCTCCTTCG.1 \n##                 6                 7                 1                 3 \n##  CATGCGCTCTGAAC.1  CATGCGCTGGTTTG.1  CATGCGCTTTGTCT.1  CATGGCCTCCCTTG.1 \n##                 2                 5                 7                 2 \n##  CATGGCCTTAGAAG.1  CATGGCCTTCCAAG.1  CATGGCCTTGTCTT.1  CATGGCCTTTCTAC.1 \n##                 0                 3                 1                 7 \n##  CATGTACTCAAGCT.1  CATGTACTCAATCG.1  CATGTACTGATAAG.1  CATGTACTGGAGTG.1 \n##                 0                 0         CD16 Mono                 1 \n##  CATGTACTTCAGTG.1  CATGTTACATCGGT.1  CATGTTACCATGGT.1  CATGTTACCGTGAT.1 \n##                 1                 0                 2                 1 \n##  CATGTTACGCAGTT.1  CATGTTACGTTTCT.1  CATGTTACTGTCTT.1  CATGTTTGAAAACG.1 \n##         CD16 Mono                 0                 8                 0 \n##  CATGTTTGCCTGAA.1  CATGTTTGCGAGAG.1  CATGTTTGGATAGA.1  CATTACACCGAGAG.1 \n##                 0                 2                 1                 6 \n##  CATTACACTCTTAC.1  CATTAGCTATTCCT.1  CATTAGCTCTTTAC.1  CATTAGCTGGGATG.1 \n##                 9                 0         CD16 Mono                 0 \n##  CATTCCCTAAGTAG.1  CATTCCCTAGTGCT.1  CATTCCCTATTGGC.1  CATTCCCTCCTTAT.1 \n##                 0                 0                 0                 2 \n##  CATTCCCTGTTCTT.1  CATTGACTGCGATT.1  CATTGACTTATGGC.1  CATTGGGAGGGATG.1 \n##                 0                 0                 6                 1 \n##  CATTGGGATGTCAG.1  CATTGTACAACGTC.1  CATTGTACACTGTG.1  CATTGTTGAACAGA.1 \n##                 1                 0                 2                 1 \n##  CATTGTTGCAACTG.1  CATTGTTGGGGAGT.1  CATTGTTGGGTATC.1  CATTGTTGTACGAC.1 \n##                10                 6                 1                 1 \n##  CATTGTTGTGTGCA.1  CATTTCGAACCACA.1  CATTTCGAACCTCC.1  CATTTCGACACTGA.1 \n##                 0                 3                 5                 0 \n##  CATTTCGATTAGGC.1  CATTTGACACTTTC.1  CATTTGACGTTCAG.1  CATTTGTGGAGCAG.1 \n##                 1                 0                 0                 2 \n##  CATTTGTGGATGAA.1  CATTTGTGGGTCTA.1  CATTTGTGTGTCAG.1  CATTTGTGTTATCC.1 \n##                 1                 1                 5                 3 \n##  CCAAAGTGATCAGC.1  CCAAAGTGATCGGT.1  CCAACCTGAGGCGA.1  CCAACCTGATGTCG.1 \n##         CD16 Mono                 0                 1                 0 \n##  CCAACCTGGAAGGC.1  CCAACCTGTACGAC.1  CCAACCTGTGCCAA.1  CCAAGAACCACTTT.1 \n##                 3                 0                 1                 0 \n##  CCAAGAACCTAGCA.1  CCAAGAACGGTTAC.1  CCAAGAACGTACAC.1  CCAAGAACGTGCAT.1 \n##                 1                 1                 1                 0 \n##  CCAAGAACTGACCA.1  CCAAGAACTGTCCC.1  CCAAGATGAGTCAC.1  CCAAGATGCGACAT.1 \n##                 8                 7                 5                 0 \n##  CCAAGATGTCAGGT.1  CCAAGATGTGTCGA.1  CCAAGATGTGTGAC.1  CCAAGTGAAGCTCA.1 \n##                 0                 2                 2                 2 \n##  CCAAGTGACACTGA.1  CCAAGTGAGCTTAG.1  CCAAGTGATAACGC.1  CCAAGTGATACGAC.1 \n##                 1                 0                11                 0 \n##  CCAAGTGATCCGTC.1  CCAATGGATGCATG.1  CCAATTTGAGATCC.1  CCAATTTGCAGGAG.1 \n##                 0                 0                 7                 1 \n##  CCAATTTGCCTACC.1  CCAATTTGGTTAGC.1  CCAATTTGTCTCAT.1  CCAATTTGTGGAAA.1 \n##                 0                 0                 1                 0 \n##  CCACCATGCAGTCA.1  CCACCATGGCCATA.1  CCACCTGACCGTAA.1  CCACCTGACGAGAG.1 \n##                 2                 0                 1                 7 \n##  CCACCTGATAGTCG.1  CCACGGGAACGGGA.1  CCACGGGAGGGAGT.1  CCACTGACGACAGG.1 \n##                 1                 0                 1                 6 \n##  CCACTGACTGTCCC.1  CCACTGTGACTGTG.1  CCACTGTGATGCTG.1  CCACTGTGCGTCTC.1 \n##                 1                 5                 0                 1 \n##  CCACTGTGCGTGTA.1  CCACTGTGCTTCTA.1  CCACTGTGGACGAG.1  CCACTGTGGCTAAC.1 \n##                 0                 2                 0                 0 \n##  CCACTTCTAACGTC.1  CCACTTCTCACTGA.1  CCACTTCTCTCGCT.1  CCACTTCTCTTGCC.1 \n##                 0                 0                 0                 2 \n##  CCAGAAACCTTCGC.1  CCAGAAACTAGAAG.1  CCAGACCTCTATGG.1  CCAGATGATGACCA.1 \n##                 7                 2                 1                 6 \n##  CCAGCACTAGAGTA.1  CCAGCACTGCATAC.1  CCAGCGGACTTCGC.1  CCAGCGGAGAGGCA.1 \n##                 1                 8                 3                 2 \n##  CCAGCGGATCTTAC.1  CCAGCGGATTATCC.1  CCAGCGGATTCTCA.1  CCAGCGGATTTACC.1 \n##                 0                 0                 9                 0 \n##  CCAGCTACAACGGG.1  CCAGCTACCAATCG.1  CCAGCTACCAGTCA.1  CCAGCTACCCGTTC.1 \n##                 2                 2                 1                 9 \n##  CCAGGTCTCGTAGT.1  CCAGGTCTGACGAG.1  CCAGTCTGACAGTC.1  CCAGTCTGTCTTCA.1 \n##                 5                 6                 3                 2 \n##  CCAGTGCTGGCATT.1  CCAGTGCTGGGCAA.1  CCAGTGCTGTCTAG.1  CCAGTGCTTAACCG.1 \n##         CD16 Mono                 1                 0                 1 \n##  CCATAGGACCTATT.1  CCATAGGAGGTAAA.1  CCATATACAAGATG.1  CCATATACACACTG.1 \n##                 0                 3                 0                 7 \n##  CCATATACGATGAA.1  CCATATACTGGTGT.1  CCATATACTTTACC.1  CCATCCGAACTTTC.1 \n##                 1         CD16 Mono                 0                 3 \n##  CCATCCGAGGTTTG.1  CCATCCGAGTGCTA.1  CCATCCGATTCTAC.1  CCATCGTGAAGCCT.1 \n##                 1                 1                 2                 0 \n##  CCATCGTGACCCTC.1  CCATCGTGCTGGAT.1  CCATCGTGGACGAG.1  CCATCGTGTCGCAA.1 \n##                 5                 2                 6                 1 \n##  CCATGCTGAAACGA.1  CCATGCTGCCAAGT.1  CCATGCTGCTAAGC.1  CCATGCTGGAGATA.1 \n##                 1                 1                 0                 7 \n##  CCATGCTGGGATCT.1  CCATGCTGTCACGA.1  CCATTAACGTGAGG.1  CCCAAAGAATCACG.1 \n##                 5                 2                 2                 5 \n##  CCCAAAGAGTCCTC.1  CCCAACACAGTAGA.1  CCCAACACCAAGCT.1  CCCAACACTCCGTC.1 \n##                 0                 0                 0                11 \n##  CCCAACACTGAGGG.1  CCCAACACTGATGC.1  CCCAACTGCCTACC.1  CCCAACTGGATACC.1 \n##                 2         CD16 Mono                 5                 0 \n##  CCCAACTGGCCATA.1  CCCAACTGGTGTAC.1  CCCAACTGGTTGAC.1  CCCACATGCTTTAC.1 \n##                 7                 1                 3                 3 \n##  CCCACATGGGTGGA.1  CCCAGACTAAACGA.1  CCCAGACTCCAAGT.1  CCCAGACTTCCCAC.1 \n##                 0                 7                 0         CD16 Mono \n##  CCCAGACTTCCTAT.1  CCCAGTTGACAGTC.1  CCCAGTTGTCGTTT.1  CCCAGTTGTTTCTG.1 \n##         CD16 Mono         CD16 Mono                 7                 3 \n##  CCCATCGACCCGTT.1  CCCATCGAGAGGGT.1  CCCATCGAGTAAAG.1  CCCATGTGACGTTG.1 \n##                 0                 0                 0                 0 \n##  CCCATGTGCCGAAT.1  CCCATGTGCCTCAC.1  CCCATGTGCGTAAC.1  CCCATGTGCTTGGA.1 \n##                 1                 2                 1                 8 \n##  CCCATGTGTGACCA.1  CCCATGTGTGCACA.1  CCCGAACTACCAAC.1  CCCGAACTTAGCGT.1 \n##                 7                 3                 6                 0 \n##  CCCGAACTTCCCAC.1  CCCGATTGAAGAGT.1  CCCGATTGAGCGGA.1  CCCGATTGCCCGTT.1 \n##                 1                 0                 6                 1 \n##  CCCGATTGCTGATG.1  CCCGATTGCTTACT.1  CCCGATTGCTTATC.1  CCCGGAGACAACCA.1 \n##                 3                 3                 8                 0 \n##  CCCGGAGACTTGCC.1  CCCGGAGAGGGAGT.1  CCCGGAGAGGTTCA.1  CCCGGAGATACTTC.1 \n##                 1                 0                 2                 0 \n##  CCCGGAGATCTTAC.1  CCCTACGACATTCT.1  CCCTACGACTGAAC.1  CCCTACGATTCGGA.1 \n##                 0                 1                 0                 6 \n##  CCCTAGTGCAACCA.1  CCCTAGTGCAGGAG.1  CCCTAGTGTTCTCA.1  CCCTCAGAACCACA.1 \n##                 8                 1                 0                 0 \n##  CCCTCAGAGAGGCA.1  CCCTGAACAATCGC.1  CCCTGAACACTGTG.1  CCCTGAACATTTCC.1 \n##                 5                 2                 0         CD16 Mono \n##  CCCTGATGCTGAGT.1  CCCTGATGGAACCT.1  CCCTGATGGAGACG.1  CCCTGATGGGTCAT.1 \n##         CD16 Mono                 7                 0                 5 \n##  CCCTGATGTGCAGT.1  CCCTTACTACCAAC.1  CCCTTACTCATTGG.1  CCCTTACTCGTGTA.1 \n##                 6                 2                 0                 3 \n##  CCCTTACTCTCGAA.1  CCCTTACTGACGAG.1  CCGAAAACATACCG.1  CCGAAAACCAGAAA.1 \n##                 3                 1                 1                 2 \n##  CCGAAAACCGATAC.1  CCGAAAACTTTGCT.1  CCGACACTGAGAGC.1  CCGACACTGGACAG.1 \n##                10         CD16 Mono                 2         CD16 Mono \n##  CCGACACTTGACCA.1  CCGACTACTTTACC.1  CCGATAGACTTGTT.1  CCGATAGAGCGGAA.1 \n##                 7         CD16 Mono                 1                 2 \n##  CCGATAGAGGTCAT.1  CCGCGAGAACGCAT.1  CCGCGAGAGCAGAG.1  CCGCGAGATCTCGC.1 \n##         CD16 Mono                 2                 0                 6 \n##  CCGCGAGATGCATG.1  CCGCTATGCAGCTA.1  CCGCTATGCCCACT.1  CCGCTATGGGGTGA.1 \n##                 1                 0                 0                12 \n##  CCGCTATGGTCACA.1  CCGGAGACTAGTCG.1  CCGGAGACTCTACT.1  CCGGAGTGCCGTAA.1 \n##                 5                 0                 2                 0 \n##  CCGGAGTGCCTCCA.1  CCGGAGTGCTGCAA.1  CCGGAGTGCTTGGA.1  CCGGAGTGTATGGC.1 \n##                 2                 8                 7                 1 \n##  CCGGAGTGTGCCTC.1  CCGGTACTAGGAGC.1  CCGGTACTCTGATG.1  CCGGTACTTCTCTA.1 \n##                 2                 2                 2                 1 \n##  CCGTAAGACAGGAG.1  CCGTAAGACATGAC.1  CCGTACACCTCCAC.1  CCGTACACCTTGGA.1 \n##                 0                 8                 1                 8 \n##  CCGTACACTATGCG.1  CCTAAACTCCTTCG.1  CCTAAACTGTGTAC.1  CCTAAACTTCAGGT.1 \n##                 5                 0                 1                 0 \n##  CCTAAACTTCCGTC.1  CCTAAGGAAACTGC.1  CCTAAGGAAAGGGC.1  CCTAAGGAGGATCT.1 \n##                 0                 0                10                 8 \n##  CCTAAGGATGTCAG.1  CCTAAGGATTACCT.1  CCTACCGAAAGAGT.1  CCTACCGAAGTCTG.1 \n##                 0                 6                 0                 1 \n##  CCTACCGACATGAC.1  CCTACCGACGTACA.1  CCTACCGAGACACT.1  CCTACCGAGCGTTA.1 \n##                 0                 5                 1                 1 \n##  CCTACCGAGGTTTG.1  CCTACCGATCGACA.1  CCTACCGATTACCT.1  CCTACCGATTGGCA.1 \n##                 8         CD16 Mono                 2                 1 \n##  CCTACCGATTTCTG.1  CCTAGAGAAGTTCG.1  CCTAGAGACGACAT.1  CCTAGAGAGCGTTA.1 \n##                 3                 2                 8                 3 \n##  CCTAGAGATACGCA.1  CCTAGAGATGTCTT.1  CCTATAACCTCAGA.1  CCTATAACGGCAAG.1 \n##                 0                 5                 0                 0 \n##  CCTATTGAACCAAC.1  CCTATTGACCCTAC.1  CCTATTGACCTACC.1  CCTATTGATCCTCG.1 \n##                 0                 8                 5                 0 \n##  CCTCATCTCACTGA.1  CCTCATCTCCGCTT.1  CCTCGAACCCCACT.1  CCTCGAACGTAAAG.1 \n##                 2                 0         CD16 Mono                 5 \n##  CCTCTACTAGATCC.1  CCTCTACTGGAAGC.1  CCTGACTGACGGGA.1  CCTGACTGCTCTTA.1 \n##         CD16 Mono                 0                 0                 5 \n##  CCTGACTGGTCACA.1  CCTGACTGTAAGGA.1  CCTGAGCTACACTG.1  CCTGAGCTACAGTC.1 \n##                 0                 6                 0                 1 \n##  CCTGAGCTGTCAAC.1  CCTGCAACCACTAG.1  CCTGCAACCTCAGA.1  CCTGCAACTAAGGA.1 \n##                 0                 8                 1                 6 \n##  CCTGCAACTCATTC.1  CCTGCAACTCGCCT.1  CCTGCAACTTTGGG.1  CCTGGACTCGTAAC.1 \n##                 2                 2                 0                 0 \n##  CCTGGACTCTAAGC.1  CCTTAATGAAGGTA.1  CCTTAATGCTCGAA.1  CCTTAATGGACGTT.1 \n##                 2                 2                 2                 5 \n##  CCTTAATGGATGAA.1  CCTTAATGGGGTGA.1  CCTTAATGTCCGAA.1  CCTTAATGTCGATG.1 \n##                 6                 3                 6                 0 \n##  CCTTAATGTGCATG.1  CCTTCACTTGTCTT.1  CCTTTAGACACTGA.1  CCTTTAGACCATGA.1 \n##                12                 0                 2                 2 \n##  CCTTTAGACTACGA.1  CCTTTAGAGAAACA.1  CCTTTAGAGGTATC.1  CCTTTAGAGTGTTG.1 \n##                 8                 0                 8                 1 \n##  CCTTTAGATAGAAG.1  CCTTTAGATCAGTG.1  CCTTTAGATGCCTC.1  CCTTTAGATGGAAA.1 \n##                 1                 2                 0                 0 \n##  CGAACATGAATCGC.1  CGAAGACTACGGAG.1  CGAAGACTATCGTG.1  CGAAGACTCCTCGT.1 \n##                 0                 3                 0                 0 \n##  CGAAGACTGTAAAG.1  CGAAGACTTACGAC.1  CGAAGGGAAAGATG.1  CGAAGGGAACTCTT.1 \n##                 6                 0         CD16 Mono                 2 \n##  CGAAGGGAAGAGGC.1  CGAAGGGACTGAGT.1  CGAAGTACAAACGA.1  CGAAGTACAACCGT.1 \n##                 5                 0                 0                 6 \n##  CGAAGTACAAGCAA.1  CGAAGTACACCTCC.1  CGAAGTACAGCCAT.1  CGAAGTACCGTAGT.1 \n##                 2                 0                 0                 1 \n##  CGAAGTACGGAAAT.1  CGAAGTACGGTGTT.1  CGAAGTACTAGAAG.1  CGAAGTACTTTACC.1 \n##         CD16 Mono                 2         CD16 Mono                 6 \n##  CGAATCGAGCAGAG.1  CGAATCGATGTCAG.1  CGACAAACAGCAAA.1  CGACAAACAGTCTG.1 \n##                 2                 0                 7         CD16 Mono \n##  CGACAAACATACCG.1  CGACAAACATCAGC.1  CGACAAACATGTGC.1  CGACAAACCCCAAA.1 \n##                 2                 1                 0                 2 \n##  CGACAAACGATGAA.1  CGACAAACGTACGT.1  CGACAAACTGTAGC.1  CGACCACTAATCGC.1 \n##                 6                 8                 0                 3 \n##  CGACCACTGTTCAG.1  CGACCACTTTCCCG.1  CGACCGGACGTCTC.1  CGACCGGAGAATCC.1 \n##                 1                 2                 0         CD16 Mono \n##  CGACCGGAGCAGTT.1  CGACCGGATATTCC.1  CGACCGGATCGCTC.1  CGACCGGATCTACT.1 \n##         CD16 Mono                 0                 0                 0 \n##  CGACCTACCCCTAC.1  CGACCTACCTATGG.1  CGACCTACGCAGAG.1  CGACCTACGCGATT.1 \n##                 1                 6                 0         CD16 Mono \n##  CGACCTACGGTCAT.1  CGACCTACTCACGA.1  CGACCTTGACCGAT.1  CGACCTTGCAGTTG.1 \n##                 1                 0                 0                 6 \n##  CGACCTTGCCAGTA.1  CGACCTTGGTAAAG.1  CGACCTTGTACTGG.1  CGACCTTGTCCAAG.1 \n##                 0                 1                 0                 0 \n##  CGACGTCTCAGCTA.1  CGACGTCTGTGCAT.1  CGACTCACAACGGG.1  CGACTCACACCAGT.1 \n##                 3                 0                 0         CD16 Mono \n##  CGACTCACACGTTG.1  CGACTCACCTGGAT.1  CGACTCACGAAACA.1  CGACTCACGTAAAG.1 \n##                 0                 1                 0                 1 \n##  CGACTCACTGGTGT.1  CGACTCTGACGTTG.1  CGACTCTGATGTGC.1  CGACTCTGCAGGAG.1 \n##                 5                 0         CD16 Mono                 9 \n##  CGACTCTGCCAAGT.1  CGACTCTGCTAGAC.1  CGACTCTGGCGTAT.1  CGACTCTGGTTTCT.1 \n##                 0                 8                 0                 0 \n##  CGACTCTGTATCTC.1  CGACTCTGTCACCC.1  CGACTCTGTCGTGA.1  CGACTCTGTCTTCA.1 \n##                 5                 0                 0                 0 \n##  CGACTGCTAGTACC.1  CGACTGCTCGTCTC.1  CGACTGCTGTATGC.1  CGACTGCTGTTGAC.1 \n##                 0                 5                 0                 9 \n##  CGACTGCTTGTCGA.1  CGAGATTGGAATCC.1  CGAGATTGTATCTC.1  CGAGCCGACCCAAA.1 \n##                 0                 1                 3                10 \n##  CGAGCCGACCTCCA.1  CGAGCCGAGAAAGT.1  CGAGCGTGGCATAC.1  CGAGCGTGGGTGGA.1 \n##                 0                 3                 0                 0 \n##  CGAGCGTGTGCTGA.1  CGAGGAGAATCACG.1  CGAGGAGACCAATG.1  CGAGGAGACTCAGA.1 \n##                 6                 9                 3                 1 \n##  CGAGGAGAGGAAGC.1  CGAGGAGAGGAGGT.1  CGAGGAGATTACCT.1  CGAGGAGATTCTGT.1 \n##                 1                 0                 7                 0 \n##  CGAGGCACAAGAAC.1  CGAGGCACAGTCGT.1  CGAGGCACGAAACA.1  CGAGGCACGTCCTC.1 \n##                 1         CD16 Mono                 9                 0 \n##  CGAGGCACTTTGTC.1  CGAGGCTGACACAC.1  CGAGGCTGATTTCC.1  CGAGGCTGCTTCCG.1 \n##                 2                 0                12                 2 \n##  CGAGGCTGGAAAGT.1  CGAGGCTGGATAGA.1  CGAGGCTGGGACAG.1  CGAGTATGACCTCC.1 \n##                 3                 1                 5                 6 \n##  CGAGTATGATCGAC.1  CGAGTATGATTTCC.1  CGAGTATGCTATTC.1  CGAGTATGGCTCCT.1 \n##                 1                 7                 0                 2 \n##  CGAGTATGTCCGTC.1  CGATACGAAGAGAT.1  CGATACGATCCGAA.1  CGATAGACACCTGA.1 \n##                 2                 1                 3         CD16 Mono \n##  CGATAGACCAAAGA.1  CGATAGACGAGGAC.1  CGATAGACGGTGGA.1  CGATCAGATGGAAA.1 \n##                 6                 0                 0                 1 \n##  CGATCAGATTCGGA.1  CGATCCACACAGCT.1  CGATCCACCACTGA.1  CGATCCACTCTCGC.1 \n##                 0                 0                 2                 0 \n##  CGATCCACTTGTGG.1  CGCAAATGAACCTG.1  CGCAAATGACGGTT.1  CGCAAATGCCCTAC.1 \n##                 2                 6                 1                 0 \n##  CGCAAATGTGATGC.1  CGCAACCTCCACCT.1  CGCAACCTCCTATT.1  CGCAACCTCTGGAT.1 \n##                 0         CD16 Mono                 1                 2 \n##  CGCAACCTTGCCTC.1  CGCAACCTTGTCGA.1  CGCACGGACACAAC.1  CGCACGGACTATGG.1 \n##                 2         CD16 Mono                 8                 0 \n##  CGCACGGAGCTGTA.1  CGCACTACCTAGCA.1  CGCACTACTACGCA.1  CGCACTACTCGCAA.1 \n##                 0                 0                 2                 9 \n##  CGCACTACTCTAGG.1  CGCACTTGAAGCAA.1  CGCACTTGTCCTGC.1  CGCAGGACAGTTCG.1 \n##                 0                 1                 1                 0 \n##  CGCAGGACCATGGT.1  CGCAGGACGCATAC.1  CGCAGGTGACGCAT.1  CGCAGGTGCACACA.1 \n##                 0                 0                12         CD16 Mono \n##  CGCATAGAAGTCGT.1  CGCATAGAGATGAA.1  CGCATAGAGCGTTA.1  CGCATAGATCCGTC.1 \n##                 1                 0         CD16 Mono                 0 \n##  CGCATAGATGCACA.1  CGCCATACATTCTC.1  CGCCATACCCATAG.1  CGCCATACCGAGTT.1 \n##                 0                 3                 5                 5 \n##  CGCCATACGCGTTA.1  CGCCATACGCTTAG.1  CGCCATTGATAAGG.1  CGCCATTGCACCAA.1 \n##                 3         CD16 Mono                 2                 2 \n##  CGCCATTGGAAAGT.1  CGCCATTGTCCCGT.1  CGCCATTGTTAGGC.1  CGCCGAGAGGGAGT.1 \n##                 1                 7                 2                 5 \n##  CGCCTAACAACGAA.1  CGCCTAACACCAGT.1  CGCCTAACAGAACA.1  CGCCTAACCGCAAT.1 \n##                 3                 7                 3                 0 \n##  CGCCTAACGTCTAG.1  CGCCTAACTTCATC.1  CGCGAGACCCTTTA.1  CGCGAGACCGATAC.1 \n##                 1         CD16 Mono                 0                 0 \n##  CGCGAGACCTCAGA.1  CGCGAGACTATCTC.1  CGCGAGACTCCGTC.1  CGCGAGACTCGTTT.1 \n##         CD16 Mono                 3                 1                 1 \n##  CGCGATCTAGCGGA.1  CGCGATCTATCACG.1  CGCGATCTATCAGC.1  CGCGGATGCTCATT.1 \n##                10                 1                 7                 6 \n##  CGCGGATGCTGAAC.1  CGCGGATGTGCTAG.1  CGCTAAGAAGAAGT.1  CGCTAAGAAGCCAT.1 \n##                 1                 6                 2                 2 \n##  CGCTAAGAAGGCGA.1  CGCTAAGACATTTC.1  CGCTAAGACCTCGT.1  CGCTAAGAGCAGAG.1 \n##                 0                 0                 1                 0 \n##  CGCTAAGATGAGGG.1  CGCTACACAGATCC.1  CGCTACACCTGAGT.1  CGCTACACGAGAGC.1 \n##                 2                 3                 0                 0 \n##  CGCTACTGCTGTGA.1  CGCTACTGGCTAAC.1  CGCTACTGTTATCC.1  CGCTCATGCGACAT.1 \n##                 6                12                 2                 1 \n##  CGCTCATGCTACTT.1  CGCTCATGCTTGAG.1  CGCTCATGCTTGTT.1  CGCTCATGGATGAA.1 \n##                 2                 2                 6                 2 \n##  CGCTCATGGGACTT.1  CGCTCATGGGCGAA.1  CGCTCATGTCAGTG.1  CGCTCATGTCTCGC.1 \n##                 0                10                 0                 7 \n##  CGCTCATGTGTCGA.1  CGGACCGAAGTGCT.1  CGGACCGACCTTCG.1  CGGACTCTAAGAAC.1 \n##                 0                 1         CD16 Mono                 0 \n##  CGGACTCTCTTAGG.1  CGGACTCTGGAAGC.1  CGGACTCTGTCTAG.1  CGGACTCTGTCTTT.1 \n##                 1                 0                 0                 9 \n##  CGGACTCTTCGCAA.1  CGGACTCTTGCATG.1  CGGAGGCTTGATGC.1  CGGAGGCTTGTCAG.1 \n##                 8                 0                 9                 0 \n##  CGGATAACATCTCT.1  CGGATAACCCACAA.1  CGGATAACTTATCC.1  CGGATATGAAGGTA.1 \n##                 0                 0                 0         CD16 Mono \n##  CGGATATGATTCGG.1  CGGATATGCACTGA.1  CGGATATGCATGAC.1  CGGATATGCCCAAA.1 \n##                 6                 0                 1                 1 \n##  CGGATATGTTCGGA.1  CGGCACGAAAGGTA.1  CGGCACGAAGACTC.1  CGGCACGACAGTTG.1 \n##                 5                 2                 0                 5 \n##  CGGCACGACCTTGC.1  CGGCACGACTATGG.1  CGGCACGACTTCGC.1  CGGCACGATACTCT.1 \n##                 1                 6                 0                 1 \n##  CGGCACGATAGAGA.1  CGGCACGATCGCCT.1  CGGCACGATGTCTT.1  CGGCACGATTCGGA.1 \n##                 5                 0                 0         CD16 Mono \n##  CGGCATCTACCGAT.1  CGGCATCTATCGTG.1  CGGCATCTCGTAGT.1  CGGCATCTCTGTAG.1 \n##                 0                 0                 6                 2 \n##  CGGCATCTGGTACT.1  CGGCATCTGTTGGT.1  CGGCATCTTAAAGG.1  CGGCCAGACAGCTA.1 \n##                 7                 9                 0                 0 \n##  CGGCCAGACCCACT.1  CGGCCAGACTACCC.1  CGGCCAGAGTCTGA.1  CGGCCAGATTATCC.1 \n##                 3                 0         CD16 Mono                 2 \n##  CGGCGAACAGTACC.1  CGGCGAACATGTCG.1  CGGCGAACCATTCT.1  CGGCGAACCCTCCA.1 \n##                 6                 0                 0                 7 \n##  CGGCGAACCGGGAA.1  CGGCGAACCTGATG.1  CGGCGAACTCCCAC.1  CGGCGAACTGCAAC.1 \n##                 0                10                 5                 2 \n##  CGGCGAACTTCGGA.1  CGGCGATGAGCGGA.1  CGGCGATGCCTGTC.1  CGGCGATGCTCAAG.1 \n##                 0                 3                 0                 1 \n##  CGGCGATGTGGTTG.1  CGGGACTGGCAAGG.1  CGGGACTGTTCGCC.1  CGGGCATGATTGGC.1 \n##                 7                 3                 1                10 \n##  CGGGCATGCAGAAA.1  CGGGCATGTCTTTG.1  CGGGCATGTGAGAA.1  CGGTAAACCGTTAG.1 \n##                 3                 0                 5                 0 \n##  CGGTAAACCTGAGT.1  CGGTAAACCTTGAG.1  CGGTAAACGTTCTT.1  CGGTAAACTGGTTG.1 \n##                 0                 2                 0                 8 \n##  CGGTAAACTTACCT.1  CGGTACCTTGCAAC.1  CGGTCACTACTGTG.1  CGGTCACTCAGATC.1 \n##                 0                 0                 8                 0 \n##  CGGTCACTCTGCTC.1  CGTAACGAACGGGA.1  CGTAACGACTAGTG.1  CGTAACGAGGTCAT.1 \n##                 2                 1                 0                10 \n##  CGTAACGATCAGAC.1  CGTAACGATTCTGT.1  CGTACAGAAGTAGA.1  CGTACAGAAGTTCG.1 \n##                 2         CD16 Mono                 1                 0 \n##  CGTACAGAGTAAAG.1  CGTACAGAGTATGC.1  CGTACAGATCGCAA.1  CGTACCACCTTATC.1 \n##                 2                 0                 0                 1 \n##  CGTACCACTCGACA.1  CGTACCTGAACCGT.1  CGTACCTGAACGTC.1  CGTACCTGACGCAT.1 \n##                 2                 0                 0                 9 \n##  CGTACCTGATTCTC.1  CGTACCTGGCGTTA.1  CGTACCTGTAGAGA.1  CGTACCTGTCCGTC.1 \n##                 3                 3                 2                 6 \n##  CGTACCTGTGAGGG.1  CGTAGCCTGCTCCT.1  CGTAGCCTGGTATC.1  CGTAGCCTTAAGCC.1 \n##                 1                 0                 2                 0 \n##  CGTAGCCTTATGCG.1  CGTCAAGAAAGAGT.1  CGTCAAGAACGCAT.1  CGTCAAGACAGCTA.1 \n##         CD16 Mono                 2                 0                 1 \n##  CGTCAAGACGTACA.1  CGTCAAGATGCACA.1  CGTCCAACAAGGTA.1  CGTCCAACGTGCTA.1 \n##                 0                 0                 2                 2 \n##  CGTCCATGTCCCGT.1  CGTCCATGTTTGTC.1  CGTCGACTACTCTT.1  CGTCGACTCCTATT.1 \n##                 2                 3                 6                 0 \n##  CGTCGACTCGACAT.1  CGTCGACTGCTGAT.1  CGTCGACTTCAGGT.1  CGTCGACTTCGCAA.1 \n##                 1                 1                 0                 7 \n##  CGTCGACTTTCATC.1  CGTGAAACATTGGC.1  CGTGAAACTGGTTG.1  CGTGAATGCACACA.1 \n##                 2                 1                 0         CD16 Mono \n##  CGTGAATGCGAACT.1  CGTGAATGCTACTT.1  CGTGAATGCTTGAG.1  CGTGAATGGGATTC.1 \n##         CD16 Mono                 8         CD16 Mono                 1 \n##  CGTGAATGGGCGAA.1  CGTGAATGGGTAAA.1  CGTGAATGTCAGGT.1  CGTGATGAACGGTT.1 \n##         CD16 Mono                 0                 7                 2 \n##  CGTGATGACACTTT.1  CGTGATGAGCGTAT.1  CGTGATGATCTAGG.1  CGTGCACTTCTCTA.1 \n##                 2                 6                 2                 0 \n##  CGTGTAGACGCATA.1  CGTGTAGACTCAGA.1  CGTGTAGACTGTTT.1  CGTGTAGAGCAAGG.1 \n##                 3                 0                 2                 0 \n##  CGTGTAGAGTCACA.1  CGTGTAGAGTTGCA.1  CGTGTAGATCCTTA.1  CGTGTAGATTCGCC.1 \n##                 1                 5                 0         CD16 Mono \n##  CGTGTAGATTTACC.1  CGTTAACTACACTG.1  CGTTAACTACGCTA.1  CGTTAACTGGTCTA.1 \n##                 0                 0                 1                 1 \n##  CGTTAACTTCCGTC.1  CGTTAACTTTAGGC.1  CGTTAGGAATTCTC.1  CGTTAGGACAAAGA.1 \n##                 2                 2                 6                 5 \n##  CGTTAGGACTCGCT.1  CGTTAGGACTTAGG.1  CGTTAGGAGTTCTT.1  CGTTATACACGACT.1 \n##                 1                 1                 0                 0 \n##  CGTTATACACGTAC.1  CGTTATACAGGAGC.1  CGTTATACAGTGTC.1  CGTTATACTGGTGT.1 \n##                 3                 2                 0                 2 \n##  CGTTTAACACAGCT.1  CGTTTAACAGGGTG.1  CGTTTAACCGTACA.1  CGTTTAACGACGAG.1 \n##                 0         CD16 Mono                 1                 0 \n##  CGTTTAACGACGTT.1  CGTTTAACGCTTCC.1  CGTTTAACTCCAGA.1  CGTTTAACTGACTG.1 \n##                 0                 0                 0                 0 \n##  CGTTTAACTTTACC.1  CTAAACCTGGAACG.1  CTAAACCTGTCAAC.1  CTAACACTGATAGA.1 \n##                 7                 0                 5                 0 \n##  CTAACACTGGTTAC.1  CTAACACTGTGTTG.1  CTAACACTTCGACA.1  CTAACGGAACCAAC.1 \n##                 0                 3         CD16 Mono                 0 \n##  CTAACGGACTGCTC.1  CTAACGGAGGGATG.1  CTAACGGAGTATGC.1  CTAACGGATGCTGA.1 \n##                 0                 1                 0                 3 \n##  CTAACGGATGCTTT.1  CTAACTACACCAGT.1  CTAACTACCGATAC.1  CTAAGGACACCATG.1 \n##                 0         CD16 Mono                 6         CD16 Mono \n##  CTAAGGACATGGTC.1  CTAAGGACTAAGGA.1  CTAAGGACTCTTAC.1  CTAAGGTGTAGAAG.1 \n##                 0                 1                 2                 5 \n##  CTAAGGTGTCGCTC.1  CTAAGGTGTTATCC.1  CTAATAGAGAATAG.1  CTAATAGAGCCATA.1 \n##                 7         CD16 Mono                 0         CD16 Mono \n##  CTAATAGAGTGTCA.1  CTAATAGAGTTACG.1  CTAATAGATAGACC.1  CTAATAGATCCTTA.1 \n##                 2                 2                 0                 0 \n##  CTAATGCTAAGAAC.1  CTAATGCTACGCTA.1  CTAATGCTATGTCG.1  CTAATGCTGCGTTA.1 \n##         CD16 Mono                 2                 7                 0 \n##  CTAATGCTTCTAGG.1  CTACAACTCTCTCG.1  CTACAACTGGTTCA.1  CTACAACTGTTCTT.1 \n##                 0                 0                 0                 2 \n##  CTACAACTTCCAGA.1  CTACAACTTGAGCT.1  CTACCTCTGCGAAG.1  CTACGCACAGCTAC.1 \n##                 2                 3         CD16 Mono                 7 \n##  CTACGCACCGAATC.1  CTACGCACCTGGAT.1  CTACGCACGGAAAT.1  CTACGGCTCGTACA.1 \n##                 1                 1                 6                 0 \n##  CTACGGCTGACGTT.1  CTACGGCTTCCTCG.1  CTACGGCTTGCACA.1  CTACGGCTTTGGTG.1 \n##                 3                 0                 2                 7 \n##  CTACTATGAGGTCT.1  CTACTATGATCGTG.1  CTACTATGCTCATT.1  CTACTATGGTATCG.1 \n##         CD16 Mono                 1                 0                 5 \n##  CTACTCCTCGGAGA.1  CTACTCCTGTTAGC.1  CTACTCCTTTTACC.1  CTAGAGACCGCATA.1 \n##                 2                 2                 6                 0 \n##  CTAGAGACTTAGGC.1  CTAGAGACTTTGGG.1  CTAGATCTAAAAGC.1  CTAGATCTAGAGAT.1 \n##                 6                 1                 0                10 \n##  CTAGATCTAGTCAC.1  CTAGATCTGGGAGT.1  CTAGATCTTCCAAG.1  CTAGGATGAAACGA.1 \n##                 0                 8                 1                 1 \n##  CTAGGATGCACCAA.1  CTAGGATGCATGGT.1  CTAGGATGCTGAGT.1  CTAGGATGCTGTAG.1 \n##                 1                 0                 0                 0 \n##  CTAGGATGGAGGCA.1  CTAGGATGTAGAGA.1  CTAGGATGTCAGAC.1  CTAGGATGTGCCAA.1 \n##                 1                 9                 2                 5 \n##  CTAGGATGTGTCCC.1  CTAGGATGTGTCTT.1  CTAGGCCTACGCTA.1  CTAGGCCTGGAGCA.1 \n##                 0                 0         CD16 Mono                 0 \n##  CTAGGCCTTGTCCC.1  CTAGGTGACACAAC.1  CTAGGTGACCACAA.1  CTAGGTGACGTTAG.1 \n##                 0         CD16 Mono                 0                 7 \n##  CTAGGTGAGGACTT.1  CTAGGTGAGGTAGG.1  CTAGGTGATTATCC.1  CTAGTTACCGTGTA.1 \n##                 5                 0                 8                 0 \n##  CTAGTTTGCCATAG.1  CTAGTTTGGATAAG.1  CTAGTTTGGCGTTA.1  CTATAAGACCAGTA.1 \n##                 3                 5                 2                11 \n##  CTATAAGACCCGTT.1  CTATAAGATGGATC.1  CTATACTGAGCTAC.1  CTATACTGAGTGTC.1 \n##                 2                 0                 7                 9 \n##  CTATACTGCGGAGA.1  CTATACTGCTCTAT.1  CTATACTGGGCATT.1  CTATACTGGTGAGG.1 \n##         CD16 Mono                 7         CD16 Mono                 6 \n##  CTATACTGTCCCGT.1  CTATACTGTGTCGA.1  CTATACTGTTATCC.1  CTATACTGTTTGTC.1 \n##                 3                 1                 0                 0 \n##  CTATAGCTACCATG.1  CTATCAACATCTCT.1  CTATCAACGACTAC.1  CTATCAACGAGACG.1 \n##                 0                 0                 2                 0 \n##  CTATCAACGGTTCA.1  CTATCAACTCTCAT.1  CTATCAACTGCATG.1  CTATCATGTCTCGC.1 \n##         CD16 Mono                 0                 1                 3 \n##  CTATCCCTCGATAC.1  CTATGACTCGAATC.1  CTATGACTGCTACA.1  CTATGACTTGTCGA.1 \n##                 0                 9                 7                 9 \n##  CTATGACTTTAGGC.1  CTATGACTTTTGTC.1  CTATGTACGCATCA.1  CTATGTACGCTGAT.1 \n##                 3                 6                 0                 2 \n##  CTATGTACTCGCCT.1  CTATGTTGACCTCC.1  CTATGTTGTGGTCA.1  CTATGTTGTGTTCT.1 \n##                 9                 0                 3                 0 \n##  CTATTGACAACAGA.1  CTATTGACGTCAAC.1  CTATTGACTCTAGG.1  CTATTGTGAACGAA.1 \n##         CD16 Mono         CD16 Mono                 1                 0 \n##  CTATTGTGTACTGG.1  CTATTGTGTAGAGA.1  CTATTGTGTCCTAT.1  CTATTGTGTGTCTT.1 \n##                 2                12                 2                 0 \n##  CTCAATTGCCAATG.1  CTCAATTGCGTTAG.1  CTCAATTGGACACT.1  CTCAATTGGCGATT.1 \n##                 3                 0                 2                 1 \n##  CTCAATTGGCTTCC.1  CTCAATTGTTGGCA.1  CTCAGAGAAAGGCG.1  CTCAGAGAGCAAGG.1 \n##                 2                 0                 3                 1 \n##  CTCAGAGAGGTAGG.1  CTCAGAGATCTGGA.1  CTCAGCACAAAGCA.1  CTCAGCACCCAATG.1 \n##         CD16 Mono                 0                 1                 1 \n##  CTCAGCACCGATAC.1  CTCAGCACCTGCTC.1  CTCAGCACGGTAAA.1  CTCAGCACTGGTGT.1 \n##                 2                 0         CD16 Mono                 8 \n##  CTCAGCTGCATCAG.1  CTCAGCTGCTACTT.1  CTCAGCTGCTGATG.1  CTCAGCTGGTTTGG.1 \n##                 0         CD16 Mono                 0                 7 \n##  CTCAGCTGTGGATC.1  CTCAGGCTAAAGTG.1  CTCAGGCTAAGCCT.1  CTCAGGCTAGAGAT.1 \n##         CD16 Mono                 2                 0                12 \n##  CTCAGGCTATCTTC.1  CTCAGGCTCCAGTA.1  CTCAGGCTCGTGTA.1  CTCAGGCTCTCGAA.1 \n##                 5                 1                 0                 0 \n##  CTCAGGCTGGACAG.1  CTCATTGAATGACC.1  CTCATTGAGGTCAT.1  CTCATTGATGGTAC.1 \n##                 1                 0                 8                 6 \n##  CTCCACGAAACGTC.1  CTCCACGAAAGGGC.1  CTCCACGAACGGGA.1  CTCCACGACTCGCT.1 \n##                 0                 5                 1                 0 \n##  CTCCACGACTCTTA.1  CTCCACGAGGAGTG.1  CTCCACGATAGACC.1  CTCCACGATTGAGC.1 \n##                 0                 0         CD16 Mono                 6 \n##  CTCCATCTAAAGTG.1  CTCCATCTAAGAAC.1  CTCCATCTATGCTG.1  CTCCATCTGAATGA.1 \n##                 0                 1                 1                 2 \n##  CTCCATCTGTATGC.1  CTCCATCTTAGCCA.1  CTCCGAACCCTATT.1  CTCCGAACGGATCT.1 \n##                 0                 5                 9                 6 \n##  CTCCTACTAGTAGA.1  CTCCTACTGCGATT.1  CTCCTACTGTCATG.1  CTCCTACTGTGCTA.1 \n##                 0                 0                 0                 1 \n##  CTCCTACTTGTCCC.1  CTCGAAGAGAGGAC.1  CTCGAAGAGCGAAG.1  CTCGAAGAGTGTCA.1 \n##         CD16 Mono                 0                 3                 0 \n##  CTCGACACAATGCC.1  CTCGACACGGTTAC.1  CTCGACACGTTCAG.1  CTCGACTGAGATGA.1 \n##         CD16 Mono                 2                 3                 0 \n##  CTCGACTGCATTTC.1  CTCGACTGCGACAT.1  CTCGACTGGACACT.1  CTCGACTGGCTAAC.1 \n##                 0                 2                10                 9 \n##  CTCGACTGGTACCA.1  CTCGAGCTATGACC.1  CTCGAGCTATGGTC.1  CTCGAGCTCAGATC.1 \n##                 0                 1         CD16 Mono                 0 \n##  CTCGAGCTCATTCT.1  CTCGCATGAGAGAT.1  CTCGCATGCTTATC.1  CTCGCATGTCGCAA.1 \n##                 3                 0                 0         CD16 Mono \n##  CTCTAAACCCCTTG.1  CTCTAAACCTACGA.1  CTCTAAACCTCTAT.1  CTCTAAACGGACAG.1 \n##                 0                 0                 5                 0 \n##  CTCTAAACTTTGGG.1  CTCTAATGCTTGTT.1  CTCTAATGGAACCT.1  CTCTAATGGTAAGA.1 \n##                 1                 2                 6                 7 \n##  CTCTAATGGTTCTT.1  CTCTAATGTCCTAT.1  CTCTAATGTCGTTT.1  CTCTAATGTGCACA.1 \n##                 0         CD16 Mono                 1                 1 \n##  CTCTAATGTGTCAG.1  CTGAACGAGATAGA.1  CTGAACGAGTAAAG.1  CTGAAGACAGTACC.1 \n##                 9                 8                 6                 3 \n##  CTGAAGACAGTCAC.1  CTGAAGACCACTCC.1  CTGAAGTGACCGAT.1  CTGAAGTGATCTCT.1 \n##                 0                 0                 1                 0 \n##  CTGAAGTGCTCTTA.1  CTGAAGTGGATGAA.1  CTGAAGTGTTTACC.1  CTGAATCTTAGCCA.1 \n##                 6                 0         CD16 Mono                 0 \n##  CTGAATCTTTTACC.1  CTGACAGAAAACAG.1  CTGACAGACCTTGC.1  CTGACAGACGCCTT.1 \n##                 0                 3                 0                 5 \n##  CTGACAGACGTACA.1  CTGACAGAGAATGA.1  CTGACAGAGAGGGT.1  CTGACAGAGTCTAG.1 \n##                 0                 2                 3         CD16 Mono \n##  CTGACAGATGCCCT.1  CTGACCACGGAGGT.1  CTGACCACTGTCTT.1  CTGAGAACGTCAAC.1 \n##                 2                 0                 1                 6 \n##  CTGAGAACTAAAGG.1  CTGAGAACTGAGCT.1  CTGAGAACTGCCAA.1  CTGAGAACTTGCAG.1 \n##                 3                 9         CD16 Mono                 8 \n##  CTGAGCCTAACCGT.1  CTGAGCCTCCCTCA.1  CTGAGCCTCTTATC.1  CTGAGCCTTGAACC.1 \n##                 1                 0                 0                 9 \n##  CTGAGCCTTTGTGG.1  CTGATACTAATCGC.1  CTGATACTACGTAC.1  CTGATACTCTAGTG.1 \n##                 0                 0                 0                 1 \n##  CTGATACTGGACGA.1  CTGATACTTCTACT.1  CTGATGGACTATTC.1  CTGATGGAGGTATC.1 \n##                 0                 3                 2         CD16 Mono \n##  CTGATGGATCCTCG.1  CTGATGGATGGTGT.1  CTGATGGATTTGGG.1  CTGATTTGAACCAC.1 \n##                 6                 1                 7         CD16 Mono \n##  CTGATTTGACTAGC.1  CTGCAGCTCCTTCG.1  CTGCAGCTCGTTAG.1  CTGCAGCTCTTACT.1 \n##                 7                 5                 0         CD16 Mono \n##  CTGCAGCTGAAACA.1  CTGCAGCTTACAGC.1  CTGCAGCTTCGACA.1  CTGCAGCTTTCTAC.1 \n##                 2                 0                 2         CD16 Mono \n##  CTGCCAACGACACT.1  CTGCCAACGTACCA.1  CTGCGACTAGTCAC.1  CTGCGACTATCGTG.1 \n##                 0                 0         CD16 Mono                 2 \n##  CTGGAAACATACCG.1  CTGGAAACGCTAAC.1  CTGGAAACGGTACT.1  CTGGAAACGTTCGA.1 \n##                 0                 0         CD16 Mono                 2 \n##  CTGGATGAAACGAA.1  CTGGATGAACAGCT.1  CTGGATGAAGTCTG.1  CTGGATGACGAGAG.1 \n##                 3                12                 8                 1 \n##  CTGGATGAGCAGAG.1  CTGGATGATAGTCG.1  CTGGATGATTTCTG.1  CTGGCACTTATCGG.1 \n##         CD16 Mono                 0                 5                 0 \n##  CTGTAACTAAAGTG.1  CTGTAACTACACGT.1  CTGTAACTAGACTC.1  CTGTAACTCTTGAG.1 \n##                 5                 2                 1                 1 \n##  CTGTAACTGGATTC.1  CTGTAACTGTTAGC.1  CTGTATACAAGTAG.1  CTGTATACATGCTG.1 \n##                 0                 1                 3                 2 \n##  CTGTATACTGTCAG.1  CTGTGAGATGGGAG.1  CTTAAAGAATACCG.1  CTTAACACCTGACA.1 \n##                 2                 0                 5                 0 \n##  CTTAACACGGAGTG.1  CTTAACACTCTCTA.1  CTTAACACTTACTC.1  CTTAAGCTAGCCTA.1 \n##         CD16 Mono                 1                 6                 0 \n##  CTTAAGCTATGCCA.1  CTTAAGCTGCTGTA.1  CTTAAGCTTAACGC.1  CTTAAGCTTACTCT.1 \n##                 0                 0                 7                 2 \n##  CTTAAGCTTTCCCG.1  CTTACAACAGCAAA.1  CTTACAACCCAGTA.1  CTTACAACCCTTTA.1 \n##                 0                 0                 0                 0 \n##  CTTACAACGCGTTA.1  CTTACATGAGTGTC.1  CTTACATGCAGGAG.1  CTTACATGGTACAC.1 \n##         CD16 Mono                 2                 1                 2 \n##  CTTACATGGTCATG.1  CTTACATGGTGTCA.1  CTTACATGTCGATG.1  CTTACTGACCGTTC.1 \n##                 0                 1                 7                 1 \n##  CTTACTGACGAGTT.1  CTTACTGATGCAAC.1  CTTACTGATGCTTT.1  CTTAGACTAGAGAT.1 \n##                 8                 7                 1                 6 \n##  CTTAGACTCGTAGT.1  CTTAGACTCTTGAG.1  CTTAGACTGGGCAA.1  CTTAGACTGGTTCA.1 \n##                 1                 1                 2         CD16 Mono \n##  CTTAGACTGTCATG.1  CTTAGACTGTGCAT.1  CTTAGGGAAATGCC.1  CTTAGGGAACTGTG.1 \n##                 2                 9                 0                 6 \n##  CTTAGGGACAGCTA.1  CTTAGGGACGTGAT.1  CTTAGGGACTAGTG.1  CTTAGGGATTCACT.1 \n##         CD16 Mono                 1                 7         CD16 Mono \n##  CTTATCGAACACGT.1  CTTATCGAGACGGA.1  CTTATCGATCGCCT.1  CTTATCGATCTCGC.1 \n##                 2                 2                 9                 0 \n##  CTTCACCTACGGGA.1  CTTCACCTCGAGTT.1  CTTCACCTCGTTAG.1  CTTCACCTGGTGTT.1 \n##                 1                12                 6                 5 \n##  CTTCACCTTTTCGT.1  CTTCATGACTCCCA.1  CTTCTAGAACGTTG.1  CTTCTAGAAGTGCT.1 \n##                 3                13                 0                 2 \n##  CTTCTAGAATTTCC.1  CTTCTAGACGCAAT.1  CTTCTAGACTCCAC.1  CTTCTAGAGCCTTC.1 \n##                 0                 0                 0                 8 \n##  CTTCTAGATACGCA.1  CTTCTAGATGTGAC.1  CTTGAACTAAGGCG.1  CTTGAACTCTTATC.1 \n##                 3                 0                 0                 9 \n##  CTTGAACTGAATAG.1  CTTGAACTGCTGAT.1  CTTGAACTGTGCAT.1  CTTGAACTTGACTG.1 \n##                 5                 0                 0         CD16 Mono \n##  CTTGAGGATAGCCA.1  CTTGATTGACGGGA.1  CTTGATTGTATTCC.1  CTTGATTGTCCTTA.1 \n##                 0                 6                 5                 7 \n##  CTTGATTGTGGTTG.1  CTTGTATGAGTACC.1  CTTGTATGATCTTC.1  CTTGTATGGGTGAG.1 \n##                 3                 6                 2         CD16 Mono \n##  CTTGTATGGTTACG.1  CTTGTATGTTGCAG.1  CTTTACGAAAAGCA.1  CTTTACGACAGAAA.1 \n##                 2                 2                 8                 0 \n##  CTTTACGAGGAAGC.1  CTTTACGAGGATTC.1  CTTTAGACGCCATA.1  CTTTAGTGACCATG.1 \n##                 1                 0                 0                 3 \n##  CTTTAGTGAGGCGA.1  CTTTAGTGTCCCAC.1  CTTTCAGATCCGAA.1  CTTTCAGATTGCAG.1 \n##         CD16 Mono                 2                 2                 0 \n##  CTTTGATGGGACGA.1  CTTTGATGGTTGCA.1  CTTTGATGTGGAAA.1  CTTTGATGTTCTAC.1 \n##         CD16 Mono         CD16 Mono                 2                11 \n##  GAAACAGACTGGTA.1  GAAACAGAGAGGCA.1  GAAACAGATGCTCC.1  GAAACAGATGTCCC.1 \n##                 2                 2                 0                 2 \n##  GAAACCTGCCACAA.1  GAAACCTGCGTCTC.1  GAAACCTGGCCCTT.1  GAAACCTGGGTAGG.1 \n##                 6                 0                 1                 0 \n##  GAAACCTGTCCTAT.1  GAAACCTGTCTATC.1  GAAACCTGTTCTCA.1  GAAAGATGATTCTC.1 \n##                 0         CD16 Mono         CD16 Mono                 7 \n##  GAAAGATGCTTGTT.1  GAAAGCCTACCTAG.1  GAAAGCCTTCTTAC.1  GAAAGTGACGATAC.1 \n##                 0         CD16 Mono                 1                 2 \n##  GAAAGTGAGCAGTT.1  GAAAGTGATGCTGA.1  GAAATACTCCAGTA.1  GAAATACTGGACAG.1 \n##                 2                10                 9                 1 \n##  GAACACACAACAGA.1  GAACACACACCCAA.1  GAACACACACTACG.1  GAACACACATCGTG.1 \n##                 1                 3                 0                 8 \n##  GAACACACCCGCTT.1  GAACACACGGCAAG.1  GAACAGCTAAGGCG.1  GAACAGCTAAGTAG.1 \n##                 0                 1                 2                 7 \n##  GAACAGCTACGGAG.1  GAACAGCTCTAGCA.1  GAACAGCTTGTTTC.1  GAACCAACGGAGGT.1 \n##                 2                 8                 0                 5 \n##  GAACCAACGTGCTA.1  GAACCAACTACGCA.1  GAACCAACTGCTCC.1  GAACCTGAACGGGA.1 \n##                 8                 9                 5         CD16 Mono \n##  GAACCTGAATGCTG.1  GAACCTGAATGGTC.1  GAACCTGACCCGTT.1  GAACCTGAGCTCCT.1 \n##                 8                 2                 1                 0 \n##  GAACCTGATATCTC.1  GAACCTGATCGCAA.1  GAACGGGACACTCC.1  GAACGGGATACGCA.1 \n##                 1                 3                 1                 3 \n##  GAACGGGATGAGGG.1  GAACGTTGCCCACT.1  GAACGTTGGCCTTC.1  GAACGTTGGTTTGG.1 \n##                 1                 7                 3                 1 \n##  GAACGTTGTCGTAG.1  GAACGTTGTGCAAC.1  GAACGTTGTGGTTG.1  GAACTGTGACGGTT.1 \n##                 1                 0                 2                 2 \n##  GAACTGTGCAGATC.1  GAACTGTGCGAATC.1  GAACTGTGCTGAGT.1  GAACTGTGTATCTC.1 \n##                 1                 1                 0                 1 \n##  GAACTGTGTGAGCT.1  GAAGAATGCTACCC.1  GAAGATGAACCTGA.1  GAAGATGAGCAGTT.1 \n##                 6                 0                 5         CD16 Mono \n##  GAAGATGAGTCTAG.1  GAAGATGATATGGC.1  GAAGCGGAACGCTA.1  GAAGCGGAAGAAGT.1 \n##                 3                 0                 3                 1 \n##  GAAGCGGACATCAG.1  GAAGCGGATGAAGA.1  GAAGCGGATGGAGG.1  GAAGCTACCAGAAA.1 \n##                 0                 0                 0                 5 \n##  GAAGCTACCAGTTG.1  GAAGCTACCCATAG.1  GAAGCTACTAAGGA.1  GAAGCTACTGGATC.1 \n##                 0                 0         CD16 Mono                 9 \n##  GAAGCTTGACCTTT.1  GAAGCTTGACGGTT.1  GAAGCTTGATGTGC.1  GAAGCTTGCCACAA.1 \n##                 0                 1                 9                 2 \n##  GAAGCTTGCCCTTG.1  GAAGCTTGCTCATT.1  GAAGCTTGGGAGTG.1  GAAGCTTGGGGAGT.1 \n##                 0                 0                 7                 7 \n##  GAAGGGTGAGCTCA.1  GAAGGGTGCTGGAT.1  GAAGGGTGGTACGT.1  GAAGGGTGTGTGGT.1 \n##                 2                 7                 0                 0 \n##  GAAGGGTGTTATCC.1  GAAGGTCTCAGGAG.1  GAAGGTCTTAGCCA.1  GAAGTAGACCCTTG.1 \n##         CD16 Mono                 7                 0                 8 \n##  GAAGTCACACCACA.1  GAAGTCACACCTAG.1  GAAGTCTGAACGAA.1  GAAGTCTGAACGGG.1 \n##         CD16 Mono                 8                 0         CD16 Mono \n##  GAAGTCTGCATGAC.1  GAAGTCTGGTTACG.1  GAAGTCTGTAAGGA.1  GAAGTCTGTCCGAA.1 \n##                 0         CD16 Mono                 8                 0 \n##  GAAGTCTGTTCGTT.1  GAAGTCTGTTTCAC.1  GAAGTGCTTAGCCA.1  GAAGTGCTTTTCGT.1 \n##                 3         CD16 Mono                 3                 0 \n##  GAATGCACCTTCCG.1  GAATGCACCTTTAC.1  GAATGCACTATCTC.1  GAATGCACTCTTTG.1 \n##                 0                 2                 7                 5 \n##  GAATGCTGGATAGA.1  GAATGCTGTTGCAG.1  GAATGGCTCTCAAG.1  GAATGGCTCTGGAT.1 \n##         CD16 Mono                 1                 7                 0 \n##  GAATGGCTGAAGGC.1  GAATGGCTGCTTAG.1  GAATGGCTGTGTAC.1  GAATGGCTTTCAGG.1 \n##                 3                 8                 3                 0 \n##  GAATTAACTCTTAC.1  GACAACACACGTTG.1  GACAACTGCGTACA.1  GACAACTGTACAGC.1 \n##                 6                 5                 5                 1 \n##  GACAACTGTCGTAG.1  GACAACTGTCTTTG.1  GACAACTGTGACAC.1  GACAACTGTTGGTG.1 \n##                 0                 7                 0                11 \n##  GACACTGAAGGAGC.1  GACACTGACACTCC.1  GACACTGACTGCAA.1  GACACTGAGTTGGT.1 \n##                 1                 0                 1                 0 \n##  GACACTGATTTGCT.1  GACAGGGAACTGTG.1  GACAGGGAAGATGA.1  GACAGGGATCGTTT.1 \n##                 8                 8         CD16 Mono                 0 \n##  GACAGGGATTGGCA.1  GACAGTACCCTGAA.1  GACAGTACGAATCC.1  GACAGTACGTCTTT.1 \n##                 0                 0         CD16 Mono                 1 \n##  GACAGTACTATTCC.1  GACAGTACTGTCAG.1  GACAGTTGATCGGT.1  GACAGTTGGTTGCA.1 \n##                10                 3                 1                 0 \n##  GACAGTTGTAAGGA.1  GACATTCTGAGGGT.1  GACATTCTGATACC.1  GACATTCTGGGACA.1 \n##                 0                 2                 5                 0 \n##  GACATTCTGTCTTT.1  GACATTCTGTGCAT.1  GACATTCTTCTTAC.1  GACCAAACCTAAGC.1 \n##                 6                 5                 1                13 \n##  GACCAAACCTGACA.1  GACCATGACTTGCC.1  GACCATGAGGGACA.1  GACCCTACACGTAC.1 \n##                 7                 0                 0                 2 \n##  GACCCTACCGAACT.1  GACCCTACGGAGCA.1  GACCCTACTGGAGG.1  GACCTAGAAGTCAC.1 \n##                 6                 1                 6                 2 \n##  GACCTAGAATACCG.1  GACCTAGACGACTA.1  GACCTAGACTGAGT.1  GACCTAGAGAGGTG.1 \n##                 1                 0                 1                 1 \n##  GACCTAGATGGAGG.1  GACCTCACAGATCC.1  GACCTCACGTCGAT.1  GACCTCACTTCCGC.1 \n##                 6                 6                 1                 0 \n##  GACCTCTGCGCAAT.1  GACCTCTGTCCTAT.1  GACCTCTGTGGAAA.1  GACCTCTGTTGAGC.1 \n##                 1                 9                 3                 0 \n##  GACGAACTAACCTG.1  GACGAACTAGTCGT.1  GACGAACTCCGCTT.1  GACGAGGAAGTTCG.1 \n##         CD16 Mono         CD16 Mono                 0                 0 \n##  GACGAGGATTCCGC.1  GACGATTGACCACA.1  GACGATTGCTAGAC.1  GACGATTGGCATCA.1 \n##                 0                 0                 7                 0 \n##  GACGATTGTGTGCA.1  GACGCCGAACCTGA.1  GACGCCGAACGTAC.1  GACGCCGACGTAGT.1 \n##                 9                 0                 1                 0 \n##  GACGCCGAGTCATG.1  GACGCCGAGTCCTC.1  GACGCCGATCCTCG.1  GACGCTCTCATTTC.1 \n##                 7                 0                 0                 3 \n##  GACGCTCTCTGCAA.1  GACGCTCTTCTAGG.1  GACGGCACAATCGC.1  GACGGCACCTCCCA.1 \n##                 8                 2                 3                 0 \n##  GACGGCACCTGAGT.1  GACGGCACGGCGAA.1  GACGGCACGGTTTG.1  GACGTAACACCTAG.1 \n##                11                 0         CD16 Mono                 3 \n##  GACGTAACCGCTAA.1  GACGTAACCGGTAT.1  GACGTAACCTGACA.1  GACGTAACGAACCT.1 \n##                12                 6                 0                 7 \n##  GACGTATGACAGCT.1  GACGTATGAGTAGA.1  GACGTATGATTCTC.1  GACGTATGCCCACT.1 \n##                 0                 2                 1                 0 \n##  GACGTATGCCTGAA.1  GACGTATGGTACAC.1  GACGTATGTGCAAC.1  GACGTATGTTGTGG.1 \n##                 3                 2                 2                 0 \n##  GACGTCCTATTCCT.1  GACGTCCTCAGTTG.1  GACGTCCTGATGAA.1  GACGTCCTTGTCAG.1 \n##                 3                 2                 0                 2 \n##  GACTACGAGTGAGG.1  GACTACGATCCTGC.1  GACTCCTGACAGTC.1  GACTCCTGCGGGAA.1 \n##         CD16 Mono                 1                 2                 1 \n##  GACTCCTGGAGAGC.1  GACTCCTGGTCCTC.1  GACTCCTGTCTACT.1  GACTGAACCGCATA.1 \n##                 3                 2                 1         CD16 Mono \n##  GACTGAACCTCGCT.1  GACTGAACTGGAGG.1  GACTGATGCCGTAA.1  GACTGATGGTAGGG.1 \n##                 1                 1                 5                 2 \n##  GACTGATGGTCACA.1  GACTGATGTACTGG.1  GACTGATGTGAAGA.1  GACTGTGACGGGAA.1 \n##                 2                10                 0                 0 \n##  GACTGTGAGTTACG.1  GACTGTGATAGAAG.1  GACTTTACATAAGG.1  GACTTTACATGCTG.1 \n##                 7                 2                 2                 5 \n##  GACTTTACCATGCA.1  GACTTTACCTCATT.1  GACTTTACGCGAAG.1  GACTTTACGTACGT.1 \n##                 0                 0                 2                 2 \n##  GACTTTACTCAGGT.1  GAGAAATGCCCGTT.1  GAGAAATGCCTTGC.1  GAGAAATGCGAGTT.1 \n##         CD16 Mono                 1         CD16 Mono                11 \n##  GAGAAATGCTACGA.1  GAGAAATGTCTGGA.1  GAGAGGTGAAGGCG.1  GAGAGGTGAGCATC.1 \n##         CD16 Mono                 0                 0         CD16 Mono \n##  GAGAGGTGCAGTCA.1  GAGAGGTGCTCCAC.1  GAGAGGTGGAATCC.1  GAGAGGTGGGAGCA.1 \n##                 2                 1                 2                 2 \n##  GAGAGGTGGGAGTG.1  GAGAGGTGTCCTAT.1  GAGATAGAACCTCC.1  GAGATAGAATCGTG.1 \n##                 0                 9                 0                 0 \n##  GAGATAGACTGACA.1  GAGATAGAGTTAGC.1  GAGATAGATCTCAT.1  GAGATAGATTTCTG.1 \n##                 1                 0                 2                 1 \n##  GAGATGCTACGGGA.1  GAGATGCTGGGTGA.1  GAGATGCTGTTACG.1  GAGCAACTATCAGC.1 \n##                 0                 5                 0                 1 \n##  GAGCAACTGAGGGT.1  GAGCAACTGGTCTA.1  GAGCAGGACTTAGG.1  GAGCAGGATGCTAG.1 \n##                 6                 1         CD16 Mono                 2 \n##  GAGCATACAGCCTA.1  GAGCATACGAGCTT.1  GAGCATACGGGAGT.1  GAGCATACTCGCCT.1 \n##                 3                 2                 3                 0 \n##  GAGCATACTGATGC.1  GAGCGAGAAACCGT.1  GAGCGAGAGGAGTG.1  GAGCGAGATCATTC.1 \n##                 0                 0                 2                 2 \n##  GAGCGCTGATTCGG.1  GAGCGCTGCATACG.1  GAGCGCTGTGTTCT.1  GAGCGGCTGTTACG.1 \n##                 1         CD16 Mono                 8                 0 \n##  GAGCGGCTTACAGC.1  GAGCTCCTAGCATC.1  GAGCTCCTATACCG.1  GAGCTCCTCACTTT.1 \n##                 1                 0                 6                 0 \n##  GAGCTCCTGCATCA.1  GAGGACGACGAATC.1  GAGGACGACGATAC.1  GAGGACGACGTGAT.1 \n##                 8                 0                 3                 0 \n##  GAGGACGAGGAGCA.1  GAGGACGATAGACC.1  GAGGACGATTTGTC.1  GAGGATCTGACAAA.1 \n##                 2                 2                 1                 0 \n##  GAGGATCTTGGTAC.1  GAGGCAGAACTGTG.1  GAGGCAGAGAATAG.1  GAGGCAGAGAGACG.1 \n##                 0         CD16 Mono                 0                 1 \n##  GAGGCCACATGTGC.1  GAGGCCACCGAATC.1  GAGGCCACCTAAGC.1  GAGGCCACTCTCCG.1 \n##                 3                 1         CD16 Mono                 8 \n##  GAGGCCACTTCGTT.1  GAGGGAACAATGCC.1  GAGGGAACATGTCG.1  GAGGGAACCAGAAA.1 \n##                 0                 0                 3                 2 \n##  GAGGGAACCCTATT.1  GAGGGAACTATCTC.1  GAGGGATGAAGGGC.1  GAGGGATGTATTCC.1 \n##                 2                 0                 0                 9 \n##  GAGGGCCTAGCTAC.1  GAGGGCCTTGAGAA.1  GAGGGTGAATGCCA.1  GAGGGTGACCCTTG.1 \n##                 1                 1                 1                 9 \n##  GAGGGTGAGGCAAG.1  GAGGGTGATGCAAC.1  GAGGTACTAGGTCT.1  GAGGTACTGCGAAG.1 \n##                 1                 3                 1                 7 \n##  GAGGTACTGTGTCA.1  GAGGTACTGTTGAC.1  GAGGTGGAACGTAC.1  GAGGTGGAAGAGAT.1 \n##                10                 5                 7                 1 \n##  GAGGTGGAAGTCAC.1  GAGGTGGAGCTAAC.1  GAGGTGGATGCCCT.1  GAGGTGGATGTGGT.1 \n##                 2                 0                 0                 1 \n##  GAGGTTACACCTGA.1  GAGGTTACAGGCGA.1  GAGGTTACCATACG.1  GAGGTTACTGCCTC.1 \n##                 0                 0                 5                 0 \n##  GAGGTTACTTGAGC.1  GAGGTTTGAGTCAC.1  GAGGTTTGGACGTT.1  GAGGTTTGGTCGTA.1 \n##                 7                 2                 0                 1 \n##  GAGTACACATACCG.1  GAGTACACCATTTC.1  GAGTACACCCACCT.1  GAGTACACCTGACA.1 \n##                 2                 9                 0         CD16 Mono \n##  GAGTACACTACAGC.1  GAGTACACTGAGGG.1  GAGTACTGACCGAT.1  GAGTACTGTTCCAT.1 \n##                 0         CD16 Mono                 7                 1 \n##  GAGTCAACGGGAGT.1  GAGTCAACTCGCAA.1  GAGTCAACTCTACT.1  GAGTCAACTGACAC.1 \n##                 0                 0                 1                 6 \n##  GAGTCTGAAAGCCT.1  GAGTCTGAGAGGCA.1  GAGTCTGAGGTAGG.1  GAGTCTGAGTAAAG.1 \n##                 2         CD16 Mono                 3                 2 \n##  GAGTCTGATACTGG.1  GAGTGACTAGTCTG.1  GAGTGACTCCACCT.1  GAGTGACTGACACT.1 \n##                 3                 0         CD16 Mono                 3 \n##  GAGTGACTTGAACC.1  GAGTGACTTGTTTC.1  GAGTGGGACTAGTG.1  GAGTGGGACTATTC.1 \n##                 0                 5                 2                 6 \n##  GAGTGGGATCTATC.1  GAGTGGGATGTCAG.1  GAGTGTTGCACTTT.1  GAGTGTTGCCTGTC.1 \n##                11                 3                 0                 0 \n##  GAGTGTTGCGGGAA.1  GAGTGTTGTGTGCA.1  GAGTTGTGAACGAA.1  GAGTTGTGATAAGG.1 \n##                 9                 2                 3                 0 \n##  GAGTTGTGTGCTCC.1  GATAAGGAATTTCC.1  GATAAGGACACAAC.1  GATAAGGACCGCTT.1 \n##                 0                 1                 0                 1 \n##  GATAAGGAGAGATA.1  GATAAGGAGTTGAC.1  GATAAGGATGGTTG.1  GATAAGGATTACCT.1 \n##                 3                 2                 0         CD16 Mono \n##  GATAATACAGTGCT.1  GATAATACCAACCA.1  GATAATACCGCCTT.1  GATAATACCTTCGC.1 \n##                 0                 9                 2                 0 \n##  GATAATACGGAGGT.1  GATAATACTTCTAC.1  GATACTCTGAGGAC.1  GATACTCTGCATAC.1 \n##         CD16 Mono                 0         CD16 Mono                 0 \n##  GATACTCTTGCATG.1  GATAGAGAAGAAGT.1  GATAGAGACGAGAG.1  GATAGAGACGGAGA.1 \n##                 2                 0         CD16 Mono                 3 \n##  GATAGCACTGAGGG.1  GATAGCACTTTCGT.1  GATATAACAGGTCT.1  GATATAACCCACAA.1 \n##         CD16 Mono                 6                 0                 2 \n##  GATATAACTTTGCT.1  GATATATGCCTGAA.1  GATATATGGGGAGT.1  GATATATGGTAAAG.1 \n##                 3                 0                 5                 1 \n##  GATATATGTGCTTT.1  GATATATGTGTTTC.1  GATATTGAAACTGC.1  GATATTGAAATGCC.1 \n##                 0                 5                 0                 0 \n##  GATATTGAACACGT.1  GATATTGAAGTCGT.1  GATATTGACGCTAA.1  GATATTGAGGTGGA.1 \n##                 1                 3                 1                 0 \n##  GATATTGATCGACA.1  GATCATCTAGGGTG.1  GATCATCTCTGGAT.1  GATCCCTGAGCCTA.1 \n##                 3         CD16 Mono                 1                 3 \n##  GATCCCTGATTGGC.1  GATCCCTGCTCCAC.1  GATCCCTGGCATCA.1  GATCCCTGGCTTAG.1 \n##                 6                 0                 2         CD16 Mono \n##  GATCCCTGTCTTCA.1  GATCCGCTAAGGGC.1  GATCCGCTACCCAA.1  GATCGAACAATGCC.1 \n##                 2                 3                 0                 1 \n##  GATCGAACATCAGC.1  GATCGAACATCGGT.1  GATCGAACGGGTGA.1  GATCGATGACCACA.1 \n##                 0                 3                 0                 1 \n##  GATCGATGACCTTT.1  GATCGATGCCATAG.1  GATCGATGTAAGGA.1  GATCGTGAACCTAG.1 \n##                 2                 0                 5                 9 \n##  GATCTACTATCTTC.1  GATCTACTCGGTAT.1  GATCTTACCTACCC.1  GATCTTACCTGAAC.1 \n##                 1                 1                12                 0 \n##  GATCTTACCTGATG.1  GATCTTACGGACAG.1  GATCTTACTATCTC.1  GATCTTTGCACCAA.1 \n##                 0                 2                 6         CD16 Mono \n##  GATCTTTGCCTCAC.1  GATCTTTGCTTCTA.1  GATCTTTGGACGAG.1  GATCTTTGGAGGCA.1 \n##                 2                 0                 1                 1 \n##  GATGACACAGCTCA.1  GATGACACTGCTAG.1  GATGCAACACCACA.1  GATGCAACACCAGT.1 \n##                 7                 1                 1                 8 \n##  GATGCAACCATGGT.1  GATGCAACGCCTTC.1  GATGCATGAGGTTC.1  GATGCATGATTCGG.1 \n##                 0                 2                 6                 3 \n##  GATGCATGGTACGT.1  GATGCATGTAACGC.1  GATGCCCTAGAATG.1  GATGCCCTGACACT.1 \n##                 1                10                 0         CD16 Mono \n##  GATGCCCTGCGATT.1  GATGCCCTGGTCTA.1  GATGCCCTTGGGAG.1  GATTACCTAATGCC.1 \n##                 1                 5                 0                 0 \n##  GATTACCTCTCCCA.1  GATTACCTGCGTAT.1  GATTACCTGCTACA.1  GATTACCTGGTGTT.1 \n##                 7                 0                10         CD16 Mono \n##  GATTACCTTATTCC.1  GATTCGGAATAAGG.1  GATTCGGAATCTCT.1  GATTCGGAATGGTC.1 \n##                 0                 0                 0                 0 \n##  GATTCGGACGCCTT.1  GATTCGGAGAACTC.1  GATTCGGAGAATAG.1  GATTCGGAGGCATT.1 \n##                 2                 0                 3                 0 \n##  GATTCGGAGTATCG.1  GATTCTACAAGAGT.1  GATTCTACCCCACT.1  GATTCTACCGGGAA.1 \n##                 1                 5                 2                 0 \n##  GATTCTACGCAGAG.1  GATTCTACGGTCTA.1  GATTCTTGAACCAC.1  GATTCTTGTCAGAC.1 \n##                 1                 1                 0                 2 \n##  GATTCTTGTGCAAC.1  GATTCTTGTGGTTG.1  GATTGGACAGACTC.1  GATTGGACATCACG.1 \n##         CD16 Mono                 0                 0                 6 \n##  GATTGGACCATGCA.1  GATTGGACCGTACA.1  GATTGGACCTCCAC.1  GATTGGACGGAGGT.1 \n##                 8                 0                 1                 7 \n##  GATTGGACTGGTTG.1  GATTGGTGCTGATG.1  GATTGGTGTAACCG.1  GATTGGTGTTCCGC.1 \n##                 0                 0                 7                 2 \n##  GATTTAGAGCTATG.1  GATTTAGAGTACAC.1  GATTTAGAGTACGT.1  GATTTAGAGTGAGG.1 \n##                 0                 9                 1                 2 \n##  GATTTAGATGCGTA.1  GATTTGCTAGTCTG.1  GATTTGCTCTAGCA.1  GATTTGCTGAGACG.1 \n##                 0                 1                 0                 9 \n##  GATTTGCTGCGTTA.1  GCAAACTGAGATCC.1  GCAAACTGCGGGAA.1  GCAAACTGCGTAAC.1 \n##                 0                 7                 6                 0 \n##  GCAACCCTCAGAGG.1  GCAACCCTCCAATG.1  GCAACCCTGAGGGT.1  GCAACCCTGGCAAG.1 \n##                 0                 3                 0                 6 \n##  GCAACCCTTACTGG.1  GCAACCCTTGTCGA.1  GCAACTGAAGAGGC.1  GCAACTGACCGAAT.1 \n##                 0                 5                 0                 2 \n##  GCAACTGACTCGCT.1  GCAACTGATCAGGT.1  GCAACTGATTCAGG.1  GCAAGACTGGTAGG.1 \n##                 0                 1                 0                 5 \n##  GCAAGACTGTTCTT.1  GCAATCGAGGAAGC.1  GCAATCGAGGTAGG.1  GCAATCGATCTCCG.1 \n##                 1                 5                 2         CD16 Mono \n##  GCAATTCTAAAGTG.1  GCAATTCTCTCGCT.1  GCAATTCTTGAGAA.1  GCAATTCTTGGAAA.1 \n##                 1                 3                 2                 9 \n##  GCACAAACACAGTC.1  GCACAATGACTACG.1  GCACAATGCTACGA.1  GCACAATGCTTGCC.1 \n##                 0         CD16 Mono                 3                 0 \n##  GCACAATGGCTAAC.1  GCACAATGTCCCGT.1  GCACACCTCTGAGT.1  GCACACCTCTGTCC.1 \n##                 2                 0                 1                 3 \n##  GCACACCTGGGATG.1  GCACCACTAGGTTC.1  GCACCACTCGTCTC.1  GCACCACTGCGGAA.1 \n##                 0                 3                 2         CD16 Mono \n##  GCACCACTTAAGCC.1  GCACCTACAACGGG.1  GCACCTACACTCTT.1  GCACCTACGCTCCT.1 \n##         CD16 Mono                 0                 2         CD16 Mono \n##  GCACCTACGTAGGG.1  GCACGGACACGCAT.1  GCACGGACCCAATG.1  GCACGGACCCGCTT.1 \n##                 1                10                 0                 1 \n##  GCACGGACCCTTAT.1  GCACGGACCGATAC.1  GCACGGACTGTTCT.1  GCACGGTGCTTGCC.1 \n##                 3                 2                 0                 7 \n##  GCACGGTGCTTGTT.1  GCACGGTGTCTACT.1  GCACGGTGTGCCCT.1  GCACGGTGTGTTTC.1 \n##                 8         CD16 Mono                 6                 0 \n##  GCACGTCTAACCGT.1  GCACGTCTGAGGGT.1  GCACGTCTGGTGGA.1  GCACGTCTGGTGTT.1 \n##                 8                 5                 2                 0 \n##  GCACGTCTTTACTC.1  GCACGTCTTTCACT.1  GCACTAGAAGGTTC.1  GCACTAGACAGAGG.1 \n##                 0                 0                 1                 3 \n##  GCACTAGAGGAGTG.1  GCACTAGATACTTC.1  GCACTGCTGCAGAG.1  GCACTGCTTCTCGC.1 \n##                 1                 2                 1                10 \n##  GCACTGCTTTCCCG.1  GCAGATACCGATAC.1  GCAGATACGACTAC.1  GCAGATACGGCGAA.1 \n##                 0                 3                 1                 3 \n##  GCAGATACTTGACG.1  GCAGATACTTTGTC.1  GCAGCCGAAGAGAT.1  GCAGCGTGTAAGCC.1 \n##                 3                 0                 5                 1 \n##  GCAGCGTGTAGCGT.1  GCAGCGTGTGACAC.1  GCAGCTCTATTCGG.1  GCAGCTCTGTTGTG.1 \n##                 1                 0                 1                 0 \n##  GCAGCTCTTACTTC.1  GCAGGCACGGCATT.1  GCAGGCACTTACCT.1  GCAGGGCTAGATGA.1 \n##                 3                 3         CD16 Mono         CD16 Mono \n##  GCAGGGCTGAACCT.1  GCAGGGCTGGCGAA.1  GCAGGGCTGTACAC.1  GCAGGGCTTCGCCT.1 \n##                 1                 9                 0                 2 \n##  GCAGTCCTAGTTCG.1  GCAGTCCTCGGAGA.1  GCAGTCCTGAGCTT.1  GCAGTCCTTCGTAG.1 \n##                 0                 5                 0                 3 \n##  GCAGTTGAAACCTG.1  GCAGTTGACCGTAA.1  GCAGTTGACGAATC.1  GCAGTTGACGCAAT.1 \n##                 1         CD16 Mono                 0                 0 \n##  GCAGTTGACTACGA.1  GCAGTTGACTGAGT.1  GCAGTTGAGGTGGA.1  GCAGTTGAGTTGTG.1 \n##                 0                 8                 0                 1 \n##  GCAGTTGATCCGAA.1  GCATCAGAAACCGT.1  GCATCAGACATTCT.1  GCATCAGAGGTTTG.1 \n##                 1                 0                11                 7 \n##  GCATCAGATGCTCC.1  GCATGATGAACTGC.1  GCATGATGGCCCTT.1  GCATGTGACATGAC.1 \n##                 0                 6                 1                 9 \n##  GCATGTGACCGAAT.1  GCATGTGAGCCAAT.1  GCATTGGACTCAAG.1  GCATTGGAGTTGGT.1 \n##                 8                 1                 2                13 \n##  GCATTGGATAACCG.1  GCATTGGATCCGAA.1  GCATTGGATTCATC.1  GCCAAAACGGGCAA.1 \n##                 1                 0                 6                 0 \n##  GCCAAATGATCGTG.1  GCCAAATGCGTACA.1  GCCAAATGGTTGAC.1  GCCAACCTAACGAA.1 \n##                 2         CD16 Mono                 0                 0 \n##  GCCAACCTCTTCGC.1  GCCAACCTGTTCTT.1  GCCAACCTTCCTTA.1  GCCAACCTTGCTTT.1 \n##                 1                 0                 0                 0 \n##  GCCACGGAACGTTG.1  GCCACGGAAGCGTT.1  GCCACGGACATGGT.1  GCCACGGACGAATC.1 \n##         CD16 Mono                 1                 0                 0 \n##  GCCACGGACGATAC.1  GCCACGGACTGTCC.1  GCCACGGAGGATCT.1  GCCACTACAGCCAT.1 \n##                 1                 7                 0                 0 \n##  GCCACTACCCATAG.1  GCCACTACGCGAGA.1  GCCACTACTTACCT.1  GCCACTACTTTACC.1 \n##         CD16 Mono                 6                 1         CD16 Mono \n##  GCCATCACAGGAGC.1  GCCATCACTATGGC.1  GCCATGCTCTCCCA.1  GCCCAACTACTGGT.1 \n##                10         CD16 Mono                 0                 0 \n##  GCCCAACTTGCTTT.1  GCCCAGGAAGTCTG.1  GCCCAGGACTAGTG.1  GCCCAGGAGAAGGC.1 \n##                 5                 9                 8                 2 \n##  GCCCAGGAGGATCT.1  GCCCAGGATGAGCT.1  GCCCATACACTTTC.1  GCCCATACTGATGC.1 \n##                 1                 6                 3                 0 \n##  GCCGACGACCACCT.1  GCCGACGATAACCG.1  GCCGACGATACTCT.1  GCCGACGATGGTCA.1 \n##         CD16 Mono                 8                 3                 0 \n##  GCCGACGATTCCAT.1  GCCGAGTGACAGTC.1  GCCGAGTGCTGAGT.1  GCCGAGTGGCTCCT.1 \n##                 5                 1                 0         CD16 Mono \n##  GCCGAGTGGTTCTT.1  GCCGAGTGGTTTGG.1  GCCGAGTGTGCCCT.1  GCCGGAACAATGCC.1 \n##                 5                 0                 2                 9 \n##  GCCGGAACACCAGT.1  GCCGGAACCTACTT.1  GCCGGAACGTCTTT.1  GCCGGAACTTCGTT.1 \n##                 0                 0                 5                 0 \n##  GCCGTACTAACCTG.1  GCCGTACTCAGTTG.1  GCCGTACTCCACCT.1  GCCGTACTCCGATA.1 \n##         CD16 Mono                 6                 3                 2 \n##  GCCGTACTTGTGGT.1  GCCTACACATAAGG.1  GCCTACACCCCGTT.1  GCCTACACGAATGA.1 \n##                 3                 1                 0                 0 \n##  GCCTACACTGTCTT.1  GCCTAGCTACCAGT.1  GCCTAGCTCCACCT.1  GCCTAGCTCCATAG.1 \n##                 0                 0         CD16 Mono                 0 \n##  GCCTAGCTGCATCA.1  GCCTAGCTGTCGTA.1  GCCTAGCTTGCCTC.1  GCCTCAACCCCTCA.1 \n##                 3                 1                 0         CD16 Mono \n##  GCCTCAACCCTCCA.1  GCCTCAACGGGATG.1  GCCTCAACTCTAGG.1  GCCTCATGAAGAGT.1 \n##                 0                 2                 0                 0 \n##  GCCTCATGCCTGTC.1  GCCTCATGCGGGAA.1  GCCTCATGGTCCTC.1  GCCTCATGTAAGGA.1 \n##                 7                 0                 9                 2 \n##  GCCTCATGTGCGTA.1  GCCTGACTCCTTCG.1  GCCTGACTCGTGTA.1  GCCTGACTTAAGCC.1 \n##                 1                 0                 3                 1 \n##  GCCTGACTTAGTCG.1  GCGAAGGACTAGTG.1  GCGAAGGACTGAAC.1  GCGAAGGAGAGGGT.1 \n##         CD16 Mono                 0                 0         CD16 Mono \n##  GCGAAGGAGGTAAA.1  GCGAAGGAGGTTAC.1  GCGAAGGATCTCCG.1  GCGACTCTAGAGGC.1 \n##                 0                 1                 1                 8 \n##  GCGACTCTAGTGTC.1  GCGACTCTTCGACA.1  GCGAGAGAAGTCAC.1  GCGAGAGAAGTGCT.1 \n##                 0                 0                 3                 6 \n##  GCGAGAGAGAACTC.1  GCGAGAGATGCTGA.1  GCGAGCACAGTCAC.1  GCGAGCACGGTAGG.1 \n##                 2         CD16 Mono                 6                 7 \n##  GCGCACGAGGTGAG.1  GCGCACGATTCACT.1  GCGCATCTACACGT.1  GCGCATCTACGGTT.1 \n##                 5                 1                 0                 2 \n##  GCGCATCTCCCTTG.1  GCGCATCTCGTACA.1  GCGCATCTGCTGTA.1  GCGCGAACAACAGA.1 \n##                 0                 0                 1                 9 \n##  GCGCGAACTGTCAG.1  GCGCGAACTTCGGA.1  GCGCGATGCAGAAA.1  GCGCGATGTAAGGA.1 \n##         CD16 Mono                10                 1                 0 \n##  GCGCGATGTAGAAG.1  GCGGACTGATACCG.1  GCGGACTGCCAACA.1  GCGGACTGGAAGGC.1 \n##                 0                 6                 0                 1 \n##  GCGGACTGGTCACA.1  GCGGAGCTCTCCCA.1  GCGGAGCTGGCATT.1  GCGGAGCTTATGGC.1 \n##                 0                 3                 1                 1 \n##  GCGGAGCTTTACTC.1  GCGGAGCTTTTCTG.1  GCGGCAACCGACTA.1  GCGGGACTGGACAG.1 \n##                 1                 0                 1                 6 \n##  GCGGGACTGTCCTC.1  GCGGGACTTCCTGC.1  GCGTAAACATTTCC.1  GCGTAAACCAAAGA.1 \n##                 2                 0                 1                 5 \n##  GCGTAAACCACAAC.1  GCGTAAACTCTTTG.1  GCGTAATGCACTAG.1  GCGTAATGCGTTGA.1 \n##                 2                 0         CD16 Mono                 2 \n##  GCGTAATGTATCTC.1  GCGTAATGTGGCAT.1  GCGTACCTCGGGAA.1  GCGTACCTTATCGG.1 \n##                 8                 0         CD16 Mono                 0 \n##  GCGTACCTTGCAAC.1  GCGTACCTTGCATG.1  GCGTATGACGAACT.1  GCGTATGATCCGAA.1 \n##                 8                 0                 1                 2 \n##  GCGTATGATGAGAA.1  GCGTATGATTGGCA.1  GCTACAGAGTCGAT.1  GCTACAGATTCAGG.1 \n##                 0                 6         CD16 Mono                 0 \n##  GCTACAGATTCGTT.1  GCTACCTGTCCTCG.1  GCTACGCTTGGTAC.1  GCTAGAACACGACT.1 \n##                 1                 0         CD16 Mono                 1 \n##  GCTAGAACCAATCG.1  GCTAGAACGAACTC.1  GCTAGAACTCGACA.1  GCTAGAACTCGCAA.1 \n##                 2                 0         CD16 Mono                 0 \n##  GCTAGATGCGCAAT.1  GCTAGATGCTTCGC.1  GCTAGATGGCCATA.1  GCTAGATGTGAGCT.1 \n##                 9                 2                 0                 1 \n##  GCTAGATGTGGTGT.1  GCTAGATGTGGTTG.1  GCTATACTAAAGTG.1  GCTATACTATCGTG.1 \n##                 1                 2                 0                 5 \n##  GCTATACTCATTCT.1  GCTATACTGCCATA.1  GCTATACTGGAGCA.1  GCTATACTTTGACG.1 \n##                 7                 0                 6                 3 \n##  GCTATACTTTGCGA.1  GCTCAAGAGGACAG.1  GCTCAAGAGTGAGG.1  GCTCAAGAGTGTCA.1 \n##                 8         CD16 Mono                 9         CD16 Mono \n##  GCTCAAGATATCGG.1  GCTCACTGCAAAGA.1  GCTCACTGCCTTAT.1  GCTCACTGGGGAGT.1 \n##                 2                 2                 0                 0 \n##  GCTCAGCTAAACAG.1  GCTCAGCTATTCGG.1  GCTCAGCTGAGGCA.1  GCTCAGCTGGCATT.1 \n##                 9                 0                 0                 3 \n##  GCTCAGCTGTTACG.1  GCTCAGCTTGTCAG.1  GCTCAGCTTTCGTT.1  GCTCAGCTTTCTTG.1 \n##                 0                 0                 2                 7 \n##  GCTCCATGACGTAC.1  GCTCCATGCCTCGT.1  GCTCCATGTCTACT.1  GCTCCATGTTGCGA.1 \n##                 0                 0                 6                 0 \n##  GCTCGACTACACCA.1  GCTGATGAAGTACC.1  GCTGATGAATCTCT.1  GCTGATGACTCAAG.1 \n##                 0                 8                 0                 1 \n##  GCTGATGATAGACC.1  GCTTAACTACCTAG.1  GCTTAACTCCTTGC.1  GCTTAACTGGAAAT.1 \n##                 0                 0                 0                 2 \n##  GCTTAACTTCAGTG.1  GCTTGAGAGTACCA.1  GCTTGAGAGTTAGC.1  GCTTGAGATAGTCG.1 \n##                 9                 2                 8                 0 \n##  GGAACACTACCAGT.1  GGAACACTAGGCGA.1  GGAACACTCCGTAA.1  GGAACACTCTTACT.1 \n##                 0                 3                 0                 0 \n##  GGAACACTGAACCT.1  GGAACACTTCTCAT.1  GGAACTACACCATG.1  GGAACTTGCCCAAA.1 \n##                 0                 1                 0                13 \n##  GGAACTTGCGTGTA.1  GGAACTTGCTCCCA.1  GGAACTTGGGTCAT.1  GGAACTTGTTCATC.1 \n##                 0                 8                 7                 2 \n##  GGAAGGTGGACGGA.1  GGAAGGTGTCGACA.1  GGAAGGTGTGCACA.1  GGAATGCTACCTGA.1 \n##                 6                10                 1                 0 \n##  GGAATGCTCGATAC.1  GGAATGCTCGGTAT.1  GGAATGCTGACAGG.1  GGAATGCTGCAGTT.1 \n##                 0                 2                 0                 0 \n##  GGAATGCTGGCATT.1  GGACAACTCCGCTT.1  GGACAACTTTCTCA.1  GGACAGGACCCAAA.1 \n##                 0                 0                 2                 0 \n##  GGACAGGACTAGTG.1  GGACAGGACTGCAA.1  GGACAGGATCTTTG.1  GGACATTGATGCTG.1 \n##                 0                 3                 1                 6 \n##  GGACATTGTATTCC.1  GGACCCGACCGTTC.1  GGACCCGAGCTTCC.1  GGACCCGAGTCAAC.1 \n##         CD16 Mono                 0                 2                 1 \n##  GGACCCGATCCTAT.1  GGACCCGATGGAAA.1  GGACCGTGAAAGTG.1  GGACCGTGACTTTC.1 \n##                 0                 2                 2                 7 \n##  GGACCGTGCAAAGA.1  GGACCGTGCATTTC.1  GGACCGTGCCAATG.1  GGACCGTGGACGGA.1 \n##                 0                 7                 2         CD16 Mono \n##  GGACCGTGGCCTTC.1  GGACCTCTCACCAA.1  GGACCTCTGTTGTG.1  GGACCTCTTCAGAC.1 \n##                 0                 0                 0                 0 \n##  GGACCTCTTCGTTT.1  GGACCTCTTTGACG.1  GGACGAGAAAGGGC.1  GGACGAGACTTGCC.1 \n##                 0         CD16 Mono                 0                 2 \n##  GGACGAGAGCATAC.1  GGACGCACAAGATG.1  GGACGCACACGTGT.1  GGACGCACACTACG.1 \n##                 8                 2                 2                 5 \n##  GGACGCACCATGAC.1  GGACGCACTAACCG.1  GGACGCTGAGTACC.1  GGACGCTGGGTATC.1 \n##                 3                 9                 8                 0 \n##  GGACTATGAAGGTA.1  GGACTATGCTCTAT.1  GGACTATGTACAGC.1  GGAGACGAGTCAAC.1 \n##                 6                 2                 0                 9 \n##  GGAGAGACCGCAAT.1  GGAGAGACGTGTTG.1  GGAGAGACGTTGGT.1  GGAGAGACTCGTGA.1 \n##                 3                 0                 6                 8 \n##  GGAGAGACTGATGC.1  GGAGCAGACCATGA.1  GGAGCAGAGGGTGA.1  GGAGCAGAGTAAAG.1 \n##         CD16 Mono                 3                 9                 7 \n##  GGAGCAGATAGCCA.1  GGAGCAGATGTAGC.1  GGAGCCACAAGGTA.1  GGAGCCACAGAGAT.1 \n##                 3                 6                 2                 7 \n##  GGAGCCACCTATGG.1  GGAGCCACGAACCT.1  GGAGCCACGTCGTA.1  GGAGCCACTTTGCT.1 \n##                 0                 1                 0                 5 \n##  GGAGCGCTACACTG.1  GGAGCGCTCCACCT.1  GGAGCGCTGTCGAT.1  GGAGCGCTTCTCGC.1 \n##                 0                 0                 7                 5 \n##  GGAGGATGGATAGA.1  GGAGGCCTCACTCC.1  GGAGGCCTCATGCA.1  GGAGGCCTCCGATA.1 \n##                 0                 0                 1         CD16 Mono \n##  GGAGGCCTGGAGGT.1  GGAGGCCTTGAGCT.1  GGAGGTGACACACA.1  GGAGGTGAGGCGAA.1 \n##                 0                 1                 3                 1 \n##  GGAGGTGATTGACG.1  GGAGTTACTCCCGT.1  GGAGTTACTTTGTC.1  GGAGTTTGAACCTG.1 \n##                 0                 3                 0                 5 \n##  GGAGTTTGAAGATG.1  GGAGTTTGTGTCCC.1  GGATACTGCTTAGG.1  GGATACTGGAGCTT.1 \n##                 0                 1                 5                 0 \n##  GGATACTGGGACAG.1  GGATAGCTCAGTCA.1  GGATAGCTCTTGGA.1  GGATAGCTGTATCG.1 \n##                 0                 0                 0         CD16 Mono \n##  GGATAGCTTCCTGC.1  GGATAGCTTGAGGG.1  GGATGTACCCCTCA.1  GGATGTACCTGTAG.1 \n##                 0                 1                 2                 3 \n##  GGATGTACGATAAG.1  GGATGTACGTTTGG.1  GGATGTACTGATGC.1  GGATGTTGACTGGT.1 \n##                 1                 5         CD16 Mono                 2 \n##  GGATGTTGAGTCTG.1  GGATGTTGCGGAGA.1  GGATGTTGGGAAGC.1  GGATGTTGGGGATG.1 \n##                 1                 1                 0                 1 \n##  GGATTGTGAACGTC.1  GGATTGTGACGGGA.1  GGATTGTGGCTTCC.1  GGATTGTGGTGCAT.1 \n##                11                 2                 0                 0 \n##  GGATTGTGTGCTCC.1  GGATTTCTCCCGTT.1  GGATTTCTCTCTTA.1  GGATTTCTGGTTCA.1 \n##                 0                 1                 1                 8 \n##  GGATTTCTTGGAGG.1  GGATTTCTTTTCTG.1  GGCAAGGAACACTG.1  GGCAATACACCTAG.1 \n##                 2                 0                 2                10 \n##  GGCAATACGGGAGT.1  GGCAATACTTCGTT.1  GGCACGTGCACTAG.1  GGCACGTGCCGATA.1 \n##                 7                 1                 3                 2 \n##  GGCACGTGGGTAAA.1  GGCACTCTAGCTAC.1  GGCACTCTCACTGA.1  GGCACTCTCTGGAT.1 \n##                13                 6                 2                 0 \n##  GGCACTCTGCAGTT.1  GGCACTCTTTCACT.1  GGCATATGGGGACA.1  GGCCACGAACGGGA.1 \n##                 0                 3                 2                 0 \n##  GGCCACGAATGTGC.1  GGCCACGACACTCC.1  GGCCACGAGAGGGT.1  GGCCACGATAACGC.1 \n##                 2                 6                 0                 8 \n##  GGCCAGACAAGTGA.1  GGCCAGACATCTTC.1  GGCCAGACCGAGAG.1  GGCCAGACCGAGTT.1 \n##                 0                 8                 0                 0 \n##  GGCCAGACGCTGAT.1  GGCCAGACGTTAGC.1  GGCCAGACGTTTGG.1  GGCCAGACTCTAGG.1 \n##                 0                 3                 0                 1 \n##  GGCCCAGATCGCTC.1  GGCCCAGATGCTTT.1  GGCCGAACCAGAGG.1  GGCCGAACCTGACA.1 \n##                 0                 0                 0                 0 \n##  GGCCGAACGCTGAT.1  GGCCGAACGTACGT.1  GGCCGATGCCACAA.1  GGCCGATGCCGTTC.1 \n##                 6                 0                 0                 0 \n##  GGCCGATGTCGACA.1  GGCGACACCACTTT.1  GGCGACACCTTAGG.1  GGCGACACGGTAGG.1 \n##                 5         CD16 Mono                 5                 6 \n##  GGCGACACTGATGC.1  GGCGACACTTTGGG.1  GGCGACTGAACCTG.1  GGCGACTGAACTGC.1 \n##                 2                 0                 0                 0 \n##  GGCGACTGCTATGG.1  GGCGACTGTGCATG.1  GGCGCATGACTCAG.1  GGCGCATGACTTTC.1 \n##                 0                 5                 0         CD16 Mono \n##  GGCGCATGCCTTGC.1  GGCGCATGCGTTAG.1  GGCGCATGCTTATC.1  GGCGCATGGCAAGG.1 \n##                12                 9                 8                 6 \n##  GGCGGACTCATGGT.1  GGCGGACTGAACCT.1  GGCGGACTTGAGCT.1  GGCGGACTTTCATC.1 \n##                 1         CD16 Mono                 0                 0 \n##  GGCTAAACACACGT.1  GGCTAAACCACTAG.1  GGCTAAACGGTTTG.1  GGCTAAACGTATGC.1 \n##                 1                 0                 1                 7 \n##  GGCTAAACTTCTGT.1  GGCTAATGATTTCC.1  GGCTAATGCTGATG.1  GGCTAATGGAACTC.1 \n##                 1                 6                 3                 1 \n##  GGCTAATGGCTACA.1  GGCTAATGTCTCAT.1  GGCTAATGTTTGGG.1  GGCTACCTAGGCGA.1 \n##                 1                 0                 6                 1 \n##  GGCTACCTATCGAC.1  GGCTACCTATGTCG.1  GGCTACCTCTCGAA.1  GGCTACCTGGACGA.1 \n##                 2                 6                 0                 2 \n##  GGCTACCTTCGCCT.1  GGCTACCTTGCTCC.1  GGCTACCTTTCCGC.1  GGCTCACTCAGATC.1 \n##         CD16 Mono                 2                 0                 2 \n##  GGCTCACTCTGGTA.1  GGCTCACTGTGTTG.1  GGCTCACTTCCCGT.1  GGGAACGAACAGCT.1 \n##                10                 2                 6                 0 \n##  GGGAACGAAGGGTG.1  GGGAACGAGAGGTG.1  GGGAACGAGGTGGA.1  GGGAACGATGCTGA.1 \n##                 2                 3                 1         CD16 Mono \n##  GGGAACGATTATCC.1  GGGAAGACAGTTCG.1  GGGAAGACGCTACA.1  GGGAAGACTCCCGT.1 \n##                 5                10                 0                 1 \n##  GGGAAGACTCTTTG.1  GGGAAGTGCAGAAA.1  GGGAAGTGCTTCTA.1  GGGACCACACCCTC.1 \n##                 1                 5                 9                 0 \n##  GGGACCACAGGAGC.1  GGGACCACCAAGCT.1  GGGACCACGAGACG.1  GGGACCACTCAAGC.1 \n##                 1                 2                 0                11 \n##  GGGACCTGGAGACG.1  GGGACCTGTTGTGG.1  GGGATGGAACTGTG.1  GGGATGGAAGGAGC.1 \n##                 5                 1                 1                 0 \n##  GGGATGGAATGGTC.1  GGGATGGACAAGCT.1  GGGATGGATAAAGG.1  GGGATGGATCTATC.1 \n##                 0                 7                 1                 3 \n##  GGGATGGATGCCCT.1  GGGATGGATGTAGC.1  GGGATTACCACTTT.1  GGGATTACCTCCCA.1 \n##                 1                 0                 7                 6 \n##  GGGATTACGGTTAC.1  GGGATTACTTGTGG.1  GGGCAAGAGCTGAT.1  GGGCAAGAGCTGTA.1 \n##                 0                 3                 0                 0 \n##  GGGCACACACTTTC.1  GGGCACACATGTCG.1  GGGCACACCAGAGG.1  GGGCACACCGTAGT.1 \n##                10                 0                 8                 2 \n##  GGGCACACGTTCGA.1  GGGCACACTGGAAA.1  GGGCAGCTCACTAG.1  GGGCAGCTCATGAC.1 \n##                 2                 3                 1                 9 \n##  GGGCAGCTGTCGTA.1  GGGCAGCTTGTCGA.1  GGGCCAACCTTGCC.1  GGGCCAACGCAAGG.1 \n##                 3                 3                 0                 2 \n##  GGGCCAACGGTCTA.1  GGGCCAACTCTTTG.1  GGGCCAACTTCCGC.1  GGGCCAACTTCTGT.1 \n##                 7                 0                 3                 0 \n##  GGGCCATGAAGGGC.1  GGGCCATGCCGAAT.1  GGGCCATGCCTTGC.1  GGGCCATGCGCAAT.1 \n##                 0                 0                 3         CD16 Mono \n##  GGGCCATGCTACTT.1  GGGCCATGGGTATC.1  GGGCCATGTTCTCA.1  GGGTAACTACACCA.1 \n##                 1                 3                 1                 0 \n##  GGGTAACTATCACG.1  GGGTAACTATGTCG.1  GGGTAACTCCTACC.1  GGGTAACTCGTCTC.1 \n##                 0                 1                 0                 0 \n##  GGGTAACTGTTTCT.1  GGGTTAACACCTCC.1  GGGTTAACAGAAGT.1  GGGTTAACGGGAGT.1 \n##                 0                 0                 5                 7 \n##  GGGTTAACTTCTGT.1  GGGTTATGGCCTTC.1  GGGTTATGGGAAGC.1  GGGTTATGTCTCTA.1 \n##                 0                 0                 0                 0 \n##  GGTAAAGACACTTT.1  GGTAAAGAGTCATG.1  GGTACAACAGACTC.1  GGTACAACGGAACG.1 \n##                 0                 0                 6                 3 \n##  GGTACAACTCACCC.1  GGTACAACTCTAGG.1  GGTACATGCCTCGT.1  GGTACATGCTATGG.1 \n##                 2                 0                 7                 6 \n##  GGTACTGAACGCAT.1  GGTACTGAACGGGA.1  GGTACTGAATGACC.1  GGTACTGACGCAAT.1 \n##         CD16 Mono                 1                 9                 0 \n##  GGTACTGAGGTGTT.1  GGTACTGATCCCAC.1  GGTACTGATCGACA.1  GGTAGTACAACCTG.1 \n##                 1                 0                13                 0 \n##  GGTAGTACCGTAAC.1  GGTATCGAAGCAAA.1  GGTATCGACACTTT.1  GGTATCGAGAGGTG.1 \n##                 0                 1                 0                 0 \n##  GGTATCGAGGTCTA.1  GGTATGACAGATGA.1  GGTATGACTGACTG.1  GGTCAAACGGGATG.1 \n##                 2                 0                 2                 0 \n##  GGTCAAACTCCAGA.1  GGTCTAGACAAGCT.1  GGTCTAGACCCAAA.1  GGTCTAGAGCTAAC.1 \n##                 0                 0                 0                 3 \n##  GGTCTAGAGTCCTC.1  GGTCTAGATGTAGC.1  GGTGATACAGAGTA.1  GGTGATACCAATCG.1 \n##                 0                 0                 1                 6 \n##  GGTGATACCTTGCC.1  GGTGATACGAGCTT.1  GGTGATACGAGGCA.1  GGTGGAGAGAGGCA.1 \n##                 0                 2                 0                 0 \n##  GGTGGAGAGGAACG.1  GGTGGAGAGTTGGT.1  GGTTGAACAAGGGC.1  GGTTGAACCATGCA.1 \n##                 1                 1                 0                 8 \n##  GGTTGAACTAGCCA.1  GGTTGAACTCTTAC.1  GGTTGAACTGACTG.1  GGTTGAACTGCTGA.1 \n##                 1                 0                 0                 6 \n##  GGTTGAACTGGTCA.1  GGTTGAACTGTGCA.1  GGTTTACTAAGCCT.1  GGTTTACTCTCCAC.1 \n##                 0                 2                 1                 1 \n##  GGTTTACTCTCGCT.1  GGTTTACTGAACCT.1  GGTTTACTGACTAC.1  GGTTTACTGATGAA.1 \n##                 9                 1                 1                 0 \n##  GTAACGTGAACCAC.1  GTAACGTGCTTCTA.1  GTAACGTGGGTAAA.1  GTAACGTGGTCGTA.1 \n##                 1                 1         CD16 Mono                 0 \n##  GTAACGTGTCTAGG.1  GTAAGCACAGAACA.1  GTAAGCACCTAGTG.1  GTAAGCACTGTTTC.1 \n##                 6                 3                 0                 7 \n##  GTAAGCTGAGTTCG.1  GTAAGCTGTCAGAC.1  GTAATAACCCTCCA.1  GTAATAACGAGACG.1 \n##                 1                 1                 0                 3 \n##  GTAATAACTATGGC.1  GTAATAACTGGTTG.1  GTAATATGAAAACG.1  GTAATATGAAGAAC.1 \n##                 0                 0                 0                 2 \n##  GTAATATGTCCTTA.1  GTAATATGTTTGGG.1  GTACAGTGACCCAA.1  GTACAGTGGAACTC.1 \n##                 0         CD16 Mono         CD16 Mono                 2 \n##  GTACAGTGGCCAAT.1  GTACAGTGGCTTAG.1  GTACCCTGGAGCAG.1  GTACCCTGGGTTCA.1 \n##                 0                 0                 0                 3 \n##  GTACCCTGGTAAGA.1  GTACCCTGTCGCTC.1  GTACCCTGTGACCA.1  GTACCCTGTTCGTT.1 \n##                 5                 9                 0         CD16 Mono \n##  GTACGAACACCTAG.1  GTACGAACCAAGCT.1  GTACGAACTCAGAC.1  GTACGTGACAATCG.1 \n##                 0                 0                 0                 3 \n##  GTACGTGACTAGCA.1  GTACGTGAGCATAC.1  GTACGTGAGTTGTG.1  GTACTACTAAACAG.1 \n##                 0                 0                 5                 3 \n##  GTACTACTCATACG.1  GTACTACTCCTCCA.1  GTACTACTTAAAGG.1  GTACTTTGAAGGTA.1 \n##         CD16 Mono                 0                 8                 1 \n##  GTACTTTGCCACCT.1  GTACTTTGCCGTAA.1  GTACTTTGTCTAGG.1  GTACTTTGTGCGTA.1 \n##                 2                 5                 1                 3 \n##  GTACTTTGTGCTGA.1  GTAGACTGCCAACA.1  GTAGACTGCTACCC.1  GTAGCAACACACCA.1 \n##                 1                 2                 1                 0 \n##  GTAGCAACACCTTT.1  GTAGCAACAGTGCT.1  GTAGCAACGAATAG.1  GTAGCAACGTTTCT.1 \n##                 3                 0                 7         CD16 Mono \n##  GTAGCAACTCCTAT.1  GTAGCAACTCTCAT.1  GTAGCATGATCTTC.1  GTAGCATGGGACAG.1 \n##                 0                 1                 2                10 \n##  GTAGCATGTCGACA.1  GTAGCCCTATCTCT.1  GTAGCCCTTACGCA.1  GTAGCTGAGCGTTA.1 \n##                 1                 5                 1                 0 \n##  GTAGCTGAGGCGAA.1  GTAGCTGATATTCC.1  GTAGGTACAACGTC.1  GTAGGTACAATCGC.1 \n##                 2         CD16 Mono         CD16 Mono                 0 \n##  GTAGGTACAGTGCT.1  GTAGGTACCCAATG.1  GTAGGTACCCCGTT.1  GTAGGTACCCCTCA.1 \n##                 2                 1                 0                 0 \n##  GTAGGTACCTCATT.1  GTAGGTACGTCACA.1  GTAGGTACGTCGAT.1  GTAGGTACTCAGAC.1 \n##                 2                 0                 3                 1 \n##  GTAGGTACTTCCCG.1  GTAGTCGAAGTGCT.1  GTAGTCGAGCTGAT.1  GTAGTCGATCAGAC.1 \n##                 6                 7                 0                 1 \n##  GTAGTGACGCCATA.1  GTAGTGACGTATCG.1  GTAGTGACTGACCA.1  GTAGTGTGATCAGC.1 \n##         CD16 Mono         CD16 Mono                 0                 2 \n##  GTAGTGTGGGTCAT.1  GTAGTGTGGTTTCT.1  GTAGTGTGGTTTGG.1  GTAGTGTGTCCAGA.1 \n##                 1                 3                 3         CD16 Mono \n##  GTAGTGTGTGCCTC.1  GTAGTGTGTTATCC.1  GTAGTGTGTTCGTT.1  GTATCACTACCTTT.1 \n##                 3                 0                 5                 0 \n##  GTATCACTAGTAGA.1  GTATCACTATCTTC.1  GTATCACTCCAACA.1  GTATCTACCCTGTC.1 \n##                 1                 0                 2                 2 \n##  GTATCTACCGAGTT.1  GTATGGTGACACAC.1  GTATGGTGAGAGTA.1  GTATGGTGCACTTT.1 \n##                 0                 0                 0                 2 \n##  GTATGGTGGTGAGG.1  GTATGGTGTTTCAC.1  GTATGGTGTTTCGT.1  GTATGGTGTTTGGG.1 \n##                 6                 3                 2                 0 \n##  GTATTAGACAACCA.1  GTATTAGACGCATA.1  GTATTAGAGCATAC.1  GTATTAGAGCGGAA.1 \n##                 2                 2                 7                 0 \n##  GTATTCACAATGCC.1  GTATTCACGACGTT.1  GTATTCACGCTCCT.1  GTATTCACGGAGGT.1 \n##                 0                 5                 2                 5 \n##  GTATTCACTCACCC.1  GTCAACGAGAGGGT.1  GTCAACGAGATAAG.1  GTCAACGAGCAGAG.1 \n##                 0                 8                 1                 1 \n##  GTCAATCTCACTCC.1  GTCAATCTCCTCGT.1  GTCACAGACGGAGA.1  GTCACAGAGTATGC.1 \n##                 1                 7                 8                 1 \n##  GTCACCTGAAAAGC.1  GTCACCTGAACGAA.1  GTCACCTGTGCTAG.1  GTCATACTGGTTAC.1 \n##                 1                 0                 0                10 \n##  GTCATACTGTATGC.1  GTCATACTTAGAAG.1  GTCATACTTAGACC.1  GTCATACTTCCTAT.1 \n##                 1                 0                 3                 2 \n##  GTCCAAGATGAACC.1  GTCCAAGATGGCAT.1  GTCCACACAAGGCG.1  GTCCACACCGACTA.1 \n##                 0                 1                 0                 0 \n##  GTCCACACTACGAC.1  GTCCACACTCAGAC.1  GTCCACACTCCTGC.1  GTCCACTGCAGCTA.1 \n##         CD16 Mono                 0                 2                 7 \n##  GTCCACTGCAGTCA.1  GTCCACTGCTTGAG.1  GTCCACTGTGCTAG.1  GTCCACTGTTCACT.1 \n##                 3                 1                 0                 2 \n##  GTCCACTGTTCGGA.1  GTCCAGCTAAGCCT.1  GTCCAGCTCTGTGA.1  GTCCAGCTGAATAG.1 \n##                 0                 5                 2                 1 \n##  GTCCAGCTGTGTTG.1  GTCCAGCTTGTTTC.1  GTCCAGCTTTACTC.1  GTCCCATGAGTACC.1 \n##                 0         CD16 Mono                 7                 0 \n##  GTCCCATGCCGATA.1  GTCCCATGCTTGTT.1  GTCGAATGACGCAT.1  GTCGAATGATGCCA.1 \n##                 2                 0                 2         CD16 Mono \n##  GTCGAATGCTCTAT.1  GTCGAATGCTTCCG.1  GTCGAATGGGTCAT.1  GTCGACCTATTTCC.1 \n##                 0                 1                 9                 3 \n##  GTCGACCTCGCTAA.1  GTCGACCTGAAAGT.1  GTCGACCTGCATCA.1  GTCGACCTTCTCGC.1 \n##                 2                 0                 0                 0 \n##  GTCGCACTAGCGGA.1  GTCGCACTGCCTTC.1  GTCGCACTTCGTTT.1  GTCTAACTAGAATG.1 \n##                 0                 0                 1                 1 \n##  GTCTAACTAGGTTC.1  GTCTAACTCTACGA.1  GTCTAACTGACGAG.1  GTCTAACTTCAGGT.1 \n##                 1                 0                 7         CD16 Mono \n##  GTCTAGGACAACTG.1  GTCTAGGAGCAGAG.1  GTCTAGGATTGAGC.1  GTCTGAGACACCAA.1 \n##                 1                 1                12                 1 \n##  GTCTGAGACCTTCG.1  GTCTGAGAGACACT.1  GTCTGAGATGGGAG.1  GTCTGAGATGGTGT.1 \n##                 0                 1                 0         CD16 Mono \n##  GTGAACACACGTTG.1  GTGAACACGCCTTC.1  GTGAACACTACTTC.1  GTGACAACCACCAA.1 \n##         CD16 Mono                 0                 1         CD16 Mono \n##  GTGACAACGGCAAG.1  GTGACAACTAGTCG.1  GTGACAACTTCATC.1  GTGACCCTACCTAG.1 \n##                 1                 2                 1                 0 \n##  GTGACCCTACTGTG.1  GTGACCCTAGAATG.1  GTGACCCTCGTTGA.1  GTGACCCTGTTCGA.1 \n##                 1                 0                 0                 0 \n##  GTGACCCTTAAGCC.1  GTGACCCTTCCAGA.1  GTGAGGGAAGGGTG.1  GTGAGGGACTAGTG.1 \n##                 3                 5                 0                 8 \n##  GTGAGGGAGGAAGC.1  GTGAGGGAGGGATG.1  GTGAGGGATTGGTG.1  GTGATCGATGCTCC.1 \n##         CD16 Mono                 8                 0                 0 \n##  GTGATGACCCATGA.1  GTGATGACTTCAGG.1  GTGATTCTAAAGTG.1  GTGATTCTCGCCTT.1 \n##                 1                 1                 1                 2 \n##  GTGATTCTGTACGT.1  GTGATTCTTAGAAG.1  GTGCAAACAAGTAG.1  GTGCAAACCAGATC.1 \n##                 1                 2                 8                 0 \n##  GTGCAAACTGAGGG.1  GTGCCACTTGCCCT.1  GTGCTAGAAACGAA.1  GTGCTAGAGTATCG.1 \n##                 0                 5                 3                 6 \n##  GTGCTAGATTTGGG.1  GTGGAGGAGTCTTT.1  GTGGATTGAGAACA.1  GTGGATTGCCATGA.1 \n##                 1                 7                 8                 0 \n##  GTGGATTGGATAGA.1  GTGGATTGGGAGTG.1  GTGGTAACACAGTC.1  GTGGTAACCCCAAA.1 \n##                 1                 9                 1                 0 \n##  GTGGTAACGGATCT.1  GTGGTAACGTGAGG.1  GTGTACGAAAACGA.1  GTGTACGAAAGCCT.1 \n##                 1         CD16 Mono                 3                 1 \n##  GTGTACGAACTCAG.1  GTGTACGACATGAC.1  GTGTACGACTAGTG.1  GTGTACGAGAACTC.1 \n##                 0                 0                 9                 0 \n##  GTGTACGATTGTGG.1  GTGTAGTGAACGTC.1  GTGTAGTGACTACG.1  GTGTAGTGGCAGTT.1 \n##                 0                 1                 2                 6 \n##  GTGTAGTGGTTGTG.1  GTGTAGTGTAGAGA.1  GTGTAGTGTTCTTG.1  GTGTATCTGCGTAT.1 \n##                 1                 0                 1                 5 \n##  GTGTATCTTGGTAC.1  GTGTATCTTTCGGA.1  GTGTCAGAATAAGG.1  GTGTCAGAATGCCA.1 \n##                 2                 0                 0                 1 \n##  GTGTCAGAGGAGCA.1  GTGTCAGATCGCTC.1  GTGTGATGCTAAGC.1  GTGTGATGCTGAAC.1 \n##                 0                12                 0                 3 \n##  GTGTGATGGTACCA.1  GTTAAAACCGGAGA.1  GTTAAAACCTCAAG.1  GTTAAAACGTAAAG.1 \n##                 8                10         CD16 Mono                 6 \n##  GTTAAAACTAGCGT.1  GTTAAATGACTGTG.1  GTTAAATGATGTGC.1  GTTAAATGCGCCTT.1 \n##                12                 9                 3                 5 \n##  GTTAAATGCTTGAG.1  GTTAAATGGGTTCA.1  GTTAAATGGTATCG.1  GTTAAATGTATGGC.1 \n##                 0                 6                 2                 2 \n##  GTTAAATGTGGTGT.1  GTTAACCTCATTCT.1  GTTAACCTCGCAAT.1  GTTAACCTGTTTCT.1 \n##                 5                 0                 6                 0 \n##  GTTACGGAACTGGT.1  GTTACGGATTGCGA.1  GTTACTACACACAC.1  GTTACTACGGACAG.1 \n##         CD16 Mono                 3                 2                 3 \n##  GTTAGGTGACAGCT.1  GTTAGGTGAGAGGC.1  GTTAGGTGCCTGAA.1  GTTAGGTGGAGGAC.1 \n##                 6                 0                 0                 1 \n##  GTTAGGTGGCCATA.1  GTTAGGTGGGTGAG.1  GTTAGTCTAGGTCT.1  GTTAGTCTGGTGAG.1 \n##                 0                 5                 3                 1 \n##  GTTATAGATATCTC.1  GTTATAGATCAGTG.1  GTTATAGATGCTCC.1  GTTATAGATTATCC.1 \n##                 3                 7                 1                 0 \n##  GTTATAGATTGCAG.1  GTTATCTGCACTAG.1  GTTATCTGCTCTTA.1  GTTATCTGTCATTC.1 \n##                 0                 6                 2                 9 \n##  GTTATGCTTCAAGC.1  GTTATGCTTCGCAA.1  GTTCAACTACGCTA.1  GTTCAACTACTGTG.1 \n##                 2                 3                 1                 2 \n##  GTTCAACTAGATCC.1  GTTCAACTCACCAA.1  GTTCAACTGACAAA.1  GTTCAACTTGCAGT.1 \n##                 1                 0                10                 5 \n##  GTTCAACTTGCCAA.1  GTTCAGGAAGCTCA.1  GTTCAGGAGCTTCC.1  GTTCAGGAGTGCTA.1 \n##                 7                10                 5                 5 \n##  GTTCATACACACCA.1  GTTCATACACACGT.1  GTTCATACAGCTAC.1  GTTCATACCAGCTA.1 \n##                 0                 1                 6                 0 \n##  GTTCATACCCCGTT.1  GTTCATACGTGTTG.1  GTTGACGAATCGAC.1  GTTGACGAGACTAC.1 \n##                 3                 2                 7                 0 \n##  GTTGACGAGTCGTA.1  GTTGACGATTATCC.1  GTTGACGATTTCGT.1  GTTGAGTGAACAGA.1 \n##                 2                 2                 1                 5 \n##  GTTGAGTGATTCCT.1  GTTGAGTGCAGAAA.1  GTTGAGTGTCAGTG.1  GTTGAGTGTGAGAA.1 \n##                 0                 0                 2                 3 \n##  GTTGAGTGTGAGGG.1  GTTGAGTGTGGAGG.1  GTTGAGTGTTCATC.1  GTTGATCTACTTTC.1 \n##                 0                 3                 0                 0 \n##  GTTGATCTAGCTCA.1  GTTGATCTCACCAA.1  GTTGGATGACAGCT.1  GTTGGATGCGCAAT.1 \n##         CD16 Mono                 7                 6         CD16 Mono \n##  GTTGGATGTCACGA.1  GTTGGATGTCAGAC.1  GTTGGATGTGCTTT.1  GTTGTACTAAGTGA.1 \n##                 1                 2                 0                 2 \n##  GTTGTACTCACTGA.1  GTTTAAGACACTAG.1  GTTTAAGAGAATGA.1  GTTTAAGAGCGAGA.1 \n##                 1         CD16 Mono         CD16 Mono                 5 \n##  GTTTAAGAGGAAGC.1  GTTTAAGAGTCAAC.1  GTTTAAGATGCTTT.1  TAAACAACAAAAGC.1 \n##                10                 0                 1                 7 \n##  TAAACAACACCAGT.1  TAAACAACCCATGA.1  TAAACAACCGAGTT.1  TAAACAACTCTCGC.1 \n##                 5                 0                 0                 3 \n##  TAAAGACTCGCATA.1  TAAAGACTCTGTTT.1  TAAAGACTGGACAG.1  TAAAGACTGGGCAA.1 \n##                 1                 2                 0                 3 \n##  TAAAGACTTTTGGG.1  TAAAGTTGAGTCGT.1  TAAAGTTGAGTTCG.1  TAAAGTTGATTGGC.1 \n##                 2                 1                 0                 0 \n##  TAAAGTTGTCAGGT.1  TAAAGTTGTCCGTC.1  TAAAGTTGTCGACA.1  TAAATCGAAACTGC.1 \n##                 1                 1                 0                 1 \n##  TAAATCGAACCATG.1  TAAATCGAACCTGA.1  TAAATCGACCATAG.1  TAAATCGACTAAGC.1 \n##                 2                 2                 0                 0 \n##  TAAATCGATACTGG.1  TAAATCGATCCCAC.1  TAAATCGATGCCTC.1  TAAATGTGAGGAGC.1 \n##                 3                 0                 1                 2 \n##  TAAATGTGCTCAGA.1  TAAATGTGCTTAGG.1  TAAATGTGTCCTGC.1  TAACAATGAGGTTC.1 \n##                 7                 0         CD16 Mono                 1 \n##  TAACAATGCCTCCA.1  TAACAATGTAGTCG.1  TAACAATGTGGGAG.1  TAACACCTAAGATG.1 \n##                 1                 0                 1                 0 \n##  TAACACCTAGCAAA.1  TAACACCTGTCATG.1  TAACACCTTTGTGG.1  TAACATGACTCGAA.1 \n##                 0                 5                 3                 2 \n##  TAACATGAGTCTAG.1  TAACATGATGCTTT.1  TAACCGGAATTCCT.1  TAACCGGACATGGT.1 \n##                 1         CD16 Mono                 0                10 \n##  TAACCGGACCGTAA.1  TAACCGGAGAGATA.1  TAACCGGAGAGGTG.1  TAACCGGAGGTTCA.1 \n##                 0                 7                 0                 1 \n##  TAACCGGATATCTC.1  TAACCGGATGAACC.1  TAACCGGATGACAC.1  TAACCGGATGTCCC.1 \n##                 1                 7                10                 0 \n##  TAACGTCTACCGAT.1  TAACGTCTCCTCAC.1  TAACGTCTCGCAAT.1  TAACTAGAAAAAGC.1 \n##                 0                 2                 3                 6 \n##  TAACTAGAGAGCTT.1  TAACTAGAGCCTTC.1  TAACTAGATCCTGC.1  TAACTAGATCGCCT.1 \n##                 0                 2         CD16 Mono                 9 \n##  TAACTAGATTAGGC.1  TAACTAGATTGCGA.1  TAACTCACACGCAT.1  TAACTCACAGTAGA.1 \n##                 2                 1                 9                 5 \n##  TAACTCACCATTTC.1  TAACTCACTACAGC.1  TAACTCACTTCCCG.1  TAAGAACTCTTAGG.1 \n##                 0         CD16 Mono                 0                 2 \n##  TAAGAACTTCTCAT.1  TAAGAGGAATTGGC.1  TAAGAGGACCCTAC.1  TAAGAGGACCTCGT.1 \n##                 5                 1                 1                 1 \n##  TAAGAGGAGTCGTA.1  TAAGAGGATGATGC.1  TAAGAGGATGCTAG.1  TAAGAGGATTGTGG.1 \n##                 0                 0                 7                 9 \n##  TAAGAGGATTTGTC.1  TAAGATACCCCTTG.1  TAAGATACCCTAAG.1  TAAGATACGAAACA.1 \n##                 0                 0                 8                11 \n##  TAAGATACGAGCAG.1  TAAGATACTCACCC.1  TAAGATACTTGTCT.1  TAAGATTGGCGATT.1 \n##         CD16 Mono                 3                 3                 0 \n##  TAAGATTGGTGAGG.1  TAAGATTGTCTGGA.1  TAAGATTGTGGTTG.1  TAAGATTGTGTCGA.1 \n##                 0                 5                 0         CD16 Mono \n##  TAAGCGTGATTGGC.1  TAAGCGTGCCTACC.1  TAAGCGTGCTGTTT.1  TAAGCGTGGTCACA.1 \n##         CD16 Mono                 2                10                10 \n##  TAAGCTCTACTACG.1  TAAGCTCTCCTAAG.1  TAAGCTCTGCTAAC.1  TAAGGCTGAACTGC.1 \n##                 1                 3                 5                12 \n##  TAAGGCTGACCTGA.1  TAAGGCTGAGCATC.1  TAAGGCTGATGACC.1  TAAGGCTGTAGCCA.1 \n##                 0                 2                 1                 1 \n##  TAAGGGCTACCTGA.1  TAAGGGCTCATTGG.1  TAAGGGCTCTTCCG.1  TAAGGGCTGGTTAC.1 \n##                 0                 0                 0                 1 \n##  TAAGGGCTTAAGGA.1  TAAGTAACGGAGCA.1  TAAGTAACTCCAAG.1  TAAGTAACTGCTGA.1 \n##                 0                 3                 9                 1 \n##  TAAGTCCTCGAGTT.1  TAAGTCCTGTATGC.1  TAATCCACACAGCT.1  TAATCCACATGTGC.1 \n##                 0                 2                 1                 0 \n##  TAATCCACCGTGAT.1  TAATCCACCTCTAT.1  TAATCCACGGTCTA.1  TAATCGCTACCATG.1 \n##                 1                 0                 6                 5 \n##  TAATCGCTCGGGAA.1  TAATCGCTCTACCC.1  TAATCGCTGAGCTT.1  TAATCGCTGCGTTA.1 \n##                 0                 0                 3                 0 \n##  TAATCGCTTGGCAT.1  TAATGAACCAGTTG.1  TAATGAACCCTTAT.1  TAATGAACGGTCTA.1 \n##                 6                 0                 7                 0 \n##  TAATGAACTCTAGG.1  TAATGATGATCGTG.1  TAATGATGGCTGAT.1  TAATGATGGGTGAG.1 \n##                 0                 0                 0                 5 \n##  TAATGCCTAGCTAC.1  TAATGCCTAGTCGT.1  TAATGCCTCAGAAA.1  TAATGCCTCATGGT.1 \n##                 6         CD16 Mono                 1                 9 \n##  TAATGCCTCTGGAT.1  TAATGCCTGACGAG.1  TAATGCCTGCAGAG.1  TAATGTGAACGTAC.1 \n##         CD16 Mono                 0                 0         CD16 Mono \n##  TAATGTGACCCTCA.1  TAATGTGACCGTAA.1  TAATGTGAGCTTAG.1  TAATGTGAGGATCT.1 \n##                 2                 0                 2                 5 \n##  TAATGTGATATTCC.1  TAATGTGATGACAC.1  TAATGTGATGAGCT.1  TACAAATGCGAACT.1 \n##                 0                 1                 0                 5 \n##  TACAAATGGTGCAT.1  TACAAATGTCAGTG.1  TACAAATGTGCTGA.1  TACAATGACTCAAG.1 \n##                 1                 1                 8                 0 \n##  TACACACTAACAGA.1  TACACACTACCGAT.1  TACACACTATGTCG.1  TACACACTGGTTAC.1 \n##                 0                 2                 2                 0 \n##  TACACACTTAACGC.1  TACACACTTGCTTT.1  TACACACTTTGCTT.1  TACATAGATGGTGT.1 \n##                 0                 0                 1                 1 \n##  TACATCACACACTG.1  TACATCACACGGGA.1  TACATCACCTGTAG.1  TACATCACCTTCGC.1 \n##                 1                 0         CD16 Mono         CD16 Mono \n##  TACATCACGTTCAG.1  TACATCACTCTGGA.1  TACCATTGCGTTAG.1  TACCATTGCTTATC.1 \n##                 0                 1                 6                 2 \n##  TACCATTGGCTACA.1  TACCATTGTCGACA.1  TACCATTGTGCGTA.1  TACCATTGTGCTCC.1 \n##                 0                 0                 0                 1 \n##  TACCATTGTTATCC.1  TACCATTGTTGGCA.1  TACCGAGAACCCAA.1  TACCGAGACCTCAC.1 \n##                 0                 1                 7                 2 \n##  TACCGAGATGTGAC.1  TACCGAGATTCTCA.1  TACCGCTGACAGCT.1  TACCGCTGGATAAG.1 \n##         CD16 Mono                 2                 3                 1 \n##  TACCGCTGGGTCAT.1  TACCGCTGGTCGAT.1  TACCGCTGGTTGGT.1  TACCGCTGTCCCGT.1 \n##                 7         CD16 Mono                 1                 9 \n##  TACCGCTGTGAGCT.1  TACCGGCTAACGTC.1  TACCGGCTCCATGA.1  TACCGGCTCTCGCT.1 \n##                 1                 0                 0                 1 \n##  TACCGGCTTAACGC.1  TACGACGAAACCGT.1  TACGACGAAACGGG.1  TACGAGACCACCAA.1 \n##                 6                 2         CD16 Mono                 0 \n##  TACGAGACCATACG.1  TACGAGACTCCAAG.1  TACGAGACTGGCAT.1  TACGAGACTGGTGT.1 \n##                 2                 0                 0                 2 \n##  TACGAGTGACTAGC.1  TACGAGTGAGTGCT.1  TACGAGTGCGCCTT.1  TACGAGTGCTACGA.1 \n##                 2                12                 0                 0 \n##  TACGAGTGCTCTCG.1  TACGAGTGTTATCC.1  TACGATCTAAGTGA.1  TACGATCTATAAGG.1 \n##                 1         CD16 Mono                 2                 0 \n##  TACGATCTCCAGTA.1  TACGATCTCGAGAG.1  TACGATCTCTATGG.1  TACGATCTGATAAG.1 \n##                 0                 0                 2         CD16 Mono \n##  TACGCAGAAGGTCT.1  TACGCAGAATGTGC.1  TACGCAGACTCATT.1  TACGCAGACTTGTT.1 \n##                 0                10                 1                 1 \n##  TACGCAGATGTCAG.1  TACGCCACAAGGGC.1  TACGCCACACGACT.1  TACGCCACGCGGAA.1 \n##                 0                 3                 0                 0 \n##  TACGCCACTGGCAT.1  TACGCCACTTCGTT.1  TACGCGCTACTCTT.1  TACGCGCTCTCCAC.1 \n##                 0                 1                 2                 9 \n##  TACGCGCTGTTAGC.1  TACGCGCTTCATTC.1  TACGCGCTTGCAAC.1  TACGGAACCGTGAT.1 \n##                 0                 3                 1                 2 \n##  TACGGAACGTGTCA.1  TACGGCCTTCCAGA.1  TACGTACTAGCGTT.1  TACGTACTATTTCC.1 \n##                 1                 0                 0                 5 \n##  TACGTACTCACTAG.1  TACGTTACCGAATC.1  TACGTTACTGTAGC.1  TACTAAGAAACGAA.1 \n##                 0                 0         CD16 Mono                 3 \n##  TACTAAGAATCGTG.1  TACTAAGAGAGACG.1  TACTAAGATACGAC.1  TACTACACAAGGCG.1 \n##                 1                 0                 0                 0 \n##  TACTACACACCCTC.1  TACTACACCGATAC.1  TACTACACTACTCT.1  TACTACACTCACGA.1 \n##                 7                 0                 5                 1 \n##  TACTACACTGAACC.1  TACTACACTTCTTG.1  TACTACTGACTGTG.1  TACTACTGCGAATC.1 \n##                 1                 0         CD16 Mono                 0 \n##  TACTACTGCGTGAT.1  TACTACTGTCAGGT.1  TACTACTGTGACAC.1  TACTCAACCTAGAC.1 \n##                 7                 1         CD16 Mono                 2 \n##  TACTCAACCTAGTG.1  TACTCCCTCACTAG.1  TACTCCCTGAAAGT.1  TACTCCCTTGGGAG.1 \n##                 2                 7                 5                 0 \n##  TACTCTGACCCGTT.1  TACTCTGAGAACTC.1  TACTCTGAGAATCC.1  TACTCTGATCTTTG.1 \n##                 5                 9                 1                 1 \n##  TACTGGGAACTGGT.1  TACTGGGAGACGTT.1  TACTGGGAGCTACA.1  TACTGGGATTGAGC.1 \n##                 2                 1                 6                 8 \n##  TACTGGGATTTCGT.1  TACTGTTGCCCTTG.1  TACTGTTGCGCTAA.1  TACTGTTGCTATGG.1 \n##                 2                 0         CD16 Mono                 6 \n##  TACTGTTGCTGAGT.1  TACTGTTGCTGCTC.1  TACTGTTGGTAAAG.1  TACTGTTGTCCGAA.1 \n##         CD16 Mono                 1                 3                 0 \n##  TACTGTTGTTTGTC.1  TACTTGACAACCGT.1  TACTTGACATGCTG.1  TACTTGACCGCTAA.1 \n##                 3                 0                 0                10 \n##  TACTTGACCTGACA.1  TACTTGACTGAGGG.1  TACTTGACTTCCAT.1  TACTTTCTAACGGG.1 \n##                 0                 3                 0                 5 \n##  TACTTTCTAACTGC.1  TACTTTCTCATTTC.1  TACTTTCTGCTATG.1  TAGAAACTACCATG.1 \n##                 2                 0                 5                 0 \n##  TAGAAACTACTTTC.1  TAGAAACTATCGAC.1  TAGAAACTGTAAAG.1  TAGAAACTGTCTGA.1 \n##                 7                 0                 2                 9 \n##  TAGAATACAAGGCG.1  TAGAATACATCGAC.1  TAGAATACCATTTC.1  TAGAATACCCGATA.1 \n##         CD16 Mono                 1                 2                 8 \n##  TAGAATACCGTTGA.1  TAGAATACGTACGT.1  TAGAATACTACAGC.1  TAGAATTGAGATGA.1 \n##                 1                 0                 0         CD16 Mono \n##  TAGAATTGATCGAC.1  TAGAATTGCGAGTT.1  TAGAATTGCTCATT.1  TAGAATTGGTAAAG.1 \n##                 0                 3                 6         CD16 Mono \n##  TAGAATTGGTCATG.1  TAGAATTGTACGAC.1  TAGAATTGTCTCGC.1  TAGAATTGTGGTGT.1 \n##                 3                 1                 3                 0 \n##  TAGAATTGTGTTCT.1  TAGACGTGATAAGG.1  TAGACGTGATCGTG.1  TAGACGTGTATGGC.1 \n##                 0                 2                 3                 9 \n##  TAGAGAGAACGCAT.1  TAGAGAGAATCACG.1  TAGAGAGACTGGTA.1  TAGAGAGAGTACCA.1 \n##                 2                 0                 0                 0 \n##  TAGAGCACATTGGC.1  TAGAGCACCGAATC.1  TAGAGCACGAGCAG.1  TAGAGCACGCGAGA.1 \n##                 0                 6                 3                 0 \n##  TAGAGCACGGAGGT.1  TAGAGCACGGGCAA.1  TAGAGCACGGTGTT.1  TAGAGCACTCCAGA.1 \n##                 1                13                 0                 0 \n##  TAGATCCTCATACG.1  TAGATCCTCCGCTT.1  TAGATCCTCGTTGA.1  TAGATCCTTCTCTA.1 \n##                 1                 0                 2                 0 \n##  TAGATTGAACCTCC.1  TAGATTGACGCTAA.1  TAGATTGACTATTC.1  TAGATTGACTCCCA.1 \n##                 0                 5                 1                 3 \n##  TAGATTGAGCGTAT.1  TAGCATCTTCGCCT.1  TAGCCCACAAGCCT.1  TAGCCCACGTTGTG.1 \n##                 1                 3                 0                 0 \n##  TAGCCCTGGTAAAG.1  TAGCCGCTAGGTTC.1  TAGCCGCTGAAGGC.1  TAGCCGCTGCGAAG.1 \n##                 1                 2                 0                 9 \n##  TAGCGATGGGACTT.1  TAGCGATGTTGTGG.1  TAGCTACTAGCGTT.1  TAGCTACTATCGTG.1 \n##                 2                 9                 2                 0 \n##  TAGCTACTCCAATG.1  TAGCTACTCTACCC.1  TAGCTACTGGTGTT.1  TAGGACTGAAGAAC.1 \n##         CD16 Mono                 1         CD16 Mono         CD16 Mono \n##  TAGGACTGCATCAG.1  TAGGACTGGCTCCT.1  TAGGACTGTGAGCT.1  TAGGACTGTTCAGG.1 \n##                 0                 2                 0                 0 \n##  TAGGAGCTACCTCC.1  TAGGAGCTAGAGTA.1  TAGGAGCTGCGGAA.1  TAGGAGCTTCATTC.1 \n##                 0                 0                 5                 0 \n##  TAGGCAACATTTCC.1  TAGGCAACCGGGAA.1  TAGGCAACGCTTAG.1  TAGGCAACGGACAG.1 \n##                 3                 5                 0         CD16 Mono \n##  TAGGCAACGTCTGA.1  TAGGCATGAAGCCT.1  TAGGCATGACGGTT.1  TAGGCATGGGGAGT.1 \n##                 1                 1                 7                 2 \n##  TAGGCATGGGGATG.1  TAGGCATGTCCTGC.1  TAGGCTGACACTCC.1  TAGGCTGAGCCATA.1 \n##                 0                 0                 5                 0 \n##  TAGGGACTACCCAA.1  TAGGGACTAGTGTC.1  TAGGGACTATTCTC.1  TAGGGACTCACAAC.1 \n##                 2                 0                 0                 0 \n##  TAGGGACTCTAAGC.1  TAGGGACTTTCACT.1  TAGGGACTTTGCGA.1  TAGGTCGAACGTGT.1 \n##                 1                 2                 0                 0 \n##  TAGGTCGACCAAGT.1  TAGGTCGACCTATT.1  TAGGTCGACTACTT.1  TAGGTCGACTGTGA.1 \n##                 1                 0                10                 1 \n##  TAGGTCGAGGCAAG.1  TAGGTCGATCTGGA.1  TAGGTGACAGGAGC.1  TAGGTGACCGACTA.1 \n##                 5                 0                 0                 3 \n##  TAGGTGACCTCGAA.1  TAGGTGACTGCTGA.1  TAGGTGTGACCCTC.1  TAGGTGTGCAGATC.1 \n##                 1                 1                 0                 0 \n##  TAGGTGTGGAGGAC.1  TAGGTGTGGCGGAA.1  TAGGTGTGTCCCAC.1  TAGGTTCTGAGGAC.1 \n##                 0                 0                 5                 5 \n##  TAGGTTCTGAGGTG.1  TAGGTTCTGGAGCA.1  TAGGTTCTTCGTTT.1  TAGGTTCTTCTACT.1 \n##                 2                 0                 1                 2 \n##  TAGGTTCTTCTGGA.1  TAGGTTCTTGAGGG.1  TAGGTTCTTGTCAG.1  TAGTAAACAGAACA.1 \n##                 8                 7                 6                 0 \n##  TAGTAAACAGAGTA.1  TAGTAAACCCCTAC.1  TAGTAAACTAACCG.1  TAGTAATGAAAAGC.1 \n##                 1                 1         CD16 Mono                 0 \n##  TAGTAATGAACAGA.1  TAGTAATGCGTCTC.1  TAGTAATGTTTCAC.1  TAGTACCTAAGCCT.1 \n##                 5         CD16 Mono                 1                 0 \n##  TAGTACCTCCTCCA.1  TAGTACCTCTAGCA.1  TAGTATGAAGCTAC.1  TAGTATGACCGCTT.1 \n##                 1         CD16 Mono                 0                 2 \n##  TAGTATGACTACGA.1  TAGTCACTCATTCT.1  TAGTCACTCTAAGC.1  TAGTCACTGGGACA.1 \n##                 1                 0                 2                 2 \n##  TAGTCACTTGACTG.1  TAGTCGGAAGTCGT.1  TAGTCGGACAGAGG.1  TAGTCGGATACTGG.1 \n##                 2                 2                 0         CD16 Mono \n##  TAGTCGGATCCTAT.1  TAGTCGGATGATGC.1  TAGTCTTGGAAAGT.1  TAGTCTTGGGGATG.1 \n##                 1                 1         CD16 Mono                 8 \n##  TAGTCTTGGTTGAC.1  TAGTCTTGTAGCCA.1  TAGTCTTGTCCCGT.1  TAGTGGTGAAAAGC.1 \n##                 7                 0                 3                10 \n##  TAGTGGTGAGTCTG.1  TAGTGGTGAGTGTC.1  TAGTGGTGCACTCC.1  TAGTGGTGCTGGAT.1 \n##                10                 1                 0                10 \n##  TAGTGGTGGAATCC.1  TAGTGGTGGGACAG.1  TAGTGGTGGGGTGA.1  TAGTTAGAAAACAG.1 \n##                 2                 1                 1                 1 \n##  TAGTTAGAGGACGA.1  TAGTTAGAGTCAAC.1  TAGTTCACAACGTC.1  TAGTTCACAAGGTA.1 \n##                 8                 7                 2                 0 \n##  TAGTTCACCTGACA.1  TAGTTCACGTTGAC.1  TAGTTCACTCAGTG.1  TAGTTCACTGTCGA.1 \n##                 0                 0                 7                 8 \n##  TAGTTGCTCTACTT.1  TAGTTGCTTATCGG.1  TAGTTGCTTCGCCT.1  TAGTTGCTTGCCCT.1 \n##                 6                 2                 2                 0 \n##  TATAAGACGCTGAT.1  TATAAGTGAGCATC.1  TATAAGTGTTACTC.1  TATACAGACTGTAG.1 \n##                 0                 1                 0         CD16 Mono \n##  TATACAGAGACGTT.1  TATACAGAGTGTCA.1  TATACAGATAGAGA.1  TATACAGATTCCAT.1 \n##                 0                 1                 2                 0 \n##  TATACCACAAAACG.1  TATACCACCTGTGA.1  TATACCACGCAAGG.1  TATACCACTTATCC.1 \n##                 0                 1                 2                 2 \n##  TATACGCTAGGGTG.1  TATACGCTATGTGC.1  TATACGCTGTCATG.1  TATACGCTTCGCCT.1 \n##                 6                 1                 9                 5 \n##  TATACGCTTGCCAA.1  TATAGATGCTTCGC.1  TATAGATGGCTGAT.1  TATAGATGTGCAAC.1 \n##                 5                 2                 0                 0 \n##  TATAGCCTATCAGC.1  TATAGCCTCTCGCT.1  TATAGCCTGTAAAG.1  TATAGCCTTCTTTG.1 \n##                 1                 0                 0                 6 \n##  TATAGCCTTGCTTT.1  TATAGCCTTTCTTG.1  TATAGCCTTTGACG.1  TATCAAGACGTAGT.1 \n##         CD16 Mono                 1                 0                 7 \n##  TATCAAGATCTCTA.1  TATCAAGATTCTAC.1  TATCACTGACCTTT.1  TATCACTGCACTCC.1 \n##                 1                 0                 1         CD16 Mono \n##  TATCACTGCCTCCA.1  TATCACTGGTCGTA.1  TATCACTGTAACCG.1  TATCAGCTAGTAGA.1 \n##                 2                 1                 1                 3 \n##  TATCAGCTCCAACA.1  TATCAGCTCCTGAA.1  TATCAGCTTGAACC.1  TATCAGCTTTATCC.1 \n##                 3                 1                 1         CD16 Mono \n##  TATCAGCTTTTACC.1  TATCCAACCTCTAT.1  TATCCAACCTTTAC.1  TATCCAACTTTGTC.1 \n##                 1                 2                 0                 3 \n##  TATCCTGAAGTGCT.1  TATCCTGACCCAAA.1  TATCCTGAGGATTC.1  TATCCTGATGACAC.1 \n##                 1                 3                 1                 3 \n##  TATCCTGATGCCTC.1  TATCGACTAAGATG.1  TATCGACTACGACT.1  TATCGACTACTACG.1 \n##                 7                 1                 2                 0 \n##  TATCGACTAGCAAA.1  TATCGACTCACTCC.1  TATCGACTCGAGAG.1  TATCGACTTACGAC.1 \n##                 6                 3                 1                 0 \n##  TATCGACTTGCACA.1  TATCGACTTGGTGT.1  TATCGTACTATCGG.1  TATCGTACTTGCGA.1 \n##                 5                 0                 0         CD16 Mono \n##  TATCTCGAACAGCT.1  TATCTCGAGTAAAG.1  TATCTCGATCTATC.1  TATCTGACAAAAGC.1 \n##                 1         CD16 Mono                 0                 0 \n##  TATCTGACTGTGAC.1  TATCTTCTAAGTAG.1  TATCTTCTAGAACA.1  TATCTTCTATCGAC.1 \n##                 2                 0                 1                 9 \n##  TATCTTCTCTCCCA.1  TATCTTCTGGGAGT.1  TATCTTCTTCTACT.1  TATCTTCTTTCGGA.1 \n##                 1                 1                 0                 2 \n##  TATGAATGATTCTC.1  TATGAATGCTTCGC.1  TATGAATGGCAAGG.1  TATGAATGGTATCG.1 \n##                 5                 1                 1                 0 \n##  TATGAATGTCTTAC.1  TATGAATGTTTCGT.1  TATGCGGAAGTCAC.1  TATGCGGAATTCGG.1 \n##                 5                 1                 1                 0 \n##  TATGCGGACGTCTC.1  TATGCGGACTATTC.1  TATGGGACACCCAA.1  TATGGGACATCGTG.1 \n##                 6                 0                 8                 9 \n##  TATGGGACGGAAGC.1  TATGGGACGTTGCA.1  TATGGGACTACTCT.1  TATGGGTGCAGGAG.1 \n##                 6                 6                 1                 5 \n##  TATGGGTGGCCATA.1  TATGGGTGGTAGCT.1  TATGGTCTACACCA.1  TATGGTCTCCGAAT.1 \n##                 3                 1                 9                 0 \n##  TATGGTCTTGCATG.1  TATGTCACCAACCA.1  TATGTCACCTCATT.1  TATGTCACCTGACA.1 \n##                 1                12                 9                 0 \n##  TATGTCACTATCTC.1  TATGTCACTCGTAG.1  TATGTCTGCTGCAA.1  TATGTCTGGAACCT.1 \n##                 1                 0                 0                 0 \n##  TATGTCTGGTGAGG.1  TATGTCTGTAGAGA.1  TATGTCTGTGATGC.1  TATGTGCTATGGTC.1 \n##                12                 0                 1                 0 \n##  TATGTGCTCTCCAC.1  TATGTGCTCTTGAG.1  TATGTGCTTCAGTG.1  TATTGCTGAATCGC.1 \n##                 0                 0                 2                 2 \n##  TATTGCTGAGAGAT.1  TATTGCTGCAACTG.1  TATTGCTGCGCTAA.1  TATTGCTGTATCTC.1 \n##                 2                 1                 3                 1 \n##  TATTGCTGTATGGC.1  TATTGCTGTGGTGT.1  TATTTCCTAACCGT.1  TATTTCCTAAGTGA.1 \n##                 0                 2                 0         CD16 Mono \n##  TATTTCCTACGCTA.1  TATTTCCTAGGGTG.1  TATTTCCTCCTAAG.1  TATTTCCTCGGAGA.1 \n##                 0                 1                 1                 0 \n##  TATTTCCTGTATGC.1  TCAACACTAGCGTT.1  TCAACACTATCGAC.1  TCAACACTGGCAAG.1 \n##                 1                 2         CD16 Mono                 1 \n##  TCAACACTTGGTAC.1  TCAAGGACCCGTTC.1  TCAAGGACCTTCCG.1  TCAAGGACGGAGCA.1 \n##                 0                 0                 2         CD16 Mono \n##  TCAAGGTGAGATGA.1  TCAAGGTGCAATCG.1  TCAAGGTGCTCAAG.1  TCAAGGTGTAGAAG.1 \n##                 2                 1                 3                 3 \n##  TCAAGGTGTCTCGC.1  TCAAGGTGTCTTCA.1  TCAAGTCTACCATG.1  TCAAGTCTCTCATT.1 \n##                 1                 2                 3                10 \n##  TCAAGTCTCTTATC.1  TCAAGTCTGAAAGT.1  TCAAGTCTGTCATG.1  TCAAGTCTGTTAGC.1 \n##                 5                 1                 6                 0 \n##  TCAAGTCTTACTTC.1  TCAAGTCTTAGCCA.1  TCAAGTCTTCTAGG.1  TCAAGTCTTGTCGA.1 \n##                 2                 2                 1                 2 \n##  TCAATAGAAGCTAC.1  TCAATAGAGCGATT.1  TCAATAGAGTAGGG.1  TCAATAGATTTGCT.1 \n##                 0                 0                 0                 2 \n##  TCAATCACACGGGA.1  TCAATCACCTTGCC.1  TCAATCACGGAGGT.1  TCAATCACGGGATG.1 \n##                 0                 6                 1                 9 \n##  TCAATCACTTGAGC.1  TCACAACTACCTGA.1  TCACAACTGGTGGA.1  TCACAACTGGTTTG.1 \n##                 5                 6                 0                 0 \n##  TCACAACTTGCATG.1  TCACAACTTTTCTG.1  TCACATACAACTGC.1  TCACATACCTTGCC.1 \n##                 1                 5                 0                 0 \n##  TCACATACGGTCAT.1  TCACATACTTTCAC.1  TCACCCGAACTGGT.1  TCACCCGAACTTTC.1 \n##                 2                 0                 0                 0 \n##  TCACCCGAATTCGG.1  TCACCCGATCCTCG.1  TCACCGTGAACCAC.1  TCACCGTGAAGGTA.1 \n##                 3                 8                 0                 0 \n##  TCACCGTGCTGAGT.1  TCACCGTGGCTTCC.1  TCACCGTGGGGCAA.1  TCACCGTGTAAGCC.1 \n##                 6                 0                 7                 2 \n##  TCACCGTGTGATGC.1  TCACCGTGTTCAGG.1  TCACCTCTAGGTTC.1  TCACCTCTCACTTT.1 \n##         CD16 Mono                 5                 0                 1 \n##  TCACCTCTGAATGA.1  TCACCTCTGGACGA.1  TCACGAGAATTCGG.1  TCACGAGACCCGTT.1 \n##                 5                 5                 0                 2 \n##  TCACGAGAGCGATT.1  TCACGAGATCTACT.1  TCACGAGATGTCCC.1  TCACTATGATCACG.1 \n##                 1                 0                 2                 2 \n##  TCACTATGCACTAG.1  TCACTATGCGACAT.1  TCACTATGCTTCTA.1  TCACTATGTGACTG.1 \n##                 6                 0                 0                 3 \n##  TCACTATGTTCATC.1  TCACTATGTTGAGC.1  TCAGACGAAACCAC.1  TCAGACGAGGTCAT.1 \n##                 5                 8                 1                 0 \n##  TCAGAGACAAGCCT.1  TCAGAGACCTCTAT.1  TCAGAGACCTTGGA.1  TCAGAGACTCTGGA.1 \n##                 0                 7                 0                 1 \n##  TCAGAGACTTTCGT.1  TCAGCAGAAACCGT.1  TCAGCAGAACGTGT.1  TCAGCAGAAGAACA.1 \n##                 0                 6                 3                 0 \n##  TCAGCAGATAAAGG.1  TCAGCAGATTTGGG.1  TCAGCGCTAAGGTA.1  TCAGCGCTACACTG.1 \n##                 5                 5                 1                 0 \n##  TCAGCGCTCCTTAT.1  TCAGCGCTGGTCAT.1  TCAGCGCTTGGAGG.1  TCAGGATGAGCACT.1 \n##                 5                 0                 2                 1 \n##  TCAGGATGCTCAAG.1  TCAGGATGGCATCA.1  TCAGGATGGCGAAG.1  TCAGGATGTAAGCC.1 \n##                 0                 1                 1                 0 \n##  TCAGGATGTCCTAT.1  TCAGGATGTGCATG.1  TCAGGATGTGGTCA.1  TCAGGATGTTGCTT.1 \n##         CD16 Mono                 0                 2                 0 \n##  TCAGTACTAAGAAC.1  TCAGTACTACTGTG.1  TCAGTACTCCACCT.1  TCAGTACTCCCTTG.1 \n##                 0         CD16 Mono                 2                 2 \n##  TCAGTACTGCTGTA.1  TCAGTACTTGTTTC.1  TCAGTGGAATCGGT.1  TCAGTGGACAATCG.1 \n##                 3                 3                 0                12 \n##  TCAGTGGAGGAGGT.1  TCAGTTACCTCCCA.1  TCAGTTACGAGGGT.1  TCATCAACCGTTGA.1 \n##                 7                 2                 0                 1 \n##  TCATCAACGTTCTT.1  TCATCAACTATGCG.1  TCATCAACTCACCC.1  TCATCATGCACTCC.1 \n##         CD16 Mono                 0                 0                 1 \n##  TCATCATGCAGCTA.1  TCATCCCTAACGGG.1  TCATCCCTACACGT.1  TCATCCCTAGCGGA.1 \n##                 8                 0                 3                 0 \n##  TCATCCCTCCCACT.1  TCATGTACAAAAGC.1  TCATGTACATCGTG.1  TCATGTACTGACAC.1 \n##                 0                 0                 1                 1 \n##  TCATTCGAATCACG.1  TCATTCGAGATACC.1  TCATTCGATGCAAC.1  TCATTGACACCATG.1 \n##                 0                 0                 5                 2 \n##  TCATTGACACCCTC.1  TCATTGACACGCTA.1  TCATTGACCTGATG.1  TCATTGACTGCCTC.1 \n##                 3                 0                 3         CD16 Mono \n##  TCCACGTGCGTGTA.1  TCCACGTGCTTACT.1  TCCACGTGTCGTTT.1  TCCACGTGTGCAGT.1 \n##                 0                 3                 0                 2 \n##  TCCACGTGTGTGGT.1  TCCACTCTAAAGCA.1  TCCACTCTGGGTGA.1  TCCAGAGAACTACG.1 \n##                 0                 0                 2                 1 \n##  TCCAGAGAATAAGG.1  TCCAGAGATAGAGA.1  TCCAGAGATCTCGC.1  TCCATAACCCTTCG.1 \n##                 0                 1                 9                 2 \n##  TCCATAACGGAAAT.1  TCCATAACGTATGC.1  TCCATCCTAGCCTA.1  TCCATCCTGGAACG.1 \n##         CD16 Mono                 0                 0                 0 \n##  TCCATCCTTCGCAA.1  TCCCACGACTGGTA.1  TCCCACGATCCTAT.1  TCCCAGACAGCCAT.1 \n##         CD16 Mono                 1                 1                 0 \n##  TCCCAGACCAAAGA.1  TCCCAGACTTCTTG.1  TCCCAGACTTGTCT.1  TCCCATCTCGTACA.1 \n##                 8                 8                 1                 0 \n##  TCCCATCTGCTACA.1  TCCCATCTGGAAAT.1  TCCCATCTTGAGGG.1  TCCCGAACACGCAT.1 \n##                 0         CD16 Mono                 6                 0 \n##  TCCCGAACAGTTCG.1  TCCCGAACCAGATC.1  TCCCGAACGCCAAT.1  TCCCGAACTCCTCG.1 \n##                 0                 2                 1                 0 \n##  TCCCGATGACGTTG.1  TCCCGATGAGCATC.1  TCCCGATGCTACCC.1  TCCCGATGGTTAGC.1 \n##                 6                 6                 0         CD16 Mono \n##  TCCCTACTAACCTG.1  TCCCTACTACTGTG.1  TCCCTACTAGATGA.1  TCCCTACTCAACCA.1 \n##                 8                 6                 6                 5 \n##  TCCCTACTCCTTAT.1  TCCCTACTCTGGTA.1  TCCCTACTGATGAA.1  TCCCTACTTGAGAA.1 \n##                 0                 1                 1                 2 \n##  TCCCTACTTGCTCC.1  TCCGAAGAACCTGA.1  TCCGAAGATACTTC.1  TCCGAAGATATGCG.1 \n##                 6         CD16 Mono                 0                 5 \n##  TCCGAGCTAGATGA.1  TCCTAAACAAGTGA.1  TCCTAAACCGCATA.1  TCCTAAACGCATAC.1 \n##                 1                 6                 0         CD16 Mono \n##  TCCTAATGAGCACT.1  TCCTAATGCTGCAA.1  TCCTAATGCTTGTT.1  TCCTAATGGGTAAA.1 \n##                 2                 0                 5                 1 \n##  TCCTAATGTCTGGA.1  TCCTAATGTGTGGT.1  TCCTAATGTTCATC.1  TCCTACCTACAGCT.1 \n##                 1                 1         CD16 Mono                 1 \n##  TCCTACCTCTCAGA.1  TCCTACCTTGAGGG.1  TCCTATGAAGCCTA.1  TCCTATGAAGCTAC.1 \n##                 0                 1                 8                 0 \n##  TCCTATGATAAAGG.1  TCCTATGATATCTC.1  TCGAATCTCCTCAC.1  TCGAATCTCCTTCG.1 \n##                 3                 0                 5                 0 \n##  TCGAATCTCTTCGC.1  TCGAATCTGTACGT.1  TCGAATCTTTCATC.1  TCGACCTGACCTGA.1 \n##                 0                 2                 0                 3 \n##  TCGACCTGTCATTC.1  TCGACCTGTTATCC.1  TCGACGCTCAGCTA.1  TCGACGCTGAGCTT.1 \n##                 0                 6                 1                 3 \n##  TCGACGCTGGTTCA.1  TCGACGCTTAGAGA.1  TCGAGAACGGTAAA.1  TCGAGAACTCTCCG.1 \n##                 0                 1                 2                 0 \n##  TCGAGAACTGCAAC.1  TCGAGAACTGCTTT.1  TCGAGCCTCCTCGT.1  TCGAGCCTCCTTAT.1 \n##                 0                 1                 1                 0 \n##  TCGAGCCTGACGGA.1  TCGATACTAGAACA.1  TCGATACTCACAAC.1  TCGATTTGACGGAG.1 \n##                 0                 7                 0                 1 \n##  TCGATTTGGATACC.1  TCGATTTGGGTGGA.1  TCGATTTGGTCAAC.1  TCGATTTGTGACAC.1 \n##                 2                 1                 1                 0 \n##  TCGATTTGTGCCTC.1  TCGATTTGTGCTTT.1  TCGCAAGACAGAAA.1  TCGCAAGAGCGATT.1 \n##                 5                 2                 1                12 \n##  TCGCAAGATGAGCT.1  TCGCAAGATGCCAA.1  TCGCAAGATGCCTC.1  TCGCACACCCTTGC.1 \n##                 0                 0                 2                 0 \n##  TCGCACACGGTTTG.1  TCGCACACTACTTC.1  TCGCACACTAGCCA.1  TCGCACACTGGAAA.1 \n##                 6                 0                 1                 5 \n##  TCGCACACTGGTGT.1  TCGCACTGACTCAG.1  TCGCACTGATGGTC.1  TCGCACTGATTCCT.1 \n##                 1                 8                 0                 2 \n##  TCGCACTGCTCGCT.1  TCGCACTGCTGATG.1  TCGCACTGGGTCTA.1  TCGCACTGTACAGC.1 \n##                 0                 0                 1                 0 \n##  TCGCACTGTTAGGC.1  TCGCACTGTTGCAG.1  TCGCAGCTGCCATA.1  TCGCCATGAGCTAC.1 \n##                 5                 7                 5                 7 \n##  TCGCCATGATGTCG.1  TCGCCATGCAACTG.1  TCGCCATGCATTGG.1  TCGCCATGCCGATA.1 \n##                 2                13                 0                 7 \n##  TCGCCATGCCTTAT.1  TCGCCATGCGGGAA.1  TCGCCATGCGTAGT.1  TCGCCATGCTGCAA.1 \n##                 9                 1                 2         CD16 Mono \n##  TCGCCATGTATTCC.1  TCGGACCTCCTATT.1  TCGGACCTCTCAAG.1  TCGGACCTCTCATT.1 \n##                 6                 2                 2                 0 \n##  TCGGCACTCCCACT.1  TCGGCACTGGTATC.1  TCGGCACTTGTCAG.1  TCGTAGGACGAGTT.1 \n##                 0                 2                10                 1 \n##  TCGTAGGACTGTTT.1  TCGTAGGATGCTCC.1  TCGTGAGAACCCTC.1  TCGTGAGAACGCTA.1 \n##                 3                 8                 3                 0 \n##  TCGTGAGACCTATT.1  TCGTGAGAGGTGAG.1  TCGTTATGAAGATG.1  TCGTTATGAGAGAT.1 \n##                 1                 0                 3                 1 \n##  TCGTTATGAGATCC.1  TCGTTATGCTGTCC.1  TCGTTATGGACACT.1  TCGTTATGGTCATG.1 \n##                 0                 0                 5                 3 \n##  TCGTTATGTTCAGG.1  TCTAACACAAAAGC.1  TCTAACACATTTCC.1  TCTAACACGAATGA.1 \n##                 3                 0                 0                 0 \n##  TCTAACACGCTAAC.1  TCTAACACTCTGGA.1  TCTAACACTGCAAC.1  TCTAACACTGGTTG.1 \n##                 0                 6                 9                 0 \n##  TCTAACTGAAGGGC.1  TCTAACTGGCGAGA.1  TCTAAGCTCTCTAT.1  TCTAAGCTTGGAGG.1 \n##                 0                 2                 0         CD16 Mono \n##  TCTACAACAACAGA.1  TCTACAACAACCAC.1  TCTACAACAGGCGA.1  TCTACAACCGATAC.1 \n##                 7                 0                 1                 0 \n##  TCTAGACTCAAGCT.1  TCTAGACTCGTCTC.1  TCTAGACTTGGGAG.1  TCTAGACTTTGGTG.1 \n##         CD16 Mono                 1         CD16 Mono                 9 \n##  TCTAGTTGACCCAA.1  TCTAGTTGAGAACA.1  TCTAGTTGATTGGC.1  TCTAGTTGCCATGA.1 \n##                 3                 9         CD16 Mono                 2 \n##  TCTAGTTGGAAAGT.1  TCTAGTTGTCTTAC.1  TCTATGTGAGAACA.1  TCTATGTGCCGTAA.1 \n##                 1                 9                 2                 6 \n##  TCTATGTGGATAAG.1  TCTATGTGGTGAGG.1  TCTATGTGTTCTCA.1  TCTCAAACAAGGGC.1 \n##                 3                 3                 0                 2 \n##  TCTCAAACACCTCC.1  TCTCAAACCTTGAG.1  TCTCAAACTCCAAG.1  TCTCAAACTGGTCA.1 \n##                 0                 1                 7                 1 \n##  TCTCCACTCAAAGA.1  TCTCCACTCCCTAC.1  TCTCCACTCTACCC.1  TCTCCACTGGTCTA.1 \n##                 0                 1                10                 3 \n##  TCTCCACTTTCTGT.1  TCTCTAGAACTTTC.1  TCTCTAGAGGAACG.1  TCTCTAGAGGAGCA.1 \n##                 7                 0                 8                 0 \n##  TCTCTAGATGGGAG.1  TCTCTAGATTCCGC.1  TCTCTAGATTCGTT.1  TCTGATACCGTGAT.1 \n##                 2                 0                 0                 1 \n##  TCTGATACGGAACG.1  TCTGATACTTACCT.1  TCTGATACTTGTCT.1  TCTTACGAAGAATG.1 \n##                 0                 2                 8                 0 \n##  TCTTACGAGAAGGC.1  TCTTACGAGGTAGG.1  TCTTACGATCGCCT.1  TCTTCAGAACCTAG.1 \n##                 0                 3                 3                 1 \n##  TCTTCAGAAGTAGA.1  TCTTCAGACGACTA.1  TCTTCAGAGTCCTC.1  TCTTGATGGACGAG.1 \n##                 6                 0                 1         CD16 Mono \n##  TCTTGATGGCGATT.1  TCTTGATGGCTTAG.1  TCTTGATGTTCGCC.1  TGAAATTGCTCTAT.1 \n##                 2                10                 0                 3 \n##  TGAAATTGGTGCAT.1  TGAAATTGTCCAGA.1  TGAAATTGTCTAGG.1  TGAACCGATAGCCA.1 \n##                 7                 0         CD16 Mono                 5 \n##  TGAAGCACCTGTGA.1  TGAAGCACGTACCA.1  TGAAGCACTTACTC.1  TGAAGCTGCGAACT.1 \n##         CD16 Mono                 9                 8                 7 \n##  TGAAGCTGGGCAAG.1  TGAAGCTGTATGCG.1  TGAATAACACCGAT.1  TGAATAACCTGGAT.1 \n##                 0                 1                11                 1 \n##  TGAATAACTCTAGG.1  TGAATAACTTGCGA.1  TGACACGAAAGTGA.1  TGACACGACATACG.1 \n##                 1         CD16 Mono                 0                 3 \n##  TGACACGACCACCT.1  TGACACGAGGATCT.1  TGACACGAGGTAAA.1  TGACACGAGTACCA.1 \n##                 1                 1                 9                 0 \n##  TGACCAGAAAGGTA.1  TGACCAGAATCGAC.1  TGACCAGACCAATG.1  TGACCAGATCAGTG.1 \n##                 5                 5                 3                 0 \n##  TGACCAGATGCACA.1  TGACCAGATTCTCA.1  TGACCGCTCTAGCA.1  TGACCGCTCTGGTA.1 \n##                 0                 1                 2                 1 \n##  TGACCGCTTAAGGA.1  TGACGAACTGTCTT.1  TGACGATGACACGT.1  TGACGATGTCAAGC.1 \n##                 6                 3                 3                 7 \n##  TGACGATGTCTGGA.1  TGACGCCTAGTTCG.1  TGACGCCTCACCAA.1  TGACGCCTCAGTCA.1 \n##                 0                 0         CD16 Mono                 0 \n##  TGACGCCTCGTGTA.1  TGACGCCTGCCCTT.1  TGACGCCTGCCTTC.1  TGACGCCTTCTGGA.1 \n##                 3                 6         CD16 Mono                 7 \n##  TGACGCCTTGTAGC.1  TGACTGGAAGGAGC.1  TGACTGGACACTTT.1  TGACTGGACTCTTA.1 \n##                 0                 1                 0                 0 \n##  TGACTGGAGCCCTT.1  TGACTGGAGTCTAG.1  TGACTGGATAACCG.1  TGACTGGATCGATG.1 \n##                 2                 0                 5                 5 \n##  TGACTTACAGAAGT.1  TGACTTACGGTGTT.1  TGACTTACTAAAGG.1  TGACTTACTGAACC.1 \n##                 0                 0                 2                 0 \n##  TGACTTTGAGATGA.1  TGACTTTGCTGACA.1  TGACTTTGTGGCAT.1  TGACTTTGTTCATC.1 \n##                 0                 0         CD16 Mono                 2 \n##  TGAGACACAAAAGC.1  TGAGACACGCGTAT.1  TGAGACACGCTTAG.1  TGAGACACGGGACA.1 \n##                 3                 0                 7                 5 \n##  TGAGACACTCTTAC.1  TGAGACACTTTGTC.1  TGAGCAACAGAGAT.1  TGAGCAACCTCAGA.1 \n##                 3                 0                 1                 2 \n##  TGAGCAACGATAAG.1  TGAGCTGAAAGATG.1  TGAGCTGAAGTACC.1  TGAGCTGACAGCTA.1 \n##                 6         CD16 Mono                 2                 0 \n##  TGAGCTGACCGATA.1  TGAGCTGATAGCCA.1  TGAGCTGATCGTGA.1  TGAGCTGATGTGCA.1 \n##                 9                 2                 7                 1 \n##  TGAGGACTGACTAC.1  TGAGGACTTTTCGT.1  TGAGGTACAGGCGA.1  TGAGGTACAGTCTG.1 \n##                 0                 6                 2                 0 \n##  TGAGGTACATGCTG.1  TGAGGTACGGTCAT.1  TGAGGTACGTTAGC.1  TGAGGTACTATCGG.1 \n##                 1                 0                 1                 2 \n##  TGAGGTACTCACGA.1  TGAGGTACTCTCCG.1  TGAGTCGACCTATT.1  TGAGTCGAGCGTAT.1 \n##                 0         CD16 Mono                 3                 0 \n##  TGAGTCGATAACCG.1  TGAGTCGATATCTC.1  TGAGTCGATCTATC.1  TGAGTGACAAGGCG.1 \n##                 8                 5                 0                 7 \n##  TGAGTGACAGAGTA.1  TGAGTGACCCAATG.1  TGAGTGACTCCTCG.1  TGAGTGACTTTCGT.1 \n##                 0                10                 0                 5 \n##  TGATAAACAGGTTC.1  TGATAAACCCGTAA.1  TGATACCTATGTGC.1  TGATACCTCGGTAT.1 \n##                 6                 0                 6                 0 \n##  TGATACCTTCCTTA.1  TGATATGATGTTCT.1  TGATCACTCCTCGT.1  TGATCACTTGGCAT.1 \n##                 6                 2                 1                 2 \n##  TGATCGGACTCTCG.1  TGATCGGAGGTAAA.1  TGATCGGATCGCAA.1  TGATCGGATGTAGC.1 \n##                 1         CD16 Mono                 0         CD16 Mono \n##  TGATTAGACCCGTT.1  TGATTCACCAGCTA.1  TGATTCACCCTTCG.1  TGATTCACCGAATC.1 \n##                 0                 6                 6                 0 \n##  TGATTCACGGCGAA.1  TGATTCACTAGCGT.1  TGATTCTGACGTTG.1  TGATTCTGATTCCT.1 \n##         CD16 Mono                 0                 1                 6 \n##  TGATTCTGGCTATG.1  TGATTCTGGTAGGG.1  TGATTCTGTCAGGT.1  TGCAACGACACACA.1 \n##         CD16 Mono                 0                 0         CD16 Mono \n##  TGCAACGACCCAAA.1  TGCAACGAGGAGCA.1  TGCAACGATCAAGC.1  TGCAAGACCTTGCC.1 \n##                 1                 8                 5                 0 \n##  TGCAAGTGACACTG.1  TGCAAGTGCTCCAC.1  TGCAAGTGGAATAG.1  TGCAAGTGGTAGGG.1 \n##                10                 1                 7                 2 \n##  TGCAAGTGGTCTTT.1  TGCAAGTGTCTAGG.1  TGCAAGTGTGGTTG.1  TGCAAGTGTTCCGC.1 \n##                 0                 0                 0                 2 \n##  TGCAATCTAAGTGA.1  TGCAATCTACGCAT.1  TGCACAGAAAGCAA.1  TGCACAGATCGCAA.1 \n##         CD16 Mono                 0                 1                 1 \n##  TGCACAGATTTGTC.1  TGCACGCTCAGAAA.1  TGCACGCTGGTTAC.1  TGCAGATGACGTTG.1 \n##                 0                 5                 0                 0 \n##  TGCAGATGAGCGGA.1  TGCAGATGGCTCCT.1  TGCAGATGTCGTTT.1  TGCAGATGTTGGCA.1 \n##                 2                 1                 0                 1 \n##  TGCATGGACTGCAA.1  TGCATGGATGTGGT.1  TGCCAAGAACCAGT.1  TGCCAAGACTCGCT.1 \n##                 1                 3                 0                 0 \n##  TGCCAAGATAGACC.1  TGCCAAGATCAGTG.1  TGCCACTGCACTAG.1  TGCCACTGCTAGCA.1 \n##                 2                 7                 1                 7 \n##  TGCCACTGCTGTGA.1  TGCCACTGGGTGTT.1  TGCCACTGTATGGC.1  TGCCACTGTCGCCT.1 \n##                 0                 7                 0                 0 \n##  TGCCAGCTAGCACT.1  TGCCAGCTCCGCTT.1  TGCCAGCTGCTATG.1  TGCCCAACAGGTTC.1 \n##                 0                 2                 9                 0 \n##  TGCCCAACCACTGA.1  TGCCCAACCTGACA.1  TGCCCAACGCCATA.1  TGCCCAACTTCTGT.1 \n##                 9                 1         CD16 Mono                 0 \n##  TGCCGACTATCGTG.1  TGCCGACTATGCTG.1  TGCCGACTGCATCA.1  TGCCGACTGTGTAC.1 \n##                 3                 1                 0                 1 \n##  TGCCGACTTATGCG.1  TGCCGACTTGCAGT.1  TGCGAAACCGCTAA.1  TGCGAAACGCATCA.1 \n##                 2                 0                10                 1 \n##  TGCGAAACGCCATA.1  TGCGAAACGGGATG.1  TGCGAAACTGAAGA.1  TGCGATGAAAAAGC.1 \n##                 0                 2                 8                 0 \n##  TGCGATGACTGTGA.1  TGCGATGATCGTGA.1  TGCGATGATGGAGG.1  TGCGATGATGTGCA.1 \n##         CD16 Mono                 2                 0                 5 \n##  TGCGATGATTCGGA.1  TGCGCACTAGGGTG.1  TGCGCACTAGTTCG.1  TGCGTAGACTCTTA.1 \n##         CD16 Mono                 2                 0         CD16 Mono \n##  TGCGTAGAGTCGTA.1  TGCGTAGATAAGGA.1  TGCGTAGATTTCGT.1  TGCTAGGACCGAAT.1 \n##                 2         CD16 Mono                 3                 1 \n##  TGCTAGGACCGTAA.1  TGCTAGGACTTACT.1  TGCTAGGAGTACGT.1  TGCTATACCGCAAT.1 \n##         CD16 Mono         CD16 Mono                 8         CD16 Mono \n##  TGCTATACTCAAGC.1  TGCTATACTGAGAA.1  TGCTATACTTAGGC.1  TGCTGAGAGCGTTA.1 \n##                 2                 1                 0         CD16 Mono \n##  TGCTGAGAGTGTCA.1  TGCTGAGATCCTAT.1  TGCTGAGATGCTAG.1  TGCTTAACACTGTG.1 \n##         CD16 Mono                 0                 0                 1 \n##  TGCTTAACATTCCT.1  TGCTTAACTTTCTG.1  TGGAAAGAACACCA.1  TGGAAAGAAGTTCG.1 \n##                 3                 0                 0                 0 \n##  TGGAAAGAGGATTC.1  TGGAAAGATTCCCG.1  TGGAACACTCTCCG.1  TGGAACACTTATCC.1 \n##                10                 1                 0                 0 \n##  TGGAACTGTAAGGA.1  TGGAACTGTCTCTA.1  TGGAAGCTGATAGA.1  TGGAAGCTGGCATT.1 \n##                 5                 0                 1                 0 \n##  TGGAAGCTTCCGTC.1  TGGACCCTGGGATG.1  TGGACCCTGTACGT.1  TGGACCCTTCGCTC.1 \n##                 1                 0                 3                 7 \n##  TGGACCCTTTGCAG.1  TGGACTGAAACTGC.1  TGGACTGAAGATGA.1  TGGACTGACCAAGT.1 \n##                 6                 7                 1                 0 \n##  TGGACTGATCGCTC.1  TGGACTGATGCCCT.1  TGGAGACTACTTTC.1  TGGAGACTAGCAAA.1 \n##                 3                 1                 0                 1 \n##  TGGAGACTCTTTAC.1  TGGAGACTGCCTTC.1  TGGAGACTTAAGGA.1  TGGAGGGAACTGTG.1 \n##                 0                 2                 1                 5 \n##  TGGAGGGAGGTTAC.1  TGGAGGGATATCTC.1  TGGAGGGATGTAGC.1  TGGATCGAGCGTTA.1 \n##                 1                 0                 1                 1 \n##  TGGATCGAGTGTCA.1  TGGATCGATCCTGC.1  TGGATCGATCGCCT.1  TGGATCGATGCAAC.1 \n##         CD16 Mono                 0                 6                 2 \n##  TGGATGACAGCAAA.1  TGGATGTGAAGAGT.1  TGGATGTGAGCTAC.1  TGGATGTGCACTTT.1 \n##                 0                 2         CD16 Mono                 2 \n##  TGGATGTGCATTTC.1  TGGATGTGGTATCG.1  TGGATGTGGTTGTG.1  TGGATGTGTAGCGT.1 \n##                 0                 3                 2                 2 \n##  TGGATGTGTCTTAC.1  TGGATGTGTGCTCC.1  TGGATGTGTGTGCA.1  TGGATTCTATAAGG.1 \n##                 0                 6                 2                 0 \n##  TGGATTCTCAGTCA.1  TGGATTCTGAGGAC.1  TGGATTCTGTCACA.1  TGGCAATGAGAAGT.1 \n##                 0                 0                 5                 9 \n##  TGGCAATGAGGGTG.1  TGGCAATGATACCG.1  TGGCAATGATCACG.1  TGGCAATGCCATAG.1 \n##                 3                 0                 2         CD16 Mono \n##  TGGCAATGCTACGA.1  TGGCAATGGGTCTA.1  TGGCAATGTGCCTC.1  TGGCAATGTGTTCT.1 \n##                 0                 7                 0                 1 \n##  TGGCACCTACAGTC.1  TGGCACCTGATAAG.1  TGGGTATGACCATG.1  TGGGTATGAGATCC.1 \n##                 7                 0                 0                 0 \n##  TGGGTATGCGATAC.1  TGGGTATGCGGAGA.1  TGGGTATGGACACT.1  TGGGTATGTACTGG.1 \n##                12                 0                 2                 1 \n##  TGGGTATGTGGTAC.1  TGGGTATGTTGACG.1  TGGTACGAACCTAG.1  TGGTACGAAGCTAC.1 \n##                 0                 2                 0                 0 \n##  TGGTACGACTTAGG.1  TGGTACGATACGAC.1  TGGTAGACACCACA.1  TGGTAGACACCCTC.1 \n##                 0                 1                 0                 3 \n##  TGGTAGACGGAGTG.1  TGGTAGACGTTCAG.1  TGGTAGACTAACCG.1  TGGTAGACTACTGG.1 \n##                 8                 7                 7                 0 \n##  TGGTAGACTCTTTG.1  TGGTAGTGAAGAAC.1  TGGTAGTGACTACG.1  TGGTAGTGGGACTT.1 \n##                 1                 7                 0                 0 \n##  TGGTAGTGGTCATG.1  TGGTAGTGTGTGAC.1  TGGTATCTAAGTAG.1  TGGTATCTACAGCT.1 \n##                 6                 2                 0                 3 \n##  TGGTATCTAGCTAC.1  TGGTATCTCGGAGA.1  TGGTATCTTTCGCC.1  TGGTCAGAAGGTTC.1 \n##         CD16 Mono                 7                 5                 2 \n##  TGGTCAGATTCACT.1  TGGTTACTCCATAG.1  TGGTTACTGCGTTA.1  TGGTTACTTTCTTG.1 \n##                 2                 0                 0                 0 \n##  TGGTTACTTTGCTT.1  TGGTTACTTTGGTG.1  TGTAAAACAGGGTG.1  TGTAAAACATACCG.1 \n##                 0                 0                 0                 1 \n##  TGTAAAACCAACTG.1  TGTAAAACCAGATC.1  TGTAAAACCTCGAA.1  TGTAAAACGAAAGT.1 \n##                 3                 7                 0                 6 \n##  TGTAACCTAAGTAG.1  TGTAACCTACGTAC.1  TGTAACCTCCACAA.1  TGTAACCTCCCTCA.1 \n##                 9                 0                 7                 0 \n##  TGTAACCTCTCCAC.1  TGTAACCTTTCATC.1  TGTAATGAACTTTC.1  TGTAATGAATCGGT.1 \n##                 1                 1                 0         CD16 Mono \n##  TGTAATGACAGTCA.1  TGTAATGACCCGTT.1  TGTAATGACCGATA.1  TGTAATGACTCGCT.1 \n##                 7                 2                 6                 5 \n##  TGTACTTGCACAAC.1  TGTACTTGCAGAGG.1  TGTACTTGCGACAT.1  TGTACTTGCGCATA.1 \n##                 6                 6         CD16 Mono                 0 \n##  TGTACTTGGCAAGG.1  TGTACTTGGTTAGC.1  TGTACTTGTCCTAT.1  TGTACTTGTCGCAA.1 \n##                 2                 2                 2                 7 \n##  TGTACTTGTGTCTT.1  TGTAGGTGTCCCAC.1  TGTAGTCTACCCAA.1  TGTAGTCTGCGGAA.1 \n##                 0                 1                 1                 3 \n##  TGTAGTCTTAACCG.1  TGTAGTCTTCGCAA.1  TGTAGTCTTTGAGC.1  TGTATCTGAACGAA.1 \n##                 2                 2                 1                 0 \n##  TGTATCTGGTAAGA.1  TGTATCTGGTGTTG.1  TGTATGCTCGTCTC.1  TGTATGCTTCTCGC.1 \n##                 1                 1                 8                 2 \n##  TGTCAGGACATGAC.1  TGTCAGGACGAATC.1  TGTCAGGACTTGAG.1  TGTCTAACGGAGCA.1 \n##                 0                 9                 8                 6 \n##  TGTGACGAAACGTC.1  TGTGACGAAGCCTA.1  TGTGACGACAACCA.1  TGTGACGACCCTCA.1 \n##                 0                 0                 5                 0 \n##  TGTGACGAGAGATA.1  TGTGACGATCATTC.1  TGTGACGATCTAGG.1  TGTGAGACATTCCT.1 \n##                 1                 2                 6                 5 \n##  TGTGAGACCATACG.1  TGTGAGACCATGCA.1  TGTGAGACCGCAAT.1  TGTGAGTGAACCAC.1 \n##                 2                 2                 1                 0 \n##  TGTGAGTGAAGTAG.1  TGTGAGTGCTGATG.1  TGTGAGTGCTTCTA.1  TGTGAGTGTATTCC.1 \n##                 1                 5                 3                 2 \n##  TGTGAGTGTTATCC.1  TGTGAGTGTTTCAC.1  TGTGATCTTAACGC.1  TGTGGATGAGCCTA.1 \n##                13                 3                 1         CD16 Mono \n##  TGTGGATGGGCAAG.1  TGTGGATGGGTTCA.1  TGTGGATGTTACTC.1  TGTTAAGACAAAGA.1 \n##                 8                 7                 2                 6 \n##  TGTTAAGACTATTC.1  TGTTAAGAGTGTCA.1  TGTTAAGATTGTCT.1  TGTTACACAGTGCT.1 \n##                 0                 2                 1         CD16 Mono \n##  TGTTACACATCGAC.1  TGTTACACGTTCTT.1  TGTTACACTCCTAT.1  TGTTACACTGTAGC.1 \n##                 2                 9                 0                 0 \n##  TGTTACTGAAACAG.1  TGTTACTGAAAGCA.1  TGTTACTGCTTCCG.1  TGTTACTGGAGCTT.1 \n##                 2         CD16 Mono                 7                 0 \n##  TGTTACTGTCAGTG.1  TGTTACTGTGCTCC.1  TTAACCACGGTGAG.1  TTAACCACTGTCAG.1 \n##                 1                 2                 2                 2 \n##  TTACAGCTCATGCA.1  TTACAGCTCGTGTA.1  TTACAGCTTACTGG.1  TTACCATGCCTATT.1 \n##                 1                 3                 0                 3 \n##  TTACCATGCCTTTA.1  TTACCATGGACAGG.1  TTACCATGTTCGTT.1  TTACGACTAACCTG.1 \n##                 6                 2                 9                 0 \n##  TTACGACTCCGCTT.1  TTACGACTCCTCCA.1  TTACGACTCTCAGA.1  TTACGACTGGACAG.1 \n##                 8                 1                 0         CD16 Mono \n##  TTACGACTTGCCCT.1  TTACGTACGTAAGA.1  TTACGTACTGTCAG.1  TTACGTACTGTGAC.1 \n##                 8                 1                 8                 0 \n##  TTACTCGAAACGAA.1  TTACTCGAACCAAC.1  TTAGAATGAAAGTG.1  TTAGAATGTGTGAC.1 \n##                 1                 1                 9                 7 \n##  TTAGACCTAAGAGT.1  TTAGACCTAGAATG.1  TTAGACCTAGTGTC.1  TTAGACCTCCATAG.1 \n##                12                 1                 0                 0 \n##  TTAGACCTGTTAGC.1  TTAGCTACTGTCAG.1  TTAGGGACAAGAGT.1  TTAGGGACAGCAAA.1 \n##                 6                 0                 6                 0 \n##  TTAGGGACCCACAA.1  TTAGGGACGTACGT.1  TTAGGGACTCTATC.1  TTAGGGACTGAAGA.1 \n##                 0         CD16 Mono                 1                 1 \n##  TTAGGGTGACGCAT.1  TTAGGGTGAGCCTA.1  TTAGGGTGGCTGAT.1  TTAGGGTGTTTCGT.1 \n##                 2         CD16 Mono                 5                 0 \n##  TTAGGTCTTCTGGA.1  TTAGGTCTTTGGTG.1  TTAGTCACCGAGTT.1  TTAGTCACGGTCAT.1 \n##                 1                 9                 0                 3 \n##  TTAGTCACTATGCG.1  TTAGTCACTGAGGG.1  TTAGTCTGAGTCGT.1  TTAGTCTGCTGTAG.1 \n##                 5         CD16 Mono                 0                 1 \n##  TTAGTCTGGAAGGC.1  TTAGTCTGGCGAGA.1  TTAGTCTGTAGCCA.1  TTAGTCTGTGGATC.1 \n##                 2                 1                 0                 0 \n##  TTAGTCTGTTCACT.1  TTATCCGAAGGTTC.1  TTATCCGAGATACC.1  TTATCCGAGTGTTG.1 \n##                 6                 1                 3                 2 \n##  TTATCCGATCCTTA.1  TTATCCGATTGGCA.1  TTATGAGAGGCAAG.1  TTATGAGATACGCA.1 \n##                 5                 0                 1                 0 \n##  TTATGCACCACTAG.1  TTATGCACCCGCTT.1  TTATGCACCCTCAC.1  TTATGGCTCCTTCG.1 \n##                 1                 6                 1                 9 \n##  TTATGGCTGGTCAT.1  TTATGGCTTCATTC.1  TTATGGCTTGGAGG.1  TTATTCCTCCAACA.1 \n##                 1                 0                 1         CD16 Mono \n##  TTATTCCTCGTGTA.1  TTATTCCTGAGCTT.1  TTATTCCTGCGATT.1  TTATTCCTTCTCTA.1 \n##                 0                 0                 0                 0 \n##  TTATTCCTTCTTTG.1  TTCAAAGAACCCTC.1  TTCAAAGAAGGTCT.1  TTCAAAGACATGAC.1 \n##         CD16 Mono                 0                 0                 0 \n##  TTCAAAGACCCGTT.1  TTCAAAGACGTCTC.1  TTCAAAGATAACCG.1  TTCAAAGATGACCA.1 \n##                 0                 1                 5                 2 \n##  TTCAAAGATTGACG.1  TTCAACACATGCCA.1  TTCAACACCAACTG.1  TTCAACACCTGTGA.1 \n##                 7                 5                 0                 5 \n##  TTCAAGCTACAGTC.1  TTCAAGCTGACAAA.1  TTCAAGCTGTACAC.1  TTCAAGCTGTTACG.1 \n##                 7                 0                 0                 1 \n##  TTCACAACATCTTC.1  TTCACAACCCGTTC.1  TTCACAACCTGAGT.1  TTCACAACTGACTG.1 \n##                 1                 0                 0                 3 \n##  TTCACAACTGCAAC.1  TTCACCCTACGACT.1  TTCACCCTGGTAGG.1  TTCACCCTTGCACA.1 \n##                 0                 2                 0                 0 \n##  TTCAGACTAAGGGC.1  TTCAGACTAGCCTA.1  TTCAGACTCCGAAT.1  TTCAGTACAGCCAT.1 \n##                 0                 0                 2                 2 \n##  TTCAGTACCTGTTT.1  TTCAGTACGCTAAC.1  TTCAGTACTTCGCC.1  TTCAGTTGAAAGCA.1 \n##                 1                 0         CD16 Mono                12 \n##  TTCAGTTGCCCTTG.1  TTCAGTTGCGAATC.1  TTCAGTTGCGTCTC.1  TTCAGTTGCTACGA.1 \n##                 0                 9                 0                 2 \n##  TTCAGTTGTCTTTG.1  TTCATCGAGTCTGA.1  TTCATCGATCAGGT.1  TTCATCGATGAGAA.1 \n##                 0                 2                 0                 0 \n##  TTCATCGATTGCAG.1  TTCATGACAGCCAT.1  TTCATGACAGCGGA.1  TTCATGACCTGACA.1 \n##                 0                 5                 5                 8 \n##  TTCATGTGCGACTA.1  TTCATGTGCGTGAT.1  TTCATGTGCTCTAT.1  TTCATGTGGCGTTA.1 \n##                 7         CD16 Mono                 0                 1 \n##  TTCATGTGGTATCG.1  TTCATGTGTTCTCA.1  TTCATTCTAAAAGC.1  TTCATTCTACAGCT.1 \n##         CD16 Mono                 1                 2                 0 \n##  TTCATTCTACAGTC.1  TTCATTCTCACAAC.1  TTCATTCTCCAAGT.1  TTCATTCTTCCTGC.1 \n##                 3                 5         CD16 Mono                 1 \n##  TTCATTCTTCTCGC.1  TTCCAAACAGGTTC.1  TTCCAAACGGCGAA.1  TTCCAAACGTGTCA.1 \n##                 0                 8         CD16 Mono                 2 \n##  TTCCAAACGTTCTT.1  TTCCATGAAAGGTA.1  TTCCATGAATGACC.1  TTCCATGACTTACT.1 \n##                 0                 9                 5                 1 \n##  TTCCATGAGCATCA.1  TTCCATGATCGCCT.1  TTCCCACTGCAGTT.1  TTCCCACTTTACCT.1 \n##                 1                 0                 0                 1 \n##  TTCCTAGACTGTCC.1  TTCCTAGAGGATCT.1  TTCGAGGACATGCA.1  TTCGAGGATGCAGT.1 \n##                 0                 0                 0                 8 \n##  TTCGATTGAAGTGA.1  TTCGATTGCTTGGA.1  TTCGATTGTGCCTC.1  TTCGGAGAATTCGG.1 \n##                 0                 3                 3                 1 \n##  TTCGGAGACATTGG.1  TTCGGAGACGAACT.1  TTCGGAGACGTGTA.1  TTCGTATGATCGAC.1 \n##                 1         CD16 Mono                 0                 0 \n##  TTCGTATGTCCGTC.1  TTCGTATGTGACAC.1  TTCTACGAAACGTC.1  TTCTACGAGAGATA.1 \n##                 8                 2                 2                 8 \n##  TTCTACGAGTCGAT.1  TTCTACGATACAGC.1  TTCTAGTGAGGAGC.1  TTCTAGTGAGTGTC.1 \n##                 0                 1                 1         CD16 Mono \n##  TTCTAGTGCGCCTT.1  TTCTAGTGGAAAGT.1  TTCTCAGAAAAACG.1  TTCTCAGAAATCGC.1 \n##         CD16 Mono                 5                 0                 8 \n##  TTCTCAGACCTTAT.1  TTCTCAGATACGCA.1  TTCTCAGATACTGG.1  TTCTCAGATCTCGC.1 \n##                 2                 5                 2                 3 \n##  TTCTGATGAGCATC.1  TTCTGATGAGCTAC.1  TTCTGATGAGTTCG.1  TTCTGATGCCAACA.1 \n##                 6                 0         CD16 Mono                10 \n##  TTCTGATGGAGGAC.1  TTCTGATGGCCTTC.1  TTCTGATGGTCATG.1  TTCTGATGTACTTC.1 \n##                 8                 0                 1                 0 \n##  TTCTGATGTCATTC.1  TTCTGATGTCTCGC.1  TTCTTACTCGGAGA.1  TTCTTACTGGTAGG.1 \n##                 7                 7                 2         CD16 Mono \n##  TTGAACCTAACTGC.1  TTGAACCTAATGCC.1  TTGAACCTCCGTAA.1  TTGAACCTCGGTAT.1 \n##                 3                 0                 0                 5 \n##  TTGAACCTCTACCC.1  TTGAATGAAAACGA.1  TTGAATGAAGTTCG.1  TTGAATGACTGACA.1 \n##         CD16 Mono                 1                 0                 0 \n##  TTGACACTCTGCTC.1  TTGACACTGACACT.1  TTGACACTGAGGTG.1  TTGAGGACATGCTG.1 \n##                 3         CD16 Mono                 1                 2 \n##  TTGAGGACCTTGCC.1  TTGAGGACTAGCCA.1  TTGAGGTGACGTAC.1  TTGAGGTGATCAGC.1 \n##                 0                 1                 1                 1 \n##  TTGAGGTGCATCAG.1  TTGAGGTGGGTTTG.1  TTGAGGTGTAGACC.1  TTGATCTGACGGGA.1 \n##                 1                 2                 1         CD16 Mono \n##  TTGATCTGGACGTT.1  TTGATCTGGCTGAT.1  TTGATCTGGGAACG.1  TTGATCTGGGTTTG.1 \n##                 0                 0                 0                 1 \n##  TTGATCTGTACTGG.1  TTGCATTGACCACA.1  TTGCATTGAGCACT.1  TTGCATTGCAGAGG.1 \n##                 1                 2                 2                 2 \n##  TTGCATTGCAGTTG.1  TTGCATTGCTCATT.1  TTGCATTGCTGAGT.1  TTGCATTGGGTAGG.1 \n##         CD16 Mono                 0                 1                 0 \n##  TTGCATTGGGTCAT.1  TTGCATTGGGTGGA.1  TTGCATTGGTAGCT.1  TTGCATTGTTTGGG.1 \n##                 7                11                 7                10 \n##  TTGCTAACACCACA.1  TTGCTAACCGCATA.1  TTGCTAACCTAGCA.1  TTGCTATGGCTCCT.1 \n##                 0                 0                 5         CD16 Mono \n##  TTGCTATGGTGTAC.1  TTGCTATGTCAGGT.1  TTGCTATGTGCGTA.1  TTGGAGACACGTAC.1 \n##                 2                 1                 0                 1 \n##  TTGGAGTGAGGGTG.1  TTGGAGTGCACTGA.1  TTGGAGTGCTCGAA.1  TTGGAGTGCTGTAG.1 \n##                 3                 0                 1                 0 \n##  TTGGAGTGGTATGC.1  TTGGAGTGGTTGTG.1  TTGGAGTGTATTCC.1  TTGGAGTGTTCCCG.1 \n##                 1                 1                 0                 2 \n##  TTGGGAACTAGCCA.1  TTGGTACTACACCA.1  TTGGTACTCTCTTA.1  TTGGTACTGCTTAG.1 \n##                 1                 0                 0                 2 \n##  TTGGTACTGGTTCA.1  TTGGTACTGTCATG.1  TTGGTACTGTTCGA.1  TTGGTACTTACTGG.1 \n##                 0                 1                 3                 6 \n##  TTGGTACTTAGAAG.1  TTGTACACATAAGG.1  TTGTACACCAGAAA.1  TTGTACACCGGTAT.1 \n##                 0                 0                 2                 2 \n##  TTGTAGCTAAGATG.1  TTGTAGCTAATGCC.1  TTGTAGCTAGTCAC.1  TTGTAGCTCGCCTT.1 \n##                 8                 1                 2                 3 \n##  TTGTAGCTCTCATT.1  TTGTAGCTCTCGCT.1  TTGTAGCTGCGTTA.1  TTGTAGCTGGTGAG.1 \n##                 0                 0                 1                 8 \n##  TTGTCATGAGATGA.1  TTGTCATGCTAGTG.1  TTGTCATGCTGGTA.1  TTGTCATGGTCACA.1 \n##                 6                 1                10                 2 \n##  TTTAGAGAATCAGC.1  TTTAGAGACTGGAT.1  TTTAGAGAGACGAG.1  TTTAGAGAGCATAC.1 \n##                 1                 1                 0                10 \n##  TTTAGAGAGGACTT.1  TTTAGAGATCCAAG.1  TTTAGAGATCCTAT.1  TTTAGAGATTCATC.1 \n##                 2                 1                 2                 0 \n##  TTTAGCTGATTCCT.1  TTTAGCTGCAATCG.1  TTTAGCTGCATCAG.1  TTTAGCTGTTTGTC.1 \n##                 0                 0                 3                 0 \n##  TTTAGGCTACACGT.1  TTTAGGCTCCCTAC.1  TTTAGGCTCTCGAA.1  TTTAGGCTTAGCCA.1 \n##                 3                 0                 3                 0 \n##  TTTAGGCTTTCGGA.1  TTTATCCTAAGTGA.1  TTTATCCTCCCTTG.1  TTTATCCTGCGAGA.1 \n##                 0                 1                 3         CD16 Mono \n##  TTTATCCTGGAAAT.1  TTTATCCTGGGATG.1  TTTCACGAGAAACA.1  TTTCACGATACTTC.1 \n##                 0                 1                 0                 3 \n##  TTTCACGATGCTGA.1  TTTCAGTGCCTGTC.1  TTTCAGTGGACGAG.1  TTTCAGTGTCCTGC.1 \n##                 5                 1                 2                 1 \n##  TTTCCAGACGCATA.1  TTTCGAACCAGATC.1  TTTCGAACTTGCGA.1  TTTCGAACTTGCTT.1 \n##                 1                 1                 2                 0 \n##  TTTCTACTATGACC.1  TTTCTACTGAGGGT.1  TTTCTACTGGTCTA.1  TTTGACTGAAGCAA.1 \n##                 2                 3                 2                 1 \n##  TTTGACTGAGTCGT.1  TTTGACTGCCGCTT.1  TTTGACTGTTACCT.1  TTTGCATGCTTCGC.1 \n##                 3                 1                 0                 3 \n##  TTTGCATGGTCCTC.1  AAACATACCAAGCT.1  AAACATACCCCTAC.1  AAACATACCCGTAA.1 \n##                 3                 5                11                 1 \n##  AAACATACCCTCGT.1  AAACATACGAGGTG.1  AAACATACGTCGTA.1  AAACATACTCAGGT.1 \n##                 3                 1                 1                 0 \n##  AAACATTGACCTGA.1  AAACATTGACTTTC.1  AAACATTGGTACCA.1  AAACATTGGTGTCA.1 \n##                 0                 1                 3                 3 \n##  AAACATTGTAGCCA.1  AAACATTGTCCAGA.1  AAACATTGTGCTAG.1  AAACATTGTGTCCC.1 \n##                 0                 0                 7                11 \n##  AAACATTGTGTGGT.1  AAACATTGTTTGTC.1  AAACCGTGCTCTCG.1  AAACCGTGCTGGAT.1 \n##                 1                 0                 0                 7 \n##  AAACGCACAAGGGC.1  AAACGCACGCAGAG.1  AAACGCACGTACAC.1  AAACGCTGAAGAAC.1 \n##                 0                 0                 0                 0 \n##  AAACGCTGAGCACT.1  AAACGCTGGCCCTT.1  AAACGCTGGGTGGA.1  AAACGGCTCTTGGA.1 \n##                 5                 1                 0                 0 \n## AAACGGCTTACTCT.11  AAACGGCTTGCTCC.1 AAACTTGACGTGTA.11  AAACTTGAGACACT.1 \n##                 0                 9                 0                 0 \n##  AAACTTGAGCTATG.1  AAACTTGATCTAGG.1  AAACTTGATCTCAT.1  AAAGAGACAGCCAT.1 \n##                 0                 0                 2                 6 \n##  AAAGAGACCTCTAT.1  AAAGAGACGCAGAG.1  AAAGAGACTGTGAC.1  AAAGATCTGAGAGC.1 \n##                 3                 7                 0         CD16 Mono \n##  AAAGATCTTGCGTA.1  AAAGATCTTTCTCA.1  AAAGCAGAAACAGA.1  AAAGCAGAACGGGA.1 \n##                 1                 3                 0                 0 \n##  AAAGCAGAACGTGT.1  AAAGCAGAATTGGC.1  AAAGCAGATTGCGA.1  AAAGCCTGGGTTCA.1 \n##                 9                 9                 6                 9 \n##  AAAGCCTGGTATCG.1  AAAGCCTGTTCTAC.1  AAAGGCCTACCATG.1  AAAGGCCTAGCTCA.1 \n##                 0                 2                 1                 0 \n##  AAAGGCCTCAAAGA.1  AAAGGCCTCCGATA.1  AAAGGCCTGACACT.1  AAAGGCCTGTCTTT.1 \n##                 0                 8                 0                 2 \n##  AAAGGCCTTCCCAC.1  AAAGGCCTTTGCAG.1  AAAGTTTGACCCTC.1  AAAGTTTGCTTTAC.1 \n##                 1                 8         CD16 Mono                 2 \n##  AAAGTTTGTCCTTA.1  AAAGTTTGTTATCC.1  AAAGTTTGTTCGCC.1  AAATACTGCAGCTA.1 \n##         CD16 Mono                 1                 6         CD16 Mono \n##  AAATACTGCATGAC.1  AAATACTGGACGAG.1  AAATCAACAAGAAC.1  AAATCAACGGCGAA.1 \n##                 7                11                 5                 0 \n##  AAATCAACTTACTC.1  AAATCATGAAGGTA.1  AAATCATGCTCATT.1  AAATCATGGATAGA.1 \n##                 3                 5                 2                 8 \n##  AAATCATGGGACTT.1  AAATCATGTTGAGC.1  AAATCCCTAGACTC.1  AAATCCCTAGGTCT.1 \n##                10                 2                 2                 1 \n##  AAATCTGAACCACA.1  AAATCTGATCGCCT.1  AAATGGGAAACGTC.1 AAATGGGAAGATCC.11 \n##                 6                 5                 1                 0 \n##  AAATGGGACATGGT.1  AAATGGGACCTCCA.1  AAATGGGACGTTAG.1  AAATGGGAGTATGC.1 \n##                 5                 8                 2                 6 \n##  AAATGGGATAGCGT.1  AAATGGGATGAGAA.1  AAATGTTGACCTAG.1  AAATGTTGAGTAGA.1 \n##                 9                 3                 0         CD16 Mono \n##  AAATGTTGCCTTCG.1  AAATGTTGCGTAGT.1  AAATGTTGCTACTT.1  AAATGTTGGATAGA.1 \n##                 1                 1                 1                 0 \n##  AAATGTTGGATGAA.1  AAATGTTGTAAGGA.1  AAATTCGAATACCG.1  AAATTCGACTCTAT.1 \n##         CD16 Mono                 1                 1                 1 \n##  AAATTCGACTGTCC.1  AAATTCGAGTACAC.1  AAATTCGATACTTC.1  AAATTCGATAGACC.1 \n##                 7                 3                 3                10 \n##  AAATTCGATCTCGC.1  AAATTCGATGCTAG.1 AAATTCGATGTGCA.11  AAATTGACGACAGG.1 \n##                 2                 0                10                 9 \n##  AACAAACTATACCG.1  AACAAACTCAGGAG.1  AACAAACTGCGTAT.1  AACAAACTTGAAGA.1 \n##                 2                 1                 1                 0 \n##  AACAATACAAGTGA.1  AACAATACCGTTAG.1  AACAATACCTGAAC.1  AACAATACGATAAG.1 \n##                 0                 1                 1                 6 \n##  AACAATACGCAGAG.1  AACACGTGCAATCG.1  AACACGTGTGCTTT.1  AACACTCTTCAAGC.1 \n##                 1                 3                 7                 0 \n##  AACACTCTTGATGC.1  AACAGAGAACGGAG.1  AACAGAGAAGTTCG.1  AACAGAGACATGCA.1 \n##                 7                 1                 2         CD16 Mono \n##  AACAGAGACTACCC.1  AACAGAGATCTGGA.1  AACAGAGATGCTAG.1  AACAGCACAATCGC.1 \n##                 9                 1                 0         CD16 Mono \n##  AACAGCACAGAGTA.1  AACAGCACCCCAAA.1  AACAGCACCCGTAA.1  AACAGCACTATGGC.1 \n##                 0                 0                 3         CD16 Mono \n##  AACAGCACTCTTTG.1  AACATATGAGTACC.1  AACATATGCACTGA.1  AACATATGGCAAGG.1 \n##         CD16 Mono                 1                 5                 2 \n##  AACATATGGCTCCT.1  AACATTGAAGAACA.1  AACATTGAAGTTCG.1  AACATTGACAGGAG.1 \n##                 0                 1                 2                12 \n##  AACATTGAGTTTGG.1  AACATTGATGGTGT.1  AACCACGAAGCCAT.1  AACCACGAAGGTTC.1 \n##         CD16 Mono                 0                 0                 1 \n## AACCACGAGAATCC.11  AACCACGAGCCATA.1  AACCACGAGCCCTT.1  AACCACGAGGTGTT.1 \n##                 0                 0                 0                 2 \n##  AACCACGAGTTCGA.1  AACCACGATCGATG.1  AACCACGATCTTAC.1  AACCACGATGCCTC.1 \n##         CD16 Mono         CD16 Mono                 1                 0 \n##  AACCACGATTCTTG.1  AACCAGTGACGCAT.1  AACCAGTGATCTCT.1  AACCAGTGATGTCG.1 \n##                 0                 0                11                 0 \n##  AACCAGTGCTGCAA.1  AACCAGTGGGAACG.1  AACCAGTGTGCACA.1  AACCCAGAACCCAA.1 \n##         CD16 Mono                 1                 5                 1 \n##  AACCCAGAACGGTT.1  AACCCAGAAGCTAC.1  AACCCAGAGCCTTC.1  AACCCAGAGTGAGG.1 \n##                 0                 5         CD16 Mono                 0 \n##  AACCCAGATTGCTT.1  AACCGATGACACGT.1  AACCGATGCAGATC.1  AACCGATGCTGAAC.1 \n##                 1                 5                11                 1 \n##  AACCGATGGAGGGT.1  AACCGATGGCGGAA.1  AACCGCCTAATCGC.1  AACCGCCTATCGAC.1 \n##                 0                 1                 1                 1 \n##  AACCGCCTCAACTG.1  AACCGCCTCACTCC.1  AACCGCCTCCCACT.1  AACCGCCTCTTCTA.1 \n##                 0                 1                 1                 0 \n##  AACCGCCTGTGTCA.1  AACCGCCTTAACCG.1  AACCTACTATTGGC.1  AACCTACTCCCGTT.1 \n##         CD16 Mono                 1                 6                 2 \n##  AACCTACTCTCATT.1  AACCTACTCTCGAA.1  AACCTTACATACCG.1  AACCTTACGCTGTA.1 \n##                 0                 2         CD16 Mono                 0 \n##  AACCTTACGTACCA.1  AACCTTTGAAACGA.1  AACCTTTGACGTGT.1  AACCTTTGAGTAGA.1 \n##                 2                 1                 0                 1 \n##  AACCTTTGCATTGG.1  AACCTTTGTTTCAC.1  AACCTTTGTTTGGG.1  AACGCAACAGGGTG.1 \n##         CD16 Mono                 3                 6                 5 \n##  AACGCAACGTTACG.1  AACGCAACTCCTAT.1  AACGCATGACTACG.1  AACGCATGTAGACC.1 \n##                 7                 8         CD16 Mono                 1 \n##  AACGCATGTGCTCC.1  AACGCATGTGTCCC.1 AACGCCCTCCCTCA.11  AACGCCCTCCCTTG.1 \n##                 0                 6                 3         CD16 Mono \n##  AACGCCCTCCTCGT.1  AACGCCCTCGATAC.1  AACGCCCTGTAAAG.1  AACGGTACATGCCA.1 \n##                 2                 0                 2         CD16 Mono \n##  AACGGTACCGTGAT.1  AACGGTACGAGGCA.1  AACGGTACGCTATG.1  AACGGTACGGACGA.1 \n##                 2                 0                 2                11 \n##  AACGGTACGTATGC.1  AACGGTACGTTACG.1  AACGGTACTACAGC.1  AACGGTACTCGATG.1 \n##                 2                 1                 3                 7 \n##  AACGGTACTGTCAG.1  AACGGTTGCTGACA.1  AACGGTTGGGTCTA.1  AACGGTTGGTATGC.1 \n##                 0         CD16 Mono                 0                 1 \n##  AACGGTTGTCCCAC.1  AACGTCGACAAAGA.1  AACGTCGACCTGAA.1  AACGTGTGAAAAGC.1 \n##                 0                 0                 1                 0 \n##  AACGTGTGAAGGGC.1  AACGTGTGGACGGA.1  AACGTGTGTGAGGG.1  AACGTTCTAGCAAA.1 \n##                 1                 0                 8                 0 \n##  AACGTTCTAGCGTT.1  AACGTTCTCCTATT.1  AACGTTCTGGGTGA.1  AACGTTCTGTTGGT.1 \n##         CD16 Mono                 1                 3                 1 \n##  AACGTTCTTACTTC.1 AACGTTCTTCGCTC.11  AACGTTCTTTTGCT.1  AACTACCTAAACAG.1 \n##                 1                 1                 6                 1 \n##  AACTACCTAAGCCT.1  AACTACCTAGATCC.1  AACTACCTCAATCG.1  AACTACCTCTAGCA.1 \n##                 0         CD16 Mono                 2                 9 \n##  AACTCACTCCCTAC.1  AACTCACTGAGGGT.1  AACTCACTTATCGG.1  AACTCACTTGAGGG.1 \n##                 8                 7                 1                 2 \n##  AACTCGGACCCAAA.1  AACTCGGACTAGCA.1  AACTCGGATAAGGA.1  AACTCTTGGGCATT.1 \n##                 9                 0         CD16 Mono                 1 \n##  AACTCTTGGTCTTT.1  AACTCTTGTTGACG.1  AACTGTCTCGGAGA.1  AACTGTCTCTATGG.1 \n##                 0                 0                 0                 0 \n##  AACTGTCTGCTTAG.1  AACTGTCTGGACTT.1  AACTGTCTGGATCT.1  AACTGTCTTAAGCC.1 \n##         CD16 Mono                 3                 0                 9 \n##  AACTGTCTTGGTAC.1  AACTTGCTATGCTG.1  AACTTGCTCAACTG.1  AACTTGCTCACTGA.1 \n##                 1         CD16 Mono                 0                 3 \n##  AACTTGCTCCCACT.1  AACTTGCTGGGACA.1  AACTTGCTGGGATG.1  AACTTGCTTCTGGA.1 \n##                 1                 0         CD16 Mono                 0 \n##  AAGAACGAATTCGG.1 AAGAACGACCCAAA.11  AAGAACGACTACTT.1  AAGAACGACTTGTT.1 \n##                 5                 0                12                 2 \n##  AAGAACGATGTGCA.1  AAGAAGACGGGATG.1  AAGAAGACTCTACT.1  AAGAAGACTCTTCA.1 \n##                11                 3                 1                 1 \n##  AAGAAGACTGTAGC.1  AAGAAGACTTCCAT.1  AAGAATCTACTGTG.1  AAGAATCTATCGGT.1 \n##                 7                 0                 0                 3 \n##  AAGAATCTCGTACA.1  AAGAATCTCTGCTC.1  AAGAATCTGACGAG.1  AAGAATCTGAGCAG.1 \n##                 0                 0                 0                 2 \n##  AAGAATCTGGTTAC.1  AAGAATCTGTGCAT.1  AAGACAGAAAAACG.1  AAGACAGACGTACA.1 \n##                 5                 5                 6                 1 \n##  AAGACAGATTCGGA.1  AAGACAGATTGGCA.1  AAGAGATGAACAGA.1  AAGAGATGCAAAGA.1 \n##                 2                 0                 0                 0 \n##  AAGAGATGCCGATA.1  AAGAGATGTACGAC.1  AAGAGATGTGCAAC.1  AAGAGATGTTGCTT.1 \n##                 3                 0                 0                 9 \n##  AAGATGGAAGACTC.1  AAGATGGACGGTAT.1  AAGATGGAGTCAAC.1  AAGATTACACACCA.1 \n##                 1                 0                 2         CD16 Mono \n##  AAGATTACGAATCC.1  AAGATTACGCTATG.1  AAGATTACGGTTTG.1  AAGCAAGACCCTCA.1 \n##                 0                 1                 5                 0 \n##  AAGCAAGAGGTATC.1  AAGCAAGATTCACT.1  AAGCACTGAGGGTG.1  AAGCACTGCCGCTT.1 \n##                 2         CD16 Mono         CD16 Mono                 6 \n##  AAGCACTGGAATGA.1  AAGCACTGTTCGCC.1  AAGCCAACCCGCTT.1  AAGCCAACGCCATA.1 \n##                 0                 0                 2         CD16 Mono \n##  AAGCCAACGTGTCA.1  AAGCCAACTCTCCG.1  AAGCCAACTGACCA.1  AAGCCATGGTCACA.1 \n##                 1                 0                 8                 7 \n##  AAGCCATGGTCTTT.1  AAGCCATGTCCTCG.1  AAGCCATGTCGTTT.1  AAGCCATGTGACTG.1 \n##                 8                 6                 1                 6 \n##  AAGCCATGTTCGCC.1  AAGCCTGAAACGTC.1  AAGCCTGAAGCTCA.1  AAGCGACTAGTCAC.1 \n##                 1                 1                 0                10 \n##  AAGCGACTCCACAA.1  AAGCGACTGCAGTT.1  AAGCGACTGTACAC.1  AAGCGACTTAAAGG.1 \n##                 1                 1                 0                 0 \n##  AAGCGTACTACAGC.1  AAGCGTACTCTGGA.1  AAGCGTACTGTCAG.1  AAGGCTACAAGGGC.1 \n##                 0                 1                 2                 3 \n##  AAGGCTACATCAGC.1  AAGGCTACCTACCC.1  AAGGCTACGAAAGT.1  AAGGCTACTGCTGA.1 \n##                 7                 0                 1                 3 \n##  AAGGCTACTGTCAG.1  AAGGCTTGCAAGCT.1  AAGGCTTGCCCAAA.1  AAGGCTTGGAGAGC.1 \n##                 9                 6                 2                10 \n##  AAGGCTTGGCGTAT.1  AAGGCTTGGCTCCT.1  AAGGTCACAGCCTA.1  AAGGTCACCAAGCT.1 \n##                 1                 1                 5                 2 \n##  AAGGTCACCTTGTT.1  AAGGTCACGTCGAT.1  AAGGTCACTACTGG.1  AAGGTCTGCAGAGG.1 \n##                 1                 1                 2                 5 \n##  AAGGTCTGCTCAGA.1  AAGGTCTGCTCTAT.1  AAGGTCTGGACAGG.1  AAGGTCTGTTCAGG.1 \n##                 0                 0         CD16 Mono                 0 \n##  AAGGTGCTAAGGGC.1  AAGGTGCTAATCGC.1  AAGGTGCTCTGATG.1  AAGGTGCTGGTTCA.1 \n##                 3                 1                 0                 3 \n##  AAGGTGCTGTCTTT.1  AAGGTGCTTCCGAA.1  AAGGTGCTTGGATC.1  AAGGTGCTTTCACT.1 \n##                 0                 0                 1                 2 \n##  AAGTAACTCTCTCG.1  AAGTAACTTACGAC.1  AAGTAGGACAGGAG.1  AAGTAGGACTAGCA.1 \n##                 2                 1                 0                 1 \n##  AAGTAGGATCGCAA.1  AAGTAGGATTGAGC.1  AAGTATACCTAGAC.1  AAGTATACTACAGC.1 \n##         CD16 Mono                 1                 0                 5 \n##  AAGTATACTCTAGG.1  AAGTATACTTCTCA.1  AAGTCCGAAATGCC.1  AAGTCCGAATCGGT.1 \n##                 0                 0                 1         CD16 Mono \n##  AAGTCCGACCTTCG.1  AAGTCCGACTCTTA.1  AAGTCCGAGGTAAA.1  AAGTCTCTCGAACT.1 \n##         CD16 Mono                 0                 5                 1 \n##  AAGTCTCTTCATTC.1  AAGTCTCTTTGCTT.1  AAGTGCACAACGAA.1  AAGTGCACAAGCAA.1 \n##                 6                 3                 1                 1 \n##  AAGTGCACGTTAGC.1  AAGTGCACTGCCAA.1  AAGTGGCTGTCTAG.1  AAGTTATGACACTG.1 \n##                 1                 0                 0                 0 \n##  AAGTTATGGAACTC.1  AAGTTATGTACGCA.1  AAGTTATGTTCACT.1  AAGTTATGTTTCGT.1 \n##                 0                 5                 2                 0 \n##  AAGTTCCTAAACAG.1  AAGTTCCTAACGAA.1  AAGTTCCTAGCCTA.1  AAGTTCCTCCCGTT.1 \n##                 1                 8                 5                 3 \n##  AAGTTCCTGAAACA.1  AAGTTCCTGACGAG.1 AAGTTCCTGGTGGA.11  AAGTTCCTGTATCG.1 \n##                 0                 7                 7                 3 \n##  AAGTTCCTGTTCGA.1  AAGTTCCTTGCTCC.1  AAGTTCCTTTCCCG.1  AATAACACATACCG.1 \n##                 1                 2                 1                 7 \n##  AATAACACTCCGTC.1  AATAACACTGCTGA.1  AATAACACTGGTCA.1  AATAAGCTAGAGGC.1 \n##                 5                 2                 9                 1 \n##  AATAAGCTTGTAGC.1  AATAAGCTTGTGCA.1  AATAAGCTTTCCGC.1  AATACCCTACCTCC.1 \n##                 0                 0                 9                 1 \n## AATACCCTCGTGAT.11 AATACTGACCTGTC.11  AATACTGACTGGTA.1  AATACTGAGGACTT.1 \n##                 0                 2                 5                 1 \n## AATACTGATCACGA.11  AATAGGGAACCCAA.1  AATAGGGAACTACG.1  AATAGGGAGTCCTC.1 \n##         CD16 Mono         CD16 Mono                 1                11 \n##  AATAGGGATCAGGT.1  AATAGGGATTAGGC.1  AATAGGGATTCTCA.1  AATAGGGATTCTGT.1 \n##                 1         CD16 Mono                 0                 5 \n##  AATATCGAATGTCG.1  AATATCGACACCAA.1  AATATCGACTCTCG.1  AATATCGACTTTAC.1 \n##                 0                 0                 3                 8 \n## AATATCGAGAGGCA.11  AATATCGAGCGTAT.1  AATATCGAGTCGAT.1  AATCAAACCAGGAG.1 \n##                 2                 0         CD16 Mono                 0 \n##  AATCAAACTGATGC.1  AATCAAACTGGTCA.1  AATCAAACTGTCTT.1  AATCAAACTTAGGC.1 \n##                 2                 1                 3                 8 \n##  AATCCGGAAGCAAA.1  AATCCGGAAGTGCT.1  AATCCGGACTCGCT.1  AATCCGGATCGTTT.1 \n##                 0                 0         CD16 Mono                 1 \n##  AATCCGGATCTCTA.1  AATCCGGATGACCA.1  AATCCTACACGTGT.1  AATCCTACCGCCTT.1 \n##                 0                 2                 1                 0 \n##  AATCCTACCTCCAC.1  AATCCTACGAATCC.1  AATCCTACGGTTTG.1  AATCCTACTCACGA.1 \n##                 7                 8                 0                 1 \n##  AATCCTACTCGCCT.1  AATCCTTGATGTCG.1 AATCCTTGCATGGT.11  AATCCTTGCTGGAT.1 \n##                 6                 0                 0                 0 \n##  AATCCTTGGTCGTA.1  AATCCTTGTGGATC.1  AATCCTTGTGGTTG.1  AATCGGTGACCCAA.1 \n##                 1                 1                 0                 1 \n##  AATCGGTGCGAACT.1  AATCGGTGCGTAGT.1  AATCGGTGCTAAGC.1  AATCGGTGTTGAGC.1 \n##                 0                 0                 3                 0 \n##  AATCTAGAACACGT.1  AATCTAGAATAAGG.1  AATCTAGACGACTA.1  AATCTAGAGCGTAT.1 \n##                10                 6                 0                 0 \n##  AATCTAGATATCGG.1  AATCTAGATCTTTG.1  AATCTCACAAGAGT.1  AATCTCACGCTCCT.1 \n##                 0                 3                 3                 5 \n##  AATCTCTGAGAGGC.1  AATCTCTGAGCCTA.1  AATCTCTGCAAAGA.1  AATCTCTGCCCAAA.1 \n##                 2                 8         CD16 Mono         CD16 Mono \n##  AATCTCTGCGACAT.1  AATCTCTGCGTCTC.1  AATCTCTGCTATTC.1  AATCTCTGGAACCT.1 \n##                 5                 0                 0                 0 \n##  AATCTCTGGTCTGA.1  AATGAGGAAGGTCT.1  AATGAGGACTATTC.1  AATGAGGACTCAGA.1 \n##                 1                 1                 1                 5 \n##  AATGAGGAGTATCG.1  AATGAGGATGCCAA.1 AATGAGGATGTAGC.11  AATGATACGTTTCT.1 \n##                 0                 0         CD16 Mono                 3 \n##  AATGATACTTGAGC.1  AATGCGTGCTGTGA.1  AATGCGTGTACAGC.1  AATGCGTGTCCAAG.1 \n##                 2                 1         CD16 Mono                 2 \n##  AATGCGTGTGTTCT.1  AATGGAGAGCAGTT.1  AATGGAGAGGCAAG.1  AATGGCTGAACTGC.1 \n##                 1                 2                 2                 0 \n##  AATGGCTGCTGGTA.1  AATGGCTGTCAGAC.1  AATGGCTGTGGTCA.1  AATGTAACAAACAG.1 \n##                 2                 8                 0                 1 \n##  AATGTAACCGTGTA.1  AATGTAACCTGTTT.1  AATGTAACGTCATG.1  AATGTAACTTCGTT.1 \n##                 2                 2                 3                 8 \n##  AATGTAACTTGGCA.1 AATGTCCTACGTTG.11  AATGTCCTAGTACC.1  AATGTCCTATTCTC.1 \n##                 0                 0                 0                 0 \n##  AATGTCCTCCGAAT.1  AATGTCCTCGAACT.1 AATGTCCTGTACGT.11  AATGTCCTTGGGAG.1 \n##                 2                 2                 0                 0 \n##  AATGTTGAAACCGT.1  AATGTTGAAGGGTG.1  AATGTTGACGCAAT.1  AATTACGAAAGAAC.1 \n##                 7                 0                 0                 1 \n##  AATTACGACCTTTA.1  AATTACGACTGGAT.1  AATTACGAGAATGA.1  AATTCCTGAAGGTA.1 \n##                 1                 0                 2                 0 \n##  AATTCCTGACACAC.1  AATTCCTGCATTTC.1  AATTCCTGGTACAC.1  AATTGATGCGTTAG.1 \n##                 2                11                 1                 0 \n##  AATTGATGCTCATT.1  AATTGATGGGTCTA.1  AATTGATGTCAGAC.1  AATTGTGACATCAG.1 \n##         CD16 Mono                 1                 3                 0 \n##  AATTGTGACTTCTA.1  AATTGTGATGTGAC.1  AATTGTGATTTCGT.1  ACAAAGGAAGCACT.1 \n##                 2         CD16 Mono                 2                 3 \n##  ACAAAGGAGACTAC.1  ACAAAGGAGTACGT.1  ACAAAGGATCAGTG.1  ACAAAGGATGGGAG.1 \n##                 7                 7         CD16 Mono         CD16 Mono \n##  ACAAATTGAGACTC.1  ACAAATTGCTGAAC.1  ACAAATTGGTTGTG.1 ACAAATTGTAGAAG.11 \n##                 5                 7                 0                 1 \n##  ACAACCGACAAAGA.1  ACAACCGAGGTGGA.1  ACAACCGATGTCAG.1  ACAAGAGAAGAGGC.1 \n##                 2         CD16 Mono                 3                 2 \n##  ACAAGAGACGCATA.1  ACAAGAGACTAGCA.1  ACAAGAGAGTTGAC.1  ACAAGAGATAGAAG.1 \n##                 0                 3                 0                 8 \n##  ACAAGAGATCTTCA.1  ACAAGAGATTGTGG.1  ACAAGCACATTGGC.1  ACAAGCACCGCAAT.1 \n##                 3                 8                 1                 1 \n##  ACAAGCACCTTCTA.1  ACAAGCACTACGCA.1  ACAATAACATTCCT.1  ACAATAACCAGCTA.1 \n##         CD16 Mono                 7         CD16 Mono                 0 \n##  ACAATAACCCTGAA.1  ACAATAACTCGATG.1  ACAATCCTATCAGC.1  ACAATCCTATTCGG.1 \n##                 1                 1                 0                 2 \n##  ACAATCCTCCTCCA.1  ACAATCCTCTCGCT.1  ACAATCCTGACAGG.1  ACAATCCTGTGTCA.1 \n##                 1                 0         CD16 Mono                12 \n##  ACAATCCTTAAGCC.1  ACAATCCTTGGCAT.1  ACAATTGAAAAGCA.1  ACAATTGAAAGGCG.1 \n##                 0                 1                 5                 2 \n##  ACAATTGAACGGAG.1  ACAATTGAAGATGA.1  ACAATTGACATTCT.1  ACAATTGAGAATAG.1 \n##                 0                 1                 0                 5 \n##  ACAATTGAGAGGTG.1  ACAATTGATTGTCT.1  ACACAGACACGGTT.1  ACACAGACATGTGC.1 \n##                 1                 5                 0                 2 \n##  ACACAGACCGTTGA.1  ACACAGACTTCTAC.1  ACACAGACTTGACG.1  ACACAGACTTGCGA.1 \n##                 7                 1                 1                 0 \n##  ACACATCTACACCA.1 ACACATCTCGCCTT.11  ACACCAGAAAGGCG.1  ACACCAGAAATCGC.1 \n##                 0                11                 3                 0 \n##  ACACCAGAATGCTG.1  ACACCAGAGACGGA.1  ACACCAGAGATGAA.1  ACACCAGAGCGTTA.1 \n##         CD16 Mono                 2                 1                 5 \n##  ACACCAGAGTAAAG.1  ACACCAGATGACCA.1  ACACCAGATTCGTT.1  ACACCCTGACGTGT.1 \n##                 1                 1                 0                 0 \n##  ACACCCTGGTAAAG.1  ACACCCTGGTTGAC.1  ACACCCTGTCAGAC.1  ACACCCTGTCCAGA.1 \n##                 2         CD16 Mono                 3                11 \n##  ACACCCTGTTGGCA.1  ACACGAACCCTGAA.1  ACACGAACCTCTAT.1  ACACGAACGTCTAG.1 \n##                 3                 1                 5                 1 \n##  ACACGAACGTTGAC.1  ACACGAACTTGTCT.1  ACACGATGAAAAGC.1  ACACGATGAAGCCT.1 \n##                 0                 6                 7                 0 \n##  ACACGATGACCACA.1  ACACGATGACCTTT.1  ACACGATGACTTTC.1  ACACGATGCTGGAT.1 \n##                 2         CD16 Mono                 8                 0 \n##  ACACGATGGGTCAT.1  ACACGATGTTCAGG.1  ACACGTGAGAATCC.1  ACACGTGAGCTTAG.1 \n##                 2                 1                 5                 0 \n##  ACACGTGAGTATGC.1  ACACGTGATCCCAC.1  ACACGTGATCCCGT.1  ACACGTGATGAACC.1 \n##                 0                 0                 6                 8 \n##  ACACGTGATGGTCA.1  ACAGACACACGGAG.1  ACAGACACCGAGAG.1 ACAGACACCTAAGC.11 \n##                 0                 0                 0                 0 \n##  ACAGACACGGTAAA.1  ACAGACACTCAGGT.1  ACAGACACTCTTAC.1  ACAGCAACCATGGT.1 \n##                 5                 0                 3                 0 \n##  ACAGCAACGAACTC.1  ACAGCAACGAGACG.1  ACAGCAACTATGCG.1  ACAGCAACTGAGGG.1 \n##                 1                 1                 0                 2 \n##  ACAGGTACATGACC.1  ACAGGTACCGAGTT.1  ACAGGTACCGTGTA.1 ACAGGTACGATGAA.11 \n##                 0                 1                 0                 5 \n##  ACAGGTACGCCCTT.1  ACAGGTACGGACTT.1  ACAGGTACTGCTCC.1  ACAGTCGACATGGT.1 \n##                 0         CD16 Mono                 0                 0 \n##  ACAGTCGAGAGGAC.1  ACAGTCGATTCGGA.1  ACAGTGACATGTGC.1  ACAGTGACCACCAA.1 \n##         CD16 Mono                 0                 6                 6 \n##  ACAGTGACCCACCT.1  ACAGTGACGAGGAC.1  ACAGTGACGGTACT.1  ACAGTGACTGCGTA.1 \n##                 3                 3                 9                 1 \n##  ACAGTGACTGTCCC.1  ACAGTGTGAAGATG.1  ACAGTGTGAAGTGA.1  ACAGTGTGACGGGA.1 \n##                 1                 0                 2                 1 \n##  ACAGTGTGAGATGA.1  ACAGTGTGCCCAAA.1  ACAGTGTGGCCTTC.1  ACAGTGTGGTTTCT.1 \n##                 0                 0                10                11 \n##  ACAGTGTGTGCTGA.1  ACAGTGTGTGGATC.1  ACAGTTCTCTGATG.1  ACAGTTCTCTTAGG.1 \n##                 3                 0                 1                 2 \n##  ACATACCTGTTGAC.1  ACATCACTCAGTCA.1  ACATCACTCTGTTT.1  ACATCACTGGAGGT.1 \n##                 9                 2                 0                 2 \n##  ACATCACTGGTGGA.1  ACATCACTGTTTCT.1  ACATGGTGACCCTC.1  ACATGGTGACGCAT.1 \n##                 1                 0                 0                 5 \n##  ACATGGTGACGGAG.1  ACATGGTGCCTATT.1  ACATGGTGCGTTAG.1  ACATGGTGCTCCCA.1 \n##                 3                 0                 1                 1 \n##  ACATGGTGCTGGTA.1  ACATGGTGGGTATC.1  ACATGGTGTGCGTA.1  ACATTCTGCCCTAC.1 \n##                 0                 5                 1                 1 \n##  ACATTCTGCGAATC.1  ACATTCTGCTACTT.1  ACATTCTGGTAGCT.1  ACCAACGAACTGTG.1 \n##                 6                 2                 1                 0 \n##  ACCAACGACCACAA.1  ACCAACGATTGAGC.1  ACCACAGAACGTGT.1  ACCACCTGCGATAC.1 \n##                 0                 5                 9                 5 \n##  ACCACCTGCTTCTA.1  ACCACCTGTCTATC.1  ACCACGCTGACGGA.1  ACCACGCTTCCTCG.1 \n##         CD16 Mono                 1                 0         CD16 Mono \n##  ACCACGCTTGGATC.1  ACCAGCCTCTTATC.1  ACCAGCCTTCCCAC.1  ACCAGCCTTTATCC.1 \n##                 1                 6                 0                 7 \n##  ACCAGCCTTTGGCA.1  ACCAGTGAAATGCC.1  ACCAGTGAGACGTT.1  ACCATTACATGGTC.1 \n##                 3                 0                 3                 0 \n##  ACCATTACGCGGAA.1  ACCATTTGCCGCTT.1  ACCATTTGCTCCCA.1  ACCATTTGTTCCAT.1 \n##                 1                 5                 1         CD16 Mono \n##  ACCATTTGTTGACG.1  ACCCAAGAAGCACT.1  ACCCAAGAGAAACA.1  ACCCAAGAGAAGGC.1 \n##                 9         CD16 Mono                 0                 0 \n##  ACCCAAGAGCTAAC.1  ACCCACTGACAGTC.1  ACCCACTGACGTTG.1  ACCCACTGGGAAAT.1 \n##                 1                 7                 1                 1 \n##  ACCCACTGGGTTAC.1  ACCCACTGTAAGCC.1  ACCCACTGTAAGGA.1  ACCCACTGTGGAGG.1 \n##                 7                 0                 3                 1 \n##  ACCCAGCTAGTCAC.1  ACCCAGCTAGTCTG.1  ACCCGTACAAAGTG.1  ACCCGTACAGCGGA.1 \n##                10                 3                 1                 2 \n## ACCCGTACAGCGTT.11  ACCCGTACCCTGAA.1  ACCCGTACCGTGTA.1  ACCCGTACGAGCTT.1 \n##                 1                 1                 0                 0 \n##  ACCCGTACGTCTAG.1  ACCCGTACTAAAGG.1  ACCCGTTGATCTTC.1  ACCCGTTGCATTTC.1 \n##                 0                 1                10                 7 \n##  ACCCGTTGGAGAGC.1  ACCCGTTGGCGTAT.1  ACCCGTTGTGACAC.1  ACCCTCGACGAGAG.1 \n##                 1                 1                10                 2 \n##  ACCCTCGACGATAC.1  ACCCTCGACGTAGT.1  ACCCTCGAGGTACT.1  ACCCTCGAGTATGC.1 \n##                 1                 0                 6                 2 \n##  ACCCTCGAGTCTAG.1  ACCCTCGATGTGCA.1  ACCCTCGATTCGCC.1  ACCGAAACATTGGC.1 \n##         CD16 Mono                 0                 1                 6 \n##  ACCGAAACTACTTC.1  ACCGCGGAAAGATG.1  ACCGCGGAAAGTGA.1  ACCGCGGACTGATG.1 \n##         CD16 Mono                 6                10                12 \n##  ACCGCGGATGGTAC.1  ACCGTGCTTTGCTT.1  ACCTATTGAATGCC.1  ACCTATTGACCGAT.1 \n##                 0                 1                 1                 2 \n##  ACCTATTGATTCTC.1  ACCTATTGGAAGGC.1  ACCTATTGGCGAGA.1  ACCTATTGGTCGAT.1 \n##                 0         CD16 Mono                 1                 0 \n##  ACCTATTGTTCACT.1  ACCTCCGAACTGTG.1  ACCTCCGAAGGAGC.1  ACCTCCGAATTGGC.1 \n##                 0                 1                 3                 2 \n## ACCTCCGACACTCC.11  ACCTCCGACCTTAT.1  ACCTCCGATGGTTG.1  ACCTCCGATTCATC.1 \n##                 0                 8                 0                 5 \n##  ACCTCGTGCAAGCT.1  ACCTCGTGCATACG.1  ACCTCGTGTATCTC.1  ACCTGAGAAAAGTG.1 \n##                 5                 0                 2                 1 \n##  ACCTGAGAACACGT.1  ACCTGAGAACGTTG.1  ACCTGAGAGTCGAT.1  ACCTGAGATCCGTC.1 \n##                 1                 0                 1         CD16 Mono \n##  ACCTGAGATCCTTA.1 ACCTGAGATGCTAG.11  ACCTGAGATGGTTG.1  ACCTGGCTCGTAAC.1 \n##                 1         CD16 Mono                 6                 0 \n##  ACCTGGCTGACGTT.1  ACCTTTGAAAGCCT.1  ACCTTTGACGTTGA.1  ACCTTTGATCGCAA.1 \n##                 7                 1                 9                 0 \n##  ACCTTTGATGCATG.1  ACCTTTGATGGATC.1  ACCTTTGATTCTTG.1  ACGAACACTAGACC.1 \n##                 1                 8                 0                 0 \n##  ACGAACTGCAACCA.1  ACGAACTGCTACGA.1  ACGAACTGGCAAGG.1  ACGAACTGGCTAAC.1 \n##                 2                 0                 6                 1 \n##  ACGAACTGGTATGC.1  ACGAACTGTATCTC.1  ACGAACTGTCCAGA.1  ACGAAGCTCTTGGA.1 \n##                 2                 0         CD16 Mono                 6 \n##  ACGAAGCTTCTACT.1  ACGACAACTAAGGA.1  ACGACAACTGGTCA.1  ACGACCCTAGATCC.1 \n##                 1                 7                 1                 5 \n##  ACGACCCTAGCACT.1  ACGACCCTATGCTG.1  ACGACCCTCAGTCA.1  ACGACCCTCTCTCG.1 \n##                 5                 0         CD16 Mono                 1 \n##  ACGACCCTCTGAGT.1  ACGACCCTCTGTCC.1  ACGACCCTGGTAGG.1  ACGAGGGACGTTGA.1 \n##                 0                 7                 2                 5 \n##  ACGAGGGAGAATCC.1  ACGAGGGAGGGAGT.1  ACGAGGGATAGTCG.1  ACGAGTACCAGCTA.1 \n##                 8                 1                 0                 1 \n##  ACGAGTACCCCGTT.1  ACGAGTACCTCAAG.1  ACGAGTACCTCGAA.1 ACGAGTACTATGGC.11 \n##                 3                 3                 1                 9 \n##  ACGAGTACTCGATG.1  ACGAGTACTGAGGG.1  ACGATCGACATTTC.1  ACGATCGACGGTAT.1 \n##                 0                 2                 0                 3 \n##  ACGATCGAGGAACG.1  ACGATCGAGTACAC.1  ACGATCGATCTAGG.1  ACGATGACATCTCT.1 \n##                 1         CD16 Mono                 0                 1 \n##  ACGATGACGTTACG.1  ACGATGACTGAGGG.1  ACGATTCTCTATTC.1  ACGATTCTGATACC.1 \n##                 0                 8                 3                 0 \n##  ACGATTCTGTGTAC.1  ACGATTCTTCGACA.1  ACGATTCTTGCCAA.1  ACGCAATGACGGTT.1 \n##                 9                 0                 0         CD16 Mono \n##  ACGCAATGGCGTAT.1  ACGCACCTACCTGA.1  ACGCACCTATCGTG.1  ACGCACCTCAACTG.1 \n##                 1                 5                 0                 8 \n##  ACGCACCTGAACTC.1  ACGCACCTGACGTT.1  ACGCACCTGAGGAC.1  ACGCACCTGCATCA.1 \n##                 2                 1                 6         CD16 Mono \n##  ACGCACCTGGATTC.1  ACGCACCTTCTGGA.1  ACGCACCTTGGGAG.1  ACGCCACTACTAGC.1 \n##                 2                 1                 7                 1 \n##  ACGCCACTATGCCA.1  ACGCCACTCAACCA.1 ACGCCACTCAATCG.11  ACGCCACTCCCACT.1 \n##                 0                 0                 5                 5 \n##  ACGCCACTCCGAAT.1  ACGCCACTCTTACT.1  ACGCCACTCTTCTA.1  ACGCCACTGAAGGC.1 \n##                 7                 0                 7                 0 \n##  ACGCCACTTCAAGC.1  ACGCCACTTGGATC.1  ACGCCACTTTTCAC.1  ACGCCGGAAACGGG.1 \n##                 0                 1                 1                 1 \n##  ACGCCGGAAGACTC.1  ACGCCGGACCGAAT.1  ACGCCGGACCTTTA.1  ACGCCGGAGCGGAA.1 \n##                 3                 0                 1                 9 \n##  ACGCCGGATATCGG.1  ACGCCTTGCCGTTC.1  ACGCCTTGCTTCTA.1  ACGCCTTGGTTAGC.1 \n##                 8                 7                 6         CD16 Mono \n##  ACGCCTTGTAAAGG.1  ACGCCTTGTCCCGT.1  ACGCCTTGTCGATG.1  ACGCCTTGTCTTTG.1 \n##                 0         CD16 Mono                 0                 2 \n##  ACGCGGTGACAGTC.1  ACGCGGTGAGCACT.1  ACGCGGTGAGCATC.1  ACGCGGTGGGAGTG.1 \n##                 7                 2                 9                 3 \n##  ACGCGGTGGTCGAT.1  ACGCGGTGTTCAGG.1  ACGCTCACAGTCTG.1  ACGCTCACCTTCTA.1 \n##                 7                 1                 1                 1 \n##  ACGCTCACGGTAGG.1  ACGCTCACGTAGCT.1  ACGCTCACTTGGCA.1  ACGCTGCTGACAGG.1 \n##                 0                 0                 2                 5 \n##  ACGCTGCTGGTACT.1  ACGCTGCTGTTGGT.1  ACGCTGCTTGAAGA.1  ACGGAACTAGACTC.1 \n##                 0                 9                 0                 1 \n##  ACGGAACTCATACG.1  ACGGAACTGAGGGT.1  ACGGAACTTCCCGT.1  ACGGAACTTGCTCC.1 \n##                 1                 2                 1         CD16 Mono \n##  ACGGAGGACTACCC.1  ACGGATTGCTCAAG.1  ACGGATTGCTGATG.1  ACGGATTGCTTCTA.1 \n##                 0                 5                 1                 0 \n##  ACGGATTGGAATAG.1  ACGGATTGGGCAAG.1  ACGGATTGTCGTTT.1  ACGGATTGTGTAGC.1 \n##                 3         CD16 Mono                 0                 1 \n##  ACGGCGTGCACACA.1  ACGGCGTGCTGACA.1  ACGGCGTGGAGCAG.1  ACGGCTCTATCGTG.1 \n##                 1                 0         CD16 Mono                 6 \n##  ACGGCTCTGAGGGT.1  ACGGCTCTTCTGGA.1  ACGGCTCTTGTCTT.1  ACGGGAGAAGCAAA.1 \n##                 1                 1                 1                 1 \n##  ACGGGAGACCTTGC.1  ACGGGAGAGCAAGG.1  ACGGGAGAGGTCAT.1  ACGGGAGATAAGGA.1 \n##                 0                 1                 7                 2 \n##  ACGGGAGATCCCAC.1  ACGGGAGATGAACC.1  ACGGTAACCAACTG.1  ACGGTAACCTCGCT.1 \n##                 0                 1                 0                 2 \n##  ACGGTAACGCGAGA.1  ACGGTAACGGGCAA.1  ACGGTATGCTGTTT.1  ACGGTATGGCTCCT.1 \n##                 0                11                 0                 6 \n##  ACGGTATGGTTGGT.1  ACGGTATGTTCACT.1  ACGGTCCTAAAACG.1  ACGGTCCTAGCTCA.1 \n##                 0                 1                 0                 7 \n##  ACGGTCCTCAGATC.1  ACGGTCCTCTCCCA.1  ACGGTCCTGAACTC.1 ACGGTCCTGCATAC.11 \n##                 7                 0                 0                 1 \n##  ACGGTCCTGTCTAG.1  ACGGTCCTTTGGTG.1  ACGTAGACATCTCT.1  ACGTAGACCAGTCA.1 \n##                 2                 3                 3                10 \n##  ACGTCAGAAAGGCG.1  ACGTCAGAACCTGA.1  ACGTCAGAATGACC.1  ACGTCAGAGCTTCC.1 \n##         CD16 Mono                 2                 0                 1 \n##  ACGTCAGATGAAGA.1  ACGTCCTGACTTTC.1  ACGTCCTGGGTGGA.1 ACGTCCTGTCATTC.11 \n##                 3                 1                 2                 0 \n##  ACGTCGCTAGTAGA.1  ACGTCGCTGGCGAA.1  ACGTCGCTTATGCG.1  ACGTCGCTTTGACG.1 \n##                 0                 2                 8                 1 \n##  ACGTGATGACCAAC.1  ACGTGATGTATCTC.1  ACGTGCCTAGCATC.1  ACGTGCCTCGCCTT.1 \n##                 9                11                 3                 1 \n##  ACGTGCCTCTAGTG.1  ACGTGCCTGGAGTG.1  ACGTGCCTGTACGT.1  ACGTTACTCACTCC.1 \n##                 1                 0                 1                 6 \n##  ACGTTACTGCGTTA.1  ACGTTACTGGACTT.1  ACGTTACTTATGCG.1  ACGTTACTTCTAGG.1 \n##                 7                 3                 0                 1 \n##  ACGTTACTTGTCAG.1  ACGTTGGAAAGGTA.1  ACGTTGGAACTGGT.1  ACGTTGGACTTGAG.1 \n##                 2                 1                 0                 0 \n##  ACGTTGGATCGTGA.1  ACGTTGGATGAACC.1  ACGTTGGATGGTTG.1  ACGTTTACGAGCAG.1 \n##                 0                 1                 0                 1 \n##  ACTAAAACATAAGG.1  ACTAAAACATCTTC.1  ACTAAAACCACTCC.1  ACTAAAACCACTGA.1 \n##                 3                 0                 1                 3 \n##  ACTAAAACTCATTC.1  ACTAAAACTTCGGA.1  ACTAAAACTTGGCA.1  ACTACGGAGAGCTT.1 \n##                 0                 3                 9                 0 \n##  ACTACGGATTTACC.1  ACTACTACAGCGGA.1  ACTACTACAGTCAC.1  ACTACTACCTAAGC.1 \n##                 1                 0                10                 1 \n##  ACTACTACGCTCCT.1  ACTAGGTGCAGGAG.1  ACTAGGTGCCGCTT.1  ACTAGGTGCTCAGA.1 \n##                10                 0                 2                 2 \n##  ACTAGGTGGGCATT.1  ACTAGGTGTGCTTT.1  ACTATCACAACGTC.1  ACTATCACGCCAAT.1 \n##                 1                 1                 9                 1 \n##  ACTATCACTGAGAA.1  ACTCAGGAAGATCC.1  ACTCAGGAAGATGA.1  ACTCAGGACTATTC.1 \n##                 3                 0                 2                 9 \n##  ACTCAGGATCTAGG.1  ACTCCCGACTTCGC.1  ACTCCCGAGCTCCT.1  ACTCCCGATACGAC.1 \n##                 0                 1                 5                 1 \n##  ACTCCTCTAGCACT.1  ACTCCTCTAGGGTG.1  ACTCCTCTCAATCG.1  ACTCCTCTCCCTTG.1 \n##                 0                 5                 1                 1 \n##  ACTCCTCTCTGTAG.1  ACTCCTCTGTAAGA.1  ACTCCTCTGTGAGG.1  ACTCCTCTTGGTCA.1 \n##                10                 0                 1                 0 \n## ACTCGAGACTTGTT.11  ACTCGAGAGCCAAT.1  ACTCGAGAGTTTGG.1  ACTCGCACACCAAC.1 \n##                 1                 2                 2                 3 \n##  ACTCGCACAGCCAT.1  ACTCGCACATGCCA.1  ACTCGCACCTTAGG.1  ACTCGCACGGTATC.1 \n##                 2                 1         CD16 Mono                 2 \n##  ACTCGCACGTAGCT.1  ACTCGCACTGCACA.1  ACTCGCACTGTTCT.1 ACTCTATGAGATCC.11 \n##                 6                 0                 2                 1 \n##  ACTCTATGCCAAGT.1  ACTCTATGCCTTTA.1  ACTCTATGGGAAGC.1 ACTCTATGGTACGT.11 \n##                 1                 0                11                 0 \n##  ACTCTATGTGGTCA.1  ACTCTCCTAGCAAA.1  ACTCTCCTGGTAGG.1  ACTCTCCTTGAAGA.1 \n##                 0                 0         CD16 Mono                 0 \n##  ACTCTCCTTGCTTT.1  ACTCTCCTTTGTGG.1  ACTGAGACAACGTC.1  ACTGAGACCCACCT.1 \n##                 2                 3                 0                 9 \n##  ACTGAGACGCGATT.1  ACTGAGACGGAACG.1  ACTGAGACGTGTAC.1  ACTGAGACTCAGGT.1 \n##                 2                 3                 0                 0 \n##  ACTGCCACGTCATG.1  ACTGCCACTCAGAC.1  ACTGCCTGACTGTG.1  ACTGCCTGCCGTTC.1 \n##                 2                 1                 0                 6 \n##  ACTGCCTGCTGACA.1  ACTGCCTGGGCAAG.1  ACTGCCTGGTGCTA.1  ACTGCCTGTGGAGG.1 \n##                 1                 5                 1                 1 \n##  ACTGGCCTAGAATG.1  ACTGGCCTAGCATC.1  ACTGGCCTCACTAG.1  ACTGGCCTCTACTT.1 \n##                 2                 3                 0                 0 \n##  ACTGGCCTCTTAGG.1  ACTGGCCTGGACAG.1  ACTGGCCTGGGATG.1  ACTGGCCTGTCTTT.1 \n##         CD16 Mono                 0         CD16 Mono                 1 \n##  ACTGGCCTTCTCCG.1  ACTGGCCTTGTGGT.1  ACTGTGGAACGGAG.1  ACTGTGGAACTGGT.1 \n##                 9                 6                 0                 0 \n##  ACTGTGGATGCTAG.1  ACTGTGGATGGTGT.1  ACTGTTACATGTCG.1  ACTGTTACCAAAGA.1 \n##                 1                 9                 2                 0 \n##  ACTGTTACCGTGTA.1  ACTGTTACGTATGC.1  ACTGTTACGTGCTA.1  ACTTAAGAAGCGTT.1 \n##                 1                 1                 0                 0 \n##  ACTTAAGAATTGGC.1  ACTTAAGATGCACA.1  ACTTAGCTTCGTGA.1  ACTTCAACACGGAG.1 \n##                 6                12                 5                 2 \n##  ACTTCAACAGAATG.1  ACTTCAACCCACAA.1  ACTTCAACCCCTTG.1  ACTTCAACCTACTT.1 \n##                 1                 2                 0                 1 \n##  ACTTCAACTTAGGC.1  ACTTCCCTCGGAGA.1 ACTTCCCTTTCTTG.11  ACTTCCCTTTTACC.1 \n##                 2                 0                 0                 0 \n##  ACTTCTGAACGTGT.1  ACTTCTGAGGTTTG.1  ACTTCTGATACGCA.1  ACTTCTGATTACCT.1 \n##                 3                 1                 0         CD16 Mono \n##  ACTTCTGATTCACT.1  ACTTGACTGAGCTT.1  ACTTGACTTGTGCA.1  ACTTGGGAAAAGTG.1 \n##                 0                 1                 2                 5 \n##  ACTTGGGACAAAGA.1  ACTTGGGACCTCAC.1  ACTTGGGATGTGCA.1  ACTTGTACAGGCGA.1 \n##                 5                 7                 3                 7 \n##  ACTTGTACATCGGT.1  ACTTGTACCTATGG.1  ACTTGTACGTAAGA.1  ACTTGTACTAAGGA.1 \n##                 0                 6                 3                 0 \n##  ACTTGTACTACTTC.1  ACTTTGTGAAAAGC.1  ACTTTGTGATAAGG.1  ACTTTGTGATTTCC.1 \n##                 2                 1                 0                 2 \n##  ACTTTGTGCGTGAT.1  AGAAACGAACCTAG.1  AGAAAGTGAGTCAC.1  AGAAAGTGCAGAGG.1 \n##                 7                 2                 2                 3 \n##  AGAAAGTGGCAGTT.1  AGAAAGTGGTGTCA.1  AGAACAGAACGCAT.1  AGAACAGAGTGTAC.1 \n##                 0                 0                 7                 6 \n##  AGAACAGATTCTTG.1  AGAACGCTCCACAA.1  AGAACGCTGTTTCT.1  AGAACGCTTCGCAA.1 \n##                 5                 3                 0                 2 \n##  AGAAGATGCTTGCC.1  AGAATACTACTGTG.1  AGAATACTGGTAGG.1  AGAATACTTCCTGC.1 \n##                 3                 6                 2                 0 \n##  AGAATACTTTCCGC.1  AGAATACTTTTCGT.1  AGAATGGAACCCTC.1  AGAATGGAACTACG.1 \n##                 0                 9                 3                13 \n##  AGAATGGACTAAGC.1  AGAATTTGAAACAG.1  AGAATTTGCGTGAT.1  AGAATTTGCTGAGT.1 \n##                 2                 0                 3                 5 \n##  AGAATTTGGGATCT.1  AGAATTTGGGTGAG.1  AGAATTTGGTTCTT.1  AGAATTTGTGCACA.1 \n##                 7                 5                 0                 0 \n##  AGAATTTGTTGCAG.1  AGACACACACCTAG.1  AGACACACAGTCAC.1  AGACACACAGTGTC.1 \n##                 2                 2                 7         CD16 Mono \n##  AGACACACCACTTT.1  AGACACACCATTGG.1  AGACACACCTGATG.1  AGACACACCTGGAT.1 \n##                 3                 0                10                 1 \n##  AGACACACTATGCG.1  AGACACTGAAGCAA.1  AGACACTGAGTCGT.1  AGACACTGATTGGC.1 \n##                 1                 2                 2                 0 \n##  AGACACTGCCGAAT.1  AGACACTGTAACCG.1  AGACACTGTACAGC.1  AGACACTGTCTCTA.1 \n##                 1         CD16 Mono                 5                 0 \n##  AGACACTGTCTTAC.1  AGACACTGTCTTTG.1  AGACACTGTTAGGC.1  AGACACTGTTCACT.1 \n##                 3                 3                13                 0 \n##  AGACCTGAAAGCCT.1  AGACCTGACGGTAT.1  AGACCTGACTTAGG.1  AGACCTGATCGTAG.1 \n##                 1         CD16 Mono                 2                10 \n##  AGACGTACAGGCGA.1  AGACGTACCTCTTA.1  AGACGTACGAGATA.1  AGACGTACGAGGGT.1 \n##                 2                 6                 1                 8 \n##  AGACGTACGGCGAA.1  AGACGTACTAGAGA.1  AGACTCGACATTCT.1  AGACTCGACTACCC.1 \n##                 6                 2                 2                 3 \n##  AGACTCGAGGTACT.1  AGACTGACCCTCGT.1  AGACTGACTCCTAT.1  AGACTGACTCTCGC.1 \n##                 1                 0                10                 1 \n##  AGACTGACTTCTTG.1  AGACTTCTCCAACA.1  AGACTTCTGTGCTA.1  AGAGAAACATAAGG.1 \n##                 1                 1                 0         CD16 Mono \n##  AGAGAAACCATCAG.1  AGAGAAACCTGTAG.1  AGAGAAACGGAAGC.1  AGAGAAACTCTTCA.1 \n##                 1                 2                 2                 1 \n##  AGAGAAACTGATGC.1  AGAGAAACTTGAGC.1  AGAGAAACTTTCTG.1  AGAGAATGCTGTAG.1 \n##                 5                 5         CD16 Mono                 3 \n##  AGAGAATGGAGGTG.1  AGAGAATGGCTGTA.1  AGAGAATGGGGATG.1  AGAGATGAACCAGT.1 \n##                 1                 0                 0                 1 \n##  AGAGATGAACCTGA.1  AGAGATGAGTTGGT.1  AGAGATGATGGAAA.1  AGAGATGATGGTCA.1 \n##                 1                 5                 3                 6 \n##  AGAGATGATGTCGA.1  AGAGCGGACAACCA.1  AGAGCGGACCTCGT.1  AGAGCGGAGATAGA.1 \n##                 0                 3                 1                 2 \n##  AGAGCGGATGATGC.1  AGAGCTACCGATAC.1  AGAGCTACTCGCAA.1  AGAGCTACTCGTGA.1 \n##                 5                 0                 2                 9 \n##  AGAGGTCTACACGT.1  AGAGGTCTACGACT.1  AGAGGTCTGAAACA.1  AGAGGTCTGCGAGA.1 \n##                 1                 6                 0         CD16 Mono \n##  AGAGGTCTGTACCA.1  AGAGTCACAAGCAA.1  AGAGTCACACCTAG.1  AGAGTCACCGATAC.1 \n##         CD16 Mono                 1                 5                 1 \n##  AGAGTCACTGCTCC.1  AGAGTCTGACGTAC.1  AGAGTCTGCTCAAG.1  AGAGTGCTCGTGAT.1 \n##                 1         CD16 Mono                 0                 0 \n##  AGAGTGCTGCAGTT.1  AGAGTGCTGGCAAG.1  AGAGTGCTGGTAAA.1  AGAGTGCTGTTGAC.1 \n##                 3                 1                 2                 0 \n##  AGATATACACGCTA.1  AGATATACCGAATC.1  AGATATACGTTGGT.1  AGATATTGGCTCCT.1 \n##                 0                 1                 1                 0 \n##  AGATATTGGCTTAG.1  AGATATTGGGTATC.1  AGATATTGTGGAGG.1  AGATCGTGCCAAGT.1 \n##                 0                 1                 2                 1 \n##  AGATCGTGTTCCCG.1  AGATCTCTTGGTCA.1  AGATCTCTTTCGGA.1  AGATTAACCACCAA.1 \n##                 7                 1                 7                 9 \n##  AGATTAACCCTGTC.1  AGATTAACCGTAAC.1  AGATTAACCGTCTC.1  AGATTAACGACAGG.1 \n##                11                 7                 1                 5 \n##  AGATTAACGGAGTG.1  AGATTAACGGCAAG.1 AGATTAACGGTGTT.11  AGATTAACTATTCC.1 \n##                 0                 1                 2         CD16 Mono \n## AGATTAACTGAAGA.11  AGATTAACTTCACT.1  AGATTCCTAGTCTG.1  AGATTCCTGAATGA.1 \n##                 1                 0                 1                 0 \n##  AGATTCCTGGTAGG.1  AGATTCCTGTCTAG.1  AGATTCCTGTTGTG.1  AGATTCCTTTCTTG.1 \n##                 0                 1                 0                 0 \n##  AGCAAAGACTTTAC.1 AGCAACACCGAGAG.11  AGCAACACGACGGA.1  AGCAACACGATACC.1 \n##                 3                 1                 6                 8 \n##  AGCAACACGGACAG.1  AGCAACACGGACGA.1  AGCAACACGGTTAC.1  AGCAACACTGCCTC.1 \n##                 9         CD16 Mono                 0                 8 \n##  AGCAAGCTAAGGTA.1  AGCAAGCTAGCACT.1  AGCAAGCTCCCAAA.1  AGCAAGCTCGCAAT.1 \n##                 6                11                 2                 1 \n##  AGCAAGCTTGGTAC.1  AGCAAGCTTGGTCA.1  AGCAAGCTTGTGGT.1  AGCACAACCCGCTT.1 \n##                 3                 0                 0                 1 \n##  AGCACAACCGGAGA.1  AGCACAACGAACTC.1  AGCACTGAAGCCTA.1  AGCACTGAATAAGG.1 \n##                 2         CD16 Mono                 0                 0 \n##  AGCACTGAATGACC.1  AGCACTGAATGCCA.1  AGCACTGACCTTGC.1  AGCACTGATTATCC.1 \n##                 0                 1                 1         CD16 Mono \n##  AGCATCGAACTCAG.1  AGCATCGAGGGTGA.1  AGCATCGATGAGAA.1  AGCATCGATTCGCC.1 \n##                 0         CD16 Mono         CD16 Mono                 0 \n##  AGCATGACAGCTCA.1  AGCATGACGCTAAC.1  AGCATGACGTAAGA.1  AGCATGACTTACTC.1 \n##                 0                 1                 3                 1 \n##  AGCATTCTAAGTAG.1  AGCATTCTACGTGT.1  AGCATTCTAGTCAC.1  AGCATTCTGAGCTT.1 \n##                 2                 1                 5                 6 \n##  AGCATTCTTAGAAG.1  AGCCAATGAGTGCT.1  AGCCAATGCAGTCA.1  AGCCAATGCCTATT.1 \n##                 0                 0                 7                 0 \n##  AGCCAATGGTCTAG.1  AGCCAATGGTTCTT.1  AGCCAATGTCAGGT.1  AGCCAATGTGCTTT.1 \n##                 6                 1                 3                 1 \n##  AGCCAATGTTTGGG.1  AGCCACCTAGAATG.1  AGCCACCTCCCTAC.1  AGCCACCTTGAAGA.1 \n##         CD16 Mono                 1                 2                 0 \n##  AGCCACCTTGTAGC.1  AGCCACCTTGTTCT.1  AGCCGGACCGAATC.1  AGCCGGACCGTCTC.1 \n##                 3                 5                 1                 2 \n##  AGCCGGACCTCTCG.1  AGCCGGACTCCAGA.1  AGCCGGTGACGTGT.1  AGCCGGTGAGAGAT.1 \n##                 8                 3                 8                 0 \n##  AGCCGGTGAGAGGC.1  AGCCGGTGCCTTCG.1  AGCCGGTGCTACTT.1  AGCCGGTGCTGACA.1 \n##                 0                 2                 0                 9 \n##  AGCCGGTGGAATAG.1  AGCCGGTGTAGAAG.1  AGCCGTCTACAGTC.1  AGCCGTCTTGAGAA.1 \n##                 3                10                 1                 0 \n##  AGCCTCACAAAAGC.1  AGCCTCACACGACT.1  AGCCTCACACGTAC.1  AGCCTCACCCCACT.1 \n##                 0                 0                 6                 2 \n##  AGCCTCACCGCTAA.1  AGCCTCACCTCCAC.1  AGCCTCACGGTCAT.1  AGCCTCACGTCCTC.1 \n##                 1                 6                 3                 0 \n## AGCCTCACTAACCG.11  AGCCTCACTGAAGA.1 AGCCTCTGACTGGT.11  AGCCTCTGCCCAAA.1 \n##                 1                 2                 0                 0 \n##  AGCCTCTGTATCTC.1  AGCCTCTGTGTTCT.1  AGCCTCTGTTGCGA.1  AGCGAACTAAAACG.1 \n##                 2                10                 2                 8 \n##  AGCGAACTAATGCC.1  AGCGAACTCCATGA.1  AGCGAACTGAGCAG.1  AGCGAACTGCTACA.1 \n##                 0                11                 6                 7 \n##  AGCGAACTGCTGTA.1  AGCGAACTTATGCG.1  AGCGAACTTTCCAT.1  AGCGATACGGGCAA.1 \n##                 3                 0                 1                 1 \n##  AGCGATACTTGAGC.1  AGCGATTGAGCGTT.1  AGCGATTGTTTGTC.1  AGCGCCGAAAAGCA.1 \n##                 2                 3                 8                 1 \n##  AGCGCCGAGCAGAG.1  AGCGCCGATACTTC.1  AGCGCCGATGACCA.1  AGCGCTCTCATGAC.1 \n##                 1                 0                 7                 2 \n##  AGCGCTCTCTCTTA.1  AGCGCTCTGGCATT.1 AGCGCTCTGTATGC.11  AGCGCTCTGTGTTG.1 \n##                 1                 1         CD16 Mono                 1 \n##  AGCGCTCTTTAGGC.1  AGCGGCACCAACTG.1  AGCGGCACCTCGAA.1 AGCGGCACCTTAGG.11 \n##                 0                 2                 2                 0 \n##  AGCGGCACCTTCTA.1  AGCGGCACCTTGGA.1  AGCGGCACGGTTCA.1  AGCGGCACGTCTAG.1 \n##                 0                 1                 7         CD16 Mono \n##  AGCGGCTGAAGATG.1  AGCGGCTGACACTG.1  AGCGGCTGAGGTCT.1  AGCGGCTGCATGGT.1 \n##         CD16 Mono                10                 3                 1 \n##  AGCGGCTGCCTCGT.1  AGCGGCTGGTTGGT.1  AGCGGCTGTCATTC.1  AGCGGCTGTGTTCT.1 \n##                 1                 2                 1                10 \n##  AGCGGCTGTTGTGG.1  AGCGGGCTAACCTG.1  AGCGGGCTACGGAG.1  AGCGGGCTCACCAA.1 \n##                 1                 1                 9                 1 \n##  AGCGGGCTCCAAGT.1  AGCGGGCTCCTGTC.1  AGCGGGCTGTAGGG.1  AGCGGGCTTGTAGC.1 \n##                 1                 5                 1                 1 \n##  AGCGGGCTTTACCT.1  AGCGTAACAGATCC.1  AGCGTAACCGTAGT.1  AGCGTAACGCATCA.1 \n##                12                 3                 0                 0 \n##  AGCGTAACGGAGCA.1  AGCGTAACGTAAGA.1  AGCTCGCTCATGGT.1  AGCTCGCTGATAGA.1 \n##                 0                 0                 6                 1 \n##  AGCTGAACACACCA.1  AGCTGAACCTGACA.1  AGCTGAACGCATCA.1  AGCTGAACGGAACG.1 \n##                 2                 2                 0         CD16 Mono \n##  AGCTGAACTGTGCA.1  AGCTGCCTACACCA.1  AGCTGCCTACCGAT.1  AGCTGCCTCCTTGC.1 \n##         CD16 Mono                 3                 0                 1 \n##  AGCTGCCTGAATCC.1  AGCTGCCTGACAAA.1  AGCTGCCTGACAGG.1  AGCTGCCTTCGACA.1 \n##                 2                 7                 5                 1 \n##  AGCTGCCTTCGATG.1  AGCTGCCTTCTGGA.1  AGCTGTGACGACTA.1  AGCTGTGAGAGGGT.1 \n##                 7                 3                 7                 2 \n##  AGCTGTGAGCAGTT.1  AGCTTACTAATGCC.1  AGCTTACTAGCCAT.1  AGCTTACTCACACA.1 \n##                 2                 2                 0                 0 \n##  AGCTTACTGTCATG.1  AGCTTACTTCAGGT.1  AGCTTACTTCCGAA.1  AGCTTTACAGTGTC.1 \n##                 0                 1                 1                 1 \n##  AGCTTTACCTATGG.1  AGCTTTACCTCAGA.1  AGCTTTACTGCTGA.1  AGCTTTACTTTCTG.1 \n##                 1                 1                 6                 1 \n##  AGGAAATGCAACTG.1  AGGAAATGGAAACA.1  AGGAAATGGGTCTA.1  AGGAAATGGTTACG.1 \n##                 1                 0                 0                 6 \n##  AGGAAATGTGCTAG.1  AGGAACCTCCTAAG.1  AGGAACCTGAAAGT.1  AGGAATGAAAGATG.1 \n##                 3                 1                 3                 2 \n##  AGGAATGATCACGA.1  AGGAATGATGCCCT.1  AGGACACTACAGCT.1  AGGACACTCATGGT.1 \n##                 2                 8                 9                 1 \n##  AGGACACTGGAGCA.1  AGGACACTTGCATG.1  AGGACTTGAAGAAC.1  AGGACTTGACCAAC.1 \n##                 0                 1                13                 2 \n##  AGGACTTGAGTACC.1  AGGACTTGAGTGCT.1  AGGACTTGCTAGAC.1  AGGACTTGGGTTTG.1 \n##                 0                 2                 0                 7 \n##  AGGACTTGGTTCAG.1  AGGACTTGGTTGGT.1  AGGACTTGTCTCCG.1  AGGAGTCTACTGTG.1 \n##                 0                 0                 2                 1 \n##  AGGAGTCTCGTAAC.1  AGGAGTCTCGTCTC.1  AGGAGTCTGAGACG.1  AGGAGTCTGTTGTG.1 \n##                 1                 0                 2                 1 \n##  AGGAGTCTTGAGGG.1  AGGAGTCTTTACCT.1  AGGATAGACAACTG.1  AGGATAGACGACAT.1 \n##                 0                 9         CD16 Mono                 0 \n##  AGGATAGAGGACTT.1  AGGATGCTCTCAAG.1  AGGATGCTTATGCG.1  AGGATGCTTCCCAC.1 \n##                 9                 1         CD16 Mono                 3 \n##  AGGCAACTAGTCGT.1  AGGCAACTATTGGC.1  AGGCAACTTAAGGA.1  AGGCAACTTGCTAG.1 \n##                 0                 0         CD16 Mono                 1 \n##  AGGCAGGAAAAAGC.1  AGGCAGGAACGTGT.1  AGGCAGGAGCTTCC.1  AGGCAGGATCCAGA.1 \n##                 7                 0                 1                 3 \n##  AGGCCTCTACCATG.1  AGGCCTCTAGAATG.1  AGGCCTCTGACGTT.1  AGGCCTCTGTAGCT.1 \n##                 7         CD16 Mono                 0                 3 \n##  AGGCCTCTTCACCC.1  AGGCCTCTTGTGAC.1  AGGCCTCTTTGACG.1  AGGCTAACATAAGG.1 \n##                 5                 0                 1                 2 \n##  AGGCTAACGTACAC.1  AGGCTAACTGAAGA.1  AGGCTAACTGACAC.1  AGGGACGAACTAGC.1 \n##                 0                 2                 0                 0 \n##  AGGGACGACCTGTC.1  AGGGACGAGCCCTT.1  AGGGACGAGGGAGT.1  AGGGACGATCCGTC.1 \n##                 1                 3                 1                 7 \n##  AGGGACGATCTACT.1  AGGGAGTGCTTCTA.1  AGGGCCACACAGTC.1  AGGGCCACCCATGA.1 \n##                 3                 1                 6                 2 \n##  AGGGCCACCGGGAA.1  AGGGCCACTCCTGC.1  AGGGCCTGAAGGCG.1  AGGGCCTGCGCTAA.1 \n##                 2                 0                 0                 0 \n##  AGGGCCTGGACAGG.1  AGGGCCTGTCGTTT.1  AGGGCGCTATTTCC.1  AGGGCGCTCATTTC.1 \n##                 1                 3                 0                 0 \n##  AGGGCGCTTAGTCG.1  AGGGCGCTTATGGC.1  AGGGCGCTTGAAGA.1  AGGGCGCTTGCTTT.1 \n##                 2                 0                 5                 0 \n##  AGGGCGCTTTCTAC.1  AGGGTGGAATCTTC.1  AGGGTGGACACTTT.1  AGGGTGGAGGAAGC.1 \n##                 2                 1                 5         CD16 Mono \n##  AGGGTGGATGAGGG.1  AGGGTGGATTGGTG.1  AGGGTTTGACGGTT.1  AGGGTTTGACGTTG.1 \n##                 5         CD16 Mono                 0                 0 \n##  AGGGTTTGATGACC.1  AGGGTTTGGTAAGA.1  AGGGTTTGGTTGCA.1  AGGTACACAGGCGA.1 \n##         CD16 Mono         CD16 Mono                 2                 8 \n##  AGGTACACAGTCAC.1  AGGTACACCCAAGT.1 AGGTACACCGTGTA.11  AGGTACACGAGACG.1 \n##                 6                 1                 5                 0 \n##  AGGTACTGATGCTG.1  AGGTACTGCCCACT.1  AGGTACTGGAAAGT.1  AGGTACTGTTCCAT.1 \n##         CD16 Mono                 9                 6                 0 \n##  AGGTCATGCTTATC.1  AGGTCATGGGAACG.1  AGGTCATGTTTCAC.1  AGGTCTGACTTCTA.1 \n##                 0                 6                 5                 0 \n##  AGGTCTGATAGCGT.1  AGGTCTGATCTCCG.1  AGGTCTGATGCCTC.1  AGGTGGGAATGCCA.1 \n##                 3                 0                 3                 8 \n##  AGGTGTTGGTACGT.1  AGGTGTTGGTGTCA.1  AGGTGTTGGTTGTG.1  AGGTGTTGGTTTGG.1 \n##                 2                 1                 0                 8 \n##  AGGTGTTGTCTTCA.1  AGGTTCGAGTCTTT.1  AGGTTCGATTCACT.1  AGGTTGTGACTGGT.1 \n##                 0                 0                 2                 1 \n##  AGGTTGTGCAGTTG.1  AGGTTGTGCCTTGC.1  AGGTTGTGGTAGGG.1  AGGTTGTGTGGCAT.1 \n##                 2         CD16 Mono                 1                10 \n##  AGTAAGGAACACCA.1  AGTAAGGATCGATG.1  AGTAAGGATGAACC.1  AGTAATACATCGGT.1 \n##                 5                 1                 0                10 \n##  AGTAATACCTCTTA.1  AGTAATACCTGGTA.1  AGTAATACGCATCA.1  AGTAATACGGTCTA.1 \n##                 0                 1         CD16 Mono                 6 \n##  AGTAATACGTCTGA.1  AGTAATACTAGAGA.1  AGTAATACTAGCGT.1  AGTAATTGAGCGGA.1 \n##                 3                 6         CD16 Mono                 8 \n##  AGTAATTGCTAAGC.1  AGTAATTGCTGACA.1  AGTAATTGCTGATG.1  AGTAATTGGCGAAG.1 \n##                 5                 1                 1                 3 \n##  AGTAATTGGTTCTT.1  AGTAATTGTTGGCA.1  AGTACGTGCATCAG.1  AGTACGTGCCGTAA.1 \n##                 2                 5                 0                 0 \n##  AGTACGTGGATAGA.1  AGTACGTGGCTGAT.1  AGTACGTGTGTCAG.1  AGTACTCTACACAC.1 \n##                 1         CD16 Mono                 0                 3 \n##  AGTACTCTCCTATT.1  AGTACTCTGAGACG.1  AGTACTCTTCGCAA.1  AGTACTCTTCTTAC.1 \n##                 3                 1                 1                10 \n##  AGTAGAGAAAAGCA.1  AGTAGAGAAACGTC.1  AGTAGAGACTGAGT.1  AGTAGAGAGAGGGT.1 \n##                 0                 0                 1                 0 \n##  AGTAGAGAGTTTCT.1  AGTAGGCTCAGATC.1  AGTAGGCTCTTGAG.1  AGTAGGCTTACTTC.1 \n##                 6         CD16 Mono                 0                 9 \n##  AGTATAACGGCAAG.1  AGTATAACGTCACA.1  AGTATCCTACCGAT.1  AGTATCCTCTACGA.1 \n##                 2                 2                 0                 0 \n##  AGTATCCTCTTACT.1  AGTATCCTGCAGTT.1  AGTATCCTGCTATG.1  AGTATCCTGGGACA.1 \n##                 0                 2                 1                 2 \n##  AGTATCCTGGTGGA.1  AGTATCCTGGTTTG.1  AGTATCCTGTACAC.1  AGTATCCTTCGTTT.1 \n##                 1                 0                 2                 2 \n##  AGTATCCTTGGCAT.1  AGTCACGACTGGAT.1  AGTCACGAGCAGTT.1  AGTCAGACGGTAGG.1 \n##                 0                 0                 2                 6 \n## AGTCAGACTTACCT.11  AGTCCAGACCGATA.1  AGTCCAGACCTTTA.1  AGTCGAACAGAGTA.1 \n##                 0                 0                 2                 3 \n##  AGTCGAACCCATGA.1  AGTCGAACGGGTGA.1  AGTCGCCTCATGCA.1  AGTCGCCTCGGGAA.1 \n##                 0                 0         CD16 Mono                 2 \n##  AGTCGCCTGTAAGA.1  AGTCGCCTTGTGCA.1  AGTCTACTACACGT.1  AGTCTACTAGCAAA.1 \n##                 6                 0                 2                 3 \n##  AGTCTACTCTATGG.1  AGTCTACTTGTGCA.1  AGTCTTACACACCA.1  AGTCTTACCAACCA.1 \n##                 3                 5                 5                 0 \n##  AGTCTTACGATACC.1  AGTCTTACGTGCTA.1  AGTCTTACTGAGGG.1  AGTGAAGACACTCC.1 \n##                 9                 5                 5                 0 \n##  AGTGAAGACAGAGG.1  AGTGAAGACGAATC.1  AGTGAAGAGGTTCA.1  AGTGAAGAGTTACG.1 \n##                 1         CD16 Mono                 5                 2 \n##  AGTGACACGAACCT.1  AGTGACACGTACGT.1  AGTGACACTCGCCT.1  AGTGACACTGTCTT.1 \n##                 0                 2         CD16 Mono                 9 \n##  AGTGACTGAGTCGT.1  AGTGACTGATGTGC.1  AGTGACTGCACACA.1  AGTGACTGCACTCC.1 \n##                 1                 9                 0                 2 \n##  AGTGACTGTTCGTT.1  AGTGCAACAGATGA.1  AGTGCAACCACTTT.1  AGTGCAACCGGTAT.1 \n##                 5                 1                 3                 0 \n##  AGTGTGACACACAC.1  AGTGTGACCAGAGG.1  AGTGTGACCATGCA.1  AGTGTGACCGTTAG.1 \n##                 0                 1                 1                 0 \n##  AGTGTGACCTGTAG.1  AGTGTGACGCGAAG.1  AGTGTGACGCTACA.1  AGTGTGACGGAACG.1 \n##                 9                 1                 1                 1 \n##  AGTGTGACGGGCAA.1  AGTGTTCTAAGGTA.1  AGTGTTCTAGTGTC.1  AGTTAAACCCGTTC.1 \n##         CD16 Mono                 2                 1                 9 \n##  AGTTAAACCGCAAT.1  AGTTAAACCGTACA.1  AGTTAAACCTGAGT.1  AGTTAAACCTGTCC.1 \n##                 8                 6                 2                 1 \n##  AGTTAAACTGCCTC.1  AGTTATGACACTAG.1  AGTTATGACTACGA.1  AGTTATGAGCGTAT.1 \n##                 7                 9                 1                 2 \n##  AGTTATGATAGCGT.1  AGTTATGATGAAGA.1  AGTTATGATGAGCT.1  AGTTATGATTTACC.1 \n##                 6                 0                 5                 1 \n##  AGTTATGATTTCTG.1  AGTTCTACAGAAGT.1  AGTTCTACAGGTTC.1  AGTTCTACCAGGAG.1 \n##                 5                 1                 7                 2 \n##  AGTTCTACCTACCC.1  AGTTCTACGGGTGA.1  AGTTCTACGTACCA.1  AGTTCTACTAAGGA.1 \n##                 1                 1                 0                 6 \n##  AGTTCTACTGTCAG.1  AGTTCTTGCTGAGT.1  AGTTCTTGTCCGAA.1  AGTTGTCTACACCA.1 \n##                 0                 7                 9                 0 \n##  AGTTGTCTACACGT.1  AGTTGTCTATTCCT.1  AGTTGTCTCCTTTA.1  AGTTGTCTGGGATG.1 \n##                 0                 8                 1         CD16 Mono \n##  AGTTGTCTTACTGG.1  AGTTGTCTTCAAGC.1  AGTTTAGACCACCT.1  AGTTTCACCTGACA.1 \n##                 0                 1                 1         CD16 Mono \n##  AGTTTCACGACACT.1  AGTTTCACTGCTAG.1  AGTTTGCTCTATTC.1  AGTTTGCTGCTACA.1 \n##                 1                 0                 6                 2 \n##  AGTTTGCTGGGATG.1  AGTTTGCTGGTTCA.1  AGTTTGCTTCAAGC.1  AGTTTGCTTGAAGA.1 \n##                 2                 0                 0                 1 \n## AGTTTGCTTGTGGT.11  AGTTTGCTTTCTGT.1  AGTTTGCTTTGTCT.1  ATAAACACCGAGTT.1 \n##                 3                 0                 2                 0 \n## ATAAACACCTACGA.11  ATAAACACCTGTAG.1  ATAAACACGGAGCA.1  ATAAACACTTCGGA.1 \n##         CD16 Mono                 1                 3                 2 \n##  ATAACAACAGTCGT.1  ATAACAACCGAATC.1  ATAACAACGGATCT.1  ATAACAACTGTAGC.1 \n##                 0                 1                 3                 3 \n##  ATAACATGACTCAG.1  ATAACATGCTGATG.1  ATAACATGTTCTGT.1  ATAACCCTACGCAT.1 \n##                 1                 1                 2                11 \n##  ATAACCCTCCCGTT.1  ATAACCCTGAACCT.1  ATAACCCTTCACGA.1  ATAAGTACAAGTGA.1 \n##                 3                 2                 2                 0 \n##  ATAAGTACAGAACA.1  ATAAGTACCTCTCG.1  ATAAGTACTAGAGA.1  ATAAGTACTCAGTG.1 \n##                 2                 1         CD16 Mono                 9 \n##  ATAAGTACTGGGAG.1  ATAAGTTGCTCATT.1  ATAAGTTGGTGCTA.1  ATAATCGAAAGTAG.1 \n##                 0                 1                 6                 3 \n##  ATAATCGAGTCGAT.1  ATAATCGAGTTTGG.1  ATAATCGATCGATG.1  ATAATGACCTTGAG.1 \n##                 1                 1                 1                 6 \n##  ATAATGACGTGCAT.1  ATAATGACTATGCG.1  ATACAATGCACTTT.1  ATACAATGCTCCAC.1 \n##                 1                 3                 1                 1 \n##  ATACAATGCTGAGT.1  ATACAATGTCATTC.1  ATACAATGTTGCAG.1  ATACAATGTTGCTT.1 \n##                 0                 0                 1                 0 \n##  ATACACCTGTAAGA.1  ATACACCTTAAAGG.1  ATACACCTTTGCGA.1  ATACCACTACCATG.1 \n##                10                 3                 6                 3 \n##  ATACCACTACTAGC.1  ATACCACTCCAACA.1  ATACCACTGGTACT.1  ATACCGGACTTATC.1 \n##                 0                 0                 9                 1 \n##  ATACCGGAGAAGGC.1  ATACCGGAGAATGA.1  ATACCGGAGCCAAT.1  ATACCGGATCGCAA.1 \n##                 1                 2                 7                 1 \n##  ATACCGGATCTTCA.1  ATACCGGATTACTC.1  ATACCGGATTCGTT.1  ATACCTACAAGGGC.1 \n##                 2                 1                 3                 3 \n##  ATACCTACAGAGGC.1  ATACCTACGTAAGA.1  ATACCTACTGGAAA.1  ATACCTTGACACAC.1 \n##                 0                 0                 0                 2 \n##  ATACCTTGACCGAT.1  ATACCTTGTCTTTG.1  ATACCTTGTGGCAT.1  ATACGGACAGATCC.1 \n##                 1                 9                 5                 5 \n## ATACGGACCGTAGT.11  ATACGGACGAATCC.1  ATACGGACGAATGA.1  ATACGGACGTTGCA.1 \n##                 0                 0                 0                 1 \n##  ATACGTCTACTCAG.1  ATACGTCTTCGTAG.1  ATAGAACTACCTGA.1  ATAGAACTACTACG.1 \n##                 0                 5                 1                 1 \n##  ATAGAACTCGCCTT.1  ATAGAACTGCAAGG.1  ATAGAACTTGACTG.1  ATAGAACTTTGACG.1 \n##                 0                 2                 0                 0 \n##  ATAGATACAGAACA.1  ATAGATACATGCCA.1  ATAGATACCTGTCC.1  ATAGATACCTTCTA.1 \n##                 7                 1                 0                 0 \n##  ATAGATACGTTACG.1  ATAGATACGTTGTG.1 ATAGATACTGACTG.11 ATAGATTGAAACAG.11 \n##                 0                 5                 0                 3 \n##  ATAGATTGCCCTTG.1  ATAGATTGGGGAGT.1  ATAGATTGTACTGG.1  ATAGATTGTTCACT.1 \n##                 0                10                 2                 3 \n##  ATAGCCGACAGTTG.1  ATAGCCGACCCACT.1  ATAGCCGACTTGCC.1  ATAGCGTGAGAGAT.1 \n##         CD16 Mono                 2                 0                 0 \n##  ATAGCGTGAGGTTC.1  ATAGCGTGCTCGAA.1  ATAGCTCTACTCAG.1  ATAGGAGAACACGT.1 \n##                 0                 0                 0                 0 \n##  ATAGGAGAACCTGA.1  ATAGGAGACACACA.1  ATAGGAGAGCTATG.1  ATAGGAGATGTCCC.1 \n##                 6         CD16 Mono         CD16 Mono                 0 \n##  ATAGGAGATTGCTT.1  ATAGGCTGAGCTAC.1  ATAGGCTGGGAAGC.1  ATAGGCTGGTAAAG.1 \n##                 1                 0         CD16 Mono                 0 \n##  ATAGTCCTAAACGA.1  ATAGTCCTCAAAGA.1  ATAGTCCTCTGCAA.1  ATAGTCCTGCCATA.1 \n##                 0         CD16 Mono                 1         CD16 Mono \n##  ATAGTCCTTCGACA.1  ATAGTTGAAACGTC.1  ATAGTTGACAGCTA.1  ATAGTTGACCTCCA.1 \n##                 8                 2                 1                 1 \n##  ATAGTTGATCGTAG.1  ATATACGACCTACC.1  ATATACGAGTAGGG.1  ATATACGATGTTTC.1 \n##                 7                 0                 7                 5 \n##  ATATAGTGAGGCGA.1  ATATAGTGCAATCG.1  ATATAGTGGATGAA.1  ATATAGTGTGCTAG.1 \n##                 5                 1                 2                 9 \n##  ATATGAACAGGGTG.1  ATATGAACGAAACA.1  ATATGAACGGTGGA.1  ATATGAACTGGATC.1 \n##                 2                 1                 0         CD16 Mono \n##  ATATGCCTAAACGA.1  ATATGCCTAACGAA.1  ATATGCCTAGGTCT.1  ATATGCCTGCATAC.1 \n##                 1         CD16 Mono                 8                 2 \n##  ATATGCCTTCACCC.1  ATATGCCTTTTACC.1  ATCAAATGCAACTG.1  ATCAAATGGAATGA.1 \n##                 1                 0                 0                 2 \n##  ATCAAATGTTCTCA.1  ATCAACCTCGTTGA.1  ATCAACCTTTCACT.1  ATCACACTATTCGG.1 \n##                 5                 1                 0                 3 \n##  ATCACACTCCATAG.1  ATCACACTCGTAAC.1  ATCACACTCTGGAT.1  ATCACACTGATAGA.1 \n##                 0                 3                 0                 1 \n##  ATCACACTGGCGAA.1  ATCACACTGTCGAT.1 ATCACGGAACCCTC.11  ATCACGGAAGTAGA.1 \n##                 0                 3                 7                 7 \n##  ATCACGGACCTTGC.1  ATCACGGACTAAGC.1  ATCACGGAGACGTT.1  ATCACGGATCACCC.1 \n##                 1         CD16 Mono                 0                 1 \n##  ATCACGGATGTCAG.1  ATCACTACAGCCTA.1  ATCACTACGAGACG.1  ATCACTACGTGAGG.1 \n##                 2                 3                 3                 0 \n##  ATCACTACTGCAAC.1  ATCACTACTGGAGG.1  ATCACTTGACGTGT.1  ATCACTTGGAATAG.1 \n##                 2                 0                 1                 0 \n##  ATCACTTGTCCAGA.1  ATCAGGTGGCTACA.1  ATCAGGTGTCATTC.1  ATCAGGTGTGAGGG.1 \n##                 1                 0                13                 0 \n##  ATCATCTGACGACT.1  ATCATCTGCCACCT.1  ATCATCTGGCTAAC.1  ATCATCTGGCTATG.1 \n##                 3                 5                 1                 9 \n##  ATCATCTGTAACCG.1  ATCATCTGTACTTC.1  ATCATGCTATTGGC.1  ATCATGCTCAATCG.1 \n##                 0                 1                 5                 1 \n##  ATCATGCTCAGATC.1  ATCATGCTCTGACA.1  ATCATGCTGAGGGT.1  ATCATGCTGCTCCT.1 \n##                 0         CD16 Mono         CD16 Mono                 2 \n##  ATCATGCTGGAGCA.1  ATCATGCTTCAGTG.1  ATCATGCTTGAGAA.1  ATCCAGGAACAGTC.1 \n##                 3         CD16 Mono                 0                 0 \n##  ATCCAGGAAGAACA.1  ATCCAGGAATAAGG.1  ATCCAGGACTGACA.1 ATCCAGGATAGTCG.11 \n##                 0                 1                 3                 2 \n##  ATCCAGGATCTCGC.1  ATCCATACGAGACG.1  ATCCATACGCAGTT.1  ATCCATACTTCTGT.1 \n##                 0                 0                 0                 7 \n##  ATCCCGTGAAGCCT.1  ATCCCGTGAGTCTG.1  ATCCCGTGGATGAA.1  ATCCCGTGGGTGAG.1 \n##                 5                 0                 0                 0 \n##  ATCCCGTGTGCACA.1  ATCCGCACCCAACA.1  ATCCGCACCGTAGT.1  ATCCGCACGGACAG.1 \n##                 2                 3                 1                 5 \n##  ATCCGCACGGAGGT.1  ATCCGCACGTTAGC.1  ATCCGCACTCCTTA.1  ATCCGCACTTGAGC.1 \n##                 0                 1                 7                 2 \n##  ATCCTAACACTGTG.1  ATCCTAACCCTTCG.1  ATCCTAACCTGGAT.1  ATCCTAACGCGTAT.1 \n##                 2         CD16 Mono                 0                 5 \n##  ATCCTAACTATGGC.1  ATCGACGAACTAGC.1  ATCGACGAAGTAGA.1  ATCGACGACTGTTT.1 \n##                 1                 1                 3                 5 \n##  ATCGAGTGCTGTAG.1  ATCGCAGAAAGGTA.1  ATCGCAGAACTGTG.1  ATCGCAGAAGGTCT.1 \n##                 0                 1                 1                 0 \n##  ATCGCAGATAAAGG.1  ATCGCCACAGAGAT.1  ATCGCCACTGTAGC.1 ATCGCCACTGTCCC.11 \n##                 1                 2                 0         CD16 Mono \n##  ATCGCCTGACCTTT.1  ATCGCCTGCAGTTG.1  ATCGCCTGCTTGAG.1  ATCGCCTGTGTTCT.1 \n##                 1                 1         CD16 Mono                 3 \n##  ATCGCCTGTTTCTG.1  ATCGCGCTAGAAGT.1  ATCGCGCTAGATCC.1  ATCGCGCTCAATCG.1 \n##                 5                 0                 6                 1 \n##  ATCGCGCTCACTTT.1  ATCGCGCTGCCAAT.1  ATCGCGCTTCTTTG.1  ATCGGAACACCTCC.1 \n##                 1                 5                 0                 3 \n##  ATCGGTGAAACAGA.1  ATCGGTGAAACGGG.1  ATCGGTGAACCAGT.1  ATCGGTGACGAGAG.1 \n##                 5                 1                 6                 2 \n##  ATCGGTGACTCAAG.1  ATCGGTGACTGCTC.1  ATCGGTGAGAGGCA.1  ATCGGTGAGCGTAT.1 \n##                 5                 0                 1                 0 \n##  ATCGGTGAGTTGCA.1  ATCGGTGATCCCAC.1  ATCGTTTGACGTGT.1  ATCGTTTGCTGTTT.1 \n##                 1                 2                10         CD16 Mono \n##  ATCGTTTGTTGAGC.1  ATCTACACAACTGC.1  ATCTACACACGCAT.1  ATCTACACCTGACA.1 \n##                 0                 6                 0                 2 \n##  ATCTACACCTGGAT.1  ATCTACTGGGTCAT.1  ATCTACTGTTTGCT.1  ATCTCAACAACCAC.1 \n##                 3                 2                 2                 6 \n## ATCTCAACGTCAAC.11  ATCTCAACTCCTGC.1  ATCTCAACTTCGTT.1  ATCTGACTAGATGA.1 \n##                 0                 0                 5                 0 \n##  ATCTGACTAGCTCA.1  ATCTGACTCACTGA.1  ATCTGACTCAGCTA.1  ATCTGACTCATTTC.1 \n##                 6                 2                 8                 1 \n##  ATCTGACTGATAAG.1  ATCTGGGAAGCACT.1  ATCTGGGAATTTCC.1  ATCTGGGACACACA.1 \n##                 6         CD16 Mono                 0                 0 \n##  ATCTGGGACTTCCG.1  ATCTGGGAGTCGAT.1  ATCTGGGATAAGGA.1  ATCTGGGATGCCCT.1 \n##                 6                 1         CD16 Mono                 2 \n##  ATCTGTTGAGCTAC.1  ATCTGTTGTGGTGT.1  ATCTTGACAGAGAT.1  ATCTTGACCACAAC.1 \n##                 9                 3                 5                 3 \n##  ATCTTGACCTCGCT.1  ATCTTGACGCTGAT.1  ATCTTGACTCTACT.1  ATCTTTCTAAAAGC.1 \n##                 0                 5         CD16 Mono                 1 \n##  ATCTTTCTGTTGCA.1  ATCTTTCTGTTTCT.1  ATCTTTCTTCATTC.1  ATCTTTCTTCCCGT.1 \n##                 2                 0                 2                 3 \n##  ATCTTTCTTGCCTC.1  ATCTTTCTTTCGTT.1  ATGAAACTAGAGTA.1 ATGAAACTGCTGTA.11 \n##                 7                 1                 1                 0 \n##  ATGAAACTGGTAAA.1  ATGAAGGATGCTGA.1  ATGAAGGATGGTAC.1  ATGACGTGCCCTCA.1 \n##                 0                 1                 5                 6 \n##  ATGACGTGCGACAT.1  ATGACGTGTGAGAA.1  ATGAGAGAAAGGCG.1  ATGAGAGACTTCGC.1 \n##                 2         CD16 Mono                 1                 0 \n##  ATGAGAGAGTTGGT.1  ATGAGCACACGACT.1  ATGAGCACATGACC.1  ATGAGCACCCTGTC.1 \n##         CD16 Mono                 1                 7                 0 \n##  ATGAGCACCCTTCG.1  ATGATAACAAACAG.1  ATGATAACCGTGAT.1  ATGATAACCTAAGC.1 \n##                 1                 1                 0                 0 \n##  ATGATAACGAGGAC.1  ATGATAACTGCCTC.1  ATGATATGAAAAGC.1  ATGATATGACCCAA.1 \n##         CD16 Mono                 2                 0                 0 \n##  ATGATATGCCGCTT.1  ATGATATGGACACT.1  ATGATATGGCATAC.1  ATGATATGGTCAAC.1 \n##                13                 2         CD16 Mono                 3 \n##  ATGATATGGTCGTA.1  ATGCACGAAAAGCA.1  ATGCACGACTGGTA.1  ATGCACGAGAATAG.1 \n##                 5                 0                 0                 5 \n##  ATGCACGATGGAAA.1  ATGCAGACACTCTT.1  ATGCAGACATGCTG.1  ATGCAGACCTCTAT.1 \n##                 2                 2                 0                 1 \n##  ATGCAGACGCGAAG.1  ATGCAGACTGCACA.1  ATGCAGTGCATGAC.1  ATGCAGTGCGATAC.1 \n##                 1                 7                 3                 5 \n##  ATGCAGTGGAGGGT.1  ATGCAGTGGGTAGG.1  ATGCAGTGGTCACA.1  ATGCAGTGTCACGA.1 \n##                 2                 0                 1                 3 \n##  ATGCAGTGTTTGGG.1  ATGCCAGACTTATC.1  ATGCCAGATCCTGC.1  ATGCCGCTACGTTG.1 \n##                 0                 0                 6                 2 \n##  ATGCCGCTATCTTC.1  ATGCCGCTCCTGTC.1  ATGCGATGGCGAGA.1  ATGCGATGTACAGC.1 \n##                 6                 0                 1                 0 \n##  ATGCGATGTCACCC.1  ATGCGATGTCGCAA.1  ATGCGCCTAGCACT.1  ATGCGCCTCACTTT.1 \n##                 0                 1                13                 0 \n##  ATGCGCCTGTACGT.1  ATGCTTTGAAAGTG.1  ATGCTTTGCAGTTG.1  ATGCTTTGTAAGGA.1 \n##                 1                 1         CD16 Mono                 0 \n##  ATGGACACACGCTA.1  ATGGGTACAAGGCG.1  ATGGGTACCTGGAT.1  ATGGGTACCTTCGC.1 \n##                 1                 6         CD16 Mono                 0 \n##  ATGGGTACTCCGTC.1  ATGGTGACCCCAAA.1  ATGGTGACCCGCTT.1  ATGGTGACCTGCTC.1 \n##                 0                 0                 6                 1 \n##  ATGGTGACTAGACC.1  ATGGTGACTAGTCG.1  ATGGTGACTGCACA.1  ATGTAAACCAGAAA.1 \n##                 6                 8                 0                 1 \n##  ATGTAAACCTGCAA.1  ATGTAAACGTGCAT.1  ATGTAAACTTCGCC.1  ATGTACCTACAGTC.1 \n##                 3                 0         CD16 Mono                 0 \n##  ATGTACCTCGCATA.1  ATGTACCTCTCGCT.1  ATGTACCTTCTATC.1  ATGTCACTCAACCA.1 \n##                 1                 1                 1                 1 \n##  ATGTCACTGGTAGG.1  ATGTCACTTGGTCA.1  ATGTCACTTTGGCA.1  ATGTCACTTTTCAC.1 \n##                 1                10                10                 2 \n##  ATGTCGGAAGCCAT.1  ATGTCGGACTATGG.1  ATGTCGGACTTACT.1  ATGTCGGAGGGACA.1 \n##                 2                 2                 8                 2 \n##  ATGTTAGAAGAGTA.1  ATGTTAGACCTACC.1  ATGTTAGACTTGTT.1  ATGTTAGAGGAGCA.1 \n##         CD16 Mono                 2                 8                 1 \n##  ATGTTAGAGGTTTG.1  ATGTTAGATATGGC.1  ATGTTCACAGCGTT.1  ATGTTCACGAGCAG.1 \n##                 1                 6         CD16 Mono                 1 \n##  ATGTTCACGAGCTT.1  ATGTTCACTTACCT.1  ATGTTGCTGGTTCA.1  ATTAACGATTTCGT.1 \n##         CD16 Mono                 7                 1                 0 \n##  ATTAAGACATACCG.1  ATTAAGACCCCTCA.1  ATTAAGACGAGAGC.1  ATTAAGACTCAGTG.1 \n##                 7                 9                 2                 1 \n##  ATTAAGACTGTCAG.1  ATTAAGACTGTGGT.1  ATTACCACCCTCAC.1  ATTACCACGGAGGT.1 \n##                 1                 0                 0                 8 \n##  ATTACCACGGTGAG.1  ATTACCTGACCTAG.1  ATTACCTGTTAGGC.1  ATTAGATGACAGCT.1 \n##                 3                 0                 0                 2 \n##  ATTAGATGACGGGA.1 ATTAGATGAGCAAA.11  ATTAGATGCTTCTA.1  ATTAGATGGCTCCT.1 \n##                 1                 0                 0                 6 \n##  ATTAGATGTGGTAC.1  ATTAGTGACAGATC.1  ATTAGTGACCTTTA.1  ATTAGTGACGTAAC.1 \n##                 5                 2         CD16 Mono                 2 \n##  ATTAGTGAGTTGTG.1  ATTAGTGATGCTGA.1  ATTATGGAACCCTC.1  ATTATGGAACGGTT.1 \n##                 5                 0                 2                 0 \n##  ATTATGGATCCCAC.1  ATTATGGATGCTCC.1  ATTCAAGAACACAC.1  ATTCAAGAAGTCAC.1 \n##         CD16 Mono                 1                 0                 3 \n## ATTCAAGAAGTGCT.11  ATTCAAGAAGTTCG.1  ATTCAAGACCTACC.1  ATTCAAGACTAGTG.1 \n##                 0                 2                 1                 0 \n##  ATTCAAGACTTATC.1  ATTCAGCTAAACGA.1  ATTCAGCTACGTGT.1  ATTCAGCTGGTGGA.1 \n##                 3                 2                 0                 0 \n##  ATTCAGCTGTCCTC.1  ATTCCAACAAGGTA.1  ATTCCAACATCGTG.1  ATTCCAACCTGCAA.1 \n##                 1                 0                 1                 6 \n##  ATTCCAACGGTCTA.1  ATTCCAACGTAAAG.1  ATTCCAACGTTGAC.1  ATTCCATGAGTGTC.1 \n##                 0                 7                 2                 2 \n##  ATTCCATGATGACC.1  ATTCCATGCTCGCT.1  ATTCCATGTAAGCC.1  ATTCCATGTGAGCT.1 \n##                 0                10                 1                 2 \n##  ATTCGACTGCGATT.1  ATTCGACTGGTCTA.1  ATTCGACTTCCGTC.1  ATTCGACTTGGTTG.1 \n##                 0                 3                 1                 0 \n##  ATTCGGGAACTCTT.1  ATTCGGGACATGAC.1  ATTCGGGACCCTCA.1  ATTCGGGACTTACT.1 \n##                 0                 0                 3                 1 \n##  ATTCGGGAGAGATA.1  ATTCGGGAGATAAG.1  ATTCGGGAGCGATT.1  ATTCGGGAGGGACA.1 \n##                 1                 2                 1                 3 \n##  ATTCGGGAGGGTGA.1  ATTCGGGATGTCCC.1  ATTCTGACACTCAG.1  ATTCTGACCATCAG.1 \n##                 0                 3                 1                 1 \n##  ATTCTGACGCCATA.1  ATTCTGACTACTTC.1  ATTCTGACTGCTGA.1  ATTCTTCTCGAGAG.1 \n##                 2                 1                 5                 8 \n##  ATTCTTCTTGAACC.1  ATTCTTCTTGGTGT.1  ATTCTTCTTTGTGG.1  ATTGAAACACGTGT.1 \n##                10                 1                 2                 2 \n## ATTGAAACAGTACC.11  ATTGAAACGCGAAG.1  ATTGAAACTTAGGC.1  ATTGAATGACCATG.1 \n##         CD16 Mono                 0                 2                 1 \n##  ATTGAATGCCAGTA.1  ATTGAATGTAAAGG.1  ATTGAATGTCCTGC.1  ATTGAATGTTCCCG.1 \n##                 0                 0                 3                 2 \n##  ATTGATGAATGCTG.1  ATTGATGAGGTACT.1  ATTGATGAGGTGAG.1  ATTGATGAGTCCTC.1 \n##                 7                 3                 0                 0 \n##  ATTGATGATCCTTA.1  ATTGATGATGCAAC.1  ATTGATGATTCTTG.1  ATTGCACTGAACCT.1 \n##                 1                 1                 0                 0 \n## ATTGCACTTGTCGA.11  ATTGCGGAAAACGA.1  ATTGCGGACCGCTT.1  ATTGCGGACGAGTT.1 \n##                 1                 7                 6         CD16 Mono \n##  ATTGCGGAGCTGAT.1  ATTGCGGAGTACGT.1  ATTGCGGAGTTGCA.1  ATTGCGGATACTCT.1 \n##                 6                 2                 0                10 \n##  ATTGCGGATTACCT.1  ATTGCTACCTAGTG.1  ATTGCTACCTTGGA.1  ATTGCTACGAAGGC.1 \n##                 6                 1                 0                 0 \n##  ATTGCTACTACGAC.1  ATTGCTACTCGCTC.1  ATTGCTTGACACCA.1  ATTGCTTGCTGCTC.1 \n##                 0                 0                 1                 0 \n##  ATTGCTTGGAGGCA.1  ATTGCTTGGCTGTA.1  ATTGCTTGGGAGTG.1  ATTGCTTGTCGCCT.1 \n##                 1         CD16 Mono                 0                 7 \n##  ATTGCTTGTTCGTT.1  ATTGGGTGACCTGA.1  ATTGGGTGCCACCT.1  ATTGGGTGGTACCA.1 \n##                 0                 3                 1                 1 \n##  ATTGGGTGTCCAAG.1 ATTGGGTGTCCTCG.11  ATTGGGTGTGAACC.1  ATTGGTCTAGGTCT.1 \n##                 1                 6                 0                 5 \n##  ATTGGTCTCTTGGA.1  ATTGGTCTGGGATG.1  ATTGGTCTGTAAGA.1  ATTGTAGAAGCTAC.1 \n##                 3                 2         CD16 Mono                 2 \n##  ATTGTAGACACTGA.1  ATTGTAGACAGCTA.1  ATTGTAGAGGTTAC.1  ATTGTAGAGGTTCA.1 \n##                 2                 0                 1                 1 \n##  ATTGTAGAGTAAAG.1  ATTGTAGAGTACCA.1  ATTGTCTGCAGATC.1  ATTGTCTGGGTTCA.1 \n##                 1                 0                 2                 5 \n##  ATTGTCTGGTGTTG.1  ATTGTCTGTGCTAG.1  ATTTAGGACCAGTA.1  ATTTAGGACTCATT.1 \n##                 0                 3                 0                 2 \n##  ATTTAGGATCAGAC.1  ATTTAGGATGTCAG.1  ATTTAGGATTGAGC.1  ATTTCCGAAAGTGA.1 \n##                 2                 7                 0                 2 \n##  ATTTCCGACATCAG.1  ATTTCCGAGACAGG.1  ATTTCCGAGGGAGT.1  ATTTCCGAGTAAAG.1 \n##                 6                 1                 2                 3 \n##  ATTTCCGATTGAGC.1  ATTTCGTGAGTGTC.1  ATTTCGTGGACGTT.1  ATTTCGTGGGTTAC.1 \n##                 0                 7                 6                 0 \n##  ATTTCGTGGTCACA.1 ATTTCGTGTCATTC.11  ATTTCTCTCACAAC.1  ATTTCTCTCTTGAG.1 \n##                 0                 2         CD16 Mono                 2 \n##  ATTTCTCTGGTTTG.1  ATTTCTCTGTCTTT.1  ATTTGCACAAGGTA.1  ATTTGCACGAGAGC.1 \n##                 3                 0                 2                 8 \n##  ATTTGCACTCCTGC.1  CAAACTCTAATGCC.1  CAAACTCTACCCTC.1  CAAACTCTCCATAG.1 \n##         CD16 Mono                 0                 0                 0 \n##  CAAACTCTTCGATG.1 CAAACTCTTCGTAG.11  CAAACTCTTGTGGT.1 CAAACTCTTTACCT.11 \n##                 0                 1                 1                 0 \n##  CAAAGCACAAACAG.1  CAAAGCACACCTCC.1  CAAAGCACCACCAA.1  CAAAGCACCCCGTT.1 \n##                 7                 2                 2                 3 \n##  CAAAGCACCGGTAT.1 CAAAGCACGGTAGG.11  CAAAGCTGCCCAAA.1  CAAAGCTGGGGAGT.1 \n##                 1                 0                 1                 0 \n##  CAAAGCTGTAGCGT.1  CAAAGCTGTTGGTG.1  CAAATATGACGCAT.1  CAAATATGCGAGTT.1 \n##                 7                 2                 2                 2 \n##  CAAATTGAACGGGA.1  CAAATTGACCTATT.1  CAAATTGACTGACA.1  CAACAGACATCTTC.1 \n##                 0                 0                 6                 0 \n##  CAACCAGACTTCGC.1  CAACCAGAGACTAC.1  CAACCAGAGAGCAG.1  CAACCAGAGCCCTT.1 \n##                 0                 0                 2                 2 \n##  CAACCAGAGTATCG.1  CAACCAGATAGAAG.1  CAACCGCTCAGGAG.1  CAACGAACATTCGG.1 \n##                 8                 1                 0                 9 \n##  CAACGAACCAATCG.1  CAACGAACGCTTCC.1  CAACGATGGGTAGG.1  CAACGATGTGTGGT.1 \n##                 0                 7                 0                 0 \n##  CAACGTGACACTCC.1  CAACGTGAGAGGGT.1  CAACGTGAGGAACG.1  CAACGTGATGAAGA.1 \n##                 2                 0                 3                 0 \n##  CAACGTGATGTGCA.1  CAACGTGATTCTCA.1  CAACTTTGGGTCAT.1  CAACTTTGTTGCAG.1 \n##                 0                 1                 1                 3 \n##  CAAGAAGAAAGAGT.1  CAAGAAGAACTAGC.1  CAAGAAGACTCTCG.1  CAAGAAGACTCTTA.1 \n##                 0                 0                 0                 9 \n##  CAAGAAGATGCTCC.1  CAAGAAGATTTCGT.1  CAAGACACAGAGGC.1  CAAGACACGATACC.1 \n##                11                 1                 0                10 \n##  CAAGACACTTCACT.1  CAAGACACTTCCCG.1  CAAGACTGAGGTTC.1  CAAGACTGATACCG.1 \n##                 0                 3                 5                 3 \n##  CAAGACTGCACTGA.1  CAAGACTGGAGCTT.1  CAAGACTGGCTATG.1  CAAGACTGGGACAG.1 \n##                 3                 5                 1                 7 \n##  CAAGACTGGTTTGG.1  CAAGACTGTCGTAG.1  CAAGCATGCCTCGT.1  CAAGCATGTCTCAT.1 \n##                 1                 2                 6                 3 \n##  CAAGCCCTAGCGGA.1  CAAGCCCTCTTGCC.1  CAAGCCCTGTCGTA.1  CAAGCCCTTCAAGC.1 \n##                 2                 1                 2                 0 \n##  CAAGCCCTTCGACA.1  CAAGCCCTTTCGGA.1  CAAGCTGAACCCAA.1  CAAGCTGAACGGGA.1 \n##                 0                 3                 9         CD16 Mono \n##  CAAGCTGACTGTTT.1  CAAGCTGAGCAAGG.1  CAAGCTGATCCCGT.1  CAAGGACTCTTACT.1 \n##                 7                 7                 5                 6 \n##  CAAGGACTTGCAAC.1  CAAGGTTGAAAACG.1  CAAGGTTGCTCAGA.1  CAAGGTTGCTTTAC.1 \n##         CD16 Mono                 0                 9                 0 \n##  CAAGGTTGTGGATC.1  CAAGTCGACTACGA.1  CAAGTCGACTATTC.1  CAAGTCGAGAGGCA.1 \n##                 0                 0                 3                 1 \n##  CAAGTCGATACGCA.1  CAAGTTCTCACTGA.1  CAAGTTCTGTGCTA.1  CAAGTTCTTCACGA.1 \n##         CD16 Mono                 0                 2                 7 \n##  CAAGTTCTTGCTAG.1  CAAGTTCTTGGTAC.1  CAATAAACACTGGT.1  CAATAAACAGTTCG.1 \n##                 9                 3                 1                10 \n##  CAATAAACCCATAG.1  CAATAAACCCTCAC.1  CAATAAACGAATAG.1  CAATAAACGACGGA.1 \n##                 0                 0                 6                 0 \n##  CAATAAACGCTAAC.1  CAATAAACGGTTTG.1  CAATAAACGTACGT.1  CAATAATGACCAGT.1 \n##                 2                 1                 3                 2 \n##  CAATAATGCCTCGT.1  CAATAATGGACAAA.1  CAATAATGTATTCC.1  CAATATGAAGACTC.1 \n##                 1                 1                 0                10 \n##  CAATATGAAGCCTA.1  CAATATGAATGTCG.1  CAATATGAGATAGA.1  CAATATGAGTTCAG.1 \n##                10                 2                 0                 7 \n##  CAATATGATACAGC.1  CAATATGATCACGA.1  CAATCGGAATTGGC.1  CAATCGGACTCCCA.1 \n##                 2                 0                 1                 2 \n##  CAATCGGACTCGAA.1  CAATCGGACTGTAG.1  CAATCGGAGTCCTC.1  CAATCGGAGTGTTG.1 \n##                 0                 0                 1                 1 \n##  CAATCGGATTGCTT.1  CAATCTACCTACGA.1  CAATCTACGTACCA.1  CAATGGACAGAATG.1 \n##         CD16 Mono                 1                 0         CD16 Mono \n##  CAATGGACCCTCCA.1  CAATGGACCGAGAG.1  CAATGGACGAATCC.1  CAATGGACGGAGCA.1 \n##                 0                13                 2                 1 \n##  CAATGGACGGCGAA.1  CAATTCACAAAGCA.1  CAATTCACCAACTG.1  CAATTCACTATGGC.1 \n##                 0                 0                 1                 2 \n## CAATTCACTGAGAA.11  CAATTCTGACGGTT.1  CAATTCTGTGCACA.1  CAATTCTGTGTTTC.1 \n##                 3         CD16 Mono                 0                 0 \n##  CACAACGAAAGATG.1  CACAACGAGGGTGA.1  CACAATCTACTGGT.1  CACAATCTCCCGTT.1 \n##                11                10                 0                 1 \n##  CACACCTGGTACGT.1  CACACCTGTCAGGT.1  CACACCTGTCGCTC.1  CACAGAACACCCTC.1 \n##                 0                 0                 2                 7 \n##  CACAGAACCTGTCC.1  CACAGAACTGACAC.1  CACAGATGAGCTAC.1  CACAGATGCACCAA.1 \n##                 5                 1                 2                 3 \n##  CACAGATGCATACG.1  CACAGATGCTGCTC.1  CACAGATGGCAGTT.1  CACAGATGTGACTG.1 \n##                 0                 8                 1                 1 \n##  CACAGCCTACGTTG.1  CACAGCCTCCACCT.1  CACAGCCTCGGAGA.1  CACAGCCTCGTAGT.1 \n##                 5                 1                 0                 7 \n##  CACAGCCTTCCAAG.1  CACAGTGAAAGGGC.1  CACAGTGATCGCAA.1  CACATACTAGAACA.1 \n##                 1                 0                 1                 7 \n##  CACATACTCGGTAT.1  CACATACTGTCTGA.1  CACATACTTTCGCC.1  CACATGGAATCTTC.1 \n##                 1                 0                 5                 1 \n##  CACATGGACCTACC.1  CACATGGACGCATA.1  CACATGGATTCTCA.1  CACATGGATTGACG.1 \n##         CD16 Mono                 6                 2                 1 \n##  CACCACTGAACGGG.1  CACCACTGGATGAA.1  CACCACTGGGTTCA.1  CACCCATGAGAATG.1 \n##                 1                 0                 3                 2 \n##  CACCGGGACTGTTT.1  CACCGTACAAAAGC.1  CACCGTACCCTATT.1  CACCGTACGCGTTA.1 \n##                 0                 1                 0                 0 \n##  CACCGTACGTCTGA.1  CACCGTACTCCGAA.1  CACCGTACTTCATC.1  CACCGTTGACGTTG.1 \n##                 1                 2                 0                 1 \n##  CACCGTTGAGCACT.1  CACCGTTGATGACC.1  CACCGTTGCCATAG.1  CACCGTTGGTCGTA.1 \n##                 0         CD16 Mono                 0                13 \n## CACCGTTGGTGAGG.11  CACCGTTGTAGAAG.1  CACCTGACACTGTG.1  CACCTGACCAGTTG.1 \n##         CD16 Mono                 0                 3                 7 \n##  CACCTGACCCATAG.1  CACCTGACCCCGTT.1  CACCTGACCCTATT.1  CACCTGACGCGATT.1 \n##                 9                 2                 2                 0 \n## CACCTGACTGACTG.11  CACCTGACTTGCAG.1  CACGAAACCGAGAG.1  CACGAAACGAAGGC.1 \n##                 2                 6                 0                 0 \n##  CACGAAACTCGACA.1  CACGACCTCCACAA.1  CACGACCTCCCAAA.1  CACGACCTCCTTGC.1 \n##                 0                 1                 5                 9 \n##  CACGATGAACACGT.1  CACGATGAAGCTAC.1  CACGATGACGTGAT.1  CACGCTACAAACAG.1 \n##                 1                 0                 2                 1 \n##  CACGCTACAACGTC.1  CACGCTACACAGTC.1  CACGCTACAGTGTC.1  CACGCTACGAATGA.1 \n##                 0                 2                 5                 0 \n##  CACGCTACGGTATC.1  CACGCTACGGTTCA.1  CACGCTACTACAGC.1  CACGGGACACGCAT.1 \n##                 8                 2                 1                 0 \n##  CACGGGACAGGTTC.1  CACGGGACGGTTCA.1  CACGGGACTATCGG.1  CACGGGTGCTCGAA.1 \n##         CD16 Mono                 0                10                 0 \n##  CACGGGTGTCCAAG.1  CACTAACTACTGGT.1  CACTAACTGTAGCT.1  CACTAACTTTCCCG.1 \n##                10                 3                 6         CD16 Mono \n##  CACTAGGAACGGTT.1  CACTAGGAGACAGG.1  CACTAGGATTGGTG.1  CACTATACAGCAAA.1 \n##                 1                 1                 0                 0 \n##  CACTATACCAATCG.1 CACTATACCAGAAA.11  CACTATACCGGAGA.1  CACTATACCTGATG.1 \n##                 1                 1                 2                 0 \n##  CACTATACGTCGTA.1  CACTCCGACCTTGC.1  CACTCCGAGGTGGA.1  CACTCCGATCAAGC.1 \n##         CD16 Mono                 0                 2                 3 \n##  CACTCCGATTCACT.1  CACTCTCTAGAATG.1  CACTCTCTCTGATG.1 CACTGAGATTGCAG.11 \n##                 0                 0                 1                 5 \n##  CACTGAGATTGCGA.1  CACTGCACACGACT.1  CACTGCACGCCCTT.1  CACTGCACGTGCAT.1 \n##                 6                 0                 0                 2 \n##  CACTGCACTGAGAA.1  CACTGCACTTCTCA.1  CACTGCTGAGTGCT.1  CACTGCTGGAGATA.1 \n##                 3                 0                 0                 0 \n##  CACTGCTGGAGGTG.1  CACTGCTGGCGGAA.1  CACTGCTGTTTACC.1  CACTTAACCCGTAA.1 \n##                 5                 5         CD16 Mono                 1 \n##  CACTTAACGGGATG.1  CACTTATGAACGTC.1  CACTTATGAGAGTA.1  CACTTATGAGTGCT.1 \n##                 2                 3                 2                 1 \n##  CACTTATGCCAACA.1  CACTTATGCGAATC.1  CACTTATGGGCGAA.1  CACTTATGTACGCA.1 \n##                 2                 8         CD16 Mono                 2 \n##  CACTTTGACCGTAA.1  CACTTTGAGAATAG.1  CACTTTGAGATAGA.1  CACTTTGAGTTAGC.1 \n##                 6                 7                 0                 1 \n##  CACTTTGATAACCG.1  CACTTTGATCTCCG.1  CAGAAGCTCCCAAA.1  CAGAAGCTCCCACT.1 \n##                 0                 3         CD16 Mono                 0 \n##  CAGAAGCTCTTCCG.1  CAGAAGCTGCCTTC.1  CAGACAACAGTTCG.1  CAGACAACGAAGGC.1 \n##                 0                 1                 1                 5 \n##  CAGACAACGCTCCT.1  CAGACAACTATCGG.1  CAGACAACTCCTTA.1  CAGACATGAACAGA.1 \n##                 0                 9                 7                 6 \n##  CAGACATGACTAGC.1  CAGACATGAGAACA.1  CAGACATGCGATAC.1  CAGACATGGAAGGC.1 \n##                 0         CD16 Mono                 0                 3 \n##  CAGACATGGCGTAT.1  CAGACCCTCCAAGT.1  CAGACCCTCTTGCC.1  CAGACCCTGAAAGT.1 \n##                 1         CD16 Mono                 1                 2 \n##  CAGACCCTTCATTC.1  CAGACTGACTGTAG.1  CAGACTGAGCGAAG.1  CAGAGGGAAACGGG.1 \n##                 9                 0                 3                 1 \n##  CAGAGGGAGCTTCC.1  CAGATCGACATCAG.1  CAGATCGACCCTTG.1  CAGATCGACTGTCC.1 \n##                 6                 2                 3                 2 \n##  CAGATGACAGGAGC.1  CAGATGACAGGTTC.1  CAGATGACCTCATT.1  CAGATGACTAGAGA.1 \n##                 2                 0                 2                 2 \n##  CAGCAATGCTCAGA.1  CAGCAATGTCATTC.1  CAGCACCTAAACGA.1  CAGCACCTAACGTC.1 \n##                 0                 2                 1                 0 \n##  CAGCACCTAGTCAC.1  CAGCACCTATACCG.1  CAGCACCTCCGATA.1  CAGCACCTCGGGAA.1 \n##         CD16 Mono                 1                 3                 0 \n##  CAGCACCTTACGAC.1  CAGCACCTTGACTG.1  CAGCACCTTGTCCC.1  CAGCACCTTTCTCA.1 \n##                 2                 0                 2                 7 \n##  CAGCATGAACACCA.1  CAGCATGAAGAAGT.1  CAGCATGACTTGTT.1  CAGCATGAGGAACG.1 \n##                 1                 0                 2                 0 \n##  CAGCATGAGTCCTC.1  CAGCCTACAAACGA.1  CAGCCTACATCACG.1  CAGCCTACCAACCA.1 \n##         CD16 Mono                 1                 2                 3 \n##  CAGCCTACGGCAAG.1  CAGCCTACTGGTTG.1  CAGCCTACTTCATC.1  CAGCGGACAGGAGC.1 \n##                10                 2                 0                 0 \n##  CAGCGGACTCCGTC.1  CAGCGTCTACACGT.1  CAGCGTCTCGACAT.1  CAGCGTCTCGGAGA.1 \n##                 3                 3                 0                 2 \n##  CAGCGTCTCGTAAC.1  CAGCGTCTCTTGTT.1  CAGCGTCTGGTTCA.1  CAGCGTCTTTTGTC.1 \n##                 1                 1                 8                 5 \n##  CAGCTAGAACCACA.1  CAGCTAGAACGGTT.1  CAGCTAGAAGCCAT.1  CAGCTAGATGCTGA.1 \n##                 0                 3                 1                 0 \n##  CAGCTAGATGTGAC.1  CAGCTCACGAATGA.1  CAGCTCACGTGTCA.1  CAGCTCACTCCTGC.1 \n##                 1                 1                 3                 0 \n##  CAGCTCACTCGACA.1  CAGCTCACTGGTGT.1  CAGCTCTGAGTGCT.1 CAGCTCTGCCTTGC.11 \n##                10                 1                 0                 2 \n##  CAGCTCTGCTCTCG.1  CAGCTCTGGGGAGT.1  CAGCTCTGGGGATG.1  CAGGAACTCAACTG.1 \n##                 0                 1                 0                 1 \n##  CAGGAACTGCCAAT.1  CAGGAACTGGTTCA.1  CAGGAACTGTGAGG.1  CAGGAACTTGCTAG.1 \n##                 1                 0                 3                 1 \n##  CAGGCCGAAGCCAT.1  CAGGCCGAATACCG.1  CAGGCCGACAACTG.1  CAGGCCGACTTATC.1 \n##                 1                 0                 1                 5 \n##  CAGGCCGAGTGAGG.1  CAGGCCGATGACAC.1  CAGGCCGATGTTCT.1  CAGGGCACAATGCC.1 \n##                 2                 1                 0                 5 \n##  CAGGGCACACACCA.1  CAGGGCACAGTTCG.1  CAGGGCACCGGAGA.1  CAGGGCACGACAGG.1 \n##                 7                 1                 0                 0 \n##  CAGGTAACCAGCTA.1  CAGGTAACCTCCCA.1  CAGGTAACGGTGGA.1  CAGGTAACGTTAGC.1 \n##                 0                 5                 0                 0 \n##  CAGGTAACTAAGGA.1 CAGGTATGGAATGA.11  CAGGTATGGGAGGT.1  CAGGTATGTGCTGA.1 \n##                 6                 7                 2                 6 \n##  CAGGTTGAAGGTCT.1  CAGGTTGACGACAT.1  CAGGTTGAGGTCTA.1  CAGGTTGATCTTCA.1 \n##                 1         CD16 Mono                 3                 0 \n##  CAGTCAGAAAACAG.1  CAGTCAGAAACGGG.1  CAGTCAGAAAGAAC.1  CAGTCAGAACACTG.1 \n##                 0                 6                 0                 0 \n##  CAGTCAGAACTAGC.1  CAGTCAGACGACTA.1  CAGTCAGAGACACT.1  CAGTCAGATGACTG.1 \n##                 3                 0                 0                 3 \n##  CAGTGATGACGCAT.1  CAGTGATGCGTTAG.1  CAGTGATGTGTCTT.1  CAGTGATGTGTGGT.1 \n##                 6                10                 0                 1 \n##  CAGTGATGTTAGGC.1  CAGTGTGAGTGAGG.1  CAGTGTGATGTCTT.1  CAGTTACTGAGACG.1 \n##                 0                 0                 0                 3 \n##  CAGTTGGAAAAACG.1  CAGTTGGAAGCAAA.1  CAGTTGGAGTGCTA.1  CAGTTGGATTCCGC.1 \n##                 5                10                 9                 0 \n##  CAGTTTACCGGTAT.1  CAGTTTACTGTCTT.1  CATAAAACACTGGT.1  CATAAAACCGTGAT.1 \n##                 2         CD16 Mono                 2                 0 \n##  CATAAAACGCCAAT.1  CATAAAACTCATTC.1  CATAAATGAATGCC.1  CATAAATGATGGTC.1 \n##                 6                 1                 0                 3 \n##  CATAAATGGAAGGC.1  CATAAATGGAGATA.1  CATAAATGTCTCTA.1  CATAACCTAAGGTA.1 \n##                 2                 0                 0                 1 \n##  CATAACCTGAAGGC.1  CATAACCTGCTGTA.1  CATAACCTTGAGAA.1  CATACTACCTGAAC.1 \n##                13                 9                 2         CD16 Mono \n##  CATACTACGCTGTA.1  CATACTTGAGAGAT.1  CATACTTGAGCATC.1  CATACTTGATTTCC.1 \n##                13                 6                 5                 5 \n##  CATACTTGGCTCCT.1  CATACTTGGTCGTA.1  CATACTTGTATCGG.1  CATACTTGTCCTCG.1 \n##                 2                 2                 1                 1 \n##  CATAGTCTCTTCTA.1  CATATAGACAGGAG.1  CATATAGAGGTTTG.1  CATCAACTCCGTAA.1 \n##                 1                 1                 7                 1 \n##  CATCAACTGCTTAG.1  CATCAACTGTCCTC.1  CATCAGGAAAGATG.1  CATCAGGACACCAA.1 \n##                 2         CD16 Mono                 3                 9 \n##  CATCAGGAGACAAA.1 CATCAGGAGTATCG.11  CATCAGGAGTTGTG.1  CATCAGGATGTGCA.1 \n##                 3                 3                10                 0 \n##  CATCATACACCTTT.1  CATCATACAGCGGA.1  CATCATACCTTCGC.1  CATCCCGACGTACA.1 \n##                 1                 0                 6                 0 \n##  CATCCCGAGGTTCA.1  CATCCCGAGTGCTA.1  CATCCCGATTATCC.1  CATCGCTGAACAGA.1 \n##                 5                 0                 1                 1 \n##  CATCGCTGAAGTAG.1  CATCGCTGACGGGA.1 CATCGCTGCAGAAA.11  CATCGCTGCCTTTA.1 \n##                 3                 1         CD16 Mono                 3 \n##  CATCGCTGTGGTCA.1  CATCGGCTAGGCGA.1  CATCGGCTCCTTAT.1  CATCGGCTCTCGCT.1 \n##                 0                 5                 8                 0 \n##  CATCGGCTGAAGGC.1  CATCTCCTAGGGTG.1  CATCTCCTCATTGG.1  CATCTCCTCTGCTC.1 \n##                 1                 2                 0                 0 \n##  CATCTCCTGTTCGA.1  CATCTCCTTCTATC.1  CATCTTGACTCCAC.1  CATGAGACACACGT.1 \n##                 3                 0                 0                 9 \n##  CATGAGACCACTTT.1  CATGAGACTAGTCG.1  CATGCCACAGCTAC.1  CATGCCACCAGAAA.1 \n##                 8                11                 2                 8 \n##  CATGCCACCATGGT.1  CATGCCACCGAACT.1  CATGCCACGAGGAC.1  CATGCCACGCCATA.1 \n##                 1         CD16 Mono                 2                 2 \n##  CATGCCACGTTCAG.1  CATGCGCTAAAACG.1  CATGCGCTAAAGTG.1 CATGCGCTACCTCC.11 \n##                 0                12                 6                 7 \n##  CATGCGCTCAGAGG.1  CATGCGCTCGTGAT.1  CATGCGCTCTTAGG.1  CATGCGCTGAGCTT.1 \n##                 0                 3                 0                 0 \n##  CATGCGCTTGGTGT.1  CATGGATGAGAGAT.1  CATGGATGTAAGCC.1  CATGGCCTAAGAGT.1 \n##                 2                 7                 0                 6 \n##  CATGGCCTCAGTCA.1  CATGGCCTCTGTAG.1  CATGGCCTGTAGGG.1  CATGGCCTTTTCTG.1 \n##                 1                 2                 9                 0 \n##  CATGTACTACACAC.1  CATGTACTAGGTTC.1  CATGTACTCCTATT.1  CATGTACTGAGAGC.1 \n##         CD16 Mono                 1                 1                 0 \n##  CATGTACTGTTACG.1  CATGTTACAATCGC.1  CATGTTACTAGCGT.1  CATGTTACTCCAAG.1 \n##                 1                 3                 0                 0 \n##  CATGTTACTGACAC.1  CATGTTACTGATGC.1  CATGTTACTGCAGT.1  CATGTTTGACGCTA.1 \n##                 7                 0                 1                 0 \n##  CATGTTTGCACTCC.1  CATGTTTGCATGCA.1  CATGTTTGCTGTAG.1  CATGTTTGCTTGGA.1 \n##                 0                 0                 6                 3 \n##  CATGTTTGGCGAGA.1  CATGTTTGGGTTCA.1  CATGTTTGTTCTGT.1  CATTACACCCTCGT.1 \n##                 0                 0                 3                 1 \n##  CATTACACCGATAC.1  CATTACACTCGTTT.1  CATTAGCTCGACAT.1  CATTAGCTGTGTAC.1 \n##                 0         CD16 Mono                 5                 1 \n##  CATTAGCTTGAGGG.1  CATTAGCTTGGTTG.1  CATTAGCTTTGACG.1  CATTCCCTACACAC.1 \n##                 0                 1                 1                10 \n##  CATTCCCTACGGTT.1  CATTCCCTCTGCTC.1  CATTCCCTGCGAAG.1  CATTCCCTGTCACA.1 \n##                 1                 6                 1                 2 \n##  CATTCCCTTCGTGA.1  CATTGACTCGAACT.1  CATTGACTGCAAGG.1  CATTGACTGCGAGA.1 \n##                 2                 1                 6                 0 \n##  CATTGACTGGTGAG.1  CATTGACTGTTTCT.1  CATTGACTTTCCAT.1  CATTGACTTTTGGG.1 \n##                 1                 1                 3                 2 \n##  CATTGGGAAAAAGC.1  CATTGGGACAAAGA.1  CATTGGGACCCTAC.1  CATTGGGAGATGAA.1 \n##                 0                 0                 0         CD16 Mono \n##  CATTGGGAGTTGAC.1  CATTGGGATACGAC.1  CATTGTACAGGAGC.1  CATTGTACGCAGAG.1 \n##                 9                 1                 8                 0 \n##  CATTGTACGGTTTG.1  CATTGTACTCTCTA.1  CATTGTACTGAAGA.1  CATTGTACTTGGCA.1 \n##                 0         CD16 Mono                 1         CD16 Mono \n##  CATTGTACTTGGTG.1  CATTGTTGGGAGCA.1  CATTGTTGGGTCAT.1  CATTTCGATAACGC.1 \n##                 3                 0                 1                 1 \n##  CATTTGACTGCCCT.1  CATTTGACTTTACC.1 CATTTGTGAACAGA.11  CATTTGTGATCACG.1 \n##                 0                 5                 0         CD16 Mono \n##  CATTTGTGCATGGT.1  CATTTGTGCCAACA.1  CATTTGTGTTCGCC.1  CCAAAGTGACCGAT.1 \n##                 2                 1                 0                 0 \n##  CCAAAGTGATCTTC.1  CCAAAGTGCGCTAA.1  CCAAAGTGGCTTAG.1  CCAAAGTGGGACTT.1 \n##                 5                 3                 0                 0 \n##  CCAAAGTGTAGAGA.1  CCAAAGTGTCACCC.1  CCAAAGTGTGTCCC.1  CCAACCTGAGAAGT.1 \n##                 0         CD16 Mono                 1                 2 \n##  CCAACCTGTAACGC.1  CCAACCTGTGGGAG.1  CCAACCTGTTCTCA.1  CCAAGAACAACGAA.1 \n##                 0                 1                 0                10 \n##  CCAAGAACACGGAG.1  CCAAGAACAGCAAA.1  CCAAGAACTCCTAT.1  CCAAGAACTCTAGG.1 \n##                 0         CD16 Mono                 3                 2 \n##  CCAAGAACTGCTCC.1  CCAAGATGACCAGT.1  CCAAGATGCCTTGC.1  CCAAGATGCGTAGT.1 \n##                 7         CD16 Mono                 7                 5 \n##  CCAAGATGGAGGAC.1  CCAAGATGTGAGGG.1  CCAAGTGACAGAGG.1  CCAAGTGACCCAAA.1 \n##                 0                 0                 0                 3 \n##  CCAAGTGACTCTTA.1  CCAAGTGACTGTTT.1  CCAAGTGACTTATC.1  CCAATGGAAGTGTC.1 \n##                 0                 0                 0                 2 \n##  CCAATGGAATGGTC.1  CCAATGGACCGATA.1  CCAATGGACCTGTC.1  CCAATGGAGACTAC.1 \n##                 2                 2         CD16 Mono                 0 \n##  CCAATGGAGATAGA.1  CCAATGGAGTATCG.1  CCAATGGATAGACC.1  CCAATTTGAGGCGA.1 \n##                 2                 7                 1                 0 \n##  CCAATTTGCACTTT.1  CCACCATGATTCGG.1 CCACCATGCAGTCA.11  CCACCATGCATTTC.1 \n##                 2                 0                 2                 5 \n##  CCACCATGTGCTAG.1  CCACCTGAAAGAAC.1  CCACCTGAGCGAGA.1  CCACCTGAGCGGAA.1 \n##                 6                 0                 2                 0 \n##  CCACCTGATGTTCT.1  CCACGGGAAACGAA.1  CCACGGGAAGGCGA.1  CCACGGGAATCTTC.1 \n##                 0                 8                 0                 1 \n##  CCACGGGACCATAG.1  CCACGGGACTCGCT.1  CCACGGGAGCATCA.1  CCACGGGATAGTCG.1 \n##                 0                 6                 3                 9 \n##  CCACGGGATGCAAC.1  CCACTGACAGCCAT.1  CCACTGACCGCATA.1  CCACTGACCGTACA.1 \n##                 0                 1                 0                 3 \n##  CCACTGTGAGTTCG.1  CCACTGTGGCGAAG.1  CCACTGTGGTCACA.1  CCACTGTGGTTGTG.1 \n##                 1         CD16 Mono                 0         CD16 Mono \n##  CCACTTCTAGCTCA.1  CCACTTCTCCTATT.1  CCACTTCTCTTATC.1  CCACTTCTTACTCT.1 \n##                 1                 0                 0                 0 \n##  CCACTTCTTGCAAC.1  CCAGAAACACCTCC.1  CCAGAAACCTACCC.1  CCAGAAACCTCCCA.1 \n##                 1                 0                 2                 0 \n##  CCAGAAACGTTGAC.1  CCAGAAACGTTGCA.1  CCAGAAACTGGAAA.1 CCAGACCTGAGACG.11 \n##                 3                 8                11                 5 \n##  CCAGACCTGGGTGA.1  CCAGATGAACCAAC.1  CCAGATGACAATCG.1  CCAGATGACCTATT.1 \n##                 1                 0                 6                 0 \n##  CCAGATGACTGTAG.1  CCAGATGAGAATGA.1  CCAGATGAGTAAAG.1  CCAGATGATCGTTT.1 \n##                 0                 5                 0                 2 \n##  CCAGATGATGAGAA.1  CCAGCACTACACGT.1  CCAGCACTCGTCTC.1  CCAGCACTCTTAGG.1 \n##                 0                 2                 1                 0 \n##  CCAGCACTGTAGGG.1  CCAGCACTGTGAGG.1  CCAGCACTTAGACC.1  CCAGCACTTGTCTT.1 \n##                 1                 1                 5                 1 \n##  CCAGCACTTGTTCT.1  CCAGCACTTTGTGG.1  CCAGCGGAGCGGAA.1  CCAGCGGAGGACAG.1 \n##                 0                 2         CD16 Mono                 0 \n##  CCAGCGGAGGTAAA.1  CCAGCGGAGTTAGC.1  CCAGCGGATGAGAA.1  CCAGCTACAAGTAG.1 \n##                 0                 0                 1                 2 \n##  CCAGCTACACGGGA.1 CCAGCTACCAGTCA.11  CCAGCTACTCAGAC.1  CCAGGTCTCACAAC.1 \n##                 0         CD16 Mono                 9                 0 \n##  CCAGGTCTCTGTCC.1  CCAGGTCTGCTGTA.1 CCAGGTCTGGAGGT.11  CCAGGTCTTACGCA.1 \n##         CD16 Mono                 1                10                 7 \n##  CCAGGTCTTGTGCA.1  CCAGTCACCGGAGA.1  CCAGTCTGCTCAGA.1  CCAGTCTGGAGACG.1 \n##                 9                 9                 0                 0 \n##  CCAGTCTGGCGGAA.1  CCAGTCTGGTAGGG.1  CCAGTCTGTTACTC.1  CCAGTGCTAAGGGC.1 \n##                 2                 0                 1                 7 \n##  CCAGTGCTAGAATG.1  CCAGTGCTAGATCC.1  CCAGTGCTATTCTC.1  CCAGTGCTCTTGGA.1 \n##                 8                 2         CD16 Mono                11 \n##  CCAGTGCTTGTTCT.1  CCATAGGAACACGT.1  CCATAGGAATTTCC.1  CCATAGGACAGATC.1 \n##                 1                 2                 1                 0 \n##  CCATAGGACGTAAC.1  CCATAGGACTGAGT.1  CCATAGGATCATTC.1  CCATAGGATTTACC.1 \n##                 3                 0                 3                 2 \n##  CCATATACAAACGA.1  CCATATACCAACTG.1  CCATATACCAGTTG.1  CCATATACCGAGAG.1 \n##                 5         CD16 Mono                 1                 1 \n##  CCATATACGCCATA.1  CCATATACGCTGAT.1  CCATATACGGAACG.1  CCATCCGACACTAG.1 \n##         CD16 Mono                 5                 2                 8 \n##  CCATCCGACCACAA.1  CCATCCGACCGCTT.1  CCATCCGACTGTCC.1  CCATCCGATCAGGT.1 \n##                 1                 3                 7                 1 \n##  CCATCCGATGTTTC.1  CCATCGTGCGAACT.1  CCATCGTGTATGGC.1  CCATCGTGTCCCGT.1 \n##                 0                 9                 0         CD16 Mono \n##  CCATCGTGTCGACA.1  CCATGCTGACCCTC.1 CCATGCTGCTAAGC.11  CCATGCTGCTGTGA.1 \n##                 0                 0                 0                 0 \n## CCATGCTGGAGATA.11  CCATGCTGGATACC.1  CCATGCTGGCCAAT.1  CCATGCTGGCCTTC.1 \n##                 6                 6                 1                 0 \n##  CCATGCTGGGTGAG.1  CCATGCTGTCAGAC.1  CCATGCTGTCCCAC.1  CCATTAACAAAACG.1 \n##                 0                 5                 1                 0 \n##  CCATTAACAAGAGT.1  CCATTAACACGGTT.1  CCATTAACCGAGTT.1  CCATTAACGGACAG.1 \n##                 2                 0                 1                 0 \n##  CCATTAACGTACCA.1  CCATTAACTGAAGA.1  CCATTAACTGTTTC.1  CCATTAACTTACCT.1 \n##                 3                 1                 3                 8 \n##  CCATTAACTTCGGA.1  CCCAAAGAATGCTG.1  CCCAAAGACCCGTT.1  CCCAAAGACGTAGT.1 \n##                 1                 0                 3                 2 \n## CCCAAAGAGCCCTT.11  CCCAAAGATCCTCG.1  CCCAACACTAAGCC.1  CCCAACTGAGCGTT.1 \n##                 2                 0                 0                 0 \n##  CCCAACTGGCCTTC.1  CCCACATGAACCGT.1  CCCACATGAGCAAA.1  CCCACATGCGCTAA.1 \n##                 1                 1                 5                 5 \n##  CCCACATGCTTGAG.1  CCCACATGTCTTCA.1  CCCAGACTCCCACT.1  CCCAGACTCCTTTA.1 \n##                 1                 2                 6                 0 \n##  CCCAGACTGTTCGA.1  CCCAGTTGAGGTCT.1  CCCAGTTGCAGGAG.1  CCCAGTTGTTCTAC.1 \n##                 3                 5                 3                 0 \n##  CCCATCGAAAGTAG.1  CCCATCGACCCTAC.1  CCCATCGACTGGAT.1  CCCATCGATAGTCG.1 \n##                 2                 0                 0                 1 \n##  CCCATCGATCTAGG.1  CCCATGTGAGTTCG.1  CCCATGTGCTCTTA.1 CCCATGTGCTTGGA.11 \n##                 0                 1                 1                 0 \n##  CCCATGTGTGGGAG.1  CCCGAACTACCTGA.1  CCCGAACTGAGGAC.1  CCCGAACTGCTGTA.1 \n##                 0         CD16 Mono                 0                 3 \n##  CCCGATTGAGATGA.1  CCCGATTGCGAGTT.1  CCCGATTGCTCGCT.1  CCCGATTGGACAGG.1 \n##                 9                 1                 2                 1 \n##  CCCGATTGGGAAAT.1  CCCGATTGTATTCC.1  CCCGGAGAACTGTG.1  CCCGGAGATTACCT.1 \n##                 0                 5                 1                 0 \n##  CCCTACGAAAGAAC.1  CCCTACGACCCGTT.1  CCCTACGACTCTCG.1  CCCTACGAGTACCA.1 \n##                 2                 0                 0                 1 \n##  CCCTACGATATGCG.1  CCCTACGATGACCA.1  CCCTACGATTCTCA.1  CCCTAGTGCGCAAT.1 \n##                 0                12                 0                 5 \n##  CCCTAGTGCGTCTC.1  CCCTAGTGGTGTTG.1  CCCTAGTGTGCAAC.1  CCCTCAGAATCGGT.1 \n##                 1                 5                 0                 7 \n##  CCCTCAGATACTTC.1  CCCTCAGATTCTGT.1  CCCTGAACAACGGG.1  CCCTGAACTCTGGA.1 \n##                 1                 3                 0                 1 \n##  CCCTTACTAAGAAC.1  CCCTTACTACACGT.1  CCCTTACTCCAATG.1 CCCTTACTCTGGAT.11 \n##         CD16 Mono                 9                 1         CD16 Mono \n##  CCCTTACTGGTTCA.1  CCCTTACTTGAACC.1  CCGAAAACACTGTG.1  CCGAAAACCTGGAT.1 \n##                 8                 0         CD16 Mono                 1 \n##  CCGAAAACGAGCAG.1  CCGAAAACGAGGCA.1  CCGAAAACGGAACG.1  CCGAAAACTTCGTT.1 \n##                 0                 1                 3                11 \n##  CCGACACTAAGGCG.1  CCGACACTAGCGTT.1  CCGACACTCTACTT.1  CCGACACTGCCAAT.1 \n##                 2                 1                 8                 1 \n##  CCGACACTTATCGG.1  CCGACTACCTTGGA.1  CCGACTACGTTGCA.1  CCGATAGACTGTCC.1 \n##                 0                 1                 1                 0 \n##  CCGATAGAGATAGA.1  CCGATAGAGATGAA.1  CCGATAGAGTATCG.1  CCGCGAGAACTGTG.1 \n##                 0                 3                10                 2 \n##  CCGCGAGACATTGG.1  CCGCGAGACTGCAA.1  CCGCGAGAGGTGTT.1  CCGCGAGAGTTCAG.1 \n##                 2                 1                 1                 5 \n##  CCGCGAGATCGCTC.1  CCGCTATGATTCGG.1  CCGCTATGGGTGTT.1  CCGCTATGGTCCTC.1 \n##                 6                 0                 0                 3 \n##  CCGCTATGTTACTC.1  CCGGAGACACCTAG.1  CCGGAGACAGAACA.1  CCGGAGACGAAAGT.1 \n##                 1                 1                 0                 1 \n##  CCGGAGACTGGTAC.1  CCGGAGTGAGCCAT.1  CCGGAGTGAGGGTG.1  CCGGAGTGGGACGA.1 \n##         CD16 Mono                10                10                 1 \n##  CCGGAGTGGTCGAT.1  CCGGAGTGGTTCTT.1 CCGGAGTGTATGGC.11  CCGGAGTGTCTGGA.1 \n##                 0                 2                 0                 0 \n##  CCGGTACTAAGAGT.1  CCGGTACTCCTTTA.1  CCGGTACTCGCATA.1  CCGGTACTGTCCTC.1 \n##                 5                11                 1         CD16 Mono \n##  CCGGTACTTATCTC.1  CCGGTACTTTCTGT.1  CCGTAAGAACGTAC.1  CCGTAAGACCGCTT.1 \n##                 0                 3                 1                 3 \n##  CCGTAAGATTCAGG.1  CCGTACACAAAACG.1  CCGTACACAAGATG.1  CCGTACACCAGATC.1 \n##                 0                 3                 0                 7 \n##  CCGTACACGAGGGT.1  CCGTACACGGAGGT.1  CCGTACACTACTGG.1  CCGTACACTGCCTC.1 \n##                 9                 0                 0                 5 \n##  CCTAAACTACTCAG.1  CCTAAACTAGCATC.1  CCTAAACTCAGCTA.1  CCTAAACTTCGTAG.1 \n##                 1                 0                 3                 1 \n##  CCTAAGGAAAAACG.1  CCTAAGGAACGTGT.1  CCTAAGGATCCTGC.1  CCTACCGACGCCTT.1 \n##                 1                 6                 1         CD16 Mono \n##  CCTAGAGAACCCTC.1  CCTAGAGACCTAAG.1  CCTAGAGACGGAGA.1  CCTAGAGAGGATTC.1 \n##                 0                 8                 0                 0 \n##  CCTAGAGATCAGGT.1  CCTATAACGCCATA.1  CCTATAACGTTCGA.1  CCTATAACTGGTGT.1 \n##                 1         CD16 Mono                 1                 1 \n##  CCTATTGACATGAC.1  CCTATTGAGATACC.1  CCTATTGAGGTATC.1  CCTATTGATTTCAC.1 \n##                 0                 1                 1                 1 \n##  CCTATTGATTTGCT.1  CCTCATCTAGTCAC.1  CCTCATCTATGCTG.1  CCTCATCTGTCTGA.1 \n##                 5                 1                 2                 0 \n##  CCTCGAACACCTCC.1  CCTCGAACCATACG.1  CCTCTACTACGGGA.1  CCTCTACTGAGAGC.1 \n##                 0                 0                 6                 2 \n## CCTCTACTGCATAC.11  CCTCTACTGGGACA.1  CCTCTACTGGTTTG.1  CCTCTACTTGCTTT.1 \n##                 0                 1                 0         CD16 Mono \n##  CCTGACTGCGCATA.1  CCTGACTGCGGTAT.1  CCTGACTGTGCAGT.1  CCTGAGCTCACACA.1 \n##                 0                 0                 0                 0 \n##  CCTGAGCTGGTGAG.1  CCTGAGCTGTTTCT.1  CCTGCAACAACCTG.1  CCTGCAACCAGGAG.1 \n##                 0                 1                 5                 0 \n##  CCTGCAACTGAGCT.1  CCTGGACTACCTCC.1  CCTGGACTAGTGCT.1  CCTGGACTGTATCG.1 \n##         CD16 Mono                 8                 1                 0 \n##  CCTTAATGCATGAC.1  CCTTAATGCGGAGA.1  CCTTAATGGAATAG.1  CCTTAATGGAATGA.1 \n##                 2                 2                 1                 3 \n##  CCTTAATGGAGATA.1  CCTTAATGGATAGA.1  CCTTAATGGTGAGG.1  CCTTAATGTCCTAT.1 \n##                 3                 0                 5                 0 \n##  CCTTAATGTTCATC.1  CCTTCACTGGACGA.1  CCTTCACTGGAGGT.1  CCTTCACTTCCAGA.1 \n##         CD16 Mono                11         CD16 Mono                 0 \n##  CCTTCACTTGCTAG.1  CCTTCACTTTCTTG.1  CCTTTAGAAGCGTT.1  CCTTTAGACAGTCA.1 \n##                 5                 0                 2                 2 \n##  CCTTTAGACTTGGA.1  CCTTTAGATCGTGA.1  CGAACATGAGCAAA.1  CGAACATGCTGGAT.1 \n##                 6                 2         CD16 Mono                 3 \n##  CGAACATGGTCACA.1  CGAACATGTGACTG.1  CGAACATGTTGCGA.1  CGAACATGTTTCGT.1 \n##                 3                 2                10                 5 \n##  CGAAGACTAGTCAC.1  CGAAGACTCCCTTG.1  CGAAGACTCGTTAG.1  CGAAGACTCTGTGA.1 \n##                 6                 1                 7                 6 \n##  CGAAGACTGGATTC.1  CGAAGACTGTCAAC.1  CGAAGGGAAAGTAG.1  CGAAGGGACACCAA.1 \n##         CD16 Mono                 2                 2                 5 \n##  CGAAGGGAGACACT.1  CGAAGGGAGCTGTA.1  CGAAGGGATCAGGT.1  CGAAGGGATCGTTT.1 \n##                 9                 2                 2                 0 \n##  CGAAGGGATGCTAG.1  CGAAGGGATGGTGT.1  CGAAGTACCCACAA.1  CGAAGTACCCTTGC.1 \n##                 1                 8                 1                 1 \n##  CGAAGTACTCCTAT.1  CGAATCGACATACG.1  CGAATCGACTGATG.1  CGACAAACAGTAGA.1 \n##         CD16 Mono         CD16 Mono                 1                 2 \n##  CGACAAACCCAAGT.1  CGACCACTCGAGTT.1  CGACCGGAGCGGAA.1  CGACCGGAGGTAAA.1 \n##         CD16 Mono                 9                 0                 1 \n##  CGACCGGAGTTCGA.1  CGACCTACCGGTAT.1 CGACCTACCTTCCG.11  CGACCTACTGCAGT.1 \n##                 0                 0                 2                 0 \n##  CGACCTACTGTAGC.1  CGACCTTGAACCGT.1  CGACCTTGCTAGAC.1  CGACCTTGGCTTCC.1 \n##                 1                 0                 2                 0 \n##  CGACCTTGGGACTT.1  CGACCTTGGGAGCA.1  CGACCTTGTGCACA.1  CGACCTTGTGCTAG.1 \n##                 0                 1                 1                 0 \n##  CGACCTTGTTATCC.1  CGACGTCTACCGAT.1  CGACGTCTAGGAGC.1  CGACGTCTCGAATC.1 \n##                 1         CD16 Mono                 1                 6 \n##  CGACGTCTGGAGCA.1  CGACTCACATTTCC.1  CGACTCACCACTTT.1  CGACTCTGATACCG.1 \n##                 1                 5                 7                 0 \n##  CGACTCTGCCTTAT.1  CGACTCTGGTATGC.1 CGACTCTGGTTTCT.11  CGACTCTGTCCGAA.1 \n##                 1                 1                 2                 0 \n##  CGACTCTGTGAGGG.1  CGACTGCTCGCCTT.1  CGACTGCTGGACGA.1  CGAGAACTATTCGG.1 \n##                 0                 1                 1                 2 \n##  CGAGAACTCCCTTG.1  CGAGATTGACACGT.1  CGAGATTGACCCTC.1  CGAGATTGATAAGG.1 \n##                 0                 8                 2                 6 \n##  CGAGATTGATTTCC.1  CGAGATTGCAGATC.1  CGAGATTGCTCGAA.1  CGAGATTGTCTCCG.1 \n##                 9                 7                 5                 1 \n##  CGAGCCGAAAGGGC.1  CGAGCCGAATTTCC.1  CGAGCCGACCTTCG.1  CGAGCCGAGGGAGT.1 \n##                 3         CD16 Mono                 1                 2 \n##  CGAGCCGATGAAGA.1  CGAGCGTGATCGTG.1  CGAGGAGACCGTTC.1  CGAGGAGACTTTAC.1 \n##                 6                 5                 5         CD16 Mono \n##  CGAGGAGAGAGAGC.1  CGAGGAGAGCTCCT.1  CGAGGAGATTATCC.1  CGAGGAGATTCATC.1 \n##                 0         CD16 Mono                 1                 2 \n##  CGAGGCACATCGGT.1  CGAGGCACATTGGC.1  CGAGGCACCATGGT.1  CGAGGCACGCGTTA.1 \n##                 0                 5         CD16 Mono                 5 \n##  CGAGGCACGGGTGA.1  CGAGGCACTGTTCT.1  CGAGGCTGCAGCTA.1  CGAGGCTGCGCCTT.1 \n##                 0                 0                 7                 1 \n##  CGAGGGCTAGTACC.1  CGAGGGCTCTGACA.1  CGAGGGCTCTGATG.1  CGAGGGCTTAAAGG.1 \n##         CD16 Mono                 1                 0                13 \n##  CGAGTATGTTCTGT.1  CGATACGAATTCGG.1  CGATACGAGAATCC.1  CGATAGACATGGTC.1 \n##         CD16 Mono                 1                 0                 0 \n##  CGATAGACATTCTC.1  CGATAGACCCCAAA.1  CGATAGACGCCCTT.1  CGATAGACGTTGGT.1 \n##                 2                 3                 9                 0 \n##  CGATAGACTCATTC.1  CGATAGACTGCCTC.1  CGATCAGAGAACTC.1  CGATCAGAGTTAGC.1 \n##                 0                 0                 0                 0 \n##  CGATCAGATCGTGA.1  CGATCCACAGAGGC.1  CGATCCACCCATAG.1  CGATCCACCCTCGT.1 \n##                 6                 8                 9                 0 \n##  CGATCCACCTTGGA.1  CGATCCACGGAGGT.1  CGATCCACTACTTC.1  CGATCCACTGGCAT.1 \n##                 6                 3                 9                 0 \n##  CGATCCACTGTCGA.1  CGCAAATGACTCTT.1  CGCAAATGAGTCTG.1  CGCAAATGATAAGG.1 \n##                 0                 6                 0                10 \n##  CGCAAATGCACTGA.1  CGCAAATGGTTCTT.1  CGCAAATGTTGTGG.1  CGCAACCTAGTTCG.1 \n##                 1                 2                 7                 7 \n##  CGCAACCTATCAGC.1  CGCAACCTCACCAA.1  CGCAACCTCTTTAC.1  CGCAACCTGCTTCC.1 \n##                11                 0                 1         CD16 Mono \n##  CGCAACCTGGAGTG.1  CGCAACCTTCCGTC.1  CGCACGGAAATCGC.1  CGCACGGAAGCGGA.1 \n##                 0                 3                 2         CD16 Mono \n##  CGCACGGACAACCA.1 CGCACGGACGAATC.11  CGCACGGACGTAAC.1  CGCACGGACTTATC.1 \n##                 0                 1                 0                 1 \n##  CGCACGGATCGTTT.1  CGCACTACCAGCTA.1  CGCACTACTTCTTG.1  CGCACTTGAAAGCA.1 \n##                 1                 2                 0                 5 \n##  CGCACTTGACGACT.1  CGCACTTGACTAGC.1  CGCACTTGCAGTTG.1  CGCACTTGCCTGTC.1 \n##                 7                 6                 7                 2 \n##  CGCACTTGGCGAAG.1  CGCACTTGTCAGTG.1  CGCACTTGTGGTAC.1  CGCAGGACCTTGGA.1 \n##                 2                 8         CD16 Mono                 6 \n##  CGCAGGACGAAAGT.1  CGCAGGACTCTCCG.1 CGCAGGTGACGCTA.11  CGCAGGTGAGAAGT.1 \n##                 5                 1                 0                 0 \n##  CGCAGGTGCATGGT.1  CGCAGGTGCCTCAC.1  CGCAGGTGTGTGCA.1  CGCAGGTGTTTCAC.1 \n##                 1                 0                 0                 2 \n##  CGCATAGACTCCAC.1  CGCATAGACTGAAC.1  CGCATAGACTGTTT.1  CGCATAGATCCCAC.1 \n##                 1                 1                 0                 0 \n##  CGCATAGATGCAAC.1  CGCATAGATTTGTC.1  CGCCATACAATGCC.1  CGCCATACTGACCA.1 \n##                 1                 0                 8                 0 \n##  CGCCATTGTGTCAG.1  CGCCGAGAACTACG.1  CGCCGAGACCTCGT.1  CGCCGAGACGATAC.1 \n##                 0                 1         CD16 Mono                 2 \n##  CGCCGAGAGAATCC.1  CGCCGAGAGAGATA.1  CGCCGAGATCTAGG.1  CGCCGAGATGGCAT.1 \n##                 6                 6                 5                 1 \n##  CGCCTAACAAGCCT.1  CGCCTAACCAGATC.1  CGCCTAACCAGCTA.1  CGCCTAACCCTACC.1 \n##                 1                 2                 1                 9 \n##  CGCCTAACCGGTAT.1  CGCGAGACTAAGGA.1  CGCGATCTACGACT.1  CGCGATCTCTGCTC.1 \n##                 2                 1         CD16 Mono                 0 \n##  CGCGATCTGTGTCA.1  CGCGATCTTCCAAG.1  CGCGGATGCCACAA.1  CGCGGATGGCATCA.1 \n##                 0                 0                 0                 1 \n##  CGCGGATGGGACTT.1  CGCTAAGAAAGGCG.1 CGCTAAGAATTCCT.11  CGCTAAGAGGTATC.1 \n##         CD16 Mono         CD16 Mono                 7                 3 \n##  CGCTAAGAGTCATG.1  CGCTAAGAGTTGAC.1  CGCTAAGATGGTAC.1  CGCTACACACTACG.1 \n##                 0                 0                 0                 5 \n##  CGCTACACAGTACC.1  CGCTACACCCACCT.1  CGCTACACCTCAAG.1  CGCTACACGCGATT.1 \n##         CD16 Mono                 9                 9                 1 \n##  CGCTACACTTCTTG.1  CGCTACACTTTGCT.1  CGCTACTGACTGTG.1  CGCTACTGAGAGAT.1 \n##                 7                 0                 8                 0 \n##  CGCTACTGCCATGA.1  CGCTACTGCGCAAT.1  CGCTACTGCGTTGA.1  CGCTACTGCTAGAC.1 \n##                 3         CD16 Mono                 1                11 \n##  CGCTACTGCTATGG.1  CGCTACTGGAACTC.1  CGCTACTGGCAAGG.1  CGCTCATGCTTCCG.1 \n##                 8                 5                 0         CD16 Mono \n##  CGCTCATGTATCGG.1  CGCTCATGTGACTG.1  CGCTCATGTTCGGA.1  CGGAATTGAGTGCT.1 \n##                 2                 2                 1                 7 \n##  CGGAATTGCTGTCC.1  CGGAATTGCTGTTT.1  CGGAATTGTTATCC.1  CGGACCGAAGCAAA.1 \n##                 1                 1                 6                 1 \n##  CGGACCGAAGGTCT.1  CGGACCGAATGGTC.1  CGGACCGACCTCAC.1  CGGACCGACGAGTT.1 \n##                 1                 6                 0                 9 \n##  CGGACTCTACCTTT.1  CGGACTCTCCAAGT.1  CGGAGGCTACCCAA.1  CGGAGGCTAGCGTT.1 \n##                 2                 3                 7                 5 \n##  CGGAGGCTAGGGTG.1  CGGAGGCTCGCATA.1  CGGAGGCTGGCAAG.1  CGGAGGCTGGGCAA.1 \n##         CD16 Mono         CD16 Mono                 8                 5 \n##  CGGATAACACACCA.1  CGGATAACCGTTAG.1 CGGATAACCTTCCG.11  CGGATAACCTTGTT.1 \n##                 9                 0                 2                 5 \n##  CGGATAACGACAGG.1  CGGATAACGACGGA.1  CGGATAACTTTACC.1  CGGATATGAAGCCT.1 \n##                 0                 7                 2                 3 \n##  CGGATATGACTACG.1  CGGATATGAGTCAC.1  CGGATATGCGAACT.1  CGGATATGCTGGAT.1 \n##                 3                 0                 0                 3 \n##  CGGATATGGGCAAG.1  CGGCACGAAGGAGC.1  CGGCACGACTACCC.1  CGGCACGAGGACAG.1 \n##                 0                 0                 0                 5 \n##  CGGCACGATTCGCC.1  CGGCACGATTTGCT.1  CGGCATCTAAAACG.1  CGGCATCTAAGTGA.1 \n##                 3                 3                 1                 3 \n##  CGGCATCTCCTCGT.1  CGGCATCTCTATTC.1  CGGCATCTGCATAC.1  CGGCATCTTAACCG.1 \n##                 3                 1                 2                 0 \n##  CGGCCAGAAACCTG.1  CGGCCAGACCTAAG.1  CGGCCAGATATGGC.1  CGGCCAGATCTTAC.1 \n##         CD16 Mono                 6                 7                 1 \n##  CGGCGAACATCTCT.1  CGGCGAACGAATAG.1  CGGCGAACTCTCTA.1  CGGCGATGAAACGA.1 \n##         CD16 Mono                 1                 9                 2 \n##  CGGCGATGCATGGT.1  CGGCGATGCTACCC.1  CGGCGATGTCCAGA.1  CGGCGATGTTCTCA.1 \n##                 0                 0                 0                 5 \n##  CGGGACTGAGTCAC.1  CGGGCATGACACGT.1  CGGGCATGAGACTC.1  CGGGCATGCATACG.1 \n##                 0                 1                 1         CD16 Mono \n##  CGGGCATGCGTACA.1  CGGGCATGCGTAGT.1  CGGGCATGCTACTT.1  CGGGCATGCTCAGA.1 \n##                 3                 2                 6                 3 \n##  CGGGCATGGGAGTG.1  CGGGCATGTGCCCT.1  CGGGCATGTGTTCT.1  CGGTAAACACGTTG.1 \n##                 1                 3                 5                 5 \n##  CGGTAAACAGTACC.1  CGGTAAACCCACCT.1  CGGTAAACGAAAGT.1  CGGTAAACGACGGA.1 \n##                 2                 1                 1                 2 \n##  CGGTAAACGTTAGC.1  CGGTACCTAATGCC.1  CGGTACCTCAGATC.1  CGGTACCTTGGAAA.1 \n##                 0                 1                 1                 2 \n##  CGGTACCTTTACTC.1  CGGTACCTTTGAGC.1  CGGTCACTAGCACT.1  CGGTCACTATCGAC.1 \n##                 8                 0                 0                10 \n##  CGGTCACTGGGATG.1  CGGTCACTTCGCAA.1  CGTAACGACCCTCA.1  CGTAACGAGCATCA.1 \n##                 8                 2                 2                10 \n##  CGTAACGAGGACTT.1  CGTAACGAGGCATT.1  CGTAACGATACAGC.1  CGTAACGATCGCAA.1 \n##                 1                 1                 0                 0 \n##  CGTACAGAACGCTA.1  CGTACAGAATGGTC.1  CGTACAGATACGCA.1  CGTACCACAGATGA.1 \n##                 5                 1                 0                 2 \n##  CGTACCACATAAGG.1  CGTACCACCCATAG.1  CGTACCACCGGTAT.1  CGTACCACTAAAGG.1 \n##                 0                 5                 1                 0 \n##  CGTACCACTCCGTC.1  CGTACCACTTGCTT.1  CGTACCACTTTCGT.1  CGTACCTGACAGTC.1 \n##                 1                 0                 5                 2 \n##  CGTACCTGCGTGTA.1  CGTACCTGCTGGTA.1  CGTACCTGCTTGGA.1  CGTACCTGGAAACA.1 \n##                 3                 0         CD16 Mono                 0 \n##  CGTACCTGGTGCAT.1  CGTACCTGTCCTTA.1  CGTACCTGTGGAAA.1  CGTAGCCTAAACGA.1 \n##                 2                 3         CD16 Mono                 6 \n##  CGTAGCCTCCGTTC.1 CGTAGCCTCGTTGA.11  CGTAGCCTCTGAAC.1  CGTAGCCTGGGTGA.1 \n##                 1                 3                 7                 0 \n##  CGTAGCCTGTAGCT.1  CGTAGCCTTCAGAC.1  CGTAGCCTTCTTCA.1  CGTAGCCTTTGGTG.1 \n##                 0                 3                 2                 1 \n##  CGTCAAGAAGCCAT.1  CGTCAAGACCCTCA.1  CGTCAAGATGGGAG.1  CGTCAAGATGGTCA.1 \n##                 0         CD16 Mono                 7                 5 \n##  CGTCCAACATCGAC.1  CGTCCAACCTTCCG.1  CGTCCATGACTCAG.1  CGTCCATGCAGATC.1 \n##                 1                 1                 1                 7 \n##  CGTCCATGCCGTAA.1  CGTCCATGCCTCCA.1  CGTCCATGCTGTGA.1 CGTCCATGGCGATT.11 \n##                 5                 0                 0                 3 \n##  CGTCCATGGGTAAA.1  CGTCCATGTGCCCT.1  CGTCGACTAGCGTT.1  CGTCGACTCTACCC.1 \n##                 6         CD16 Mono                 0                 0 \n##  CGTCGACTCTCAGA.1  CGTCGACTTAAAGG.1  CGTCGACTTTCTTG.1  CGTGAAACAGTTCG.1 \n##                 0                 3         CD16 Mono                 1 \n##  CGTGAAACCGTTAG.1  CGTGAAACGAGACG.1  CGTGAAACTGAGCT.1  CGTGAATGAAGGGC.1 \n##         CD16 Mono                 1                 3                 0 \n##  CGTGAATGACCTGA.1  CGTGAATGAGCCTA.1  CGTGAATGAGTCGT.1  CGTGAATGCATGCA.1 \n##                 3                 0                 0                 6 \n##  CGTGAATGGGTATC.1  CGTGAATGGTATCG.1  CGTGAATGTCTTTG.1  CGTGATGAAGTCTG.1 \n##                 3                 0         CD16 Mono                 2 \n##  CGTGATGACGTCTC.1  CGTGATGACTTCTA.1  CGTGATGATGGTGT.1  CGTGCACTCTATGG.1 \n##                 0                 0                 2                 3 \n##  CGTGCACTGCTAAC.1  CGTGCACTTTCGCC.1  CGTGTAGACCAACA.1  CGTGTAGACGTGAT.1 \n##                 0                 1                 6                 9 \n##  CGTTAACTTAGCGT.1  CGTTAGGAAACCTG.1  CGTTAGGAGCCAAT.1  CGTTAGGAGTATCG.1 \n##                 2                 2                 0                 7 \n##  CGTTATACACAGTC.1  CGTTATACGAGCAG.1  CGTTATACGCGATT.1  CGTTATACGTCTAG.1 \n##                 0                 2                 3                 1 \n##  CGTTATACTGAAGA.1  CGTTATACTTCTCA.1  CGTTTAACAGCGTT.1  CGTTTAACCTCATT.1 \n##                 2                 3                 2         CD16 Mono \n##  CGTTTAACGTGAGG.1  CTAAACCTAAGAAC.1  CTAAACCTCAGTCA.1  CTAAACCTCGCATA.1 \n##                 7         CD16 Mono                 9                 6 \n##  CTAAACCTCTGAAC.1  CTAAACCTGTACGT.1  CTAACACTACACCA.1  CTAACACTACCACA.1 \n##                 6                 0                 0                 1 \n##  CTAACACTAGATGA.1  CTAACACTGCTAAC.1  CTAACACTGGAGGT.1  CTAACACTTACAGC.1 \n##                 5                 1                10         CD16 Mono \n## CTAACACTTGTGAC.11  CTAACGGACAACCA.1  CTAACGGACCGCTT.1  CTAACGGAGAAAGT.1 \n##                 2                 3                 8                 3 \n##  CTAACGGATTTGTC.1  CTAACTACAACCAC.1  CTAACTACCCTGTC.1  CTAACTACTCACGA.1 \n##                 0                 1                 1                 7 \n##  CTAAGGACACCTGA.1  CTAAGGACAGTCGT.1  CTAAGGACCACCAA.1  CTAAGGACCCATAG.1 \n##                 1                 2                10                 1 \n##  CTAAGGACTCATTC.1  CTAAGGACTCGTGA.1  CTAAGGACTGGTGT.1  CTAAGGTGGAAAGT.1 \n##                 6                 7                 3                 0 \n##  CTAAGGTGGTGTAC.1  CTAAGGTGGTTGTG.1  CTAATAGAAGGTTC.1  CTAATAGACGAATC.1 \n##                 1                 1                10                 3 \n##  CTAATAGACTCCCA.1  CTAATAGAGGGACA.1  CTAATAGAGTACCA.1  CTAATAGATGGTTG.1 \n##                 1                 1         CD16 Mono         CD16 Mono \n##  CTAATGCTAAGGGC.1 CTAATGCTAGCGGA.11  CTAATGCTCAGAAA.1  CTAATGCTCCTAAG.1 \n##         CD16 Mono                 0                 0                 2 \n##  CTAATGCTGAACTC.1  CTAATGCTGGATTC.1  CTAATGCTTCCGAA.1  CTAATGCTTCTCTA.1 \n##                 8                 0                 2                 2 \n##  CTAATGCTTGTCCC.1  CTACAACTACACTG.1  CTACAACTGAGACG.1  CTACAACTGGCAAG.1 \n##                 1                 0                 1                 5 \n##  CTACAACTGTATCG.1  CTACAACTTCCCGT.1  CTACCTCTATCACG.1  CTACCTCTCCTTGC.1 \n##                 0         CD16 Mono                 5                 1 \n##  CTACCTCTCTTTAC.1  CTACCTCTGTTGTG.1  CTACCTCTTATCGG.1  CTACGCACCGTAGT.1 \n##                 6                 0                 0                 6 \n##  CTACGCACGAGGCA.1  CTACGCACGTCATG.1  CTACGCACGTGTAC.1  CTACGGCTTATGCG.1 \n##                 0                 6                 0                 5 \n##  CTACGGCTTCCCAC.1  CTACGGCTTTTCGT.1  CTACTATGCCCACT.1  CTACTATGCGACAT.1 \n##                 0                 0                 3                 0 \n##  CTACTATGCTTGGA.1  CTACTATGTGCTCC.1  CTACTATGTGTCCC.1  CTACTCCTACTCAG.1 \n##                 0                 1                 1                 1 \n##  CTACTCCTATCGGT.1  CTACTCCTGCTTCC.1  CTACTCCTGGTAGG.1  CTACTCCTGGTGGA.1 \n##                 5                 1                 1                 1 \n##  CTAGAGACGCTAAC.1  CTAGAGACGTCTGA.1  CTAGAGACGTTCGA.1  CTAGAGACTCCTAT.1 \n##                 9                 8                 0                 3 \n##  CTAGGATGACGGTT.1  CTAGGATGAGTAGA.1  CTAGGATGATGCTG.1  CTAGGATGCCCTAC.1 \n##                 7                 8         CD16 Mono                 5 \n##  CTAGGATGCTAGCA.1  CTAGGATGGAGATA.1  CTAGGATGGCCATA.1  CTAGGATGTGCCCT.1 \n##                 2                 0                 0                 1 \n##  CTAGGATGTGCGTA.1  CTAGGCCTAAACAG.1  CTAGGCCTCACTCC.1  CTAGGCCTCCGAAT.1 \n##                 0                 1                 0                 1 \n##  CTAGGCCTCCTATT.1  CTAGGCCTGGTATC.1  CTAGGTGATAAGCC.1  CTAGGTGATGGAAA.1 \n##                 8                 1                 5                 0 \n##  CTAGTTACACCCAA.1  CTAGTTACAGAGAT.1  CTAGTTACCAGAAA.1  CTAGTTACCTATTC.1 \n##                 0                 0                 0                 1 \n##  CTAGTTACGGGACA.1  CTAGTTACGTCTGA.1 CTAGTTACTGGTAC.11  CTAGTTTGAATGCC.1 \n##                 0                 1                 5                 0 \n##  CTAGTTTGCTAGAC.1  CTAGTTTGGAGATA.1  CTAGTTTGGCCAAT.1  CTAGTTTGGGTGTT.1 \n##                 5                 2                 2                 2 \n##  CTAGTTTGTACTGG.1  CTAGTTTGTAGCGT.1  CTATAAGATAAAGG.1  CTATACTGCCCGTT.1 \n##                 2                 1                 6                 0 \n##  CTATACTGCTACCC.1  CTATACTGGAGAGC.1  CTATACTGTATCTC.1  CTATAGCTACACGT.1 \n##                 3                 0                 0                 1 \n##  CTATAGCTAGAAGT.1  CTATAGCTCATGGT.1  CTATAGCTGGCATT.1  CTATCAACCAACTG.1 \n##                 1                 1                 2         CD16 Mono \n##  CTATCAACCTACGA.1  CTATCAACCTGTTT.1  CTATCAACCTTAGG.1  CTATCAACGAATCC.1 \n##                 3         CD16 Mono                10                 1 \n##  CTATCATGGAATAG.1  CTATCATGGGACAG.1  CTATCATGTCCGAA.1  CTATCATGTCTAGG.1 \n##                 0                 2                 6                 1 \n## CTATCATGTTGGTG.11  CTATCATGTTTCTG.1  CTATCCCTAAGTGA.1  CTATCCCTAGATCC.1 \n##                 9                 1                 0                 3 \n##  CTATCCCTATGACC.1  CTATCCCTATGCCA.1  CTATCCCTATTCTC.1  CTATCCCTCATTTC.1 \n##                 1                 1         CD16 Mono                 0 \n##  CTATGACTCGTAAC.1  CTATGACTCTAGAC.1  CTATGACTGAGCTT.1 CTATGACTGCTACA.11 \n##                 5                 7                 1                 0 \n##  CTATGACTGGCGAA.1  CTATGACTGTACAC.1  CTATGACTTTCTCA.1  CTATGTACAAAGCA.1 \n##                 1                 3                 0                 0 \n##  CTATGTACCGTGTA.1  CTATGTACTACTTC.1  CTATGTACTGTGAC.1  CTATGTACTTTCGT.1 \n##         CD16 Mono                 1                 0                 6 \n## CTATGTTGGGAGCA.11  CTATGTTGTGCCCT.1  CTATGTTGTGGTTG.1  CTATTGACCTAGCA.1 \n##                 5                 1                 5                 1 \n##  CTATTGACCTGATG.1  CTATTGTGAAAGCA.1  CTATTGTGATCACG.1  CTATTGTGATCGTG.1 \n##                 1                 0                 0                 5 \n##  CTATTGTGCGTTGA.1  CTCAATTGCCTGTC.1  CTCAATTGGACTAC.1  CTCAATTGGTAGCT.1 \n##                 0                 0                 0                 2 \n##  CTCAATTGTTGCGA.1  CTCAGAGAAGAAGT.1  CTCAGAGACTGAAC.1  CTCAGAGACTTATC.1 \n##                 6                 1                 3                 6 \n##  CTCAGAGAGGATTC.1  CTCAGAGATCGACA.1  CTCAGCACCAGCTA.1  CTCAGCACCCAACA.1 \n##         CD16 Mono                 0                 7                 0 \n##  CTCAGCACCCTATT.1  CTCAGCACCTGTTT.1  CTCAGCACGCGGAA.1  CTCAGCACTCCGAA.1 \n##                 1                 0                 5                 0 \n##  CTCAGCACTCGCCT.1  CTCAGCTGACAGCT.1  CTCAGCTGCGTCTC.1  CTCAGCTGTTTCTG.1 \n##                 3                 1                 2                 1 \n##  CTCAGGCTACGACT.1  CTCAGGCTAGCCTA.1  CTCAGGCTCTGAAC.1  CTCAGGCTTAACGC.1 \n##                 1                 1                 3                 0 \n##  CTCAGGCTTTCGGA.1  CTCAGGCTTTGACG.1  CTCATTGAGCTATG.1  CTCATTGAGGGATG.1 \n##                 1                 2                 0                 7 \n##  CTCATTGATCGACA.1  CTCATTGATGGGAG.1 CTCCACGAACGGGA.11  CTCCACGATTGACG.1 \n##                10                 0                 2                 2 \n##  CTCCATCTGATACC.1  CTCCATCTTAGAGA.1  CTCCATCTTTCTGT.1  CTCCGAACAGCAAA.1 \n##                 1                 1                 1                 0 \n##  CTCCGAACTAAAGG.1  CTCCGAACTAGAAG.1  CTCCGAACTCCCGT.1  CTCCTACTGTCTAG.1 \n##                 1                 6         CD16 Mono                 1 \n##  CTCCTACTTCCGTC.1  CTCGAAGAACACAC.1  CTCGAAGAAGGCGA.1  CTCGAAGACTAAGC.1 \n##                 1                 1                 7                 1 \n##  CTCGAAGAGAGATA.1  CTCGACACCGCAAT.1  CTCGACACGTGTAC.1  CTCGACACTACGCA.1 \n##                 2                 0                 7                 2 \n##  CTCGACACTCCAAG.1  CTCGACTGTCGATG.1 CTCGACTGTTCACT.11  CTCGAGCTCAGGAG.1 \n##                 0                 1                 0                 3 \n##  CTCGAGCTCCTGAA.1  CTCGAGCTCTCTTA.1  CTCGAGCTGATGAA.1  CTCGAGCTGGAGGT.1 \n##                 3                 1                 6                 0 \n##  CTCGAGCTGGTAGG.1  CTCGAGCTTCCGAA.1  CTCGAGCTTTGTCT.1  CTCGCATGTCGACA.1 \n##                 1                10                 8         CD16 Mono \n##  CTCGCATGTTCGTT.1  CTCGCATGTTGACG.1  CTCTAAACACTGTG.1  CTCTAAACATCTCT.1 \n##                 0                 0                 0                 1 \n##  CTCTAAACGAGCAG.1  CTCTAAACGTGCAT.1  CTCTAATGCCTCGT.1  CTCTAATGGAATCC.1 \n##                 0                 5         CD16 Mono                 0 \n##  CTCTAATGGACAGG.1  CTCTAATGGCCCTT.1  CTGAACGACCAAGT.1  CTGAACGACGCCTT.1 \n##                 5                 1                 0                 0 \n##  CTGAACGACTGGAT.1  CTGAACGATTCATC.1  CTGAACGATTCCCG.1  CTGAAGACCACACA.1 \n##                 9                 0                 9                 1 \n##  CTGAAGACCATGGT.1  CTGAAGACCCTCAC.1  CTGAAGACGAGCTT.1  CTGAAGTGACGTGT.1 \n##                 5                 1                 9                 0 \n##  CTGAAGTGGCTTCC.1  CTGAAGTGTGCACA.1  CTGAAGTGTTTCAC.1  CTGAATCTAAACAG.1 \n##                 0                 3                 1                 1 \n##  CTGAATCTAGAGAT.1  CTGAATCTAGATGA.1  CTGAATCTGGAACG.1  CTGAATCTTAAGCC.1 \n##                 1                 0                 6                 2 \n##  CTGAATCTTCGCAA.1  CTGAATCTTGGCAT.1  CTGACAGACAACCA.1  CTGACAGACAACTG.1 \n##                 0                 0                 5                 5 \n##  CTGACAGACCAGTA.1  CTGACCACACAGCT.1  CTGACCACGGTATC.1  CTGACCACGTAGGG.1 \n##         CD16 Mono                 5                 8                 9 \n## CTGACCACTGAGCT.11  CTGACCACTGGCAT.1  CTGACCACTGGTGT.1  CTGAGAACCATCAG.1 \n##                 1                 2                 7                 3 \n##  CTGAGAACCCTGTC.1  CTGAGAACCTTGTT.1  CTGAGCCTCTGTTT.1  CTGAGCCTGAGGTG.1 \n##         CD16 Mono                 1                13                 2 \n##  CTGAGCCTTACGCA.1  CTGAGCCTTCTCAT.1  CTGAGCCTTGACAC.1  CTGATACTCACTTT.1 \n##                 1                 1                 5                 1 \n##  CTGATACTCCTTGC.1  CTGATACTCTGTTT.1  CTGATACTTAGAGA.1  CTGATACTTGCAAC.1 \n##                 2                 0                 3                 0 \n##  CTGATACTTTCATC.1  CTGATACTTTGACG.1  CTGATGGAAATGCC.1  CTGATGGACTATGG.1 \n##                 5                 1                 1                 5 \n##  CTGATTTGAACGGG.1  CTGATTTGCAGGAG.1  CTGATTTGCTTATC.1  CTGATTTGGACAGG.1 \n##                 3                 3         CD16 Mono                 3 \n##  CTGATTTGGTGAGG.1  CTGATTTGTCACCC.1  CTGATTTGTCTCCG.1  CTGCAGCTTAGACC.1 \n##                 0                 3                 2                 6 \n##  CTGCAGCTTGAAGA.1  CTGCAGCTTTGGCA.1  CTGCCAACCCATAG.1  CTGCCAACCCATGA.1 \n##                 0                10                 0                 7 \n##  CTGCCAACCCCTAC.1  CTGCCAACCTAAGC.1  CTGCCAACTTGTCT.1  CTGCGACTTGAAGA.1 \n##                 3         CD16 Mono                 2                 1 \n##  CTGGAAACACACGT.1  CTGGAAACACCACA.1  CTGGAAACATGTCG.1  CTGGAAACCACTTT.1 \n##         CD16 Mono                 3                 1                 1 \n##  CTGGAAACGGAGGT.1  CTGGATGAAGTAGA.1  CTGGATGAGACAAA.1  CTGGATGAGAGGTG.1 \n##                 1                 1                 0                 7 \n##  CTGGATGAGCTACA.1  CTGGATGATAAGGA.1  CTGGATGATACTCT.1  CTGGATGATGACCA.1 \n##                 7                 0                 1                 2 \n##  CTGGATGATGTTCT.1  CTGGATGATTATCC.1  CTGGCACTCCGTAA.1  CTGGCACTCCTCCA.1 \n##                 2                 1                 0                 0 \n##  CTGGCACTCTTGCC.1  CTGGCACTGAGAGC.1  CTGGCACTGTCGTA.1  CTGTAACTATGTGC.1 \n##                 2                 7                 5         CD16 Mono \n##  CTGTAACTTCACCC.1  CTGTAACTTGGTAC.1  CTGTATACAGACTC.1  CTGTATACCCTGTC.1 \n##                 5                 2                 1                 6 \n##  CTGTATACGTATGC.1  CTGTATACTGCTCC.1  CTGTGAGAATGCCA.1  CTGTGAGAGGCATT.1 \n##                 1                 5                 0                 1 \n##  CTGTGAGATCTCTA.1  CTGTGAGATGTCTT.1  CTTAAAGAAAAGCA.1  CTTAAAGAACGTGT.1 \n##                 3                 3                 0                 1 \n##  CTTAAAGACTATTC.1  CTTAAAGAGTAGCT.1  CTTAAAGATATGCG.1  CTTAAAGATGTCTT.1 \n##                 1                 1         CD16 Mono                 7 \n##  CTTAAAGATTTCTG.1  CTTAACACAGCCAT.1  CTTAACACAGTTCG.1  CTTAAGCTACGTTG.1 \n##         CD16 Mono                 8                 1         CD16 Mono \n##  CTTAAGCTGGTACT.1  CTTAAGCTTATGGC.1  CTTACAACACGTGT.1  CTTACAACACGTTG.1 \n##                 5                 3                 2                 2 \n##  CTTACAACCTTAGG.1  CTTACAACGCGAGA.1  CTTACAACGCTATG.1  CTTACAACTGGTCA.1 \n##         CD16 Mono                 0                 0                 5 \n##  CTTACAACTTGGCA.1  CTTACAACTTTCTG.1  CTTACATGCCATGA.1  CTTACATGCGAATC.1 \n##                 0                 2                 5                 9 \n##  CTTACATGCGCAAT.1  CTTACATGCGTTAG.1  CTTACATGGTTAGC.1  CTTACATGGTTCAG.1 \n##                 1                12                 8                 5 \n##  CTTACATGTTTCTG.1  CTTACTGAAAGGGC.1  CTTACTGAACCACA.1  CTTACTGAACGCAT.1 \n##                 0                 6                 0                 5 \n##  CTTACTGACTCTTA.1  CTTACTGAGGAGGT.1  CTTACTGAGGTTAC.1 CTTACTGATTGTCT.11 \n##                 0                 3                12                 2 \n##  CTTAGACTAACCAC.1  CTTAGACTACCAGT.1  CTTAGACTACTACG.1  CTTAGACTCACCAA.1 \n##                 1                 0                 8                 0 \n##  CTTAGGGAAAAAGC.1  CTTAGGGACTGCAA.1  CTTAGGGATCGATG.1  CTTAGGGATGGTCA.1 \n##         CD16 Mono         CD16 Mono         CD16 Mono                 0 \n##  CTTATCGACAGCTA.1  CTTATCGAGATAAG.1  CTTATCGATTTCGT.1  CTTCACCTAGAAGT.1 \n##                 2                 2                 8                 0 \n##  CTTCACCTAGTGCT.1  CTTCACCTATGTGC.1  CTTCACCTCCCTTG.1  CTTCACCTCGACAT.1 \n##                 5                 1                 1                 1 \n##  CTTCACCTGTCGTA.1  CTTCACCTTAAGCC.1  CTTCACCTTCGACA.1  CTTCACCTTCTTTG.1 \n##                 2                 1                 0                 7 \n##  CTTCACCTTGACTG.1  CTTCACCTTGGTCA.1  CTTCATGAAACCTG.1  CTTCATGACTAGCA.1 \n##                 1                 2                 9                 0 \n##  CTTCATGAGGGTGA.1  CTTCATGATCTCAT.1  CTTCTAGAATGACC.1  CTTCTAGACTTGAG.1 \n##                 9                 7                 1                 1 \n##  CTTCTAGACTTGTT.1  CTTGAACTAACGGG.1  CTTGAACTATGACC.1  CTTGAACTCCTGAA.1 \n##                 3                 5                 3                 0 \n##  CTTGAACTCTGTAG.1  CTTGAACTGCCATA.1  CTTGAACTGCCCTT.1  CTTGAGGAAACCGT.1 \n##                 3                 9                 0                 5 \n##  CTTGAGGAAAGCAA.1  CTTGAGGAAGCTAC.1  CTTGAGGAATGGTC.1  CTTGAGGACTCAAG.1 \n##                 1                 0                 1                 1 \n##  CTTGAGGACTCATT.1  CTTGAGGATTGCAG.1  CTTGAGGATTGGTG.1  CTTGATTGAATGCC.1 \n##                 1                 0                 5                 1 \n##  CTTGATTGCTACCC.1  CTTGATTGGGTACT.1  CTTGATTGTAAGGA.1  CTTGATTGTACAGC.1 \n##                 1                 0                 1                 1 \n##  CTTGTATGACGACT.1  CTTGTATGATCGTG.1  CTTGTATGTCTATC.1  CTTTACGAAGCCAT.1 \n##                 1         CD16 Mono                 0                 5 \n##  CTTTACGACGAATC.1  CTTTACGACTTCCG.1  CTTTACGAGTTAGC.1  CTTTACGATTCATC.1 \n##                 5                 2                 2                 7 \n##  CTTTAGACGACTAC.1  CTTTAGACGTCACA.1  CTTTAGACTCGCAA.1 CTTTAGACTGGGAG.11 \n##                 3                 5                 3                 7 \n##  CTTTAGTGCTACCC.1  CTTTAGTGCTTTAC.1  CTTTAGTGGGTGTT.1  CTTTCAGACAACCA.1 \n##                 6                 1                 3                 9 \n##  CTTTCAGAGACGAG.1  CTTTCAGAGTGTCA.1  CTTTCAGATAGCCA.1  CTTTCAGATCTCCG.1 \n##                 3                 2                 1                 0 \n##  CTTTCAGATTTCTG.1  CTTTGATGCCGAAT.1  CTTTGATGGGGTGA.1  CTTTGATGGGTGGA.1 \n##                 3                 5         CD16 Mono         CD16 Mono \n##  CTTTGATGGTAGGG.1  CTTTGATGGTCACA.1  CTTTGATGGTGTTG.1 GAAACAGAAGTTCG.11 \n##                 1                 0                 5                 6 \n##  GAAACAGATACTTC.1  GAAACAGATGGGAG.1  GAAACAGATGGTAC.1  GAAACCTGCTATTC.1 \n##                 0                 1                 0                 8 \n##  GAAACCTGGCAAGG.1  GAAACCTGGTAAGA.1  GAAACCTGTCTTTG.1  GAAAGATGAGTACC.1 \n##                 7                 5                 7                 7 \n##  GAAAGATGCACTTT.1  GAAAGATGGGATCT.1  GAAAGATGGGCAAG.1  GAAAGATGTAAAGG.1 \n##                 0                 2                 7                 1 \n##  GAAAGTGAAGAAGT.1  GAAAGTGACGTCTC.1  GAAAGTGACTTCGC.1  GAAAGTGAGAATCC.1 \n##                 1                 1                 0                 3 \n##  GAAAGTGAGGTGTT.1  GAAAGTGATTCAGG.1  GAAATACTACCTCC.1  GAAATACTAGTCAC.1 \n##                10                 5                 1                 0 \n##  GAAATACTCGACTA.1  GAAATACTCTGAAC.1  GAAATACTGGTTTG.1  GAAATACTTGGGAG.1 \n##                 9                 1                 2         CD16 Mono \n##  GAAATACTTGGTAC.1  GAAATACTTTGCAG.1  GAACACACAGCCAT.1  GAACACACTGGTGT.1 \n##                 1                 0                 1                 0 \n##  GAACACACTTCAGG.1  GAACAGCTCACTGA.1  GAACAGCTGCCTTC.1  GAACAGCTGGACGA.1 \n##                 6         CD16 Mono                 9                 2 \n##  GAACAGCTGTACAC.1  GAACCAACCGGAGA.1  GAACCAACCTCCCA.1  GAACCTGAACACCA.1 \n##                 5                 0                 1                 1 \n##  GAACCTGATCAAGC.1  GAACGGGAACCACA.1  GAACGGGAATGCTG.1  GAACGGGACTCGAA.1 \n##                 0                 1                 0                 3 \n##  GAACGGGACTGATG.1  GAACGGGATACGAC.1  GAACGGGATGGTCA.1  GAACGTTGAAAGCA.1 \n##                 1                 9                 1         CD16 Mono \n##  GAACGTTGCTACTT.1  GAACGTTGTGAGAA.1  GAACGTTGTTCATC.1  GAACTGTGCGTTAG.1 \n##                 3                 3                 0                 2 \n##  GAACTGTGGTTGAC.1  GAACTGTGTAGAGA.1  GAACTGTGTATCGG.1  GAAGAATGATGTGC.1 \n##                 8                 3                 5                 0 \n##  GAAGAATGCTAGCA.1  GAAGAATGGCAGTT.1  GAAGAATGTACGCA.1  GAAGAATGTGAGCT.1 \n##                 3                 0                 3                 0 \n##  GAAGATGACTGAGT.1  GAAGATGACTTCCG.1  GAAGATGAGTATCG.1  GAAGATGATCAGTG.1 \n##                 0         CD16 Mono                 1                 2 \n##  GAAGATGATGGTTG.1  GAAGCGGAAAGATG.1  GAAGCGGAAAGGCG.1  GAAGCGGAAAGGTA.1 \n##                 1                 5                 2                 1 \n##  GAAGCGGAAGACTC.1  GAAGCGGACTTGCC.1  GAAGCGGAGCGGAA.1  GAAGCTACCAGAGG.1 \n##                 5                 2                 3                 5 \n##  GAAGCTACCAGGAG.1  GAAGCTACCCCTCA.1  GAAGCTACCCGCTT.1  GAAGCTACGTAGGG.1 \n##         CD16 Mono                 0         CD16 Mono         CD16 Mono \n##  GAAGCTTGACTACG.1  GAAGCTTGCCTTTA.1  GAAGCTTGTAACCG.1  GAAGCTTGTCCGTC.1 \n##                 0                 5                 0                 2 \n##  GAAGGGTGAGAAGT.1  GAAGGGTGAGCACT.1  GAAGGGTGATACCG.1  GAAGGGTGCATCAG.1 \n##                 3                 0                 0                 0 \n##  GAAGGGTGGAACCT.1  GAAGGGTGGACGGA.1  GAAGGTCTAGAAGT.1  GAAGGTCTAGTTCG.1 \n##                 0                 1         CD16 Mono                 0 \n##  GAAGGTCTATCGTG.1  GAAGGTCTGCAAGG.1  GAAGTAGAACGGGA.1  GAAGTAGACGTAAC.1 \n##                 8                 1                 1                 1 \n##  GAAGTAGACTGTAG.1  GAAGTAGAGTTGCA.1  GAAGTCACATCTTC.1  GAAGTCACCCAGTA.1 \n##                 0                 0                 7                 2 \n##  GAAGTCACGGACGA.1  GAAGTCACTCGTAG.1  GAAGTCTGAAACGA.1  GAAGTCTGACTCAG.1 \n##                 0                 3                 0                 0 \n##  GAAGTCTGCACTGA.1  GAAGTCTGCCTAAG.1  GAAGTCTGGTCATG.1  GAAGTCTGTTCACT.1 \n##                 5                 1                 6                11 \n##  GAAGTGCTAGCGTT.1  GAAGTGCTGTCTTT.1  GAATGCACCAGAAA.1  GAATGCACCATACG.1 \n##                 1                 0                 1                 0 \n##  GAATGCACGCTATG.1  GAATGCACGTTCGA.1  GAATGCACTTACCT.1  GAATGCTGCCACCT.1 \n##                 3                 2                 0                 1 \n##  GAATGCTGCCCACT.1  GAATGCTGGCTCCT.1  GAATGCTGTTCATC.1  GAATGGCTAGATCC.1 \n##                 0                 0                 3                 8 \n##  GAATGGCTATTCTC.1  GAATGGCTCCCTAC.1  GAATGGCTCTAAGC.1 GAATGGCTCTCAAG.11 \n##                 0         CD16 Mono         CD16 Mono                 2 \n##  GAATGGCTCTCATT.1  GAATGGCTGGTATC.1  GAATGGCTGTTCAG.1  GAATGGCTTCTCCG.1 \n##         CD16 Mono         CD16 Mono                 6                 8 \n##  GAATGGCTTGTCGA.1  GAATTAACACTTTC.1  GAATTAACTTCAGG.1  GACAACACACGTAC.1 \n##         CD16 Mono                 0                 1                 0 \n##  GACAACACCGTCTC.1  GACAACACGGAGTG.1  GACAACACGTTAGC.1  GACAACACTTGAGC.1 \n##                 0                 8                 1                 0 \n##  GACAACTGCCAATG.1  GACAACTGCCATAG.1  GACAACTGCGCTAA.1  GACAACTGCTAGTG.1 \n##                10                 8                 6                 2 \n##  GACAACTGTGCGTA.1  GACACTGAACTACG.1  GACACTGACTGTAG.1  GACACTGAGGTCAT.1 \n##                 0                 8                 0                 1 \n##  GACACTGATTCTAC.1  GACACTGATTTACC.1  GACAGGGATCGCCT.1  GACAGTACCAGTTG.1 \n##                 0                 1                 2                10 \n##  GACAGTACCATTTC.1  GACAGTACGCAAGG.1  GACAGTACGCTGTA.1  GACAGTACGTCAAC.1 \n##                 0                 7                 2                 3 \n##  GACAGTACTTCCGC.1  GACAGTTGCCTTAT.1  GACAGTTGGAAGGC.1  GACAGTTGTCAGAC.1 \n##                 9                 5                 2                 3 \n##  GACAGTTGTCCGAA.1  GACATTCTACAGTC.1  GACATTCTACCGAT.1  GACATTCTGACGAG.1 \n##                 2                 7                 1                 2 \n##  GACATTCTGAGCTT.1  GACATTCTGGAACG.1  GACATTCTGTTTGG.1  GACCAAACACGGGA.1 \n##                 3                 0                 5         CD16 Mono \n##  GACCAAACAGTGTC.1  GACCAAACATTGGC.1  GACCAAACCTACCC.1  GACCAAACGATAGA.1 \n##                 0         CD16 Mono                 0                 0 \n##  GACCAAACGTTCAG.1  GACCAAACTAGCGT.1  GACCATGAAAGGTA.1  GACCCTACATTCTC.1 \n##                 0                 2                 1                 0 \n##  GACCTAGAAAGCAA.1  GACCTAGACGCCTT.1  GACCTAGACGCTAA.1  GACCTCACAAGATG.1 \n##         CD16 Mono                 1                 0         CD16 Mono \n##  GACCTCACACCCAA.1  GACCTCACAGGGTG.1  GACCTCACGTATCG.1  GACCTCACTGCTAG.1 \n##                 1                 5                 0                 5 \n##  GACCTCACTGGTCA.1  GACCTCTGAGGGTG.1  GACCTCTGCTGAAC.1  GACCTCTGGTGCTA.1 \n##                 0                 0                 3         CD16 Mono \n##  GACCTCTGTCTTCA.1  GACCTCTGTGCTTT.1  GACCTCTGTTGCGA.1  GACGAACTCATCAG.1 \n##                 1                 5                 0                 2 \n##  GACGAACTTATCTC.1  GACGAACTTTTGTC.1  GACGAGGACATGAC.1  GACGAGGACCCGTT.1 \n##                 1                 1                 2                 0 \n##  GACGAGGACCGATA.1  GACGAGGACGTGAT.1  GACGAGGAGGACAG.1  GACGAGGAGGGACA.1 \n##                 6                 2                 3         CD16 Mono \n##  GACGAGGAGTCTAG.1  GACGAGGATGTGAC.1  GACGAGGATTGAGC.1  GACGATTGACGGGA.1 \n##         CD16 Mono                 1         CD16 Mono                 5 \n##  GACGATTGAGAGGC.1  GACGATTGCTTATC.1  GACGCCGAGCTGAT.1  GACGCCGAGGAGGT.1 \n##                 2                 0         CD16 Mono                 5 \n##  GACGCCGAGTGTAC.1  GACGCCGAGTTAGC.1  GACGCCGAGTTGAC.1  GACGCCGATTTCTG.1 \n##                 2                 5                 0         CD16 Mono \n##  GACGCTCTCGATAC.1  GACGCTCTCTGTGA.1  GACGCTCTGTGCTA.1  GACGCTCTTCCGAA.1 \n##         CD16 Mono                 1                 0         CD16 Mono \n##  GACGCTCTTGCTAG.1  GACGCTCTTGTGAC.1  GACGGCACACAGCT.1  GACGGCACGTTCAG.1 \n##                 1                 0                 1                 0 \n##  GACGGCACTTTACC.1  GACGTAACAAAAGC.1  GACGTAACACGTGT.1  GACGTAACCACACA.1 \n##                 6                 9                 0                 9 \n## GACGTAACCGCTAA.11  GACGTAACCGTTAG.1  GACGTAACGAATCC.1  GACGTAACGAGAGC.1 \n##                 0                10                 0                 1 \n##  GACGTAACGTAGGG.1  GACGTAACGTTTGG.1  GACGTAACTGCTAG.1  GACGTAACTGCTCC.1 \n##                 0                 5                 1                 0 \n##  GACGTATGACTAGC.1  GACGTATGCCGTTC.1  GACGTATGGAAACA.1  GACGTCCTAAGTAG.1 \n##                 2                 5                 1                 2 \n##  GACGTCCTATCTTC.1 GACGTCCTGAGGCA.11  GACGTCCTGCGATT.1  GACGTCCTGGTAGG.1 \n##                 1                 3                 1         CD16 Mono \n##  GACGTCCTTCTTCA.1  GACGTCCTTGAACC.1  GACGTCCTTGTTCT.1 GACGTCCTTTTCTG.11 \n##                 1                 1                 0                 8 \n##  GACTACGACCTTTA.1 GACTACGAGAGGGT.11  GACTACGAGTCTGA.1 GACTACGAGTGAGG.11 \n##                 0                 6                 1                 1 \n##  GACTACGATGTGAC.1  GACTACGATGTTTC.1  GACTACGATTCACT.1  GACTCCTGAACTGC.1 \n##                 0                 1                 0                 0 \n##  GACTCCTGCTTCTA.1  GACTCCTGGAGCAG.1  GACTCCTGGGTTTG.1  GACTCCTGTATCTC.1 \n##                 1                 8                 0                 0 \n##  GACTCCTGTGTAGC.1  GACTGAACAAGTGA.1  GACTGAACATCTCT.1  GACTGAACCCAGTA.1 \n##                 1                 0                 6                 0 \n##  GACTGATGAAGGGC.1  GACTGATGACACAC.1  GACTGATGGAATCC.1  GACTGATGGTCCTC.1 \n##                 0                 9                 2                 0 \n##  GACTGATGGTTTGG.1  GACTGATGTAGACC.1  GACTGATGTGCCAA.1  GACTGTGAAAGCAA.1 \n##                 2                 6                 5                 2 \n##  GACTGTGAAGATCC.1  GACTGTGAAGGCGA.1  GACTGTGACAGATC.1  GACTGTGAGGAAGC.1 \n##                 0         CD16 Mono                 0                 0 \n##  GACTGTGAGGTGGA.1  GACTGTGATCTTCA.1  GACTGTGATGCCAA.1  GACTGTGATTCGGA.1 \n##                 1                 6                 6                 0 \n##  GACTTTACATTCGG.1  GACTTTACCAGATC.1  GACTTTACTAAAGG.1  GACTTTACTTGCGA.1 \n##                 3                 1                 1                 1 \n##  GAGAAATGTCCAAG.1  GAGAAATGTTTCTG.1  GAGAAATGTTTGTC.1  GAGAGGTGAGCACT.1 \n##                 5                 1                 3         CD16 Mono \n##  GAGAGGTGCCTGAA.1  GAGAGGTGCTGGAT.1  GAGAGGTGTCGCCT.1  GAGAGGTGTTTCGT.1 \n##                11                 1                 2                 0 \n##  GAGATAGAAACGGG.1  GAGATAGACCGTAA.1  GAGATAGATGAGGG.1  GAGATAGATGCTAG.1 \n##                 0                 2                 0                 1 \n##  GAGATAGATGGTAC.1  GAGATCACACACTG.1  GAGATCACAGACTC.1  GAGATCACCCAAGT.1 \n##                 1                 0                 0                 6 \n##  GAGATCACCTTGGA.1  GAGATCACTCCCGT.1  GAGATCACTGATGC.1  GAGATCACTGCATG.1 \n##                 0                 2                 2                 0 \n##  GAGATGCTAAGGGC.1  GAGATGCTACCTAG.1  GAGATGCTATCGAC.1  GAGATGCTCGGTAT.1 \n##                 1                 6                 0                 0 \n##  GAGATGCTGTCATG.1  GAGATGCTTACAGC.1  GAGATGCTTGACTG.1  GAGATGCTTTAGGC.1 \n##                 1                10                 0         CD16 Mono \n##  GAGATGCTTTCTAC.1  GAGCAACTACGTGT.1  GAGCAACTCTAAGC.1  GAGCAACTGCTGAT.1 \n##                11                 1                 0                 0 \n##  GAGCAACTGTAAAG.1  GAGCAGGAACAGCT.1  GAGCAGGAAGTCTG.1  GAGCAGGACACTAG.1 \n##                 6                 0                 7         CD16 Mono \n##  GAGCAGGACGTAAC.1  GAGCAGGAGGCAAG.1  GAGCAGGATCGACA.1  GAGCATACACCAGT.1 \n##                 3                 8                 0                 1 \n##  GAGCATACATCGAC.1  GAGCATACCCAAGT.1  GAGCATACGGAAGC.1  GAGCATACGGAGTG.1 \n##                 3                 0                 1         CD16 Mono \n##  GAGCATACGGATCT.1  GAGCATACGGGATG.1  GAGCGAGAACTCTT.1  GAGCGAGACACAAC.1 \n##                 0                 0                 1                 1 \n##  GAGCGAGACGAGTT.1  GAGCGAGAGAATAG.1  GAGCGAGAGCGTAT.1  GAGCGAGATGGTCA.1 \n##                 0                 7                 2                 0 \n##  GAGCGAGATGTCGA.1  GAGCGAGATTCTAC.1  GAGCGCACAGAGAT.1  GAGCGCACCAGAGG.1 \n##                 1                 9                 0                 2 \n##  GAGCGCACCCAATG.1  GAGCGCTGACCTCC.1  GAGCGCTGCAAAGA.1  GAGCGCTGCTGGAT.1 \n##                 3         CD16 Mono                 0                 6 \n##  GAGCGCTGGGATTC.1  GAGCGCTGGGCGAA.1  GAGCGCTGTTGTGG.1  GAGCGCTGTTTCTG.1 \n##                10                 2                 3                 5 \n##  GAGCGGCTAACGGG.1  GAGCGGCTATGGTC.1  GAGCGGCTTGTCTT.1  GAGCTCCTGTTGTG.1 \n##                 8                 2                 9                 0 \n##  GAGCTCCTTACAGC.1  GAGGACGAACTCTT.1  GAGGACGACGGGAA.1  GAGGACGAGCAGTT.1 \n##                 0                 3                 1                 3 \n##  GAGGACGAGGCAAG.1  GAGGACGAGGTTTG.1  GAGGACGATGACCA.1  GAGGATCTGGCATT.1 \n##                 0                 0                 0                 3 \n##  GAGGATCTTAGCGT.1  GAGGATCTTCACGA.1  GAGGATCTTCTAGG.1  GAGGCAGATCATTC.1 \n##                 1                 0                 0                 3 \n##  GAGGCAGATGGTGT.1  GAGGCCACACAGTC.1  GAGGCCACAGTGCT.1  GAGGCCACCTACCC.1 \n##                 1                 3                 2         CD16 Mono \n##  GAGGCCACTGTTTC.1  GAGGGAACGATAAG.1  GAGGGAACGTTGTG.1  GAGGGAACTTATCC.1 \n##                 6                 6                 2                 0 \n##  GAGGGAACTTTGCT.1  GAGGGATGAGGGTG.1  GAGGGATGATCTCT.1  GAGGGATGGGGATG.1 \n##                 2                 3                 5                 1 \n##  GAGGGATGGTCACA.1  GAGGGATGTAGCCA.1  GAGGGATGTGCCAA.1  GAGGGATGTGTGAC.1 \n##                 0                 0                 8                 1 \n##  GAGGGATGTTCACT.1  GAGGGATGTTGAGC.1  GAGGGCCTAACGGG.1  GAGGGCCTACCTCC.1 \n##                 2                 2                 0                 0 \n##  GAGGGCCTACTAGC.1  GAGGGCCTAGAGGC.1  GAGGGCCTCAGAAA.1  GAGGGCCTCCTGTC.1 \n##                 1                 3                 0                 1 \n##  GAGGGTGAAGTAGA.1  GAGGGTGATAGTCG.1  GAGGGTGATGTCTT.1  GAGGGTGATTGCGA.1 \n##                 1                 1                 0                 1 \n##  GAGGGTGATTGCTT.1  GAGGGTGATTGGCA.1  GAGGTACTAAAACG.1  GAGGTACTAACGGG.1 \n##                 0                 2                 3                 1 \n##  GAGGTACTACGCAT.1  GAGGTACTACTACG.1  GAGGTACTCATGAC.1  GAGGTACTCTCTAT.1 \n##                 1                 3                 0         CD16 Mono \n##  GAGGTACTTGGTCA.1  GAGGTGGAATTCTC.1  GAGGTGGACTCATT.1  GAGGTGGAGCGAAG.1 \n##                 1                 3         CD16 Mono                 0 \n##  GAGGTGGAGGTTCA.1  GAGGTGGATTGGTG.1  GAGGTTACCACTTT.1  GAGGTTACGAGAGC.1 \n##                 0                 2                 3                 0 \n##  GAGGTTACGCGGAA.1  GAGGTTTGAAGATG.1  GAGGTTTGAATCGC.1  GAGGTTTGATGCTG.1 \n##                 3                 8                 2                 5 \n##  GAGGTTTGCCTTAT.1  GAGGTTTGCGAGAG.1  GAGGTTTGGTCTAG.1  GAGGTTTGTGGAAA.1 \n##                 1                 7                10                 9 \n##  GAGTAAGACTTGCC.1  GAGTAAGATCAGTG.1  GAGTAAGATGTGGT.1  GAGTACACACACAC.1 \n##                 0                 7                 1         CD16 Mono \n##  GAGTACACCATTGG.1 GAGTACACCATTTC.11 GAGTACACCTGACA.11 GAGTACACGCGTTA.11 \n##                 9                 1                 0                 9 \n##  GAGTACTGCGTAGT.1  GAGTACTGTCACGA.1  GAGTACTGTGATGC.1  GAGTCAACGAGACG.1 \n##                 0                 1                 3                 5 \n##  GAGTCAACGCAGAG.1  GAGTCAACGTGCAT.1  GAGTCAACTCGTGA.1  GAGTCTGAACCCTC.1 \n##                 8                 0                 0                 0 \n##  GAGTCTGAAGAAGT.1  GAGTCTGACCTTGC.1  GAGTGACTAAGCAA.1  GAGTGACTGCTGTA.1 \n##                 8                 6                 0                 1 \n##  GAGTGACTGGACGA.1  GAGTGACTTCGATG.1  GAGTGACTTCTCCG.1  GAGTGACTTGTCAG.1 \n##                 0                 2                 1                 9 \n##  GAGTGGGAAGCACT.1  GAGTGGGACATGAC.1  GAGTGGGATCTCGC.1  GAGTGGGATTGTGG.1 \n##                 0                 1                 1                 0 \n##  GAGTGTTGCTCAAG.1  GAGTGTTGGACAAA.1  GAGTGTTGGTCGAT.1  GAGTGTTGTTCCAT.1 \n##                 6                 0                 3                 0 \n##  GAGTTGTGACTTTC.1  GAGTTGTGCTTCTA.1  GAGTTGTGGAAAGT.1  GAGTTGTGGTCTAG.1 \n##                 3                 1                 1                 1 \n##  GAGTTGTGTGGAAA.1  GAGTTGTGTGGCAT.1  GATAAGGACCTCCA.1  GATAAGGACTGACA.1 \n##                 1                10         CD16 Mono                 0 \n##  GATAAGGAGTGTAC.1  GATAAGGATTTGGG.1  GATAATACGGTTTG.1  GATAATACTGAAGA.1 \n##                 1                 1                 2                 1 \n##  GATAATACTGTAGC.1  GATACTCTAACCTG.1  GATACTCTAATCGC.1  GATACTCTCCACCT.1 \n##                 5                 0         CD16 Mono                 0 \n##  GATACTCTCGGTAT.1  GATACTCTGCAAGG.1  GATAGAGAAAACGA.1  GATAGAGAAACCGT.1 \n##                 2                 1                 0                 7 \n##  GATAGAGACCTTAT.1  GATAGAGACTGTTT.1  GATAGAGATGAGCT.1  GATAGAGATTTCAC.1 \n##                 0                 1                11                 3 \n##  GATAGCACAAGCAA.1  GATAGCACACACTG.1  GATAGCACGAGATA.1  GATAGCACGGAGTG.1 \n##                 0                 0                 2                 0 \n##  GATAGCACTTGGTG.1  GATATAACAAAGCA.1  GATATAACATTTCC.1  GATATAACCTTAGG.1 \n##                 0                 0                 0                 1 \n##  GATATAACGAACTC.1  GATATAACGGTGGA.1  GATATAACGTTCGA.1  GATATATGAACTGC.1 \n##                 0                 0                 0                 9 \n##  GATATATGAATGCC.1  GATATATGATGCTG.1  GATATATGCTGGAT.1  GATATATGGTGTTG.1 \n##                 2                 2                 0                 7 \n##  GATATCCTACCAAC.1  GATATCCTAGGAGC.1  GATATCCTGTAAAG.1  GATATCCTGTGTTG.1 \n##                 7                 6                 8                 0 \n##  GATATCCTTGGGAG.1  GATATTGAAGCGTT.1  GATATTGAAGTGTC.1  GATATTGATTGGTG.1 \n##                 6                 5                 0                 3 \n##  GATCATCTCTGATG.1  GATCCCTGACTCTT.1  GATCCCTGCTACGA.1  GATCCCTGGTAGGG.1 \n##                10                 0                 2         CD16 Mono \n##  GATCCGCTAGGTTC.1  GATCCGCTTCTCGC.1  GATCGAACACTTTC.1  GATCGAACATGCCA.1 \n##                 2                 5         CD16 Mono                 1 \n##  GATCGAACATGTGC.1 GATCGAACCATACG.11  GATCGAACCGGGAA.1  GATCGAACGGTGTT.1 \n##                 0                 2                 0                 2 \n##  GATCGAACTTTGTC.1  GATCGATGAAAGTG.1  GATCGATGAGATCC.1  GATCGATGCGTTAG.1 \n##         CD16 Mono                 7                 0                 0 \n##  GATCGATGGAAAGT.1  GATCGTGAATGTGC.1  GATCGTGACAGGAG.1  GATCGTGACCACAA.1 \n##                 1                 2                 0         CD16 Mono \n##  GATCGTGACGGAGA.1  GATCGTGACTACCC.1  GATCGTGAGAACCT.1  GATCGTGATCCGTC.1 \n##                 1                10                 1                 5 \n##  GATCGTGATGAGCT.1  GATCTACTCGCTAA.1  GATCTACTCTCGAA.1  GATCTTACACACCA.1 \n##                 6                 0                 1                 1 \n##  GATCTTACAGAATG.1  GATCTTACCCAACA.1  GATCTTACGGTCTA.1  GATCTTACTCCCAC.1 \n##                10                 7         CD16 Mono                11 \n##  GATCTTTGAGTCGT.1  GATCTTTGCGACAT.1  GATCTTTGGCTGAT.1  GATCTTTGTCAGTG.1 \n##                 1                 1                 6                 1 \n##  GATGACACACGTTG.1  GATGACACCATACG.1  GATGACACTTCTCA.1  GATGCAACATCGGT.1 \n##                 0                 1                 0                 6 \n##  GATGCAACGAATAG.1  GATGCAACTTGGTG.1  GATGCATGAGCAAA.1  GATGCATGCACTAG.1 \n##                 9                 0                 2                 0 \n##  GATGCATGCCTTTA.1  GATGCATGCGCCTT.1  GATGCATGGAGGCA.1  GATGCATGGGAACG.1 \n##                 9                 0                 0                 1 \n##  GATGCATGTTTGGG.1  GATGCCCTACGTAC.1  GATGCCCTCGTAGT.1  GATGCCCTGACAGG.1 \n##                 2                 0                 2                 0 \n##  GATGCCCTTCTTAC.1  GATGCCCTTGAGAA.1  GATTACCTAAAAGC.1  GATTACCTAAACAG.1 \n##                 1         CD16 Mono                11                 0 \n##  GATTACCTAACAGA.1  GATTACCTAACGAA.1  GATTACCTAGGGTG.1  GATTACCTCATGAC.1 \n##                11                 1                 5                 5 \n##  GATTACCTCGGGAA.1  GATTACCTCTGTGA.1  GATTACCTGGATTC.1  GATTACCTGGGATG.1 \n##                 3                 0                11                 6 \n##  GATTACCTTACAGC.1  GATTACCTTCCTAT.1  GATTACCTTCTAGG.1  GATTACCTTCTATC.1 \n##                 1                 8                 1         CD16 Mono \n##  GATTACCTTGTCGA.1  GATTCGGAACGGGA.1  GATTCGGACGATAC.1  GATTCGGAGGCAAG.1 \n##                 0                 5                 3                 1 \n##  GATTCGGATCACGA.1  GATTCGGATGTCCC.1  GATTCTACACTCTT.1  GATTCTACGAGGCA.1 \n##                 0         CD16 Mono                 7                 0 \n##  GATTCTACGTCACA.1  GATTCTACTTAGGC.1  GATTCTACTTCTAC.1  GATTCTTGAGTGTC.1 \n##                 1                 3                 0                 1 \n##  GATTCTTGCAACTG.1  GATTCTTGGTTAGC.1  GATTCTTGTCGCAA.1  GATTCTTGTCTATC.1 \n##                 6                 1                 0                 1 \n##  GATTCTTGTCTTTG.1  GATTCTTGTTGTCT.1  GATTCTTGTTTCGT.1  GATTGGACATGCTG.1 \n##                 9                 0                 3                 0 \n## GATTGGACTCACGA.11  GATTGGACTGTTTC.1  GATTGGACTTACTC.1  GATTGGTGACCTTT.1 \n##                 9                 0                 7                 3 \n##  GATTGGTGAGGAGC.1  GATTGGTGCTGACA.1  GATTGGTGTATCTC.1  GATTGGTGTATGCG.1 \n##                 1         CD16 Mono                 9                 2 \n##  GATTGGTGTGGAAA.1  GATTGGTGTGGTGT.1  GATTTAGAACCAAC.1  GATTTAGAATGACC.1 \n##                 2                10                 1                 6 \n##  GATTTAGAATTCCT.1  GATTTAGAGAATAG.1  GATTTAGAGTAGCT.1  GATTTAGATTTCAC.1 \n##                 1                 1                 0                 0 \n##  GATTTGCTACCCTC.1  GATTTGCTACGCTA.1  GATTTGCTACGTAC.1  GATTTGCTCTTACT.1 \n##                10                 1                 1                 1 \n##  GATTTGCTGTACCA.1  GCAAACTGAAGATG.1  GCAAACTGACACCA.1  GCAAACTGAGTGCT.1 \n##                 0                 1                 2                 0 \n##  GCAAACTGCTCAGA.1  GCAAACTGGTGCTA.1  GCAACCCTAGGAGC.1  GCAACCCTCTGTGA.1 \n##                 5                 0                11                 7 \n##  GCAACCCTGTCACA.1  GCAACCCTTTACTC.1  GCAACTGAAAGTAG.1  GCAACTGAACCTAG.1 \n##                 7                 1                 7         CD16 Mono \n##  GCAACTGACACACA.1  GCAACTGACGATAC.1 GCAACTGATCAGGT.11  GCAACTGATTCGGA.1 \n##                 5                 2                 0         CD16 Mono \n##  GCAAGACTAACCGT.1  GCAAGACTCGGAGA.1  GCAAGACTGAACCT.1  GCAAGACTGACGAG.1 \n##                 3                 3                 0                 2 \n##  GCAAGACTTGCCTC.1  GCAAGACTTTACTC.1  GCAAGACTTTATCC.1  GCAATCGATGCTCC.1 \n##                 1                 5                 8                 1 \n##  GCAATCGATGTCCC.1  GCAATTCTACCCAA.1  GCAATTCTACCCTC.1  GCAATTCTACTACG.1 \n##                 1                 1                 0                 2 \n##  GCAATTCTCTAGCA.1  GCAATTCTTGGGAG.1  GCACAAACACTGTG.1  GCACAAACCCATGA.1 \n##         CD16 Mono                 3                 7                 0 \n##  GCACAAACGGTAGG.1  GCACAATGAATCGC.1  GCACAATGACTGTG.1  GCACAATGAGCTCA.1 \n##                 5                 1                 1                 8 \n##  GCACAATGATGTCG.1  GCACAATGCAGTCA.1  GCACAATGCTTCGC.1  GCACAATGGTAGCT.1 \n##                 2                 5                 6                 0 \n##  GCACAATGTCCCAC.1  GCACACCTACGCTA.1  GCACACCTCCATAG.1  GCACCACTAAGGTA.1 \n##                 0                12                 0                 7 \n##  GCACCACTCTCTCG.1  GCACCTACTCAAGC.1  GCACCTACTGGTTG.1  GCACCTTGAGTGCT.1 \n##                 1                 0                 3                 0 \n##  GCACCTTGATGCCA.1  GCACCTTGGGGAGT.1  GCACGGACATGACC.1  GCACGGACCGTGAT.1 \n##                 7                 9                 0                 0 \n##  GCACGGACCTCTCG.1  GCACGGACCTTGCC.1  GCACGGACGGTGTT.1  GCACGGTGACTGTG.1 \n##                 2                 3                 0                 3 \n##  GCACGGTGCCTACC.1  GCACGGTGGACTAC.1  GCACGGTGGGCAAG.1  GCACGGTGGGGATG.1 \n##                 1                 1                 1                 0 \n##  GCACGTCTAATCGC.1  GCACGTCTACTGGT.1  GCACGTCTCCTCCA.1  GCACGTCTCTGGTA.1 \n##                 1                 1                 1         CD16 Mono \n##  GCACGTCTCTTACT.1  GCACGTCTGAACCT.1  GCACGTCTGGTCTA.1  GCACGTCTGTTACG.1 \n##                 1                 2                 0                 0 \n##  GCACGTCTTCGTTT.1  GCACGTCTTGTTCT.1  GCACTAGAAGTGCT.1  GCACTAGAATTTCC.1 \n##                 0                 0                 0                 2 \n##  GCACTAGACGAACT.1  GCACTAGAGCGTAT.1  GCACTGCTACGGTT.1  GCACTGCTATCAGC.1 \n##                 1                 2                 7         CD16 Mono \n##  GCACTGCTGAAACA.1  GCACTGCTGCCATA.1  GCACTGCTGGTATC.1  GCACTGCTGGTGAG.1 \n##                 2                10         CD16 Mono                 1 \n##  GCACTGCTTCCGAA.1  GCACTGCTTGCTCC.1 GCAGATACAAGCCT.11  GCAGATACAGGTCT.1 \n##                 2                 1                 1         CD16 Mono \n##  GCAGATACCCCAAA.1  GCAGATACGGAAAT.1  GCAGATACGGTATC.1  GCAGATACTTCTGT.1 \n##                 1                 6                 2         CD16 Mono \n##  GCAGCCGAAGCCAT.1  GCAGCCGACTCCAC.1  GCAGCCGACTCTAT.1  GCAGCCGATCGCAA.1 \n##                 1                 0                 2                 8 \n##  GCAGCGTGAACGGG.1  GCAGCGTGCTCTCG.1  GCAGCGTGTCCCGT.1  GCAGCGTGTGAGGG.1 \n##                 0         CD16 Mono                 0                 0 \n##  GCAGCGTGTGTCTT.1  GCAGGCACACTCTT.1  GCAGGCACCTGGAT.1  GCAGGGCTACGTTG.1 \n##                 1                 0                 0                 6 \n##  GCAGGGCTCGTTGA.1 GCAGGGCTGAAAGT.11  GCAGGGCTGCCAAT.1  GCAGGGCTTGAGCT.1 \n##                 0                 5                 1         CD16 Mono \n##  GCAGGGCTTGCAAC.1  GCAGTCCTAACGAA.1  GCAGTCCTACTGTG.1  GCAGTCCTCAACCA.1 \n##                 0                 7                 1                 1 \n##  GCAGTCCTCTCCAC.1  GCAGTCCTTGACAC.1  GCAGTTGAATGCTG.1  GCAGTTGAGCGAAG.1 \n##                 0                 2                 9                 0 \n##  GCAGTTGATATCTC.1  GCAGTTGATTCTTG.1  GCATCAGAAAGTGA.1  GCATCAGACCTCGT.1 \n##         CD16 Mono                10                 1                 1 \n##  GCATCAGAGTTCTT.1  GCATGATGAGGGTG.1  GCATGATGGTCAAC.1  GCATGATGTCAAGC.1 \n##                 0                 8                 1                 0 \n##  GCATGTGACAAAGA.1  GCATGTGACTAAGC.1  GCATGTGAGAGGTG.1  GCATGTGATTCAGG.1 \n##                 6                 6                 1                 0 \n##  GCATTGGAAGTACC.1  GCATTGGAGATAGA.1  GCATTGGAGGTAAA.1  GCATTGGATTCTGT.1 \n##                 0         CD16 Mono                 3                 1 \n##  GCCAAAACAGGTTC.1  GCCAAAACATGCTG.1  GCCAAATGGAAACA.1  GCCAAATGGCTATG.1 \n##                 7         CD16 Mono                 0                 0 \n##  GCCAAATGGTACAC.1  GCCAACCTGAGGAC.1  GCCAACCTGCATAC.1  GCCAACCTGGACTT.1 \n##                 0                 1                 1                 6 \n##  GCCAACCTGGAGCA.1  GCCAACCTGTGCAT.1  GCCAACCTGTTGTG.1 GCCACGGACGAATC.11 \n##                 1                 0                 5                 6 \n##  GCCACGGACGCCTT.1  GCCACGGAGACGAG.1  GCCACGGATGCTTT.1  GCCACGGATTTGTC.1 \n##                 2                 0                 2                 3 \n##  GCCACTACAAACGA.1  GCCACTACGAATCC.1  GCCACTACGCCTTC.1  GCCACTACGGTAGG.1 \n##                 9                 0                 0                 1 \n##  GCCACTACGTCGTA.1  GCCACTACGTTGTG.1  GCCACTACTCCAGA.1  GCCACTACTGCATG.1 \n##                 1                 1                 0                 6 \n##  GCCACTACTGGTAC.1 GCCACTACTTCGCC.11  GCCATCACCATGGT.1  GCCATCACCCCGTT.1 \n##                 1                 0                 3                 6 \n##  GCCATCACCTCTAT.1  GCCATCACGATACC.1  GCCATCACGGATCT.1  GCCATCACGGTTTG.1 \n##                 1                 1                 2                 0 \n##  GCCATCACTAGCCA.1 GCCATCACTTCTCA.11  GCCATGCTAACGGG.1  GCCATGCTACTACG.1 \n##                10                 3                 0                 3 \n##  GCCATGCTCCCTCA.1  GCCATGCTCTCCAC.1  GCCATGCTGGGCAA.1  GCCCAACTCAACTG.1 \n##                 1                 9                 8         CD16 Mono \n##  GCCCAACTCCGCTT.1  GCCCAACTGCATAC.1  GCCCAACTTTCGGA.1  GCCCAGGAAGCCTA.1 \n##                 0                 5                 1                 0 \n##  GCCCAGGACATCAG.1  GCCCAGGACATTCT.1  GCCCAGGACCACAA.1  GCCCAGGAGAGATA.1 \n##                 6                10                 0                 0 \n##  GCCCATACACAGCT.1  GCCCATACGAACCT.1  GCCCATACGAGGAC.1  GCCCATACGTCAAC.1 \n##                 7                 6                 3                 2 \n##  GCCCATACTAAGCC.1  GCCCATACTCTACT.1  GCCGACGACGAATC.1  GCCGACGATGCATG.1 \n##                 6                 0         CD16 Mono                 6 \n##  GCCGACGATTCTCA.1  GCCGAGTGATCTCT.1  GCCGAGTGTCTATC.1  GCCGAGTGTGGTTG.1 \n##                 0                 1         CD16 Mono                 1 \n##  GCCGGAACGCTTAG.1  GCCGGAACGTTTCT.1  GCCGGAACTCGCTC.1  GCCGGAACTGCGTA.1 \n##                 3                 0                 0                 5 \n##  GCCGTACTACGGTT.1  GCCGTACTAGCTAC.1  GCCGTACTGCCATA.1  GCCTACACCACCAA.1 \n##                 9                 0                11                 0 \n## GCCTACACCTGCAA.11  GCCTACACTGCTCC.1  GCCTAGCTAGGAGC.1  GCCTAGCTGGAAGC.1 \n##                10                 0                 7                 1 \n##  GCCTAGCTGGTAGG.1  GCCTAGCTGTTCTT.1  GCCTAGCTTTCTGT.1  GCCTCAACCTGAAC.1 \n##                 1                 0                 0                 0 \n##  GCCTCAACTAGAAG.1  GCCTCATGATGCTG.1  GCCTCATGCAGTTG.1  GCCTCATGGAAACA.1 \n##                 0         CD16 Mono                 1                 3 \n##  GCCTCATGGAATCC.1  GCCTCATGGATACC.1  GCCTCATGGTGAGG.1  GCCTGACTCCAATG.1 \n##                 9                 2                 2                 6 \n##  GCCTGACTCTCTTA.1  GCCTGACTGACTAC.1  GCCTGACTGAGATA.1  GCCTGACTGCTAAC.1 \n##                 0                 0                 2                 0 \n##  GCCTGACTTATGCG.1  GCCTGACTTGATGC.1  GCCTGACTTGGATC.1  GCGAAGGAAGTGCT.1 \n##                 3                 6                 5                12 \n##  GCGAAGGAATTCCT.1  GCGACTCTCTGTAG.1  GCGACTCTCTTCTA.1  GCGACTCTGCGTTA.1 \n##                 0                 0                 0                 1 \n##  GCGACTCTTTTCTG.1  GCGAGAGAAGATGA.1  GCGAGAGAGCAAGG.1  GCGAGAGATAAGGA.1 \n##                 1                 2                 0         CD16 Mono \n##  GCGAGCACACCAAC.1  GCGAGCACGAGCTT.1  GCGAGCACTCCTTA.1  GCGAGCACTGAACC.1 \n##                 3         CD16 Mono                 2                 9 \n##  GCGATATGCGACTA.1  GCGATATGGAGGGT.1  GCGATATGTACTCT.1 GCGATATGTGACCA.11 \n##                 0         CD16 Mono                 0                 0 \n##  GCGATATGTTGCGA.1 GCGCACGAACACCA.11  GCGCACGAAGTACC.1  GCGCACGACCACAA.1 \n##         CD16 Mono                 0                 2                 0 \n##  GCGCACGAGCTCCT.1  GCGCACGAGGCGAA.1  GCGCACGATATCGG.1  GCGCATCTCAGAAA.1 \n##                 0                 5         CD16 Mono                 0 \n##  GCGCATCTCCCTCA.1  GCGCATCTGGAGCA.1  GCGCGAACACCCAA.1  GCGCGAACCCTTAT.1 \n##                 0         CD16 Mono                 6                 1 \n##  GCGCGATGAAGAAC.1  GCGCGATGAAGATG.1  GCGCGATGACCCTC.1  GCGCGATGCCTAAG.1 \n##                10                 1                 0                 0 \n##  GCGCGATGGCAAGG.1  GCGCGATGTCGTGA.1  GCGGACTGAAAGCA.1  GCGGACTGCTTCTA.1 \n##         CD16 Mono                 1                 0                 0 \n##  GCGGACTGGACAAA.1  GCGGACTGGCAGTT.1  GCGGACTGGCTACA.1  GCGGACTGGTAGGG.1 \n##                 3                10                 0                 8 \n##  GCGGACTGTCTTCA.1  GCGGACTGTTCTGT.1  GCGGAGCTACCTGA.1  GCGGAGCTAGATCC.1 \n##                 0         CD16 Mono                 3                 1 \n##  GCGGAGCTCGCTAA.1  GCGGAGCTCTAGCA.1  GCGGAGCTGCCCTT.1  GCGGAGCTTCTTTG.1 \n##                 2                 1                 1                 2 \n##  GCGGAGCTTGAGAA.1  GCGGAGCTTGCAAC.1  GCGGCAACGCTGTA.1  GCGGCAACTCTTAC.1 \n##                 0                 0                 8         CD16 Mono \n##  GCGGGACTCAGAGG.1  GCGGGACTTTCAGG.1  GCGTAAACAAAGTG.1  GCGTAAACCACTGA.1 \n##                 3                 3                 1         CD16 Mono \n##  GCGTAAACCAGCTA.1  GCGTAAACGTTAGC.1  GCGTAATGCTGCTC.1  GCGTAATGGATAGA.1 \n##         CD16 Mono                 0                10                 1 \n##  GCGTAATGGGTAAA.1  GCGTAATGTGCATG.1  GCGTACCTACGCTA.1  GCGTACCTCGTAGT.1 \n##                 2                 0                 6                 5 \n##  GCGTACCTGTTGCA.1  GCGTATGACTCTAT.1  GCGTATGACTTCCG.1  GCGTATGAGTTGGT.1 \n##                 3                 0                 5                 2 \n##  GCGTATGATCTCGC.1  GCGTATGATTCATC.1  GCTACAGAAAGCAA.1  GCTACAGAACACAC.1 \n##                 2                 0                 3                 7 \n##  GCTACAGACATTCT.1  GCTACAGACTACCC.1  GCTACAGACTAGTG.1  GCTACAGACTGAAC.1 \n##                 0                 2                 2                 5 \n##  GCTACAGACTTGCC.1  GCTACAGATTCTAC.1  GCTACCTGGAATAG.1  GCTACCTGGGAGTG.1 \n##                 0                 0                 1                 2 \n##  GCTACCTGTGGTCA.1  GCTACCTGTGGTTG.1  GCTACGCTCGTTAG.1  GCTACGCTCTCCCA.1 \n##                 1                 2                 0                 1 \n##  GCTACGCTCTTCGC.1  GCTACGCTGAACTC.1  GCTACGCTGGTACT.1  GCTACGCTTCGACA.1 \n##                 5                 0                 0                 2 \n##  GCTACGCTTGCACA.1  GCTAGAACCGCTAA.1  GCTAGAACTTTCAC.1  GCTAGATGAAGGTA.1 \n##                 0                 0                 1                 6 \n##  GCTAGATGCGATAC.1  GCTAGATGTCCCGT.1  GCTAGATGTCTTTG.1  GCTAGATGTGTTCT.1 \n##                 1                 3                 1                 2 \n##  GCTAGATGTTTCTG.1  GCTATACTCAGTCA.1  GCTATACTTGACTG.1  GCTCAAGAAGGTCT.1 \n##                 5                 0                 1                 1 \n##  GCTCAAGAATGGTC.1  GCTCAAGACGTACA.1  GCTCAAGAGGAGCA.1  GCTCAAGAGGGACA.1 \n##                 5                 0                 1                 3 \n##  GCTCACTGAAAAGC.1 GCTCACTGCTCATT.11  GCTCACTGCTCGCT.1  GCTCACTGGGTTCA.1 \n##                 0                 9                 0                 0 \n##  GCTCAGCTAACCTG.1  GCTCAGCTATGTCG.1  GCTCAGCTCGCCTT.1  GCTCAGCTTGCTTT.1 \n##                 3                 0         CD16 Mono                 6 \n##  GCTCCATGAGCAAA.1  GCTCCATGAGCATC.1  GCTCCATGAGCCTA.1  GCTCCATGCTCATT.1 \n##                 5                 5                 6                 3 \n##  GCTCCATGCTGTAG.1  GCTCCATGCTTGTT.1  GCTCCATGGGCAAG.1  GCTCCATGGTCAAC.1 \n##                 5         CD16 Mono         CD16 Mono                 5 \n##  GCTCCATGTCAGAC.1  GCTCCATGTCCCAC.1  GCTCGACTCCTAAG.1  GCTCGACTCCTCGT.1 \n##                 1         CD16 Mono                 5                 0 \n##  GCTCGACTGCATCA.1  GCTCGACTGTCACA.1  GCTCGACTGTTGTG.1  GCTCGACTTTGGTG.1 \n##                 1                 1                 1                 5 \n##  GCTGATGAAGCCAT.1  GCTGATGACTCGCT.1  GCTGATGATGGTTG.1  GCTTAACTAAGTGA.1 \n##                 3                 7                 1                 0 \n##  GCTTAACTCACAAC.1  GCTTAACTCTGTAG.1  GCTTAACTGCATCA.1  GCTTAACTTCTCAT.1 \n##                 1         CD16 Mono                 0                 5 \n##  GCTTGAGAAAGATG.1  GCTTGAGAAGACTC.1  GCTTGAGAAGTACC.1  GCTTGAGAAGTCTG.1 \n##                 0         CD16 Mono                 6                 5 \n##  GCTTGAGAATGCTG.1  GCTTGAGAGAGGAC.1  GCTTGAGAGTCGTA.1  GCTTGAGATTCGGA.1 \n##                 2                 2                 1                 6 \n##  GGAACACTCAGATC.1  GGAACACTCCAGTA.1  GGAACACTGGATCT.1  GGAACACTTCGATG.1 \n##                 0         CD16 Mono                 5                 0 \n##  GGAACACTTCGTAG.1 GGAACACTTTCGGA.11  GGAACTACCCTTAT.1  GGAACTACCTTGCC.1 \n##                 1                 1         CD16 Mono                 0 \n##  GGAACTACGTTCAG.1  GGAACTACTCCTCG.1  GGAACTTGACACAC.1  GGAACTTGACTGTG.1 \n##                 0                 0                 2                 1 \n##  GGAACTTGCACTGA.1  GGAACTTGCGAGAG.1  GGAACTTGCGGGAA.1  GGAACTTGCTACTT.1 \n##                 0                 0                 1                 0 \n##  GGAACTTGGGGCAA.1  GGAACTTGTCTGGA.1  GGAAGGACAGTCTG.1  GGAAGGACCCATGA.1 \n##                 1                 1                 9                 3 \n##  GGAAGGTGAGCCAT.1  GGAAGGTGAGTAGA.1  GGAAGGTGCAGGAG.1  GGAAGGTGCCCTCA.1 \n##                 1                 2                 0                 0 \n##  GGAATCTGAGAACA.1  GGAATCTGCTGAAC.1  GGAATCTGGGGACA.1  GGAATGCTCTTGAG.1 \n##                 2                 3                 5                13 \n##  GGAATGCTGTAAAG.1  GGAATGCTTGGAGG.1  GGAATGCTTGTTTC.1  GGAATGCTTTCATC.1 \n##                 1                 1                 0                 1 \n##  GGAATGCTTTGTGG.1  GGACAACTAGTGTC.1  GGACAACTCCGTAA.1  GGACAACTGAGAGC.1 \n##                 0                 2                 0                 1 \n##  GGACAACTGCTCCT.1  GGACAGGAACCTTT.1  GGACAGGAATTCCT.1  GGACAGGACTTAGG.1 \n##                 0                 5                 1                 0 \n##  GGACAGGAGATGAA.1  GGACAGGATTGTGG.1  GGACATTGAAAGCA.1  GGACATTGATGCCA.1 \n##                 9                 0                11         CD16 Mono \n##  GGACATTGCTTGCC.1  GGACATTGCTTGGA.1  GGACATTGTTCTCA.1  GGACCCGACTGTAG.1 \n##                 3                 0                 8                 5 \n##  GGACCCGAGCGAAG.1  GGACCCGAGTACGT.1  GGACCCGATTATCC.1  GGACCGTGCATTCT.1 \n##                12                 2                 2                11 \n##  GGACCGTGTCCGTC.1  GGACCTCTACCAGT.1  GGACCTCTACGCAT.1  GGACCTCTACTACG.1 \n##                 0                 0                 0                 0 \n##  GGACCTCTAGCTAC.1  GGACCTCTCGAACT.1  GGACCTCTGAGGGT.1  GGACCTCTTCCAGA.1 \n##                 1                 0                 0                 1 \n##  GGACCTCTTGCACA.1  GGACGAGAAAGGCG.1  GGACGAGAATGGTC.1  GGACGAGACGAACT.1 \n##                 6                 1                 3                 1 \n##  GGACGAGAGAGGGT.1  GGACGAGAGCCAAT.1  GGACGAGATGTTTC.1  GGACGAGATTGGTG.1 \n##                 0                 0                 1                 0 \n##  GGACGCACACGGGA.1  GGACGCACATGCTG.1  GGACGCACCGCCTT.1  GGACGCACTTAGGC.1 \n##         CD16 Mono                 5         CD16 Mono                 8 \n##  GGACGCTGAATCGC.1  GGACGCTGACTCTT.1  GGACGCTGCCAAGT.1  GGACGCTGGAATGA.1 \n##         CD16 Mono                 5                 3                 2 \n##  GGACGCTGTCGTTT.1  GGACTATGATCGTG.1  GGACTATGCACCAA.1  GGACTATGCTGATG.1 \n##                 0                 3                12                 0 \n##  GGACTATGGACAGG.1  GGACTATGGGAACG.1 GGACTATGGGAGGT.11  GGACTATGGGTCTA.1 \n##                 0                12                 1                 2 \n##  GGACTATGTACTGG.1  GGACTATGTGAGGG.1  GGAGACGAAACGTC.1  GGAGACGAACGTGT.1 \n##                 2                 1                 2                 0 \n##  GGAGACGAAGATGA.1  GGAGACGAAGGCGA.1  GGAGACGAAGTCTG.1  GGAGACGACTAGCA.1 \n##                 5                 1                 0                 7 \n##  GGAGACGACTCCCA.1  GGAGACGATACTCT.1  GGAGACGATTCCGC.1  GGAGAGACATGCTG.1 \n##                 0                 7                 0                 1 \n##  GGAGAGACCTGTCC.1  GGAGAGACGCTGTA.1 GGAGAGACTAGACC.11  GGAGCAGAAAGGTA.1 \n##                 1                 1                 6                11 \n##  GGAGCAGAACGGGA.1  GGAGCAGAGAACTC.1  GGAGCAGAGTGCAT.1  GGAGCAGATGCTAG.1 \n##                 3                 0         CD16 Mono                 2 \n##  GGAGCAGATGCTCC.1  GGAGCAGATTATCC.1  GGAGCCACAAAACG.1  GGAGCCACCATCAG.1 \n##                 6                 2                 0                 1 \n##  GGAGCCACGCGGAA.1  GGAGCCACGTCATG.1  GGAGGATGGGGAGT.1  GGAGGATGGTGTTG.1 \n##                 1                 0                 2                 0 \n##  GGAGGATGTCATTC.1  GGAGGATGTGTAGC.1  GGAGGCCTACTACG.1  GGAGGCCTAGTACC.1 \n##                 5                 2                13                 2 \n##  GGAGGCCTCATCAG.1  GGAGGCCTCCTCAC.1  GGAGGCCTGCATAC.1  GGAGGCCTTCGACA.1 \n##                 3                 1                 0                 0 \n##  GGAGGCCTTTAGGC.1  GGAGGCCTTTGCGA.1  GGAGGCCTTTTACC.1  GGAGGTGAATGCCA.1 \n##                 0         CD16 Mono                 1                 1 \n##  GGAGGTGACTTCTA.1  GGAGGTGAGCGAGA.1  GGAGGTGAGTGTTG.1  GGAGGTGAGTTACG.1 \n##                10                 0                 0                 2 \n##  GGAGTTACAAACGA.1  GGAGTTACACTTTC.1  GGAGTTACAGTGCT.1  GGAGTTACATTCTC.1 \n##                 0                 0                 1                 2 \n##  GGAGTTACCAATCG.1  GGAGTTACCACTGA.1  GGAGTTACGGATTC.1  GGAGTTACGTTCTT.1 \n##                 0         CD16 Mono                 1                 5 \n##  GGAGTTACGTTGCA.1  GGAGTTACTATCGG.1  GGAGTTACTCTACT.1  GGAGTTTGACTCAG.1 \n##                11                 9                 9                 2 \n##  GGAGTTTGTGGAAA.1  GGAGTTTGTTCGGA.1  GGATACTGACCGAT.1  GGATACTGAGAAGT.1 \n##                 2                 1                 2                 0 \n##  GGATACTGAGCCAT.1  GGATACTGCCCACT.1  GGATACTGCCGATA.1  GGATACTGGTCGTA.1 \n##                 5                 3                 6                 0 \n##  GGATAGCTCGAGAG.1  GGATAGCTGCAGTT.1  GGATAGCTGCCCTT.1  GGATAGCTGTCTGA.1 \n##                 0                 2                 5                 1 \n##  GGATGTACCCAATG.1  GGATGTACTCGACA.1  GGATGTTGAGATGA.1  GGATGTTGAGCCAT.1 \n##                 0                 0                 2                 2 \n##  GGATGTTGATCTCT.1  GGATGTTGGGTGAG.1  GGATGTTGGTATCG.1  GGATGTTGTCAGAC.1 \n##                 5                 2                 0                 1 \n##  GGATGTTGTTTCGT.1  GGATTGTGACGGTT.1  GGATTGTGACTCAG.1  GGATTGTGACTGGT.1 \n##                 3         CD16 Mono                 2                 9 \n## GGATTGTGATCGGT.11  GGATTGTGCTTAGG.1  GGATTGTGTCAAGC.1  GGATTGTGTGCAGT.1 \n##                 2                 5         CD16 Mono                 1 \n##  GGATTGTGTGTGGT.1  GGATTTCTTCCAAG.1  GGATTTCTTCGCCT.1  GGCAAGGAACGCAT.1 \n##                 0                 2                 5                 6 \n##  GGCAAGGATCTATC.1  GGCAATACTCCCGT.1  GGCAATACTGCTTT.1  GGCACGTGAGCGTT.1 \n##                10                 1                 1                 6 \n##  GGCACGTGCATTGG.1  GGCACGTGTATGGC.1  GGCACGTGTGGTCA.1  GGCACTCTAAGAAC.1 \n##                 7                 1                 1                 3 \n##  GGCACTCTCGTAAC.1  GGCACTCTCTAGTG.1  GGCACTCTTAGCGT.1  GGCACTCTTGCACA.1 \n##                 0                 6                 2                 0 \n##  GGCACTCTTGGAGG.1  GGCATATGAACGTC.1  GGCATATGATCGTG.1  GGCATATGCCTAAG.1 \n##                 2                 1                 6                 3 \n##  GGCATATGTCTATC.1  GGCATATGTCTCGC.1  GGCCACGAATCTCT.1  GGCCACGACCGATA.1 \n##                 7                 2                 0                 1 \n##  GGCCACGAGTCCTC.1  GGCCACGAGTTGAC.1  GGCCAGACAAACAG.1  GGCCAGACATGGTC.1 \n##                 0                 1                 0         CD16 Mono \n##  GGCCAGACCATTTC.1  GGCCAGACTAGTCG.1  GGCCAGACTTCATC.1  GGCCCAGAACCCTC.1 \n##         CD16 Mono                 0                11                 6 \n##  GGCCCAGACGACTA.1  GGCCCAGACGTGTA.1  GGCCCAGAGGGCAA.1  GGCCCAGAGTAGGG.1 \n##         CD16 Mono                 6                 2                 2 \n##  GGCCCAGATATTCC.1  GGCCGAACCCCTAC.1  GGCCGAACTGTCCC.1  GGCCGATGGCGTTA.1 \n##                 1                 0                 1                 8 \n##  GGCCGATGGTAGGG.1  GGCGACACAAACAG.1  GGCGACACTTCCGC.1  GGCGACTGAGCACT.1 \n##                10                 0                 1                 1 \n##  GGCGACTGCAGAAA.1  GGCGACTGTGACAC.1  GGCGCATGACTCTT.1  GGCGCATGCCACAA.1 \n##                 0                 3                 0                 1 \n##  GGCGCATGCCCGTT.1  GGCGCATGCCTAAG.1  GGCGCATGCGCCTT.1  GGCGCATGCTCAGA.1 \n##                 0                 1                 2                 3 \n##  GGCGCATGGAACTC.1  GGCGCATGGAGCTT.1  GGCGCATGGCGTTA.1  GGCGCATGTCAGTG.1 \n##                 0                 3                 1                 0 \n##  GGCGCATGTCTATC.1  GGCGCATGTTAGGC.1  GGCGGACTACTCAG.1  GGCGGACTAGCCTA.1 \n##                 1                 1         CD16 Mono                 9 \n##  GGCGGACTCGAATC.1  GGCGGACTGTATCG.1  GGCGGACTTCGACA.1  GGCGGACTTCGCTC.1 \n##                 1                 1                 0                 1 \n##  GGCTAAACATCTCT.1  GGCTAAACCGAACT.1  GGCTAAACCTATGG.1  GGCTAAACTCGCCT.1 \n##                 0                 0                 0                 0 \n##  GGCTAAACTGGAAA.1  GGCTAATGAGCGTT.1  GGCTAATGCTCGAA.1  GGCTAATGGAGATA.1 \n##                 0                 8                 0                 6 \n##  GGCTAATGGCGTTA.1  GGCTAATGTCACGA.1  GGCTACCTAACAGA.1  GGCTACCTAGAATG.1 \n##                 9                 2                 3                 0 \n##  GGCTACCTGGTTAC.1  GGCTACCTTCCGAA.1  GGCTCACTACTTTC.1  GGCTCACTTCCAAG.1 \n##                 5                 0                 1                 5 \n##  GGGAACGAGGTTTG.1  GGGAAGACATCGTG.1  GGGAAGACCCGCTT.1  GGGAAGACCCTACC.1 \n##                 0                 0         CD16 Mono                 0 \n##  GGGAAGACCTGAGT.1 GGGAAGACGAATCC.11  GGGAAGACGAATGA.1  GGGAAGACGGTTCA.1 \n##                 6                 0                 0                 0 \n##  GGGAAGACTCAGAC.1  GGGAAGTGAGAGTA.1  GGGAAGTGTATTCC.1  GGGACCACATACCG.1 \n##                 5                 3                 1                 7 \n##  GGGACCACCCTCGT.1  GGGACCACCCTTGC.1 GGGACCACCTTCGC.11  GGGACCACTTCCAT.1 \n##         CD16 Mono                 5                 2                 5 \n##  GGGACCTGGAGGCA.1  GGGACCTGGCCATA.1  GGGACCTGGGATCT.1  GGGACCTGTACGCA.1 \n##                 0                 2                 2                 2 \n##  GGGACCTGTCTTCA.1  GGGACCTGTTCCGC.1  GGGATGGACTGACA.1  GGGATGGATCCAGA.1 \n##                 2                 9                 2                 2 \n## GGGATGGATGCCCT.11  GGGATGGATGTGCA.1  GGGATTACAAAGCA.1  GGGATTACCCCACT.1 \n##                 1                 0                 1                 0 \n##  GGGCAAGAACGCAT.1  GGGCAAGAACTGTG.1  GGGCAAGAAGCTAC.1  GGGCAAGAATCGAC.1 \n##                 0                 0         CD16 Mono                 1 \n##  GGGCAAGAGCGAGA.1  GGGCAAGATCCCAC.1  GGGCACACACCGAT.1  GGGCACACACCTCC.1 \n##                 1                 7                 1                 1 \n##  GGGCACACCTGTCC.1  GGGCACACGAGATA.1  GGGCACACTATCGG.1  GGGCAGCTGAGAGC.1 \n##                 2                 1         CD16 Mono                 1 \n##  GGGCAGCTTGAACC.1  GGGCCAACCAGATC.1  GGGCCAACCGCTAA.1  GGGCCAACCTAGCA.1 \n##                 1                 0                 2                 0 \n##  GGGCCAACGAGAGC.1  GGGCCAACTGTGGT.1  GGGCCATGAACCAC.1  GGGCCATGAAGTAG.1 \n##                 0                 7                 0                 0 \n##  GGGCCATGCAGAAA.1  GGGCCATGCAGTCA.1  GGGCCATGCATCAG.1  GGGCCATGCATGAC.1 \n##                 3                 0                 3                 7 \n##  GGGCCATGCCCTTG.1  GGGCCATGCTATTC.1  GGGCCATGCTGTAG.1  GGGCCATGTAGCCA.1 \n##                 0                 2                 0                10 \n##  GGGTAACTCTGAGT.1  GGGTAACTGTACGT.1  GGGTAACTGTCTAG.1  GGGTAACTTGAGAA.1 \n##                 0                 5         CD16 Mono                 1 \n##  GGGTTAACCATGCA.1  GGGTTAACCGAATC.1  GGGTTAACGTAGCT.1  GGGTTATGAAGTGA.1 \n##                 3                 0         CD16 Mono                 6 \n##  GGGTTATGGTTGGT.1 GGGTTATGTGCAAC.11  GGTAAAGAAATGCC.1  GGTAAAGAACGGGA.1 \n##                 9                 3                11                 0 \n##  GGTACAACCCCGTT.1  GGTACAACCGAACT.1  GGTACAACCGCAAT.1  GGTACAACGTCTTT.1 \n##                 5                 0                 0                 7 \n##  GGTACATGAGCAAA.1  GGTACATGATGGTC.1  GGTACATGCAGAAA.1  GGTACATGCCCTCA.1 \n##                 1                 1                 7                 5 \n##  GGTACATGCCGATA.1  GGTACATGGAATCC.1  GGTACATGGACGAG.1  GGTACTGAAGGTTC.1 \n##                 1                 0                 1                 5 \n##  GGTACTGAGACTAC.1  GGTAGTACAGCATC.1  GGTAGTACAGTTCG.1  GGTAGTACGAATAG.1 \n##                 2                 6                 0                 6 \n##  GGTAGTACGGTAGG.1  GGTAGTACGTAGGG.1  GGTAGTACGTCTTT.1  GGTAGTACTCACGA.1 \n##                 1         CD16 Mono                 1                 7 \n##  GGTATCGAAGAACA.1  GGTATCGACTTCGC.1  GGTATCGAGACACT.1  GGTATCGAGTGCTA.1 \n##                 6                 6                 0                 1 \n##  GGTATCGATCGCAA.1  GGTATCGATGCCAA.1  GGTATGACACACTG.1  GGTATGACACGTAC.1 \n##                 2                11                 6                 3 \n##  GGTATGACAGTAGA.1  GGTATGACGAAAGT.1  GGTATGACTTGTGG.1  GGTCAAACAACCTG.1 \n##                 9                 0                 3                 7 \n##  GGTCAAACACACCA.1  GGTCAAACCGTAGT.1  GGTCAAACCGTTGA.1  GGTCAAACGGGCAA.1 \n##                 9                 2                 1                 1 \n##  GGTCAAACGTAAGA.1  GGTCTAGAAGTGTC.1  GGTCTAGACATACG.1  GGTCTAGACCCACT.1 \n##                 0                 1                 0                 0 \n##  GGTCTAGAGTCATG.1  GGTCTAGAGTCTGA.1  GGTCTAGATGTCCC.1  GGTCTAGATTGTGG.1 \n##                 3                 0                 1         CD16 Mono \n##  GGTGATACAGTAGA.1  GGTGATACCCGCTT.1  GGTGATACCCTCGT.1  GGTGGAGAACCATG.1 \n##                 0                 1                 0                 0 \n##  GGTGGAGACGCAAT.1  GGTGGAGAGAATCC.1  GGTGGAGAGCATAC.1 GGTGGAGAGGAACG.11 \n##                 0         CD16 Mono                11                 0 \n##  GGTGGAGATGCGTA.1  GGTGGAGATGTCAG.1  GGTTGAACAGTCAC.1  GGTTGAACGAACCT.1 \n##                 0                 2                 0                 3 \n##  GGTTGAACGCTTAG.1  GGTTGAACTGCAGT.1  GGTTGAACTGCGTA.1  GGTTGAACTTTCTG.1 \n##                 1                 0                 1                 8 \n##  GGTTTACTGCGGAA.1  GGTTTACTGTGTCA.1  GGTTTACTTAAGCC.1  GGTTTACTTCGTGA.1 \n##                 0                 1                 0                11 \n##  GTAACGTGCAACCA.1  GTAACGTGCACACA.1  GTAACGTGGCCAAT.1  GTAACGTGTATCTC.1 \n##                 6                 6                 0                 1 \n##  GTAAGCACCCTTGC.1  GTAAGCACCGTGTA.1  GTAAGCACCTCCAC.1  GTAAGCACGCATAC.1 \n##                 1                 2                 2                 3 \n##  GTAAGCACGTAAGA.1  GTAAGCACTAGAAG.1 GTAAGCACTGATGC.11  GTAAGCACTGGGAG.1 \n##                 0                 1                10                 5 \n##  GTAAGCTGCAGCTA.1  GTAAGCTGGATAAG.1  GTAAGCTGGGTGAG.1  GTAATAACACACGT.1 \n##                 2                 3                 1                 5 \n##  GTAATAACTGACTG.1  GTAATAACTTTACC.1  GTAATATGACGACT.1  GTAATATGAGGGTG.1 \n##                 2                 1                 3                 1 \n##  GTAATATGCTGATG.1  GTAATATGGAATAG.1  GTAATATGGTTCAG.1  GTAATATGTTACCT.1 \n##                 0                 7                 0                 0 \n##  GTACAGTGACACAC.1  GTACAGTGGACAGG.1  GTACAGTGTCCGTC.1  GTACCCTGAACCGT.1 \n##                 0                 9                 2                 5 \n##  GTACCCTGCTCCAC.1  GTACCCTGGCGTAT.1  GTACGAACCCTAAG.1  GTACGAACGCAGAG.1 \n##                 1                 5                 5                 2 \n##  GTACGAACGGTAGG.1  GTACGAACTACAGC.1  GTACGAACTTGCTT.1  GTACGTGAAAGTGA.1 \n##                 3                 5                 3         CD16 Mono \n##  GTACGTGATAGCGT.1  GTACGTGATGCAGT.1  GTACTACTAGATCC.1  GTACTACTCATGCA.1 \n##         CD16 Mono                 1                 8         CD16 Mono \n##  GTACTACTGCCTTC.1  GTACTACTGTTTGG.1  GTACTTTGAAAGTG.1  GTACTTTGAACAGA.1 \n##                 0                 0                 7                 9 \n##  GTACTTTGGCAGAG.1  GTACTTTGGGAACG.1  GTACTTTGGTGTAC.1  GTACTTTGTGAGGG.1 \n##                 6         CD16 Mono                 2                 9 \n##  GTAGACTGCTTCGC.1  GTAGACTGGCTATG.1  GTAGACTGGCTGTA.1  GTAGACTGTGGATC.1 \n##                 0                 1                 0                 7 \n##  GTAGACTGTGTCAG.1  GTAGACTGTTTACC.1 GTAGCAACAAGCCT.11  GTAGCAACAATGCC.1 \n##                 6                 5                 0                10 \n##  GTAGCAACAGCAAA.1  GTAGCAACATTCCT.1  GTAGCAACCTGTCC.1  GTAGCAACCTTGAG.1 \n##                 0                 0                 1                 0 \n##  GTAGCAACTAGACC.1  GTAGCAACTCAGAC.1  GTAGCAACTGTGAC.1  GTAGCAACTTTCAC.1 \n##                 2                 1                 0                 3 \n##  GTAGCATGAGTGTC.1  GTAGCATGCATGAC.1  GTAGCATGGAACCT.1  GTAGCATGGTGTTG.1 \n##                 2                 2                 6                 1 \n## GTAGCCCTAAGATG.11 GTAGCCCTAGACTC.11  GTAGCCCTCTTCCG.1 GTAGCCCTCTTGAG.11 \n##                 5                 7                 0                 2 \n##  GTAGCCCTTGCTCC.1  GTAGCCCTTTGTGG.1  GTAGCTGACGTAAC.1  GTAGCTGAGCAGTT.1 \n##                 0                 3                 6                 0 \n##  GTAGCTGAGGTGTT.1  GTAGGTACCACTTT.1  GTAGGTACCAGGAG.1  GTAGGTACTCTACT.1 \n##                 8                 0                 6                 0 \n##  GTAGGTACTCTCGC.1  GTAGTCGAAGAGTA.1  GTAGTCGACCACAA.1  GTAGTCGACCTTCG.1 \n##         CD16 Mono                 0                 0                 3 \n##  GTAGTCGACGAACT.1  GTAGTCGACGCATA.1  GTAGTCGATCCCAC.1  GTAGTCGATGCCCT.1 \n##                 1                 2                 9                 3 \n##  GTAGTCGATGGAGG.1  GTAGTCGATTTCTG.1  GTAGTGACATCGGT.1  GTAGTGACCAGTTG.1 \n##                10                 0                 0                 0 \n##  GTAGTGACGCCTTC.1  GTAGTGACGGTAAA.1  GTAGTGACTGTTTC.1  GTAGTGTGAACGAA.1 \n##                 0                 1         CD16 Mono                 0 \n##  GTAGTGTGAAGATG.1  GTAGTGTGCCGATA.1  GTAGTGTGCTTGAG.1  GTATCACTACGTGT.1 \n##                 0                 9                 3                 3 \n##  GTATCACTAGAGAT.1  GTATCACTCGGTAT.1  GTATCACTCTAGCA.1 GTATCACTGCGAGA.11 \n##                 3                 3                 0                 7 \n##  GTATCTACAGTGTC.1  GTATCTACCCGCTT.1  GTATCTACGCCATA.1  GTATCTACGGAACG.1 \n##                 3                 7                 3                 0 \n## GTATCTACTGACTG.11  GTATCTACTTCCGC.1  GTATCTACTTCTAC.1  GTATGGTGCGACTA.1 \n##                 0                 5         CD16 Mono                 2 \n##  GTATGGTGCTGTAG.1  GTATGGTGGAATGA.1  GTATGGTGGCATCA.1  GTATGGTGTGGAGG.1 \n##                 1                 1                 6                 1 \n##  GTATGGTGTTCTGT.1  GTATTAGACCAGTA.1  GTATTAGACGTAAC.1  GTATTAGAGTCATG.1 \n##                 3                 2                 5                 8 \n##  GTATTCACATACCG.1  GTATTCACCCTATT.1  GTATTCACTCCCAC.1  GTATTCACTGACAC.1 \n##                 2                 0                 0                 1 \n##  GTCAACGAACCACA.1  GTCAACGAAGTGCT.1  GTCAACGACCGATA.1  GTCAACGAGATACC.1 \n##                 1                 6                 0                 5 \n##  GTCAACGAGGATTC.1  GTCAACGATAGACC.1  GTCAATCTATGCTG.1  GTCAATCTCCCGTT.1 \n##                 1                 1                 0                 1 \n##  GTCAATCTCTTCGC.1  GTCAATCTTCCAAG.1  GTCAATCTTCCTGC.1  GTCACAGAAAACAG.1 \n##                 1                 0                 0                 5 \n##  GTCACAGAACCACA.1  GTCACAGAACGCAT.1  GTCACAGAATCGAC.1  GTCACAGATCGTTT.1 \n##                 2                 3                 1                 1 \n##  GTCACCTGCCTAAG.1  GTCACCTGCTTTAC.1  GTCACCTGTTCGTT.1  GTCATACTACCAAC.1 \n##                 0         CD16 Mono                 5                10 \n##  GTCATACTACGCAT.1  GTCATACTAGCTAC.1  GTCATACTAGTCGT.1  GTCATACTATGGTC.1 \n##                 3                 1                 5                 7 \n##  GTCATACTCGAGTT.1  GTCATACTGCTGAT.1  GTCATACTGGTAGG.1  GTCATACTGTGCTA.1 \n##                 0         CD16 Mono                 1                 8 \n## GTCATACTTAGACC.11  GTCATACTTCCAGA.1  GTCATACTTTTCAC.1  GTCCAAGAACCTTT.1 \n##                 3                 2                 2                 3 \n##  GTCCAAGACCAAGT.1  GTCCAAGACTACGA.1  GTCCAAGAGATAGA.1  GTCCAAGATCAGGT.1 \n##                 3                 1                 2                 0 \n##  GTCCAAGATGCTAG.1  GTCCACACACTAGC.1  GTCCACACCGTAGT.1  GTCCACACGAAACA.1 \n##                 2                 0                 1                11 \n##  GTCCACACTTCTCA.1  GTCCACTGACTACG.1  GTCCACTGGTGCTA.1  GTCCACTGTAGTCG.1 \n##                 0         CD16 Mono                 5                 0 \n##  GTCCACTGTTACCT.1  GTCCACTGTTCGTT.1  GTCCAGCTATTTCC.1  GTCCAGCTTGACAC.1 \n##                 1                 2                 2                 5 \n##  GTCCAGCTTGCCAA.1  GTCCCATGCTCAGA.1 GTCCCATGCTTGTT.11  GTCCCATGTGTCGA.1 \n##                 8                 0                 0                 1 \n##  GTCGAATGACAGTC.1  GTCGAATGAGCTAC.1  GTCGAATGCAGAAA.1  GTCGAATGCATGGT.1 \n##                 2                 1                 2                 2 \n##  GTCGAATGCCCGTT.1  GTCGAATGGGATTC.1  GTCGAATGTTGACG.1  GTCGACCTAGTCAC.1 \n##                 1                 5                 2                 2 \n##  GTCGACCTTCGTGA.1  GTCGACCTTTCACT.1  GTCGACCTTTGGCA.1  GTCGCACTCTCAAG.1 \n##                 0                 1                 0                 6 \n##  GTCGCACTTCGCAA.1  GTCGCACTTTGCGA.1  GTCTAACTACCATG.1  GTCTAACTACTCAG.1 \n##                 1                 2                 0                 0 \n##  GTCTAACTTAAGCC.1  GTCTAACTTCCTCG.1  GTCTAACTTTTCTG.1  GTCTAGGAACGGGA.1 \n##                 0                 1                 3                 6 \n##  GTCTAGGAAGGCGA.1  GTCTAGGACCTATT.1  GTCTAGGACGTACA.1  GTCTAGGAGCGATT.1 \n##                 3                 3                 0                 1 \n## GTCTAGGATGCTAG.11  GTCTAGGATGTGCA.1  GTCTGAGAAGCATC.1  GTCTGAGACAACCA.1 \n##                 2                 0                 2                 2 \n##  GTCTGAGAGGTATC.1  GTCTGAGATCCCAC.1  GTGAACACACTTTC.1  GTGAACACAGAGAT.1 \n##                 1                 3                 0                 2 \n##  GTGAACACAGAGTA.1  GTGAACACCTAGTG.1  GTGAACACGAATAG.1  GTGAACACGGGATG.1 \n##                 0                 0                 1                 2 \n##  GTGACAACAAGTGA.1  GTGACAACCAGGAG.1  GTGACAACCCAACA.1  GTGACAACTTCCCG.1 \n##                 2                 2                 2                 0 \n##  GTGACCCTAGCCTA.1  GTGACCCTGAACTC.1  GTGACCCTGCGGAA.1 GTGACCCTTAAGCC.11 \n##                 2                 3                 0                 9 \n##  GTGACCCTTGAAGA.1  GTGAGGGAACAGCT.1  GTGAGGGAATCAGC.1  GTGAGGGACCGTAA.1 \n##                 1                 7                 1                 5 \n##  GTGAGGGACGACTA.1  GTGAGGGACTCGAA.1  GTGAGGGAGCTGTA.1  GTGAGGGATAACCG.1 \n##                 0                 1                 0                 7 \n##  GTGAGGGATCCTAT.1  GTGATCGATCTCCG.1  GTGATCGATGAGGG.1  GTGATGACCAACTG.1 \n##                 5                 9                 7                 9 \n##  GTGATGACCACACA.1  GTGATGACGAATCC.1  GTGATGACGCATCA.1  GTGATGACGTAAGA.1 \n##                 2                 6                 0                 2 \n##  GTGATTCTCCAAGT.1  GTGATTCTCCATGA.1  GTGATTCTCCCACT.1 GTGATTCTGTACGT.11 \n##                 5                 1                 1                 3 \n##  GTGATTCTGTTCTT.1  GTGATTCTTTACCT.1  GTGCAAACAGGTTC.1  GTGCAAACGGACGA.1 \n##         CD16 Mono                 0                 3                 2 \n##  GTGCAAACTCGTGA.1  GTGCAAACTGTCCC.1  GTGCCACTCGCTAA.1  GTGCCACTCTACCC.1 \n##                 7                 0                 1                 3 \n##  GTGCCACTGTCAAC.1  GTGCCACTTAGACC.1  GTGCTAGAAGAGTA.1  GTGCTAGACGAACT.1 \n##                 1                 3                 1                 0 \n##  GTGCTAGAGAAAGT.1  GTGCTAGAGAGGTG.1  GTGCTAGATCTTTG.1  GTGCTAGATTCGCC.1 \n##                 0         CD16 Mono                 0                 5 \n##  GTGCTAGATTTCAC.1  GTGGAGGACTCGCT.1  GTGGAGGAGGGACA.1  GTGGATTGAGTACC.1 \n##                 2                 1                 1                 2 \n##  GTGGATTGAGTCTG.1  GTGGATTGCCAACA.1  GTGGATTGCGTTGA.1  GTGGATTGTAAAGG.1 \n##                 6                 3                 2                 0 \n##  GTGGATTGTGGCAT.1  GTGGTAACGTAAGA.1  GTGGTAACTACTGG.1  GTGGTAACTCGTAG.1 \n##                 0                 0                 5                 3 \n##  GTGTACGACCCGTT.1  GTGTACGAGAAGGC.1  GTGTACGAGCCTTC.1  GTGTACGAGGGATG.1 \n##                 2                 0                 8                 7 \n##  GTGTAGTGAGCGGA.1 GTGTAGTGCCTACC.11  GTGTAGTGCTGTCC.1  GTGTAGTGTCGCTC.1 \n##                 7                 2                 1                 0 \n##  GTGTAGTGTGGTTG.1  GTGTATCTAGCACT.1  GTGTATCTATCTCT.1  GTGTATCTCCCTCA.1 \n##                 7                 1                 0                 3 \n##  GTGTATCTCCTTTA.1  GTGTATCTCTGGTA.1  GTGTATCTGGTAGG.1  GTGTGATGAAACGA.1 \n##                10                 2                 1                 0 \n##  GTGTGATGAAGTAG.1  GTGTGATGCTGTAG.1  GTGTGATGGCATAC.1  GTTAAAACGAGACG.1 \n##                 2                 1                 8                11 \n##  GTTAAAACTCCCGT.1 GTTAAAACTGCATG.11  GTTAAAACTTCTCA.1  GTTAAAACTTGGTG.1 \n##                 0         CD16 Mono                 2                 5 \n##  GTTAAATGACCTTT.1 GTTAAATGCGCCTT.11  GTTAAATGGAAAGT.1  GTTAAATGGGTTAC.1 \n##                 1                10                 6                 7 \n##  GTTAAATGTACAGC.1  GTTAAATGTTGCTT.1  GTTAACCTCCTTGC.1  GTTAACCTCCTTTA.1 \n##                 1                 1                 0                 5 \n##  GTTACGGAACGTAC.1  GTTACGGACCTCGT.1  GTTACGGACTACGA.1  GTTACGGAGTCTAG.1 \n##                 0                 2                 1                 3 \n##  GTTACGGATGAGAA.1  GTTACTACGCGAAG.1  GTTACTACGCTATG.1  GTTACTACTGCAAC.1 \n##                 7                 1         CD16 Mono                 0 \n##  GTTAGGTGACCTAG.1  GTTAGGTGAGGCGA.1  GTTAGGTGCAGGAG.1  GTTAGGTGGTTGGT.1 \n##                 2                 5                 2                 0 \n##  GTTAGGTGTTTGCT.1  GTTAGTCTATCGGT.1  GTTAGTCTGAGGGT.1  GTTAGTCTGATAGA.1 \n##                 0                 0         CD16 Mono                 3 \n##  GTTATAGAATTTCC.1  GTTATAGACCAAGT.1  GTTATAGACTCGAA.1  GTTATAGAGAGGAC.1 \n##                 0                12                 1                 1 \n##  GTTATAGAGCCAAT.1  GTTATAGATTTCTG.1  GTTATCTGACACGT.1  GTTATCTGCCAAGT.1 \n##                10                 7                 1                 1 \n##  GTTATCTGGCGAAG.1  GTTATCTGGGCGAA.1  GTTATGCTCATCAG.1  GTTATGCTCCTCCA.1 \n##                 2                 0                 0                 1 \n##  GTTATGCTCTACGA.1  GTTATGCTGAGGTG.1  GTTATGCTTCTCTA.1  GTTATGCTTTCCCG.1 \n##                 0                 3                 3                 0 \n##  GTTCAACTCCACCT.1  GTTCAACTGAATGA.1  GTTCAACTGCGGAA.1 GTTCAACTGCTAAC.11 \n##                 2                 1                 3                 1 \n##  GTTCAACTGTTGGT.1  GTTCAACTTAGACC.1  GTTCAACTTTCTAC.1  GTTCAGGAACCATG.1 \n##                 1                 1         CD16 Mono                 7 \n##  GTTCAGGAAGAGTA.1  GTTCAGGACGGGAA.1  GTTCAGGACTGATG.1  GTTCAGGAGTAGGG.1 \n##                 0                12                 5                 5 \n##  GTTCATACAAAGTG.1  GTTCATACAGGGTG.1  GTTCATACATTCGG.1  GTTCATACATTCTC.1 \n##                 1                 2                 9                 3 \n##  GTTCATACTAGACC.1  GTTCATACTCGTAG.1  GTTCATACTTCGGA.1  GTTGACGAACACCA.1 \n##                 2                 0                 6                10 \n##  GTTGACGAATCGGT.1  GTTGACGACATTGG.1  GTTGACGACCCGTT.1  GTTGACGACGCAAT.1 \n##                 0                 1                 1                 1 \n##  GTTGACGACTTGTT.1  GTTGACGAGCAGTT.1  GTTGACGATAAGCC.1  GTTGACGATGTTTC.1 \n##                 2                10                 0                 3 \n##  GTTGAGTGAAAGTG.1  GTTGATCTACACCA.1  GTTGATCTACTCTT.1  GTTGATCTAGCCAT.1 \n##                 1         CD16 Mono                 2         CD16 Mono \n##  GTTGATCTTACTTC.1  GTTGATCTTTAGGC.1  GTTGATCTTTTCTG.1  GTTGGATGAAACGA.1 \n##                 0                 1                 3                 3 \n##  GTTGGATGAAGGCG.1  GTTGGATGACTCAG.1  GTTGGATGAGCCTA.1  GTTGGATGAGCTCA.1 \n##                 0                 0                 2                 3 \n##  GTTGGATGCTACGA.1  GTTGGATGCTCATT.1  GTTGGATGGAACCT.1  GTTGGATGGACTAC.1 \n##                 0                 0                 6                 1 \n##  GTTGGATGTAGCCA.1  GTTGGATGTGGGAG.1  GTTGTACTAGCGTT.1  GTTGTACTCCTCAC.1 \n##                 3                 6         CD16 Mono                 5 \n##  GTTGTACTGTGTAC.1  GTTTAAGAACACGT.1  GTTTAAGACACTCC.1  GTTTAAGACGTTAG.1 \n##                 2                 0         CD16 Mono                 3 \n##  GTTTAAGACTCCCA.1  GTTTAAGACTCTTA.1  GTTTAAGACTTGTT.1  GTTTAAGAGACGAG.1 \n##                 0                 1                 2                 1 \n##  GTTTAAGAGAGCAG.1  GTTTAAGAGTAAGA.1  TAAACAACACAGTC.1  TAAACAACAGAACA.1 \n##                 1                 0                 1                 5 \n##  TAAACAACCGTACA.1  TAAACAACGAGATA.1  TAAACAACGGACAG.1  TAAAGACTAGATCC.1 \n##                 1                 2                 0                 0 \n##  TAAAGACTAGTTCG.1  TAAAGACTCGTTGA.1  TAAAGACTTCGACA.1  TAAAGACTTCTAGG.1 \n##                10                 3                 1                 1 \n##  TAAAGACTTCTCGC.1  TAAAGTTGATTTCC.1  TAAAGTTGCCGATA.1  TAAAGTTGGGTGAG.1 \n##                 2                 1                 0                 1 \n##  TAAAGTTGGTCGTA.1  TAAAGTTGTCCTTA.1  TAAAGTTGTCTATC.1  TAAAGTTGTTGTGG.1 \n##                 0                 1                 2                 0 \n##  TAAAGTTGTTTGTC.1  TAAATCGACTCAGA.1  TAAATCGAGAGGAC.1  TAAATCGATAACGC.1 \n##                 0                10                 6                 2 \n##  TAAATGTGACGTAC.1  TAAATGTGGAAGGC.1  TAAATGTGTCCTTA.1  TAAATGTGTTTGGG.1 \n##                 6                 3                 7                 0 \n##  TAACAATGACTGTG.1  TAACAATGCGGGAA.1  TAACAATGGTCACA.1  TAACAATGGTCTTT.1 \n##                 2         CD16 Mono                 1                 0 \n##  TAACACCTAGAGAT.1  TAACACCTAGGTCT.1  TAACACCTTCCCAC.1  TAACATGACATTGG.1 \n##                 7                 1                 2                 0 \n##  TAACATGACCTATT.1  TAACATGAGCGTAT.1  TAACATGAGTGCTA.1  TAACCGGACCGAAT.1 \n##                 1                 2                 1                 0 \n##  TAACCGGACTCGCT.1  TAACCGGACTCTTA.1  TAACCGGACTGTGA.1  TAACCGGACTTCCG.1 \n##                 2                 2                 1                 0 \n##  TAACCGGAGCTACA.1  TAACCGGATAAAGG.1  TAACCGGATCGCTC.1  TAACCGGATGAGAA.1 \n##                 9                 2                 1                 0 \n##  TAACCGGATTGCTT.1  TAACCGGATTTACC.1  TAACGTCTATCTTC.1  TAACGTCTGAAAGT.1 \n##                 2                 0                 1                 2 \n##  TAACGTCTGAACCT.1  TAACGTCTGACAGG.1  TAACGTCTGGGAGT.1  TAACGTCTTCTAGG.1 \n##                 0                 0                 1                 0 \n##  TAACTAGAACGGGA.1  TAACTAGATGCAGT.1  TAACTAGATTTCTG.1  TAACTCACATTCCT.1 \n##                 2                 1                 0                 1 \n##  TAACTCACTCTCAT.1  TAACTCACTTGCAG.1  TAAGAACTCCCAAA.1  TAAGAGGAAAAAGC.1 \n##                 2                 5                 3                 6 \n##  TAAGAGGATTAGGC.1  TAAGATACGTGTCA.1  TAAGATACTCACGA.1 TAAGATACTGTCCC.11 \n##         CD16 Mono                 0                 7                 1 \n##  TAAGATTGAGATGA.1  TAAGATTGATAAGG.1  TAAGATTGATGGTC.1  TAAGATTGCCACCT.1 \n##         CD16 Mono                 0                 0                 2 \n##  TAAGCGTGCACTAG.1  TAAGCGTGCTGCAA.1  TAAGCGTGGACAGG.1  TAAGCGTGGACGTT.1 \n##                 3                 2                 3                 0 \n##  TAAGCGTGGCGTAT.1  TAAGCGTGGGGAGT.1  TAAGCGTGTGTGAC.1  TAAGCTCTACCATG.1 \n##                 3                 0                 1                 0 \n##  TAAGCTCTAGTCAC.1  TAAGCTCTAGTGTC.1  TAAGCTCTGGTGAG.1  TAAGCTCTGTCTAG.1 \n##                 1                 0                 7                 1 \n##  TAAGCTCTTAGAGA.1  TAAGCTCTTTGGCA.1  TAAGGCTGAAGCAA.1  TAAGGCTGACGGGA.1 \n##                 1                 0                 6                 2 \n##  TAAGGCTGATCGTG.1  TAAGGCTGCACAAC.1  TAAGGCTGCCCTCA.1  TAAGGCTGGAAAGT.1 \n##                 0                 0                 9                 2 \n## TAAGGCTGTCAAGC.11  TAAGGCTGTCCTGC.1  TAAGGCTGTGTCGA.1  TAAGGGCTCAATCG.1 \n##                 2                 7                 1                 9 \n##  TAAGTAACAGAAGT.1  TAAGTAACAGAGTA.1  TAAGTAACCGCATA.1  TAAGTAACCGTTGA.1 \n##                 3                 5                 5                 0 \n##  TAAGTAACGAGGCA.1  TAAGTAACTGTGGT.1  TAAGTCCTACCAGT.1  TAAGTCCTCTACTT.1 \n##                 2                 6                 1                 1 \n##  TAAGTCCTGGTCTA.1  TAAGTCCTGTACAC.1  TAATCCACACGTAC.1  TAATCCACATGTCG.1 \n##                 1                 5                 1                 1 \n## TAATCCACCTCTAT.11  TAATCCACTTCGCC.1  TAATCGCTTTCCAT.1  TAATGAACAGACTC.1 \n##                 0                 1                13                 1 \n##  TAATGAACGAAGGC.1  TAATGAACGCATAC.1  TAATGAACGTTCAG.1  TAATGAACGTTGAC.1 \n##                 2                 1                 2                 3 \n##  TAATGAACTGGCAT.1  TAATGATGACCTGA.1  TAATGATGAGGGTG.1  TAATGATGCGACAT.1 \n##                 0                 2                 2         CD16 Mono \n##  TAATGATGGCGAGA.1  TAATGATGGGCGAA.1  TAATGCCTACGTAC.1  TAATGCCTCCACCT.1 \n##         CD16 Mono                 0                 0         CD16 Mono \n##  TAATGCCTCCATAG.1  TAATGCCTTACTTC.1  TAATGCCTTGTGAC.1  TAATGTGAAGATGA.1 \n##                 1                 5         CD16 Mono         CD16 Mono \n##  TAATGTGACACAAC.1  TAATGTGAGCGGAA.1 TAATGTGAGGTCAT.11  TAATGTGATAACGC.1 \n##                 2                 2                 6                 1 \n##  TAATGTGATTCATC.1  TAATGTGATTCGTT.1  TACAAATGACGCAT.1  TACAAATGACGTTG.1 \n##         CD16 Mono                 3                 0                 6 \n##  TACAAATGCGAATC.1  TACAAATGGCGAAG.1  TACAAATGTACGCA.1  TACAAATGTTGCTT.1 \n##                 2                 1                10         CD16 Mono \n##  TACAATGACATTCT.1  TACAATGAGCGGAA.1  TACAATGAGTACGT.1  TACAATGATGAGCT.1 \n##                 0                 5                 0                 0 \n##  TACAATGATGGAGG.1  TACAATGATTCAGG.1  TACACACTCCACCT.1  TACACACTTAACCG.1 \n##                 0                 7                 7                 5 \n##  TACACACTTTGGTG.1  TACATAGAATCACG.1  TACATAGACTGAAC.1  TACATAGATGGCAT.1 \n##                 5                 0                12                 1 \n##  TACATCACGAATGA.1  TACATCACGCAGAG.1  TACATCACTAGCCA.1  TACATCACTGATGC.1 \n##         CD16 Mono                 1                 0                 0 \n##  TACATCACTTCTTG.1  TACCATTGACGTAC.1  TACCATTGGGCGAA.1  TACCGAGAAACCAC.1 \n##                 2                 0                 2                 1 \n##  TACCGAGAAACTGC.1  TACCGAGAACACAC.1  TACCGAGAACTGTG.1  TACCGAGACGAGTT.1 \n##                 2                 9                 0         CD16 Mono \n##  TACCGAGACGGGAA.1  TACCGAGACTTACT.1  TACCGAGAGTCGTA.1  TACCGAGATCCTAT.1 \n##                 2                 1                 0                 1 \n##  TACCGCTGCCGTAA.1  TACCGCTGCCGTTC.1  TACCGCTGCTAGAC.1  TACCGCTGGCTTAG.1 \n##                 1                 2                 7                 1 \n##  TACCGCTGTTCTCA.1  TACCGCTGTTGCTT.1  TACCGGCTATTCGG.1  TACCGGCTTCGCTC.1 \n##                 5                 0                 7                 1 \n##  TACCGGCTTCGTAG.1  TACCGGCTTCTAGG.1  TACGACGAAAGCAA.1  TACGACGACCTAAG.1 \n##                 0                 0                 2                 3 \n##  TACGACGACGTAGT.1  TACGACGACTCAAG.1  TACGACGACTGTGA.1  TACGACGAGCTACA.1 \n##                10                 7                 1                 1 \n##  TACGACGAGTGTCA.1  TACGACGATTCGTT.1  TACGACGATTTGGG.1  TACGAGACATGCTG.1 \n##                 1                 0                 0                 1 \n##  TACGAGACCTATTC.1  TACGAGTGAATCGC.1  TACGAGTGCTAGTG.1  TACGAGTGCTGGTA.1 \n##                 1                 3                 0                 0 \n##  TACGAGTGGTACCA.1  TACGAGTGTACAGC.1  TACGAGTGTAGCGT.1  TACGATCTAAAGCA.1 \n##                 1                 1                 7                 1 \n##  TACGATCTGGAGCA.1  TACGATCTGTCGAT.1  TACGATCTTTACTC.1  TACGCAGAACACAC.1 \n##                 5                 1         CD16 Mono                 6 \n##  TACGCAGACCGTAA.1  TACGCAGACTATTC.1  TACGCAGACTTATC.1  TACGCAGACTTGGA.1 \n##                 3                 3         CD16 Mono                 1 \n##  TACGCAGAGGTCTA.1  TACGCAGATACTCT.1  TACGCAGATTGCAG.1  TACGCCACCGAATC.1 \n##                 2                 0                 0         CD16 Mono \n##  TACGCCACCGTAAC.1  TACGCCACGGGCAA.1  TACGCCACTCAGGT.1  TACGCGCTAAAACG.1 \n##                 8                 0                 0                 0 \n##  TACGCGCTACCATG.1  TACGCGCTACTAGC.1  TACGCGCTAGAAGT.1  TACGCGCTCTATGG.1 \n##                 5                 0                 0                 0 \n##  TACGCGCTGAATAG.1  TACGCGCTGGTGAG.1  TACGCGCTTGTCAG.1  TACGGAACCACTCC.1 \n##                 2                 1                 1                 0 \n##  TACGGAACCCTCCA.1  TACGGAACTGGAAA.1  TACGGCCTACCAAC.1  TACGGCCTAGAAGT.1 \n##                 2                 2                 0                 3 \n##  TACGGCCTCATGGT.1  TACGGCCTCTCGAA.1  TACGGCCTGCTCCT.1  TACGTACTTAAGCC.1 \n##                 1                 1                 6                 0 \n##  TACGTTACAGATGA.1  TACGTTACGAATAG.1  TACGTTACGTTGGT.1  TACGTTACTTTCGT.1 \n##                 2                 3                 1                 0 \n##  TACTAAGACTAGAC.1  TACTAAGATCTCTA.1  TACTAAGATTCAGG.1  TACTACACAAGGTA.1 \n##                 0                 7                 7                 1 \n##  TACTACACACGGAG.1  TACTACACAGGCGA.1  TACTACACCAATCG.1  TACTACACTCTACT.1 \n##                 0                 6                 1                 0 \n##  TACTACTGCCTCGT.1  TACTACTGGAATCC.1  TACTACTGGCATAC.1  TACTACTGGCTTAG.1 \n##                 0                 0                12                 0 \n##  TACTACTGGTCGTA.1  TACTCAACACACGT.1  TACTCAACAGTGTC.1  TACTCAACATCGGT.1 \n##                 1                 7                 2                 1 \n##  TACTCAACCATTGG.1  TACTCAACCTACCC.1  TACTCCCTACTGGT.1  TACTCCCTGACAAA.1 \n##                 5                 1                 1                 7 \n## TACTCCCTGCATCA.11  TACTCCCTTCATTC.1  TACTCCCTTGCCTC.1  TACTCCCTTGCTTT.1 \n##                 1                 2                 0                 5 \n##  TACTCTGAAGAGTA.1  TACTCTGAAGTGTC.1  TACTCTGACAGCTA.1  TACTCTGACGTACA.1 \n##                 6                 1                 1                 8 \n##  TACTCTGACTGGTA.1  TACTCTGAGCTCCT.1  TACTCTGAGTTGAC.1  TACTCTGATTCACT.1 \n##                 0                 0                 0                 0 \n##  TACTGGGACTGAGT.1  TACTGTTGAGAAGT.1  TACTGTTGATAAGG.1  TACTGTTGATTCGG.1 \n##                 1                 5                 1                 1 \n##  TACTGTTGCGCATA.1  TACTGTTGTACAGC.1  TACTGTTGTCAGTG.1  TACTGTTGTCGTGA.1 \n##                 1                 1                 1                 0 \n##  TACTGTTGTCGTTT.1  TACTTGACGCATCA.1  TACTTGACGGCAAG.1  TACTTGACTCTGGA.1 \n##                 3                 0                 3                 1 \n##  TACTTGACTTTGGG.1  TACTTTCTAATGCC.1  TACTTTCTAGGGTG.1  TACTTTCTATCGAC.1 \n##                 1                 7                 1                 1 \n##  TACTTTCTCCCGTT.1  TACTTTCTCCCTCA.1  TACTTTCTGAATCC.1  TACTTTCTTCAGAC.1 \n##                 2                 5                 0                 2 \n##  TACTTTCTTTCGGA.1  TACTTTCTTTGTCT.1  TAGAAACTGCAAGG.1  TAGAAACTTCAGGT.1 \n##                 3                 0         CD16 Mono                 3 \n##  TAGAAACTTCCTAT.1  TAGAATACTGCACA.1  TAGAATACTGGTCA.1  TAGAATTGGACAGG.1 \n##                 2                 0                 0                 2 \n##  TAGAATTGGGGATG.1  TAGAATTGGGTATC.1  TAGAATTGTCGATG.1  TAGAATTGTCTACT.1 \n##                 7                 1                 0                 2 \n## TAGAATTGTTTGTC.11  TAGACGTGAGGAGC.1  TAGACGTGCAAAGA.1  TAGACGTGCGAACT.1 \n##                 0                 1                 6                 0 \n##  TAGACGTGCTAGAC.1  TAGACGTGTGAAGA.1  TAGACGTGTGAGAA.1  TAGACGTGTGAGGG.1 \n##                 3                 1                 5         CD16 Mono \n##  TAGACGTGTTCCGC.1  TAGAGAGAACGGAG.1  TAGAGAGAGTTCTT.1  TAGAGAGATGCTGA.1 \n##                 7                 2                 0                 5 \n##  TAGAGCACACGGGA.1  TAGAGCACCAGGAG.1  TAGAGCACCCTTGC.1  TAGAGCACGCTACA.1 \n##                 7                 1                 1                 2 \n## TAGAGCACGCTTAG.11  TAGAGCACGGCAAG.1  TAGAGCACGGGATG.1  TAGAGCACTCCTGC.1 \n##                 5                 0         CD16 Mono                 2 \n##  TAGATCCTACTCAG.1  TAGATCCTAGTGTC.1  TAGATCCTCCGTTC.1  TAGATCCTTATCTC.1 \n##                 1                 1                 1                 1 \n##  TAGATCCTTGAGAA.1  TAGATCCTTTCACT.1  TAGATTGAACCTAG.1  TAGATTGAACGTAC.1 \n##                 1                 2                 5                13 \n##  TAGATTGAAGTCAC.1  TAGATTGACTTGTT.1  TAGCATCTCTGTAG.1  TAGCATCTTGCCAA.1 \n##                 6                 6                 7                 1 \n##  TAGCCCACAAACAG.1  TAGCCCACAATGCC.1  TAGCCCACATGCTG.1  TAGCCCACTTCGGA.1 \n##                 6                 0                 0                 6 \n##  TAGCCCTGACCTCC.1  TAGCCCTGCGAGAG.1  TAGCCCTGGATGAA.1  TAGCCCTGTATCGG.1 \n##                 1                 0                 1                 2 \n##  TAGCCCTGTGTCGA.1  TAGCCCTGTTCCGC.1  TAGCCGCTAACGAA.1  TAGCCGCTCCTTAT.1 \n##                 0                 0                 1                 0 \n##  TAGCCGCTGTACCA.1  TAGCGATGAACGGG.1  TAGCGATGGGGACA.1  TAGCGATGGTCTGA.1 \n##                 1                 1                 1                 0 \n##  TAGCGATGTCGACA.1  TAGCTACTCTGTGA.1  TAGCTACTGCTATG.1  TAGCTACTGTCAAC.1 \n##         CD16 Mono                 2         CD16 Mono                 0 \n##  TAGCTACTTTTGTC.1  TAGGACTGACGCAT.1  TAGGACTGCAGAAA.1  TAGGACTGCTCTTA.1 \n##                 1                 3                 8                 1 \n##  TAGGACTGTTCGGA.1  TAGGAGCTCATTCT.1  TAGGCAACAGATCC.1  TAGGCAACTAACGC.1 \n##                 0                 0                 0                 2 \n##  TAGGCATGAGGTTC.1  TAGGCATGATGCTG.1  TAGGCATGCTATTC.1  TAGGCTGAAATCGC.1 \n##                 3         CD16 Mono                 6                 5 \n##  TAGGCTGAAGAGTA.1  TAGGCTGACTCAGA.1 TAGGCTGAGCATAC.11  TAGGCTGAGCTGAT.1 \n##                 1                 5         CD16 Mono                 8 \n##  TAGGCTGAGTAAGA.1  TAGGCTGAGTGCAT.1  TAGGCTGATCTCCG.1  TAGGCTGATTGAGC.1 \n##                 1                 1                 0                 0 \n##  TAGGGACTATCAGC.1 TAGGGACTTGCATG.11  TAGGGACTTTACTC.1  TAGGTCGACTTCGC.1 \n##                 8                 8                 3                 1 \n##  TAGGTCGAGTCTGA.1  TAGGTCGATGCATG.1  TAGGTGACACGCTA.1  TAGGTGACATAAGG.1 \n##                 0                 2                 2                 2 \n##  TAGGTGACCCAATG.1  TAGGTGACTGTCAG.1  TAGGTGACTTGCAG.1  TAGGTGTGATCGTG.1 \n##                10                 9                 0                 3 \n##  TAGGTGTGCTATTC.1  TAGGTGTGGAGAGC.1  TAGGTGTGGTCTGA.1  TAGGTGTGTCAAGC.1 \n##                 0                 0                 2                 5 \n##  TAGGTGTGTGCCCT.1  TAGGTTCTCGACAT.1  TAGGTTCTCTGGTA.1  TAGGTTCTGACACT.1 \n##                11                 0                 3                 0 \n##  TAGGTTCTGGACGA.1  TAGGTTCTGTTCTT.1 TAGGTTCTTCTACT.11  TAGGTTCTTTATCC.1 \n##                10                 0                 7                 1 \n## TAGTAAACACACGT.11  TAGTAAACTTGCAG.1  TAGTAATGAGCACT.1  TAGTAATGGAGCAG.1 \n##                 1                 7                 5                 0 \n##  TAGTAATGGATGAA.1  TAGTAATGTTGAGC.1  TAGTACCTCTAGTG.1  TAGTACCTGCTACA.1 \n##                 0                 1                 1                 0 \n##  TAGTACCTTAACCG.1  TAGTACCTTCTGGA.1  TAGTACCTTGCGTA.1  TAGTATGAACTGTG.1 \n##                 2                 1                 9                 2 \n##  TAGTATGACTTCTA.1 TAGTATGAGTACCA.11  TAGTATGAGTTTCT.1  TAGTCACTCTACGA.1 \n##                 2                 1                 7                 1 \n##  TAGTCACTGAGATA.1  TAGTCACTTGCATG.1  TAGTCACTTGGCAT.1  TAGTCGGAAAAGTG.1 \n##                 1                 9         CD16 Mono                 1 \n##  TAGTCGGAGATAAG.1  TAGTCGGAGGTCAT.1  TAGTCGGATGACCA.1  TAGTCTTGAGCACT.1 \n##                 0                 1                11                 1 \n##  TAGTCTTGCGGTAT.1  TAGTCTTGGAATCC.1  TAGTCTTGGCAAGG.1  TAGTCTTGGTAGCT.1 \n##                 2                 2                 0                 1 \n##  TAGTCTTGTCCTAT.1  TAGTCTTGTGTGAC.1  TAGTCTTGTTCATC.1  TAGTGGTGAACCAC.1 \n##         CD16 Mono                 0                 1                 2 \n##  TAGTGGTGACGACT.1  TAGTTCACAGTCAC.1  TAGTTCACCGACAT.1  TAGTTCACTCGTTT.1 \n##                 0                10                 0                 1 \n##  TAGTTCACTGTGCA.1  TAGTTGCTCCAACA.1  TAGTTGCTCCAAGT.1  TAGTTGCTTCGCAA.1 \n##                11                 0                 7                 5 \n##  TATAAGACACAGTC.1  TATAAGACCACACA.1  TATAAGACCCACCT.1  TATAAGACCCTGTC.1 \n##                 1                 0                 0                 2 \n##  TATAAGACCGTACA.1  TATAAGACGAATAG.1  TATAAGACTGTAGC.1  TATAAGACTTCGTT.1 \n##                13                 1                 1                 6 \n##  TATAAGTGACCTCC.1  TATAAGTGGATAAG.1  TATAAGTGGCTGTA.1  TATAAGTGGGTCTA.1 \n##                 1                 1                 2                 0 \n##  TATACAGACCTTCG.1  TATACAGACGAGAG.1  TATACAGACTACTT.1  TATACAGATGTTCT.1 \n##                 0                 0                 1         CD16 Mono \n##  TATACCACACACCA.1  TATACCACTGCAGT.1  TATACCACTGCGTA.1  TATACGCTAGAATG.1 \n##         CD16 Mono                 7                 3                 3 \n##  TATACGCTAGATCC.1  TATACGCTCTAAGC.1  TATACGCTGATACC.1  TATAGATGAGAGGC.1 \n##                 6                 3                 2                 5 \n##  TATAGATGGGGAGT.1  TATAGATGTTGTCT.1  TATAGCCTAGACTC.1  TATAGCCTAGAGTA.1 \n##                 0                 2                 2                 1 \n##  TATAGCCTCAATCG.1  TATAGCCTCACACA.1  TATAGCCTCCATAG.1  TATAGCCTCTGAGT.1 \n##                 0         CD16 Mono                 0                 2 \n##  TATAGCCTGACGTT.1  TATAGCCTTGGCAT.1  TATCAAGAACTTTC.1  TATCAAGAGTAAAG.1 \n##                 8         CD16 Mono                 0                 1 \n##  TATCACTGATGCCA.1  TATCACTGCATGCA.1  TATCACTGCGTGAT.1  TATCACTGGAAGGC.1 \n##                 1                 8                 0                 2 \n##  TATCACTGGTACGT.1  TATCACTGGTCTGA.1  TATCACTGGTTACG.1  TATCACTGTCAGTG.1 \n##                 0                 2                 1                 8 \n##  TATCACTGTCTCCG.1  TATCACTGTGGGAG.1  TATCACTGTTGTCT.1  TATCAGCTAGTACC.1 \n##                 1                 3                 0                 5 \n##  TATCAGCTGGACTT.1  TATCAGCTTGCACA.1  TATCCAACAACGAA.1  TATCCAACCAACTG.1 \n##                 1                 0                 2                 1 \n##  TATCCAACCAGTTG.1  TATCCAACCCAGTA.1  TATCCAACCTCGAA.1  TATCCAACCTTAGG.1 \n##         CD16 Mono                 1                 2                 1 \n##  TATCCAACCTTGCC.1  TATCCAACGAACCT.1  TATCCAACGAATAG.1  TATCCAACGAGGCA.1 \n##                 1                 3                 0                 0 \n##  TATCCAACTAGCCA.1  TATCCAACTATCTC.1  TATCCAACTCAGTG.1  TATCCAACTCCGTC.1 \n##                 3                 2                 0                 3 \n##  TATCCAACTTTGGG.1  TATCCTGAAAGCCT.1  TATCCTGAACCTGA.1  TATCCTGAAGGTTC.1 \n##                 7                 0                 1                 5 \n##  TATCCTGAATCGTG.1  TATCCTGAATGTGC.1  TATCCTGAGGTAAA.1  TATCCTGATACTGG.1 \n##                 1                 2                10                 1 \n##  TATCCTGATCTCCG.1  TATCCTGATCTCTA.1  TATCCTGATGACCA.1  TATCCTGATGGCAT.1 \n##                 3                 6                 0                 0 \n##  TATCCTGATTCGGA.1  TATCCTGATTGAGC.1  TATCGACTAAAAGC.1  TATCGACTCAACTG.1 \n##         CD16 Mono                10                 3                 1 \n##  TATCGACTCAATCG.1  TATCGACTCTTGCC.1  TATCGACTGGAGTG.1  TATCGACTGTAGCT.1 \n##                 3                 0                 2                 3 \n##  TATCGTACACCTAG.1  TATCGTACACGCAT.1  TATCGTACACTAGC.1  TATCGTACCACTCC.1 \n##                 0                 3                 7                 0 \n##  TATCGTACTTATCC.1  TATCTCGACGTAAC.1  TATCTCGATACTGG.1  TATCTGACGAGATA.1 \n##                 0                 2                 3                 1 \n##  TATCTGACTCCCAC.1  TATCTTCTCAGAGG.1  TATCTTCTTAGCCA.1  TATCTTCTTTGGTG.1 \n##                 6                 1                 1                 2 \n##  TATGAATGGTACGT.1  TATGAATGGTCGTA.1  TATGAATGGTTTGG.1  TATGAATGTACTCT.1 \n##                 1                 0                 0                 2 \n##  TATGAATGTATGCG.1  TATGAATGTCACGA.1  TATGCGGACTGAGT.1  TATGCGGATCTATC.1 \n##                 3                 1                11                 2 \n##  TATGGGACACCACA.1  TATGGGACGGATCT.1  TATGGGACGGTAAA.1  TATGGGACGTTAGC.1 \n##                 3                 0                 2                 6 \n##  TATGGGACTCCCGT.1  TATGGGACTTGCAG.1  TATGGGACTTGGTG.1  TATGGGTGCCCGTT.1 \n##                 0                 2                 9                 0 \n##  TATGGGTGTCGACA.1  TATGGGTGTCGATG.1  TATGGGTGTTCCCG.1  TATGGTCTCACTTT.1 \n##                 1                 0                 1                 7 \n##  TATGGTCTGCTATG.1  TATGGTCTGTATGC.1  TATGGTCTTCCCAC.1  TATGTCACAGTAGA.1 \n##                 2                10                 2                 2 \n##  TATGTCACATCGAC.1  TATGTCACCATTGG.1  TATGTCACCCGTTC.1  TATGTCACGCGTTA.1 \n##                 1                 3                 2                 5 \n##  TATGTCTGCACAAC.1  TATGTCTGCACACA.1  TATGTCTGGTTGTG.1  TATGTCTGTCGACA.1 \n##                 0         CD16 Mono         CD16 Mono         CD16 Mono \n##  TATGTCTGTCTCGC.1  TATGTGCTAGTGTC.1  TATGTGCTGATAAG.1  TATGTGCTTCCTAT.1 \n##                 0                 2                 0                 0 \n##  TATGTGCTTGCAGT.1  TATTGCTGACACAC.1  TATTGCTGATTGGC.1  TATTGCTGCCAATG.1 \n##                 0                 9                 5                 2 \n##  TATTGCTGCTAGAC.1  TATTGCTGCTCCCA.1  TATTGCTGTGACAC.1  TATTTCCTCGTACA.1 \n##                 9                 1                 0                 0 \n##  TATTTCCTGCATAC.1  TATTTCCTTGCTTT.1  TCAACACTAAGGGC.1  TCAACACTCGAATC.1 \n##                 0                 7                 0                 9 \n##  TCAACACTGACACT.1  TCAACACTGTTACG.1  TCAACACTTTACTC.1  TCAAGGACCCACAA.1 \n##                 5                 6                 0                 2 \n##  TCAAGGACGGGTGA.1  TCAAGGACGTTGTG.1  TCAAGGTGAAGAGT.1  TCAAGGTGAGGTTC.1 \n##                 0                 7                 2                 1 \n##  TCAAGGTGGAATGA.1  TCAAGGTGTAGTCG.1  TCAAGGTGTGGTGT.1  TCAAGGTGTTGACG.1 \n##         CD16 Mono         CD16 Mono                 5                 1 \n## TCAAGTCTGAAAGT.11  TCAAGTCTTCAGAC.1  TCAATAGAACTAGC.1  TCAATAGAATTCCT.1 \n##                 6                 1                 1                 1 \n##  TCAATAGACCTTAT.1  TCAATAGAGGCAAG.1  TCAATAGAGGGAGT.1  TCAATCACCATCAG.1 \n##                 0                 7                 1                 0 \n## TCAATCACGGGATG.11  TCAATCACGTCTTT.1  TCAATCACGTTCGA.1  TCAATCACTTAGGC.1 \n##                 6                13                 1                 7 \n##  TCACATACAGAATG.1  TCACATACAGCTCA.1  TCACATACAGGAGC.1  TCACATACCAGAAA.1 \n##                 2                 1                 1                 2 \n##  TCACATACCATTGG.1  TCACATACTTGTCT.1  TCACCCGAAGATGA.1  TCACCCGACGTGTA.1 \n##                 1                 2                 0                 0 \n##  TCACCCGACTATTC.1  TCACCCGAGTAGCT.1  TCACCGTGAAGCAA.1  TCACCGTGACCCAA.1 \n##                 1                 0                 7                 1 \n##  TCACCGTGCAAAGA.1  TCACCGTGCCATAG.1  TCACCGTGCCTAAG.1  TCACCGTGCGTTAG.1 \n##                 1                 1                 2                 1 \n##  TCACCGTGGGGACA.1 TCACCGTGTTGCTT.11  TCACCTCTAGGTCT.1  TCACCTCTATGTCG.1 \n##         CD16 Mono                 3                 0         CD16 Mono \n##  TCACCTCTGGTGAG.1  TCACGAGAAGCGGA.1  TCACGAGACGAACT.1  TCACGAGACGGTAT.1 \n##                 9                 1                 0                 0 \n##  TCACGAGAGGGTGA.1  TCACGAGAGTCGTA.1  TCACGAGAGTTGGT.1  TCACGAGATACTGG.1 \n##                 8                 9                 5                 0 \n##  TCACGAGATCGTAG.1  TCACTATGCAGAGG.1  TCACTATGGAATCC.1  TCACTATGGTCTTT.1 \n##                 1                 1                 1                 5 \n##  TCACTATGTATGCG.1  TCACTATGTCTCGC.1  TCAGACGAAAAGTG.1  TCAGACGAAAGCAA.1 \n##                 2                 0                 5                 0 \n##  TCAGACGAGATACC.1  TCAGACGATGCTTT.1  TCAGAGACCCTATT.1  TCAGAGACCTCATT.1 \n##                 2                 0                 1                 0 \n## TCAGAGACCTCTAT.11  TCAGAGACCTCTTA.1  TCAGCAGATACAGC.1  TCAGCGCTCTACGA.1 \n##                 1                 5                 2                 0 \n##  TCAGCGCTCTGATG.1  TCAGCGCTGTAGGG.1  TCAGCGCTTTCGCC.1  TCAGGATGACCATG.1 \n##                 3                 0                 6                11 \n##  TCAGGATGACGCAT.1  TCAGGATGAGAGTA.1  TCAGGATGAGTACC.1  TCAGGATGCGGGAA.1 \n##                 9         CD16 Mono                 0                 0 \n##  TCAGGATGCGTGAT.1  TCAGTGGACATCAG.1  TCAGTGGACCTTGC.1  TCAGTGGAGCTGAT.1 \n##                 0                 1                 0                 2 \n##  TCAGTGGAGTTAGC.1  TCAGTGGATACAGC.1  TCAGTTACAATCGC.1  TCAGTTACACTTTC.1 \n##                 5                 5                 0                 1 \n## TCAGTTACAGCAAA.11  TCAGTTACATCGGT.1  TCAGTTACCCAACA.1  TCAGTTACCTACTT.1 \n##                 1                 0                 0                 2 \n##  TCAGTTACTCCTAT.1  TCAGTTACTGCACA.1  TCAGTTACTGGAGG.1  TCAGTTACTTTCGT.1 \n##         CD16 Mono                 0                 2                 2 \n##  TCATCAACACCAGT.1 TCATCAACGTTCTT.11  TCATCAACGTTGGT.1  TCATCATGACGGGA.1 \n##                 1                 5                 0                 2 \n##  TCATCATGCTAAGC.1  TCATCATGGTAAGA.1  TCATCATGTACTTC.1  TCATCATGTTCGTT.1 \n##                 6                 8         CD16 Mono                 1 \n##  TCATCATGTTCTCA.1  TCATCCCTACGGAG.1  TCATCCCTAGTACC.1  TCATCCCTCAGAGG.1 \n##                 0                 0                 0                 0 \n## TCATCCCTTAAAGG.11  TCATGTACACTACG.1  TCATGTACATCTCT.1  TCATGTACATGGTC.1 \n##                 6         CD16 Mono                 1                 1 \n##  TCATGTACCCTAAG.1  TCATGTACGCAAGG.1  TCATGTACGTAAAG.1  TCATTCGAAAGCCT.1 \n##                 0                 1                 1                 5 \n##  TCATTCGATACTCT.1  TCATTCGATATTCC.1  TCATTCGATCGCTC.1  TCATTGACACTAGC.1 \n##                 0                 0                 1                 1 \n##  TCATTGACCGGTAT.1  TCCACGTGAACGTC.1  TCCACGTGACACAC.1  TCCACGTGATGCTG.1 \n##                 3                 6         CD16 Mono                 0 \n##  TCCACGTGCGCTAA.1  TCCACGTGCTACCC.1  TCCACGTGGACGGA.1  TCCACGTGGTAGCT.1 \n##                 5                 0                 0                 2 \n##  TCCACGTGTGACTG.1  TCCACGTGTTCCAT.1 TCCACTCTAAAGCA.11  TCCAGAGACAAGCT.1 \n##                 1                 0                 0                 1 \n##  TCCAGAGACCCGTT.1  TCCAGAGAGCCCTT.1  TCCATAACACCACA.1  TCCATAACTCACCC.1 \n##                10                 1                 2                 0 \n##  TCCATAACTCAGGT.1  TCCATCCTCGAACT.1  TCCATCCTCTCCCA.1  TCCATCCTGCAGTT.1 \n##         CD16 Mono                 1                 2                 0 \n##  TCCATCCTGGTTCA.1  TCCATCCTGTGTTG.1  TCCATCCTTTGGCA.1  TCCCACGACATGAC.1 \n##         CD16 Mono                 1                 1         CD16 Mono \n## TCCCACGACTGGTA.11  TCCCACGAGTCATG.1  TCCCACGAGTTCGA.1  TCCCACGATCGTAG.1 \n##                12                 0                 3                 1 \n##  TCCCAGACCATACG.1  TCCCAGACCCCAAA.1  TCCCAGACCCTACC.1  TCCCAGACTAGAGA.1 \n##                 3                 2                 0                 6 \n##  TCCCAGACTAGTCG.1  TCCCAGACTCGATG.1  TCCCATCTAAGTAG.1  TCCCATCTAGAAGT.1 \n##                 1                10                 2                 2 \n##  TCCCATCTCGAATC.1  TCCCATCTGATAAG.1  TCCCATCTTCGATG.1  TCCCGAACAACAGA.1 \n##                 0                 0                 5                 1 \n##  TCCCGAACAGGTTC.1  TCCCGAACCATCAG.1  TCCCGAACCGTTGA.1  TCCCGAACGTATGC.1 \n##                 1                 5                 9                 0 \n##  TCCCGAACGTTGGT.1  TCCCGAACTTCGTT.1  TCCCGATGACCGAT.1  TCCCGATGCCCAAA.1 \n##                 9                 0                 0                 2 \n##  TCCCGATGCCGATA.1  TCCCGATGGAGGGT.1  TCCCGATGGTTCTT.1  TCCCGATGTACTGG.1 \n##                 0                 2                 2                 2 \n##  TCCCGATGTTGTCT.1  TCCCTACTATCTTC.1  TCCCTACTTAACCG.1  TCCGAAGACTTACT.1 \n##                 0                 8                 0                 2 \n##  TCCGAAGATGCTCC.1  TCCGAAGATGTCGA.1  TCCGAGCTACCCAA.1  TCCGAGCTAGGTCT.1 \n##                 5                 2                 3                 1 \n##  TCCGAGCTCTCCAC.1  TCCGAGCTTAGAGA.1  TCCGGACTCTCTAT.1  TCCGGACTGACGAG.1 \n##                 1                 5                 0                 0 \n##  TCCGGACTGAGGCA.1  TCCGGACTTGTCAG.1  TCCGGACTTTCTAC.1  TCCTAAACTCCTTA.1 \n##                 2                 0                 3         CD16 Mono \n##  TCCTAAACTGGAAA.1  TCCTAAACTTTCTG.1 TCCTAATGAAGCCT.11  TCCTAATGCAACTG.1 \n##                 0                 1         CD16 Mono                 0 \n##  TCCTAATGCGGGAA.1 TCCTAATGTTGACG.11  TCCTACCTAAGTGA.1  TCCTACCTGGGACA.1 \n##                 6                 0                 0                 6 \n##  TCCTACCTTCAGTG.1  TCCTACCTTGTGAC.1  TCCTACCTTTCCAT.1  TCCTATGACACTTT.1 \n##         CD16 Mono                 1                 0         CD16 Mono \n##  TCCTATGACTCTCG.1  TCCTATGAGTCCTC.1  TCCTATGAGTGTAC.1  TCCTATGATGCCAA.1 \n##         CD16 Mono                 6                 1                 2 \n##  TCGAATCTCCGTTC.1  TCGAATCTGAACCT.1  TCGAATCTGTTGTG.1  TCGAATCTTAAAGG.1 \n##                 0                 1                 7                 2 \n##  TCGAATCTTAAGCC.1  TCGAATCTTTCGGA.1  TCGACCTGACGACT.1  TCGACCTGAGTAGA.1 \n##                 1                 0                 0                 1 \n##  TCGACCTGCTCAGA.1  TCGACCTGGTTAGC.1  TCGACCTGTGCACA.1  TCGACGCTCCATAG.1 \n##                 9                 1                 3                 0 \n##  TCGACGCTGGCATT.1  TCGACGCTTCTTCA.1  TCGACGCTTGACAC.1  TCGAGAACATGTCG.1 \n##                 0                 1                 0                 2 \n##  TCGAGAACCGTGAT.1  TCGAGAACTTCATC.1  TCGAGCCTAAACAG.1  TCGAGCCTCGGAGA.1 \n##                 5                 5                 1                 5 \n##  TCGATACTCCATGA.1  TCGATACTCCCACT.1  TCGATACTGAGCTT.1 TCGATACTGGGACA.11 \n##                 0                 9                 0                 1 \n##  TCGATACTTCACGA.1  TCGATACTTGGTCA.1  TCGATACTTGTGCA.1  TCGATTTGAATCGC.1 \n##                10                 1                 0                 2 \n##  TCGATTTGAGATGA.1  TCGATTTGCTCTAT.1  TCGATTTGTGGTCA.1  TCGCAAGAGAGGCA.1 \n##                 7                 9                 3                 0 \n##  TCGCAAGATGAGAA.1  TCGCAAGATTTCTG.1  TCGCACACAGTAGA.1  TCGCACACCACTCC.1 \n##                 0                 3                 0                 1 \n##  TCGCACACCCGTAA.1  TCGCACACGGCGAA.1  TCGCACACTACTCT.1 TCGCACACTGGAAA.11 \n##                 2                 0         CD16 Mono                 0 \n##  TCGCACTGTCTCCG.1  TCGCACTGTGTTCT.1  TCGCAGCTCACTTT.1  TCGCAGCTCAGATC.1 \n##                 8                 1                 1                 1 \n##  TCGCAGCTCCCTAC.1  TCGCAGCTGGTTCA.1  TCGCAGCTTAACGC.1  TCGCCATGACGACT.1 \n##                 2                 8                 1                 3 \n##  TCGCCATGACTGTG.1  TCGCCATGAGACTC.1  TCGCCATGCAGAAA.1  TCGCCATGCTCATT.1 \n##                 2                 6         CD16 Mono                 6 \n##  TCGCCATGGTTTGG.1  TCGCCATGTAGAAG.1  TCGCCATGTGACTG.1  TCGCCATGTTGCAG.1 \n##                 0                 0         CD16 Mono                 2 \n##  TCGGACCTATCAGC.1  TCGGACCTATGACC.1  TCGGACCTCTAGTG.1  TCGGACCTGAAAGT.1 \n##                13                 1                 2                 0 \n##  TCGGACCTGGACAG.1  TCGGACCTGTTAGC.1  TCGGACCTTCGATG.1  TCGGACCTTTGAGC.1 \n##                 1                 0                 1                 6 \n##  TCGGCACTCTCGAA.1  TCGGCACTCTGGTA.1  TCGGCACTTATCGG.1  TCGGCACTTCGACA.1 \n##                10                 5                 1                 0 \n##  TCGGCACTTCGTGA.1  TCGGCACTTTCCGC.1  TCGGCACTTTGAGC.1  TCGGCACTTTTACC.1 \n##                 1                 7                 3                 0 \n##  TCGGTAGAAACAGA.1  TCGGTAGAGCGTAT.1  TCGGTAGATACGAC.1  TCGGTAGATTTGGG.1 \n##                 5                 3                 0                 0 \n##  TCGTAGGAACACCA.1  TCGTAGGACACTGA.1  TCGTAGGACCTTAT.1  TCGTAGGAGAATAG.1 \n##                 0                 0                 0                 0 \n##  TCGTAGGAGTCGTA.1  TCGTGAGAACCTGA.1  TCGTGAGAAGTCTG.1  TCGTGAGAAGTTCG.1 \n##                 0                 0                 2                 0 \n##  TCGTGAGACATACG.1  TCGTGAGACCGATA.1  TCGTGAGACGCCTT.1  TCGTGAGACTTCCG.1 \n##                 0                 3                 5                 0 \n##  TCGTGAGAGGAACG.1  TCGTGAGATTTGGG.1  TCGTTATGACTGTG.1  TCGTTATGCAGGAG.1 \n##                 9                 2                 2                 1 \n##  TCGTTATGGGAGCA.1  TCGTTATGTCGCCT.1  TCTAACACTCGCTC.1  TCTAACACTGTGGT.1 \n##                 1                 3                11                 0 \n##  TCTAACTGAACCGT.1  TCTAACTGATTTCC.1  TCTAACTGCACTCC.1  TCTAACTGCGACTA.1 \n##                 0                 1                 0                 0 \n##  TCTAACTGCGGAGA.1  TCTAACTGCTCAAG.1  TCTAACTGGTACAC.1  TCTAACTGTCCTAT.1 \n##                 1         CD16 Mono                 3         CD16 Mono \n##  TCTAACTGTGTTTC.1  TCTAAGCTCTGCAA.1  TCTAAGCTGTAGGG.1  TCTACAACGTCATG.1 \n##                 3                 0                 1                 1 \n##  TCTACAACGTCTGA.1  TCTACAACGTGCTA.1  TCTACAACGTTAGC.1  TCTACAACTCTATC.1 \n##                 3                10                 2                 0 \n##  TCTAGACTAGGTCT.1  TCTAGACTATGTCG.1  TCTAGACTCATGAC.1  TCTAGACTCCTAAG.1 \n##                 1                 9                 1         CD16 Mono \n##  TCTAGACTTCGCTC.1  TCTAGACTTTCTCA.1  TCTAGTTGCACACA.1  TCTAGTTGCATGAC.1 \n##                 2                 0                 0                 5 \n##  TCTAGTTGCGAGTT.1  TCTAGTTGCTCCAC.1  TCTAGTTGGATAGA.1  TCTAGTTGGCTACA.1 \n##                 1                 0         CD16 Mono         CD16 Mono \n##  TCTAGTTGGGGTGA.1  TCTAGTTGTCGTAG.1  TCTAGTTGTCTCCG.1  TCTAGTTGTCTCGC.1 \n##                 0                 9                 1                 5 \n##  TCTATGTGACCTAG.1  TCTATGTGATTCGG.1  TCTATGTGCGAACT.1  TCTATGTGCGTAGT.1 \n##                 1                 0                 2                 0 \n##  TCTATGTGGCTACA.1  TCTATGTGTCAGAC.1  TCTATGTGTGCATG.1  TCTATGTGTTGCTT.1 \n##                 0                 2                 1                 3 \n##  TCTCAAACCGCTAA.1  TCTCAAACTCGTAG.1  TCTCCACTCACACA.1  TCTCCACTCTAGCA.1 \n##                 1                 2                 1                 3 \n##  TCTCCACTTTTACC.1  TCTCTAGAAACTGC.1  TCTCTAGAAGTTCG.1  TCTCTAGACCTACC.1 \n##                 1                12                 0                 7 \n##  TCTCTAGACCTTAT.1  TCTCTAGAGAGAGC.1  TCTCTAGAGGTTAC.1  TCTCTAGATGTCAG.1 \n##                 5                 1                 1                 6 \n##  TCTGATACACACAC.1  TCTGATACACGGGA.1  TCTGATACAGTCAC.1  TCTGATACATCGTG.1 \n##                 1                 1                 0                 3 \n##  TCTGATACCCGAAT.1  TCTTACGATCACGA.1  TCTTACGATGAGAA.1  TCTTCAGAAACCAC.1 \n##                11                 3                 3                10 \n##  TCTTCAGACTACGA.1  TCTTCAGATCTTCA.1  TCTTCAGATGTTCT.1  TCTTCAGATTCATC.1 \n##                 5                 7                 0                 0 \n## TCTTCAGATTGAGC.11  TCTTGATGCCGATA.1  TCTTGATGCCTAAG.1  TCTTGATGCTGCAA.1 \n##                10                 1         CD16 Mono                 0 \n##  TCTTGATGGCGTTA.1  TCTTGATGGGGTGA.1  TCTTGATGTCCTGC.1  TCTTGATGTTCCGC.1 \n##                 1                 1                 0                 1 \n##  TGAAATTGCATCAG.1  TGAAATTGCCGTAA.1  TGAAATTGCTGAAC.1  TGAAATTGGACGGA.1 \n##                 1                 0                10                 3 \n##  TGAAATTGGAGATA.1  TGAAATTGGCATAC.1  TGAAATTGGTCGAT.1  TGAAATTGGTTTGG.1 \n##                 1                 2                 2                 1 \n##  TGAAATTGTTTCTG.1  TGAACCGACGATAC.1  TGAACCGATCCAAG.1  TGAACCGATTTACC.1 \n##                 5                 5                 3                 0 \n##  TGAAGCACCCATAG.1 TGAAGCACTCTCTA.11  TGAAGCACTTGAGC.1  TGAAGCTGCATACG.1 \n##                 2         CD16 Mono                 6                 0 \n##  TGAAGCTGCCGTTC.1  TGAAGCTGCGACAT.1  TGAATAACACACAC.1  TGAATAACTCTTAC.1 \n##                 2                 0                 0         CD16 Mono \n##  TGACACGACATTTC.1  TGACACGACGAACT.1  TGACACGACGTACA.1  TGACACGAGCTCCT.1 \n##         CD16 Mono                 0                 0                 0 \n##  TGACACGAGGTAGG.1  TGACACGAGTTCGA.1  TGACCAGATGCTGA.1  TGACCGCTTTCGGA.1 \n##                 6                 0                 0                 7 \n##  TGACCGCTTTCTGT.1  TGACCGCTTTTACC.1  TGACGAACAGGAGC.1  TGACGAACATCAGC.1 \n##                 7                 2                 0                 0 \n##  TGACGAACCAGTCA.1  TGACGAACCCTTTA.1  TGACGAACCTATGG.1  TGACGAACGCGATT.1 \n##                 5                 6                 5                 2 \n##  TGACGAACTACGCA.1  TGACGATGACTAGC.1  TGACGATGAGTGCT.1  TGACGATGCACTAG.1 \n##                 9         CD16 Mono         CD16 Mono                 2 \n##  TGACGATGCATGAC.1  TGACGATGCCAAGT.1  TGACGATGCGCCTT.1  TGACGATGGTAAGA.1 \n##                 1                 5                 0         CD16 Mono \n##  TGACGCCTAGGAGC.1  TGACGCCTTCATTC.1  TGACTGGAATTCGG.1  TGACTGGATACAGC.1 \n##                 3                 0                 1                 2 \n##  TGACTGGATAGCCA.1  TGACTGGATCGTGA.1  TGACTTACAGTGTC.1  TGACTTACGAACCT.1 \n##                 1                 6                 1                 0 \n##  TGACTTACTACTTC.1  TGACTTACTTCTGT.1  TGACTTTGCGACAT.1  TGACTTTGCGGTAT.1 \n##                 0                 5                 0                 0 \n##  TGACTTTGCTGTGA.1  TGACTTTGGGTATC.1  TGACTTTGGTCTAG.1  TGACTTTGGTTTGG.1 \n##                 1         CD16 Mono                 0                 1 \n##  TGACTTTGTGTTTC.1  TGACTTTGTTGGCA.1  TGAGACACCACACA.1  TGAGACACGACTAC.1 \n##                 6                 5         CD16 Mono                 2 \n##  TGAGACACGGAACG.1  TGAGACACTGGTTG.1  TGAGACACTTCATC.1  TGAGACACTTCGCC.1 \n##                 6                 2                 1                 1 \n##  TGAGCAACATGCTG.1  TGAGCAACCCATGA.1  TGAGCAACGCGTAT.1  TGAGCAACGTGTAC.1 \n##                 2                 3                 0                 2 \n##  TGAGCAACTGAAGA.1  TGAGCTGAACCATG.1  TGAGCTGAACGTTG.1  TGAGCTGACACTTT.1 \n##                10                 0         CD16 Mono                 0 \n##  TGAGCTGACCCACT.1  TGAGCTGACGCCTT.1  TGAGCTGACTATTC.1  TGAGCTGAGCCAAT.1 \n##                 1                 0                 3                 1 \n##  TGAGCTGAGCTTAG.1  TGAGCTGAGTCAAC.1 TGAGCTGAGTGCAT.11  TGAGGTACACTTTC.1 \n##                 0                 1                 2                 0 \n##  TGAGGTACAGAACA.1  TGAGGTACCGAGTT.1  TGAGGTACCTTCCG.1  TGAGGTACGAAACA.1 \n##                 1                 2                 2                 5 \n##  TGAGGTACGGAAGC.1  TGAGTCGAGAATCC.1  TGAGTCGATTGACG.1  TGAGTGACGTAAAG.1 \n##                 5                 2                 1                 6 \n## TGATAAACAAGAGT.11  TGATAAACCTAAGC.1  TGATAAACCTAGAC.1  TGATAAACCTCGCT.1 \n##                 7                 0                 3                 2 \n##  TGATAAACCTGCAA.1  TGATAAACGAAAGT.1  TGATACCTGCCCTT.1  TGATACCTGCCTTC.1 \n##                 2                 0                 5                 0 \n##  TGATACCTGCGAAG.1  TGATACCTGCTAAC.1  TGATACCTGGAAGC.1  TGATACCTGGCGAA.1 \n##                 6                 0                 6                 1 \n##  TGATACCTGTAAGA.1  TGATATGACCTGAA.1  TGATATGAGTCAAC.1  TGATATGATGTGCA.1 \n##                 1         CD16 Mono                 1         CD16 Mono \n##  TGATCACTCGCCTT.1  TGATCACTGCAGAG.1  TGATCACTGTAAGA.1  TGATCACTTAAGGA.1 \n##                 2                 1                 2                 0 \n##  TGATCACTTGAGGG.1  TGATCGGAATGTGC.1  TGATCGGACCATGA.1  TGATCGGAGAGATA.1 \n##                 7                 1                 2         CD16 Mono \n##  TGATCGGATCAGGT.1  TGATTAGAAAGAGT.1  TGATTAGAGAACTC.1  TGATTAGAGGACGA.1 \n##         CD16 Mono                 0                 2                 0 \n##  TGATTCACGCGGAA.1  TGATTCACGCTCCT.1  TGATTCACGTACCA.1  TGATTCACGTCGTA.1 \n##                 5                 2                 1                 1 \n##  TGATTCACTCACGA.1  TGATTCACTCAGTG.1  TGATTCACTGCATG.1  TGATTCTGCAGGAG.1 \n##                 5                 7         CD16 Mono                 1 \n##  TGATTCTGGAAAGT.1  TGATTCTGGTCATG.1  TGATTCTGTAAGGA.1  TGCAACGAAAGTAG.1 \n##                 3                 0                 3                 6 \n##  TGCAACGAAAGTGA.1  TGCAACGACCTACC.1  TGCAACGATACTGG.1  TGCAACGATATCTC.1 \n##                 2         CD16 Mono                 0                 1 \n##  TGCAACGATGAAGA.1  TGCAACGATTATCC.1  TGCAAGACAAGTGA.1  TGCAAGACGCGAGA.1 \n##                10                 1                 2                 6 \n##  TGCAAGACGTTAGC.1  TGCAAGACTGCTGA.1  TGCAAGACTTCAGG.1  TGCAAGTGCAGAAA.1 \n##                10         CD16 Mono                 0                 0 \n##  TGCAAGTGCTTCTA.1  TGCAATCTAAACGA.1  TGCAATCTATTTCC.1  TGCAATCTGAGACG.1 \n##                 3                 0                 1                 0 \n##  TGCAATCTGCTTAG.1  TGCAATCTTCTATC.1  TGCAATCTTCTCGC.1  TGCAATCTTTTCAC.1 \n##                 8                 1                 0                 0 \n##  TGCACAGAAGTCGT.1  TGCACAGATAGCGT.1  TGCAGATGCTAAGC.1  TGCAGATGTCGTAG.1 \n##         CD16 Mono                 8                 1                 1 \n##  TGCATGGAAATCGC.1  TGCATGGACTGTGA.1  TGCATGGAGAGGCA.1  TGCATGGAGTGTAC.1 \n##                 2                 0                 7                 2 \n##  TGCATGGATTACTC.1  TGCCAAGACAAGCT.1  TGCCAAGACTCAAG.1  TGCCAAGAGATAAG.1 \n##                 0                 5                 2                 0 \n## TGCCAAGAGCTTCC.11  TGCCAAGAGGGACA.1  TGCCAAGAGTGTCA.1  TGCCAAGATAAAGG.1 \n##                 0                 1                 3                 1 \n##  TGCCAAGATCTTCA.1  TGCCAAGATGCCAA.1  TGCCAAGATGGGAG.1  TGCCACTGAGAGTA.1 \n##                 1                 0                 1                 2 \n## TGCCACTGCATCAG.11  TGCCACTGGGAACG.1  TGCCAGCTACTACG.1  TGCCAGCTATCACG.1 \n##                 3                 0                 1                 8 \n##  TGCCCAACCTTGTT.1  TGCCCAACGGGAGT.1  TGCCGACTGGTAAA.1  TGCCGACTTCAGTG.1 \n##                 1                 1                 7                 1 \n##  TGCCGACTTGCCTC.1  TGCGAAACAGCTCA.1  TGCGAAACCTTCCG.1  TGCGAAACGTAAAG.1 \n##         CD16 Mono                 0                 2                 9 \n##  TGCGATGAACCAAC.1  TGCGATGACTCTAT.1  TGCGATGAGGTGTT.1  TGCGATGAGTACCA.1 \n##                 1                 2                 5                 1 \n##  TGCGATGATCTCAT.1  TGCGCACTCAAAGA.1  TGCGCACTCAATCG.1  TGCGCACTGAACTC.1 \n##                 2                 1                 3                 0 \n##  TGCGCACTTCCTGC.1  TGCGCACTTTACTC.1  TGCGTAGACGTAAC.1  TGCGTAGACTTAGG.1 \n##                 1                 1                 6                 2 \n##  TGCGTAGAGCAGAG.1  TGCGTAGAGCATAC.1  TGCGTAGATAGACC.1  TGCTATACATTGGC.1 \n##                 3                 3                 0                 8 \n##  TGCTATACCCAGTA.1  TGCTATACGCTGAT.1  TGCTATACGGTGGA.1  TGCTATACTGACAC.1 \n##                 1                 0                 0                 1 \n##  TGCTGAGAAAACGA.1  TGCTGAGACATGAC.1  TGCTGAGACTTGAG.1  TGCTGAGATTCTTG.1 \n##                 0                 2                 0                 3 \n##  TGCTTAACAGCTCA.1  TGCTTAACCCTCCA.1  TGCTTAACGCCTTC.1  TGCTTAACTGGTGT.1 \n##                 1                 1                 1         CD16 Mono \n##  TGGAAAGAAACGAA.1 TGGAAAGAACTAGC.11  TGGAAAGAATGCCA.1  TGGAAAGACAGTTG.1 \n##                 2                10                 7                 1 \n##  TGGAAAGACTTTAC.1  TGGAAAGAGACAGG.1  TGGAAAGAGCGGAA.1  TGGAAAGAGGGATG.1 \n##                 0                 6                 0                 3 \n##  TGGAAAGATGCCCT.1  TGGAAAGATTCGGA.1  TGGAAAGATTCTGT.1  TGGAACACAGCCAT.1 \n##                 0                 3                 1                 2 \n##  TGGAACACAGCTAC.1  TGGAACACATCGTG.1  TGGAACACCTCCAC.1  TGGAACACTTTGTC.1 \n##         CD16 Mono                 0                 1                 1 \n##  TGGAACTGACTAGC.1  TGGAACTGCAACCA.1  TGGAACTGCATCAG.1  TGGAACTGGCTATG.1 \n##                 3                 0                 1                 1 \n##  TGGAACTGGGTGAG.1  TGGAACTGGTCATG.1  TGGAACTGTGTCCC.1  TGGAAGCTAAGAAC.1 \n##                 0                 0                 2                 0 \n##  TGGACCCTCGCTAA.1  TGGACCCTGGAACG.1  TGGACCCTGTGCTA.1  TGGACCCTTGAGAA.1 \n##                 1                 0                 2                 0 \n##  TGGACTGAATGTCG.1  TGGACTGACACCAA.1  TGGACTGAGCGATT.1  TGGACTGAGCGGAA.1 \n##                 6                 1                 1                 1 \n##  TGGACTGAGTATCG.1  TGGAGACTACACAC.1  TGGAGACTCGAATC.1  TGGAGACTGACGGA.1 \n##                 1                 5                 0                 0 \n##  TGGAGACTGAGATA.1  TGGAGACTGTCGTA.1  TGGAGACTTTCCAT.1  TGGAGGGAAATCGC.1 \n##                 0                 5                 0                 3 \n##  TGGAGGGAAATGCC.1  TGGAGGGAAGGTTC.1  TGGAGGGACGGTAT.1  TGGAGGGACTCTTA.1 \n##                 1                 6                 0                 1 \n##  TGGAGGGAGGAGGT.1  TGGATGACGTTGTG.1  TGGATGTGAAACGA.1  TGGATGTGCTTCGC.1 \n##                 1                 0                 1                 0 \n##  TGGATGTGGATAAG.1  TGGATGTGGCAGAG.1  TGGATGTGTCCCGT.1  TGGATTCTAACGAA.1 \n##                 6                 0                 0                 3 \n##  TGGATTCTCGATAC.1  TGGATTCTGAACCT.1 TGGATTCTGAGGAC.11  TGGATTCTTACTTC.1 \n##                 0                 0                 1                 5 \n##  TGGCAATGAAAGTG.1  TGGCAATGCTGGTA.1  TGGCAATGTAGCGT.1  TGGCAATGTATCTC.1 \n##                 3                 0                 0                 7 \n## TGGCAATGTGCCTC.11  TGGCAATGTTAGGC.1  TGGCACCTGACGTT.1  TGGCACCTGGGCAA.1 \n##                 1                 1         CD16 Mono                 0 \n##  TGGCACCTGGTAGG.1  TGGCACCTGTCATG.1  TGGCACCTTCGCAA.1  TGGGTATGGACAGG.1 \n##                 0                 9                 0                 1 \n##  TGGGTATGGGGAGT.1  TGGGTATGTGGAAA.1  TGGTACGAACACTG.1  TGGTACGAACCAGT.1 \n##                 1                 7                 3                 0 \n##  TGGTACGAAGCGGA.1  TGGTACGAGACGAG.1  TGGTAGACAAACGA.1  TGGTAGACATGACC.1 \n##         CD16 Mono                 3                 8                 2 \n##  TGGTAGACCCGTTC.1  TGGTAGACCTTACT.1  TGGTAGACGCTTCC.1  TGGTAGACGTGTCA.1 \n##                 2                 5                 3                 0 \n##  TGGTAGACTGAGCT.1  TGGTAGTGATGCTG.1  TGGTAGTGCACTCC.1  TGGTAGTGGTGAGG.1 \n##                 0                 2         CD16 Mono                 0 \n##  TGGTAGTGTGGTAC.1  TGGTATCTATGTGC.1  TGGTATCTCACTAG.1  TGGTATCTCGTTAG.1 \n##         CD16 Mono                 5                 0                 0 \n##  TGGTATCTGACGAG.1  TGGTATCTGGAGTG.1  TGGTATCTTGAACC.1  TGGTATCTTGTCGA.1 \n##         CD16 Mono                 1                 6                 7 \n##  TGGTCAGAACGTGT.1  TGGTCAGAAGCTCA.1  TGGTCAGAAGTCTG.1  TGGTCAGAATTCGG.1 \n##                 0                 1                 0                 2 \n##  TGGTCAGACAAGCT.1  TGGTCAGACCCTTG.1  TGGTCAGACGAGAG.1  TGGTCAGACGTGTA.1 \n##                13                 0                 1                 1 \n##  TGGTCAGATCAGTG.1  TGGTTACTAACGGG.1  TGGTTACTACCTGA.1  TGGTTACTCTATGG.1 \n##                 1                 1                 0                 8 \n## TGGTTACTGGTTCA.11  TGGTTACTGTCGAT.1  TGGTTACTTGAACC.1  TGGTTACTTGCTAG.1 \n##                 0                 1         CD16 Mono                 7 \n##  TGGTTACTTTAGGC.1  TGGTTACTTTTCGT.1 TGTAAAACCCCTAC.11  TGTAAAACCCTTGC.1 \n##                 0                 0                 2                 0 \n##  TGTAAAACGTAAGA.1  TGTAAAACGTCTAG.1  TGTAAAACTAACCG.1  TGTAAAACTCACGA.1 \n##         CD16 Mono                 0                 5                 0 \n##  TGTAAAACTCCAGA.1  TGTAAAACTCCCGT.1  TGTAACCTCCGTAA.1  TGTAACCTCCTACC.1 \n##                 0                 1                 0                 1 \n##  TGTAACCTCGTCTC.1  TGTAACCTGCGTAT.1  TGTAACCTGCTGAT.1  TGTAACCTTGTCGA.1 \n##                 0                 5                 0                 2 \n##  TGTAACCTTTACCT.1  TGTAATGACAGCTA.1  TGTAATGACATGGT.1  TGTAATGACTTCTA.1 \n##                 1                 7                 2                 3 \n##  TGTAATGATAACGC.1  TGTAATGATGCCAA.1  TGTAATGATTCTGT.1  TGTACTTGAGCGGA.1 \n##                12                 3                 2                 0 \n##  TGTACTTGCAAGCT.1  TGTACTTGGCGATT.1  TGTACTTGTGAACC.1  TGTAGGTGACGTAC.1 \n##                 9                 3                 0                 3 \n##  TGTAGGTGCTACTT.1  TGTAGGTGGCGGAA.1  TGTAGGTGGGAACG.1  TGTAGGTGGTTCTT.1 \n##                 0                 1                 5                 0 \n##  TGTAGGTGTGACAC.1  TGTAGGTGTTCCGC.1  TGTAGGTGTTCGTT.1  TGTAGTCTAACCAC.1 \n##                 3         CD16 Mono                 0                 9 \n##  TGTAGTCTACGACT.1  TGTAGTCTCAGTCA.1  TGTAGTCTCCCAAA.1  TGTAGTCTGTTTGG.1 \n##                 3                 2                 9                 2 \n##  TGTATCTGACGGAG.1  TGTATCTGAGCACT.1  TGTATCTGAGGGTG.1  TGTATCTGCACAAC.1 \n##                 0                 6                 2                 1 \n##  TGTATCTGCGTCTC.1  TGTATCTGGCTATG.1  TGTATCTGTGGTTG.1  TGTATGCTAAAGCA.1 \n##                 0                 5                 0                 3 \n##  TGTATGCTATCACG.1  TGTATGCTGGAGCA.1  TGTCAGGACATTCT.1  TGTCAGGACCTATT.1 \n##                 0         CD16 Mono                 0                 1 \n## TGTCAGGACGTAAC.11  TGTCAGGACTCAAG.1  TGTCAGGAGACAGG.1  TGTCAGGAGGACAG.1 \n##                 0                 2                 5                 0 \n##  TGTCAGGATAGCCA.1  TGTCAGGATCGTAG.1  TGTCAGGATTGGTG.1  TGTCTAACAGAACA.1 \n##                 1                 9                 5         CD16 Mono \n##  TGTCTAACAGAGGC.1  TGTCTAACATCGAC.1  TGTCTAACCCTTGC.1  TGTCTAACGCAGTT.1 \n##                 7                 0                 2                 1 \n##  TGTCTAACTCCTCG.1  TGTCTAACTCTCTA.1  TGTCTAACTTGCAG.1  TGTGACGAAAGAGT.1 \n##                 8                 6                 3                 0 \n##  TGTGACGAAAGTGA.1  TGTGACGAACAGTC.1  TGTGACGAACCTGA.1  TGTGACGAAGTAGA.1 \n##                 9         CD16 Mono                 0                 3 \n##  TGTGACGACCCTAC.1  TGTGACGACGGAGA.1  TGTGACGACGTTAG.1  TGTGACGAGGGTGA.1 \n##                 0                 1                 3                 7 \n##  TGTGACGATATCGG.1  TGTGAGACAAACGA.1  TGTGAGACCCTCCA.1  TGTGAGTGCCGAAT.1 \n##                 0                 1                 0                 5 \n##  TGTGAGTGGAGATA.1  TGTGAGTGTCTCAT.1  TGTGAGTGTCTTAC.1  TGTGATCTAGTCAC.1 \n##                 1                 0                13                 2 \n##  TGTGATCTCACAAC.1  TGTGATCTGACGGA.1  TGTGATCTTGCTCC.1  TGTGATCTTTGACG.1 \n##                 0         CD16 Mono                 0         CD16 Mono \n##  TGTGGATGAAACAG.1  TGTGGATGCTCAAG.1  TGTGGATGCTCCAC.1  TGTGGATGGTCCTC.1 \n##                 3                 0                 5                 3 \n##  TGTGGATGTCGCAA.1  TGTGGATGTCTTAC.1  TGTGGATGTCTTTG.1  TGTTAAGAAGTGCT.1 \n##         CD16 Mono                 2                 0                10 \n##  TGTTAAGAATGCCA.1  TGTTAAGATGTTCT.1  TGTTAAGATTTACC.1  TGTTACACCCCACT.1 \n##                 5                 5                 1                 0 \n##  TGTTACACCCTTAT.1  TGTTACACGTACGT.1  TGTTACACGTTGAC.1  TGTTACACTCTTCA.1 \n##                 0                 0                 0                 8 \n##  TGTTACACTGATGC.1  TGTTACTGACCTCC.1  TGTTACTGCACACA.1  TGTTACTGCCTATT.1 \n##                 3                 1                 9                 7 \n##  TGTTACTGCGATAC.1  TTAACCACAGGCGA.1  TTAACCACAGGGTG.1  TTAACCACAGTAGA.1 \n##                 0                 2                 3                 0 \n##  TTAACCACCCCTTG.1  TTAACCACCCGATA.1  TTAACCACCCGTAA.1  TTAACCACCTGCAA.1 \n##                 9                 0         CD16 Mono                 0 \n##  TTAACCACGCTCCT.1  TTAACCACGGTACT.1  TTACACACCAAAGA.1  TTACACACCCAAGT.1 \n##                 6                 8                 1                 3 \n##  TTACACACGTAGCT.1  TTACACACTAAGGA.1  TTACACACTGGTAC.1  TTACACACTGGTCA.1 \n##                 8                 3         CD16 Mono                 2 \n##  TTACAGCTAAGGGC.1  TTACAGCTACGTAC.1  TTACAGCTGCGAAG.1  TTACAGCTGGTGTT.1 \n##                 0                 1                 1         CD16 Mono \n##  TTACAGCTTCCCGT.1  TTACAGCTTGTGGT.1  TTACCATGACGTGT.1  TTACCATGATAAGG.1 \n##                 0                 3                 6                 8 \n##  TTACCATGCAGCTA.1  TTACCATGGGTCAT.1  TTACCATGGTCCTC.1  TTACCATGTGAAGA.1 \n##                 1                 8                 5         CD16 Mono \n##  TTACGACTGGGACA.1  TTACGTACACCATG.1  TTACGTACACGACT.1  TTACGTACACGTGT.1 \n##                 6                 0                 2                 0 \n##  TTACGTACAGTGTC.1  TTACGTACATGTGC.1  TTACGTACCCATAG.1  TTACGTACCTTACT.1 \n##         CD16 Mono                 2                 1                 3 \n##  TTACGTACTTCTTG.1  TTACTCGAAAAAGC.1  TTACTCGAAGCTAC.1  TTACTCGACTTATC.1 \n##                 0                 0                 0         CD16 Mono \n##  TTACTCGAGCGTAT.1  TTACTCGAGTGTTG.1  TTACTCGATTATCC.1  TTAGAATGCCTCGT.1 \n##                 1                 2                 7                 0 \n##  TTAGAATGCTCTTA.1  TTAGACCTAAACGA.1  TTAGACCTCATACG.1  TTAGACCTCCTGTC.1 \n##                 7                 2                 6                 1 \n##  TTAGACCTCGAATC.1  TTAGACCTGATAGA.1  TTAGACCTGGTCTA.1  TTAGACCTTGGAGG.1 \n##                 1                 1                 1                 2 \n##  TTAGCTACACGGAG.1  TTAGCTACCCACAA.1  TTAGCTACCCACCT.1  TTAGCTACCGATAC.1 \n##                 5                 0                 0                 8 \n##  TTAGCTACGAATGA.1  TTAGCTACGACTAC.1  TTAGCTACGGGATG.1  TTAGCTACTGGTTG.1 \n##                 7                 1                 6                 8 \n##  TTAGCTACTTGTCT.1  TTAGGGACACTGGT.1  TTAGGGACCAGATC.1  TTAGGGACCTTGAG.1 \n##                 0                 0         CD16 Mono                 1 \n##  TTAGGGACGGTCAT.1  TTAGGGACTGTGGT.1  TTAGGGTGAGTCAC.1  TTAGGGTGATACCG.1 \n##                 9                 0                 0                 1 \n##  TTAGGGTGCAGAGG.1  TTAGGGTGCTACCC.1  TTAGGGTGCTCAAG.1  TTAGGGTGGCTGTA.1 \n##                 5                 1                 0                 1 \n##  TTAGGGTGGGTAGG.1  TTAGGGTGTCCTCG.1  TTAGGGTGTGAAGA.1  TTAGGTCTTAGTCG.1 \n##                 2         CD16 Mono                 1                 2 \n##  TTAGTCACAGTGCT.1  TTAGTCACCTTTAC.1  TTAGTCACGACAAA.1  TTAGTCACTGCAGT.1 \n##                 0                 6                 0                 2 \n##  TTAGTCTGACGTAC.1  TTAGTCTGCAAAGA.1  TTAGTCTGCCTTCG.1  TTAGTCTGCTGTTT.1 \n##                 0                 1                 5                 8 \n##  TTAGTCTGCTTCCG.1  TTAGTCTGGCATAC.1  TTAGTCTGGGAAGC.1  TTAGTCTGGTAGCT.1 \n##                 6                 7                 3                 1 \n##  TTATCCGAAAGTGA.1  TTATCCGACCCAAA.1  TTATCCGAGCTACA.1 TTATCCGATGTTTC.11 \n##                 3                 1                 3                 2 \n##  TTATGAGAAGATGA.1  TTATGAGACAACTG.1  TTATGAGACGATAC.1  TTATGAGAGCATCA.1 \n##                 0                 9         CD16 Mono                 3 \n##  TTATGAGAGCTGTA.1  TTATGAGATCTGGA.1  TTATGAGATTTCTG.1  TTATGCACCCTCGT.1 \n##                 0                 1                 0                 8 \n##  TTATGCACTCGATG.1  TTATGGCTAAGCAA.1  TTATGGCTAGGTTC.1  TTATGGCTTATGCG.1 \n##                 1                 0                 3                 0 \n##  TTATGGCTTGTCAG.1  TTATGGCTTTCCGC.1  TTATGGCTTTGTCT.1  TTATTCCTCAACTG.1 \n##                 3                 0                 1                 1 \n##  TTATTCCTGAATGA.1  TTATTCCTGAGGAC.1  TTATTCCTTAACCG.1  TTATTCCTTGCGTA.1 \n##                 2                 1                 1                 2 \n##  TTCAAAGAGTCGAT.1  TTCAAAGATTTCTG.1  TTCAACACACTACG.1  TTCAACACGTACAC.1 \n##                 0                 0                 1                 3 \n##  TTCAACACTAGCCA.1  TTCAAGCTCTTACT.1  TTCAAGCTGACGGA.1  TTCAAGCTTAGCGT.1 \n##                 2                 5                 6                 2 \n##  TTCAAGCTTGAGAA.1  TTCAAGCTTGTAGC.1  TTCAAGCTTTTGCT.1  TTCACAACGCAAGG.1 \n##                 8                 0                 0                 9 \n##  TTCACAACGCCAAT.1  TTCACCCTCCACCT.1  TTCACCCTGTATCG.1  TTCACCCTTGCTTT.1 \n##                 1                 0                 5                 1 \n##  TTCAGACTAAGGCG.1  TTCAGACTAGGTTC.1  TTCAGACTATCGGT.1  TTCAGACTATGCTG.1 \n##                 1         CD16 Mono                 0                 5 \n##  TTCAGACTCATTGG.1  TTCAGACTCGTAAC.1  TTCAGACTCTCAAG.1  TTCAGACTGACGAG.1 \n##                 7         CD16 Mono                 1                 3 \n##  TTCAGACTTTCTCA.1  TTCAGTACCTCTAT.1  TTCAGTACGGAGCA.1  TTCAGTTGAACCTG.1 \n##                 5                 1                 0                 8 \n##  TTCAGTTGACCCTC.1  TTCAGTTGCTGGAT.1  TTCAGTTGTGTGGT.1  TTCATCGAACTCAG.1 \n##                 6                 1                 2                 5 \n##  TTCATCGAATTCTC.1  TTCATCGACCAAGT.1  TTCATCGACCCAAA.1  TTCATCGAGACGAG.1 \n##                 0                 0                 0                 0 \n##  TTCATCGAGTACCA.1  TTCATCGATCTAGG.1  TTCATGACAACAGA.1  TTCATGACAACCTG.1 \n##                 7                 1                 1                 7 \n##  TTCATGACACTAGC.1  TTCATGACCAATCG.1  TTCATGACCCGTAA.1  TTCATGACCGAATC.1 \n##                 2                 1                 0                 9 \n##  TTCATGACGACGTT.1  TTCATGACGAGATA.1  TTCATGACGAGGTG.1  TTCATGACTTATCC.1 \n##                 0                 0                 1                 0 \n##  TTCATGACTTCAGG.1  TTCATGTGAAGATG.1  TTCATGTGGTTTGG.1  TTCATGTGTCTCCG.1 \n##                 7                 2                 0                10 \n##  TTCATGTGTTGAGC.1  TTCATTCTTATGCG.1  TTCATTCTTCTTAC.1  TTCCAAACACAGCT.1 \n##                 0         CD16 Mono                 5                 1 \n##  TTCCAAACAGCGTT.1  TTCCAAACCTCCAC.1  TTCCAAACGCCAAT.1  TTCCAAACTTGTCT.1 \n##                 0                 0                 1                 2 \n##  TTCCATGAAGCTCA.1  TTCCATGACCATAG.1  TTCCATGACTTGCC.1  TTCCCACTCGTAGT.1 \n##                 0                 9                 1                 0 \n##  TTCCCACTGGTGGA.1  TTCCCACTTGATGC.1  TTCCTAGAACAGCT.1  TTCCTAGAGGTGAG.1 \n##                 5                 0                 0                 0 \n##  TTCGAGGAACGGTT.1  TTCGAGGACAGAGG.1  TTCGAGGACCGCTT.1  TTCGAGGAGGGCAA.1 \n##                 0                 3                 0                 5 \n##  TTCGAGGATGAAGA.1  TTCGATTGACCAAC.1  TTCGATTGTCAGAC.1  TTCGATTGTCCTGC.1 \n##                 1                 2                 0                 1 \n##  TTCGGAGAACACCA.1  TTCGGAGATTTCAC.1  TTCGTATGAACCTG.1  TTCGTATGGAGAGC.1 \n##                11         CD16 Mono                 0                 0 \n##  TTCGTATGTGCGTA.1  TTCGTATGTTCCGC.1  TTCTACGACTGCTC.1  TTCTAGTGCTGGAT.1 \n##                 5                 0                 0                 2 \n##  TTCTAGTGGGTGTT.1  TTCTAGTGTAGTCG.1  TTCTCAGAAACAGA.1  TTCTCAGAACCAAC.1 \n##                 8                 5                 0                 0 \n##  TTCTGATGACACCA.1  TTCTGATGAGATCC.1  TTCTTACTAAGTAG.1  TTCTTACTCGAATC.1 \n##                 2                 9                 3                 0 \n##  TTCTTACTCTGAAC.1  TTCTTACTCTGAGT.1  TTCTTACTGACTAC.1  TTCTTACTTGCGTA.1 \n##                 0                 2                 9                 1 \n##  TTGAACCTAACCGT.1  TTGAACCTACGACT.1  TTGAACCTACGTAC.1  TTGAACCTCTCTTA.1 \n##                 8                 5         CD16 Mono                 0 \n##  TTGAACCTCTTATC.1  TTGAACCTGTGCAT.1  TTGAACCTTTACTC.1  TTGAACCTTTCACT.1 \n##                 3                 1         CD16 Mono                 1 \n##  TTGAATGAACCAGT.1  TTGAATGAGAGGAC.1  TTGAATGAGTCTTT.1  TTGACACTAGTACC.1 \n##                 7                 3                 0                 2 \n##  TTGACACTCCGATA.1  TTGACACTGGTCTA.1  TTGACACTGTGCTA.1  TTGACACTTCCTGC.1 \n##         CD16 Mono                 9                 1         CD16 Mono \n##  TTGACACTTTGGTG.1  TTGAGGACAAGCCT.1  TTGAGGACACGACT.1  TTGAGGACAGGAGC.1 \n##                 8                 1                 0                 3 \n##  TTGAGGACGTTCGA.1  TTGAGGACTCGCTC.1  TTGAGGTGAACCAC.1 TTGAGGTGAAGAAC.11 \n##         CD16 Mono                 1                 0                 5 \n##  TTGAGGTGAGAGGC.1  TTGAGGTGTGACAC.1  TTGAGGTGTTCGTT.1 TTGATCTGACACTG.11 \n##                 3                 3                 2         CD16 Mono \n##  TTGATCTGATGCTG.1  TTGATCTGTCTTTG.1  TTGCATTGACTTTC.1  TTGCATTGCAGGAG.1 \n##                 2                 1                 5                 2 \n##  TTGCATTGGACGTT.1  TTGCATTGGTACGT.1  TTGCATTGTTGGTG.1  TTGCTAACGAGCAG.1 \n##                 3                 7                 3                 0 \n##  TTGCTATGAACAGA.1  TTGCTATGTCTTTG.1  TTGGAGACACTGGT.1  TTGGAGACAGCGTT.1 \n##                 1                 5                 0                 1 \n##  TTGGAGTGACGTTG.1  TTGGAGTGAGATCC.1  TTGGAGTGCATGCA.1 TTGGAGTGCTCGAA.11 \n##                 1                 1                 0                 0 \n##  TTGGAGTGGTTGCA.1  TTGGGAACCAACCA.1  TTGGGAACCTTGTT.1  TTGGGAACGTGTTG.1 \n##                 6                 0                 1                 8 \n##  TTGGTACTAGTCTG.1  TTGGTACTCCACAA.1  TTGGTACTCCTTGC.1  TTGGTACTCGCAAT.1 \n##                 1                 0                 2                 1 \n##  TTGGTACTCTTGAG.1  TTGGTACTGTCAAC.1  TTGGTACTTTGCTT.1  TTGTACACAAAAGC.1 \n##                 1                 0                 3                 3 \n##  TTGTACACAAGAGT.1  TTGTACACCTGGTA.1  TTGTACACCTTACT.1  TTGTACACGACGAG.1 \n##                 2                 1         CD16 Mono                 9 \n##  TTGTACACGGCATT.1  TTGTACACGTCATG.1  TTGTACACTACTCT.1  TTGTAGCTAGAAGT.1 \n##                 3                 0                 3                 0 \n##  TTGTAGCTCCAGTA.1  TTGTAGCTGAAAGT.1  TTGTAGCTGAATAG.1  TTGTAGCTTAAGCC.1 \n##                 1                 0                 2                 1 \n##  TTGTAGCTTGGTTG.1  TTGTCATGCCGATA.1  TTGTCATGTTAGGC.1  TTGTCATGTTTGGG.1 \n##         CD16 Mono                 0                 0                 0 \n##  TTTAGAGAAGTGCT.1  TTTAGAGACTAGCA.1  TTTAGAGATCTCTA.1  TTTAGAGATGGTAC.1 \n##                 6                 7                 1                 0 \n##  TTTAGCTGAGAGTA.1  TTTAGCTGCAGAGG.1 TTTAGCTGCGAACT.11  TTTAGCTGCTAGTG.1 \n##                 3                 2                 0                 6 \n##  TTTAGCTGGCCTTC.1  TTTAGCTGGGGAGT.1  TTTAGCTGGTCATG.1  TTTAGCTGTGCCAA.1 \n##                 1                 0                 0                 0 \n##  TTTAGGCTCAGTCA.1  TTTAGGCTCTTGTT.1  TTTAGGCTTAAGGA.1  TTTAGGCTTACTCT.1 \n##                 6                 1                 5                 1 \n##  TTTAGGCTTCTTCA.1  TTTATCCTAGGAGC.1  TTTATCCTCTCTTA.1 TTTATCCTGCGAGA.11 \n##                 5                 0                 3                 9 \n##  TTTATCCTGGCATT.1  TTTATCCTTACGCA.1  TTTATCCTTCAGTG.1  TTTATCCTTCTAGG.1 \n##         CD16 Mono                 2                 3                 0 \n##  TTTCACGAAACTGC.1  TTTCACGAAAGCAA.1  TTTCACGAAAGTAG.1  TTTCACGACCAACA.1 \n##                 0                 1                 1                 3 \n##  TTTCACGAGCGAAG.1  TTTCACGAGCGATT.1  TTTCACGAGGACAG.1  TTTCACGATCTCCG.1 \n##                 3                 9         CD16 Mono                 0 \n##  TTTCAGTGAGCATC.1  TTTCAGTGATTCGG.1  TTTCAGTGCCACCT.1  TTTCAGTGCGAGAG.1 \n##                 6                 1                 0                 6 \n##  TTTCAGTGTCACGA.1  TTTCCAGACGAGTT.1  TTTCCAGAGAGCAG.1  TTTCCAGAGTCTAG.1 \n##                 1                 0                 2                 1 \n##  TTTCCAGAGTTGGT.1  TTTCCAGATGGTAC.1  TTTCCAGATGGTGT.1  TTTCGAACGCTGTA.1 \n##                 5         CD16 Mono                 1         CD16 Mono \n##  TTTCGAACTGTCAG.1  TTTCGAACTGTGCA.1  TTTCTACTGGTATC.1  TTTCTACTTCAGAC.1 \n##                 1                 2                 2                 6 \n##  TTTGACTGACGTAC.1  TTTGACTGATCACG.1  TTTGACTGCCCACT.1  TTTGACTGCCCTAC.1 \n##                 1                 0                 0                 0 \n##  TTTGACTGCTACCC.1  TTTGACTGCTTGGA.1  TTTGACTGGCGAAG.1  TTTGACTGGGTACT.1 \n##                 1                 2                 3                 3 \n##  TTTGCATGACGTAC.1  TTTGCATGCCTGTC.1  TTTGCATGCTAAGC.1  TTTGCATGGGACGA.1 \n##                 2                 3                 1                 1 \n## Levels: CD16 Mono 0 1 2 3 5 6 7 8 9 10 11 12 13\n</code></pre> <pre><code>DimPlot(ifnb.filtered, reduction = \"umap.cca\", label = T) +\n  ggtitle(\"After changing the identity of cluster 4\")\n</code></pre> <p></p>"},{"location":"tutorials/seurat-de/seurat-de/#step-2-set-the-identity-of-our-clusters-to-the-annotations-provided","title":"Step 2: Set the identity of our clusters to the annotations provided","text":"<pre><code>Idents(ifnb.filtered) &lt;- ifnb.filtered@meta.data$seurat_annotations\nIdents(ifnb.filtered)\n</code></pre> Cell identities <pre><code>##  AAACATACATTTCC.1  AAACATACCAGAAA.1  AAACATACCTCGCT.1  AAACATACCTGGTA.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono               pDC \n##  AAACATACGATGAA.1  AAACATACGGCATT.1  AAACATACTGCGTA.1  AAACATACTGCTGA.1 \n##      CD4 Memory T         CD14 Mono       T activated       CD4 Naive T \n##  AAACATTGAGTGTC.1  AAACATTGCTTCGC.1  AAACCGTGAGCCAT.1  AAACCGTGGAGGCA.1 \n##             CD8 T         CD14 Mono       CD4 Naive T       T activated \n##  AAACCGTGTGCTAG.1  AAACGCACACTTTC.1  AAACGCACAGTACC.1  AAACGCACCAACCA.1 \n##             CD8 T             CD8 T                Mk       CD4 Naive T \n##  AAACGCACGCTGTA.1  AAACGCACGGGAGT.1  AAACGCACTCGCCT.1  AAACGCTGACCTTT.1 \n##       T activated       CD4 Naive T         CD14 Mono       T activated \n##  AAACGCTGCAGTTG.1  AAACGCTGCCTAAG.1  AAACGCTGCGTTGA.1  AAACGCTGCTGACA.1 \n##             CD8 T      CD4 Memory T       CD4 Naive T       B Activated \n##  AAACGCTGGATAAG.1  AAACGCTGGGACAG.1  AAACGCTGGGGATG.1  AAACGCTGGGTTTG.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono             CD8 T \n##  AAACGCTGTAGCGT.1  AAACGCTGTGCTAG.1  AAACGCTGTTCCAT.1  AAACGGCTAGAGTA.1 \n##                 B       B Activated      CD4 Memory T         CD14 Mono \n##  AAACGGCTAGTACC.1  AAACGGCTGGTCAT.1  AAACGGCTTACTCT.1  AAACGGCTTCTCTA.1 \n##       CD4 Naive T       T activated         CD16 Mono         CD14 Mono \n##  AAACTTGACCTGAA.1  AAACTTGACTCTTA.1  AAACTTGACTGAGT.1  AAACTTGACTGGAT.1 \n##         CD14 Mono                NK                 B         CD16 Mono \n##  AAACTTGAGACGAG.1  AAACTTGAGCCCTT.1  AAACTTGAGGAAAT.1  AAAGACGAAACAGA.1 \n##                NK      CD4 Memory T      CD4 Memory T         CD14 Mono \n##  AAAGACGAACACGT.1  AAAGACGAAGTCTG.1  AAAGACGACCCGTT.1  AAAGACGACGCCTT.1 \n##      CD4 Memory T       CD4 Naive T                NK             CD8 T \n##  AAAGACGACGGAGA.1  AAAGACGAGTAAGA.1  AAAGAGACGAGGTG.1  AAAGAGACTCAGAC.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono       CD4 Naive T \n##  AAAGAGACTCTGGA.1  AAAGATCTACCCTC.1  AAAGATCTGACACT.1  AAAGATCTTGCAGT.1 \n##      CD4 Memory T         CD14 Mono       CD4 Naive T         CD14 Mono \n##  AAAGCAGAAGTTCG.1  AAAGCAGAGTTTCT.1  AAAGCAGATGCAAC.1  AAAGCCTGAAGTAG.1 \n##                Mk         CD14 Mono         CD16 Mono         CD14 Mono \n##  AAAGCCTGACGTGT.1  AAAGCCTGCTAGCA.1  AAAGCCTGGCTAAC.1  AAAGCCTGGGATTC.1 \n##       CD4 Naive T                 B             CD8 T         CD16 Mono \n##  AAAGCCTGTACAGC.1  AAAGCCTGTGGTAC.1  AAAGGCCTAAACGA.1  AAAGGCCTAGTCTG.1 \n##             CD8 T      CD4 Memory T         CD16 Mono         CD14 Mono \n##  AAAGGCCTCGAGAG.1  AAAGGCCTGAGGAC.1  AAAGTTTGAACCAC.1  AAAGTTTGACTCTT.1 \n##                Mk         CD16 Mono                 B       T activated \n##  AAAGTTTGCGAGAG.1  AAAGTTTGCTGAGT.1  AAAGTTTGTAGCGT.1  AAAGTTTGTGTGGT.1 \n##         CD16 Mono      CD4 Memory T      CD4 Memory T         CD14 Mono \n##  AAAGTTTGTTCGTT.1  AAATACTGGGTTCA.1  AAATACTGGTTCTT.1  AAATACTGGTTGAC.1 \n##         CD14 Mono         CD16 Mono         CD14 Mono       T activated \n##  AAATCAACCTGTAG.1  AAATCAACGGTCAT.1  AAATCATGACACCA.1  AAATCATGACACGT.1 \n##         CD16 Mono         CD14 Mono       CD4 Naive T      CD4 Memory T \n##  AAATCATGCTCTAT.1  AAATCATGGAGAGC.1  AAATCATGGGTTCA.1  AAATCCCTAAGAAC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  AAATCCCTACACAC.1  AAATCCCTCTTGAG.1  AAATCCCTGCTATG.1  AAATCCCTGTTGAC.1 \n##      CD4 Memory T         CD14 Mono      CD4 Memory T         CD14 Mono \n##  AAATCCCTTAGCGT.1  AAATCCCTTTCCAT.1  AAATCTGACTTTAC.1  AAATCTGAGCTTCC.1 \n##                NK                 B                 B         CD14 Mono \n##  AAATGGGAAACCTG.1  AAATGGGACTCATT.1  AAATGGGAGACAGG.1  AAATGGGAGGGAGT.1 \n##                Mk             CD8 T                 B         CD14 Mono \n##  AAATGGGAGTCCTC.1  AAATGGGAGTCTGA.1  AAATGTTGAGAGTA.1  AAATGTTGAGCTCA.1 \n##       CD4 Naive T         CD14 Mono                NK         CD14 Mono \n##  AAATGTTGCCAAGT.1  AAATGTTGCCTCCA.1  AAATGTTGTCTTTG.1  AAATTCGAAGCTCA.1 \n##      CD4 Memory T         CD16 Mono         CD14 Mono         CD14 Mono \n##  AAATTCGATGTGCA.1  AAATTGACAAACAG.1  AAATTGACCACTTT.1  AAATTGACCTGAGT.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T         CD14 Mono \n##  AAATTGACCTGATG.1  AAATTGACTGCCCT.1  AAATTGACTTTCTG.1  AACAAACTCATGCA.1 \n##         CD14 Mono                DC       CD4 Naive T                 B \n##  AACAATACCCCAAA.1  AACAATACCCCTCA.1  AACAATACGCAAGG.1  AACAATACGGATTC.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono             CD8 T \n##  AACACGTGAAACGA.1  AACACGTGCCCTCA.1  AACACGTGCGCATA.1  AACACGTGCTGTGA.1 \n##      CD4 Memory T         CD16 Mono      CD4 Memory T             CD8 T \n##  AACACTCTAAGGGC.1  AACACTCTAAGTAG.1  AACACTCTCAGAGG.1  AACACTCTCTTGTT.1 \n##       CD4 Naive T         CD14 Mono      CD4 Memory T         CD14 Mono \n##  AACACTCTGAAAGT.1  AACACTCTGGAGGT.1  AACAGAGAACGGTT.1  AACAGAGAAGTACC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono       CD4 Naive T \n##  AACAGAGACAGATC.1  AACAGAGACGTTGA.1  AACAGAGACTTCCG.1  AACAGAGAGGCGAA.1 \n##       CD4 Naive T      CD4 Memory T       B Activated      CD4 Memory T \n##  AACAGAGATGCTTT.1  AACAGCACAACGTC.1  AACAGCACAGTCAC.1  AACAGCACATCGAC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono       CD4 Naive T \n##  AACAGCACGAGACG.1  AACAGCACTGGGAG.1  AACCACGAAGTAGA.1  AACCACGAAGTGTC.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T                 B \n##  AACCACGACCACCT.1  AACCACGAGAATCC.1  AACCACGAGGTGGA.1  AACCAGTGGACGAG.1 \n##       B Activated         CD14 Mono                 B       CD4 Naive T \n##  AACCAGTGTTTCTG.1  AACCCAGAAGCCAT.1  AACCCAGACCGATA.1  AACCCAGAGCTGTA.1 \n##                 B                 B         CD14 Mono             CD8 T \n##  AACCCAGAGTAGGG.1  AACCCAGATCCTCG.1  AACCCAGATGAGGG.1  AACCGATGCTGATG.1 \n##       CD4 Naive T       T activated                DC      CD4 Memory T \n##  AACCGATGTCCAGA.1  AACCGCCTAGTTCG.1  AACCGCCTCAGGAG.1  AACCGCCTGCATAC.1 \n##       T activated                Mk       T activated       CD4 Naive T \n##  AACCGCCTGTGTAC.1  AACCGCCTTGCCTC.1  AACCTACTTCTCCG.1  AACCTTACAGGGTG.1 \n##       CD4 Naive T                 B       CD4 Naive T             CD8 T \n##  AACCTTACCAAGCT.1  AACCTTACGCTACA.1  AACCTTACGGTATC.1  AACCTTACTCCCAC.1 \n##         CD14 Mono      CD4 Memory T       CD4 Naive T       CD4 Naive T \n##  AACCTTACTTTGTC.1  AACCTTTGAAGGTA.1  AACCTTTGCGCATA.1  AACCTTTGTGCCCT.1 \n##      CD4 Memory T       CD4 Naive T       B Activated         CD14 Mono \n##  AACGCAACTTGCAG.1  AACGCATGACCTAG.1  AACGCATGGAACTC.1  AACGCATGGCCATA.1 \n##       CD4 Naive T         CD14 Mono         CD16 Mono         CD14 Mono \n##  AACGCATGGGGAGT.1  AACGCATGTAGAAG.1  AACGCCCTAATCGC.1  AACGCCCTATTGGC.1 \n##             CD8 T         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  AACGCCCTTCTTAC.1  AACGCCCTTCTTTG.1  AACGGTACAAGAGT.1  AACGGTACGGTCTA.1 \n##                NK       T activated         CD14 Mono         CD14 Mono \n##  AACGGTTGACGTTG.1  AACGGTTGACTACG.1  AACGGTTGTCCAGA.1  AACGTCGACATTGG.1 \n##       B Activated         CD16 Mono         CD14 Mono                DC \n##  AACGTCGACGTTGA.1  AACGTGTGAAGGTA.1  AACGTGTGCACTCC.1  AACGTGTGTATTCC.1 \n##                DC      CD4 Memory T         CD14 Mono         CD14 Mono \n##  AACGTTCTATGTCG.1  AACGTTCTCGTTGA.1  AACGTTCTCTAGTG.1  AACGTTCTTCCGTC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono       T activated \n##  AACGTTCTTTCATC.1  AACTACCTACCATG.1  AACTACCTCCCTAC.1  AACTACCTGTAAAG.1 \n##                 B       CD4 Naive T                DC         CD16 Mono \n##  AACTACCTGTACAC.1  AACTACCTTCGCCT.1  AACTACCTTTCGGA.1  AACTACCTTTGGCA.1 \n##             CD8 T       CD4 Naive T                Mk      CD4 Memory T \n##  AACTCACTCTTGTT.1  AACTCACTGACGTT.1  AACTCACTTTAGGC.1  AACTCGGAATTCTC.1 \n##         CD16 Mono         CD14 Mono       B Activated         CD14 Mono \n##  AACTCGGACTGCAA.1  AACTCGGAGCATAC.1  AACTCGGATGCAGT.1  AACTCTTGCACACA.1 \n##         CD16 Mono       B Activated         CD16 Mono       CD4 Naive T \n##  AACTCTTGCATTCT.1  AACTCTTGGTAGGG.1  AACTCTTGTTCACT.1  AACTCTTGTTCCCG.1 \n##         CD16 Mono         CD14 Mono         CD14 Mono      CD4 Memory T \n##  AACTGTCTATCTCT.1  AACTGTCTGACGTT.1  AACTTGCTCGAGAG.1  AACTTGCTTGAGCT.1 \n##         CD14 Mono                 B       CD4 Naive T       CD4 Naive T \n##  AACTTGCTTGGTTG.1  AAGAACGAAACGAA.1  AAGAACGAAGAGTA.1  AAGAACGACAGGAG.1 \n##         CD16 Mono         CD16 Mono       B Activated         CD14 Mono \n##  AAGAACGACCTCAC.1  AAGAACGATACGCA.1  AAGAACGATCGCAA.1  AAGAAGACCCAAGT.1 \n##       T activated         CD14 Mono      CD4 Memory T         CD14 Mono \n##  AAGAAGACCGTGAT.1  AAGAAGACCTGTCC.1  AAGAAGACGGTGGA.1  AAGAAGACTGCTGA.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  AAGAATCTCTGTGA.1  AAGAATCTGTGAGG.1  AAGACAGAACCTGA.1  AAGACAGAGCCCTT.1 \n##                NK         CD14 Mono         CD14 Mono         CD14 Mono \n##  AAGACAGAGTTAGC.1  AAGAGATGACGCTA.1  AAGAGATGGGTCAT.1  AAGAGATGTTGAGC.1 \n##         CD14 Mono             CD8 T             CD8 T         CD14 Mono \n##  AAGATGGACCGATA.1  AAGATGGATCCAAG.1  AAGATGGATCTTTG.1  AAGATTACCAAGCT.1 \n##       CD4 Naive T                NK               pDC                NK \n##  AAGATTACGGAGTG.1  AAGATTACTCTCCG.1  AAGCAAGAAGGGTG.1  AAGCAAGATAACCG.1 \n##                 B         CD14 Mono      CD4 Memory T         CD14 Mono \n##  AAGCAAGATATGCG.1  AAGCAAGATCACCC.1  AAGCAAGATGGTCA.1  AAGCAAGATTGCGA.1 \n##       CD4 Naive T         CD14 Mono         CD16 Mono                Mk \n##  AAGCACTGAGGTCT.1  AAGCACTGCAAAGA.1  AAGCACTGCCATGA.1  AAGCCAACAGAATG.1 \n##         CD14 Mono         CD16 Mono                 B      CD4 Memory T \n##  AAGCCAACCTTGAG.1  AAGCCAACGTGTTG.1  AAGCCAACTTCGGA.1  AAGCCATGTCCCGT.1 \n##                Mk       B Activated         CD14 Mono                 B \n##  AAGCCATGTGTGGT.1  AAGCCTGATCAGTG.1  AAGCGACTATGTCG.1  AAGCGACTCTGGAT.1 \n##         CD16 Mono      CD4 Memory T       CD4 Naive T         CD14 Mono \n##  AAGCGACTGTCAAC.1  AAGCGACTGTCTGA.1  AAGCGACTTCTTAC.1  AAGCGACTTGCGTA.1 \n##         CD14 Mono                 B      CD4 Memory T       CD4 Naive T \n##  AAGCGACTTGCTAG.1  AAGCGTACGGTGTT.1  AAGCGTACTGAAGA.1  AAGCGTACTTTGCT.1 \n##         CD14 Mono      CD4 Memory T             CD8 T       CD4 Naive T \n##  AAGGCTACCTTGTT.1  AAGGCTTGCGTACA.1  AAGGCTTGGAGACG.1  AAGGCTTGGTTCGA.1 \n##      CD4 Memory T       CD4 Naive T                DC                Mk \n##  AAGGCTTGTCAGAC.1  AAGGCTTGTCAGTG.1  AAGGCTTGTCCAGA.1  AAGGCTTGTTCCAT.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T                NK \n##  AAGGTCACACCTTT.1  AAGGTCACCGGGAA.1  AAGGTCACTCGATG.1  AAGGTCACTGGAAA.1 \n##                 B      CD4 Memory T      CD4 Memory T                 B \n##  AAGGTCTGACGGTT.1  AAGGTCTGTGTGGT.1  AAGGTGCTTAAGCC.1  AAGGTGCTTCAGAC.1 \n##      CD4 Memory T       T activated         CD14 Mono       CD4 Naive T \n##  AAGTAACTATCAGC.1  AAGTAACTGTCAAC.1  AAGTAACTTCAGTG.1  AAGTAGGACACAAC.1 \n##         CD14 Mono      CD4 Memory T                NK         CD14 Mono \n##  AAGTAGGAGACGTT.1  AAGTAGGAGGAAGC.1  AAGTAGGAGTCGTA.1  AAGTAGGATTATCC.1 \n##         CD14 Mono         CD14 Mono                 B         CD14 Mono \n##  AAGTATACCGCCTT.1  AAGTATACTGGAAA.1  AAGTCCGACGTAAC.1  AAGTCCGACTCAAG.1 \n##                 B      CD4 Memory T      CD4 Memory T         CD14 Mono \n##  AAGTCCGACTCTCG.1  AAGTCCGACTGGTA.1  AAGTCCGATTCGGA.1  AAGTCTCTGAAAGT.1 \n##       CD4 Naive T      CD4 Memory T       CD4 Naive T       CD4 Naive T \n##  AAGTCTCTGGTAAA.1  AAGTGCACCCTTTA.1  AAGTGCACCTACGA.1  AAGTGCACCTACTT.1 \n##         CD16 Mono         CD14 Mono                DC      CD4 Memory T \n##  AAGTGCACGTGAGG.1  AAGTGCACTCTAGG.1  AAGTGCACTCTATC.1  AAGTGCACTGCTCC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono       T activated \n##  AAGTGGCTACCCTC.1  AAGTGGCTACGGGA.1  AAGTGGCTACTGTG.1  AAGTGGCTCCAGTA.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono         CD14 Mono \n##  AAGTGGCTCCTACC.1  AAGTGGCTCGGGAA.1  AAGTGGCTGGTGTT.1  AAGTGGCTGTAAAG.1 \n##         CD14 Mono         CD14 Mono                 B         CD16 Mono \n##  AAGTTATGAGTTCG.1  AAGTTATGCAAGCT.1  AAGTTATGCAGAAA.1  AAGTTATGCAGATC.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono         CD14 Mono \n##  AAGTTATGCGGGAA.1  AAGTTATGCTAAGC.1  AAGTTATGGGTGTT.1  AAGTTATGGTCGAT.1 \n##      CD4 Memory T         CD14 Mono                 B         CD14 Mono \n##  AAGTTATGTGCTAG.1  AAGTTATGTTACTC.1  AAGTTCCTACCAAC.1  AAGTTCCTAGAAGT.1 \n##       CD4 Naive T      CD4 Memory T                 B       CD4 Naive T \n##  AAGTTCCTTGCAAC.1  AATAACACTGGTTG.1  AATAAGCTAGTTCG.1  AATAAGCTCTATTC.1 \n##      CD4 Memory T                 B                DC      CD4 Memory T \n##  AATAAGCTGGACGA.1  AATAAGCTTGCCCT.1  AATAAGCTTGGAAA.1  AATACCCTACCTTT.1 \n##                NK       CD4 Naive T      CD4 Memory T                DC \n##  AATACCCTGACACT.1  AATACCCTGGACGA.1  AATACCCTGTCGAT.1  AATACCCTTTAGGC.1 \n##             CD8 T                Mk       CD4 Naive T       CD4 Naive T \n##  AATACTGAAGGAGC.1  AATACTGAAGTTCG.1  AATACTGAGGTACT.1  AATACTGATCGCTC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  AATACTGATTGTGG.1  AATAGGGAAAGGGC.1  AATAGGGACAGATC.1  AATAGGGACATTTC.1 \n##      CD4 Memory T         CD14 Mono             CD8 T       T activated \n##  AATAGGGAGGGAGT.1  AATAGGGATTATCC.1  AATATCGAGAGGCA.1  AATCAAACACCTTT.1 \n##         CD14 Mono                DC         CD14 Mono         CD16 Mono \n##  AATCAAACCCTGTC.1  AATCAAACTCCTTA.1  AATCCGGAGCTACA.1  AATCCGGATTGCTT.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T         CD14 Mono \n##  AATCCTACACGGGA.1  AATCCTACGGATTC.1  AATCCTACTCGTTT.1  AATCCTACTGCAGT.1 \n##                 B         CD14 Mono         CD16 Mono         CD14 Mono \n##  AATCCTACTGTCCC.1  AATCCTTGCGCTAA.1  AATCCTTGCTCTTA.1  AATCCTTGGTATGC.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono                DC \n##  AATCCTTGGTGTTG.1  AATCGGTGAGGAGC.1  AATCGGTGGAGATA.1  AATCGGTGGGTACT.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  AATCGGTGGTAAAG.1  AATCGGTGGTCAAC.1  AATCGGTGTTGGTG.1  AATCTAGAAAAGCA.1 \n##      CD4 Memory T       CD4 Naive T                NK       B Activated \n##  AATCTAGAGCCTTC.1  AATCTAGAGGCATT.1  AATCTAGATAGCCA.1  AATCTAGATTCTAC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono             CD8 T \n##  AATCTCACGACGAG.1  AATCTCACTTCGCC.1  AATCTCTGAGTCGT.1  AATCTCTGAGTCTG.1 \n##                NK       CD4 Naive T         CD14 Mono       T activated \n##  AATCTCTGTGGTCA.1  AATCTCTGTTCGTT.1  AATGAGGAGGGCAA.1  AATGCGTGCACACA.1 \n##                 B       T activated             CD8 T      CD4 Memory T \n##  AATGCGTGGGGACA.1  AATGCGTGTCCCAC.1  AATGCGTGTGAACC.1  AATGGAGACAAAGA.1 \n##      CD4 Memory T                NK      CD4 Memory T         CD14 Mono \n##  AATGGAGAGTCTAG.1  AATGGAGATACGAC.1  AATGGAGATCTACT.1  AATGGAGATCTGGA.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono                 B \n##  AATGGCTGAAGGTA.1  AATGGCTGCACCAA.1  AATGGCTGCATCAG.1  AATGGCTGGTTAGC.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono         CD14 Mono \n##  AATGGCTGTTCGTT.1  AATGTAACACGGTT.1  AATGTAACCTCCCA.1  AATGTAACGGTCAT.1 \n##                NK         CD16 Mono      CD4 Memory T         CD14 Mono \n##  AATGTAACTGAGAA.1  AATGTAACTGCATG.1  AATGTAACTTTGCT.1  AATGTCCTAGCATC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono       CD4 Naive T \n##  AATGTCCTCACAAC.1  AATGTCCTGGAACG.1  AATGTCCTTACGCA.1  AATGTTGAAAACAG.1 \n##      CD4 Memory T       CD4 Naive T                 B         CD14 Mono \n##  AATGTTGAAACAGA.1  AATGTTGAACTTTC.1  AATGTTGAATTTCC.1  AATGTTGAGAATAG.1 \n##       T activated             CD8 T         CD14 Mono         CD16 Mono \n##  AATGTTGAGGTATC.1  AATGTTGATTGTGG.1  AATTACGAAAACGA.1  AATTACGAACCTTT.1 \n##                 B         CD14 Mono       CD4 Naive T               pDC \n##  AATTACGACTATTC.1  AATTACGATTGCTT.1  AATTCCTGATCAGC.1  AATTCCTGCAGAAA.1 \n##       CD4 Naive T         CD14 Mono         CD16 Mono         CD14 Mono \n##  AATTCCTGCCACCT.1  AATTCCTGCTATTC.1  AATTCCTGGAACCT.1  AATTCCTGTTGACG.1 \n##         CD14 Mono       CD4 Naive T         CD16 Mono         CD14 Mono \n##  AATTCCTGTTTACC.1  AATTGATGCACTAG.1  AATTGATGCATTGG.1  AATTGATGCCACCT.1 \n##         CD14 Mono         CD14 Mono       T activated                DC \n##  AATTGATGGAACCT.1  AATTGATGTGCTCC.1  AATTGTGAAGATGA.1  AATTGTGACCTAAG.1 \n##      CD4 Memory T               pDC       T activated         CD14 Mono \n##  AATTGTGACGCTAA.1  AATTGTGACTGTTT.1  AATTGTGAGTACAC.1  ACAAAGGAACAGCT.1 \n##       CD4 Naive T         CD16 Mono         CD14 Mono         CD14 Mono \n##  ACAAAGGAAGATCC.1  ACAAAGGAAGGAGC.1  ACAAAGGATCCAGA.1  ACAAAGGATTATCC.1 \n##         CD14 Mono                NK             CD8 T      CD4 Memory T \n##  ACAAATTGACCTGA.1  ACAAATTGGTTCGA.1  ACAAATTGTAGAAG.1  ACAACCGAAGCATC.1 \n##         CD14 Mono         CD14 Mono             CD8 T         CD14 Mono \n##  ACAACCGACGAGAG.1  ACAACCGACTGGTA.1  ACAACCGATCCAGA.1  ACAACCGATCTTCA.1 \n##         CD14 Mono       T activated         CD16 Mono                 B \n##  ACAACCGATTTACC.1  ACAAGAGAAAAACG.1  ACAAGAGAAAACGA.1  ACAAGAGACAATCG.1 \n##             CD8 T       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  ACAAGAGACAGTTG.1  ACAAGAGACGAGTT.1  ACAAGAGACTTGAG.1  ACAAGAGATATCTC.1 \n##         CD14 Mono                 B         CD14 Mono                DC \n##  ACAAGCACAATCGC.1  ACAAGCACCTTACT.1  ACAAGCACTACGAC.1  ACAAGCACTTCACT.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T       CD4 Naive T \n##  ACAATAACACACTG.1  ACAATAACCGTACA.1  ACAATAACTGCCAA.1  ACAATCCTAGTCGT.1 \n##         CD16 Mono       CD4 Naive T         CD16 Mono         CD14 Mono \n##  ACAATCCTATCTCT.1  ACAATCCTTCGACA.1  ACAATCCTTCTTCA.1  ACAATCCTTGGAGG.1 \n##       CD4 Naive T      CD4 Memory T         CD16 Mono         CD14 Mono \n##  ACAATTGAAGCTCA.1  ACAATTGACTAGAC.1  ACAATTGATTCATC.1  ACACAGACTTTCAC.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono       CD4 Naive T \n##  ACACATCTACCAGT.1  ACACATCTCGCCTT.1  ACACATCTCTAGAC.1  ACACATCTCTGTGA.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T      CD4 Memory T \n##  ACACATCTGTATCG.1  ACACATCTTCACCC.1  ACACCAGACATGAC.1  ACACCAGACTAGTG.1 \n##      CD4 Memory T                NK         CD16 Mono       T activated \n##  ACACCAGAGTCATG.1  ACACCCTGATGGTC.1  ACACCCTGTCCTAT.1  ACACGAACACTAGC.1 \n##         CD14 Mono                DC      CD4 Memory T      CD4 Memory T \n##  ACACGAACGCTGTA.1  ACACGAACTGTCCC.1  ACACGATGAGCGTT.1  ACACGATGCATGGT.1 \n##       B Activated                DC       CD4 Naive T                 B \n##  ACACGATGGGCATT.1  ACACGATGTCCCAC.1  ACACGATGTTCTAC.1  ACACGTGAAGACTC.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T         CD16 Mono \n##  ACACGTGAAGATGA.1  ACACGTGATTCATC.1  ACAGACACAAGTAG.1  ACAGACACACCTAG.1 \n##      CD4 Memory T         CD14 Mono       CD4 Naive T       T activated \n##  ACAGACACCTAAGC.1  ACAGCAACTCTTTG.1  ACAGCAACTTCGGA.1  ACAGCAACTTGTGG.1 \n##       T activated         CD16 Mono         CD14 Mono                DC \n##  ACAGGTACAGAATG.1  ACAGGTACCCTACC.1  ACAGGTACGAATCC.1  ACAGGTACGATGAA.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono       T activated \n##  ACAGGTACGTAGCT.1  ACAGGTACGTTGCA.1  ACAGGTACTTTGCT.1  ACAGTCGACATGAC.1 \n##      CD4 Memory T      CD4 Memory T       CD4 Naive T         CD14 Mono \n##  ACAGTCGACCCTAC.1  ACAGTCGACTACGA.1  ACAGTGACCCCTAC.1  ACAGTGACCGTTAG.1 \n##         CD14 Mono                DC      CD4 Memory T         CD14 Mono \n##  ACAGTGACCTGCAA.1  ACAGTGACGTGCTA.1  ACAGTGTGCCAAGT.1  ACAGTGTGCCGCTT.1 \n##                 B      CD4 Memory T         CD16 Mono       B Activated \n##  ACAGTGTGCTGTAG.1  ACAGTGTGGCGAAG.1  ACAGTGTGTCTTAC.1  ACAGTGTGTGAACC.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono         CD14 Mono \n##  ACAGTGTGTTTGTC.1  ACAGTTCTGGTGAG.1  ACAGTTCTTACGAC.1  ACATACCTAAACGA.1 \n##                NK         CD14 Mono         CD16 Mono                 B \n##  ACATACCTCTAGCA.1  ACATACCTCTCCCA.1  ACATACCTGTAAGA.1  ACATACCTTCCAGA.1 \n##         CD16 Mono       T activated       CD4 Naive T                DC \n##  ACATCACTAAAACG.1  ACATCACTCAACCA.1  ACATCACTTCTTTG.1  ACATCACTTGGAGG.1 \n##             CD8 T       CD4 Naive T      CD4 Memory T       T activated \n##  ACATGGTGCGATAC.1  ACATGGTGGAATAG.1  ACATGGTGGATGAA.1  ACATGGTGGTTCTT.1 \n##         CD14 Mono         CD14 Mono                NK         CD14 Mono \n##  ACATGGTGTTCGGA.1  ACATTCTGATAAGG.1  ACATTCTGATGGTC.1  ACATTCTGCCCGTT.1 \n##      CD4 Memory T         CD14 Mono       T activated                 B \n##  ACATTCTGTATGGC.1  ACATTCTGTCGCCT.1  ACATTCTGTTTGGG.1  ACCAACGAATAAGG.1 \n##         CD14 Mono       CD4 Naive T             Eryth         CD14 Mono \n##  ACCAACGACATGGT.1  ACCAACGAGCTTAG.1  ACCAACGATACGAC.1  ACCACAGACGAGTT.1 \n##         CD14 Mono                NK         CD16 Mono                DC \n##  ACCACAGACGCCTT.1  ACCACAGAGTGTTG.1  ACCACAGATGACAC.1  ACCACAGATGACTG.1 \n##                 B      CD4 Memory T       CD4 Naive T         CD14 Mono \n##  ACCACCTGGTACGT.1  ACCACCTGGTGTTG.1  ACCACCTGGTTGAC.1  ACCACGCTACCTTT.1 \n##      CD4 Memory T       CD4 Naive T         CD16 Mono       T activated \n##  ACCACGCTATCTTC.1  ACCACGCTCTATTC.1  ACCACGCTGACTAC.1  ACCACGCTTTTGTC.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono         CD14 Mono \n##  ACCAGCCTGCAGTT.1  ACCAGCCTGGGTGA.1  ACCAGCCTGGTTTG.1  ACCAGTGAAACGGG.1 \n##         CD16 Mono       CD4 Naive T         CD14 Mono         CD14 Mono \n##  ACCAGTGAACCTTT.1  ACCAGTGAACTGGT.1  ACCAGTGACCGATA.1  ACCAGTGACTCAGA.1 \n##                 B      CD4 Memory T             CD8 T       CD4 Naive T \n##  ACCATTACTCGCCT.1  ACCATTACTCTTTG.1  ACCATTACTTGCTT.1  ACCATTTGCCACCT.1 \n##             CD8 T         CD14 Mono      CD4 Memory T                NK \n##  ACCCAAGAACTGTG.1  ACCCAAGACCTTAT.1  ACCCAAGACTCATT.1  ACCCACTGAACGGG.1 \n##         CD14 Mono      CD4 Memory T                 B         CD14 Mono \n##  ACCCACTGCGGTAT.1  ACCCACTGCTGTAG.1  ACCCAGCTCCCTTG.1  ACCCAGCTTATCGG.1 \n##         CD14 Mono       CD4 Naive T                 B         CD14 Mono \n##  ACCCAGCTTGGATC.1  ACCCAGCTTTGCAG.1  ACCCGTACAACCTG.1  ACCCGTACAGCGTT.1 \n##         CD14 Mono         CD14 Mono                NK         CD14 Mono \n##  ACCCGTACCGAGAG.1  ACCCGTACCGCAAT.1  ACCCGTACGGAACG.1  ACCCGTACGGACAG.1 \n##         CD16 Mono                DC      CD4 Memory T      CD4 Memory T \n##  ACCCGTACTGTGCA.1  ACCCGTTGACCAAC.1  ACCCGTTGCTACTT.1  ACCCGTTGGAGGTG.1 \n##         CD14 Mono       CD4 Naive T             CD8 T         CD14 Mono \n##  ACCCGTTGGCATCA.1  ACCCGTTGGCTATG.1  ACCCGTTGGCTGAT.1  ACCCGTTGTGTGGT.1 \n##         CD16 Mono       CD4 Naive T         CD14 Mono             CD8 T \n##  ACCCTCGAACTCTT.1  ACCCTCGACGCAAT.1  ACCGAAACAGCGTT.1  ACCGAAACCTGTCC.1 \n##      CD4 Memory T         CD16 Mono         CD14 Mono         CD14 Mono \n##  ACCGAAACGTCCTC.1  ACCGAAACGTGTAC.1  ACCGCGGAACACGT.1  ACCGCGGACAATCG.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono             CD8 T \n##  ACCGCGGAGAGCAG.1  ACCGTGCTTAACCG.1  ACCTATTGAGCACT.1  ACCTATTGTGAACC.1 \n##                 B         CD14 Mono         CD14 Mono       CD4 Naive T \n##  ACCTATTGTGGAAA.1  ACCTCCGAATCTTC.1  ACCTCCGACACCAA.1  ACCTCCGAGAAAGT.1 \n##                 B         CD14 Mono         CD14 Mono      CD4 Memory T \n##  ACCTCCGAGGTGAG.1  ACCTCGTGCTTGTT.1  ACCTGAGACCGCTT.1  ACCTGAGAGTTGGT.1 \n##         CD14 Mono         CD16 Mono         CD16 Mono       CD4 Naive T \n##  ACCTGAGATCGCAA.1  ACCTGAGATGCTAG.1  ACCTGGCTACGTGT.1  ACCTGGCTATCGTG.1 \n##      CD4 Memory T         CD16 Mono         CD14 Mono         CD14 Mono \n##  ACCTGGCTTCTTCA.1  ACCTTTGAAATGCC.1  ACCTTTGAAGATCC.1  ACCTTTGAAGCACT.1 \n##         CD14 Mono         CD14 Mono                NK       CD4 Naive T \n##  ACCTTTGAAGTCTG.1  ACCTTTGATCCCGT.1  ACGAACACGAGCAG.1  ACGAACACGTCTAG.1 \n##                 B         CD14 Mono                DC         CD14 Mono \n##  ACGAACTGACCTCC.1  ACGAACTGCTCCCA.1  ACGAACTGGCGGAA.1  ACGAACTGGTACCA.1 \n##         CD14 Mono                Mk                NK             CD8 T \n##  ACGAACTGTTTGCT.1  ACGAAGCTAGAGGC.1  ACGAAGCTATACCG.1  ACGAAGCTGACGAG.1 \n##         CD14 Mono      CD4 Memory T       T activated      CD4 Memory T \n##  ACGAAGCTTCGTGA.1  ACGAAGCTTGACCA.1  ACGAAGCTTTCGTT.1  ACGACAACACACGT.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono                Mk \n##  ACGACAACGGAAGC.1  ACGACAACGTTACG.1  ACGACAACTTGTGG.1  ACGACCCTCAACTG.1 \n##       CD4 Naive T         CD16 Mono         CD14 Mono         CD14 Mono \n##  ACGACCCTGAACTC.1  ACGACCCTGGTGGA.1  ACGACCCTGTATGC.1  ACGACCCTTATGCG.1 \n##                Mk         CD14 Mono                DC                DC \n##  ACGAGGGAACCTTT.1  ACGAGGGACCTTAT.1  ACGAGGGAGTCACA.1  ACGAGTACCTCCCA.1 \n##         CD14 Mono       T activated         CD14 Mono      CD4 Memory T \n##  ACGAGTACGTCCTC.1  ACGAGTACTATGGC.1  ACGATCGAACGCAT.1  ACGATCGAAGATGA.1 \n##         CD16 Mono                Mk         CD14 Mono         CD16 Mono \n##  ACGATCGAATGGTC.1  ACGATCGACCGAAT.1  ACGATCGACGAGAG.1  ACGATCGATGAGGG.1 \n##       B Activated         CD16 Mono         CD14 Mono         CD14 Mono \n##  ACGATCGATTGCGA.1  ACGATGACAATGCC.1  ACGATGACCACACA.1  ACGATGACGAACTC.1 \n##       T activated         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  ACGATGACGGATCT.1  ACGATTCTCCCACT.1  ACGATTCTGACACT.1  ACGATTCTGCGATT.1 \n##         CD14 Mono         CD16 Mono       B Activated                 B \n##  ACGATTCTGTCACA.1  ACGATTCTTGGAAA.1  ACGCAATGAAGGGC.1  ACGCAATGAGGGTG.1 \n##         CD14 Mono         CD14 Mono       B Activated         CD14 Mono \n##  ACGCAATGCACAAC.1  ACGCAATGCCGATA.1  ACGCAATGGTCTAG.1  ACGCAATGGTTCTT.1 \n##         CD16 Mono                 B         CD14 Mono         CD16 Mono \n##  ACGCAATGTATGGC.1  ACGCACCTCCATAG.1  ACGCACCTGCTATG.1  ACGCACCTTTCCGC.1 \n##       T activated         CD14 Mono         CD14 Mono       T activated \n##  ACGCCACTACAGTC.1  ACGCCACTGACAGG.1  ACGCCACTTCTTTG.1  ACGCCACTTTCGGA.1 \n##      CD4 Memory T       CD4 Naive T       B Activated         CD14 Mono \n##  ACGCCGGAACTCAG.1  ACGCCGGACATGGT.1  ACGCCGGACGCAAT.1  ACGCCGGATTGCGA.1 \n##         CD16 Mono         CD14 Mono         CD16 Mono         CD14 Mono \n##  ACGCCTTGACCTGA.1  ACGCCTTGCGCTAA.1  ACGCCTTGTGTCGA.1  ACGCCTTGTTCTGT.1 \n##      CD4 Memory T       CD4 Naive T      CD4 Memory T       CD4 Naive T \n##  ACGCGGTGGACGTT.1  ACGCGGTGGGAAAT.1  ACGCGGTGTCTCCG.1  ACGCGGTGTGGCAT.1 \n##         CD16 Mono         CD14 Mono                NK       CD4 Naive T \n##  ACGCTCACAGGTCT.1  ACGCTCACCTAGCA.1  ACGCTCACCTCCAC.1  ACGCTCACGTATGC.1 \n##         CD14 Mono                 B         CD14 Mono       CD4 Naive T \n##  ACGCTCACTAGAGA.1  ACGCTCACTCTTTG.1  ACGCTGCTACTGGT.1  ACGCTGCTAGTTCG.1 \n##                DC         CD14 Mono                DC         CD16 Mono \n##  ACGCTGCTATCGTG.1  ACGCTGCTCGTACA.1  ACGCTGCTGCGTAT.1  ACGCTGCTGCTGTA.1 \n##         CD16 Mono         CD14 Mono                DC         CD14 Mono \n##  ACGCTGCTGGAAAT.1  ACGGAACTCGCAAT.1  ACGGAACTGTGAGG.1  ACGGAACTGTTCAG.1 \n##         CD14 Mono       CD4 Naive T      CD4 Memory T             Eryth \n##  ACGGAACTTCCCAC.1  ACGGAGGACGTAAC.1  ACGGAGGATCTTTG.1  ACGGATTGCTCCAC.1 \n##         CD14 Mono         CD16 Mono         CD14 Mono         CD16 Mono \n##  ACGGATTGGGGCAA.1  ACGGATTGGTTGTG.1  ACGGCGTGCAGCTA.1  ACGGCGTGCTTTAC.1 \n##       CD4 Naive T                NK         CD16 Mono       T activated \n##  ACGGCGTGGACGTT.1  ACGGCGTGGCGGAA.1  ACGGCGTGGTCCTC.1  ACGGCGTGGTTCAG.1 \n##         CD16 Mono                 B      CD4 Memory T         CD14 Mono \n##  ACGGCGTGTACTTC.1  ACGGCGTGTGCTCC.1  ACGGCTCTAGACTC.1  ACGGCTCTATCGGT.1 \n##       CD4 Naive T                NK         CD14 Mono         CD14 Mono \n##  ACGGCTCTCATACG.1  ACGGCTCTCTGTTT.1  ACGGCTCTGTATGC.1  ACGGCTCTTTCTGT.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono                NK \n##  ACGGGAGAAAGGCG.1  ACGGGAGAAGCCAT.1  ACGGGAGAATCTCT.1  ACGGGAGACCAACA.1 \n##       CD4 Naive T       T activated                NK             CD8 T \n##  ACGGGAGACCAGTA.1  ACGGGAGACTCAAG.1  ACGGGAGAGGAAGC.1  ACGGGAGAGGACAG.1 \n##         CD14 Mono       B Activated                 B         CD14 Mono \n##  ACGGGAGATACTCT.1  ACGGGAGATGTAGC.1  ACGGTATGACCAGT.1  ACGGTATGACCATG.1 \n##                NK       CD4 Naive T                Mk         CD14 Mono \n##  ACGGTATGCCGCTT.1  ACGGTATGCTCAGA.1  ACGGTATGTTTCTG.1  ACGGTCCTACCCAA.1 \n##         CD14 Mono       CD4 Naive T       B Activated         CD14 Mono \n##  ACGGTCCTGAGATA.1  ACGTAGACCGTTAG.1  ACGTCAGAAGGGTG.1  ACGTCAGACATTTC.1 \n##         CD14 Mono                NK         CD16 Mono         CD14 Mono \n##  ACGTCAGACTACTT.1  ACGTCAGAGCTACA.1  ACGTCCTGCCTTCG.1  ACGTCCTGCTGAAC.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono         CD14 Mono \n##  ACGTCCTGGGGTGA.1  ACGTCCTGGGTGAG.1  ACGTCCTGTCGCCT.1  ACGTCCTGTGCCTC.1 \n##       CD4 Naive T                NK      CD4 Memory T                 B \n##  ACGTCCTGTTCTGT.1  ACGTCGCTAGATGA.1  ACGTCGCTATGCTG.1  ACGTCGCTCAGGAG.1 \n##         CD16 Mono       CD4 Naive T      CD4 Memory T      CD4 Memory T \n##  ACGTCGCTGCATCA.1  ACGTCGCTGTTGAC.1  ACGTGATGAACCGT.1  ACGTGATGAGATGA.1 \n##         CD14 Mono         CD14 Mono                DC         CD14 Mono \n##  ACGTGATGCCTGAA.1  ACGTGATGCTGAGT.1  ACGTGATGGCATCA.1  ACGTGATGGCTACA.1 \n##       CD4 Naive T         CD16 Mono       B Activated         CD14 Mono \n##  ACGTGATGGTCGTA.1  ACGTGCCTCCATAG.1  ACGTGCCTGACGGA.1  ACGTGCCTTGTCCC.1 \n##       T activated       T activated         CD14 Mono             CD8 T \n##  ACGTTACTCACTGA.1  ACGTTACTCTGTTT.1  ACGTTACTGCATCA.1  ACGTTACTGCGATT.1 \n##             CD8 T         CD14 Mono                NK             CD8 T \n##  ACGTTACTGCTTAG.1  ACGTTACTGGAGTG.1  ACGTTGGAACCTCC.1  ACGTTGGACGAACT.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  ACGTTGGACTCAGA.1  ACGTTTACACTAGC.1  ACGTTTACAGCTCA.1  ACTAAAACACCTAG.1 \n##       CD4 Naive T       CD4 Naive T       T activated                NK \n##  ACTAAAACCGTAGT.1  ACTAAAACCTCTTA.1  ACTAAAACGGAACG.1  ACTACGGAACCTGA.1 \n##       CD4 Naive T                 B             Eryth         CD14 Mono \n##  ACTACGGAATTCTC.1  ACTACGGACCCTAC.1  ACTACGGACTCATT.1  ACTACGGACTTGGA.1 \n##               pDC      CD4 Memory T         CD14 Mono      CD4 Memory T \n##  ACTACGGAGAATGA.1  ACTACGGAGTTGTG.1  ACTACTACACTTTC.1  ACTAGGTGAGTACC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono       CD4 Naive T \n##  ACTAGGTGCAGAAA.1  ACTAGGTGCCTAAG.1  ACTATCACGGAAGC.1  ACTATCACGGTATC.1 \n##         CD16 Mono      CD4 Memory T                Mk      CD4 Memory T \n##  ACTATCACTTCACT.1  ACTCAGGAAGTCTG.1  ACTCAGGACATGCA.1  ACTCAGGACCAACA.1 \n##                NK       CD4 Naive T      CD4 Memory T       CD4 Naive T \n##  ACTCAGGACTGTAG.1  ACTCAGGACTGTGA.1  ACTCAGGAGGCGAA.1  ACTCAGGATATGCG.1 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono             CD8 T \n##  ACTCAGGATATGGC.1  ACTCCTCTTAGAAG.1  ACTCCTCTTGTTCT.1  ACTCGAGAAGTAGA.1 \n##         CD16 Mono      CD4 Memory T                Mk                NK \n##  ACTCGAGAATCGAC.1  ACTCGAGACTCATT.1  ACTCGAGAGAGAGC.1  ACTCGAGATGCTGA.1 \n##             CD8 T       B Activated      CD4 Memory T       CD4 Naive T \n##  ACTCGCACATCAGC.1  ACTCGCACATGTCG.1  ACTCGCACGACGTT.1  ACTCGCACTCTTTG.1 \n##       CD4 Naive T       CD4 Naive T       T activated       T activated \n##  ACTCTATGACCCAA.1  ACTCTATGACTCTT.1  ACTCTATGAGATCC.1  ACTCTATGAGTACC.1 \n##                 B       T activated      CD4 Memory T         CD14 Mono \n##  ACTCTATGCTAGCA.1  ACTCTATGCTTATC.1  ACTCTATGGTACGT.1  ACTCTATGTGCACA.1 \n##       B Activated                 B         CD14 Mono         CD14 Mono \n##  ACTCTCCTCGAGTT.1  ACTCTCCTCTTACT.1  ACTCTCCTGCGAGA.1  ACTGAGACCGGGAA.1 \n##                 B             CD8 T         CD14 Mono         CD16 Mono \n##  ACTGAGACGGACTT.1  ACTGAGACTTCTTG.1  ACTGCCACCCTGAA.1  ACTGCCACCGGGAA.1 \n##       CD4 Naive T       CD4 Naive T                 B         CD16 Mono \n##  ACTGCCACTGTGCA.1  ACTGCCTGAGCTCA.1  ACTGCCTGCTCAAG.1  ACTGCCTGGAATAG.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono      CD4 Memory T \n##  ACTGCCTGGGTTCA.1  ACTGCCTGTGAGCT.1  ACTGCCTGTTCTTG.1  ACTGGCCTATGTCG.1 \n##             CD8 T             CD8 T         CD14 Mono         CD14 Mono \n##  ACTGGCCTCTAAGC.1  ACTGGCCTGCAGAG.1  ACTGGCCTGCCAAT.1  ACTGGCCTGCTGTA.1 \n##         CD14 Mono                DC         CD14 Mono         CD14 Mono \n##  ACTGGCCTTAAGGA.1  ACTGGCCTTGGTTG.1  ACTGTGGAAACCAC.1  ACTGTGGAGAATCC.1 \n##         CD14 Mono         CD16 Mono         CD14 Mono      CD4 Memory T \n##  ACTGTGGAGGACGA.1  ACTGTGGAGTTCAG.1  ACTGTTACCAACCA.1  ACTGTTACGACAGG.1 \n##       CD4 Naive T                 B       CD4 Naive T         CD14 Mono \n##  ACTTAAGAACCATG.1  ACTTAAGAAGCTAC.1  ACTTAAGACTCTCG.1  ACTTAAGAGGTGAG.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T         CD14 Mono \n##  ACTTAAGATATGGC.1  ACTTAGCTATCTTC.1  ACTTAGCTCGATAC.1  ACTTAGCTCGGGAA.1 \n##                 B         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  ACTTAGCTCTCCCA.1  ACTTAGCTTTCGCC.1  ACTTCAACACGCAT.1  ACTTCAACAGGAGC.1 \n##             CD8 T                DC         CD14 Mono         CD16 Mono \n##  ACTTCAACCGACTA.1  ACTTCAACGTGCTA.1  ACTTCAACTTTCGT.1  ACTTCCCTGCTATG.1 \n##       CD4 Naive T                DC       CD4 Naive T                NK \n##  ACTTCTGACACTCC.1  ACTTCTGATCAGGT.1  ACTTCTGATGGTCA.1  ACTTCTGATGTCAG.1 \n##                Mk         CD14 Mono      CD4 Memory T         CD14 Mono \n##  ACTTGACTCCAACA.1  ACTTGACTGGACTT.1  ACTTGACTTCACCC.1  ACTTGGGACTACCC.1 \n##       B Activated             CD8 T         CD14 Mono         CD16 Mono \n##  ACTTGGGAGCCAAT.1  ACTTGGGAGCTGAT.1  ACTTGGGATCAGTG.1  ACTTGTACACGTAC.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono       CD4 Naive T \n##  ACTTGTACAGTCGT.1  ACTTGTACCCATGA.1  ACTTTGTGGTCAAC.1  ACTTTGTGGTCCTC.1 \n##      CD4 Memory T      CD4 Memory T       B Activated       CD4 Naive T \n##  ACTTTGTGGTCGTA.1  ACTTTGTGTCCCAC.1  ACTTTGTGTGTTTC.1  AGAAACGAACAGCT.1 \n##         CD14 Mono       CD4 Naive T         CD16 Mono         CD14 Mono \n##  AGAAACGAACTCTT.1  AGAAACGACTGATG.1  AGAAACGAGCGATT.1  AGAAAGTGCATCAG.1 \n##      CD4 Memory T             CD8 T         CD14 Mono         CD16 Mono \n##  AGAAAGTGCCGATA.1  AGAAAGTGCTGCAA.1  AGAAAGTGGACAAA.1  AGAAAGTGTGCATG.1 \n##         CD14 Mono      CD4 Memory T                NK      CD4 Memory T \n##  AGAACAGAAACGTC.1  AGAACAGACCTCCA.1  AGAACAGAGAGACG.1  AGAACAGAGCTGTA.1 \n##         CD14 Mono      CD4 Memory T                NK         CD14 Mono \n##  AGAACAGATATGGC.1  AGAACGCTAGGAGC.1  AGAACGCTCACTTT.1  AGAACGCTCAGATC.1 \n##       B Activated       CD4 Naive T             CD8 T         CD14 Mono \n##  AGAACGCTGAATAG.1  AGAACGCTGAGATA.1  AGAACGCTTCCCGT.1  AGAAGATGAAGAGT.1 \n##       CD4 Naive T       T activated         CD16 Mono         CD14 Mono \n##  AGAAGATGACACAC.1  AGAAGATGCATTGG.1  AGAAGATGCCCTAC.1  AGAAGATGCCTCAC.1 \n##         CD14 Mono         CD16 Mono         CD14 Mono       CD4 Naive T \n##  AGAAGATGCTGCAA.1  AGAAGATGGCAGTT.1  AGAAGATGTGATGC.1  AGAAGATGTGCCTC.1 \n##         CD14 Mono      CD4 Memory T         CD16 Mono                DC \n##  AGAATACTCAACTG.1  AGAATACTCATCAG.1  AGAATACTGGTACT.1  AGAATACTTCAGAC.1 \n##      CD4 Memory T       T activated                 B             CD8 T \n##  AGAATACTTTCGTT.1  AGAATGGAAAACAG.1  AGAATGGAACTCAG.1  AGAATGGAAGTCAC.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T             CD8 T \n##  AGAATGGAATCTCT.1  AGAATTTGATACCG.1  AGAATTTGATTGGC.1  AGAATTTGCAACTG.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T         CD14 Mono \n##  AGAATTTGCGACAT.1  AGAATTTGCGCATA.1  AGAATTTGCTCAGA.1  AGAATTTGCTTGAG.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T         CD16 Mono \n##  AGAATTTGGAGAGC.1  AGACACACACGCAT.1  AGACACACAGCCTA.1  AGACACACCGTGAT.1 \n##      CD4 Memory T                NK       CD4 Naive T         CD14 Mono \n##  AGACACACCGTTGA.1  AGACACACGAATAG.1  AGACACACGTCAAC.1  AGACACACTGATGC.1 \n##         CD16 Mono         CD14 Mono         CD14 Mono                Mk \n##  AGACACACTGTCGA.1  AGACACTGAGCACT.1  AGACACTGCACACA.1  AGACACTGCTGGTA.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T                DC \n##  AGACACTGTCCGAA.1  AGACCTGACATGAC.1  AGACCTGACTACTT.1  AGACCTGATACTTC.1 \n##       B Activated       CD4 Naive T         CD14 Mono         CD14 Mono \n##  AGACGTACACCGAT.1  AGACGTACATCTTC.1  AGACGTACCAATCG.1  AGACTCGAAGTTCG.1 \n##         CD14 Mono                NK       CD4 Naive T                NK \n##  AGACTCGAGCAGTT.1  AGACTCGATTTACC.1  AGACTGACGATGAA.1  AGACTGACGGCATT.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono         CD14 Mono \n##  AGACTGACGTGCTA.1  AGACTTCTACGACT.1  AGACTTCTATCAGC.1  AGACTTCTCAGTTG.1 \n##      CD4 Memory T             CD8 T       CD4 Naive T         CD16 Mono \n##  AGACTTCTCTGGAT.1  AGACTTCTGGAACG.1  AGACTTCTGGATCT.1  AGACTTCTGTGAGG.1 \n##         CD14 Mono                 B                DC       CD4 Naive T \n##  AGACTTCTTTGGCA.1  AGACTTCTTTGGTG.1  AGAGAAACACCAGT.1  AGAGAAACCCTTTA.1 \n##         CD14 Mono                NK       B Activated         CD14 Mono \n##  AGAGAAACCTGGTA.1  AGAGAAACTAGAGA.1  AGAGAATGAACTGC.1  AGAGAATGGCATAC.1 \n##                NK                NK      CD4 Memory T             CD8 T \n##  AGAGAATGTGGAAA.1  AGAGAATGTTCTCA.1  AGAGAATGTTTGGG.1  AGAGATGACTACTT.1 \n##       T activated      CD4 Memory T         CD16 Mono         CD14 Mono \n##  AGAGATGACTTGAG.1  AGAGATGAGCGTAT.1  AGAGATGAGCTTAG.1  AGAGATGAGTATGC.1 \n##       T activated         CD14 Mono         CD14 Mono                NK \n##  AGAGATGAGTTTGG.1  AGAGATGATCCCAC.1  AGAGATGATGGATC.1  AGAGCGGACGTACA.1 \n##       B Activated             CD8 T         CD14 Mono         CD14 Mono \n##  AGAGCGGAGTAGCT.1  AGAGCGGAGTGCAT.1  AGAGCGGATGTGCA.1  AGAGCTACATCACG.1 \n##      CD4 Memory T         CD14 Mono             CD8 T         CD14 Mono \n##  AGAGCTACCCCTAC.1  AGAGCTACCCTTCG.1  AGAGCTACGCTCCT.1  AGAGCTACTAGAGA.1 \n##                NK         CD14 Mono             CD8 T                 B \n##  AGAGGTCTAAACGA.1  AGAGGTCTAGATCC.1  AGAGGTCTTCCAGA.1  AGAGTCACAGAGGC.1 \n##         CD14 Mono      CD4 Memory T       B Activated       B Activated \n##  AGAGTCACCCGATA.1  AGAGTCACGTAGCT.1  AGAGTCTGACACGT.1  AGAGTCTGCCTCCA.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono      CD4 Memory T \n##  AGAGTCTGGTGTAC.1  AGAGTCTGTGCTGA.1  AGAGTGCTCTCCAC.1  AGAGTGCTGACAGG.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono      CD4 Memory T \n##  AGAGTGCTGCTTCC.1  AGAGTGCTTAGCGT.1  AGATATACACGACT.1  AGATATACAGCGTT.1 \n##       CD4 Naive T         CD16 Mono       CD4 Naive T      CD4 Memory T \n##  AGATATACCCGATA.1  AGATATACGTTACG.1  AGATATACTCACCC.1  AGATATACTCTGGA.1 \n##             CD8 T             CD8 T      CD4 Memory T      CD4 Memory T \n##  AGATATACTTAGGC.1  AGATATTGACGTGT.1  AGATATTGCACTTT.1  AGATATTGCTCCAC.1 \n##      CD4 Memory T       CD4 Naive T         CD16 Mono                NK \n##  AGATATTGGGACTT.1  AGATATTGTAAAGG.1  AGATATTGTAGTCG.1  AGATATTGTGTTTC.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono         CD14 Mono \n##  AGATCGTGACCCTC.1  AGATCGTGACCTTT.1  AGATCGTGGGGTGA.1  AGATCGTGGTGAGG.1 \n##             CD8 T         CD14 Mono                 B                NK \n##  AGATCTCTAGTCGT.1  AGATCTCTATTCTC.1  AGATCTCTCCTACC.1  AGATCTCTCGTGTA.1 \n##             CD8 T      CD4 Memory T       CD4 Naive T         CD14 Mono \n##  AGATCTCTGGAAAT.1  AGATCTCTTAGAGA.1  AGATCTCTTGTCGA.1  AGATCTCTTTCCGC.1 \n##         CD16 Mono         CD14 Mono         CD14 Mono      CD4 Memory T \n##  AGATTAACGCTTAG.1  AGATTAACGGTGTT.1  AGATTAACGTATCG.1  AGATTAACTGAAGA.1 \n##       CD4 Naive T       B Activated         CD14 Mono                 B \n##  AGATTCCTACGCAT.1  AGATTCCTAGCGTT.1  AGATTCCTCTACTT.1  AGATTCCTCTGCAA.1 \n##             Eryth         CD14 Mono         CD14 Mono       CD4 Naive T \n##  AGATTCCTGACTAC.1  AGATTCCTTAGTCG.1  AGATTCCTTCCAGA.1  AGCAAAGAAAAGCA.1 \n##       CD4 Naive T         CD16 Mono         CD14 Mono         CD16 Mono \n##  AGCAAAGAATGTGC.1  AGCAAAGATGGATC.1  AGCAACACAGCATC.1  AGCAACACAGCCTA.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono                 B \n##  AGCAACACGACAAA.1  AGCAACACGCTCCT.1  AGCAACACTGCTAG.1  AGCAAGCTAACGGG.1 \n##       CD4 Naive T         CD14 Mono             Eryth                NK \n##  AGCAAGCTCAAGCT.1  AGCAAGCTCTGGAT.1  AGCAAGCTTGCTTT.1  AGCACAACACCTCC.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono      CD4 Memory T \n##  AGCACAACCTTGTT.1  AGCACAACGACGAG.1  AGCACAACGATAGA.1  AGCACAACGGATTC.1 \n##         CD14 Mono         CD14 Mono         CD16 Mono             CD8 T \n##  AGCACAACTCGCCT.1  AGCACAACTGTAGC.1  AGCACAACTTCGTT.1  AGCACTGAAACGAA.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono      CD4 Memory T \n##  AGCACTGAAGCTCA.1  AGCACTGAGACGTT.1  AGCACTGATTCTTG.1  AGCATCGAGAGAGC.1 \n##         CD14 Mono       CD4 Naive T       B Activated       CD4 Naive T \n##  AGCATCGAGAGATA.1  AGCATCGATAGCCA.1  AGCATGACATCTTC.1  AGCATGACCTCGAA.1 \n##             CD8 T         CD14 Mono      CD4 Memory T         CD14 Mono \n##  AGCATGACGCAGTT.1  AGCATGACTAACGC.1  AGCATTCTGACTAC.1  AGCATTCTGTCTTT.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono       CD4 Naive T \n##  AGCATTCTTGATGC.1  AGCCAATGAAACAG.1  AGCCAATGACGTAC.1  AGCCAATGCCCTAC.1 \n##         CD14 Mono         CD14 Mono         CD16 Mono         CD14 Mono \n##  AGCCACCTCAAAGA.1  AGCCACCTCGGGAA.1  AGCCACCTTAGTCG.1  AGCCACCTTGGAAA.1 \n##         CD16 Mono       CD4 Naive T       CD4 Naive T         CD16 Mono \n##  AGCCACCTTTGGCA.1  AGCCGGACAGCACT.1  AGCCGGACGAGCTT.1  AGCCGGACGTAAGA.1 \n##       CD4 Naive T      CD4 Memory T             CD8 T       CD4 Naive T \n##  AGCCGGACGTCCTC.1  AGCCGGACTCCGTC.1  AGCCGGACTTCCGC.1  AGCCGGTGCTGAGT.1 \n##       CD4 Naive T                 B         CD14 Mono             CD8 T \n##  AGCCGGTGGAAGGC.1  AGCCGGTGGGGATG.1  AGCCGGTGTTCCAT.1  AGCCGTCTGTCGAT.1 \n##             CD8 T         CD14 Mono         CD14 Mono                Mk \n##  AGCCTCACACGGGA.1  AGCCTCACTAACCG.1  AGCCTCACTAACGC.1  AGCCTCACTCGCCT.1 \n##      CD4 Memory T         CD14 Mono       CD4 Naive T             CD8 T \n##  AGCCTCTGAAAAGC.1  AGCCTCTGCGTAAC.1  AGCCTCTGGAGGGT.1  AGCGAACTGCGTAT.1 \n##      CD4 Memory T         CD16 Mono       CD4 Naive T                NK \n##  AGCGAACTGGACAG.1  AGCGAACTGGTACT.1  AGCGAACTGTTGCA.1  AGCGATACAAGCCT.1 \n##       T activated                 B      CD4 Memory T         CD14 Mono \n##  AGCGATACGAGATA.1  AGCGATACGGTACT.1  AGCGATACTCAGAC.1  AGCGATTGTGTGCA.1 \n##                NK         CD16 Mono         CD14 Mono      CD4 Memory T \n##  AGCGCCGAACTCTT.1  AGCGCCGACCTCAC.1  AGCGCCGACGTTGA.1  AGCGCCGAGATACC.1 \n##       CD4 Naive T                 B         CD16 Mono       T activated \n##  AGCGCCGAGTTGCA.1  AGCGCTCTACCACA.1  AGCGCTCTCCTTTA.1  AGCGCTCTCGCATA.1 \n##         CD14 Mono                DC         CD14 Mono      CD4 Memory T \n##  AGCGCTCTGTATGC.1  AGCGGCACAACTGC.1  AGCGGCACACGCAT.1  AGCGGCACCTTAGG.1 \n##       CD4 Naive T         CD16 Mono                 B       B Activated \n##  AGCGGCACGGTGAG.1  AGCGGCACTGCGTA.1  AGCGGCACTTGGCA.1  AGCGGCTGACACGT.1 \n##                DC       CD4 Naive T                 B         CD14 Mono \n##  AGCGGCTGCACACA.1  AGCGGCTGCTGACA.1  AGCGGCTGTATCTC.1  AGCGGCTGTCTAGG.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T       B Activated \n##  AGCGGCTGTGCCCT.1  AGCGGGCTCAGATC.1  AGCGGGCTCGAGTT.1  AGCGGGCTCGCCTT.1 \n##         CD14 Mono       B Activated                 B         CD14 Mono \n##  AGCGGGCTGGGAGT.1  AGCGTAACCGATAC.1  AGCGTAACTGCAGT.1  AGCGTAACTGTTTC.1 \n##         CD14 Mono      CD4 Memory T      CD4 Memory T      CD4 Memory T \n##  AGCTCGCTAAGGTA.1  AGCTCGCTAGAACA.1  AGCTCGCTATCGTG.1  AGCTCGCTCCTTCG.1 \n##         CD14 Mono             Eryth       CD4 Naive T         CD14 Mono \n##  AGCTCGCTCTCTCG.1  AGCTGAACCCGCTT.1  AGCTGAACTAAAGG.1  AGCTGCCTGCTAAC.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono       T activated \n##  AGCTGCCTTCGCTC.1  AGCTGTGAACTAGC.1  AGCTGTGACCTTCG.1  AGCTGTGAGTATCG.1 \n##       B Activated         CD14 Mono         CD16 Mono       CD4 Naive T \n##  AGCTGTGATAGTCG.1  AGCTGTGATGTCTT.1  AGCTGTGATTCGGA.1  AGCTTACTCGTCTC.1 \n##         CD14 Mono             Eryth         CD14 Mono                 B \n##  AGCTTACTGAGGCA.1  AGCTTACTGTCGAT.1  AGCTTACTTCTAGG.1  AGCTTACTTTCACT.1 \n##                NK             CD8 T      CD4 Memory T         CD14 Mono \n##  AGCTTTACAGAAGT.1  AGCTTTACAGAATG.1  AGCTTTACGACGTT.1  AGCTTTACGTAGCT.1 \n##             CD8 T         CD14 Mono         CD16 Mono         CD14 Mono \n##  AGGAAATGAGACTC.1  AGGAAATGAGTGCT.1  AGGAAATGGCTACA.1  AGGAAATGGTCTTT.1 \n##      CD4 Memory T       CD4 Naive T                DC       B Activated \n##  AGGAACCTCACCAA.1  AGGAACCTCCTTAT.1  AGGAACCTTACTGG.1  AGGAATGAACTGGT.1 \n##                DC                NK             CD8 T         CD16 Mono \n##  AGGAATGACGTCTC.1  AGGAATGACTGTCC.1  AGGAATGATACTTC.1  AGGACACTGCCCTT.1 \n##         CD16 Mono      CD4 Memory T         CD14 Mono         CD16 Mono \n##  AGGACACTGGACAG.1  AGGACACTTAAAGG.1  AGGACTTGATCACG.1  AGGACTTGCAGAGG.1 \n##      CD4 Memory T      CD4 Memory T                DC                 B \n##  AGGACTTGCGTTAG.1  AGGACTTGCTCTTA.1  AGGAGTCTAAGAGT.1  AGGAGTCTCGATAC.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono         CD14 Mono \n##  AGGAGTCTTCCTCG.1  AGGATAGAATCGAC.1  AGGATAGACACAAC.1  AGGATAGACATGGT.1 \n##      CD4 Memory T       T activated       T activated         CD14 Mono \n##  AGGATAGACGAACT.1  AGGATAGACGGAGA.1  AGGATAGAGACTAC.1  AGGATAGAGGTAAA.1 \n##         CD16 Mono      CD4 Memory T      CD4 Memory T       CD4 Naive T \n##  AGGATAGATCCCGT.1  AGGATAGATGCTAG.1  AGGATGCTAGAGGC.1  AGGATGCTCTGCAA.1 \n##         CD14 Mono                DC         CD16 Mono       T activated \n##  AGGATGCTGGACGA.1  AGGATGCTGTACAC.1  AGGATGCTTTGCAG.1  AGGATGCTTTGTGG.1 \n##             CD8 T       CD4 Naive T       T activated      CD4 Memory T \n##  AGGCAGGAGTACGT.1  AGGCAGGATATCTC.1  AGGCAGGATGTCAG.1  AGGCCTCTCGTTGA.1 \n##       T activated      CD4 Memory T                NK       CD4 Naive T \n##  AGGCCTCTCTGGTA.1  AGGCCTCTGGGTGA.1  AGGCCTCTGTTGGT.1  AGGCCTCTTCACGA.1 \n##      CD4 Memory T      CD4 Memory T         CD14 Mono         CD14 Mono \n##  AGGCCTCTTCGACA.1  AGGCTAACAGATGA.1  AGGCTAACAGGTCT.1  AGGCTAACAGTGTC.1 \n##                 B                NK         CD14 Mono                 B \n##  AGGCTAACTGTGGT.1  AGGGACGAAACGGG.1  AGGGACGAAGTACC.1  AGGGACGACCAAGT.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  AGGGACGACTCGCT.1  AGGGACGACTTCGC.1  AGGGACGATTCTGT.1  AGGGAGTGATGGTC.1 \n##                DC         CD14 Mono      CD4 Memory T                NK \n##  AGGGAGTGTGACCA.1  AGGGAGTGTGAGCT.1  AGGGCCACAAGGTA.1  AGGGCCACATCGAC.1 \n##         CD14 Mono             CD8 T                Mk      CD4 Memory T \n##  AGGGCCACGTGTAC.1  AGGGCCACTACAGC.1  AGGGCCACTATCTC.1  AGGGCCACTCGCAA.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T         CD14 Mono \n##  AGGGCCACTGACCA.1  AGGGCCTGAACGAA.1  AGGGCCTGTTACCT.1  AGGGCGCTACGGGA.1 \n##                DC         CD16 Mono                 B         CD14 Mono \n##  AGGGCGCTATCGGT.1  AGGGCGCTCGTGAT.1  AGGGCGCTCTATGG.1  AGGGCGCTTGGTGT.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono       CD4 Naive T \n##  AGGGCGCTTTACTC.1  AGGGTGGAAGACTC.1  AGGGTGGAAGGGTG.1  AGGGTGGAAGTCAC.1 \n##                DC                DC         CD16 Mono         CD16 Mono \n##  AGGGTGGACACCAA.1  AGGGTGGACAGCTA.1  AGGGTGGACCCACT.1  AGGGTGGAGGTGGA.1 \n##       CD4 Naive T      CD4 Memory T                NK       CD4 Naive T \n##  AGGGTTTGACAGTC.1  AGGGTTTGCGCTAA.1  AGGGTTTGTCCGAA.1  AGGTACACGAAAGT.1 \n##             CD8 T                 B       T activated      CD4 Memory T \n##  AGGTACTGAGTAGA.1  AGGTCATGGTTTCT.1  AGGTCATGTGGTGT.1  AGGTCATGTGTCTT.1 \n##         CD14 Mono         CD14 Mono                NK         CD14 Mono \n##  AGGTCTGACGCTAA.1  AGGTCTGAGGTGAG.1  AGGTCTGAGTTGTG.1  AGGTCTGATCACGA.1 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono         CD14 Mono \n##  AGGTCTGATCGCTC.1  AGGTCTGATGGAGG.1  AGGTCTGATTATCC.1  AGGTGGGAATGCTG.1 \n##       CD4 Naive T       CD4 Naive T      CD4 Memory T       CD4 Naive T \n##  AGGTGGGACCAATG.1  AGGTGTTGCCATGA.1  AGGTGTTGCTCTCG.1  AGGTGTTGGAGAGC.1 \n##       T activated      CD4 Memory T         CD14 Mono      CD4 Memory T \n##  AGGTGTTGGAGGTG.1  AGGTGTTGGTCACA.1  AGGTGTTGTGGTGT.1  AGGTGTTGTGTTCT.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono       B Activated \n##  AGGTGTTGTTCTGT.1  AGGTTCGATAGAAG.1  AGGTTCGATTCCAT.1  AGGTTGTGACCCAA.1 \n##         CD14 Mono                NK      CD4 Memory T         CD14 Mono \n##  AGGTTGTGAGCATC.1  AGGTTGTGCCGTAA.1  AGGTTGTGCGCCTT.1  AGGTTGTGGGCAAG.1 \n##         CD14 Mono         CD14 Mono                NK         CD14 Mono \n##  AGGTTGTGGTAAAG.1  AGGTTGTGGTCGAT.1  AGTAAGGAACCCAA.1  AGTAAGGATTGACG.1 \n##       B Activated      CD4 Memory T         CD14 Mono      CD4 Memory T \n##  AGTAATACACCACA.1  AGTAATACACTAGC.1  AGTAATACTGAAGA.1  AGTAATACTTGCGA.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono       CD4 Naive T \n##  AGTAATTGCTTGGA.1  AGTAATTGGAGAGC.1  AGTAATTGGGTCAT.1  AGTAATTGTCGTTT.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T       T activated \n##  AGTAATTGTGCCCT.1  AGTAATTGTTCTTG.1  AGTACGTGCCATAG.1  AGTACGTGTGAGCT.1 \n##                DC       CD4 Naive T         CD14 Mono         CD14 Mono \n##  AGTACGTGTGTAGC.1  AGTACGTGTTCCAT.1  AGTACTCTCACTAG.1  AGTACTCTCGGGAA.1 \n##                NK         CD14 Mono         CD14 Mono       CD4 Naive T \n##  AGTACTCTGTAGGG.1  AGTAGAGAAAACGA.1  AGTAGAGAACAGCT.1  AGTAGAGAAGAAGT.1 \n##                 B       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  AGTAGAGACAGGAG.1  AGTAGAGAGCAAGG.1  AGTAGAGATGAAGA.1  AGTAGAGATGCTGA.1 \n##       CD4 Naive T                 B         CD14 Mono                NK \n##  AGTAGGCTAAACGA.1  AGTAGGCTACACTG.1  AGTAGGCTACCTGA.1  AGTAGGCTAGGCGA.1 \n##      CD4 Memory T         CD16 Mono       T activated         CD14 Mono \n##  AGTAGGCTATTGGC.1  AGTAGGCTTGGTGT.1  AGTATAACCTCTTA.1  AGTATAACTAGAAG.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T       CD4 Naive T \n##  AGTATAACTGCAGT.1  AGTATCCTACCATG.1  AGTCACGAACCTTT.1  AGTCACGAACGGAG.1 \n##             CD8 T      CD4 Memory T      CD4 Memory T      CD4 Memory T \n##  AGTCACGAGCTTCC.1  AGTCAGACACCTAG.1  AGTCAGACATTGGC.1  AGTCAGACCATGCA.1 \n##                NK               pDC      CD4 Memory T         CD14 Mono \n##  AGTCAGACGCAGTT.1  AGTCAGACTAGCGT.1  AGTCAGACTGCATG.1  AGTCAGACTTACCT.1 \n##       B Activated               pDC             CD8 T         CD16 Mono \n##  AGTCGAACGGTTAC.1  AGTCGCCTGAACTC.1  AGTCGCCTTCGACA.1  AGTCGCCTTGGCAT.1 \n##       CD4 Naive T                NK             CD8 T       CD4 Naive T \n##  AGTCGCCTTTGCTT.1  AGTCTACTAAAACG.1  AGTCTACTCGTGAT.1  AGTCTTACCTCAGA.1 \n##         CD16 Mono         CD14 Mono      CD4 Memory T      CD4 Memory T \n##  AGTCTTACGCTGTA.1  AGTCTTACTAGAAG.1  AGTCTTACTTCGCC.1  AGTGAAGAACTGTG.1 \n##         CD14 Mono         CD16 Mono      CD4 Memory T       T activated \n##  AGTGAAGACGTGAT.1  AGTGAAGAGTTCAG.1  AGTGACACAAGGTA.1  AGTGACACAGCAAA.1 \n##         CD14 Mono             CD8 T         CD14 Mono                NK \n##  AGTGACACCCTTAT.1  AGTGACACCTGGAT.1  AGTGACACGACGAG.1  AGTGACACGGACAG.1 \n##      CD4 Memory T         CD14 Mono                Mk         CD14 Mono \n##  AGTGACACTTTGCT.1  AGTGACTGAAGGTA.1  AGTGACTGATCGGT.1  AGTGACTGATCGTG.1 \n##                 B                DC         CD14 Mono         CD16 Mono \n##  AGTGACTGCGTGTA.1  AGTGACTGGAGCAG.1  AGTGACTGTTTCGT.1  AGTGCAACAATCGC.1 \n##         CD14 Mono         CD14 Mono                NK         CD14 Mono \n##  AGTGCAACATCGTG.1  AGTGCAACCGTCTC.1  AGTGCAACGGCGAA.1  AGTGCAACTAACGC.1 \n##         CD16 Mono       CD4 Naive T      CD4 Memory T         CD16 Mono \n##  AGTGTGACAGTCGT.1  AGTGTGACTGCCTC.1  AGTGTTCTAGCGTT.1  AGTGTTCTCTGATG.1 \n##         CD14 Mono                NK      CD4 Memory T       CD4 Naive T \n##  AGTGTTCTTTGCGA.1  AGTTAAACACTCTT.1  AGTTAAACCTGACA.1  AGTTAAACGGACAG.1 \n##         CD14 Mono                 B      CD4 Memory T       CD4 Naive T \n##  AGTTATGAACCTAG.1  AGTTATGAATCTCT.1  AGTTATGACACACA.1  AGTTATGAGGAAAT.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono       CD4 Naive T \n##  AGTTATGAGGAGCA.1  AGTTATGAGTAAAG.1  AGTTATGATGGATC.1  AGTTCTACGACGAG.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono       T activated \n##  AGTTCTACTTTCAC.1  AGTTCTTGAACGGG.1  AGTTCTTGCAGTCA.1  AGTTGTCTAAACAG.1 \n##       B Activated      CD4 Memory T                DC                 B \n##  AGTTGTCTAAAGTG.1  AGTTGTCTACTTTC.1  AGTTGTCTATGCTG.1  AGTTGTCTCATTGG.1 \n##         CD14 Mono             CD8 T      CD4 Memory T      CD4 Memory T \n##  AGTTGTCTGAGGTG.1  AGTTGTCTGCTACA.1  AGTTGTCTTCCGAA.1  AGTTTAGAATTCTC.1 \n##         CD14 Mono       T activated         CD14 Mono       CD4 Naive T \n##  AGTTTAGAGTTCGA.1  AGTTTAGATAAGCC.1  AGTTTCACACACTG.1  AGTTTCACAGCACT.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD16 Mono \n##  AGTTTCACGCATCA.1  AGTTTCACTCACCC.1  AGTTTGCTCGAGTT.1  AGTTTGCTCTTTAC.1 \n##                 B         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  AGTTTGCTGAATCC.1  AGTTTGCTGGTCAT.1  AGTTTGCTTCCTGC.1  AGTTTGCTTCTTCA.1 \n##         CD14 Mono                Mk         CD14 Mono         CD14 Mono \n##  ATAAACACACGTGT.1  ATAAACACCTTCGC.1  ATAACAACAAGAGT.1  ATAACAACCAGATC.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T       B Activated \n##  ATAACATGCAGGAG.1  ATAACATGCTGTCC.1  ATAACATGCTTGCC.1  ATAACATGGATACC.1 \n##         CD16 Mono                 B      CD4 Memory T       CD4 Naive T \n##  ATAACATGGGTTCA.1  ATAACCCTACCTCC.1  ATAACCCTTGACTG.1  ATAAGTACACCCAA.1 \n##                 B         CD14 Mono         CD14 Mono         CD14 Mono \n##  ATAAGTTGATCTCT.1  ATAAGTTGCCTTAT.1  ATAAGTTGCTCCAC.1  ATAAGTTGCTTAGG.1 \n##             CD8 T         CD16 Mono         CD14 Mono         CD14 Mono \n##  ATAAGTTGGGAGCA.1  ATAAGTTGTACTTC.1  ATAAGTTGTGAGAA.1  ATAATCGAAAACGA.1 \n##                 B      CD4 Memory T       T activated      CD4 Memory T \n##  ATAATCGATTCTGT.1  ATAATGACAACGGG.1  ATAATGACACCTTT.1  ATAATGACCACTGA.1 \n##         CD14 Mono      CD4 Memory T       CD4 Naive T             CD8 T \n##  ATAATGACGACAAA.1  ATAATGACTTATCC.1  ATACAATGACGTAC.1  ATACAATGATTCCT.1 \n##         CD14 Mono         CD14 Mono             CD8 T         CD14 Mono \n##  ATACAATGTCAGAC.1  ATACAATGTCTTTG.1  ATACACCTAAAGTG.1  ATACACCTACAGTC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  ATACACCTGGACGA.1  ATACACCTTGCTAG.1  ATACCACTAGGTCT.1  ATACCACTATCAGC.1 \n##         CD14 Mono         CD16 Mono      CD4 Memory T                NK \n##  ATACCACTCCTGAA.1  ATACCACTGGTGAG.1  ATACCACTGTCACA.1  ATACCACTTGTGGT.1 \n##                 B       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  ATACCGGAATCGAC.1  ATACCGGACCCACT.1  ATACCGGACTCTCG.1  ATACCTACATCGTG.1 \n##             CD8 T      CD4 Memory T         CD16 Mono         CD14 Mono \n##  ATACCTACGACTAC.1  ATACCTACGGAAGC.1  ATACCTACGTCTGA.1  ATACCTACTGCAAC.1 \n##       CD4 Naive T                Mk         CD14 Mono       B Activated \n##  ATACCTTGATGACC.1  ATACCTTGATGTGC.1  ATACCTTGGACAAA.1  ATACCTTGTTCTGT.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T         CD14 Mono \n##  ATACGGACAGTCAC.1  ATACGGACCAACTG.1  ATACGTCTAAGTAG.1  ATACGTCTATCGGT.1 \n##       CD4 Naive T      CD4 Memory T                 B                NK \n##  ATACGTCTCACCAA.1  ATACGTCTGAAACA.1  ATACGTCTGGTTAC.1  ATACTCTGATTTCC.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono                 B \n##  ATACTCTGCACTAG.1  ATACTCTGCTTAGG.1  ATACTCTGGACGTT.1  ATAGAACTACTCAG.1 \n##                 B         CD14 Mono             CD8 T       CD4 Naive T \n##  ATAGAACTCTCAGA.1  ATAGAACTGAGAGC.1  ATAGAACTGGATCT.1  ATAGAACTGTCCTC.1 \n##                Mk         CD14 Mono       T activated         CD14 Mono \n##  ATAGAACTGTCGTA.1  ATAGAACTTCACGA.1  ATAGAACTTTTCAC.1  ATAGATACACCTGA.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T      CD4 Memory T \n##  ATAGATACCATGGT.1  ATAGATACCGTTAG.1  ATAGATACGTTCAG.1  ATAGATTGAAACAG.1 \n##         CD14 Mono             CD8 T         CD14 Mono       CD4 Naive T \n##  ATAGATTGAATCGC.1  ATAGATTGTCGTTT.1  ATAGCCGACGATAC.1  ATAGCCGAGTACGT.1 \n##         CD14 Mono                NK         CD16 Mono             CD8 T \n##  ATAGCCGAGTTAGC.1  ATAGCGTGGCGAGA.1  ATAGCGTGTAACGC.1  ATAGCTCTAAGTGA.1 \n##       CD4 Naive T                NK             CD8 T         CD14 Mono \n##  ATAGCTCTACGTGT.1  ATAGCTCTCATGGT.1  ATAGCTCTCGCATA.1  ATAGCTCTGATAAG.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono                 B \n##  ATAGCTCTGGATCT.1  ATAGCTCTTCCGTC.1  ATAGGAGACTAGAC.1  ATAGGAGATGAAGA.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  ATAGGAGATGAGCT.1  ATAGGAGATTTCTG.1  ATAGGCTGAAAGTG.1  ATAGGCTGAGAAGT.1 \n##                NK         CD14 Mono         CD14 Mono         CD14 Mono \n##  ATAGGCTGCTGCTC.1  ATAGGCTGGGACGA.1  ATAGTCCTGGACTT.1  ATAGTCCTGGTGTT.1 \n##      CD4 Memory T                Mk       T activated         CD14 Mono \n##  ATAGTCCTTGCTTT.1  ATAGTTGAAAGGCG.1  ATAGTTGAAAGTAG.1  ATAGTTGAACTAGC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono                NK \n##  ATAGTTGAAGTCTG.1  ATAGTTGACTCGCT.1  ATAGTTGATAAAGG.1  ATAGTTGATTCGCC.1 \n##         CD14 Mono      CD4 Memory T               pDC       T activated \n##  ATAGTTGATTGGTG.1  ATAGTTGATTTGTC.1  ATATACGACTGAAC.1  ATATACGACTGTTT.1 \n##         CD14 Mono       CD4 Naive T                 B                NK \n##  ATATACGAGGGCAA.1  ATATACGAGGTTTG.1  ATATACGAGTCACA.1  ATATACGAGTCTAG.1 \n##             CD8 T      CD4 Memory T      CD4 Memory T         CD14 Mono \n##  ATATACGATCCCAC.1  ATATACGATGCATG.1  ATATAGTGTGACTG.1  ATATGAACTGAACC.1 \n##       CD4 Naive T      CD4 Memory T      CD4 Memory T       B Activated \n##  ATATGCCTAAGATG.1  ATATGCCTATGTGC.1  ATATGCCTCCTTTA.1  ATATGCCTCTGTGA.1 \n##                 B      CD4 Memory T             CD8 T      CD4 Memory T \n##  ATCAAATGAGTACC.1  ATCAAATGATTCCT.1  ATCAAATGCTGTCC.1  ATCAACCTCAACCA.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono         CD14 Mono \n##  ATCAACCTGGACGA.1  ATCAACCTTAGAAG.1  ATCAACCTTCTCGC.1  ATCAACCTTTCGTT.1 \n##         CD14 Mono                DC                 B                NK \n##  ATCACACTGACGAG.1  ATCACACTGCTTAG.1  ATCACACTGTTGCA.1  ATCACGGAAAAGCA.1 \n##         CD14 Mono                 B                 B         CD16 Mono \n##  ATCACGGAACCCTC.1  ATCACGGAACTGTG.1  ATCACGGAGCGATT.1  ATCACGGATAACGC.1 \n##                DC               pDC         CD16 Mono                NK \n##  ATCACGGATCAGGT.1  ATCACTACCTATTC.1  ATCACTACCTTCTA.1  ATCACTACTGCACA.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono       CD4 Naive T \n##  ATCACTACTGGTAC.1  ATCACTTGCGCAAT.1  ATCACTTGCTAGCA.1  ATCACTTGGCGAGA.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono       T activated \n##  ATCACTTGTCCGTC.1  ATCACTTGTTCCGC.1  ATCACTTGTTGCAG.1  ATCAGGTGACTGTG.1 \n##      CD4 Memory T                 B       CD4 Naive T       CD4 Naive T \n##  ATCAGGTGGAACCT.1  ATCAGGTGGAACTC.1  ATCAGGTGGGCGAA.1  ATCAGGTGGGGCAA.1 \n##         CD16 Mono       CD4 Naive T         CD14 Mono         CD14 Mono \n##  ATCAGGTGTCCAAG.1  ATCATCTGAGCAAA.1  ATCATCTGTTCTGT.1  ATCCAGGACTACTT.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono                DC \n##  ATCCAGGACTCCAC.1  ATCCAGGATATGGC.1  ATCCATACATTCCT.1  ATCCCGTGCCAAGT.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono                NK \n##  ATCCCGTGCTGCAA.1  ATCCCGTGGTCTAG.1  ATCCCGTGTACTGG.1  ATCCCGTGTCACGA.1 \n##         CD16 Mono         CD14 Mono         CD14 Mono      CD4 Memory T \n##  ATCCCGTGTCTCAT.1  ATCCGCACAACAGA.1  ATCCGCACTCCCGT.1  ATCCTAACATCAGC.1 \n##         CD16 Mono      CD4 Memory T         CD14 Mono                DC \n##  ATCCTAACATCGAC.1  ATCCTAACCAACTG.1  ATCCTAACTGCCTC.1  ATCGACGAGTAAGA.1 \n##      CD4 Memory T      CD4 Memory T         CD16 Mono                DC \n##  ATCGACGATAAGGA.1  ATCGACGATTGTGG.1  ATCGAGTGTCTCGC.1  ATCGCAGAAGCATC.1 \n##         CD14 Mono                DC         CD14 Mono                NK \n##  ATCGCAGACAGGAG.1  ATCGCAGACGACAT.1  ATCGCAGACTTCCG.1  ATCGCAGATTCTAC.1 \n##             CD8 T                NK         CD14 Mono         CD14 Mono \n##  ATCGCCACACGGTT.1  ATCGCCACAGGCGA.1  ATCGCCACCTGTAG.1  ATCGCCTGAGGAGC.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T         CD14 Mono \n##  ATCGCGCTACTTTC.1  ATCGCGCTAGCTAC.1  ATCGCGCTATGGTC.1  ATCGCGCTGGGAGT.1 \n##                DC      CD4 Memory T       B Activated      CD4 Memory T \n##  ATCGCGCTGTGCTA.1  ATCGCGCTTACTTC.1  ATCGCGCTTTGCAG.1  ATCGGAACAAACGA.1 \n##         CD14 Mono       CD4 Naive T         CD16 Mono                DC \n##  ATCGGAACACTGTG.1  ATCGGAACAGCAAA.1  ATCGGAACCATCAG.1  ATCGGAACCCTCCA.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T         CD14 Mono \n##  ATCGGAACTGGCAT.1  ATCGGAACTGGTCA.1  ATCGGAACTTCTAC.1  ATCGGAACTTTCGT.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  ATCGGTGAAGCGGA.1  ATCGGTGAAGCGTT.1  ATCGGTGACCCTAC.1  ATCGGTGACTACGA.1 \n##                 B                DC      CD4 Memory T         CD14 Mono \n##  ATCGGTGAGGTTCA.1  ATCGGTGATATGGC.1  ATCGTTTGGAGATA.1  ATCGTTTGGCGGAA.1 \n##         CD16 Mono       CD4 Naive T       CD4 Naive T         CD16 Mono \n##  ATCGTTTGTATGGC.1  ATCTACACACCCTC.1  ATCTACACAGATGA.1  ATCTACACCAACCA.1 \n##         CD14 Mono       CD4 Naive T      CD4 Memory T      CD4 Memory T \n##  ATCTACACCATTTC.1  ATCTACACCTGTTT.1  ATCTACACGGAGGT.1  ATCTACACGGGTGA.1 \n##                Mk         CD14 Mono                 B       CD4 Naive T \n##  ATCTACACGTTGGT.1  ATCTACACTGTCTT.1  ATCTACTGAAGGTA.1  ATCTACTGATTTCC.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  ATCTACTGCCAAGT.1  ATCTACTGTGTGGT.1  ATCTACTGTTTCAC.1  ATCTCAACACAGTC.1 \n##                Mk       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  ATCTCAACGCTGAT.1  ATCTCAACGGGACA.1  ATCTCAACGGTGTT.1  ATCTCAACTTGCAG.1 \n##      CD4 Memory T                NK         CD14 Mono       T activated \n##  ATCTGACTACAGCT.1  ATCTGACTACGGGA.1  ATCTGACTCTCCCA.1  ATCTGACTGTACGT.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T         CD14 Mono \n##  ATCTGGGACATTCT.1  ATCTGGGACCTTAT.1  ATCTGGGATCCAGA.1  ATCTGGGATCCGAA.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono      CD4 Memory T \n##  ATCTGTTGATGTCG.1  ATCTGTTGCTTAGG.1  ATCTGTTGGCTCCT.1  ATCTGTTGTAGAGA.1 \n##      CD4 Memory T         CD14 Mono                NK                 B \n##  ATCTGTTGTGGCAT.1  ATCTTGACGCCATA.1  ATCTTGACGGGATG.1  ATCTTGACGTCGAT.1 \n##         CD14 Mono         CD16 Mono             CD8 T                 B \n##  ATCTTTCTCACTAG.1  ATCTTTCTCTTGTT.1  ATCTTTCTGAACTC.1  ATCTTTCTGGCATT.1 \n##      CD4 Memory T         CD14 Mono         CD16 Mono         CD16 Mono \n##  ATCTTTCTTGCATG.1  ATGAAACTAACCAC.1  ATGAAACTAACGTC.1  ATGAAACTACCAGT.1 \n##      CD4 Memory T         CD14 Mono                NK      CD4 Memory T \n##  ATGAAACTGCTGTA.1  ATGAAACTGTCACA.1  ATGAAACTGTGCTA.1  ATGAAACTTCCTGC.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono         CD14 Mono \n##  ATGAAACTTCGCAA.1  ATGAAGGACACAAC.1  ATGAAGGACGATAC.1  ATGACGTGCATTTC.1 \n##                NK         CD14 Mono         CD14 Mono         CD14 Mono \n##  ATGACGTGCCAAGT.1  ATGACGTGGCATAC.1  ATGAGAGAAACCTG.1  ATGAGAGAAGCGGA.1 \n##         CD14 Mono                 B      CD4 Memory T         CD14 Mono \n##  ATGAGAGACGACTA.1  ATGAGAGACTCCCA.1  ATGAGCACGCTAAC.1  ATGAGCACGTAGCT.1 \n##         CD16 Mono         CD14 Mono         CD16 Mono             CD8 T \n##  ATGAGCACTCGCAA.1  ATGAGCACTTTGGG.1  ATGATATGAAGCCT.1  ATGATATGCGCTAA.1 \n##       CD4 Naive T      CD4 Memory T             CD8 T         CD14 Mono \n##  ATGATATGTCTAGG.1  ATGATATGTTGGCA.1  ATGATATGTTTGCT.1  ATGCACGAGCTTCC.1 \n##         CD16 Mono       CD4 Naive T                 B         CD14 Mono \n##  ATGCACGAGTTAGC.1  ATGCACGATCCGTC.1  ATGCAGACGCAAGG.1  ATGCAGACGTAAGA.1 \n##                Mk         CD14 Mono       CD4 Naive T         CD16 Mono \n##  ATGCAGACTGGATC.1  ATGCAGTGACACCA.1  ATGCAGTGACCCAA.1  ATGCAGTGCTTCCG.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono                 B \n##  ATGCAGTGTCAGGT.1  ATGCCAGAAAGGTA.1  ATGCCAGAAGATCC.1  ATGCCAGACCGTAA.1 \n##         CD14 Mono      CD4 Memory T       T activated                Mk \n##  ATGCCAGACCTTCG.1  ATGCCAGAGTGTTG.1  ATGCCAGATGTAGC.1  ATGCCGCTGGACTT.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T         CD14 Mono \n##  ATGCCGCTGTATCG.1  ATGCCGCTGTCATG.1  ATGCCGCTTGAAGA.1  ATGCGATGAAAACG.1 \n##         CD14 Mono       CD4 Naive T      CD4 Memory T                DC \n##  ATGCGATGTGCTGA.1  ATGCGCCTAGAAGT.1  ATGCGCCTATTTCC.1  ATGCGCCTCTGACA.1 \n##       CD4 Naive T       T activated       T activated         CD16 Mono \n##  ATGCGCCTCTTCTA.1  ATGCGCCTGCAAGG.1  ATGCTTTGACTTTC.1  ATGCTTTGCTTCCG.1 \n##         CD14 Mono                Mk      CD4 Memory T         CD14 Mono \n##  ATGCTTTGGTGCAT.1  ATGCTTTGGTGCTA.1  ATGCTTTGTCTATC.1  ATGCTTTGTTCTGT.1 \n##         CD14 Mono                DC             CD8 T                DC \n##  ATGGACACAAACAG.1  ATGGACACAACTGC.1  ATGGACACCCGCTT.1  ATGGACACGGTTTG.1 \n##       T activated      CD4 Memory T         CD14 Mono         CD16 Mono \n##  ATGGGTACAGACTC.1  ATGGGTACCCCGTT.1  ATGGGTACCTGATG.1  ATGGGTACTCGTAG.1 \n##         CD14 Mono                Mk         CD14 Mono       CD4 Naive T \n##  ATGGGTACTGAGAA.1  ATGGGTACTGGAGG.1  ATGGTGACTCGTGA.1  ATGTAAACACTACG.1 \n##      CD4 Memory T       B Activated         CD14 Mono                DC \n##  ATGTAAACACTCTT.1  ATGTAAACATGGTC.1  ATGTAAACGATAGA.1  ATGTAAACGTTTGG.1 \n##         CD16 Mono      CD4 Memory T         CD14 Mono         CD16 Mono \n##  ATGTACCTACGGTT.1  ATGTACCTAGCTAC.1  ATGTACCTCGACAT.1  ATGTACCTCTAGCA.1 \n##                 B                 B             CD8 T         CD14 Mono \n##  ATGTACCTCTCAAG.1  ATGTCACTAAAAGC.1  ATGTCACTGTCTAG.1  ATGTCGGAATGCTG.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  ATGTCGGACTGGAT.1  ATGTCGGATGAAGA.1  ATGTCGGATGGAGG.1  ATGTCGGATGTGAC.1 \n##       CD4 Naive T       T activated       CD4 Naive T      CD4 Memory T \n##  ATGTCGGATGTGGT.1  ATGTTAGACACTCC.1  ATGTTAGAGCCATA.1  ATGTTAGAGTGCTA.1 \n##      CD4 Memory T         CD14 Mono       T activated         CD14 Mono \n##  ATGTTCACACCAGT.1  ATGTTCACAGTCTG.1  ATGTTCACCTACGA.1  ATGTTCACGCTGAT.1 \n##                Mk         CD14 Mono         CD14 Mono       B Activated \n##  ATGTTCACTTCGCC.1  ATGTTGCTACCTCC.1  ATGTTGCTCCATAG.1  ATTAACGAAAGAGT.1 \n##      CD4 Memory T                 B       CD4 Naive T                DC \n##  ATTAACGAACTGTG.1  ATTAACGACCATGA.1  ATTAACGAGACACT.1  ATTAACGATCAGTG.1 \n##       CD4 Naive T             CD8 T         CD14 Mono             CD8 T \n##  ATTAAGACTTCAGG.1  ATTACCACCTGGAT.1  ATTACCTGGGAGTG.1  ATTACCTGTCCAGA.1 \n##             CD8 T       CD4 Naive T         CD14 Mono         CD14 Mono \n##  ATTAGATGAAAGCA.1  ATTAGATGAAGCCT.1  ATTAGATGCACTGA.1  ATTAGATGCCGTAA.1 \n##         CD14 Mono                NK         CD14 Mono         CD14 Mono \n##  ATTAGATGGAGGAC.1  ATTAGATGTCACGA.1  ATTAGATGTGCTTT.1  ATTAGTGACATTCT.1 \n##       B Activated         CD16 Mono                NK         CD14 Mono \n##  ATTAGTGACGGTAT.1  ATTAGTGACTCTCG.1  ATTAGTGATACGAC.1  ATTAGTGATTCTAC.1 \n##                NK       T activated         CD14 Mono       T activated \n##  ATTATGGAAGATCC.1  ATTATGGAGAGACG.1  ATTATGGATCGTGA.1  ATTATGGATCTACT.1 \n##      CD4 Memory T                 B      CD4 Memory T       T activated \n##  ATTCAAGAAGTGCT.1  ATTCAAGAGACTAC.1  ATTCAAGAGGAGCA.1  ATTCAAGATGCAAC.1 \n##                NK       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  ATTCAGCTATCGTG.1  ATTCAGCTGGAGGT.1  ATTCCATGACCAAC.1  ATTCCATGCAGAAA.1 \n##       T activated      CD4 Memory T         CD14 Mono         CD14 Mono \n##  ATTCCATGCTATTC.1  ATTCCATGCTTGCC.1  ATTCCATGGATGAA.1  ATTCGACTACGTTG.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono         CD14 Mono \n##  ATTCGGGAGAGGCA.1  ATTCGGGATGAACC.1  ATTCTGACGCTCCT.1  ATTCTTCTAGTGTC.1 \n##         CD14 Mono                 B             CD8 T             CD8 T \n##  ATTCTTCTCTGATG.1  ATTCTTCTGGCAAG.1  ATTGAAACAGTCTG.1  ATTGAAACGATACC.1 \n##         CD14 Mono         CD14 Mono                DC       T activated \n##  ATTGAAACGGTACT.1  ATTGAAACTTCGGA.1  ATTGAATGACGGGA.1  ATTGAATGGGACTT.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono                 B \n##  ATTGATGAAAAACG.1  ATTGATGAGGTGGA.1  ATTGATGATCCTCG.1  ATTGCACTTACTTC.1 \n##       CD4 Naive T         CD14 Mono      CD4 Memory T       T activated \n##  ATTGCACTTCGATG.1  ATTGCACTTGTCGA.1  ATTGCGGAACCACA.1  ATTGCGGAATTGGC.1 \n##       CD4 Naive T             Eryth         CD14 Mono                NK \n##  ATTGCGGATCGTTT.1  ATTGCGGATGTCTT.1  ATTGCGGATGTTTC.1  ATTGCTACACCTCC.1 \n##       CD4 Naive T         CD14 Mono             CD8 T         CD16 Mono \n##  ATTGCTACACTCAG.1  ATTGCTACACTGTG.1  ATTGCTACCTCTCG.1  ATTGCTACGAGCTT.1 \n##         CD14 Mono         CD14 Mono         CD16 Mono         CD14 Mono \n##  ATTGCTACGGCAAG.1  ATTGCTACTCCGAA.1  ATTGCTTGCGTCTC.1  ATTGCTTGCTGGTA.1 \n##       CD4 Naive T             CD8 T         CD14 Mono                 B \n##  ATTGCTTGGTCATG.1  ATTGCTTGTCACCC.1  ATTGCTTGTGCAAC.1  ATTGGGTGGAGGCA.1 \n##                 B                NK      CD4 Memory T                NK \n##  ATTGGTCTCTCAGA.1  ATTGGTCTGACAAA.1  ATTGGTCTGCATAC.1  ATTGTAGAGACGGA.1 \n##       CD4 Naive T      CD4 Memory T                Mk             CD8 T \n##  ATTGTAGAGGCAAG.1  ATTGTCTGACGGAG.1  ATTGTCTGAGAATG.1  ATTGTCTGCACAAC.1 \n##       CD4 Naive T                DC       CD4 Naive T       CD4 Naive T \n##  ATTGTCTGCTTTAC.1  ATTGTCTGGTTTGG.1  ATTGTCTGTACAGC.1  ATTTAGGAAACGAA.1 \n##         CD14 Mono                NK         CD16 Mono         CD14 Mono \n##  ATTTAGGAAGAGAT.1  ATTTAGGACGAGTT.1  ATTTAGGAGATACC.1  ATTTAGGAGTGAGG.1 \n##         CD14 Mono             CD8 T                DC         CD14 Mono \n##  ATTTAGGATGCAGT.1  ATTTAGGATTTACC.1  ATTTCCGAATGTCG.1  ATTTCCGACTCGCT.1 \n##                NK      CD4 Memory T                 B                 B \n##  ATTTCGTGCACTAG.1  ATTTCGTGTCATTC.1  ATTTCGTGTTTCTG.1  ATTTCTCTATAAGG.1 \n##       T activated         CD14 Mono       CD4 Naive T         CD14 Mono \n##  ATTTCTCTCATGCA.1  ATTTCTCTCTACTT.1  ATTTCTCTCTTGGA.1  ATTTCTCTGTCACA.1 \n##      CD4 Memory T         CD14 Mono       CD4 Naive T         CD16 Mono \n##  ATTTCTCTGTTTGG.1  ATTTGCACCAAGCT.1  ATTTGCACCCTATT.1  ATTTGCACCTTCGC.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T         CD14 Mono \n##  ATTTGCACGTGAGG.1  ATTTGCACTATCGG.1  CAAACTCTAGCATC.1  CAAACTCTATCGGT.1 \n##       CD4 Naive T         CD14 Mono      CD4 Memory T                NK \n##  CAAACTCTTCGTAG.1  CAAACTCTTGGTGT.1  CAAACTCTTTACCT.1  CAAAGCACACACAC.1 \n##         CD14 Mono       T activated         CD14 Mono                NK \n##  CAAAGCACACACTG.1  CAAAGCACCGACAT.1  CAAAGCACCTACGA.1  CAAAGCACGAATGA.1 \n##         CD14 Mono       T activated       CD4 Naive T         CD14 Mono \n##  CAAAGCACTCTATC.1  CAAAGCTGCATTGG.1  CAAAGCTGCCTACC.1  CAAAGCTGTGAGGG.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  CAAATATGACGTGT.1  CAAATATGCGTAAC.1  CAAATTGAACACGT.1  CAAATTGACATTCT.1 \n##         CD14 Mono                 B       T activated         CD14 Mono \n##  CAAATTGACCCTCA.1  CAAATTGAGCGTAT.1  CAAATTGATATGCG.1  CAACAGACAGGAGC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono             CD8 T \n##  CAACAGACATACCG.1  CAACAGACCGCATA.1  CAACAGACGTACGT.1  CAACCAGAGGAAGC.1 \n##             CD8 T         CD14 Mono         CD14 Mono         CD14 Mono \n##  CAACCAGAGTGCAT.1  CAACCGCTCAGAAA.1  CAACCGCTCTGACA.1  CAACCGCTGACAGG.1 \n##      CD4 Memory T      CD4 Memory T                NK       CD4 Naive T \n##  CAACCGCTGTTTCT.1  CAACCGCTTCTGGA.1  CAACGAACCTCCCA.1  CAACGAACGTCACA.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono                NK \n##  CAACGAACTGTCAG.1  CAACGATGACGTTG.1  CAACGTGACGAGTT.1  CAACGTGAGACACT.1 \n##      CD4 Memory T                Mk         CD14 Mono                Mk \n##  CAACGTGAGCCTTC.1  CAACTTTGTAACCG.1  CAACTTTGTGGTCA.1  CAAGAAGAAGTCGT.1 \n##      CD4 Memory T                 B         CD14 Mono                 B \n##  CAAGAAGAAGTTCG.1  CAAGAAGACCAACA.1  CAAGAAGAGACGTT.1  CAAGAAGAGAGGAC.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono                 B \n##  CAAGAAGAGGAGTG.1  CAAGAAGAGTCACA.1  CAAGAAGATAGACC.1  CAAGAAGATCCTGC.1 \n##       T activated             CD8 T             CD8 T         CD14 Mono \n##  CAAGACACCTGGTA.1  CAAGACACGGGTGA.1  CAAGACACTCGTAG.1  CAAGACACTGCATG.1 \n##         CD14 Mono             CD8 T                DC      CD4 Memory T \n##  CAAGACTGAACGGG.1  CAAGACTGTGGAGG.1  CAAGACTGTTCGCC.1  CAAGCATGAAGCCT.1 \n##                NK       CD4 Naive T                 B         CD14 Mono \n##  CAAGCATGACGGGA.1  CAAGCATGCAGATC.1  CAAGCATGCTAGTG.1  CAAGCATGGGTAAA.1 \n##         CD14 Mono      CD4 Memory T      CD4 Memory T         CD14 Mono \n##  CAAGCATGGGTTAC.1  CAAGCATGGTTGCA.1  CAAGCATGTAGCGT.1  CAAGCATGTGTGAC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono       CD4 Naive T \n##  CAAGCCCTACAGCT.1  CAAGCCCTCAATCG.1  CAAGCCCTCTCGAA.1  CAAGCTGACTCCAC.1 \n##             CD8 T      CD4 Memory T         CD14 Mono                DC \n##  CAAGCTGAGAGAGC.1  CAAGCTGAGGTACT.1  CAAGCTGATTCTCA.1  CAAGGACTCCAACA.1 \n##      CD4 Memory T       T activated         CD14 Mono       CD4 Naive T \n##  CAAGGACTCCACAA.1  CAAGGACTCCTTGC.1  CAAGGACTCGTAGT.1  CAAGGACTTCCGTC.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T                 B \n##  CAAGGACTTTGCGA.1  CAAGGTTGAGTCAC.1  CAAGGTTGCCTTAT.1  CAAGGTTGGAGGAC.1 \n##         CD14 Mono       B Activated       T activated         CD16 Mono \n##  CAAGGTTGGTCTGA.1  CAAGGTTGTGAACC.1  CAAGGTTGTGACAC.1  CAAGTTCTACGACT.1 \n##         CD16 Mono      CD4 Memory T                 B         CD14 Mono \n##  CAAGTTCTACTCTT.1  CAAGTTCTAGTCTG.1  CAAGTTCTGCTTCC.1  CAAGTTCTGTCGTA.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T       CD4 Naive T \n##  CAAGTTCTTCCAGA.1  CAAGTTCTTCTTAC.1  CAATAAACGACAGG.1  CAATAAACGTACCA.1 \n##      CD4 Memory T       B Activated      CD4 Memory T       CD4 Naive T \n##  CAATAATGCCCTCA.1  CAATAATGCCGCTT.1  CAATAATGCGAATC.1  CAATAATGGAATCC.1 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono         CD14 Mono \n##  CAATAATGGTTGAC.1  CAATATGAAACGTC.1  CAATATGAAGCCAT.1  CAATATGATGAGGG.1 \n##       T activated                Mk       CD4 Naive T      CD4 Memory T \n##  CAATATGATGGAAA.1  CAATCGGAACCAAC.1  CAATCGGAGATAAG.1  CAATCGGATCGTTT.1 \n##         CD14 Mono       T activated       CD4 Naive T                NK \n##  CAATCGGATGGTGT.1  CAATCTACAGGTCT.1  CAATCTACATCGGT.1  CAATCTACCCAGTA.1 \n##      CD4 Memory T       CD4 Naive T       T activated       CD4 Naive T \n##  CAATCTACGGTCTA.1  CAATCTACGGTTAC.1  CAATGGACAAGAGT.1  CAATGGACCAGGAG.1 \n##               pDC         CD14 Mono      CD4 Memory T       CD4 Naive T \n##  CAATGGACCAGTTG.1  CAATGGACTCCAGA.1  CAATGGACTCTTAC.1  CAATTCACTGAGAA.1 \n##             CD8 T         CD16 Mono         CD14 Mono         CD14 Mono \n##  CAATTCTGAACCAC.1  CAATTCTGCCCTAC.1  CAATTCTGGTAGCT.1  CACAACGAACGACT.1 \n##       CD4 Naive T         CD14 Mono         CD16 Mono       B Activated \n##  CACAACGACCGTTC.1  CACAACGACCTCAC.1  CACAATCTCATCAG.1  CACAATCTGCCATA.1 \n##       B Activated         CD16 Mono         CD14 Mono         CD16 Mono \n##  CACAATCTTGAGGG.1  CACACCTGAGTCTG.1  CACACCTGCAGATC.1  CACACCTGCATACG.1 \n##                 B             CD8 T      CD4 Memory T         CD14 Mono \n##  CACACCTGTATCTC.1  CACACCTGTCCCAC.1  CACACCTGTGTCTT.1  CACAGAACACCATG.1 \n##         CD14 Mono               pDC       T activated      CD4 Memory T \n##  CACAGAACGCATCA.1  CACAGAACGGTACT.1  CACAGAACGTCCTC.1  CACAGATGAAGAGT.1 \n##               pDC       CD4 Naive T         CD14 Mono             CD8 T \n##  CACAGATGAGTGTC.1  CACAGATGGAGGTG.1  CACAGATGGCTGTA.1  CACAGCCTCTACGA.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T                NK \n##  CACAGCCTGTCACA.1  CACAGTGAACCATG.1  CACAGTGACCGCTT.1  CACAGTGACTTAGG.1 \n##       CD4 Naive T                Mk         CD14 Mono      CD4 Memory T \n##  CACAGTGAGGGTGA.1  CACAGTGATGTTCT.1  CACATACTAGCGTT.1  CACATACTATCTTC.1 \n##      CD4 Memory T         CD14 Mono                DC       CD4 Naive T \n##  CACATACTCATGCA.1  CACATACTCTGCTC.1  CACATACTTGTGGT.1  CACATGGACGGAGA.1 \n##         CD14 Mono                 B       CD4 Naive T         CD14 Mono \n##  CACATGGACTTTAC.1  CACATGGATCCTTA.1  CACCACTGACGTAC.1  CACCACTGCTACCC.1 \n##      CD4 Memory T       CD4 Naive T                NK       CD4 Naive T \n##  CACCACTGCTGGAT.1  CACCACTGGCTATG.1  CACCACTGGTAAAG.1  CACCACTGTAGAGA.1 \n##       CD4 Naive T      CD4 Memory T       B Activated         CD14 Mono \n##  CACCCATGACGTTG.1  CACCCATGGACACT.1  CACCCATGGTTTGG.1  CACCGGGACTGGAT.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono       B Activated \n##  CACCGGGAGACGTT.1  CACCGGGAGCGAGA.1  CACCGGGATCTTCA.1  CACCGTACACTCAG.1 \n##         CD14 Mono                 B      CD4 Memory T         CD14 Mono \n##  CACCGTACCCCGTT.1  CACCGTACCCTTAT.1  CACCGTACGGACGA.1  CACCGTACGGTTTG.1 \n##         CD16 Mono      CD4 Memory T       CD4 Naive T      CD4 Memory T \n##  CACCGTACTACTTC.1  CACCGTTGACTAGC.1  CACCGTTGCAGAAA.1  CACCGTTGCTGGTA.1 \n##                 B       CD4 Naive T      CD4 Memory T         CD14 Mono \n##  CACCGTTGGTTCGA.1  CACCGTTGTAGTCG.1  CACCGTTGTCGTAG.1  CACCTGACGACAGG.1 \n##         CD14 Mono         CD14 Mono         CD16 Mono                Mk \n##  CACCTGACGACGAG.1  CACCTGACGGGCAA.1  CACCTGACGTGTTG.1  CACCTGACTGACTG.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  CACCTGACTTGCTT.1  CACGAAACCGCAAT.1  CACGAAACCGTAGT.1  CACGAAACGCAGTT.1 \n##         CD16 Mono         CD14 Mono      CD4 Memory T         CD14 Mono \n##  CACGACCTACACGT.1  CACGACCTCGATAC.1  CACGATGAAACCAC.1  CACGATGACGTACA.1 \n##      CD4 Memory T                NK      CD4 Memory T         CD14 Mono \n##  CACGATGAGCAAGG.1  CACGATGAGCTACA.1  CACGATGATAACCG.1  CACGCTACCGTCTC.1 \n##       B Activated      CD4 Memory T         CD14 Mono                 B \n##  CACGCTACTAAGCC.1  CACGGGACCTAAGC.1  CACGGGACGAGACG.1  CACGGGACGCTGAT.1 \n##                DC             CD8 T                 B      CD4 Memory T \n##  CACGGGACGGATCT.1  CACGGGACTCGATG.1  CACGGGACTTCTCA.1  CACGGGTGGAACCT.1 \n##         CD14 Mono                 B                 B         CD14 Mono \n##  CACGGGTGTCGCAA.1  CACTAACTACACGT.1  CACTAACTCGCCTT.1  CACTAACTGTCGAT.1 \n##       B Activated             CD8 T                Mk       CD4 Naive T \n##  CACTAACTTGGGAG.1  CACTAACTTTGACG.1  CACTAGGAACACCA.1  CACTAGGACAACCA.1 \n##         CD14 Mono       CD4 Naive T         CD16 Mono         CD14 Mono \n##  CACTAGGAGTAAAG.1  CACTAGGATACGAC.1  CACTATACCAGAAA.1  CACTATACGTATCG.1 \n##         CD14 Mono       B Activated         CD14 Mono      CD4 Memory T \n##  CACTATACGTTACG.1  CACTATACTTCTCA.1  CACTCCGACATGAC.1  CACTCCGACCGTTC.1 \n##       B Activated             CD8 T                DC         CD14 Mono \n##  CACTCCGAGCCCTT.1  CACTCCGATTCAGG.1  CACTCTCTAGCACT.1  CACTCTCTAGCTAC.1 \n##             CD8 T         CD16 Mono         CD14 Mono         CD14 Mono \n##  CACTCTCTCGGTAT.1  CACTCTCTTGCAGT.1  CACTGAGACAGATC.1  CACTGAGACCCTTG.1 \n##      CD4 Memory T         CD14 Mono       CD4 Naive T                 B \n##  CACTGAGACTGTTT.1  CACTGAGAGGAACG.1  CACTGCACACAGCT.1  CACTGCACATCAGC.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono         CD14 Mono \n##  CACTGCACGTAGGG.1  CACTGCTGACCCTC.1  CACTGCTGCAGGAG.1  CACTGCTGCTGCTC.1 \n##         CD14 Mono      CD4 Memory T             CD8 T               pDC \n##  CACTGCTGGAATCC.1  CACTGCTGTCCAGA.1  CACTGCTGTGCAAC.1  CACTGCTGTGGTCA.1 \n##                NK       CD4 Naive T             CD8 T       CD4 Naive T \n##  CACTTAACAGAATG.1  CACTTAACATTCTC.1  CACTTAACCCGATA.1  CACTTATGCCCAAA.1 \n##                DC             CD8 T       CD4 Naive T         CD14 Mono \n##  CACTTATGGGACGA.1  CACTTATGTGCCTC.1  CACTTATGTGGTCA.1  CACTTTGAACTCAG.1 \n##                NK         CD14 Mono       T activated      CD4 Memory T \n##  CACTTTGAAGCTCA.1  CACTTTGACACTCC.1  CACTTTGAGAGCAG.1  CACTTTGATCTCTA.1 \n##         CD14 Mono                DC             CD8 T      CD4 Memory T \n##  CAGAAGCTCACTTT.1  CAGAAGCTGCGAAG.1  CAGACAACAACTGC.1  CAGACAACCGCCTT.1 \n##       T activated       CD4 Naive T       CD4 Naive T                DC \n##  CAGACAACCGTACA.1  CAGACAACCTCAGA.1  CAGACATGAACGTC.1  CAGACATGACTACG.1 \n##         CD14 Mono       B Activated      CD4 Memory T         CD16 Mono \n##  CAGACATGCATTGG.1  CAGACATGCCCACT.1  CAGACATGCTCGCT.1  CAGACCCTGAAACA.1 \n##         CD14 Mono      CD4 Memory T      CD4 Memory T         CD14 Mono \n##  CAGACTGAAAGGTA.1  CAGACTGACAATCG.1  CAGACTGACAGAAA.1  CAGACTGAGGCATT.1 \n##                DC             CD8 T         CD16 Mono         CD14 Mono \n##  CAGACTGATAGCGT.1  CAGAGGGAAAAGTG.1  CAGAGGGAACTAGC.1  CAGAGGGAGACACT.1 \n##       CD4 Naive T      CD4 Memory T      CD4 Memory T         CD14 Mono \n##  CAGAGGGAGCTGAT.1  CAGATGACAGAACA.1  CAGATGACAGAATG.1  CAGATGACAGTGTC.1 \n##       T activated       CD4 Naive T         CD14 Mono         CD14 Mono \n##  CAGATGACCCTCGT.1  CAGATGACCGAGTT.1  CAGATGACGAGGAC.1  CAGATGACGGGCAA.1 \n##                DC         CD16 Mono         CD14 Mono         CD14 Mono \n##  CAGCAATGACTAGC.1  CAGCAATGCGTAGT.1  CAGCAATGGCCATA.1  CAGCAATGGGTACT.1 \n##                 B                NK       CD4 Naive T       CD4 Naive T \n##  CAGCAATGGTCACA.1  CAGCACCTCCTACC.1  CAGCACCTCTTGCC.1  CAGCATGAACCCAA.1 \n##       T activated                NK             CD8 T         CD14 Mono \n##  CAGCATGAGTTTGG.1  CAGCATGATATCTC.1  CAGCATGATGTCAG.1  CAGCCTACGAGGAC.1 \n##             CD8 T                Mk         CD14 Mono             CD8 T \n##  CAGCCTACTCTCGC.1  CAGCCTTGACACGT.1  CAGCCTTGCTGAGT.1  CAGCCTTGTGCAAC.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono         CD14 Mono \n##  CAGCCTTGTTGCGA.1  CAGCGGACAGCGTT.1  CAGCGGACCACAAC.1  CAGCGGACCCAGTA.1 \n##      CD4 Memory T         CD16 Mono       CD4 Naive T       CD4 Naive T \n##  CAGCGGACTTATCC.1  CAGCGGACTTTGCT.1  CAGCGTCTAACGGG.1  CAGCGTCTATGTCG.1 \n##       B Activated      CD4 Memory T         CD14 Mono         CD14 Mono \n##  CAGCGTCTATGTGC.1  CAGCGTCTGTTCTT.1  CAGCGTCTTCGTGA.1  CAGCTAGACCGAAT.1 \n##       CD4 Naive T         CD14 Mono             CD8 T         CD14 Mono \n##  CAGCTCACGGTACT.1  CAGCTCACTGAGGG.1  CAGCTCACTTCCCG.1  CAGCTCTGAGGTCT.1 \n##       T activated         CD14 Mono      CD4 Memory T         CD16 Mono \n##  CAGGAACTCCACAA.1  CAGGAACTCTTTAC.1  CAGGAACTGACGTT.1  CAGGCCGAAAGATG.1 \n##         CD14 Mono         CD14 Mono             CD8 T             CD8 T \n##  CAGGCCGAGAGGTG.1  CAGGCCGAGTCGAT.1  CAGGGCACACGCAT.1  CAGGGCACCTTGAG.1 \n##         CD14 Mono      CD4 Memory T       CD4 Naive T       CD4 Naive T \n##  CAGGGCACGCGAAG.1  CAGGGCACTCTGGA.1  CAGGTAACGCCCTT.1  CAGGTAACGTTCAG.1 \n##       T activated               pDC                Mk         CD14 Mono \n##  CAGGTATGCCAATG.1  CAGGTATGCCCTTG.1  CAGGTATGCTTCGC.1  CAGGTATGGAATGA.1 \n##       CD4 Naive T                 B         CD14 Mono         CD14 Mono \n##  CAGGTTGAAACAGA.1  CAGGTTGACTCGCT.1  CAGGTTGAGAGAGC.1  CAGGTTGAGGGATG.1 \n##             CD8 T      CD4 Memory T         CD14 Mono       CD4 Naive T \n##  CAGGTTGAGTATGC.1  CAGTCAGAAGGCGA.1  CAGTCAGACATGGT.1  CAGTCAGAGTTAGC.1 \n##         CD16 Mono         CD14 Mono         CD14 Mono      CD4 Memory T \n##  CAGTGATGAGCAAA.1  CAGTGATGCCTCCA.1  CAGTGATGCTATTC.1  CAGTGATGGGTCAT.1 \n##       CD4 Naive T                DC             Eryth         CD14 Mono \n##  CAGTGATGGTATCG.1  CAGTGTGAATTCTC.1  CAGTGTGACCTCCA.1  CAGTGTGACTGCTC.1 \n##       CD4 Naive T         CD16 Mono             CD8 T       CD4 Naive T \n##  CAGTGTGATCAGGT.1  CAGTGTGATGTGCA.1  CAGTGTGATTTGGG.1  CAGTTACTCCCACT.1 \n##             CD8 T                DC             CD8 T             CD8 T \n##  CAGTTACTTGAACC.1  CAGTTACTTGCCCT.1  CAGTTACTTTCGTT.1  CAGTTGGAACGACT.1 \n##         CD14 Mono                NK       CD4 Naive T       T activated \n##  CAGTTGGAAGTCGT.1  CAGTTGGACGGGAA.1  CAGTTGGAGGAGCA.1  CAGTTGGATTCCCG.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD16 Mono \n##  CAGTTTACCCAGTA.1  CAGTTTACGTTCGA.1  CAGTTTACTATCTC.1  CATAAAACACCCTC.1 \n##         CD14 Mono       B Activated         CD14 Mono         CD14 Mono \n##  CATAAAACAGAGAT.1  CATAAAACGTCCTC.1  CATAAAACTGAGAA.1  CATAAATGCAAGCT.1 \n##         CD14 Mono             CD8 T         CD14 Mono         CD14 Mono \n##  CATAAATGCCTTAT.1  CATAAATGGGTCTA.1  CATAACCTACCTAG.1  CATAACCTGGTAGG.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono       CD4 Naive T \n##  CATAACCTGTTCAG.1  CATAACCTTAACGC.1  CATACTACCCGAAT.1  CATACTACCTATGG.1 \n##             CD8 T         CD14 Mono       CD4 Naive T                 B \n##  CATACTACTGTGCA.1  CATACTTGACTACG.1  CATACTTGGGGTGA.1  CATACTTGGGTAGG.1 \n##         CD14 Mono      CD4 Memory T      CD4 Memory T                NK \n##  CATACTTGTGCCAA.1  CATAGTCTACACTG.1  CATAGTCTCCCTTG.1  CATAGTCTCTGTTT.1 \n##      CD4 Memory T         CD14 Mono      CD4 Memory T         CD14 Mono \n##  CATAGTCTGGAACG.1  CATAGTCTTAGCCA.1  CATATAGAATCGTG.1  CATATAGACCTGTC.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono       CD4 Naive T \n##  CATATAGAGTACGT.1  CATATAGATAAGCC.1  CATATAGATATCTC.1  CATATAGATCTTTG.1 \n##                NK      CD4 Memory T       T activated         CD14 Mono \n##  CATATAGATGTCCC.1  CATCAACTACTACG.1  CATCAACTGCCCTT.1  CATCAACTTAACGC.1 \n##      CD4 Memory T                Mk               pDC       CD4 Naive T \n##  CATCAACTTAGACC.1  CATCAACTTTCAGG.1  CATCAACTTTCCAT.1  CATCAACTTTCCCG.1 \n##                DC       CD4 Naive T         CD14 Mono       CD4 Naive T \n##  CATCAGGAGCGGAA.1  CATCAGGAGGGACA.1  CATCAGGAGGTGTT.1  CATCAGGAGTCCTC.1 \n##         CD16 Mono                 B       CD4 Naive T                 B \n##  CATCAGGATGCTGA.1  CATCAGGATTGACG.1  CATCATACCCTGTC.1  CATCATACCGTCTC.1 \n##         CD14 Mono                DC         CD14 Mono      CD4 Memory T \n##  CATCATACTCAGAC.1  CATCATACTGTGCA.1  CATCCCGATCATTC.1  CATCGGCTATGTGC.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  CATCGGCTGCATCA.1  CATCGGCTTCGATG.1  CATCTCCTAGTCTG.1  CATCTCCTCTATGG.1 \n##                 B      CD4 Memory T         CD16 Mono      CD4 Memory T \n##  CATCTCCTTGAGAA.1  CATCTCCTTTGGCA.1  CATCTCCTTTTACC.1  CATCTTGAAGCACT.1 \n##                NK         CD14 Mono         CD14 Mono         CD14 Mono \n##  CATCTTGAGCTAAC.1  CATCTTGATTTGCT.1  CATGAGACAGGTCT.1  CATGAGACATGCTG.1 \n##                Mk         CD14 Mono         CD14 Mono             CD8 T \n##  CATGAGACCTATTC.1  CATGAGACCTCTCG.1  CATGCCACTCATTC.1  CATGCGCTCCTTCG.1 \n##                NK       T activated       CD4 Naive T                 B \n##  CATGCGCTCTGAAC.1  CATGCGCTGGTTTG.1  CATGCGCTTTGTCT.1  CATGGCCTCCCTTG.1 \n##      CD4 Memory T             CD8 T       T activated      CD4 Memory T \n##  CATGGCCTTAGAAG.1  CATGGCCTTCCAAG.1  CATGGCCTTGTCTT.1  CATGGCCTTTCTAC.1 \n##         CD14 Mono                 B      CD4 Memory T       T activated \n##  CATGTACTCAAGCT.1  CATGTACTCAATCG.1  CATGTACTGATAAG.1  CATGTACTGGAGTG.1 \n##         CD14 Mono         CD14 Mono         CD16 Mono       CD4 Naive T \n##  CATGTACTTCAGTG.1  CATGTTACATCGGT.1  CATGTTACCATGGT.1  CATGTTACCGTGAT.1 \n##       CD4 Naive T         CD14 Mono      CD4 Memory T       CD4 Naive T \n##  CATGTTACGCAGTT.1  CATGTTACGTTTCT.1  CATGTTACTGTCTT.1  CATGTTTGAAAACG.1 \n##         CD16 Mono         CD14 Mono                DC         CD14 Mono \n##  CATGTTTGCCTGAA.1  CATGTTTGCGAGAG.1  CATGTTTGGATAGA.1  CATTACACCGAGAG.1 \n##         CD14 Mono      CD4 Memory T       CD4 Naive T                NK \n##  CATTACACTCTTAC.1  CATTAGCTATTCCT.1  CATTAGCTCTTTAC.1  CATTAGCTGGGATG.1 \n##       B Activated         CD14 Mono         CD16 Mono         CD14 Mono \n##  CATTCCCTAAGTAG.1  CATTCCCTAGTGCT.1  CATTCCCTATTGGC.1  CATTCCCTCCTTAT.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono      CD4 Memory T \n##  CATTCCCTGTTCTT.1  CATTGACTGCGATT.1  CATTGACTTATGGC.1  CATTGGGAGGGATG.1 \n##         CD14 Mono         CD14 Mono                NK       CD4 Naive T \n##  CATTGGGATGTCAG.1  CATTGTACAACGTC.1  CATTGTACACTGTG.1  CATTGTTGAACAGA.1 \n##       CD4 Naive T         CD14 Mono             CD8 T       CD4 Naive T \n##  CATTGTTGCAACTG.1  CATTGTTGGGGAGT.1  CATTGTTGGGTATC.1  CATTGTTGTACGAC.1 \n##                Mk                NK       CD4 Naive T       CD4 Naive T \n##  CATTGTTGTGTGCA.1  CATTTCGAACCACA.1  CATTTCGAACCTCC.1  CATTTCGACACTGA.1 \n##         CD14 Mono                 B             CD8 T         CD14 Mono \n##  CATTTCGATTAGGC.1  CATTTGACACTTTC.1  CATTTGACGTTCAG.1  CATTTGTGGAGCAG.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono      CD4 Memory T \n##  CATTTGTGGATGAA.1  CATTTGTGGGTCTA.1  CATTTGTGTGTCAG.1  CATTTGTGTTATCC.1 \n##       CD4 Naive T       CD4 Naive T             CD8 T                 B \n##  CCAAAGTGATCAGC.1  CCAAAGTGATCGGT.1  CCAACCTGAGGCGA.1  CCAACCTGATGTCG.1 \n##         CD16 Mono         CD14 Mono       CD4 Naive T         CD14 Mono \n##  CCAACCTGGAAGGC.1  CCAACCTGTACGAC.1  CCAACCTGTGCCAA.1  CCAAGAACCACTTT.1 \n##                 B         CD14 Mono       CD4 Naive T         CD14 Mono \n##  CCAAGAACCTAGCA.1  CCAAGAACGGTTAC.1  CCAAGAACGTACAC.1  CCAAGAACGTGCAT.1 \n##       CD4 Naive T       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  CCAAGAACTGACCA.1  CCAAGAACTGTCCC.1  CCAAGATGAGTCAC.1  CCAAGATGCGACAT.1 \n##                DC       T activated       T activated         CD14 Mono \n##  CCAAGATGTCAGGT.1  CCAAGATGTGTCGA.1  CCAAGATGTGTGAC.1  CCAAGTGAAGCTCA.1 \n##         CD14 Mono      CD4 Memory T      CD4 Memory T      CD4 Memory T \n##  CCAAGTGACACTGA.1  CCAAGTGAGCTTAG.1  CCAAGTGATAACGC.1  CCAAGTGATACGAC.1 \n##       CD4 Naive T         CD14 Mono               pDC         CD14 Mono \n##  CCAAGTGATCCGTC.1  CCAATGGATGCATG.1  CCAATTTGAGATCC.1  CCAATTTGCAGGAG.1 \n##         CD14 Mono         CD14 Mono       T activated       CD4 Naive T \n##  CCAATTTGCCTACC.1  CCAATTTGGTTAGC.1  CCAATTTGTCTCAT.1  CCAATTTGTGGAAA.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T         CD14 Mono \n##  CCACCATGCAGTCA.1  CCACCATGGCCATA.1  CCACCTGACCGTAA.1  CCACCTGACGAGAG.1 \n##             CD8 T         CD14 Mono       CD4 Naive T       T activated \n##  CCACCTGATAGTCG.1  CCACGGGAACGGGA.1  CCACGGGAGGGAGT.1  CCACTGACGACAGG.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T                NK \n##  CCACTGACTGTCCC.1  CCACTGTGACTGTG.1  CCACTGTGATGCTG.1  CCACTGTGCGTCTC.1 \n##       T activated             CD8 T         CD14 Mono      CD4 Memory T \n##  CCACTGTGCGTGTA.1  CCACTGTGCTTCTA.1  CCACTGTGGACGAG.1  CCACTGTGGCTAAC.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono         CD14 Mono \n##  CCACTTCTAACGTC.1  CCACTTCTCACTGA.1  CCACTTCTCTCGCT.1  CCACTTCTCTTGCC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono      CD4 Memory T \n##  CCAGAAACCTTCGC.1  CCAGAAACTAGAAG.1  CCAGACCTCTATGG.1  CCAGATGATGACCA.1 \n##       T activated      CD4 Memory T       CD4 Naive T                NK \n##  CCAGCACTAGAGTA.1  CCAGCACTGCATAC.1  CCAGCGGACTTCGC.1  CCAGCGGAGAGGCA.1 \n##       CD4 Naive T                DC                 B      CD4 Memory T \n##  CCAGCGGATCTTAC.1  CCAGCGGATTATCC.1  CCAGCGGATTCTCA.1  CCAGCGGATTTACC.1 \n##         CD14 Mono         CD14 Mono       B Activated         CD14 Mono \n##  CCAGCTACAACGGG.1  CCAGCTACCAATCG.1  CCAGCTACCAGTCA.1  CCAGCTACCCGTTC.1 \n##      CD4 Memory T      CD4 Memory T       CD4 Naive T       B Activated \n##  CCAGGTCTCGTAGT.1  CCAGGTCTGACGAG.1  CCAGTCTGACAGTC.1  CCAGTCTGTCTTCA.1 \n##             CD8 T                NK                 B      CD4 Memory T \n##  CCAGTGCTGGCATT.1  CCAGTGCTGGGCAA.1  CCAGTGCTGTCTAG.1  CCAGTGCTTAACCG.1 \n##         CD16 Mono       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  CCATAGGACCTATT.1  CCATAGGAGGTAAA.1  CCATATACAAGATG.1  CCATATACACACTG.1 \n##         CD14 Mono                 B         CD14 Mono       T activated \n##  CCATATACGATGAA.1  CCATATACTGGTGT.1  CCATATACTTTACC.1  CCATCCGAACTTTC.1 \n##       CD4 Naive T         CD16 Mono         CD14 Mono       T activated \n##  CCATCCGAGGTTTG.1  CCATCCGAGTGCTA.1  CCATCCGATTCTAC.1  CCATCGTGAAGCCT.1 \n##      CD4 Memory T       CD4 Naive T      CD4 Memory T         CD14 Mono \n##  CCATCGTGACCCTC.1  CCATCGTGCTGGAT.1  CCATCGTGGACGAG.1  CCATCGTGTCGCAA.1 \n##             CD8 T      CD4 Memory T                NK       CD4 Naive T \n##  CCATGCTGAAACGA.1  CCATGCTGCCAAGT.1  CCATGCTGCTAAGC.1  CCATGCTGGAGATA.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono       T activated \n##  CCATGCTGGGATCT.1  CCATGCTGTCACGA.1  CCATTAACGTGAGG.1  CCCAAAGAATCACG.1 \n##             CD8 T      CD4 Memory T      CD4 Memory T             CD8 T \n##  CCCAAAGAGTCCTC.1  CCCAACACAGTAGA.1  CCCAACACCAAGCT.1  CCCAACACTCCGTC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono               pDC \n##  CCCAACACTGAGGG.1  CCCAACACTGATGC.1  CCCAACTGCCTACC.1  CCCAACTGGATACC.1 \n##             CD8 T         CD16 Mono             CD8 T         CD14 Mono \n##  CCCAACTGGCCATA.1  CCCAACTGGTGTAC.1  CCCAACTGGTTGAC.1  CCCACATGCTTTAC.1 \n##       T activated       CD4 Naive T                 B                 B \n##  CCCACATGGGTGGA.1  CCCAGACTAAACGA.1  CCCAGACTCCAAGT.1  CCCAGACTTCCCAC.1 \n##         CD14 Mono       T activated         CD14 Mono         CD16 Mono \n##  CCCAGACTTCCTAT.1  CCCAGTTGACAGTC.1  CCCAGTTGTCGTTT.1  CCCAGTTGTTTCTG.1 \n##         CD16 Mono         CD16 Mono       T activated                 B \n##  CCCATCGACCCGTT.1  CCCATCGAGAGGGT.1  CCCATCGAGTAAAG.1  CCCATGTGACGTTG.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  CCCATGTGCCGAAT.1  CCCATGTGCCTCAC.1  CCCATGTGCGTAAC.1  CCCATGTGCTTGGA.1 \n##       CD4 Naive T      CD4 Memory T       CD4 Naive T                DC \n##  CCCATGTGTGACCA.1  CCCATGTGTGCACA.1  CCCGAACTACCAAC.1  CCCGAACTTAGCGT.1 \n##       T activated                 B                NK         CD14 Mono \n##  CCCGAACTTCCCAC.1  CCCGATTGAAGAGT.1  CCCGATTGAGCGGA.1  CCCGATTGCCCGTT.1 \n##       CD4 Naive T         CD14 Mono                NK       CD4 Naive T \n##  CCCGATTGCTGATG.1  CCCGATTGCTTACT.1  CCCGATTGCTTATC.1  CCCGGAGACAACCA.1 \n##                 B                 B                DC         CD14 Mono \n##  CCCGGAGACTTGCC.1  CCCGGAGAGGGAGT.1  CCCGGAGAGGTTCA.1  CCCGGAGATACTTC.1 \n##       CD4 Naive T         CD14 Mono      CD4 Memory T         CD14 Mono \n##  CCCGGAGATCTTAC.1  CCCTACGACATTCT.1  CCCTACGACTGAAC.1  CCCTACGATTCGGA.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono                NK \n##  CCCTAGTGCAACCA.1  CCCTAGTGCAGGAG.1  CCCTAGTGTTCTCA.1  CCCTCAGAACCACA.1 \n##                DC       CD4 Naive T         CD14 Mono         CD14 Mono \n##  CCCTCAGAGAGGCA.1  CCCTGAACAATCGC.1  CCCTGAACACTGTG.1  CCCTGAACATTTCC.1 \n##             CD8 T      CD4 Memory T         CD14 Mono         CD16 Mono \n##  CCCTGATGCTGAGT.1  CCCTGATGGAACCT.1  CCCTGATGGAGACG.1  CCCTGATGGGTCAT.1 \n##         CD16 Mono       T activated         CD14 Mono             CD8 T \n##  CCCTGATGTGCAGT.1  CCCTTACTACCAAC.1  CCCTTACTCATTGG.1  CCCTTACTCGTGTA.1 \n##                NK      CD4 Memory T         CD14 Mono                 B \n##  CCCTTACTCTCGAA.1  CCCTTACTGACGAG.1  CCGAAAACATACCG.1  CCGAAAACCAGAAA.1 \n##                 B       CD4 Naive T       CD4 Naive T      CD4 Memory T \n##  CCGAAAACCGATAC.1  CCGAAAACTTTGCT.1  CCGACACTGAGAGC.1  CCGACACTGGACAG.1 \n##      CD4 Memory T         CD16 Mono      CD4 Memory T         CD16 Mono \n##  CCGACACTTGACCA.1  CCGACTACTTTACC.1  CCGATAGACTTGTT.1  CCGATAGAGCGGAA.1 \n##       T activated         CD16 Mono       CD4 Naive T      CD4 Memory T \n##  CCGATAGAGGTCAT.1  CCGCGAGAACGCAT.1  CCGCGAGAGCAGAG.1  CCGCGAGATCTCGC.1 \n##         CD16 Mono      CD4 Memory T         CD14 Mono                NK \n##  CCGCGAGATGCATG.1  CCGCTATGCAGCTA.1  CCGCTATGCCCACT.1  CCGCTATGGGGTGA.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono                Mk \n##  CCGCTATGGTCACA.1  CCGGAGACTAGTCG.1  CCGGAGACTCTACT.1  CCGGAGTGCCGTAA.1 \n##             CD8 T         CD14 Mono       CD4 Naive T         CD14 Mono \n##  CCGGAGTGCCTCCA.1  CCGGAGTGCTGCAA.1  CCGGAGTGCTTGGA.1  CCGGAGTGTATGGC.1 \n##      CD4 Memory T                DC       T activated       CD4 Naive T \n##  CCGGAGTGTGCCTC.1  CCGGTACTAGGAGC.1  CCGGTACTCTGATG.1  CCGGTACTTCTCTA.1 \n##      CD4 Memory T      CD4 Memory T      CD4 Memory T       CD4 Naive T \n##  CCGTAAGACAGGAG.1  CCGTAAGACATGAC.1  CCGTACACCTCCAC.1  CCGTACACCTTGGA.1 \n##         CD14 Mono                DC       CD4 Naive T                DC \n##  CCGTACACTATGCG.1  CCTAAACTCCTTCG.1  CCTAAACTGTGTAC.1  CCTAAACTTCAGGT.1 \n##             CD8 T         CD14 Mono       CD4 Naive T         CD14 Mono \n##  CCTAAACTTCCGTC.1  CCTAAGGAAACTGC.1  CCTAAGGAAAGGGC.1  CCTAAGGAGGATCT.1 \n##         CD14 Mono         CD14 Mono                Mk                DC \n##  CCTAAGGATGTCAG.1  CCTAAGGATTACCT.1  CCTACCGAAAGAGT.1  CCTACCGAAGTCTG.1 \n##         CD14 Mono                NK         CD14 Mono       CD4 Naive T \n##  CCTACCGACATGAC.1  CCTACCGACGTACA.1  CCTACCGAGACACT.1  CCTACCGAGCGTTA.1 \n##         CD14 Mono             CD8 T       CD4 Naive T             CD8 T \n##  CCTACCGAGGTTTG.1  CCTACCGATCGACA.1  CCTACCGATTACCT.1  CCTACCGATTGGCA.1 \n##                DC                Mk      CD4 Memory T       CD4 Naive T \n##  CCTACCGATTTCTG.1  CCTAGAGAAGTTCG.1  CCTAGAGACGACAT.1  CCTAGAGAGCGTTA.1 \n##                 B      CD4 Memory T                DC                 B \n##  CCTAGAGATACGCA.1  CCTAGAGATGTCTT.1  CCTATAACCTCAGA.1  CCTATAACGGCAAG.1 \n##         CD14 Mono                NK         CD14 Mono         CD14 Mono \n##  CCTATTGAACCAAC.1  CCTATTGACCCTAC.1  CCTATTGACCTACC.1  CCTATTGATCCTCG.1 \n##         CD14 Mono                DC             CD8 T         CD14 Mono \n##  CCTCATCTCACTGA.1  CCTCATCTCCGCTT.1  CCTCGAACCCCACT.1  CCTCGAACGTAAAG.1 \n##      CD4 Memory T         CD14 Mono         CD16 Mono             CD8 T \n##  CCTCTACTAGATCC.1  CCTCTACTGGAAGC.1  CCTGACTGACGGGA.1  CCTGACTGCTCTTA.1 \n##         CD16 Mono         CD14 Mono         CD14 Mono      CD4 Memory T \n##  CCTGACTGGTCACA.1  CCTGACTGTAAGGA.1  CCTGAGCTACACTG.1  CCTGAGCTACAGTC.1 \n##         CD14 Mono                NK         CD14 Mono       CD4 Naive T \n##  CCTGAGCTGTCAAC.1  CCTGCAACCACTAG.1  CCTGCAACCTCAGA.1  CCTGCAACTAAGGA.1 \n##         CD14 Mono                DC       CD4 Naive T                NK \n##  CCTGCAACTCATTC.1  CCTGCAACTCGCCT.1  CCTGCAACTTTGGG.1  CCTGGACTCGTAAC.1 \n##      CD4 Memory T      CD4 Memory T         CD14 Mono         CD14 Mono \n##  CCTGGACTCTAAGC.1  CCTTAATGAAGGTA.1  CCTTAATGCTCGAA.1  CCTTAATGGACGTT.1 \n##      CD4 Memory T      CD4 Memory T      CD4 Memory T             CD8 T \n##  CCTTAATGGATGAA.1  CCTTAATGGGGTGA.1  CCTTAATGTCCGAA.1  CCTTAATGTCGATG.1 \n##                NK                 B                NK         CD14 Mono \n##  CCTTAATGTGCATG.1  CCTTCACTTGTCTT.1  CCTTTAGACACTGA.1  CCTTTAGACCATGA.1 \n##                Mk         CD14 Mono      CD4 Memory T      CD4 Memory T \n##  CCTTTAGACTACGA.1  CCTTTAGAGAAACA.1  CCTTTAGAGGTATC.1  CCTTTAGAGTGTTG.1 \n##                DC         CD14 Mono                DC       T activated \n##  CCTTTAGATAGAAG.1  CCTTTAGATCAGTG.1  CCTTTAGATGCCTC.1  CCTTTAGATGGAAA.1 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono         CD14 Mono \n##  CGAACATGAATCGC.1  CGAAGACTACGGAG.1  CGAAGACTATCGTG.1  CGAAGACTCCTCGT.1 \n##         CD14 Mono                 B         CD14 Mono         CD14 Mono \n##  CGAAGACTGTAAAG.1  CGAAGACTTACGAC.1  CGAAGGGAAAGATG.1  CGAAGGGAACTCTT.1 \n##                NK         CD14 Mono         CD16 Mono      CD4 Memory T \n##  CGAAGGGAAGAGGC.1  CGAAGGGACTGAGT.1  CGAAGTACAAACGA.1  CGAAGTACAACCGT.1 \n##             CD8 T         CD14 Mono         CD14 Mono                NK \n##  CGAAGTACAAGCAA.1  CGAAGTACACCTCC.1  CGAAGTACAGCCAT.1  CGAAGTACCGTAGT.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono       CD4 Naive T \n##  CGAAGTACGGAAAT.1  CGAAGTACGGTGTT.1  CGAAGTACTAGAAG.1  CGAAGTACTTTACC.1 \n##         CD16 Mono      CD4 Memory T         CD16 Mono                NK \n##  CGAATCGAGCAGAG.1  CGAATCGATGTCAG.1  CGACAAACAGCAAA.1  CGACAAACAGTCTG.1 \n##      CD4 Memory T         CD14 Mono       T activated         CD16 Mono \n##  CGACAAACATACCG.1  CGACAAACATCAGC.1  CGACAAACATGTGC.1  CGACAAACCCCAAA.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  CGACAAACGATGAA.1  CGACAAACGTACGT.1  CGACAAACTGTAGC.1  CGACCACTAATCGC.1 \n##                NK                DC         CD14 Mono                 B \n##  CGACCACTGTTCAG.1  CGACCACTTTCCCG.1  CGACCGGACGTCTC.1  CGACCGGAGAATCC.1 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono         CD16 Mono \n##  CGACCGGAGCAGTT.1  CGACCGGATATTCC.1  CGACCGGATCGCTC.1  CGACCGGATCTACT.1 \n##         CD16 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  CGACCTACCCCTAC.1  CGACCTACCTATGG.1  CGACCTACGCAGAG.1  CGACCTACGCGATT.1 \n##       CD4 Naive T                NK         CD14 Mono         CD16 Mono \n##  CGACCTACGGTCAT.1  CGACCTACTCACGA.1  CGACCTTGACCGAT.1  CGACCTTGCAGTTG.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono                NK \n##  CGACCTTGCCAGTA.1  CGACCTTGGTAAAG.1  CGACCTTGTACTGG.1  CGACCTTGTCCAAG.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono         CD14 Mono \n##  CGACGTCTCAGCTA.1  CGACGTCTGTGCAT.1  CGACTCACAACGGG.1  CGACTCACACCAGT.1 \n##                 B         CD14 Mono         CD14 Mono         CD16 Mono \n##  CGACTCACACGTTG.1  CGACTCACCTGGAT.1  CGACTCACGAAACA.1  CGACTCACGTAAAG.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono       CD4 Naive T \n##  CGACTCACTGGTGT.1  CGACTCTGACGTTG.1  CGACTCTGATGTGC.1  CGACTCTGCAGGAG.1 \n##             CD8 T         CD14 Mono         CD16 Mono       B Activated \n##  CGACTCTGCCAAGT.1  CGACTCTGCTAGAC.1  CGACTCTGGCGTAT.1  CGACTCTGGTTTCT.1 \n##         CD14 Mono                DC         CD14 Mono         CD14 Mono \n##  CGACTCTGTATCTC.1  CGACTCTGTCACCC.1  CGACTCTGTCGTGA.1  CGACTCTGTCTTCA.1 \n##             CD8 T         CD14 Mono         CD14 Mono         CD14 Mono \n##  CGACTGCTAGTACC.1  CGACTGCTCGTCTC.1  CGACTGCTGTATGC.1  CGACTGCTGTTGAC.1 \n##         CD14 Mono             CD8 T         CD14 Mono       B Activated \n##  CGACTGCTTGTCGA.1  CGAGATTGGAATCC.1  CGAGATTGTATCTC.1  CGAGCCGACCCAAA.1 \n##         CD14 Mono       CD4 Naive T                 B                Mk \n##  CGAGCCGACCTCCA.1  CGAGCCGAGAAAGT.1  CGAGCGTGGCATAC.1  CGAGCGTGGGTGGA.1 \n##         CD14 Mono                 B         CD14 Mono         CD14 Mono \n##  CGAGCGTGTGCTGA.1  CGAGGAGAATCACG.1  CGAGGAGACCAATG.1  CGAGGAGACTCAGA.1 \n##                NK       B Activated                 B       CD4 Naive T \n##  CGAGGAGAGGAAGC.1  CGAGGAGAGGAGGT.1  CGAGGAGATTACCT.1  CGAGGAGATTCTGT.1 \n##      CD4 Memory T         CD14 Mono       T activated         CD14 Mono \n##  CGAGGCACAAGAAC.1  CGAGGCACAGTCGT.1  CGAGGCACGAAACA.1  CGAGGCACGTCCTC.1 \n##       CD4 Naive T         CD16 Mono       B Activated         CD14 Mono \n##  CGAGGCACTTTGTC.1  CGAGGCTGACACAC.1  CGAGGCTGATTTCC.1  CGAGGCTGCTTCCG.1 \n##      CD4 Memory T         CD14 Mono                Mk      CD4 Memory T \n##  CGAGGCTGGAAAGT.1  CGAGGCTGGATAGA.1  CGAGGCTGGGACAG.1  CGAGTATGACCTCC.1 \n##               pDC       CD4 Naive T             CD8 T                NK \n##  CGAGTATGATCGAC.1  CGAGTATGATTTCC.1  CGAGTATGCTATTC.1  CGAGTATGGCTCCT.1 \n##             CD8 T       T activated         CD14 Mono      CD4 Memory T \n##  CGAGTATGTCCGTC.1  CGATACGAAGAGAT.1  CGATACGATCCGAA.1  CGATAGACACCTGA.1 \n##      CD4 Memory T       CD4 Naive T                 B         CD16 Mono \n##  CGATAGACCAAAGA.1  CGATAGACGAGGAC.1  CGATAGACGGTGGA.1  CGATCAGATGGAAA.1 \n##                NK         CD14 Mono         CD14 Mono       CD4 Naive T \n##  CGATCAGATTCGGA.1  CGATCCACACAGCT.1  CGATCCACCACTGA.1  CGATCCACTCTCGC.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T         CD14 Mono \n##  CGATCCACTTGTGG.1  CGCAAATGAACCTG.1  CGCAAATGACGGTT.1  CGCAAATGCCCTAC.1 \n##      CD4 Memory T                NK       CD4 Naive T         CD14 Mono \n##  CGCAAATGTGATGC.1  CGCAACCTCCACCT.1  CGCAACCTCCTATT.1  CGCAACCTCTGGAT.1 \n##         CD14 Mono         CD16 Mono       CD4 Naive T      CD4 Memory T \n##  CGCAACCTTGCCTC.1  CGCAACCTTGTCGA.1  CGCACGGACACAAC.1  CGCACGGACTATGG.1 \n##      CD4 Memory T         CD16 Mono                DC         CD14 Mono \n##  CGCACGGAGCTGTA.1  CGCACTACCTAGCA.1  CGCACTACTACGCA.1  CGCACTACTCGCAA.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T       B Activated \n##  CGCACTACTCTAGG.1  CGCACTTGAAGCAA.1  CGCACTTGTCCTGC.1  CGCAGGACAGTTCG.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  CGCAGGACCATGGT.1  CGCAGGACGCATAC.1  CGCAGGTGACGCAT.1  CGCAGGTGCACACA.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD16 Mono \n##  CGCATAGAAGTCGT.1  CGCATAGAGATGAA.1  CGCATAGAGCGTTA.1  CGCATAGATCCGTC.1 \n##       CD4 Naive T         CD14 Mono         CD16 Mono         CD14 Mono \n##  CGCATAGATGCACA.1  CGCCATACATTCTC.1  CGCCATACCCATAG.1  CGCCATACCGAGTT.1 \n##         CD14 Mono                 B             CD8 T                NK \n##  CGCCATACGCGTTA.1  CGCCATACGCTTAG.1  CGCCATTGATAAGG.1  CGCCATTGCACCAA.1 \n##                 B         CD16 Mono      CD4 Memory T      CD4 Memory T \n##  CGCCATTGGAAAGT.1  CGCCATTGTCCCGT.1  CGCCATTGTTAGGC.1  CGCCGAGAGGGAGT.1 \n##       CD4 Naive T       T activated      CD4 Memory T                NK \n##  CGCCTAACAACGAA.1  CGCCTAACACCAGT.1  CGCCTAACAGAACA.1  CGCCTAACCGCAAT.1 \n##                 B       T activated                 B         CD14 Mono \n##  CGCCTAACGTCTAG.1  CGCCTAACTTCATC.1  CGCGAGACCCTTTA.1  CGCGAGACCGATAC.1 \n##       CD4 Naive T         CD16 Mono         CD14 Mono         CD14 Mono \n##  CGCGAGACCTCAGA.1  CGCGAGACTATCTC.1  CGCGAGACTCCGTC.1  CGCGAGACTCGTTT.1 \n##         CD16 Mono                 B       CD4 Naive T       CD4 Naive T \n##  CGCGATCTAGCGGA.1  CGCGATCTATCACG.1  CGCGATCTATCAGC.1  CGCGGATGCTCATT.1 \n##                Mk       CD4 Naive T       T activated                NK \n##  CGCGGATGCTGAAC.1  CGCGGATGTGCTAG.1  CGCTAAGAAGAAGT.1  CGCTAAGAAGCCAT.1 \n##       CD4 Naive T                NK      CD4 Memory T      CD4 Memory T \n##  CGCTAAGAAGGCGA.1  CGCTAAGACATTTC.1  CGCTAAGACCTCGT.1  CGCTAAGAGCAGAG.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T         CD14 Mono \n##  CGCTAAGATGAGGG.1  CGCTACACAGATCC.1  CGCTACACCTGAGT.1  CGCTACACGAGAGC.1 \n##      CD4 Memory T                 B         CD14 Mono         CD14 Mono \n##  CGCTACTGCTGTGA.1  CGCTACTGGCTAAC.1  CGCTACTGTTATCC.1  CGCTCATGCGACAT.1 \n##                NK                Mk      CD4 Memory T      CD4 Memory T \n##  CGCTCATGCTACTT.1  CGCTCATGCTTGAG.1  CGCTCATGCTTGTT.1  CGCTCATGGATGAA.1 \n##      CD4 Memory T      CD4 Memory T                NK      CD4 Memory T \n##  CGCTCATGGGACTT.1  CGCTCATGGGCGAA.1  CGCTCATGTCAGTG.1  CGCTCATGTCTCGC.1 \n##         CD14 Mono                Mk         CD14 Mono       T activated \n##  CGCTCATGTGTCGA.1  CGGACCGAAGTGCT.1  CGGACCGACCTTCG.1  CGGACTCTAAGAAC.1 \n##         CD14 Mono       CD4 Naive T         CD16 Mono         CD14 Mono \n##  CGGACTCTCTTAGG.1  CGGACTCTGGAAGC.1  CGGACTCTGTCTAG.1  CGGACTCTGTCTTT.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono       B Activated \n##  CGGACTCTTCGCAA.1  CGGACTCTTGCATG.1  CGGAGGCTTGATGC.1  CGGAGGCTTGTCAG.1 \n##                DC         CD14 Mono       B Activated         CD14 Mono \n##  CGGATAACATCTCT.1  CGGATAACCCACAA.1  CGGATAACTTATCC.1  CGGATATGAAGGTA.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD16 Mono \n##  CGGATATGATTCGG.1  CGGATATGCACTGA.1  CGGATATGCATGAC.1  CGGATATGCCCAAA.1 \n##                NK         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  CGGATATGTTCGGA.1  CGGCACGAAAGGTA.1  CGGCACGAAGACTC.1  CGGCACGACAGTTG.1 \n##             CD8 T      CD4 Memory T         CD14 Mono             CD8 T \n##  CGGCACGACCTTGC.1  CGGCACGACTATGG.1  CGGCACGACTTCGC.1  CGGCACGATACTCT.1 \n##       CD4 Naive T                NK         CD14 Mono       CD4 Naive T \n##  CGGCACGATAGAGA.1  CGGCACGATCGCCT.1  CGGCACGATGTCTT.1  CGGCACGATTCGGA.1 \n##             CD8 T         CD14 Mono         CD14 Mono         CD16 Mono \n##  CGGCATCTACCGAT.1  CGGCATCTATCGTG.1  CGGCATCTCGTAGT.1  CGGCATCTCTGTAG.1 \n##         CD14 Mono         CD14 Mono                NK       CD4 Naive T \n##  CGGCATCTGGTACT.1  CGGCATCTGTTGGT.1  CGGCATCTTAAAGG.1  CGGCCAGACAGCTA.1 \n##       T activated       B Activated         CD14 Mono         CD14 Mono \n##  CGGCCAGACCCACT.1  CGGCCAGACTACCC.1  CGGCCAGAGTCTGA.1  CGGCCAGATTATCC.1 \n##       B Activated         CD14 Mono         CD16 Mono      CD4 Memory T \n##  CGGCGAACAGTACC.1  CGGCGAACATGTCG.1  CGGCGAACCATTCT.1  CGGCGAACCCTCCA.1 \n##                NK         CD14 Mono         CD14 Mono       T activated \n##  CGGCGAACCGGGAA.1  CGGCGAACCTGATG.1  CGGCGAACTCCCAC.1  CGGCGAACTGCAAC.1 \n##         CD14 Mono                Mk             CD8 T      CD4 Memory T \n##  CGGCGAACTTCGGA.1  CGGCGATGAGCGGA.1  CGGCGATGCCTGTC.1  CGGCGATGCTCAAG.1 \n##         CD14 Mono                 B         CD14 Mono       CD4 Naive T \n##  CGGCGATGTGGTTG.1  CGGGACTGGCAAGG.1  CGGGACTGTTCGCC.1  CGGGCATGATTGGC.1 \n##       T activated                 B       CD4 Naive T                Mk \n##  CGGGCATGCAGAAA.1  CGGGCATGTCTTTG.1  CGGGCATGTGAGAA.1  CGGTAAACCGTTAG.1 \n##                 B         CD14 Mono             CD8 T         CD14 Mono \n##  CGGTAAACCTGAGT.1  CGGTAAACCTTGAG.1  CGGTAAACGTTCTT.1  CGGTAAACTGGTTG.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono                DC \n##  CGGTAAACTTACCT.1  CGGTACCTTGCAAC.1  CGGTCACTACTGTG.1  CGGTCACTCAGATC.1 \n##         CD14 Mono         CD14 Mono                DC         CD14 Mono \n##  CGGTCACTCTGCTC.1  CGTAACGAACGGGA.1  CGTAACGACTAGTG.1  CGTAACGAGGTCAT.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono       CD4 Naive T \n##  CGTAACGATCAGAC.1  CGTAACGATTCTGT.1  CGTACAGAAGTAGA.1  CGTACAGAAGTTCG.1 \n##             CD8 T         CD16 Mono       CD4 Naive T         CD14 Mono \n##  CGTACAGAGTAAAG.1  CGTACAGAGTATGC.1  CGTACAGATCGCAA.1  CGTACCACCTTATC.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono       CD4 Naive T \n##  CGTACCACTCGACA.1  CGTACCTGAACCGT.1  CGTACCTGAACGTC.1  CGTACCTGACGCAT.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono       B Activated \n##  CGTACCTGATTCTC.1  CGTACCTGGCGTTA.1  CGTACCTGTAGAGA.1  CGTACCTGTCCGTC.1 \n##               pDC                 B      CD4 Memory T                NK \n##  CGTACCTGTGAGGG.1  CGTAGCCTGCTCCT.1  CGTAGCCTGGTATC.1  CGTAGCCTTAAGCC.1 \n##       CD4 Naive T         CD14 Mono      CD4 Memory T         CD14 Mono \n##  CGTAGCCTTATGCG.1  CGTCAAGAAAGAGT.1  CGTCAAGAACGCAT.1  CGTCAAGACAGCTA.1 \n##         CD16 Mono      CD4 Memory T         CD14 Mono       CD4 Naive T \n##  CGTCAAGACGTACA.1  CGTCAAGATGCACA.1  CGTCCAACAAGGTA.1  CGTCCAACGTGCTA.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T      CD4 Memory T \n##  CGTCCATGTCCCGT.1  CGTCCATGTTTGTC.1  CGTCGACTACTCTT.1  CGTCGACTCCTATT.1 \n##      CD4 Memory T                 B                NK         CD14 Mono \n##  CGTCGACTCGACAT.1  CGTCGACTGCTGAT.1  CGTCGACTTCAGGT.1  CGTCGACTTCGCAA.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono       T activated \n##  CGTCGACTTTCATC.1  CGTGAAACATTGGC.1  CGTGAAACTGGTTG.1  CGTGAATGCACACA.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono         CD16 Mono \n##  CGTGAATGCGAACT.1  CGTGAATGCTACTT.1  CGTGAATGCTTGAG.1  CGTGAATGGGATTC.1 \n##         CD16 Mono                DC         CD16 Mono       CD4 Naive T \n##  CGTGAATGGGCGAA.1  CGTGAATGGGTAAA.1  CGTGAATGTCAGGT.1  CGTGATGAACGGTT.1 \n##         CD16 Mono         CD14 Mono       T activated      CD4 Memory T \n##  CGTGATGACACTTT.1  CGTGATGAGCGTAT.1  CGTGATGATCTAGG.1  CGTGCACTTCTCTA.1 \n##      CD4 Memory T                NK      CD4 Memory T         CD14 Mono \n##  CGTGTAGACGCATA.1  CGTGTAGACTCAGA.1  CGTGTAGACTGTTT.1  CGTGTAGAGCAAGG.1 \n##                 B         CD14 Mono      CD4 Memory T         CD14 Mono \n##  CGTGTAGAGTCACA.1  CGTGTAGAGTTGCA.1  CGTGTAGATCCTTA.1  CGTGTAGATTCGCC.1 \n##       CD4 Naive T             CD8 T         CD14 Mono         CD16 Mono \n##  CGTGTAGATTTACC.1  CGTTAACTACACTG.1  CGTTAACTACGCTA.1  CGTTAACTGGTCTA.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  CGTTAACTTCCGTC.1  CGTTAACTTTAGGC.1  CGTTAGGAATTCTC.1  CGTTAGGACAAAGA.1 \n##      CD4 Memory T      CD4 Memory T                NK      CD4 Memory T \n##  CGTTAGGACTCGCT.1  CGTTAGGACTTAGG.1  CGTTAGGAGTTCTT.1  CGTTATACACGACT.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono         CD14 Mono \n##  CGTTATACACGTAC.1  CGTTATACAGGAGC.1  CGTTATACAGTGTC.1  CGTTATACTGGTGT.1 \n##                 B             CD8 T         CD14 Mono      CD4 Memory T \n##  CGTTTAACACAGCT.1  CGTTTAACAGGGTG.1  CGTTTAACCGTACA.1  CGTTTAACGACGAG.1 \n##         CD14 Mono         CD16 Mono       CD4 Naive T         CD14 Mono \n##  CGTTTAACGACGTT.1  CGTTTAACGCTTCC.1  CGTTTAACTCCAGA.1  CGTTTAACTGACTG.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  CGTTTAACTTTACC.1  CTAAACCTGGAACG.1  CTAAACCTGTCAAC.1  CTAACACTGATAGA.1 \n##       T activated         CD14 Mono             CD8 T         CD14 Mono \n##  CTAACACTGGTTAC.1  CTAACACTGTGTTG.1  CTAACACTTCGACA.1  CTAACGGAACCAAC.1 \n##         CD14 Mono                 B         CD16 Mono         CD14 Mono \n##  CTAACGGACTGCTC.1  CTAACGGAGGGATG.1  CTAACGGAGTATGC.1  CTAACGGATGCTGA.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono                 B \n##  CTAACGGATGCTTT.1  CTAACTACACCAGT.1  CTAACTACCGATAC.1  CTAAGGACACCATG.1 \n##         CD14 Mono         CD16 Mono                NK         CD16 Mono \n##  CTAAGGACATGGTC.1  CTAAGGACTAAGGA.1  CTAAGGACTCTTAC.1  CTAAGGTGTAGAAG.1 \n##         CD14 Mono       CD4 Naive T      CD4 Memory T             CD8 T \n##  CTAAGGTGTCGCTC.1  CTAAGGTGTTATCC.1  CTAATAGAGAATAG.1  CTAATAGAGCCATA.1 \n##       T activated         CD16 Mono         CD14 Mono         CD16 Mono \n##  CTAATAGAGTGTCA.1  CTAATAGAGTTACG.1  CTAATAGATAGACC.1  CTAATAGATCCTTA.1 \n##      CD4 Memory T      CD4 Memory T         CD14 Mono         CD14 Mono \n##  CTAATGCTAAGAAC.1  CTAATGCTACGCTA.1  CTAATGCTATGTCG.1  CTAATGCTGCGTTA.1 \n##         CD16 Mono      CD4 Memory T       T activated         CD14 Mono \n##  CTAATGCTTCTAGG.1  CTACAACTCTCTCG.1  CTACAACTGGTTCA.1  CTACAACTGTTCTT.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono      CD4 Memory T \n##  CTACAACTTCCAGA.1  CTACAACTTGAGCT.1  CTACCTCTGCGAAG.1  CTACGCACAGCTAC.1 \n##      CD4 Memory T                 B         CD16 Mono       T activated \n##  CTACGCACCGAATC.1  CTACGCACCTGGAT.1  CTACGCACGGAAAT.1  CTACGGCTCGTACA.1 \n##       CD4 Naive T       CD4 Naive T                NK         CD14 Mono \n##  CTACGGCTGACGTT.1  CTACGGCTTCCTCG.1  CTACGGCTTGCACA.1  CTACGGCTTTGGTG.1 \n##                 B         CD14 Mono      CD4 Memory T       T activated \n##  CTACTATGAGGTCT.1  CTACTATGATCGTG.1  CTACTATGCTCATT.1  CTACTATGGTATCG.1 \n##         CD16 Mono       CD4 Naive T         CD14 Mono             CD8 T \n##  CTACTCCTCGGAGA.1  CTACTCCTGTTAGC.1  CTACTCCTTTTACC.1  CTAGAGACCGCATA.1 \n##      CD4 Memory T      CD4 Memory T                NK         CD14 Mono \n##  CTAGAGACTTAGGC.1  CTAGAGACTTTGGG.1  CTAGATCTAAAAGC.1  CTAGATCTAGAGAT.1 \n##                NK       CD4 Naive T         CD14 Mono                Mk \n##  CTAGATCTAGTCAC.1  CTAGATCTGGGAGT.1  CTAGATCTTCCAAG.1  CTAGGATGAAACGA.1 \n##         CD14 Mono                DC       CD4 Naive T       CD4 Naive T \n##  CTAGGATGCACCAA.1  CTAGGATGCATGGT.1  CTAGGATGCTGAGT.1  CTAGGATGCTGTAG.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono         CD14 Mono \n##  CTAGGATGGAGGCA.1  CTAGGATGTAGAGA.1  CTAGGATGTCAGAC.1  CTAGGATGTGCCAA.1 \n##       CD4 Naive T       B Activated      CD4 Memory T             CD8 T \n##  CTAGGATGTGTCCC.1  CTAGGATGTGTCTT.1  CTAGGCCTACGCTA.1  CTAGGCCTGGAGCA.1 \n##         CD14 Mono         CD14 Mono         CD16 Mono         CD14 Mono \n##  CTAGGCCTTGTCCC.1  CTAGGTGACACAAC.1  CTAGGTGACCACAA.1  CTAGGTGACGTTAG.1 \n##         CD14 Mono         CD16 Mono         CD14 Mono       T activated \n##  CTAGGTGAGGACTT.1  CTAGGTGAGGTAGG.1  CTAGGTGATTATCC.1  CTAGTTACCGTGTA.1 \n##      CD4 Memory T         CD14 Mono                DC         CD14 Mono \n##  CTAGTTTGCCATAG.1  CTAGTTTGGATAAG.1  CTAGTTTGGCGTTA.1  CTATAAGACCAGTA.1 \n##                 B             CD8 T      CD4 Memory T               pDC \n##  CTATAAGACCCGTT.1  CTATAAGATGGATC.1  CTATACTGAGCTAC.1  CTATACTGAGTGTC.1 \n##      CD4 Memory T         CD14 Mono       T activated       B Activated \n##  CTATACTGCGGAGA.1  CTATACTGCTCTAT.1  CTATACTGGGCATT.1  CTATACTGGTGAGG.1 \n##         CD16 Mono       T activated         CD16 Mono                NK \n##  CTATACTGTCCCGT.1  CTATACTGTGTCGA.1  CTATACTGTTATCC.1  CTATACTGTTTGTC.1 \n##                 B       CD4 Naive T         CD14 Mono         CD14 Mono \n##  CTATAGCTACCATG.1  CTATCAACATCTCT.1  CTATCAACGACTAC.1  CTATCAACGAGACG.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T         CD14 Mono \n##  CTATCAACGGTTCA.1  CTATCAACTCTCAT.1  CTATCAACTGCATG.1  CTATCATGTCTCGC.1 \n##         CD16 Mono         CD14 Mono       CD4 Naive T                 B \n##  CTATCCCTCGATAC.1  CTATGACTCGAATC.1  CTATGACTGCTACA.1  CTATGACTTGTCGA.1 \n##         CD14 Mono       B Activated       T activated       B Activated \n##  CTATGACTTTAGGC.1  CTATGACTTTTGTC.1  CTATGTACGCATCA.1  CTATGTACGCTGAT.1 \n##                 B                NK         CD14 Mono      CD4 Memory T \n##  CTATGTACTCGCCT.1  CTATGTTGACCTCC.1  CTATGTTGTGGTCA.1  CTATGTTGTGTTCT.1 \n##       B Activated         CD14 Mono                 B         CD14 Mono \n##  CTATTGACAACAGA.1  CTATTGACGTCAAC.1  CTATTGACTCTAGG.1  CTATTGTGAACGAA.1 \n##         CD16 Mono         CD16 Mono       CD4 Naive T         CD14 Mono \n##  CTATTGTGTACTGG.1  CTATTGTGTAGAGA.1  CTATTGTGTCCTAT.1  CTATTGTGTGTCTT.1 \n##      CD4 Memory T         CD14 Mono      CD4 Memory T         CD14 Mono \n##  CTCAATTGCCAATG.1  CTCAATTGCGTTAG.1  CTCAATTGGACACT.1  CTCAATTGGCGATT.1 \n##                 B         CD14 Mono             CD8 T       T activated \n##  CTCAATTGGCTTCC.1  CTCAATTGTTGGCA.1  CTCAGAGAAAGGCG.1  CTCAGAGAGCAAGG.1 \n##      CD4 Memory T         CD14 Mono                 B       CD4 Naive T \n##  CTCAGAGAGGTAGG.1  CTCAGAGATCTGGA.1  CTCAGCACAAAGCA.1  CTCAGCACCCAATG.1 \n##         CD16 Mono         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  CTCAGCACCGATAC.1  CTCAGCACCTGCTC.1  CTCAGCACGGTAAA.1  CTCAGCACTGGTGT.1 \n##      CD4 Memory T         CD14 Mono         CD16 Mono                DC \n##  CTCAGCTGCATCAG.1  CTCAGCTGCTACTT.1  CTCAGCTGCTGATG.1  CTCAGCTGGTTTGG.1 \n##         CD14 Mono         CD16 Mono         CD14 Mono       T activated \n##  CTCAGCTGTGGATC.1  CTCAGGCTAAAGTG.1  CTCAGGCTAAGCCT.1  CTCAGGCTAGAGAT.1 \n##         CD16 Mono      CD4 Memory T         CD14 Mono                Mk \n##  CTCAGGCTATCTTC.1  CTCAGGCTCCAGTA.1  CTCAGGCTCGTGTA.1  CTCAGGCTCTCGAA.1 \n##             CD8 T       CD4 Naive T         CD14 Mono         CD14 Mono \n##  CTCAGGCTGGACAG.1  CTCATTGAATGACC.1  CTCATTGAGGTCAT.1  CTCATTGATGGTAC.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono                NK \n##  CTCCACGAAACGTC.1  CTCCACGAAAGGGC.1  CTCCACGAACGGGA.1  CTCCACGACTCGCT.1 \n##         CD14 Mono             CD8 T       CD4 Naive T         CD14 Mono \n##  CTCCACGACTCTTA.1  CTCCACGAGGAGTG.1  CTCCACGATAGACC.1  CTCCACGATTGAGC.1 \n##         CD14 Mono         CD14 Mono         CD16 Mono                NK \n##  CTCCATCTAAAGTG.1  CTCCATCTAAGAAC.1  CTCCATCTATGCTG.1  CTCCATCTGAATGA.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T      CD4 Memory T \n##  CTCCATCTGTATGC.1  CTCCATCTTAGCCA.1  CTCCGAACCCTATT.1  CTCCGAACGGATCT.1 \n##         CD14 Mono             CD8 T       B Activated                NK \n##  CTCCTACTAGTAGA.1  CTCCTACTGCGATT.1  CTCCTACTGTCATG.1  CTCCTACTGTGCTA.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono       CD4 Naive T \n##  CTCCTACTTGTCCC.1  CTCGAAGAGAGGAC.1  CTCGAAGAGCGAAG.1  CTCGAAGAGTGTCA.1 \n##         CD16 Mono         CD14 Mono                 B         CD14 Mono \n##  CTCGACACAATGCC.1  CTCGACACGGTTAC.1  CTCGACACGTTCAG.1  CTCGACTGAGATGA.1 \n##         CD16 Mono      CD4 Memory T                 B         CD14 Mono \n##  CTCGACTGCATTTC.1  CTCGACTGCGACAT.1  CTCGACTGGACACT.1  CTCGACTGGCTAAC.1 \n##         CD14 Mono      CD4 Memory T                Mk       B Activated \n##  CTCGACTGGTACCA.1  CTCGAGCTATGACC.1  CTCGAGCTATGGTC.1  CTCGAGCTCAGATC.1 \n##         CD14 Mono       CD4 Naive T         CD16 Mono         CD14 Mono \n##  CTCGAGCTCATTCT.1  CTCGCATGAGAGAT.1  CTCGCATGCTTATC.1  CTCGCATGTCGCAA.1 \n##                 B         CD14 Mono         CD14 Mono         CD16 Mono \n##  CTCTAAACCCCTTG.1  CTCTAAACCTACGA.1  CTCTAAACCTCTAT.1  CTCTAAACGGACAG.1 \n##         CD14 Mono         CD14 Mono             CD8 T         CD14 Mono \n##  CTCTAAACTTTGGG.1  CTCTAATGCTTGTT.1  CTCTAATGGAACCT.1  CTCTAATGGTAAGA.1 \n##       CD4 Naive T             CD8 T                NK       T activated \n##  CTCTAATGGTTCTT.1  CTCTAATGTCCTAT.1  CTCTAATGTCGTTT.1  CTCTAATGTGCACA.1 \n##         CD14 Mono         CD16 Mono       CD4 Naive T       CD4 Naive T \n##  CTCTAATGTGTCAG.1  CTGAACGAGATAGA.1  CTGAACGAGTAAAG.1  CTGAAGACAGTACC.1 \n##       B Activated                DC                NK                 B \n##  CTGAAGACAGTCAC.1  CTGAAGACCACTCC.1  CTGAAGTGACCGAT.1  CTGAAGTGATCTCT.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T         CD14 Mono \n##  CTGAAGTGCTCTTA.1  CTGAAGTGGATGAA.1  CTGAAGTGTTTACC.1  CTGAATCTTAGCCA.1 \n##                NK         CD14 Mono         CD16 Mono         CD14 Mono \n##  CTGAATCTTTTACC.1  CTGACAGAAAACAG.1  CTGACAGACCTTGC.1  CTGACAGACGCCTT.1 \n##         CD14 Mono                 B         CD14 Mono             CD8 T \n##  CTGACAGACGTACA.1  CTGACAGAGAATGA.1  CTGACAGAGAGGGT.1  CTGACAGAGTCTAG.1 \n##         CD14 Mono      CD4 Memory T                 B         CD16 Mono \n##  CTGACAGATGCCCT.1  CTGACCACGGAGGT.1  CTGACCACTGTCTT.1  CTGAGAACGTCAAC.1 \n##      CD4 Memory T         CD14 Mono       CD4 Naive T                NK \n##  CTGAGAACTAAAGG.1  CTGAGAACTGAGCT.1  CTGAGAACTGCCAA.1  CTGAGAACTTGCAG.1 \n##                 B       B Activated         CD16 Mono         CD14 Mono \n##  CTGAGCCTAACCGT.1  CTGAGCCTCCCTCA.1  CTGAGCCTCTTATC.1  CTGAGCCTTGAACC.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono                 B \n##  CTGAGCCTTTGTGG.1  CTGATACTAATCGC.1  CTGATACTACGTAC.1  CTGATACTCTAGTG.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono       CD4 Naive T \n##  CTGATACTGGACGA.1  CTGATACTTCTACT.1  CTGATGGACTATTC.1  CTGATGGAGGTATC.1 \n##         CD14 Mono                 B      CD4 Memory T         CD16 Mono \n##  CTGATGGATCCTCG.1  CTGATGGATGGTGT.1  CTGATGGATTTGGG.1  CTGATTTGAACCAC.1 \n##                NK       T activated       T activated         CD16 Mono \n##  CTGATTTGACTAGC.1  CTGCAGCTCCTTCG.1  CTGCAGCTCGTTAG.1  CTGCAGCTCTTACT.1 \n##      CD4 Memory T             CD8 T         CD14 Mono         CD16 Mono \n##  CTGCAGCTGAAACA.1  CTGCAGCTTACAGC.1  CTGCAGCTTCGACA.1  CTGCAGCTTTCTAC.1 \n##      CD4 Memory T         CD14 Mono      CD4 Memory T         CD16 Mono \n##  CTGCCAACGACACT.1  CTGCCAACGTACCA.1  CTGCGACTAGTCAC.1  CTGCGACTATCGTG.1 \n##         CD14 Mono         CD14 Mono         CD16 Mono       T activated \n##  CTGGAAACATACCG.1  CTGGAAACGCTAAC.1  CTGGAAACGGTACT.1  CTGGAAACGTTCGA.1 \n##         CD14 Mono         CD14 Mono         CD16 Mono      CD4 Memory T \n##  CTGGATGAAACGAA.1  CTGGATGAACAGCT.1  CTGGATGAAGTCTG.1  CTGGATGACGAGAG.1 \n##                 B         CD14 Mono                DC       CD4 Naive T \n##  CTGGATGAGCAGAG.1  CTGGATGATAGTCG.1  CTGGATGATTTCTG.1  CTGGCACTTATCGG.1 \n##         CD16 Mono         CD14 Mono             CD8 T         CD14 Mono \n##  CTGTAACTAAAGTG.1  CTGTAACTACACGT.1  CTGTAACTAGACTC.1  CTGTAACTCTTGAG.1 \n##             CD8 T      CD4 Memory T       CD4 Naive T       CD4 Naive T \n##  CTGTAACTGGATTC.1  CTGTAACTGTTAGC.1  CTGTATACAAGTAG.1  CTGTATACATGCTG.1 \n##         CD14 Mono       CD4 Naive T                 B      CD4 Memory T \n##  CTGTATACTGTCAG.1  CTGTGAGATGGGAG.1  CTTAAAGAATACCG.1  CTTAACACCTGACA.1 \n##      CD4 Memory T         CD14 Mono             CD8 T         CD14 Mono \n##  CTTAACACGGAGTG.1  CTTAACACTCTCTA.1  CTTAACACTTACTC.1  CTTAAGCTAGCCTA.1 \n##         CD16 Mono       CD4 Naive T                NK         CD14 Mono \n##  CTTAAGCTATGCCA.1  CTTAAGCTGCTGTA.1  CTTAAGCTTAACGC.1  CTTAAGCTTACTCT.1 \n##         CD14 Mono         CD14 Mono       T activated      CD4 Memory T \n##  CTTAAGCTTTCCCG.1  CTTACAACAGCAAA.1  CTTACAACCCAGTA.1  CTTACAACCCTTTA.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  CTTACAACGCGTTA.1  CTTACATGAGTGTC.1  CTTACATGCAGGAG.1  CTTACATGGTACAC.1 \n##         CD16 Mono             CD8 T       CD4 Naive T      CD4 Memory T \n##  CTTACATGGTCATG.1  CTTACATGGTGTCA.1  CTTACATGTCGATG.1  CTTACTGACCGTTC.1 \n##         CD14 Mono       CD4 Naive T       T activated       CD4 Naive T \n##  CTTACTGACGAGTT.1  CTTACTGATGCAAC.1  CTTACTGATGCTTT.1  CTTAGACTAGAGAT.1 \n##                DC       T activated       CD4 Naive T                NK \n##  CTTAGACTCGTAGT.1  CTTAGACTCTTGAG.1  CTTAGACTGGGCAA.1  CTTAGACTGGTTCA.1 \n##      CD4 Memory T       CD4 Naive T      CD4 Memory T         CD16 Mono \n##  CTTAGACTGTCATG.1  CTTAGACTGTGCAT.1  CTTAGGGAAATGCC.1  CTTAGGGAACTGTG.1 \n##      CD4 Memory T       B Activated         CD14 Mono                NK \n##  CTTAGGGACAGCTA.1  CTTAGGGACGTGAT.1  CTTAGGGACTAGTG.1  CTTAGGGATTCACT.1 \n##         CD16 Mono       CD4 Naive T       T activated         CD16 Mono \n##  CTTATCGAACACGT.1  CTTATCGAGACGGA.1  CTTATCGATCGCCT.1  CTTATCGATCTCGC.1 \n##      CD4 Memory T      CD4 Memory T       B Activated         CD14 Mono \n##  CTTCACCTACGGGA.1  CTTCACCTCGAGTT.1  CTTCACCTCGTTAG.1  CTTCACCTGGTGTT.1 \n##       CD4 Naive T                Mk                NK             CD8 T \n##  CTTCACCTTTTCGT.1  CTTCATGACTCCCA.1  CTTCTAGAACGTTG.1  CTTCTAGAAGTGCT.1 \n##                 B             Eryth         CD14 Mono      CD4 Memory T \n##  CTTCTAGAATTTCC.1  CTTCTAGACGCAAT.1  CTTCTAGACTCCAC.1  CTTCTAGAGCCTTC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  CTTCTAGATACGCA.1  CTTCTAGATGTGAC.1  CTTGAACTAAGGCG.1  CTTGAACTCTTATC.1 \n##                 B         CD14 Mono         CD14 Mono       B Activated \n##  CTTGAACTGAATAG.1  CTTGAACTGCTGAT.1  CTTGAACTGTGCAT.1  CTTGAACTTGACTG.1 \n##             CD8 T         CD14 Mono         CD14 Mono         CD16 Mono \n##  CTTGAGGATAGCCA.1  CTTGATTGACGGGA.1  CTTGATTGTATTCC.1  CTTGATTGTCCTTA.1 \n##         CD14 Mono                NK      CD4 Memory T       T activated \n##  CTTGATTGTGGTTG.1  CTTGTATGAGTACC.1  CTTGTATGATCTTC.1  CTTGTATGGGTGAG.1 \n##                 B                NK      CD4 Memory T         CD16 Mono \n##  CTTGTATGGTTACG.1  CTTGTATGTTGCAG.1  CTTTACGAAAAGCA.1  CTTTACGACAGAAA.1 \n##      CD4 Memory T      CD4 Memory T                DC         CD14 Mono \n##  CTTTACGAGGAAGC.1  CTTTACGAGGATTC.1  CTTTAGACGCCATA.1  CTTTAGTGACCATG.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono                 B \n##  CTTTAGTGAGGCGA.1  CTTTAGTGTCCCAC.1  CTTTCAGATCCGAA.1  CTTTCAGATTGCAG.1 \n##         CD16 Mono      CD4 Memory T      CD4 Memory T         CD14 Mono \n##  CTTTGATGGGACGA.1  CTTTGATGGTTGCA.1  CTTTGATGTGGAAA.1  CTTTGATGTTCTAC.1 \n##         CD16 Mono         CD16 Mono       CD4 Naive T               pDC \n##  GAAACAGACTGGTA.1  GAAACAGAGAGGCA.1  GAAACAGATGCTCC.1  GAAACAGATGTCCC.1 \n##      CD4 Memory T      CD4 Memory T         CD14 Mono      CD4 Memory T \n##  GAAACCTGCCACAA.1  GAAACCTGCGTCTC.1  GAAACCTGGCCCTT.1  GAAACCTGGGTAGG.1 \n##                NK         CD14 Mono       CD4 Naive T         CD14 Mono \n##  GAAACCTGTCCTAT.1  GAAACCTGTCTATC.1  GAAACCTGTTCTCA.1  GAAAGATGATTCTC.1 \n##         CD14 Mono         CD16 Mono         CD16 Mono       T activated \n##  GAAAGATGCTTGTT.1  GAAAGCCTACCTAG.1  GAAAGCCTTCTTAC.1  GAAAGTGACGATAC.1 \n##         CD14 Mono         CD16 Mono       CD4 Naive T      CD4 Memory T \n##  GAAAGTGAGCAGTT.1  GAAAGTGATGCTGA.1  GAAATACTCCAGTA.1  GAAATACTGGACAG.1 \n##      CD4 Memory T                Mk       B Activated       CD4 Naive T \n##  GAACACACAACAGA.1  GAACACACACCCAA.1  GAACACACACTACG.1  GAACACACATCGTG.1 \n##       CD4 Naive T                 B         CD14 Mono                DC \n##  GAACACACCCGCTT.1  GAACACACGGCAAG.1  GAACAGCTAAGGCG.1  GAACAGCTAAGTAG.1 \n##         CD14 Mono       CD4 Naive T      CD4 Memory T       T activated \n##  GAACAGCTACGGAG.1  GAACAGCTCTAGCA.1  GAACAGCTTGTTTC.1  GAACCAACGGAGGT.1 \n##      CD4 Memory T                DC         CD14 Mono             CD8 T \n##  GAACCAACGTGCTA.1  GAACCAACTACGCA.1  GAACCAACTGCTCC.1  GAACCTGAACGGGA.1 \n##                DC       B Activated             CD8 T         CD16 Mono \n##  GAACCTGAATGCTG.1  GAACCTGAATGGTC.1  GAACCTGACCCGTT.1  GAACCTGAGCTCCT.1 \n##                DC      CD4 Memory T       CD4 Naive T         CD14 Mono \n##  GAACCTGATATCTC.1  GAACCTGATCGCAA.1  GAACGGGACACTCC.1  GAACGGGATACGCA.1 \n##      CD4 Memory T                 B       CD4 Naive T                 B \n##  GAACGGGATGAGGG.1  GAACGTTGCCCACT.1  GAACGTTGGCCTTC.1  GAACGTTGGTTTGG.1 \n##       CD4 Naive T       T activated                 B       CD4 Naive T \n##  GAACGTTGTCGTAG.1  GAACGTTGTGCAAC.1  GAACGTTGTGGTTG.1  GAACTGTGACGGTT.1 \n##       CD4 Naive T         CD14 Mono      CD4 Memory T      CD4 Memory T \n##  GAACTGTGCAGATC.1  GAACTGTGCGAATC.1  GAACTGTGCTGAGT.1  GAACTGTGTATCTC.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono       CD4 Naive T \n##  GAACTGTGTGAGCT.1  GAAGAATGCTACCC.1  GAAGATGAACCTGA.1  GAAGATGAGCAGTT.1 \n##                NK         CD14 Mono             CD8 T         CD16 Mono \n##  GAAGATGAGTCTAG.1  GAAGATGATATGGC.1  GAAGCGGAACGCTA.1  GAAGCGGAAGAAGT.1 \n##      CD4 Memory T         CD14 Mono                 B      CD4 Memory T \n##  GAAGCGGACATCAG.1  GAAGCGGATGAAGA.1  GAAGCGGATGGAGG.1  GAAGCTACCAGAAA.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono             CD8 T \n##  GAAGCTACCAGTTG.1  GAAGCTACCCATAG.1  GAAGCTACTAAGGA.1  GAAGCTACTGGATC.1 \n##         CD14 Mono         CD14 Mono         CD16 Mono       B Activated \n##  GAAGCTTGACCTTT.1  GAAGCTTGACGGTT.1  GAAGCTTGATGTGC.1  GAAGCTTGCCACAA.1 \n##         CD14 Mono       CD4 Naive T       B Activated       CD4 Naive T \n##  GAAGCTTGCCCTTG.1  GAAGCTTGCTCATT.1  GAAGCTTGGGAGTG.1  GAAGCTTGGGGAGT.1 \n##         CD14 Mono         CD14 Mono       T activated       T activated \n##  GAAGGGTGAGCTCA.1  GAAGGGTGCTGGAT.1  GAAGGGTGGTACGT.1  GAAGGGTGTGTGGT.1 \n##      CD4 Memory T       T activated         CD14 Mono         CD14 Mono \n##  GAAGGGTGTTATCC.1  GAAGGTCTCAGGAG.1  GAAGGTCTTAGCCA.1  GAAGTAGACCCTTG.1 \n##         CD16 Mono       T activated         CD14 Mono                DC \n##  GAAGTCACACCACA.1  GAAGTCACACCTAG.1  GAAGTCTGAACGAA.1  GAAGTCTGAACGGG.1 \n##         CD16 Mono                DC         CD14 Mono         CD16 Mono \n##  GAAGTCTGCATGAC.1  GAAGTCTGGTTACG.1  GAAGTCTGTAAGGA.1  GAAGTCTGTCCGAA.1 \n##         CD14 Mono         CD16 Mono         CD14 Mono         CD14 Mono \n##  GAAGTCTGTTCGTT.1  GAAGTCTGTTTCAC.1  GAAGTGCTTAGCCA.1  GAAGTGCTTTTCGT.1 \n##                 B         CD16 Mono                 B         CD14 Mono \n##  GAATGCACCTTCCG.1  GAATGCACCTTTAC.1  GAATGCACTATCTC.1  GAATGCACTCTTTG.1 \n##         CD14 Mono      CD4 Memory T       T activated             CD8 T \n##  GAATGCTGGATAGA.1  GAATGCTGTTGCAG.1  GAATGGCTCTCAAG.1  GAATGGCTCTGGAT.1 \n##         CD16 Mono       CD4 Naive T       T activated         CD14 Mono \n##  GAATGGCTGAAGGC.1  GAATGGCTGCTTAG.1  GAATGGCTGTGTAC.1  GAATGGCTTTCAGG.1 \n##                 B                DC                 B         CD14 Mono \n##  GAATTAACTCTTAC.1  GACAACACACGTTG.1  GACAACTGCGTACA.1  GACAACTGTACAGC.1 \n##                NK             CD8 T             CD8 T       CD4 Naive T \n##  GACAACTGTCGTAG.1  GACAACTGTCTTTG.1  GACAACTGTGACAC.1  GACAACTGTTGGTG.1 \n##         CD14 Mono       T activated         CD14 Mono               pDC \n##  GACACTGAAGGAGC.1  GACACTGACACTCC.1  GACACTGACTGCAA.1  GACACTGAGTTGGT.1 \n##      CD4 Memory T         CD14 Mono       CD4 Naive T         CD14 Mono \n##  GACACTGATTTGCT.1  GACAGGGAACTGTG.1  GACAGGGAAGATGA.1  GACAGGGATCGTTT.1 \n##                DC                DC         CD16 Mono         CD14 Mono \n##  GACAGGGATTGGCA.1  GACAGTACCCTGAA.1  GACAGTACGAATCC.1  GACAGTACGTCTTT.1 \n##         CD14 Mono         CD14 Mono         CD16 Mono       CD4 Naive T \n##  GACAGTACTATTCC.1  GACAGTACTGTCAG.1  GACAGTTGATCGGT.1  GACAGTTGGTTGCA.1 \n##                Mk                 B       CD4 Naive T         CD14 Mono \n##  GACAGTTGTAAGGA.1  GACATTCTGAGGGT.1  GACATTCTGATACC.1  GACATTCTGGGACA.1 \n##         CD14 Mono      CD4 Memory T             CD8 T         CD14 Mono \n##  GACATTCTGTCTTT.1  GACATTCTGTGCAT.1  GACATTCTTCTTAC.1  GACCAAACCTAAGC.1 \n##                NK             CD8 T       CD4 Naive T             Eryth \n##  GACCAAACCTGACA.1  GACCATGACTTGCC.1  GACCATGAGGGACA.1  GACCCTACACGTAC.1 \n##       T activated         CD14 Mono         CD14 Mono      CD4 Memory T \n##  GACCCTACCGAACT.1  GACCCTACGGAGCA.1  GACCCTACTGGAGG.1  GACCTAGAAGTCAC.1 \n##                NK       CD4 Naive T                NK      CD4 Memory T \n##  GACCTAGAATACCG.1  GACCTAGACGACTA.1  GACCTAGACTGAGT.1  GACCTAGAGAGGTG.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  GACCTAGATGGAGG.1  GACCTCACAGATCC.1  GACCTCACGTCGAT.1  GACCTCACTTCCGC.1 \n##             CD8 T                NK       CD4 Naive T         CD14 Mono \n##  GACCTCTGCGCAAT.1  GACCTCTGTCCTAT.1  GACCTCTGTGGAAA.1  GACCTCTGTTGAGC.1 \n##       CD4 Naive T       B Activated                 B         CD14 Mono \n##  GACGAACTAACCTG.1  GACGAACTAGTCGT.1  GACGAACTCCGCTT.1  GACGAGGAAGTTCG.1 \n##         CD16 Mono         CD16 Mono         CD14 Mono         CD14 Mono \n##  GACGAGGATTCCGC.1  GACGATTGACCACA.1  GACGATTGCTAGAC.1  GACGATTGGCATCA.1 \n##         CD14 Mono         CD14 Mono       T activated         CD14 Mono \n##  GACGATTGTGTGCA.1  GACGCCGAACCTGA.1  GACGCCGAACGTAC.1  GACGCCGACGTAGT.1 \n##       B Activated         CD14 Mono       CD4 Naive T         CD14 Mono \n##  GACGCCGAGTCATG.1  GACGCCGAGTCCTC.1  GACGCCGATCCTCG.1  GACGCTCTCATTTC.1 \n##       T activated         CD14 Mono         CD14 Mono                 B \n##  GACGCTCTCTGCAA.1  GACGCTCTTCTAGG.1  GACGGCACAATCGC.1  GACGGCACCTCCCA.1 \n##                DC      CD4 Memory T                 B         CD14 Mono \n##  GACGGCACCTGAGT.1  GACGGCACGGCGAA.1  GACGGCACGGTTTG.1  GACGTAACACCTAG.1 \n##               pDC         CD14 Mono         CD16 Mono                 B \n##  GACGTAACCGCTAA.1  GACGTAACCGGTAT.1  GACGTAACCTGACA.1  GACGTAACGAACCT.1 \n##                Mk                NK         CD14 Mono       T activated \n##  GACGTATGACAGCT.1  GACGTATGAGTAGA.1  GACGTATGATTCTC.1  GACGTATGCCCACT.1 \n##         CD14 Mono      CD4 Memory T       CD4 Naive T         CD14 Mono \n##  GACGTATGCCTGAA.1  GACGTATGGTACAC.1  GACGTATGTGCAAC.1  GACGTATGTTGTGG.1 \n##                 B      CD4 Memory T      CD4 Memory T         CD14 Mono \n##  GACGTCCTATTCCT.1  GACGTCCTCAGTTG.1  GACGTCCTGATGAA.1  GACGTCCTTGTCAG.1 \n##                 B      CD4 Memory T         CD14 Mono      CD4 Memory T \n##  GACTACGAGTGAGG.1  GACTACGATCCTGC.1  GACTCCTGACAGTC.1  GACTCCTGCGGGAA.1 \n##         CD16 Mono       CD4 Naive T      CD4 Memory T       CD4 Naive T \n##  GACTCCTGGAGAGC.1  GACTCCTGGTCCTC.1  GACTCCTGTCTACT.1  GACTGAACCGCATA.1 \n##                 B      CD4 Memory T       CD4 Naive T         CD16 Mono \n##  GACTGAACCTCGCT.1  GACTGAACTGGAGG.1  GACTGATGCCGTAA.1  GACTGATGGTAGGG.1 \n##       CD4 Naive T       CD4 Naive T             CD8 T      CD4 Memory T \n##  GACTGATGGTCACA.1  GACTGATGTACTGG.1  GACTGATGTGAAGA.1  GACTGTGACGGGAA.1 \n##      CD4 Memory T                Mk         CD14 Mono         CD14 Mono \n##  GACTGTGAGTTACG.1  GACTGTGATAGAAG.1  GACTTTACATAAGG.1  GACTTTACATGCTG.1 \n##       T activated      CD4 Memory T      CD4 Memory T      CD4 Memory T \n##  GACTTTACCATGCA.1  GACTTTACCTCATT.1  GACTTTACGCGAAG.1  GACTTTACGTACGT.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T      CD4 Memory T \n##  GACTTTACTCAGGT.1  GAGAAATGCCCGTT.1  GAGAAATGCCTTGC.1  GAGAAATGCGAGTT.1 \n##         CD16 Mono       CD4 Naive T         CD16 Mono               pDC \n##  GAGAAATGCTACGA.1  GAGAAATGTCTGGA.1  GAGAGGTGAAGGCG.1  GAGAGGTGAGCATC.1 \n##         CD16 Mono         CD14 Mono         CD14 Mono         CD16 Mono \n##  GAGAGGTGCAGTCA.1  GAGAGGTGCTCCAC.1  GAGAGGTGGAATCC.1  GAGAGGTGGGAGCA.1 \n##      CD4 Memory T       CD4 Naive T      CD4 Memory T      CD4 Memory T \n##  GAGAGGTGGGAGTG.1  GAGAGGTGTCCTAT.1  GAGATAGAACCTCC.1  GAGATAGAATCGTG.1 \n##         CD14 Mono       B Activated         CD14 Mono         CD14 Mono \n##  GAGATAGACTGACA.1  GAGATAGAGTTAGC.1  GAGATAGATCTCAT.1  GAGATAGATTTCTG.1 \n##       CD4 Naive T         CD14 Mono      CD4 Memory T       CD4 Naive T \n##  GAGATGCTACGGGA.1  GAGATGCTGGGTGA.1  GAGATGCTGTTACG.1  GAGCAACTATCAGC.1 \n##         CD14 Mono             CD8 T         CD14 Mono       CD4 Naive T \n##  GAGCAACTGAGGGT.1  GAGCAACTGGTCTA.1  GAGCAGGACTTAGG.1  GAGCAGGATGCTAG.1 \n##                NK       CD4 Naive T         CD16 Mono      CD4 Memory T \n##  GAGCATACAGCCTA.1  GAGCATACGAGCTT.1  GAGCATACGGGAGT.1  GAGCATACTCGCCT.1 \n##                 B      CD4 Memory T                 B         CD14 Mono \n##  GAGCATACTGATGC.1  GAGCGAGAAACCGT.1  GAGCGAGAGGAGTG.1  GAGCGAGATCATTC.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T      CD4 Memory T \n##  GAGCGCTGATTCGG.1  GAGCGCTGCATACG.1  GAGCGCTGTGTTCT.1  GAGCGGCTGTTACG.1 \n##       CD4 Naive T         CD16 Mono                DC         CD14 Mono \n##  GAGCGGCTTACAGC.1  GAGCTCCTAGCATC.1  GAGCTCCTATACCG.1  GAGCTCCTCACTTT.1 \n##      CD4 Memory T         CD14 Mono                NK         CD14 Mono \n##  GAGCTCCTGCATCA.1  GAGGACGACGAATC.1  GAGGACGACGATAC.1  GAGGACGACGTGAT.1 \n##                DC         CD14 Mono                 B         CD14 Mono \n##  GAGGACGAGGAGCA.1  GAGGACGATAGACC.1  GAGGACGATTTGTC.1  GAGGATCTGACAAA.1 \n##      CD4 Memory T      CD4 Memory T       CD4 Naive T         CD14 Mono \n##  GAGGATCTTGGTAC.1  GAGGCAGAACTGTG.1  GAGGCAGAGAATAG.1  GAGGCAGAGAGACG.1 \n##         CD14 Mono         CD16 Mono         CD14 Mono       CD4 Naive T \n##  GAGGCCACATGTGC.1  GAGGCCACCGAATC.1  GAGGCCACCTAAGC.1  GAGGCCACTCTCCG.1 \n##                 B       CD4 Naive T         CD16 Mono                DC \n##  GAGGCCACTTCGTT.1  GAGGGAACAATGCC.1  GAGGGAACATGTCG.1  GAGGGAACCAGAAA.1 \n##         CD14 Mono         CD14 Mono                 B      CD4 Memory T \n##  GAGGGAACCCTATT.1  GAGGGAACTATCTC.1  GAGGGATGAAGGGC.1  GAGGGATGTATTCC.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono       B Activated \n##  GAGGGCCTAGCTAC.1  GAGGGCCTTGAGAA.1  GAGGGTGAATGCCA.1  GAGGGTGACCCTTG.1 \n##       CD4 Naive T       CD4 Naive T       CD4 Naive T       B Activated \n##  GAGGGTGAGGCAAG.1  GAGGGTGATGCAAC.1  GAGGTACTAGGTCT.1  GAGGTACTGCGAAG.1 \n##       CD4 Naive T                 B       CD4 Naive T       T activated \n##  GAGGTACTGTGTCA.1  GAGGTACTGTTGAC.1  GAGGTGGAACGTAC.1  GAGGTGGAAGAGAT.1 \n##                Mk             CD8 T       T activated       CD4 Naive T \n##  GAGGTGGAAGTCAC.1  GAGGTGGAGCTAAC.1  GAGGTGGATGCCCT.1  GAGGTGGATGTGGT.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono      CD4 Memory T \n##  GAGGTTACACCTGA.1  GAGGTTACAGGCGA.1  GAGGTTACCATACG.1  GAGGTTACTGCCTC.1 \n##         CD14 Mono         CD14 Mono             CD8 T         CD14 Mono \n##  GAGGTTACTTGAGC.1  GAGGTTTGAGTCAC.1  GAGGTTTGGACGTT.1  GAGGTTTGGTCGTA.1 \n##       T activated      CD4 Memory T         CD14 Mono       CD4 Naive T \n##  GAGTACACATACCG.1  GAGTACACCATTTC.1  GAGTACACCCACCT.1  GAGTACACCTGACA.1 \n##      CD4 Memory T       B Activated         CD14 Mono         CD16 Mono \n##  GAGTACACTACAGC.1  GAGTACACTGAGGG.1  GAGTACTGACCGAT.1  GAGTACTGTTCCAT.1 \n##         CD14 Mono         CD16 Mono       T activated       CD4 Naive T \n##  GAGTCAACGGGAGT.1  GAGTCAACTCGCAA.1  GAGTCAACTCTACT.1  GAGTCAACTGACAC.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T             CD8 T \n##  GAGTCTGAAAGCCT.1  GAGTCTGAGAGGCA.1  GAGTCTGAGGTAGG.1  GAGTCTGAGTAAAG.1 \n##      CD4 Memory T         CD16 Mono                 B      CD4 Memory T \n##  GAGTCTGATACTGG.1  GAGTGACTAGTCTG.1  GAGTGACTCCACCT.1  GAGTGACTGACACT.1 \n##                 B         CD14 Mono                Mk                 B \n##  GAGTGACTTGAACC.1  GAGTGACTTGTTTC.1  GAGTGGGACTAGTG.1  GAGTGGGACTATTC.1 \n##         CD14 Mono             CD8 T      CD4 Memory T                NK \n##  GAGTGGGATCTATC.1  GAGTGGGATGTCAG.1  GAGTGTTGCACTTT.1  GAGTGTTGCCTGTC.1 \n##               pDC                 B         CD14 Mono         CD14 Mono \n##  GAGTGTTGCGGGAA.1  GAGTGTTGTGTGCA.1  GAGTTGTGAACGAA.1  GAGTTGTGATAAGG.1 \n##       B Activated      CD4 Memory T       T activated         CD14 Mono \n##  GAGTTGTGTGCTCC.1  GATAAGGAATTTCC.1  GATAAGGACACAAC.1  GATAAGGACCGCTT.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono       CD4 Naive T \n##  GATAAGGAGAGATA.1  GATAAGGAGTTGAC.1  GATAAGGATGGTTG.1  GATAAGGATTACCT.1 \n##       B Activated             CD8 T         CD14 Mono         CD16 Mono \n##  GATAATACAGTGCT.1  GATAATACCAACCA.1  GATAATACCGCCTT.1  GATAATACCTTCGC.1 \n##         CD14 Mono       B Activated      CD4 Memory T         CD14 Mono \n##  GATAATACGGAGGT.1  GATAATACTTCTAC.1  GATACTCTGAGGAC.1  GATACTCTGCATAC.1 \n##         CD16 Mono         CD14 Mono         CD16 Mono         CD14 Mono \n##  GATACTCTTGCATG.1  GATAGAGAAGAAGT.1  GATAGAGACGAGAG.1  GATAGAGACGGAGA.1 \n##      CD4 Memory T         CD14 Mono         CD16 Mono                 B \n##  GATAGCACTGAGGG.1  GATAGCACTTTCGT.1  GATATAACAGGTCT.1  GATATAACCCACAA.1 \n##         CD16 Mono                NK         CD14 Mono      CD4 Memory T \n##  GATATAACTTTGCT.1  GATATATGCCTGAA.1  GATATATGGGGAGT.1  GATATATGGTAAAG.1 \n##                 B         CD14 Mono             CD8 T       CD4 Naive T \n##  GATATATGTGCTTT.1  GATATATGTGTTTC.1  GATATTGAAACTGC.1  GATATTGAAATGCC.1 \n##         CD14 Mono             CD8 T         CD14 Mono         CD14 Mono \n##  GATATTGAACACGT.1  GATATTGAAGTCGT.1  GATATTGACGCTAA.1  GATATTGAGGTGGA.1 \n##       CD4 Naive T                 B       CD4 Naive T         CD14 Mono \n##  GATATTGATCGACA.1  GATCATCTAGGGTG.1  GATCATCTCTGGAT.1  GATCCCTGAGCCTA.1 \n##                 B         CD16 Mono       CD4 Naive T                 B \n##  GATCCCTGATTGGC.1  GATCCCTGCTCCAC.1  GATCCCTGGCATCA.1  GATCCCTGGCTTAG.1 \n##                NK         CD14 Mono      CD4 Memory T         CD16 Mono \n##  GATCCCTGTCTTCA.1  GATCCGCTAAGGGC.1  GATCCGCTACCCAA.1  GATCGAACAATGCC.1 \n##      CD4 Memory T                 B         CD14 Mono       CD4 Naive T \n##  GATCGAACATCAGC.1  GATCGAACATCGGT.1  GATCGAACGGGTGA.1  GATCGATGACCACA.1 \n##         CD14 Mono                 B         CD14 Mono       CD4 Naive T \n##  GATCGATGACCTTT.1  GATCGATGCCATAG.1  GATCGATGTAAGGA.1  GATCGTGAACCTAG.1 \n##      CD4 Memory T         CD14 Mono             CD8 T       B Activated \n##  GATCTACTATCTTC.1  GATCTACTCGGTAT.1  GATCTTACCTACCC.1  GATCTTACCTGAAC.1 \n##       CD4 Naive T       CD4 Naive T                Mk         CD14 Mono \n##  GATCTTACCTGATG.1  GATCTTACGGACAG.1  GATCTTACTATCTC.1  GATCTTTGCACCAA.1 \n##         CD14 Mono      CD4 Memory T                NK         CD16 Mono \n##  GATCTTTGCCTCAC.1  GATCTTTGCTTCTA.1  GATCTTTGGACGAG.1  GATCTTTGGAGGCA.1 \n##      CD4 Memory T         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  GATGACACAGCTCA.1  GATGACACTGCTAG.1  GATGCAACACCACA.1  GATGCAACACCAGT.1 \n##       T activated       CD4 Naive T       CD4 Naive T                DC \n##  GATGCAACCATGGT.1  GATGCAACGCCTTC.1  GATGCATGAGGTTC.1  GATGCATGATTCGG.1 \n##         CD14 Mono      CD4 Memory T                NK                 B \n##  GATGCATGGTACGT.1  GATGCATGTAACGC.1  GATGCCCTAGAATG.1  GATGCCCTGACACT.1 \n##       CD4 Naive T                Mk         CD14 Mono         CD16 Mono \n##  GATGCCCTGCGATT.1  GATGCCCTGGTCTA.1  GATGCCCTTGGGAG.1  GATTACCTAATGCC.1 \n##       CD4 Naive T             CD8 T         CD14 Mono         CD14 Mono \n##  GATTACCTCTCCCA.1  GATTACCTGCGTAT.1  GATTACCTGCTACA.1  GATTACCTGGTGTT.1 \n##       T activated         CD14 Mono      CD4 Memory T         CD16 Mono \n##  GATTACCTTATTCC.1  GATTCGGAATAAGG.1  GATTCGGAATCTCT.1  GATTCGGAATGGTC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  GATTCGGACGCCTT.1  GATTCGGAGAACTC.1  GATTCGGAGAATAG.1  GATTCGGAGGCATT.1 \n##      CD4 Memory T         CD14 Mono                 B         CD14 Mono \n##  GATTCGGAGTATCG.1  GATTCTACAAGAGT.1  GATTCTACCCCACT.1  GATTCTACCGGGAA.1 \n##       CD4 Naive T       T activated      CD4 Memory T         CD14 Mono \n##  GATTCTACGCAGAG.1  GATTCTACGGTCTA.1  GATTCTTGAACCAC.1  GATTCTTGTCAGAC.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  GATTCTTGTGCAAC.1  GATTCTTGTGGTTG.1  GATTGGACAGACTC.1  GATTGGACATCACG.1 \n##         CD16 Mono         CD14 Mono         CD14 Mono                NK \n##  GATTGGACCATGCA.1  GATTGGACCGTACA.1  GATTGGACCTCCAC.1  GATTGGACGGAGGT.1 \n##                DC         CD14 Mono       CD4 Naive T       T activated \n##  GATTGGACTGGTTG.1  GATTGGTGCTGATG.1  GATTGGTGTAACCG.1  GATTGGTGTTCCGC.1 \n##         CD14 Mono         CD14 Mono       T activated      CD4 Memory T \n##  GATTTAGAGCTATG.1  GATTTAGAGTACAC.1  GATTTAGAGTACGT.1  GATTTAGAGTGAGG.1 \n##         CD14 Mono       B Activated       CD4 Naive T      CD4 Memory T \n##  GATTTAGATGCGTA.1  GATTTGCTAGTCTG.1  GATTTGCTCTAGCA.1  GATTTGCTGAGACG.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono       B Activated \n##  GATTTGCTGCGTTA.1  GCAAACTGAGATCC.1  GCAAACTGCGGGAA.1  GCAAACTGCGTAAC.1 \n##         CD14 Mono       T activated                NK         CD14 Mono \n##  GCAACCCTCAGAGG.1  GCAACCCTCCAATG.1  GCAACCCTGAGGGT.1  GCAACCCTGGCAAG.1 \n##         CD14 Mono                 B         CD14 Mono                NK \n##  GCAACCCTTACTGG.1  GCAACCCTTGTCGA.1  GCAACTGAAGAGGC.1  GCAACTGACCGAAT.1 \n##         CD14 Mono             CD8 T         CD14 Mono      CD4 Memory T \n##  GCAACTGACTCGCT.1  GCAACTGATCAGGT.1  GCAACTGATTCAGG.1  GCAAGACTGGTAGG.1 \n##         CD16 Mono      CD4 Memory T         CD14 Mono             CD8 T \n##  GCAAGACTGTTCTT.1  GCAATCGAGGAAGC.1  GCAATCGAGGTAGG.1  GCAATCGATCTCCG.1 \n##       CD4 Naive T      CD4 Memory T      CD4 Memory T         CD16 Mono \n##  GCAATTCTAAAGTG.1  GCAATTCTCTCGCT.1  GCAATTCTTGAGAA.1  GCAATTCTTGGAAA.1 \n##       CD4 Naive T                 B      CD4 Memory T       B Activated \n##  GCACAAACACAGTC.1  GCACAATGACTACG.1  GCACAATGCTACGA.1  GCACAATGCTTGCC.1 \n##         CD14 Mono         CD16 Mono                 B         CD14 Mono \n##  GCACAATGGCTAAC.1  GCACAATGTCCCGT.1  GCACACCTCTGAGT.1  GCACACCTCTGTCC.1 \n##      CD4 Memory T         CD14 Mono       CD4 Naive T                 B \n##  GCACACCTGGGATG.1  GCACCACTAGGTTC.1  GCACCACTCGTCTC.1  GCACCACTGCGGAA.1 \n##         CD14 Mono                 B      CD4 Memory T         CD16 Mono \n##  GCACCACTTAAGCC.1  GCACCTACAACGGG.1  GCACCTACACTCTT.1  GCACCTACGCTCCT.1 \n##         CD16 Mono         CD14 Mono      CD4 Memory T         CD16 Mono \n##  GCACCTACGTAGGG.1  GCACGGACACGCAT.1  GCACGGACCCAATG.1  GCACGGACCCGCTT.1 \n##       CD4 Naive T                Mk         CD14 Mono       CD4 Naive T \n##  GCACGGACCCTTAT.1  GCACGGACCGATAC.1  GCACGGACTGTTCT.1  GCACGGTGCTTGCC.1 \n##                 B      CD4 Memory T         CD14 Mono       T activated \n##  GCACGGTGCTTGTT.1  GCACGGTGTCTACT.1  GCACGGTGTGCCCT.1  GCACGGTGTGTTTC.1 \n##                DC         CD16 Mono                NK         CD14 Mono \n##  GCACGTCTAACCGT.1  GCACGTCTGAGGGT.1  GCACGTCTGGTGGA.1  GCACGTCTGGTGTT.1 \n##                DC             CD8 T      CD4 Memory T         CD14 Mono \n##  GCACGTCTTTACTC.1  GCACGTCTTTCACT.1  GCACTAGAAGGTTC.1  GCACTAGACAGAGG.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T                 B \n##  GCACTAGAGGAGTG.1  GCACTAGATACTTC.1  GCACTGCTGCAGAG.1  GCACTGCTTCTCGC.1 \n##       CD4 Naive T      CD4 Memory T       CD4 Naive T                Mk \n##  GCACTGCTTTCCCG.1  GCAGATACCGATAC.1  GCAGATACGACTAC.1  GCAGATACGGCGAA.1 \n##         CD14 Mono                 B             CD8 T                 B \n##  GCAGATACTTGACG.1  GCAGATACTTTGTC.1  GCAGCCGAAGAGAT.1  GCAGCGTGTAAGCC.1 \n##                 B         CD14 Mono      CD4 Memory T       CD4 Naive T \n##  GCAGCGTGTAGCGT.1  GCAGCGTGTGACAC.1  GCAGCTCTATTCGG.1  GCAGCTCTGTTGTG.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T         CD14 Mono \n##  GCAGCTCTTACTTC.1  GCAGGCACGGCATT.1  GCAGGCACTTACCT.1  GCAGGGCTAGATGA.1 \n##                 B                 B         CD16 Mono         CD16 Mono \n##  GCAGGGCTGAACCT.1  GCAGGGCTGGCGAA.1  GCAGGGCTGTACAC.1  GCAGGGCTTCGCCT.1 \n##       CD4 Naive T       B Activated         CD14 Mono      CD4 Memory T \n##  GCAGTCCTAGTTCG.1  GCAGTCCTCGGAGA.1  GCAGTCCTGAGCTT.1  GCAGTCCTTCGTAG.1 \n##         CD14 Mono             CD8 T         CD14 Mono                 B \n##  GCAGTTGAAACCTG.1  GCAGTTGACCGTAA.1  GCAGTTGACGAATC.1  GCAGTTGACGCAAT.1 \n##       CD4 Naive T         CD16 Mono         CD14 Mono         CD14 Mono \n##  GCAGTTGACTACGA.1  GCAGTTGACTGAGT.1  GCAGTTGAGGTGGA.1  GCAGTTGAGTTGTG.1 \n##         CD14 Mono                DC         CD14 Mono       CD4 Naive T \n##  GCAGTTGATCCGAA.1  GCATCAGAAACCGT.1  GCATCAGACATTCT.1  GCATCAGAGGTTTG.1 \n##       CD4 Naive T         CD14 Mono               pDC       T activated \n##  GCATCAGATGCTCC.1  GCATGATGAACTGC.1  GCATGATGGCCCTT.1  GCATGTGACATGAC.1 \n##         CD14 Mono                NK       CD4 Naive T       B Activated \n##  GCATGTGACCGAAT.1  GCATGTGAGCCAAT.1  GCATTGGACTCAAG.1  GCATTGGAGTTGGT.1 \n##                DC       CD4 Naive T      CD4 Memory T             Eryth \n##  GCATTGGATAACCG.1  GCATTGGATCCGAA.1  GCATTGGATTCATC.1  GCCAAAACGGGCAA.1 \n##       CD4 Naive T         CD14 Mono                NK         CD14 Mono \n##  GCCAAATGATCGTG.1  GCCAAATGCGTACA.1  GCCAAATGGTTGAC.1  GCCAACCTAACGAA.1 \n##      CD4 Memory T         CD16 Mono         CD14 Mono         CD14 Mono \n##  GCCAACCTCTTCGC.1  GCCAACCTGTTCTT.1  GCCAACCTTCCTTA.1  GCCAACCTTGCTTT.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono         CD14 Mono \n##  GCCACGGAACGTTG.1  GCCACGGAAGCGTT.1  GCCACGGACATGGT.1  GCCACGGACGAATC.1 \n##         CD16 Mono       T activated         CD14 Mono         CD14 Mono \n##  GCCACGGACGATAC.1  GCCACGGACTGTCC.1  GCCACGGAGGATCT.1  GCCACTACAGCCAT.1 \n##       CD4 Naive T       T activated         CD14 Mono         CD16 Mono \n##  GCCACTACCCATAG.1  GCCACTACGCGAGA.1  GCCACTACTTACCT.1  GCCACTACTTTACC.1 \n##         CD16 Mono                NK       CD4 Naive T         CD16 Mono \n##  GCCATCACAGGAGC.1  GCCATCACTATGGC.1  GCCATGCTCTCCCA.1  GCCCAACTACTGGT.1 \n##                Mk         CD16 Mono         CD14 Mono         CD14 Mono \n##  GCCCAACTTGCTTT.1  GCCCAGGAAGTCTG.1  GCCCAGGACTAGTG.1  GCCCAGGAGAAGGC.1 \n##             CD8 T       B Activated                DC      CD4 Memory T \n##  GCCCAGGAGGATCT.1  GCCCAGGATGAGCT.1  GCCCATACACTTTC.1  GCCCATACTGATGC.1 \n##       CD4 Naive T                NK                 B         CD14 Mono \n##  GCCGACGACCACCT.1  GCCGACGATAACCG.1  GCCGACGATACTCT.1  GCCGACGATGGTCA.1 \n##         CD16 Mono                DC                 B         CD14 Mono \n##  GCCGACGATTCCAT.1  GCCGAGTGACAGTC.1  GCCGAGTGCTGAGT.1  GCCGAGTGGCTCCT.1 \n##             CD8 T       CD4 Naive T         CD14 Mono         CD16 Mono \n##  GCCGAGTGGTTCTT.1  GCCGAGTGGTTTGG.1  GCCGAGTGTGCCCT.1  GCCGGAACAATGCC.1 \n##             CD8 T         CD14 Mono             CD8 T       B Activated \n##  GCCGGAACACCAGT.1  GCCGGAACCTACTT.1  GCCGGAACGTCTTT.1  GCCGGAACTTCGTT.1 \n##         CD14 Mono         CD14 Mono             CD8 T         CD14 Mono \n##  GCCGTACTAACCTG.1  GCCGTACTCAGTTG.1  GCCGTACTCCACCT.1  GCCGTACTCCGATA.1 \n##         CD16 Mono                NK                 B      CD4 Memory T \n##  GCCGTACTTGTGGT.1  GCCTACACATAAGG.1  GCCTACACCCCGTT.1  GCCTACACGAATGA.1 \n##                 B       CD4 Naive T         CD14 Mono         CD14 Mono \n##  GCCTACACTGTCTT.1  GCCTAGCTACCAGT.1  GCCTAGCTCCACCT.1  GCCTAGCTCCATAG.1 \n##         CD14 Mono         CD14 Mono         CD16 Mono         CD14 Mono \n##  GCCTAGCTGCATCA.1  GCCTAGCTGTCGTA.1  GCCTAGCTTGCCTC.1  GCCTCAACCCCTCA.1 \n##                 B       CD4 Naive T         CD14 Mono         CD16 Mono \n##  GCCTCAACCCTCCA.1  GCCTCAACGGGATG.1  GCCTCAACTCTAGG.1  GCCTCATGAAGAGT.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono         CD14 Mono \n##  GCCTCATGCCTGTC.1  GCCTCATGCGGGAA.1  GCCTCATGGTCCTC.1  GCCTCATGTAAGGA.1 \n##       T activated         CD14 Mono       B Activated      CD4 Memory T \n##  GCCTCATGTGCGTA.1  GCCTGACTCCTTCG.1  GCCTGACTCGTGTA.1  GCCTGACTTAAGCC.1 \n##       CD4 Naive T         CD14 Mono                 B       CD4 Naive T \n##  GCCTGACTTAGTCG.1  GCGAAGGACTAGTG.1  GCGAAGGACTGAAC.1  GCGAAGGAGAGGGT.1 \n##         CD16 Mono         CD14 Mono         CD14 Mono         CD16 Mono \n##  GCGAAGGAGGTAAA.1  GCGAAGGAGGTTAC.1  GCGAAGGATCTCCG.1  GCGACTCTAGAGGC.1 \n##         CD14 Mono      CD4 Memory T       CD4 Naive T                DC \n##  GCGACTCTAGTGTC.1  GCGACTCTTCGACA.1  GCGAGAGAAGTCAC.1  GCGAGAGAAGTGCT.1 \n##         CD14 Mono         CD14 Mono                 B                NK \n##  GCGAGAGAGAACTC.1  GCGAGAGATGCTGA.1  GCGAGCACAGTCAC.1  GCGAGCACGGTAGG.1 \n##             CD8 T         CD16 Mono                NK       T activated \n##  GCGCACGAGGTGAG.1  GCGCACGATTCACT.1  GCGCATCTACACGT.1  GCGCATCTACGGTT.1 \n##             CD8 T       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  GCGCATCTCCCTTG.1  GCGCATCTCGTACA.1  GCGCATCTGCTGTA.1  GCGCGAACAACAGA.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T       B Activated \n##  GCGCGAACTGTCAG.1  GCGCGAACTTCGGA.1  GCGCGATGCAGAAA.1  GCGCGATGTAAGGA.1 \n##         CD16 Mono                Mk       CD4 Naive T         CD14 Mono \n##  GCGCGATGTAGAAG.1  GCGGACTGATACCG.1  GCGGACTGCCAACA.1  GCGGACTGGAAGGC.1 \n##         CD14 Mono                NK         CD14 Mono       CD4 Naive T \n##  GCGGACTGGTCACA.1  GCGGAGCTCTCCCA.1  GCGGAGCTGGCATT.1  GCGGAGCTTATGGC.1 \n##         CD14 Mono                 B       CD4 Naive T       CD4 Naive T \n##  GCGGAGCTTTACTC.1  GCGGAGCTTTTCTG.1  GCGGCAACCGACTA.1  GCGGGACTGGACAG.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T                NK \n##  GCGGGACTGTCCTC.1  GCGGGACTTCCTGC.1  GCGTAAACATTTCC.1  GCGTAAACCAAAGA.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T             CD8 T \n##  GCGTAAACCACAAC.1  GCGTAAACTCTTTG.1  GCGTAATGCACTAG.1  GCGTAATGCGTTGA.1 \n##      CD4 Memory T         CD14 Mono         CD16 Mono      CD4 Memory T \n##  GCGTAATGTATCTC.1  GCGTAATGTGGCAT.1  GCGTACCTCGGGAA.1  GCGTACCTTATCGG.1 \n##                DC         CD14 Mono         CD16 Mono         CD14 Mono \n##  GCGTACCTTGCAAC.1  GCGTACCTTGCATG.1  GCGTATGACGAACT.1  GCGTATGATCCGAA.1 \n##                DC         CD14 Mono       CD4 Naive T      CD4 Memory T \n##  GCGTATGATGAGAA.1  GCGTATGATTGGCA.1  GCTACAGAGTCGAT.1  GCTACAGATTCAGG.1 \n##         CD14 Mono                NK         CD16 Mono         CD14 Mono \n##  GCTACAGATTCGTT.1  GCTACCTGTCCTCG.1  GCTACGCTTGGTAC.1  GCTAGAACACGACT.1 \n##       CD4 Naive T         CD14 Mono         CD16 Mono       CD4 Naive T \n##  GCTAGAACCAATCG.1  GCTAGAACGAACTC.1  GCTAGAACTCGACA.1  GCTAGAACTCGCAA.1 \n##      CD4 Memory T         CD14 Mono         CD16 Mono         CD14 Mono \n##  GCTAGATGCGCAAT.1  GCTAGATGCTTCGC.1  GCTAGATGGCCATA.1  GCTAGATGTGAGCT.1 \n##       B Activated             CD8 T         CD14 Mono       CD4 Naive T \n##  GCTAGATGTGGTGT.1  GCTAGATGTGGTTG.1  GCTATACTAAAGTG.1  GCTATACTATCGTG.1 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono             CD8 T \n##  GCTATACTCATTCT.1  GCTATACTGCCATA.1  GCTATACTGGAGCA.1  GCTATACTTTGACG.1 \n##       T activated         CD14 Mono                NK                 B \n##  GCTATACTTTGCGA.1  GCTCAAGAGGACAG.1  GCTCAAGAGTGAGG.1  GCTCAAGAGTGTCA.1 \n##                DC         CD16 Mono       B Activated         CD16 Mono \n##  GCTCAAGATATCGG.1  GCTCACTGCAAAGA.1  GCTCACTGCCTTAT.1  GCTCACTGGGGAGT.1 \n##      CD4 Memory T      CD4 Memory T         CD16 Mono         CD14 Mono \n##  GCTCAGCTAAACAG.1  GCTCAGCTATTCGG.1  GCTCAGCTGAGGCA.1  GCTCAGCTGGCATT.1 \n##       B Activated         CD14 Mono         CD14 Mono                 B \n##  GCTCAGCTGTTACG.1  GCTCAGCTTGTCAG.1  GCTCAGCTTTCGTT.1  GCTCAGCTTTCTTG.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T       T activated \n##  GCTCCATGACGTAC.1  GCTCCATGCCTCGT.1  GCTCCATGTCTACT.1  GCTCCATGTTGCGA.1 \n##         CD14 Mono         CD14 Mono                NK         CD14 Mono \n##  GCTCGACTACACCA.1  GCTGATGAAGTACC.1  GCTGATGAATCTCT.1  GCTGATGACTCAAG.1 \n##         CD14 Mono                DC         CD14 Mono       CD4 Naive T \n##  GCTGATGATAGACC.1  GCTTAACTACCTAG.1  GCTTAACTCCTTGC.1  GCTTAACTGGAAAT.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono      CD4 Memory T \n##  GCTTAACTTCAGTG.1  GCTTGAGAGTACCA.1  GCTTGAGAGTTAGC.1  GCTTGAGATAGTCG.1 \n##       B Activated      CD4 Memory T         CD14 Mono         CD14 Mono \n##  GGAACACTACCAGT.1  GGAACACTAGGCGA.1  GGAACACTCCGTAA.1  GGAACACTCTTACT.1 \n##         CD14 Mono                 B         CD14 Mono         CD14 Mono \n##  GGAACACTGAACCT.1  GGAACACTTCTCAT.1  GGAACTACACCATG.1  GGAACTTGCCCAAA.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono             Eryth \n##  GGAACTTGCGTGTA.1  GGAACTTGCTCCCA.1  GGAACTTGGGTCAT.1  GGAACTTGTTCATC.1 \n##         CD14 Mono                DC       T activated      CD4 Memory T \n##  GGAAGGTGGACGGA.1  GGAAGGTGTCGACA.1  GGAAGGTGTGCACA.1  GGAATGCTACCTGA.1 \n##                NK                Mk       CD4 Naive T         CD14 Mono \n##  GGAATGCTCGATAC.1  GGAATGCTCGGTAT.1  GGAATGCTGACAGG.1  GGAATGCTGCAGTT.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono         CD14 Mono \n##  GGAATGCTGGCATT.1  GGACAACTCCGCTT.1  GGACAACTTTCTCA.1  GGACAGGACCCAAA.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T         CD14 Mono \n##  GGACAGGACTAGTG.1  GGACAGGACTGCAA.1  GGACAGGATCTTTG.1  GGACATTGATGCTG.1 \n##         CD14 Mono                 B       CD4 Naive T                NK \n##  GGACATTGTATTCC.1  GGACCCGACCGTTC.1  GGACCCGAGCTTCC.1  GGACCCGAGTCAAC.1 \n##         CD16 Mono         CD14 Mono      CD4 Memory T       CD4 Naive T \n##  GGACCCGATCCTAT.1  GGACCCGATGGAAA.1  GGACCGTGAAAGTG.1  GGACCGTGACTTTC.1 \n##         CD14 Mono      CD4 Memory T      CD4 Memory T       T activated \n##  GGACCGTGCAAAGA.1  GGACCGTGCATTTC.1  GGACCGTGCCAATG.1  GGACCGTGGACGGA.1 \n##         CD14 Mono       T activated      CD4 Memory T         CD16 Mono \n##  GGACCGTGGCCTTC.1  GGACCTCTCACCAA.1  GGACCTCTGTTGTG.1  GGACCTCTTCAGAC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  GGACCTCTTCGTTT.1  GGACCTCTTTGACG.1  GGACGAGAAAGGGC.1  GGACGAGACTTGCC.1 \n##         CD14 Mono         CD16 Mono         CD14 Mono      CD4 Memory T \n##  GGACGAGAGCATAC.1  GGACGCACAAGATG.1  GGACGCACACGTGT.1  GGACGCACACTACG.1 \n##                DC      CD4 Memory T      CD4 Memory T             CD8 T \n##  GGACGCACCATGAC.1  GGACGCACTAACCG.1  GGACGCTGAGTACC.1  GGACGCTGGGTATC.1 \n##                 B       B Activated                DC         CD14 Mono \n##  GGACTATGAAGGTA.1  GGACTATGCTCTAT.1  GGACTATGTACAGC.1  GGAGACGAGTCAAC.1 \n##                NK      CD4 Memory T         CD14 Mono       B Activated \n##  GGAGAGACCGCAAT.1  GGAGAGACGTGTTG.1  GGAGAGACGTTGGT.1  GGAGAGACTCGTGA.1 \n##                 B         CD14 Mono                NK                DC \n##  GGAGAGACTGATGC.1  GGAGCAGACCATGA.1  GGAGCAGAGGGTGA.1  GGAGCAGAGTAAAG.1 \n##         CD16 Mono                 B       B Activated       T activated \n##  GGAGCAGATAGCCA.1  GGAGCAGATGTAGC.1  GGAGCCACAAGGTA.1  GGAGCCACAGAGAT.1 \n##                 B                NK      CD4 Memory T       T activated \n##  GGAGCCACCTATGG.1  GGAGCCACGAACCT.1  GGAGCCACGTCGTA.1  GGAGCCACTTTGCT.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono             CD8 T \n##  GGAGCGCTACACTG.1  GGAGCGCTCCACCT.1  GGAGCGCTGTCGAT.1  GGAGCGCTTCTCGC.1 \n##         CD14 Mono         CD14 Mono       T activated             CD8 T \n##  GGAGGATGGATAGA.1  GGAGGCCTCACTCC.1  GGAGGCCTCATGCA.1  GGAGGCCTCCGATA.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T         CD16 Mono \n##  GGAGGCCTGGAGGT.1  GGAGGCCTTGAGCT.1  GGAGGTGACACACA.1  GGAGGTGAGGCGAA.1 \n##         CD14 Mono       CD4 Naive T                 B       CD4 Naive T \n##  GGAGGTGATTGACG.1  GGAGTTACTCCCGT.1  GGAGTTACTTTGTC.1  GGAGTTTGAACCTG.1 \n##         CD14 Mono                 B         CD14 Mono             CD8 T \n##  GGAGTTTGAAGATG.1  GGAGTTTGTGTCCC.1  GGATACTGCTTAGG.1  GGATACTGGAGCTT.1 \n##         CD14 Mono       CD4 Naive T             CD8 T         CD14 Mono \n##  GGATACTGGGACAG.1  GGATAGCTCAGTCA.1  GGATAGCTCTTGGA.1  GGATAGCTGTATCG.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD16 Mono \n##  GGATAGCTTCCTGC.1  GGATAGCTTGAGGG.1  GGATGTACCCCTCA.1  GGATGTACCTGTAG.1 \n##         CD14 Mono       CD4 Naive T      CD4 Memory T                 B \n##  GGATGTACGATAAG.1  GGATGTACGTTTGG.1  GGATGTACTGATGC.1  GGATGTTGACTGGT.1 \n##       CD4 Naive T             CD8 T         CD16 Mono      CD4 Memory T \n##  GGATGTTGAGTCTG.1  GGATGTTGCGGAGA.1  GGATGTTGGGAAGC.1  GGATGTTGGGGATG.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono       CD4 Naive T \n##  GGATTGTGAACGTC.1  GGATTGTGACGGGA.1  GGATTGTGGCTTCC.1  GGATTGTGGTGCAT.1 \n##               pDC      CD4 Memory T         CD14 Mono         CD14 Mono \n##  GGATTGTGTGCTCC.1  GGATTTCTCCCGTT.1  GGATTTCTCTCTTA.1  GGATTTCTGGTTCA.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  GGATTTCTTGGAGG.1  GGATTTCTTTTCTG.1  GGCAAGGAACACTG.1  GGCAATACACCTAG.1 \n##      CD4 Memory T         CD14 Mono      CD4 Memory T      CD4 Memory T \n##  GGCAATACGGGAGT.1  GGCAATACTTCGTT.1  GGCACGTGCACTAG.1  GGCACGTGCCGATA.1 \n##       T activated       CD4 Naive T                 B      CD4 Memory T \n##  GGCACGTGGGTAAA.1  GGCACTCTAGCTAC.1  GGCACTCTCACTGA.1  GGCACTCTCTGGAT.1 \n##             Eryth                NK      CD4 Memory T         CD14 Mono \n##  GGCACTCTGCAGTT.1  GGCACTCTTTCACT.1  GGCATATGGGGACA.1  GGCCACGAACGGGA.1 \n##         CD14 Mono                 B      CD4 Memory T         CD14 Mono \n##  GGCCACGAATGTGC.1  GGCCACGACACTCC.1  GGCCACGAGAGGGT.1  GGCCACGATAACGC.1 \n##      CD4 Memory T                NK         CD14 Mono                DC \n##  GGCCAGACAAGTGA.1  GGCCAGACATCTTC.1  GGCCAGACCGAGAG.1  GGCCAGACCGAGTT.1 \n##         CD14 Mono                DC         CD14 Mono         CD14 Mono \n##  GGCCAGACGCTGAT.1  GGCCAGACGTTAGC.1  GGCCAGACGTTTGG.1  GGCCAGACTCTAGG.1 \n##         CD14 Mono                 B         CD14 Mono       CD4 Naive T \n##  GGCCCAGATCGCTC.1  GGCCCAGATGCTTT.1  GGCCGAACCAGAGG.1  GGCCGAACCTGACA.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  GGCCGAACGCTGAT.1  GGCCGAACGTACGT.1  GGCCGATGCCACAA.1  GGCCGATGCCGTTC.1 \n##                NK         CD14 Mono         CD14 Mono         CD14 Mono \n##  GGCCGATGTCGACA.1  GGCGACACCACTTT.1  GGCGACACCTTAGG.1  GGCGACACGGTAGG.1 \n##             CD8 T         CD16 Mono             CD8 T                NK \n##  GGCGACACTGATGC.1  GGCGACACTTTGGG.1  GGCGACTGAACCTG.1  GGCGACTGAACTGC.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono         CD14 Mono \n##  GGCGACTGCTATGG.1  GGCGACTGTGCATG.1  GGCGCATGACTCAG.1  GGCGCATGACTTTC.1 \n##         CD14 Mono             CD8 T         CD14 Mono         CD16 Mono \n##  GGCGCATGCCTTGC.1  GGCGCATGCGTTAG.1  GGCGCATGCTTATC.1  GGCGCATGGCAAGG.1 \n##         CD14 Mono       B Activated                DC                NK \n##  GGCGGACTCATGGT.1  GGCGGACTGAACCT.1  GGCGGACTTGAGCT.1  GGCGGACTTTCATC.1 \n##       CD4 Naive T         CD16 Mono         CD14 Mono         CD14 Mono \n##  GGCTAAACACACGT.1  GGCTAAACCACTAG.1  GGCTAAACGGTTTG.1  GGCTAAACGTATGC.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T       T activated \n##  GGCTAAACTTCTGT.1  GGCTAATGATTTCC.1  GGCTAATGCTGATG.1  GGCTAATGGAACTC.1 \n##       CD4 Naive T                NK                 B       CD4 Naive T \n##  GGCTAATGGCTACA.1  GGCTAATGTCTCAT.1  GGCTAATGTTTGGG.1  GGCTACCTAGGCGA.1 \n##       CD4 Naive T         CD14 Mono                NK       CD4 Naive T \n##  GGCTACCTATCGAC.1  GGCTACCTATGTCG.1  GGCTACCTCTCGAA.1  GGCTACCTGGACGA.1 \n##      CD4 Memory T                NK         CD14 Mono      CD4 Memory T \n##  GGCTACCTTCGCCT.1  GGCTACCTTGCTCC.1  GGCTACCTTTCCGC.1  GGCTCACTCAGATC.1 \n##         CD16 Mono      CD4 Memory T         CD14 Mono      CD4 Memory T \n##  GGCTCACTCTGGTA.1  GGCTCACTGTGTTG.1  GGCTCACTTCCCGT.1  GGGAACGAACAGCT.1 \n##                Mk      CD4 Memory T                NK         CD14 Mono \n##  GGGAACGAAGGGTG.1  GGGAACGAGAGGTG.1  GGGAACGAGGTGGA.1  GGGAACGATGCTGA.1 \n##      CD4 Memory T                 B             CD8 T         CD14 Mono \n##  GGGAACGATTATCC.1  GGGAAGACAGTTCG.1  GGGAAGACGCTACA.1  GGGAAGACTCCCGT.1 \n##             CD8 T                Mk         CD14 Mono       CD4 Naive T \n##  GGGAAGACTCTTTG.1  GGGAAGTGCAGAAA.1  GGGAAGTGCTTCTA.1  GGGACCACACCCTC.1 \n##       CD4 Naive T             CD8 T       B Activated         CD14 Mono \n##  GGGACCACAGGAGC.1  GGGACCACCAAGCT.1  GGGACCACGAGACG.1  GGGACCACTCAAGC.1 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono               pDC \n##  GGGACCTGGAGACG.1  GGGACCTGTTGTGG.1  GGGATGGAACTGTG.1  GGGATGGAAGGAGC.1 \n##             CD8 T       CD4 Naive T      CD4 Memory T         CD14 Mono \n##  GGGATGGAATGGTC.1  GGGATGGACAAGCT.1  GGGATGGATAAAGG.1  GGGATGGATCTATC.1 \n##         CD14 Mono       T activated       CD4 Naive T                 B \n##  GGGATGGATGCCCT.1  GGGATGGATGTAGC.1  GGGATTACCACTTT.1  GGGATTACCTCCCA.1 \n##       CD4 Naive T         CD14 Mono       T activated             CD8 T \n##  GGGATTACGGTTAC.1  GGGATTACTTGTGG.1  GGGCAAGAGCTGAT.1  GGGCAAGAGCTGTA.1 \n##         CD14 Mono               pDC         CD14 Mono         CD14 Mono \n##  GGGCACACACTTTC.1  GGGCACACATGTCG.1  GGGCACACCAGAGG.1  GGGCACACCGTAGT.1 \n##                Mk         CD14 Mono                DC      CD4 Memory T \n##  GGGCACACGTTCGA.1  GGGCACACTGGAAA.1  GGGCAGCTCACTAG.1  GGGCAGCTCATGAC.1 \n##      CD4 Memory T                 B       CD4 Naive T       B Activated \n##  GGGCAGCTGTCGTA.1  GGGCAGCTTGTCGA.1  GGGCCAACCTTGCC.1  GGGCCAACGCAAGG.1 \n##                 B                 B         CD14 Mono      CD4 Memory T \n##  GGGCCAACGGTCTA.1  GGGCCAACTCTTTG.1  GGGCCAACTTCCGC.1  GGGCCAACTTCTGT.1 \n##       T activated         CD14 Mono                 B         CD14 Mono \n##  GGGCCATGAAGGGC.1  GGGCCATGCCGAAT.1  GGGCCATGCCTTGC.1  GGGCCATGCGCAAT.1 \n##         CD14 Mono         CD14 Mono               pDC         CD16 Mono \n##  GGGCCATGCTACTT.1  GGGCCATGGGTATC.1  GGGCCATGTTCTCA.1  GGGTAACTACACCA.1 \n##       CD4 Naive T                 B       CD4 Naive T         CD14 Mono \n##  GGGTAACTATCACG.1  GGGTAACTATGTCG.1  GGGTAACTCCTACC.1  GGGTAACTCGTCTC.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono         CD14 Mono \n##  GGGTAACTGTTTCT.1  GGGTTAACACCTCC.1  GGGTTAACAGAAGT.1  GGGTTAACGGGAGT.1 \n##         CD14 Mono         CD14 Mono             CD8 T       T activated \n##  GGGTTAACTTCTGT.1  GGGTTATGGCCTTC.1  GGGTTATGGGAAGC.1  GGGTTATGTCTCTA.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  GGTAAAGACACTTT.1  GGTAAAGAGTCATG.1  GGTACAACAGACTC.1  GGTACAACGGAACG.1 \n##         CD14 Mono         CD14 Mono             CD8 T                 B \n##  GGTACAACTCACCC.1  GGTACAACTCTAGG.1  GGTACATGCCTCGT.1  GGTACATGCTATGG.1 \n##      CD4 Memory T         CD14 Mono       T activated                NK \n##  GGTACTGAACGCAT.1  GGTACTGAACGGGA.1  GGTACTGAATGACC.1  GGTACTGACGCAAT.1 \n##         CD16 Mono       CD4 Naive T       B Activated         CD14 Mono \n##  GGTACTGAGGTGTT.1  GGTACTGATCCCAC.1  GGTACTGATCGACA.1  GGTAGTACAACCTG.1 \n##       CD4 Naive T         CD14 Mono             Eryth         CD14 Mono \n##  GGTAGTACCGTAAC.1  GGTATCGAAGCAAA.1  GGTATCGACACTTT.1  GGTATCGAGAGGTG.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono         CD14 Mono \n##  GGTATCGAGGTCTA.1  GGTATGACAGATGA.1  GGTATGACTGACTG.1  GGTCAAACGGGATG.1 \n##      CD4 Memory T         CD14 Mono       CD4 Naive T         CD14 Mono \n##  GGTCAAACTCCAGA.1  GGTCTAGACAAGCT.1  GGTCTAGACCCAAA.1  GGTCTAGAGCTAAC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono                 B \n##  GGTCTAGAGTCCTC.1  GGTCTAGATGTAGC.1  GGTGATACAGAGTA.1  GGTGATACCAATCG.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T                NK \n##  GGTGATACCTTGCC.1  GGTGATACGAGCTT.1  GGTGATACGAGGCA.1  GGTGGAGAGAGGCA.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono         CD14 Mono \n##  GGTGGAGAGGAACG.1  GGTGGAGAGTTGGT.1  GGTTGAACAAGGGC.1  GGTTGAACCATGCA.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono         CD14 Mono \n##  GGTTGAACTAGCCA.1  GGTTGAACTCTTAC.1  GGTTGAACTGACTG.1  GGTTGAACTGCTGA.1 \n##       CD4 Naive T                DC         CD14 Mono                NK \n##  GGTTGAACTGGTCA.1  GGTTGAACTGTGCA.1  GGTTTACTAAGCCT.1  GGTTTACTCTCCAC.1 \n##         CD14 Mono      CD4 Memory T      CD4 Memory T       CD4 Naive T \n##  GGTTTACTCTCGCT.1  GGTTTACTGAACCT.1  GGTTTACTGACTAC.1  GGTTTACTGATGAA.1 \n##       T activated       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  GTAACGTGAACCAC.1  GTAACGTGCTTCTA.1  GTAACGTGGGTAAA.1  GTAACGTGGTCGTA.1 \n##       CD4 Naive T       CD4 Naive T         CD16 Mono         CD14 Mono \n##  GTAACGTGTCTAGG.1  GTAAGCACAGAACA.1  GTAAGCACCTAGTG.1  GTAAGCACTGTTTC.1 \n##                NK                 B         CD14 Mono       T activated \n##  GTAAGCTGAGTTCG.1  GTAAGCTGTCAGAC.1  GTAATAACCCTCCA.1  GTAATAACGAGACG.1 \n##             CD8 T       CD4 Naive T         CD14 Mono                 B \n##  GTAATAACTATGGC.1  GTAATAACTGGTTG.1  GTAATATGAAAACG.1  GTAATATGAAGAAC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono      CD4 Memory T \n##  GTAATATGTCCTTA.1  GTAATATGTTTGGG.1  GTACAGTGACCCAA.1  GTACAGTGGAACTC.1 \n##         CD14 Mono         CD16 Mono         CD16 Mono      CD4 Memory T \n##  GTACAGTGGCCAAT.1  GTACAGTGGCTTAG.1  GTACCCTGGAGCAG.1  GTACCCTGGGTTCA.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono                 B \n##  GTACCCTGGTAAGA.1  GTACCCTGTCGCTC.1  GTACCCTGTGACCA.1  GTACCCTGTTCGTT.1 \n##             CD8 T       B Activated         CD14 Mono         CD16 Mono \n##  GTACGAACACCTAG.1  GTACGAACCAAGCT.1  GTACGAACTCAGAC.1  GTACGTGACAATCG.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono                 B \n##  GTACGTGACTAGCA.1  GTACGTGAGCATAC.1  GTACGTGAGTTGTG.1  GTACTACTAAACAG.1 \n##         CD14 Mono         CD14 Mono             CD8 T                 B \n##  GTACTACTCATACG.1  GTACTACTCCTCCA.1  GTACTACTTAAAGG.1  GTACTTTGAAGGTA.1 \n##         CD16 Mono         CD14 Mono                DC       CD4 Naive T \n##  GTACTTTGCCACCT.1  GTACTTTGCCGTAA.1  GTACTTTGTCTAGG.1  GTACTTTGTGCGTA.1 \n##       T activated             CD8 T       CD4 Naive T               pDC \n##  GTACTTTGTGCTGA.1  GTAGACTGCCAACA.1  GTAGACTGCTACCC.1  GTAGCAACACACCA.1 \n##       CD4 Naive T      CD4 Memory T       CD4 Naive T         CD14 Mono \n##  GTAGCAACACCTTT.1  GTAGCAACAGTGCT.1  GTAGCAACGAATAG.1  GTAGCAACGTTTCT.1 \n##                 B         CD14 Mono       T activated         CD16 Mono \n##  GTAGCAACTCCTAT.1  GTAGCAACTCTCAT.1  GTAGCATGATCTTC.1  GTAGCATGGGACAG.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T      CD4 Memory T \n##  GTAGCATGTCGACA.1  GTAGCCCTATCTCT.1  GTAGCCCTTACGCA.1  GTAGCTGAGCGTTA.1 \n##       CD4 Naive T             CD8 T       CD4 Naive T         CD14 Mono \n##  GTAGCTGAGGCGAA.1  GTAGCTGATATTCC.1  GTAGGTACAACGTC.1  GTAGGTACAATCGC.1 \n##      CD4 Memory T         CD16 Mono         CD16 Mono         CD14 Mono \n##  GTAGGTACAGTGCT.1  GTAGGTACCCAATG.1  GTAGGTACCCCGTT.1  GTAGGTACCCCTCA.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono         CD14 Mono \n##  GTAGGTACCTCATT.1  GTAGGTACGTCACA.1  GTAGGTACGTCGAT.1  GTAGGTACTCAGAC.1 \n##      CD4 Memory T         CD14 Mono                 B       CD4 Naive T \n##  GTAGGTACTTCCCG.1  GTAGTCGAAGTGCT.1  GTAGTCGAGCTGAT.1  GTAGTCGATCAGAC.1 \n##                NK       T activated         CD14 Mono       CD4 Naive T \n##  GTAGTGACGCCATA.1  GTAGTGACGTATCG.1  GTAGTGACTGACCA.1  GTAGTGTGATCAGC.1 \n##         CD16 Mono         CD16 Mono         CD14 Mono      CD4 Memory T \n##  GTAGTGTGGGTCAT.1  GTAGTGTGGTTTCT.1  GTAGTGTGGTTTGG.1  GTAGTGTGTCCAGA.1 \n##       CD4 Naive T                 B       B Activated         CD16 Mono \n##  GTAGTGTGTGCCTC.1  GTAGTGTGTTATCC.1  GTAGTGTGTTCGTT.1  GTATCACTACCTTT.1 \n##                 B         CD14 Mono             CD8 T         CD14 Mono \n##  GTATCACTAGTAGA.1  GTATCACTATCTTC.1  GTATCACTCCAACA.1  GTATCTACCCTGTC.1 \n##       CD4 Naive T         CD14 Mono      CD4 Memory T      CD4 Memory T \n##  GTATCTACCGAGTT.1  GTATGGTGACACAC.1  GTATGGTGAGAGTA.1  GTATGGTGCACTTT.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono             CD8 T \n##  GTATGGTGGTGAGG.1  GTATGGTGTTTCAC.1  GTATGGTGTTTCGT.1  GTATGGTGTTTGGG.1 \n##                NK                 B      CD4 Memory T         CD14 Mono \n##  GTATTAGACAACCA.1  GTATTAGACGCATA.1  GTATTAGAGCATAC.1  GTATTAGAGCGGAA.1 \n##      CD4 Memory T      CD4 Memory T       T activated         CD14 Mono \n##  GTATTCACAATGCC.1  GTATTCACGACGTT.1  GTATTCACGCTCCT.1  GTATTCACGGAGGT.1 \n##         CD14 Mono             CD8 T      CD4 Memory T             CD8 T \n##  GTATTCACTCACCC.1  GTCAACGAGAGGGT.1  GTCAACGAGATAAG.1  GTCAACGAGCAGAG.1 \n##         CD14 Mono                DC       CD4 Naive T      CD4 Memory T \n##  GTCAATCTCACTCC.1  GTCAATCTCCTCGT.1  GTCACAGACGGAGA.1  GTCACAGAGTATGC.1 \n##       CD4 Naive T       T activated         CD14 Mono       CD4 Naive T \n##  GTCACCTGAAAAGC.1  GTCACCTGAACGAA.1  GTCACCTGTGCTAG.1  GTCATACTGGTTAC.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono                Mk \n##  GTCATACTGTATGC.1  GTCATACTTAGAAG.1  GTCATACTTAGACC.1  GTCATACTTCCTAT.1 \n##       CD4 Naive T         CD14 Mono                 B      CD4 Memory T \n##  GTCCAAGATGAACC.1  GTCCAAGATGGCAT.1  GTCCACACAAGGCG.1  GTCCACACCGACTA.1 \n##         CD14 Mono       CD4 Naive T         CD16 Mono         CD14 Mono \n##  GTCCACACTACGAC.1  GTCCACACTCAGAC.1  GTCCACACTCCTGC.1  GTCCACTGCAGCTA.1 \n##         CD16 Mono         CD14 Mono      CD4 Memory T       T activated \n##  GTCCACTGCAGTCA.1  GTCCACTGCTTGAG.1  GTCCACTGTGCTAG.1  GTCCACTGTTCACT.1 \n##                 B       CD4 Naive T         CD16 Mono      CD4 Memory T \n##  GTCCACTGTTCGGA.1  GTCCAGCTAAGCCT.1  GTCCAGCTCTGTGA.1  GTCCAGCTGAATAG.1 \n##         CD14 Mono             CD8 T      CD4 Memory T       CD4 Naive T \n##  GTCCAGCTGTGTTG.1  GTCCAGCTTGTTTC.1  GTCCAGCTTTACTC.1  GTCCCATGAGTACC.1 \n##         CD14 Mono         CD16 Mono       T activated         CD14 Mono \n##  GTCCCATGCCGATA.1  GTCCCATGCTTGTT.1  GTCGAATGACGCAT.1  GTCGAATGATGCCA.1 \n##             CD8 T         CD14 Mono      CD4 Memory T         CD16 Mono \n##  GTCGAATGCTCTAT.1  GTCGAATGCTTCCG.1  GTCGAATGGGTCAT.1  GTCGACCTATTTCC.1 \n##         CD14 Mono       CD4 Naive T       B Activated                 B \n##  GTCGACCTCGCTAA.1  GTCGACCTGAAAGT.1  GTCGACCTGCATCA.1  GTCGACCTTCTCGC.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono         CD14 Mono \n##  GTCGCACTAGCGGA.1  GTCGCACTGCCTTC.1  GTCGCACTTCGTTT.1  GTCTAACTAGAATG.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  GTCTAACTAGGTTC.1  GTCTAACTCTACGA.1  GTCTAACTGACGAG.1  GTCTAACTTCAGGT.1 \n##       CD4 Naive T         CD14 Mono       T activated         CD16 Mono \n##  GTCTAGGACAACTG.1  GTCTAGGAGCAGAG.1  GTCTAGGATTGAGC.1  GTCTGAGACACCAA.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono       CD4 Naive T \n##  GTCTGAGACCTTCG.1  GTCTGAGAGACACT.1  GTCTGAGATGGGAG.1  GTCTGAGATGGTGT.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono         CD16 Mono \n##  GTGAACACACGTTG.1  GTGAACACGCCTTC.1  GTGAACACTACTTC.1  GTGACAACCACCAA.1 \n##         CD16 Mono         CD14 Mono       CD4 Naive T         CD14 Mono \n##  GTGACAACGGCAAG.1  GTGACAACTAGTCG.1  GTGACAACTTCATC.1  GTGACCCTACCTAG.1 \n##       CD4 Naive T      CD4 Memory T       CD4 Naive T         CD14 Mono \n##  GTGACCCTACTGTG.1  GTGACCCTAGAATG.1  GTGACCCTCGTTGA.1  GTGACCCTGTTCGA.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono         CD14 Mono \n##  GTGACCCTTAAGCC.1  GTGACCCTTCCAGA.1  GTGAGGGAAGGGTG.1  GTGAGGGACTAGTG.1 \n##                 B             CD8 T         CD14 Mono                DC \n##  GTGAGGGAGGAAGC.1  GTGAGGGAGGGATG.1  GTGAGGGATTGGTG.1  GTGATCGATGCTCC.1 \n##         CD16 Mono                DC         CD14 Mono         CD14 Mono \n##  GTGATGACCCATGA.1  GTGATGACTTCAGG.1  GTGATTCTAAAGTG.1  GTGATTCTCGCCTT.1 \n##       CD4 Naive T       CD4 Naive T       CD4 Naive T      CD4 Memory T \n##  GTGATTCTGTACGT.1  GTGATTCTTAGAAG.1  GTGCAAACAAGTAG.1  GTGCAAACCAGATC.1 \n##       CD4 Naive T       T activated                DC         CD14 Mono \n##  GTGCAAACTGAGGG.1  GTGCCACTTGCCCT.1  GTGCTAGAAACGAA.1  GTGCTAGAGTATCG.1 \n##         CD14 Mono             CD8 T                 B                NK \n##  GTGCTAGATTTGGG.1  GTGGAGGAGTCTTT.1  GTGGATTGAGAACA.1  GTGGATTGCCATGA.1 \n##       CD4 Naive T       T activated         CD14 Mono         CD14 Mono \n##  GTGGATTGGATAGA.1  GTGGATTGGGAGTG.1  GTGGTAACACAGTC.1  GTGGTAACCCCAAA.1 \n##       CD4 Naive T       B Activated       CD4 Naive T         CD14 Mono \n##  GTGGTAACGGATCT.1  GTGGTAACGTGAGG.1  GTGTACGAAAACGA.1  GTGTACGAAAGCCT.1 \n##       CD4 Naive T         CD16 Mono                 B       CD4 Naive T \n##  GTGTACGAACTCAG.1  GTGTACGACATGAC.1  GTGTACGACTAGTG.1  GTGTACGAGAACTC.1 \n##         CD14 Mono         CD14 Mono       B Activated         CD14 Mono \n##  GTGTACGATTGTGG.1  GTGTAGTGAACGTC.1  GTGTAGTGACTACG.1  GTGTAGTGGCAGTT.1 \n##         CD14 Mono       CD4 Naive T      CD4 Memory T                NK \n##  GTGTAGTGGTTGTG.1  GTGTAGTGTAGAGA.1  GTGTAGTGTTCTTG.1  GTGTATCTGCGTAT.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T             CD8 T \n##  GTGTATCTTGGTAC.1  GTGTATCTTTCGGA.1  GTGTCAGAATAAGG.1  GTGTCAGAATGCCA.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono       CD4 Naive T \n##  GTGTCAGAGGAGCA.1  GTGTCAGATCGCTC.1  GTGTGATGCTAAGC.1  GTGTGATGCTGAAC.1 \n##         CD14 Mono                Mk         CD14 Mono                 B \n##  GTGTGATGGTACCA.1  GTTAAAACCGGAGA.1  GTTAAAACCTCAAG.1  GTTAAAACGTAAAG.1 \n##                DC                Mk         CD16 Mono                NK \n##  GTTAAAACTAGCGT.1  GTTAAATGACTGTG.1  GTTAAATGATGTGC.1  GTTAAATGCGCCTT.1 \n##                Mk       B Activated                 B             CD8 T \n##  GTTAAATGCTTGAG.1  GTTAAATGGGTTCA.1  GTTAAATGGTATCG.1  GTTAAATGTATGGC.1 \n##         CD14 Mono                NK      CD4 Memory T      CD4 Memory T \n##  GTTAAATGTGGTGT.1  GTTAACCTCATTCT.1  GTTAACCTCGCAAT.1  GTTAACCTGTTTCT.1 \n##             CD8 T         CD14 Mono                NK         CD14 Mono \n##  GTTACGGAACTGGT.1  GTTACGGATTGCGA.1  GTTACTACACACAC.1  GTTACTACGGACAG.1 \n##         CD16 Mono                 B      CD4 Memory T                 B \n##  GTTAGGTGACAGCT.1  GTTAGGTGAGAGGC.1  GTTAGGTGCCTGAA.1  GTTAGGTGGAGGAC.1 \n##                NK         CD14 Mono         CD14 Mono       CD4 Naive T \n##  GTTAGGTGGCCATA.1  GTTAGGTGGGTGAG.1  GTTAGTCTAGGTCT.1  GTTAGTCTGGTGAG.1 \n##         CD14 Mono             CD8 T                 B       CD4 Naive T \n##  GTTATAGATATCTC.1  GTTATAGATCAGTG.1  GTTATAGATGCTCC.1  GTTATAGATTATCC.1 \n##                 B       T activated       CD4 Naive T         CD14 Mono \n##  GTTATAGATTGCAG.1  GTTATCTGCACTAG.1  GTTATCTGCTCTTA.1  GTTATCTGTCATTC.1 \n##         CD14 Mono                NK      CD4 Memory T       B Activated \n##  GTTATGCTTCAAGC.1  GTTATGCTTCGCAA.1  GTTCAACTACGCTA.1  GTTCAACTACTGTG.1 \n##      CD4 Memory T                 B       CD4 Naive T      CD4 Memory T \n##  GTTCAACTAGATCC.1  GTTCAACTCACCAA.1  GTTCAACTGACAAA.1  GTTCAACTTGCAGT.1 \n##       CD4 Naive T         CD14 Mono                Mk             CD8 T \n##  GTTCAACTTGCCAA.1  GTTCAGGAAGCTCA.1  GTTCAGGAGCTTCC.1  GTTCAGGAGTGCTA.1 \n##       T activated                Mk             CD8 T             CD8 T \n##  GTTCATACACACCA.1  GTTCATACACACGT.1  GTTCATACAGCTAC.1  GTTCATACCAGCTA.1 \n##         CD14 Mono       CD4 Naive T                NK         CD14 Mono \n##  GTTCATACCCCGTT.1  GTTCATACGTGTTG.1  GTTGACGAATCGAC.1  GTTGACGAGACTAC.1 \n##                 B      CD4 Memory T       T activated         CD14 Mono \n##  GTTGACGAGTCGTA.1  GTTGACGATTATCC.1  GTTGACGATTTCGT.1  GTTGAGTGAACAGA.1 \n##      CD4 Memory T       T activated       CD4 Naive T             CD8 T \n##  GTTGAGTGATTCCT.1  GTTGAGTGCAGAAA.1  GTTGAGTGTCAGTG.1  GTTGAGTGTGAGAA.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T                 B \n##  GTTGAGTGTGAGGG.1  GTTGAGTGTGGAGG.1  GTTGAGTGTTCATC.1  GTTGATCTACTTTC.1 \n##         CD14 Mono       T activated         CD14 Mono         CD14 Mono \n##  GTTGATCTAGCTCA.1  GTTGATCTCACCAA.1  GTTGGATGACAGCT.1  GTTGGATGCGCAAT.1 \n##         CD16 Mono       T activated                NK         CD16 Mono \n##  GTTGGATGTCACGA.1  GTTGGATGTCAGAC.1  GTTGGATGTGCTTT.1  GTTGTACTAAGTGA.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  GTTGTACTCACTGA.1  GTTTAAGACACTAG.1  GTTTAAGAGAATGA.1  GTTTAAGAGCGAGA.1 \n##       CD4 Naive T                Mk         CD16 Mono             CD8 T \n##  GTTTAAGAGGAAGC.1  GTTTAAGAGTCAAC.1  GTTTAAGATGCTTT.1  TAAACAACAAAAGC.1 \n##      CD4 Memory T         CD14 Mono       CD4 Naive T       T activated \n##  TAAACAACACCAGT.1  TAAACAACCCATGA.1  TAAACAACCGAGTT.1  TAAACAACTCTCGC.1 \n##             CD8 T         CD14 Mono         CD14 Mono                 B \n##  TAAAGACTCGCATA.1  TAAAGACTCTGTTT.1  TAAAGACTGGACAG.1  TAAAGACTGGGCAA.1 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono                 B \n##  TAAAGACTTTTGGG.1  TAAAGTTGAGTCGT.1  TAAAGTTGAGTTCG.1  TAAAGTTGATTGGC.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono         CD14 Mono \n##  TAAAGTTGTCAGGT.1  TAAAGTTGTCCGTC.1  TAAAGTTGTCGACA.1  TAAATCGAAACTGC.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono       CD4 Naive T \n##  TAAATCGAACCATG.1  TAAATCGAACCTGA.1  TAAATCGACCATAG.1  TAAATCGACTAAGC.1 \n##      CD4 Memory T      CD4 Memory T         CD14 Mono         CD14 Mono \n##  TAAATCGATACTGG.1  TAAATCGATCCCAC.1  TAAATCGATGCCTC.1  TAAATGTGAGGAGC.1 \n##                 B         CD14 Mono      CD4 Memory T      CD4 Memory T \n##  TAAATGTGCTCAGA.1  TAAATGTGCTTAGG.1  TAAATGTGTCCTGC.1  TAACAATGAGGTTC.1 \n##       T activated         CD14 Mono         CD16 Mono       CD4 Naive T \n##  TAACAATGCCTCCA.1  TAACAATGTAGTCG.1  TAACAATGTGGGAG.1  TAACACCTAAGATG.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T         CD14 Mono \n##  TAACACCTAGCAAA.1  TAACACCTGTCATG.1  TAACACCTTTGTGG.1  TAACATGACTCGAA.1 \n##         CD14 Mono             CD8 T                 B      CD4 Memory T \n##  TAACATGAGTCTAG.1  TAACATGATGCTTT.1  TAACCGGAATTCCT.1  TAACCGGACATGGT.1 \n##       CD4 Naive T         CD16 Mono         CD14 Mono                Mk \n##  TAACCGGACCGTAA.1  TAACCGGAGAGATA.1  TAACCGGAGAGGTG.1  TAACCGGAGGTTCA.1 \n##         CD14 Mono       T activated         CD14 Mono       CD4 Naive T \n##  TAACCGGATATCTC.1  TAACCGGATGAACC.1  TAACCGGATGACAC.1  TAACCGGATGTCCC.1 \n##       CD4 Naive T      CD4 Memory T                Mk         CD14 Mono \n##  TAACGTCTACCGAT.1  TAACGTCTCCTCAC.1  TAACGTCTCGCAAT.1  TAACTAGAAAAAGC.1 \n##         CD14 Mono      CD4 Memory T                 B                NK \n##  TAACTAGAGAGCTT.1  TAACTAGAGCCTTC.1  TAACTAGATCCTGC.1  TAACTAGATCGCCT.1 \n##         CD14 Mono      CD4 Memory T         CD16 Mono       B Activated \n##  TAACTAGATTAGGC.1  TAACTAGATTGCGA.1  TAACTCACACGCAT.1  TAACTCACAGTAGA.1 \n##      CD4 Memory T       CD4 Naive T       B Activated             CD8 T \n##  TAACTCACCATTTC.1  TAACTCACTACAGC.1  TAACTCACTTCCCG.1  TAAGAACTCTTAGG.1 \n##         CD14 Mono         CD16 Mono         CD14 Mono      CD4 Memory T \n##  TAAGAACTTCTCAT.1  TAAGAGGAATTGGC.1  TAAGAGGACCCTAC.1  TAAGAGGACCTCGT.1 \n##             CD8 T       CD4 Naive T       T activated       CD4 Naive T \n##  TAAGAGGAGTCGTA.1  TAAGAGGATGATGC.1  TAAGAGGATGCTAG.1  TAAGAGGATTGTGG.1 \n##         CD14 Mono         CD14 Mono       T activated       B Activated \n##  TAAGAGGATTTGTC.1  TAAGATACCCCTTG.1  TAAGATACCCTAAG.1  TAAGATACGAAACA.1 \n##         CD14 Mono         CD14 Mono                DC               pDC \n##  TAAGATACGAGCAG.1  TAAGATACTCACCC.1  TAAGATACTTGTCT.1  TAAGATTGGCGATT.1 \n##         CD16 Mono                 B                 B         CD14 Mono \n##  TAAGATTGGTGAGG.1  TAAGATTGTCTGGA.1  TAAGATTGTGGTTG.1  TAAGATTGTGTCGA.1 \n##         CD14 Mono             CD8 T         CD14 Mono         CD16 Mono \n##  TAAGCGTGATTGGC.1  TAAGCGTGCCTACC.1  TAAGCGTGCTGTTT.1  TAAGCGTGGTCACA.1 \n##         CD16 Mono       CD4 Naive T                Mk                Mk \n##  TAAGCTCTACTACG.1  TAAGCTCTCCTAAG.1  TAAGCTCTGCTAAC.1  TAAGGCTGAACTGC.1 \n##      CD4 Memory T                 B             CD8 T         CD14 Mono \n##  TAAGGCTGACCTGA.1  TAAGGCTGAGCATC.1  TAAGGCTGATGACC.1  TAAGGCTGTAGCCA.1 \n##         CD14 Mono      CD4 Memory T       CD4 Naive T       CD4 Naive T \n##  TAAGGGCTACCTGA.1  TAAGGGCTCATTGG.1  TAAGGGCTCTTCCG.1  TAAGGGCTGGTTAC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono       CD4 Naive T \n##  TAAGGGCTTAAGGA.1  TAAGTAACGGAGCA.1  TAAGTAACTCCAAG.1  TAAGTAACTGCTGA.1 \n##         CD14 Mono                 B       B Activated       CD4 Naive T \n##  TAAGTCCTCGAGTT.1  TAAGTCCTGTATGC.1  TAATCCACACAGCT.1  TAATCCACATGTGC.1 \n##         CD14 Mono      CD4 Memory T       CD4 Naive T         CD14 Mono \n##  TAATCCACCGTGAT.1  TAATCCACCTCTAT.1  TAATCCACGGTCTA.1  TAATCGCTACCATG.1 \n##       CD4 Naive T         CD14 Mono                NK             CD8 T \n##  TAATCGCTCGGGAA.1  TAATCGCTCTACCC.1  TAATCGCTGAGCTT.1  TAATCGCTGCGTTA.1 \n##         CD14 Mono         CD14 Mono                 B         CD14 Mono \n##  TAATCGCTTGGCAT.1  TAATGAACCAGTTG.1  TAATGAACCCTTAT.1  TAATGAACGGTCTA.1 \n##             CD8 T         CD14 Mono       T activated         CD14 Mono \n##  TAATGAACTCTAGG.1  TAATGATGATCGTG.1  TAATGATGGCTGAT.1  TAATGATGGGTGAG.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono             CD8 T \n##  TAATGCCTAGCTAC.1  TAATGCCTAGTCGT.1  TAATGCCTCAGAAA.1  TAATGCCTCATGGT.1 \n##                NK         CD16 Mono       CD4 Naive T       B Activated \n##  TAATGCCTCTGGAT.1  TAATGCCTGACGAG.1  TAATGCCTGCAGAG.1  TAATGTGAACGTAC.1 \n##         CD16 Mono         CD14 Mono         CD14 Mono         CD16 Mono \n##  TAATGTGACCCTCA.1  TAATGTGACCGTAA.1  TAATGTGAGCTTAG.1  TAATGTGAGGATCT.1 \n##      CD4 Memory T         CD14 Mono      CD4 Memory T             CD8 T \n##  TAATGTGATATTCC.1  TAATGTGATGACAC.1  TAATGTGATGAGCT.1  TACAAATGCGAACT.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono             CD8 T \n##  TACAAATGGTGCAT.1  TACAAATGTCAGTG.1  TACAAATGTGCTGA.1  TACAATGACTCAAG.1 \n##       CD4 Naive T       T activated                DC         CD14 Mono \n##  TACACACTAACAGA.1  TACACACTACCGAT.1  TACACACTATGTCG.1  TACACACTGGTTAC.1 \n##         CD14 Mono      CD4 Memory T      CD4 Memory T         CD14 Mono \n##  TACACACTTAACGC.1  TACACACTTGCTTT.1  TACACACTTTGCTT.1  TACATAGATGGTGT.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  TACATCACACACTG.1  TACATCACACGGGA.1  TACATCACCTGTAG.1  TACATCACCTTCGC.1 \n##       CD4 Naive T         CD14 Mono         CD16 Mono         CD16 Mono \n##  TACATCACGTTCAG.1  TACATCACTCTGGA.1  TACCATTGCGTTAG.1  TACCATTGCTTATC.1 \n##         CD14 Mono       CD4 Naive T                NK      CD4 Memory T \n##  TACCATTGGCTACA.1  TACCATTGTCGACA.1  TACCATTGTGCGTA.1  TACCATTGTGCTCC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono       CD4 Naive T \n##  TACCATTGTTATCC.1  TACCATTGTTGGCA.1  TACCGAGAACCCAA.1  TACCGAGACCTCAC.1 \n##         CD14 Mono       CD4 Naive T       T activated      CD4 Memory T \n##  TACCGAGATGTGAC.1  TACCGAGATTCTCA.1  TACCGCTGACAGCT.1  TACCGCTGGATAAG.1 \n##         CD16 Mono      CD4 Memory T                 B       CD4 Naive T \n##  TACCGCTGGGTCAT.1  TACCGCTGGTCGAT.1  TACCGCTGGTTGGT.1  TACCGCTGTCCCGT.1 \n##       T activated         CD16 Mono       CD4 Naive T       B Activated \n##  TACCGCTGTGAGCT.1  TACCGGCTAACGTC.1  TACCGGCTCCATGA.1  TACCGGCTCTCGCT.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono       CD4 Naive T \n##  TACCGGCTTAACGC.1  TACGACGAAACCGT.1  TACGACGAAACGGG.1  TACGAGACCACCAA.1 \n##                NK       CD4 Naive T         CD16 Mono         CD14 Mono \n##  TACGAGACCATACG.1  TACGAGACTCCAAG.1  TACGAGACTGGCAT.1  TACGAGACTGGTGT.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono      CD4 Memory T \n##  TACGAGTGACTAGC.1  TACGAGTGAGTGCT.1  TACGAGTGCGCCTT.1  TACGAGTGCTACGA.1 \n##      CD4 Memory T                Mk         CD14 Mono         CD14 Mono \n##  TACGAGTGCTCTCG.1  TACGAGTGTTATCC.1  TACGATCTAAGTGA.1  TACGATCTATAAGG.1 \n##       CD4 Naive T         CD16 Mono      CD4 Memory T         CD14 Mono \n##  TACGATCTCCAGTA.1  TACGATCTCGAGAG.1  TACGATCTCTATGG.1  TACGATCTGATAAG.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T         CD16 Mono \n##  TACGCAGAAGGTCT.1  TACGCAGAATGTGC.1  TACGCAGACTCATT.1  TACGCAGACTTGTT.1 \n##         CD14 Mono                Mk       CD4 Naive T       CD4 Naive T \n##  TACGCAGATGTCAG.1  TACGCCACAAGGGC.1  TACGCCACACGACT.1  TACGCCACGCGGAA.1 \n##         CD14 Mono                 B         CD14 Mono         CD14 Mono \n##  TACGCCACTGGCAT.1  TACGCCACTTCGTT.1  TACGCGCTACTCTT.1  TACGCGCTCTCCAC.1 \n##         CD14 Mono       CD4 Naive T      CD4 Memory T       B Activated \n##  TACGCGCTGTTAGC.1  TACGCGCTTCATTC.1  TACGCGCTTGCAAC.1  TACGGAACCGTGAT.1 \n##         CD14 Mono                 B       CD4 Naive T      CD4 Memory T \n##  TACGGAACGTGTCA.1  TACGGCCTTCCAGA.1  TACGTACTAGCGTT.1  TACGTACTATTTCC.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono             CD8 T \n##  TACGTACTCACTAG.1  TACGTTACCGAATC.1  TACGTTACTGTAGC.1  TACTAAGAAACGAA.1 \n##         CD14 Mono         CD14 Mono         CD16 Mono                 B \n##  TACTAAGAATCGTG.1  TACTAAGAGAGACG.1  TACTAAGATACGAC.1  TACTACACAAGGCG.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono         CD14 Mono \n##  TACTACACACCCTC.1  TACTACACCGATAC.1  TACTACACTACTCT.1  TACTACACTCACGA.1 \n##       T activated         CD14 Mono             CD8 T       CD4 Naive T \n##  TACTACACTGAACC.1  TACTACACTTCTTG.1  TACTACTGACTGTG.1  TACTACTGCGAATC.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono         CD14 Mono \n##  TACTACTGCGTGAT.1  TACTACTGTCAGGT.1  TACTACTGTGACAC.1  TACTCAACCTAGAC.1 \n##       T activated       CD4 Naive T         CD16 Mono      CD4 Memory T \n##  TACTCAACCTAGTG.1  TACTCCCTCACTAG.1  TACTCCCTGAAAGT.1  TACTCCCTTGGGAG.1 \n##      CD4 Memory T       T activated      CD4 Memory T         CD14 Mono \n##  TACTCTGACCCGTT.1  TACTCTGAGAACTC.1  TACTCTGAGAATCC.1  TACTCTGATCTTTG.1 \n##             CD8 T       B Activated       CD4 Naive T       CD4 Naive T \n##  TACTGGGAACTGGT.1  TACTGGGAGACGTT.1  TACTGGGAGCTACA.1  TACTGGGATTGAGC.1 \n##      CD4 Memory T       CD4 Naive T                NK                DC \n##  TACTGGGATTTCGT.1  TACTGTTGCCCTTG.1  TACTGTTGCGCTAA.1  TACTGTTGCTATGG.1 \n##       CD4 Naive T         CD14 Mono         CD16 Mono                NK \n##  TACTGTTGCTGAGT.1  TACTGTTGCTGCTC.1  TACTGTTGGTAAAG.1  TACTGTTGTCCGAA.1 \n##         CD16 Mono       CD4 Naive T                 B         CD14 Mono \n##  TACTGTTGTTTGTC.1  TACTTGACAACCGT.1  TACTTGACATGCTG.1  TACTTGACCGCTAA.1 \n##       B Activated         CD14 Mono         CD14 Mono                Mk \n##  TACTTGACCTGACA.1  TACTTGACTGAGGG.1  TACTTGACTTCCAT.1  TACTTTCTAACGGG.1 \n##         CD14 Mono                 B         CD14 Mono             CD8 T \n##  TACTTTCTAACTGC.1  TACTTTCTCATTTC.1  TACTTTCTGCTATG.1  TAGAAACTACCATG.1 \n##      CD4 Memory T         CD14 Mono             CD8 T         CD14 Mono \n##  TAGAAACTACTTTC.1  TAGAAACTATCGAC.1  TAGAAACTGTAAAG.1  TAGAAACTGTCTGA.1 \n##       T activated         CD14 Mono      CD4 Memory T       B Activated \n##  TAGAATACAAGGCG.1  TAGAATACATCGAC.1  TAGAATACCATTTC.1  TAGAATACCCGATA.1 \n##         CD16 Mono       CD4 Naive T      CD4 Memory T                DC \n##  TAGAATACCGTTGA.1  TAGAATACGTACGT.1  TAGAATACTACAGC.1  TAGAATTGAGATGA.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono         CD16 Mono \n##  TAGAATTGATCGAC.1  TAGAATTGCGAGTT.1  TAGAATTGCTCATT.1  TAGAATTGGTAAAG.1 \n##         CD14 Mono                 B                NK         CD16 Mono \n##  TAGAATTGGTCATG.1  TAGAATTGTACGAC.1  TAGAATTGTCTCGC.1  TAGAATTGTGGTGT.1 \n##                 B       CD4 Naive T                 B         CD14 Mono \n##  TAGAATTGTGTTCT.1  TAGACGTGATAAGG.1  TAGACGTGATCGTG.1  TAGACGTGTATGGC.1 \n##         CD14 Mono      CD4 Memory T                 B       B Activated \n##  TAGAGAGAACGCAT.1  TAGAGAGAATCACG.1  TAGAGAGACTGGTA.1  TAGAGAGAGTACCA.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono         CD14 Mono \n##  TAGAGCACATTGGC.1  TAGAGCACCGAATC.1  TAGAGCACGAGCAG.1  TAGAGCACGCGAGA.1 \n##         CD14 Mono                NK                 B         CD14 Mono \n##  TAGAGCACGGAGGT.1  TAGAGCACGGGCAA.1  TAGAGCACGGTGTT.1  TAGAGCACTCCAGA.1 \n##       CD4 Naive T             Eryth         CD14 Mono         CD14 Mono \n##  TAGATCCTCATACG.1  TAGATCCTCCGCTT.1  TAGATCCTCGTTGA.1  TAGATCCTTCTCTA.1 \n##       CD4 Naive T         CD14 Mono      CD4 Memory T         CD14 Mono \n##  TAGATTGAACCTCC.1  TAGATTGACGCTAA.1  TAGATTGACTATTC.1  TAGATTGACTCCCA.1 \n##         CD14 Mono             CD8 T       CD4 Naive T                 B \n##  TAGATTGAGCGTAT.1  TAGCATCTTCGCCT.1  TAGCCCACAAGCCT.1  TAGCCCACGTTGTG.1 \n##       CD4 Naive T                 B         CD14 Mono         CD14 Mono \n##  TAGCCCTGGTAAAG.1  TAGCCGCTAGGTTC.1  TAGCCGCTGAAGGC.1  TAGCCGCTGCGAAG.1 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono       B Activated \n##  TAGCGATGGGACTT.1  TAGCGATGTTGTGG.1  TAGCTACTAGCGTT.1  TAGCTACTATCGTG.1 \n##      CD4 Memory T       B Activated      CD4 Memory T         CD14 Mono \n##  TAGCTACTCCAATG.1  TAGCTACTCTACCC.1  TAGCTACTGGTGTT.1  TAGGACTGAAGAAC.1 \n##         CD14 Mono       CD4 Naive T         CD16 Mono         CD16 Mono \n##  TAGGACTGCATCAG.1  TAGGACTGGCTCCT.1  TAGGACTGTGAGCT.1  TAGGACTGTTCAGG.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono         CD14 Mono \n##  TAGGAGCTACCTCC.1  TAGGAGCTAGAGTA.1  TAGGAGCTGCGGAA.1  TAGGAGCTTCATTC.1 \n##         CD14 Mono         CD14 Mono             CD8 T         CD14 Mono \n##  TAGGCAACATTTCC.1  TAGGCAACCGGGAA.1  TAGGCAACGCTTAG.1  TAGGCAACGGACAG.1 \n##                 B             CD8 T         CD14 Mono         CD16 Mono \n##  TAGGCAACGTCTGA.1  TAGGCATGAAGCCT.1  TAGGCATGACGGTT.1  TAGGCATGGGGAGT.1 \n##       CD4 Naive T       CD4 Naive T       T activated      CD4 Memory T \n##  TAGGCATGGGGATG.1  TAGGCATGTCCTGC.1  TAGGCTGACACTCC.1  TAGGCTGAGCCATA.1 \n##         CD14 Mono         CD14 Mono             CD8 T         CD14 Mono \n##  TAGGGACTACCCAA.1  TAGGGACTAGTGTC.1  TAGGGACTATTCTC.1  TAGGGACTCACAAC.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono         CD14 Mono \n##  TAGGGACTCTAAGC.1  TAGGGACTTTCACT.1  TAGGGACTTTGCGA.1  TAGGTCGAACGTGT.1 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono         CD14 Mono \n##  TAGGTCGACCAAGT.1  TAGGTCGACCTATT.1  TAGGTCGACTACTT.1  TAGGTCGACTGTGA.1 \n##       T activated         CD14 Mono                Mk       CD4 Naive T \n##  TAGGTCGAGGCAAG.1  TAGGTCGATCTGGA.1  TAGGTGACAGGAGC.1  TAGGTGACCGACTA.1 \n##             CD8 T         CD14 Mono         CD14 Mono       B Activated \n##  TAGGTGACCTCGAA.1  TAGGTGACTGCTGA.1  TAGGTGTGACCCTC.1  TAGGTGTGCAGATC.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono         CD14 Mono \n##  TAGGTGTGGAGGAC.1  TAGGTGTGGCGGAA.1  TAGGTGTGTCCCAC.1  TAGGTTCTGAGGAC.1 \n##         CD14 Mono         CD14 Mono             CD8 T             CD8 T \n##  TAGGTTCTGAGGTG.1  TAGGTTCTGGAGCA.1  TAGGTTCTTCGTTT.1  TAGGTTCTTCTACT.1 \n##      CD4 Memory T         CD14 Mono       CD4 Naive T      CD4 Memory T \n##  TAGGTTCTTCTGGA.1  TAGGTTCTTGAGGG.1  TAGGTTCTTGTCAG.1  TAGTAAACAGAACA.1 \n##         CD14 Mono       T activated                NK         CD14 Mono \n##  TAGTAAACAGAGTA.1  TAGTAAACCCCTAC.1  TAGTAAACTAACCG.1  TAGTAATGAAAAGC.1 \n##       CD4 Naive T       CD4 Naive T         CD16 Mono         CD14 Mono \n##  TAGTAATGAACAGA.1  TAGTAATGCGTCTC.1  TAGTAATGTTTCAC.1  TAGTACCTAAGCCT.1 \n##             CD8 T         CD16 Mono       CD4 Naive T         CD14 Mono \n##  TAGTACCTCCTCCA.1  TAGTACCTCTAGCA.1  TAGTATGAAGCTAC.1  TAGTATGACCGCTT.1 \n##       CD4 Naive T         CD16 Mono         CD14 Mono      CD4 Memory T \n##  TAGTATGACTACGA.1  TAGTCACTCATTCT.1  TAGTCACTCTAAGC.1  TAGTCACTGGGACA.1 \n##       CD4 Naive T         CD14 Mono      CD4 Memory T      CD4 Memory T \n##  TAGTCACTTGACTG.1  TAGTCGGAAGTCGT.1  TAGTCGGACAGAGG.1  TAGTCGGATACTGG.1 \n##      CD4 Memory T      CD4 Memory T         CD14 Mono         CD16 Mono \n##  TAGTCGGATCCTAT.1  TAGTCGGATGATGC.1  TAGTCTTGGAAAGT.1  TAGTCTTGGGGATG.1 \n##       CD4 Naive T       CD4 Naive T         CD16 Mono                DC \n##  TAGTCTTGGTTGAC.1  TAGTCTTGTAGCCA.1  TAGTCTTGTCCCGT.1  TAGTGGTGAAAAGC.1 \n##       T activated         CD14 Mono       T activated                Mk \n##  TAGTGGTGAGTCTG.1  TAGTGGTGAGTGTC.1  TAGTGGTGCACTCC.1  TAGTGGTGCTGGAT.1 \n##                Mk       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  TAGTGGTGGAATCC.1  TAGTGGTGGGACAG.1  TAGTGGTGGGGTGA.1  TAGTTAGAAAACAG.1 \n##      CD4 Memory T       CD4 Naive T       CD4 Naive T       CD4 Naive T \n##  TAGTTAGAGGACGA.1  TAGTTAGAGTCAAC.1  TAGTTCACAACGTC.1  TAGTTCACAAGGTA.1 \n##                DC       T activated      CD4 Memory T         CD14 Mono \n##  TAGTTCACCTGACA.1  TAGTTCACGTTGAC.1  TAGTTCACTCAGTG.1  TAGTTCACTGTCGA.1 \n##         CD14 Mono         CD14 Mono       T activated                DC \n##  TAGTTGCTCTACTT.1  TAGTTGCTTATCGG.1  TAGTTGCTTCGCCT.1  TAGTTGCTTGCCCT.1 \n##                NK      CD4 Memory T      CD4 Memory T         CD14 Mono \n##  TATAAGACGCTGAT.1  TATAAGTGAGCATC.1  TATAAGTGTTACTC.1  TATACAGACTGTAG.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono         CD16 Mono \n##  TATACAGAGACGTT.1  TATACAGAGTGTCA.1  TATACAGATAGAGA.1  TATACAGATTCCAT.1 \n##         CD14 Mono       CD4 Naive T      CD4 Memory T         CD14 Mono \n##  TATACCACAAAACG.1  TATACCACCTGTGA.1  TATACCACGCAAGG.1  TATACCACTTATCC.1 \n##         CD14 Mono       CD4 Naive T      CD4 Memory T      CD4 Memory T \n##  TATACGCTAGGGTG.1  TATACGCTATGTGC.1  TATACGCTGTCATG.1  TATACGCTTCGCCT.1 \n##                NK       CD4 Naive T       T activated             CD8 T \n##  TATACGCTTGCCAA.1  TATAGATGCTTCGC.1  TATAGATGGCTGAT.1  TATAGATGTGCAAC.1 \n##             CD8 T      CD4 Memory T         CD14 Mono         CD14 Mono \n##  TATAGCCTATCAGC.1  TATAGCCTCTCGCT.1  TATAGCCTGTAAAG.1  TATAGCCTTCTTTG.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono                NK \n##  TATAGCCTTGCTTT.1  TATAGCCTTTCTTG.1  TATAGCCTTTGACG.1  TATCAAGACGTAGT.1 \n##         CD16 Mono       CD4 Naive T         CD14 Mono       T activated \n##  TATCAAGATCTCTA.1  TATCAAGATTCTAC.1  TATCACTGACCTTT.1  TATCACTGCACTCC.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T         CD16 Mono \n##  TATCACTGCCTCCA.1  TATCACTGGTCGTA.1  TATCACTGTAACCG.1  TATCAGCTAGTAGA.1 \n##      CD4 Memory T       CD4 Naive T       CD4 Naive T                 B \n##  TATCAGCTCCAACA.1  TATCAGCTCCTGAA.1  TATCAGCTTGAACC.1  TATCAGCTTTATCC.1 \n##               pDC       CD4 Naive T       CD4 Naive T         CD16 Mono \n##  TATCAGCTTTTACC.1  TATCCAACCTCTAT.1  TATCCAACCTTTAC.1  TATCCAACTTTGTC.1 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono                 B \n##  TATCCTGAAGTGCT.1  TATCCTGACCCAAA.1  TATCCTGAGGATTC.1  TATCCTGATGACAC.1 \n##       CD4 Naive T               pDC       CD4 Naive T                 B \n##  TATCCTGATGCCTC.1  TATCGACTAAGATG.1  TATCGACTACGACT.1  TATCGACTACTACG.1 \n##       T activated       CD4 Naive T      CD4 Memory T         CD14 Mono \n##  TATCGACTAGCAAA.1  TATCGACTCACTCC.1  TATCGACTCGAGAG.1  TATCGACTTACGAC.1 \n##                NK                 B       CD4 Naive T         CD14 Mono \n##  TATCGACTTGCACA.1  TATCGACTTGGTGT.1  TATCGTACTATCGG.1  TATCGTACTTGCGA.1 \n##             CD8 T         CD14 Mono         CD14 Mono         CD16 Mono \n##  TATCTCGAACAGCT.1  TATCTCGAGTAAAG.1  TATCTCGATCTATC.1  TATCTGACAAAAGC.1 \n##       CD4 Naive T         CD16 Mono         CD14 Mono         CD14 Mono \n##  TATCTGACTGTGAC.1  TATCTTCTAAGTAG.1  TATCTTCTAGAACA.1  TATCTTCTATCGAC.1 \n##      CD4 Memory T         CD14 Mono       CD4 Naive T       B Activated \n##  TATCTTCTCTCCCA.1  TATCTTCTGGGAGT.1  TATCTTCTTCTACT.1  TATCTTCTTTCGGA.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  TATGAATGATTCTC.1  TATGAATGCTTCGC.1  TATGAATGGCAAGG.1  TATGAATGGTATCG.1 \n##                NK       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  TATGAATGTCTTAC.1  TATGAATGTTTCGT.1  TATGCGGAAGTCAC.1  TATGCGGAATTCGG.1 \n##             CD8 T       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  TATGCGGACGTCTC.1  TATGCGGACTATTC.1  TATGGGACACCCAA.1  TATGGGACATCGTG.1 \n##             CD8 T         CD14 Mono                DC       B Activated \n##  TATGGGACGGAAGC.1  TATGGGACGTTGCA.1  TATGGGACTACTCT.1  TATGGGTGCAGGAG.1 \n##                NK                NK       CD4 Naive T             CD8 T \n##  TATGGGTGGCCATA.1  TATGGGTGGTAGCT.1  TATGGTCTACACCA.1  TATGGTCTCCGAAT.1 \n##                 B       CD4 Naive T       B Activated         CD14 Mono \n##  TATGGTCTTGCATG.1  TATGTCACCAACCA.1  TATGTCACCTCATT.1  TATGTCACCTGACA.1 \n##       CD4 Naive T                Mk       B Activated         CD14 Mono \n##  TATGTCACTATCTC.1  TATGTCACTCGTAG.1  TATGTCTGCTGCAA.1  TATGTCTGGAACCT.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono         CD14 Mono \n##  TATGTCTGGTGAGG.1  TATGTCTGTAGAGA.1  TATGTCTGTGATGC.1  TATGTGCTATGGTC.1 \n##                Mk         CD14 Mono       CD4 Naive T         CD14 Mono \n##  TATGTGCTCTCCAC.1  TATGTGCTCTTGAG.1  TATGTGCTTCAGTG.1  TATTGCTGAATCGC.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T      CD4 Memory T \n##  TATTGCTGAGAGAT.1  TATTGCTGCAACTG.1  TATTGCTGCGCTAA.1  TATTGCTGTATCTC.1 \n##      CD4 Memory T       CD4 Naive T                 B       CD4 Naive T \n##  TATTGCTGTATGGC.1  TATTGCTGTGGTGT.1  TATTTCCTAACCGT.1  TATTTCCTAAGTGA.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono         CD16 Mono \n##  TATTTCCTACGCTA.1  TATTTCCTAGGGTG.1  TATTTCCTCCTAAG.1  TATTTCCTCGGAGA.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  TATTTCCTGTATGC.1  TCAACACTAGCGTT.1  TCAACACTATCGAC.1  TCAACACTGGCAAG.1 \n##       CD4 Naive T      CD4 Memory T         CD16 Mono       CD4 Naive T \n##  TCAACACTTGGTAC.1  TCAAGGACCCGTTC.1  TCAAGGACCTTCCG.1  TCAAGGACGGAGCA.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T         CD16 Mono \n##  TCAAGGTGAGATGA.1  TCAAGGTGCAATCG.1  TCAAGGTGCTCAAG.1  TCAAGGTGTAGAAG.1 \n##      CD4 Memory T       CD4 Naive T                 B                 B \n##  TCAAGGTGTCTCGC.1  TCAAGGTGTCTTCA.1  TCAAGTCTACCATG.1  TCAAGTCTCTCATT.1 \n##       CD4 Naive T      CD4 Memory T                 B                Mk \n##  TCAAGTCTCTTATC.1  TCAAGTCTGAAAGT.1  TCAAGTCTGTCATG.1  TCAAGTCTGTTAGC.1 \n##             CD8 T       CD4 Naive T                NK         CD14 Mono \n##  TCAAGTCTTACTTC.1  TCAAGTCTTAGCCA.1  TCAAGTCTTCTAGG.1  TCAAGTCTTGTCGA.1 \n##      CD4 Memory T      CD4 Memory T       CD4 Naive T      CD4 Memory T \n##  TCAATAGAAGCTAC.1  TCAATAGAGCGATT.1  TCAATAGAGTAGGG.1  TCAATAGATTTGCT.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono      CD4 Memory T \n##  TCAATCACACGGGA.1  TCAATCACCTTGCC.1  TCAATCACGGAGGT.1  TCAATCACGGGATG.1 \n##         CD14 Mono                NK       CD4 Naive T       B Activated \n##  TCAATCACTTGAGC.1  TCACAACTACCTGA.1  TCACAACTGGTGGA.1  TCACAACTGGTTTG.1 \n##             CD8 T                NK         CD14 Mono         CD14 Mono \n##  TCACAACTTGCATG.1  TCACAACTTTTCTG.1  TCACATACAACTGC.1  TCACATACCTTGCC.1 \n##       CD4 Naive T             CD8 T         CD14 Mono         CD14 Mono \n##  TCACATACGGTCAT.1  TCACATACTTTCAC.1  TCACCCGAACTGGT.1  TCACCCGAACTTTC.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono         CD14 Mono \n##  TCACCCGAATTCGG.1  TCACCCGATCCTCG.1  TCACCGTGAACCAC.1  TCACCGTGAAGGTA.1 \n##                 B                DC         CD14 Mono         CD14 Mono \n##  TCACCGTGCTGAGT.1  TCACCGTGGCTTCC.1  TCACCGTGGGGCAA.1  TCACCGTGTAAGCC.1 \n##                NK         CD14 Mono       T activated      CD4 Memory T \n##  TCACCGTGTGATGC.1  TCACCGTGTTCAGG.1  TCACCTCTAGGTTC.1  TCACCTCTCACTTT.1 \n##         CD16 Mono             CD8 T         CD14 Mono       CD4 Naive T \n##  TCACCTCTGAATGA.1  TCACCTCTGGACGA.1  TCACGAGAATTCGG.1  TCACGAGACCCGTT.1 \n##             CD8 T             CD8 T         CD14 Mono      CD4 Memory T \n##  TCACGAGAGCGATT.1  TCACGAGATCTACT.1  TCACGAGATGTCCC.1  TCACTATGATCACG.1 \n##       CD4 Naive T         CD14 Mono      CD4 Memory T      CD4 Memory T \n##  TCACTATGCACTAG.1  TCACTATGCGACAT.1  TCACTATGCTTCTA.1  TCACTATGTGACTG.1 \n##                NK         CD14 Mono         CD14 Mono                 B \n##  TCACTATGTTCATC.1  TCACTATGTTGAGC.1  TCAGACGAAACCAC.1  TCAGACGAGGTCAT.1 \n##             CD8 T                DC       CD4 Naive T         CD14 Mono \n##  TCAGAGACAAGCCT.1  TCAGAGACCTCTAT.1  TCAGAGACCTTGGA.1  TCAGAGACTCTGGA.1 \n##         CD14 Mono               pDC         CD14 Mono       CD4 Naive T \n##  TCAGAGACTTTCGT.1  TCAGCAGAAACCGT.1  TCAGCAGAACGTGT.1  TCAGCAGAAGAACA.1 \n##         CD14 Mono             CD8 T       B Activated         CD14 Mono \n##  TCAGCAGATAAAGG.1  TCAGCAGATTTGGG.1  TCAGCGCTAAGGTA.1  TCAGCGCTACACTG.1 \n##             CD8 T             CD8 T      CD4 Memory T         CD14 Mono \n##  TCAGCGCTCCTTAT.1  TCAGCGCTGGTCAT.1  TCAGCGCTTGGAGG.1  TCAGGATGAGCACT.1 \n##             CD8 T         CD14 Mono      CD4 Memory T       CD4 Naive T \n##  TCAGGATGCTCAAG.1  TCAGGATGGCATCA.1  TCAGGATGGCGAAG.1  TCAGGATGTAAGCC.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  TCAGGATGTCCTAT.1  TCAGGATGTGCATG.1  TCAGGATGTGGTCA.1  TCAGGATGTTGCTT.1 \n##         CD16 Mono         CD14 Mono       CD4 Naive T         CD14 Mono \n##  TCAGTACTAAGAAC.1  TCAGTACTACTGTG.1  TCAGTACTCCACCT.1  TCAGTACTCCCTTG.1 \n##         CD14 Mono         CD16 Mono      CD4 Memory T      CD4 Memory T \n##  TCAGTACTGCTGTA.1  TCAGTACTTGTTTC.1  TCAGTGGAATCGGT.1  TCAGTGGACAATCG.1 \n##                 B                 B         CD14 Mono                Mk \n##  TCAGTGGAGGAGGT.1  TCAGTTACCTCCCA.1  TCAGTTACGAGGGT.1  TCATCAACCGTTGA.1 \n##       T activated      CD4 Memory T         CD14 Mono       CD4 Naive T \n##  TCATCAACGTTCTT.1  TCATCAACTATGCG.1  TCATCAACTCACCC.1  TCATCATGCACTCC.1 \n##         CD16 Mono         CD14 Mono         CD14 Mono       CD4 Naive T \n##  TCATCATGCAGCTA.1  TCATCCCTAACGGG.1  TCATCCCTACACGT.1  TCATCCCTAGCGGA.1 \n##         CD14 Mono         CD14 Mono                 B         CD14 Mono \n##  TCATCCCTCCCACT.1  TCATGTACAAAAGC.1  TCATGTACATCGTG.1  TCATGTACTGACAC.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  TCATTCGAATCACG.1  TCATTCGAGATACC.1  TCATTCGATGCAAC.1  TCATTGACACCATG.1 \n##         CD14 Mono         CD14 Mono             CD8 T      CD4 Memory T \n##  TCATTGACACCCTC.1  TCATTGACACGCTA.1  TCATTGACCTGATG.1  TCATTGACTGCCTC.1 \n##                 B         CD14 Mono                 B         CD16 Mono \n##  TCCACGTGCGTGTA.1  TCCACGTGCTTACT.1  TCCACGTGTCGTTT.1  TCCACGTGTGCAGT.1 \n##         CD14 Mono                 B         CD14 Mono      CD4 Memory T \n##  TCCACGTGTGTGGT.1  TCCACTCTAAAGCA.1  TCCACTCTGGGTGA.1  TCCAGAGAACTACG.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T       CD4 Naive T \n##  TCCAGAGAATAAGG.1  TCCAGAGATAGAGA.1  TCCAGAGATCTCGC.1  TCCATAACCCTTCG.1 \n##         CD14 Mono       T activated       B Activated      CD4 Memory T \n##  TCCATAACGGAAAT.1  TCCATAACGTATGC.1  TCCATCCTAGCCTA.1  TCCATCCTGGAACG.1 \n##         CD16 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  TCCATCCTTCGCAA.1  TCCCACGACTGGTA.1  TCCCACGATCCTAT.1  TCCCAGACAGCCAT.1 \n##         CD16 Mono       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  TCCCAGACCAAAGA.1  TCCCAGACTTCTTG.1  TCCCAGACTTGTCT.1  TCCCATCTCGTACA.1 \n##                DC                DC       CD4 Naive T         CD14 Mono \n##  TCCCATCTGCTACA.1  TCCCATCTGGAAAT.1  TCCCATCTTGAGGG.1  TCCCGAACACGCAT.1 \n##         CD14 Mono         CD16 Mono                NK         CD14 Mono \n##  TCCCGAACAGTTCG.1  TCCCGAACCAGATC.1  TCCCGAACGCCAAT.1  TCCCGAACTCCTCG.1 \n##         CD14 Mono      CD4 Memory T       CD4 Naive T         CD14 Mono \n##  TCCCGATGACGTTG.1  TCCCGATGAGCATC.1  TCCCGATGCTACCC.1  TCCCGATGGTTAGC.1 \n##                NK                NK         CD14 Mono         CD16 Mono \n##  TCCCTACTAACCTG.1  TCCCTACTACTGTG.1  TCCCTACTAGATGA.1  TCCCTACTCAACCA.1 \n##                DC                NK                NK             CD8 T \n##  TCCCTACTCCTTAT.1  TCCCTACTCTGGTA.1  TCCCTACTGATGAA.1  TCCCTACTTGAGAA.1 \n##         CD14 Mono       CD4 Naive T      CD4 Memory T             CD8 T \n##  TCCCTACTTGCTCC.1  TCCGAAGAACCTGA.1  TCCGAAGATACTTC.1  TCCGAAGATATGCG.1 \n##                NK         CD16 Mono         CD14 Mono             CD8 T \n##  TCCGAGCTAGATGA.1  TCCTAAACAAGTGA.1  TCCTAAACCGCATA.1  TCCTAAACGCATAC.1 \n##       CD4 Naive T                NK         CD14 Mono         CD16 Mono \n##  TCCTAATGAGCACT.1  TCCTAATGCTGCAA.1  TCCTAATGCTTGTT.1  TCCTAATGGGTAAA.1 \n##      CD4 Memory T         CD14 Mono             CD8 T       CD4 Naive T \n##  TCCTAATGTCTGGA.1  TCCTAATGTGTGGT.1  TCCTAATGTTCATC.1  TCCTACCTACAGCT.1 \n##       CD4 Naive T       CD4 Naive T         CD16 Mono       CD4 Naive T \n##  TCCTACCTCTCAGA.1  TCCTACCTTGAGGG.1  TCCTATGAAGCCTA.1  TCCTATGAAGCTAC.1 \n##         CD14 Mono       CD4 Naive T                DC         CD14 Mono \n##  TCCTATGATAAAGG.1  TCCTATGATATCTC.1  TCGAATCTCCTCAC.1  TCGAATCTCCTTCG.1 \n##       B Activated         CD14 Mono             CD8 T         CD14 Mono \n##  TCGAATCTCTTCGC.1  TCGAATCTGTACGT.1  TCGAATCTTTCATC.1  TCGACCTGACCTGA.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono                 B \n##  TCGACCTGTCATTC.1  TCGACCTGTTATCC.1  TCGACGCTCAGCTA.1  TCGACGCTGAGCTT.1 \n##         CD14 Mono                NK       CD4 Naive T                 B \n##  TCGACGCTGGTTCA.1  TCGACGCTTAGAGA.1  TCGAGAACGGTAAA.1  TCGAGAACTCTCCG.1 \n##         CD14 Mono      CD4 Memory T      CD4 Memory T         CD14 Mono \n##  TCGAGAACTGCAAC.1  TCGAGAACTGCTTT.1  TCGAGCCTCCTCGT.1  TCGAGCCTCCTTAT.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  TCGAGCCTGACGGA.1  TCGATACTAGAACA.1  TCGATACTCACAAC.1  TCGATTTGACGGAG.1 \n##         CD14 Mono       T activated         CD14 Mono       T activated \n##  TCGATTTGGATACC.1  TCGATTTGGGTGGA.1  TCGATTTGGTCAAC.1  TCGATTTGTGACAC.1 \n##      CD4 Memory T       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  TCGATTTGTGCCTC.1  TCGATTTGTGCTTT.1  TCGCAAGACAGAAA.1  TCGCAAGAGCGATT.1 \n##             CD8 T      CD4 Memory T       CD4 Naive T                Mk \n##  TCGCAAGATGAGCT.1  TCGCAAGATGCCAA.1  TCGCAAGATGCCTC.1  TCGCACACCCTTGC.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T         CD14 Mono \n##  TCGCACACGGTTTG.1  TCGCACACTACTTC.1  TCGCACACTAGCCA.1  TCGCACACTGGAAA.1 \n##                NK         CD14 Mono       CD4 Naive T                NK \n##  TCGCACACTGGTGT.1  TCGCACTGACTCAG.1  TCGCACTGATGGTC.1  TCGCACTGATTCCT.1 \n##       CD4 Naive T                DC         CD14 Mono      CD4 Memory T \n##  TCGCACTGCTCGCT.1  TCGCACTGCTGATG.1  TCGCACTGGGTCTA.1  TCGCACTGTACAGC.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T         CD14 Mono \n##  TCGCACTGTTAGGC.1  TCGCACTGTTGCAG.1  TCGCAGCTGCCATA.1  TCGCCATGAGCTAC.1 \n##             CD8 T       T activated             CD8 T       T activated \n##  TCGCCATGATGTCG.1  TCGCCATGCAACTG.1  TCGCCATGCATTGG.1  TCGCCATGCCGATA.1 \n##      CD4 Memory T             Eryth         CD14 Mono       T activated \n##  TCGCCATGCCTTAT.1  TCGCCATGCGGGAA.1  TCGCCATGCGTAGT.1  TCGCCATGCTGCAA.1 \n##       B Activated       CD4 Naive T      CD4 Memory T         CD16 Mono \n##  TCGCCATGTATTCC.1  TCGGACCTCCTATT.1  TCGGACCTCTCAAG.1  TCGGACCTCTCATT.1 \n##                NK      CD4 Memory T      CD4 Memory T         CD14 Mono \n##  TCGGCACTCCCACT.1  TCGGCACTGGTATC.1  TCGGCACTTGTCAG.1  TCGTAGGACGAGTT.1 \n##         CD14 Mono      CD4 Memory T                Mk       CD4 Naive T \n##  TCGTAGGACTGTTT.1  TCGTAGGATGCTCC.1  TCGTGAGAACCCTC.1  TCGTGAGAACGCTA.1 \n##                 B                DC                 B         CD14 Mono \n##  TCGTGAGACCTATT.1  TCGTGAGAGGTGAG.1  TCGTTATGAAGATG.1  TCGTTATGAGAGAT.1 \n##       CD4 Naive T         CD14 Mono       B Activated       CD4 Naive T \n##  TCGTTATGAGATCC.1  TCGTTATGCTGTCC.1  TCGTTATGGACACT.1  TCGTTATGGTCATG.1 \n##         CD14 Mono         CD14 Mono             CD8 T                 B \n##  TCGTTATGTTCAGG.1  TCTAACACAAAAGC.1  TCTAACACATTTCC.1  TCTAACACGAATGA.1 \n##                 B         CD14 Mono         CD14 Mono         CD14 Mono \n##  TCTAACACGCTAAC.1  TCTAACACTCTGGA.1  TCTAACACTGCAAC.1  TCTAACACTGGTTG.1 \n##         CD14 Mono                NK       B Activated         CD14 Mono \n##  TCTAACTGAAGGGC.1  TCTAACTGGCGAGA.1  TCTAAGCTCTCTAT.1  TCTAAGCTTGGAGG.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono         CD16 Mono \n##  TCTACAACAACAGA.1  TCTACAACAACCAC.1  TCTACAACAGGCGA.1  TCTACAACCGATAC.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T         CD14 Mono \n##  TCTAGACTCAAGCT.1  TCTAGACTCGTCTC.1  TCTAGACTTGGGAG.1  TCTAGACTTTGGTG.1 \n##         CD16 Mono       CD4 Naive T         CD16 Mono       B Activated \n##  TCTAGTTGACCCAA.1  TCTAGTTGAGAACA.1  TCTAGTTGATTGGC.1  TCTAGTTGCCATGA.1 \n##                 B       B Activated         CD16 Mono      CD4 Memory T \n##  TCTAGTTGGAAAGT.1  TCTAGTTGTCTTAC.1  TCTATGTGAGAACA.1  TCTATGTGCCGTAA.1 \n##       CD4 Naive T       B Activated      CD4 Memory T                NK \n##  TCTATGTGGATAAG.1  TCTATGTGGTGAGG.1  TCTATGTGTTCTCA.1  TCTCAAACAAGGGC.1 \n##                 B       T activated         CD14 Mono      CD4 Memory T \n##  TCTCAAACACCTCC.1  TCTCAAACCTTGAG.1  TCTCAAACTCCAAG.1  TCTCAAACTGGTCA.1 \n##         CD14 Mono       CD4 Naive T       T activated       CD4 Naive T \n##  TCTCCACTCAAAGA.1  TCTCCACTCCCTAC.1  TCTCCACTCTACCC.1  TCTCCACTGGTCTA.1 \n##         CD14 Mono       CD4 Naive T                Mk                 B \n##  TCTCCACTTTCTGT.1  TCTCTAGAACTTTC.1  TCTCTAGAGGAACG.1  TCTCTAGAGGAGCA.1 \n##       T activated         CD14 Mono                DC         CD14 Mono \n##  TCTCTAGATGGGAG.1  TCTCTAGATTCCGC.1  TCTCTAGATTCGTT.1  TCTGATACCGTGAT.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono       CD4 Naive T \n##  TCTGATACGGAACG.1  TCTGATACTTACCT.1  TCTGATACTTGTCT.1  TCTTACGAAGAATG.1 \n##         CD14 Mono      CD4 Memory T                DC         CD14 Mono \n##  TCTTACGAGAAGGC.1  TCTTACGAGGTAGG.1  TCTTACGATCGCCT.1  TCTTCAGAACCTAG.1 \n##         CD14 Mono                 B                 B       CD4 Naive T \n##  TCTTCAGAAGTAGA.1  TCTTCAGACGACTA.1  TCTTCAGAGTCCTC.1  TCTTGATGGACGAG.1 \n##                NK         CD14 Mono       CD4 Naive T         CD16 Mono \n##  TCTTGATGGCGATT.1  TCTTGATGGCTTAG.1  TCTTGATGTTCGCC.1  TGAAATTGCTCTAT.1 \n##       CD4 Naive T                Mk         CD14 Mono                 B \n##  TGAAATTGGTGCAT.1  TGAAATTGTCCAGA.1  TGAAATTGTCTAGG.1  TGAACCGATAGCCA.1 \n##       T activated         CD14 Mono         CD16 Mono             CD8 T \n##  TGAAGCACCTGTGA.1  TGAAGCACGTACCA.1  TGAAGCACTTACTC.1  TGAAGCTGCGAACT.1 \n##         CD16 Mono       B Activated                DC       T activated \n##  TGAAGCTGGGCAAG.1  TGAAGCTGTATGCG.1  TGAATAACACCGAT.1  TGAATAACCTGGAT.1 \n##         CD14 Mono       CD4 Naive T               pDC       CD4 Naive T \n##  TGAATAACTCTAGG.1  TGAATAACTTGCGA.1  TGACACGAAAGTGA.1  TGACACGACATACG.1 \n##       CD4 Naive T         CD16 Mono         CD14 Mono                 B \n##  TGACACGACCACCT.1  TGACACGAGGATCT.1  TGACACGAGGTAAA.1  TGACACGAGTACCA.1 \n##       CD4 Naive T       CD4 Naive T       B Activated         CD14 Mono \n##  TGACCAGAAAGGTA.1  TGACCAGAATCGAC.1  TGACCAGACCAATG.1  TGACCAGATCAGTG.1 \n##             CD8 T             CD8 T                 B         CD14 Mono \n##  TGACCAGATGCACA.1  TGACCAGATTCTCA.1  TGACCGCTCTAGCA.1  TGACCGCTCTGGTA.1 \n##         CD14 Mono       CD4 Naive T      CD4 Memory T       CD4 Naive T \n##  TGACCGCTTAAGGA.1  TGACGAACTGTCTT.1  TGACGATGACACGT.1  TGACGATGTCAAGC.1 \n##                NK                 B                 B       T activated \n##  TGACGATGTCTGGA.1  TGACGCCTAGTTCG.1  TGACGCCTCACCAA.1  TGACGCCTCAGTCA.1 \n##         CD14 Mono         CD14 Mono         CD16 Mono         CD14 Mono \n##  TGACGCCTCGTGTA.1  TGACGCCTGCCCTT.1  TGACGCCTGCCTTC.1  TGACGCCTTCTGGA.1 \n##                 B                NK         CD16 Mono       T activated \n##  TGACGCCTTGTAGC.1  TGACTGGAAGGAGC.1  TGACTGGACACTTT.1  TGACTGGACTCTTA.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono         CD14 Mono \n##  TGACTGGAGCCCTT.1  TGACTGGAGTCTAG.1  TGACTGGATAACCG.1  TGACTGGATCGATG.1 \n##      CD4 Memory T         CD14 Mono             CD8 T             CD8 T \n##  TGACTTACAGAAGT.1  TGACTTACGGTGTT.1  TGACTTACTAAAGG.1  TGACTTACTGAACC.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T         CD14 Mono \n##  TGACTTTGAGATGA.1  TGACTTTGCTGACA.1  TGACTTTGTGGCAT.1  TGACTTTGTTCATC.1 \n##         CD14 Mono         CD14 Mono         CD16 Mono      CD4 Memory T \n##  TGAGACACAAAAGC.1  TGAGACACGCGTAT.1  TGAGACACGCTTAG.1  TGAGACACGGGACA.1 \n##                 B         CD14 Mono       T activated                 B \n##  TGAGACACTCTTAC.1  TGAGACACTTTGTC.1  TGAGCAACAGAGAT.1  TGAGCAACCTCAGA.1 \n##                 B         CD14 Mono       CD4 Naive T      CD4 Memory T \n##  TGAGCAACGATAAG.1  TGAGCTGAAAGATG.1  TGAGCTGAAGTACC.1  TGAGCTGACAGCTA.1 \n##                NK         CD16 Mono      CD4 Memory T         CD14 Mono \n##  TGAGCTGACCGATA.1  TGAGCTGATAGCCA.1  TGAGCTGATCGTGA.1  TGAGCTGATGTGCA.1 \n##       B Activated      CD4 Memory T       T activated       CD4 Naive T \n##  TGAGGACTGACTAC.1  TGAGGACTTTTCGT.1  TGAGGTACAGGCGA.1  TGAGGTACAGTCTG.1 \n##         CD14 Mono                NK      CD4 Memory T         CD14 Mono \n##  TGAGGTACATGCTG.1  TGAGGTACGGTCAT.1  TGAGGTACGTTAGC.1  TGAGGTACTATCGG.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T      CD4 Memory T \n##  TGAGGTACTCACGA.1  TGAGGTACTCTCCG.1  TGAGTCGACCTATT.1  TGAGTCGAGCGTAT.1 \n##         CD14 Mono         CD16 Mono                 B         CD14 Mono \n##  TGAGTCGATAACCG.1  TGAGTCGATATCTC.1  TGAGTCGATCTATC.1  TGAGTGACAAGGCG.1 \n##                DC             CD8 T         CD14 Mono       T activated \n##  TGAGTGACAGAGTA.1  TGAGTGACCCAATG.1  TGAGTGACTCCTCG.1  TGAGTGACTTTCGT.1 \n##         CD14 Mono                Mk         CD14 Mono             CD8 T \n##  TGATAAACAGGTTC.1  TGATAAACCCGTAA.1  TGATACCTATGTGC.1  TGATACCTCGGTAT.1 \n##                NK         CD14 Mono                NK         CD14 Mono \n##  TGATACCTTCCTTA.1  TGATATGATGTTCT.1  TGATCACTCCTCGT.1  TGATCACTTGGCAT.1 \n##                NK      CD4 Memory T       CD4 Naive T      CD4 Memory T \n##  TGATCGGACTCTCG.1  TGATCGGAGGTAAA.1  TGATCGGATCGCAA.1  TGATCGGATGTAGC.1 \n##       CD4 Naive T         CD16 Mono         CD14 Mono         CD16 Mono \n##  TGATTAGACCCGTT.1  TGATTCACCAGCTA.1  TGATTCACCCTTCG.1  TGATTCACCGAATC.1 \n##         CD14 Mono                NK                NK         CD14 Mono \n##  TGATTCACGGCGAA.1  TGATTCACTAGCGT.1  TGATTCTGACGTTG.1  TGATTCTGATTCCT.1 \n##                Mk         CD14 Mono       CD4 Naive T                NK \n##  TGATTCTGGCTATG.1  TGATTCTGGTAGGG.1  TGATTCTGTCAGGT.1  TGCAACGACACACA.1 \n##         CD16 Mono         CD14 Mono         CD14 Mono         CD16 Mono \n##  TGCAACGACCCAAA.1  TGCAACGAGGAGCA.1  TGCAACGATCAAGC.1  TGCAAGACCTTGCC.1 \n##       CD4 Naive T                DC             CD8 T         CD14 Mono \n##  TGCAAGTGACACTG.1  TGCAAGTGCTCCAC.1  TGCAAGTGGAATAG.1  TGCAAGTGGTAGGG.1 \n##                Mk       CD4 Naive T       T activated      CD4 Memory T \n##  TGCAAGTGGTCTTT.1  TGCAAGTGTCTAGG.1  TGCAAGTGTGGTTG.1  TGCAAGTGTTCCGC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono             CD8 T \n##  TGCAATCTAAGTGA.1  TGCAATCTACGCAT.1  TGCACAGAAAGCAA.1  TGCACAGATCGCAA.1 \n##         CD16 Mono         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  TGCACAGATTTGTC.1  TGCACGCTCAGAAA.1  TGCACGCTGGTTAC.1  TGCAGATGACGTTG.1 \n##         CD14 Mono             CD8 T         CD14 Mono         CD14 Mono \n##  TGCAGATGAGCGGA.1  TGCAGATGGCTCCT.1  TGCAGATGTCGTTT.1  TGCAGATGTTGGCA.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono       CD4 Naive T \n##  TGCATGGACTGCAA.1  TGCATGGATGTGGT.1  TGCCAAGAACCAGT.1  TGCCAAGACTCGCT.1 \n##       CD4 Naive T                 B         CD14 Mono         CD14 Mono \n##  TGCCAAGATAGACC.1  TGCCAAGATCAGTG.1  TGCCACTGCACTAG.1  TGCCACTGCTAGCA.1 \n##      CD4 Memory T       T activated       CD4 Naive T       T activated \n##  TGCCACTGCTGTGA.1  TGCCACTGGGTGTT.1  TGCCACTGTATGGC.1  TGCCACTGTCGCCT.1 \n##         CD14 Mono       T activated         CD14 Mono         CD14 Mono \n##  TGCCAGCTAGCACT.1  TGCCAGCTCCGCTT.1  TGCCAGCTGCTATG.1  TGCCCAACAGGTTC.1 \n##         CD14 Mono      CD4 Memory T       B Activated         CD14 Mono \n##  TGCCCAACCACTGA.1  TGCCCAACCTGACA.1  TGCCCAACGCCATA.1  TGCCCAACTTCTGT.1 \n##       B Activated       CD4 Naive T         CD16 Mono         CD14 Mono \n##  TGCCGACTATCGTG.1  TGCCGACTATGCTG.1  TGCCGACTGCATCA.1  TGCCGACTGTGTAC.1 \n##                 B       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  TGCCGACTTATGCG.1  TGCCGACTTGCAGT.1  TGCGAAACCGCTAA.1  TGCGAAACGCATCA.1 \n##      CD4 Memory T         CD14 Mono                Mk      CD4 Memory T \n##  TGCGAAACGCCATA.1  TGCGAAACGGGATG.1  TGCGAAACTGAAGA.1  TGCGATGAAAAAGC.1 \n##         CD14 Mono             CD8 T                DC         CD14 Mono \n##  TGCGATGACTGTGA.1  TGCGATGATCGTGA.1  TGCGATGATGGAGG.1  TGCGATGATGTGCA.1 \n##         CD16 Mono      CD4 Memory T         CD14 Mono             CD8 T \n##  TGCGATGATTCGGA.1  TGCGCACTAGGGTG.1  TGCGCACTAGTTCG.1  TGCGTAGACTCTTA.1 \n##         CD16 Mono      CD4 Memory T         CD14 Mono         CD16 Mono \n##  TGCGTAGAGTCGTA.1  TGCGTAGATAAGGA.1  TGCGTAGATTTCGT.1  TGCTAGGACCGAAT.1 \n##      CD4 Memory T         CD16 Mono                 B       CD4 Naive T \n##  TGCTAGGACCGTAA.1  TGCTAGGACTTACT.1  TGCTAGGAGTACGT.1  TGCTATACCGCAAT.1 \n##         CD16 Mono         CD16 Mono                DC         CD16 Mono \n##  TGCTATACTCAAGC.1  TGCTATACTGAGAA.1  TGCTATACTTAGGC.1  TGCTGAGAGCGTTA.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono         CD16 Mono \n##  TGCTGAGAGTGTCA.1  TGCTGAGATCCTAT.1  TGCTGAGATGCTAG.1  TGCTTAACACTGTG.1 \n##         CD16 Mono         CD14 Mono         CD14 Mono       CD4 Naive T \n##  TGCTTAACATTCCT.1  TGCTTAACTTTCTG.1  TGGAAAGAACACCA.1  TGGAAAGAAGTTCG.1 \n##                 B         CD14 Mono         CD14 Mono         CD14 Mono \n##  TGGAAAGAGGATTC.1  TGGAAAGATTCCCG.1  TGGAACACTCTCCG.1  TGGAACACTTATCC.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono         CD14 Mono \n##  TGGAACTGTAAGGA.1  TGGAACTGTCTCTA.1  TGGAAGCTGATAGA.1  TGGAAGCTGGCATT.1 \n##             CD8 T         CD14 Mono       CD4 Naive T         CD14 Mono \n##  TGGAAGCTTCCGTC.1  TGGACCCTGGGATG.1  TGGACCCTGTACGT.1  TGGACCCTTCGCTC.1 \n##       CD4 Naive T         CD14 Mono                 B       T activated \n##  TGGACCCTTTGCAG.1  TGGACTGAAACTGC.1  TGGACTGAAGATGA.1  TGGACTGACCAAGT.1 \n##                NK       T activated       CD4 Naive T         CD14 Mono \n##  TGGACTGATCGCTC.1  TGGACTGATGCCCT.1  TGGAGACTACTTTC.1  TGGAGACTAGCAAA.1 \n##                 B       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  TGGAGACTCTTTAC.1  TGGAGACTGCCTTC.1  TGGAGACTTAAGGA.1  TGGAGGGAACTGTG.1 \n##         CD14 Mono      CD4 Memory T       CD4 Naive T             CD8 T \n##  TGGAGGGAGGTTAC.1  TGGAGGGATATCTC.1  TGGAGGGATGTAGC.1  TGGATCGAGCGTTA.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  TGGATCGAGTGTCA.1  TGGATCGATCCTGC.1  TGGATCGATCGCCT.1  TGGATCGATGCAAC.1 \n##         CD16 Mono         CD14 Mono             CD8 T      CD4 Memory T \n##  TGGATGACAGCAAA.1  TGGATGTGAAGAGT.1  TGGATGTGAGCTAC.1  TGGATGTGCACTTT.1 \n##         CD14 Mono      CD4 Memory T         CD16 Mono      CD4 Memory T \n##  TGGATGTGCATTTC.1  TGGATGTGGTATCG.1  TGGATGTGGTTGTG.1  TGGATGTGTAGCGT.1 \n##         CD14 Mono                 B      CD4 Memory T      CD4 Memory T \n##  TGGATGTGTCTTAC.1  TGGATGTGTGCTCC.1  TGGATGTGTGTGCA.1  TGGATTCTATAAGG.1 \n##         CD14 Mono                NK      CD4 Memory T         CD14 Mono \n##  TGGATTCTCAGTCA.1  TGGATTCTGAGGAC.1  TGGATTCTGTCACA.1  TGGCAATGAGAAGT.1 \n##         CD14 Mono         CD14 Mono             CD8 T       B Activated \n##  TGGCAATGAGGGTG.1  TGGCAATGATACCG.1  TGGCAATGATCACG.1  TGGCAATGCCATAG.1 \n##                 B         CD14 Mono      CD4 Memory T         CD16 Mono \n##  TGGCAATGCTACGA.1  TGGCAATGGGTCTA.1  TGGCAATGTGCCTC.1  TGGCAATGTGTTCT.1 \n##         CD14 Mono       T activated         CD14 Mono       CD4 Naive T \n##  TGGCACCTACAGTC.1  TGGCACCTGATAAG.1  TGGGTATGACCATG.1  TGGGTATGAGATCC.1 \n##             CD8 T         CD14 Mono         CD14 Mono         CD14 Mono \n##  TGGGTATGCGATAC.1  TGGGTATGCGGAGA.1  TGGGTATGGACACT.1  TGGGTATGTACTGG.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T       CD4 Naive T \n##  TGGGTATGTGGTAC.1  TGGGTATGTTGACG.1  TGGTACGAACCTAG.1  TGGTACGAAGCTAC.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono         CD14 Mono \n##  TGGTACGACTTAGG.1  TGGTACGATACGAC.1  TGGTAGACACCACA.1  TGGTAGACACCCTC.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono                 B \n##  TGGTAGACGGAGTG.1  TGGTAGACGTTCAG.1  TGGTAGACTAACCG.1  TGGTAGACTACTGG.1 \n##                DC       T activated       T activated         CD14 Mono \n##  TGGTAGACTCTTTG.1  TGGTAGTGAAGAAC.1  TGGTAGTGACTACG.1  TGGTAGTGGGACTT.1 \n##       CD4 Naive T       T activated         CD14 Mono         CD14 Mono \n##  TGGTAGTGGTCATG.1  TGGTAGTGTGTGAC.1  TGGTATCTAAGTAG.1  TGGTATCTACAGCT.1 \n##                NK      CD4 Memory T         CD14 Mono               pDC \n##  TGGTATCTAGCTAC.1  TGGTATCTCGGAGA.1  TGGTATCTTTCGCC.1  TGGTCAGAAGGTTC.1 \n##         CD16 Mono       T activated             CD8 T      CD4 Memory T \n##  TGGTCAGATTCACT.1  TGGTTACTCCATAG.1  TGGTTACTGCGTTA.1  TGGTTACTTTCTTG.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono         CD14 Mono \n##  TGGTTACTTTGCTT.1  TGGTTACTTTGGTG.1  TGTAAAACAGGGTG.1  TGTAAAACATACCG.1 \n##         CD14 Mono                DC         CD14 Mono       CD4 Naive T \n##  TGTAAAACCAACTG.1  TGTAAAACCAGATC.1  TGTAAAACCTCGAA.1  TGTAAAACGAAAGT.1 \n##                 B       T activated         CD14 Mono                NK \n##  TGTAACCTAAGTAG.1  TGTAACCTACGTAC.1  TGTAACCTCCACAA.1  TGTAACCTCCCTCA.1 \n##       B Activated         CD14 Mono       T activated         CD14 Mono \n##  TGTAACCTCTCCAC.1  TGTAACCTTTCATC.1  TGTAATGAACTTTC.1  TGTAATGAATCGGT.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono         CD16 Mono \n##  TGTAATGACAGTCA.1  TGTAATGACCCGTT.1  TGTAATGACCGATA.1  TGTAATGACTCGCT.1 \n##       T activated      CD4 Memory T                NK             CD8 T \n##  TGTACTTGCACAAC.1  TGTACTTGCAGAGG.1  TGTACTTGCGACAT.1  TGTACTTGCGCATA.1 \n##                NK                NK         CD16 Mono         CD14 Mono \n##  TGTACTTGGCAAGG.1  TGTACTTGGTTAGC.1  TGTACTTGTCCTAT.1  TGTACTTGTCGCAA.1 \n##      CD4 Memory T      CD4 Memory T      CD4 Memory T       T activated \n##  TGTACTTGTGTCTT.1  TGTAGGTGTCCCAC.1  TGTAGTCTACCCAA.1  TGTAGTCTGCGGAA.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T                 B \n##  TGTAGTCTTAACCG.1  TGTAGTCTTCGCAA.1  TGTAGTCTTTGAGC.1  TGTATCTGAACGAA.1 \n##      CD4 Memory T      CD4 Memory T       CD4 Naive T         CD14 Mono \n##  TGTATCTGGTAAGA.1  TGTATCTGGTGTTG.1  TGTATGCTCGTCTC.1  TGTATGCTTCTCGC.1 \n##       CD4 Naive T       CD4 Naive T                DC      CD4 Memory T \n##  TGTCAGGACATGAC.1  TGTCAGGACGAATC.1  TGTCAGGACTTGAG.1  TGTCTAACGGAGCA.1 \n##         CD14 Mono       B Activated                DC                NK \n##  TGTGACGAAACGTC.1  TGTGACGAAGCCTA.1  TGTGACGACAACCA.1  TGTGACGACCCTCA.1 \n##         CD14 Mono         CD14 Mono             CD8 T         CD14 Mono \n##  TGTGACGAGAGATA.1  TGTGACGATCATTC.1  TGTGACGATCTAGG.1  TGTGAGACATTCCT.1 \n##       CD4 Naive T      CD4 Memory T                NK             CD8 T \n##  TGTGAGACCATACG.1  TGTGAGACCATGCA.1  TGTGAGACCGCAAT.1  TGTGAGTGAACCAC.1 \n##      CD4 Memory T      CD4 Memory T       CD4 Naive T         CD14 Mono \n##  TGTGAGTGAAGTAG.1  TGTGAGTGCTGATG.1  TGTGAGTGCTTCTA.1  TGTGAGTGTATTCC.1 \n##       CD4 Naive T             CD8 T                 B      CD4 Memory T \n##  TGTGAGTGTTATCC.1  TGTGAGTGTTTCAC.1  TGTGATCTTAACGC.1  TGTGGATGAGCCTA.1 \n##             Eryth                 B       CD4 Naive T         CD16 Mono \n##  TGTGGATGGGCAAG.1  TGTGGATGGGTTCA.1  TGTGGATGTTACTC.1  TGTTAAGACAAAGA.1 \n##                DC       T activated      CD4 Memory T                NK \n##  TGTTAAGACTATTC.1  TGTTAAGAGTGTCA.1  TGTTAAGATTGTCT.1  TGTTACACAGTGCT.1 \n##         CD14 Mono      CD4 Memory T       CD4 Naive T         CD16 Mono \n##  TGTTACACATCGAC.1  TGTTACACGTTCTT.1  TGTTACACTCCTAT.1  TGTTACACTGTAGC.1 \n##      CD4 Memory T       B Activated         CD14 Mono         CD14 Mono \n##  TGTTACTGAAACAG.1  TGTTACTGAAAGCA.1  TGTTACTGCTTCCG.1  TGTTACTGGAGCTT.1 \n##      CD4 Memory T         CD16 Mono       T activated         CD14 Mono \n##  TGTTACTGTCAGTG.1  TGTTACTGTGCTCC.1  TTAACCACGGTGAG.1  TTAACCACTGTCAG.1 \n##       CD4 Naive T      CD4 Memory T      CD4 Memory T      CD4 Memory T \n##  TTACAGCTCATGCA.1  TTACAGCTCGTGTA.1  TTACAGCTTACTGG.1  TTACCATGCCTATT.1 \n##       CD4 Naive T                 B         CD14 Mono                 B \n##  TTACCATGCCTTTA.1  TTACCATGGACAGG.1  TTACCATGTTCGTT.1  TTACGACTAACCTG.1 \n##                NK      CD4 Memory T       B Activated         CD14 Mono \n##  TTACGACTCCGCTT.1  TTACGACTCCTCCA.1  TTACGACTCTCAGA.1  TTACGACTGGACAG.1 \n##                DC       CD4 Naive T         CD14 Mono         CD16 Mono \n##  TTACGACTTGCCCT.1  TTACGTACGTAAGA.1  TTACGTACTGTCAG.1  TTACGTACTGTGAC.1 \n##                DC       CD4 Naive T                DC         CD14 Mono \n##  TTACTCGAAACGAA.1  TTACTCGAACCAAC.1  TTAGAATGAAAGTG.1  TTAGAATGTGTGAC.1 \n##       CD4 Naive T       CD4 Naive T       B Activated       T activated \n##  TTAGACCTAAGAGT.1  TTAGACCTAGAATG.1  TTAGACCTAGTGTC.1  TTAGACCTCCATAG.1 \n##                Mk       CD4 Naive T         CD14 Mono         CD14 Mono \n##  TTAGACCTGTTAGC.1  TTAGCTACTGTCAG.1  TTAGGGACAAGAGT.1  TTAGGGACAGCAAA.1 \n##                NK         CD14 Mono                NK         CD14 Mono \n##  TTAGGGACCCACAA.1  TTAGGGACGTACGT.1  TTAGGGACTCTATC.1  TTAGGGACTGAAGA.1 \n##         CD14 Mono         CD16 Mono       CD4 Naive T       CD4 Naive T \n##  TTAGGGTGACGCAT.1  TTAGGGTGAGCCTA.1  TTAGGGTGGCTGAT.1  TTAGGGTGTTTCGT.1 \n##      CD4 Memory T         CD16 Mono             CD8 T         CD14 Mono \n##  TTAGGTCTTCTGGA.1  TTAGGTCTTTGGTG.1  TTAGTCACCGAGTT.1  TTAGTCACGGTCAT.1 \n##       CD4 Naive T       B Activated         CD14 Mono                 B \n##  TTAGTCACTATGCG.1  TTAGTCACTGAGGG.1  TTAGTCTGAGTCGT.1  TTAGTCTGCTGTAG.1 \n##             CD8 T         CD16 Mono         CD14 Mono       CD4 Naive T \n##  TTAGTCTGGAAGGC.1  TTAGTCTGGCGAGA.1  TTAGTCTGTAGCCA.1  TTAGTCTGTGGATC.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono         CD14 Mono \n##  TTAGTCTGTTCACT.1  TTATCCGAAGGTTC.1  TTATCCGAGATACC.1  TTATCCGAGTGTTG.1 \n##                NK       CD4 Naive T                 B      CD4 Memory T \n##  TTATCCGATCCTTA.1  TTATCCGATTGGCA.1  TTATGAGAGGCAAG.1  TTATGAGATACGCA.1 \n##             CD8 T         CD14 Mono       CD4 Naive T         CD14 Mono \n##  TTATGCACCACTAG.1  TTATGCACCCGCTT.1  TTATGCACCCTCAC.1  TTATGGCTCCTTCG.1 \n##       CD4 Naive T                NK       CD4 Naive T       B Activated \n##  TTATGGCTGGTCAT.1  TTATGGCTTCATTC.1  TTATGGCTTGGAGG.1  TTATTCCTCCAACA.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T         CD16 Mono \n##  TTATTCCTCGTGTA.1  TTATTCCTGAGCTT.1  TTATTCCTGCGATT.1  TTATTCCTTCTCTA.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  TTATTCCTTCTTTG.1  TTCAAAGAACCCTC.1  TTCAAAGAAGGTCT.1  TTCAAAGACATGAC.1 \n##         CD16 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  TTCAAAGACCCGTT.1  TTCAAAGACGTCTC.1  TTCAAAGATAACCG.1  TTCAAAGATGACCA.1 \n##         CD14 Mono       CD4 Naive T             CD8 T      CD4 Memory T \n##  TTCAAAGATTGACG.1  TTCAACACATGCCA.1  TTCAACACCAACTG.1  TTCAACACCTGTGA.1 \n##       T activated             CD8 T         CD14 Mono             CD8 T \n##  TTCAAGCTACAGTC.1  TTCAAGCTGACAAA.1  TTCAAGCTGTACAC.1  TTCAAGCTGTTACG.1 \n##       T activated         CD14 Mono         CD14 Mono       CD4 Naive T \n##  TTCACAACATCTTC.1  TTCACAACCCGTTC.1  TTCACAACCTGAGT.1  TTCACAACTGACTG.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono                 B \n##  TTCACAACTGCAAC.1  TTCACCCTACGACT.1  TTCACCCTGGTAGG.1  TTCACCCTTGCACA.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono         CD14 Mono \n##  TTCAGACTAAGGGC.1  TTCAGACTAGCCTA.1  TTCAGACTCCGAAT.1  TTCAGTACAGCCAT.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T      CD4 Memory T \n##  TTCAGTACCTGTTT.1  TTCAGTACGCTAAC.1  TTCAGTACTTCGCC.1  TTCAGTTGAAAGCA.1 \n##       CD4 Naive T         CD14 Mono         CD16 Mono                Mk \n##  TTCAGTTGCCCTTG.1  TTCAGTTGCGAATC.1  TTCAGTTGCGTCTC.1  TTCAGTTGCTACGA.1 \n##         CD14 Mono       B Activated         CD14 Mono      CD4 Memory T \n##  TTCAGTTGTCTTTG.1  TTCATCGAGTCTGA.1  TTCATCGATCAGGT.1  TTCATCGATGAGAA.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono         CD14 Mono \n##  TTCATCGATTGCAG.1  TTCATGACAGCCAT.1  TTCATGACAGCGGA.1  TTCATGACCTGACA.1 \n##         CD14 Mono             CD8 T             CD8 T                DC \n##  TTCATGTGCGACTA.1  TTCATGTGCGTGAT.1  TTCATGTGCTCTAT.1  TTCATGTGGCGTTA.1 \n##       T activated         CD16 Mono         CD14 Mono       CD4 Naive T \n##  TTCATGTGGTATCG.1  TTCATGTGTTCTCA.1  TTCATTCTAAAAGC.1  TTCATTCTACAGCT.1 \n##         CD16 Mono       CD4 Naive T             CD8 T         CD14 Mono \n##  TTCATTCTACAGTC.1  TTCATTCTCACAAC.1  TTCATTCTCCAAGT.1  TTCATTCTTCCTGC.1 \n##                 B             CD8 T                Mk       CD4 Naive T \n##  TTCATTCTTCTCGC.1  TTCCAAACAGGTTC.1  TTCCAAACGGCGAA.1  TTCCAAACGTGTCA.1 \n##         CD14 Mono                DC         CD16 Mono      CD4 Memory T \n##  TTCCAAACGTTCTT.1  TTCCATGAAAGGTA.1  TTCCATGAATGACC.1  TTCCATGACTTACT.1 \n##         CD14 Mono       B Activated             CD8 T      CD4 Memory T \n##  TTCCATGAGCATCA.1  TTCCATGATCGCCT.1  TTCCCACTGCAGTT.1  TTCCCACTTTACCT.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono       CD4 Naive T \n##  TTCCTAGACTGTCC.1  TTCCTAGAGGATCT.1  TTCGAGGACATGCA.1  TTCGAGGATGCAGT.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono                DC \n##  TTCGATTGAAGTGA.1  TTCGATTGCTTGGA.1  TTCGATTGTGCCTC.1  TTCGGAGAATTCGG.1 \n##         CD14 Mono               pDC                 B       CD4 Naive T \n##  TTCGGAGACATTGG.1  TTCGGAGACGAACT.1  TTCGGAGACGTGTA.1  TTCGTATGATCGAC.1 \n##       CD4 Naive T         CD16 Mono         CD14 Mono         CD14 Mono \n##  TTCGTATGTCCGTC.1  TTCGTATGTGACAC.1  TTCTACGAAACGTC.1  TTCTACGAGAGATA.1 \n##                DC      CD4 Memory T      CD4 Memory T                DC \n##  TTCTACGAGTCGAT.1  TTCTACGATACAGC.1  TTCTAGTGAGGAGC.1  TTCTAGTGAGTGTC.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T         CD16 Mono \n##  TTCTAGTGCGCCTT.1  TTCTAGTGGAAAGT.1  TTCTCAGAAAAACG.1  TTCTCAGAAATCGC.1 \n##         CD16 Mono                 B         CD14 Mono                DC \n##  TTCTCAGACCTTAT.1  TTCTCAGATACGCA.1  TTCTCAGATACTGG.1  TTCTCAGATCTCGC.1 \n##      CD4 Memory T             CD8 T      CD4 Memory T                 B \n##  TTCTGATGAGCATC.1  TTCTGATGAGCTAC.1  TTCTGATGAGTTCG.1  TTCTGATGCCAACA.1 \n##                NK         CD14 Mono         CD16 Mono                Mk \n##  TTCTGATGGAGGAC.1  TTCTGATGGCCTTC.1  TTCTGATGGTCATG.1  TTCTGATGTACTTC.1 \n##                DC         CD14 Mono       CD4 Naive T         CD14 Mono \n##  TTCTGATGTCATTC.1  TTCTGATGTCTCGC.1  TTCTTACTCGGAGA.1  TTCTTACTGGTAGG.1 \n##      CD4 Memory T       T activated      CD4 Memory T         CD16 Mono \n##  TTGAACCTAACTGC.1  TTGAACCTAATGCC.1  TTGAACCTCCGTAA.1  TTGAACCTCGGTAT.1 \n##                 B         CD14 Mono         CD14 Mono             CD8 T \n##  TTGAACCTCTACCC.1  TTGAATGAAAACGA.1  TTGAATGAAGTTCG.1  TTGAATGACTGACA.1 \n##         CD16 Mono       CD4 Naive T         CD16 Mono         CD14 Mono \n##  TTGACACTCTGCTC.1  TTGACACTGACACT.1  TTGACACTGAGGTG.1  TTGAGGACATGCTG.1 \n##                 B         CD16 Mono       CD4 Naive T      CD4 Memory T \n##  TTGAGGACCTTGCC.1  TTGAGGACTAGCCA.1  TTGAGGTGACGTAC.1  TTGAGGTGATCAGC.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T       T activated \n##  TTGAGGTGCATCAG.1  TTGAGGTGGGTTTG.1  TTGAGGTGTAGACC.1  TTGATCTGACGGGA.1 \n##      CD4 Memory T      CD4 Memory T       CD4 Naive T         CD16 Mono \n##  TTGATCTGGACGTT.1  TTGATCTGGCTGAT.1  TTGATCTGGGAACG.1  TTGATCTGGGTTTG.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono       CD4 Naive T \n##  TTGATCTGTACTGG.1  TTGCATTGACCACA.1  TTGCATTGAGCACT.1  TTGCATTGCAGAGG.1 \n##       CD4 Naive T      CD4 Memory T      CD4 Memory T      CD4 Memory T \n##  TTGCATTGCAGTTG.1  TTGCATTGCTCATT.1  TTGCATTGCTGAGT.1  TTGCATTGGGTAGG.1 \n##         CD16 Mono         CD14 Mono       CD4 Naive T         CD14 Mono \n##  TTGCATTGGGTCAT.1  TTGCATTGGGTGGA.1  TTGCATTGGTAGCT.1  TTGCATTGTTTGGG.1 \n##       T activated               pDC       T activated                Mk \n##  TTGCTAACACCACA.1  TTGCTAACCGCATA.1  TTGCTAACCTAGCA.1  TTGCTATGGCTCCT.1 \n##         CD14 Mono         CD14 Mono             CD8 T         CD16 Mono \n##  TTGCTATGGTGTAC.1  TTGCTATGTCAGGT.1  TTGCTATGTGCGTA.1  TTGGAGACACGTAC.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono       CD4 Naive T \n##  TTGGAGTGAGGGTG.1  TTGGAGTGCACTGA.1  TTGGAGTGCTCGAA.1  TTGGAGTGCTGTAG.1 \n##                 B         CD14 Mono       CD4 Naive T         CD14 Mono \n##  TTGGAGTGGTATGC.1  TTGGAGTGGTTGTG.1  TTGGAGTGTATTCC.1  TTGGAGTGTTCCCG.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  TTGGGAACTAGCCA.1  TTGGTACTACACCA.1  TTGGTACTCTCTTA.1  TTGGTACTGCTTAG.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono      CD4 Memory T \n##  TTGGTACTGGTTCA.1  TTGGTACTGTCATG.1  TTGGTACTGTTCGA.1  TTGGTACTTACTGG.1 \n##         CD14 Mono       CD4 Naive T                 B                NK \n##  TTGGTACTTAGAAG.1  TTGTACACATAAGG.1  TTGTACACCAGAAA.1  TTGTACACCGGTAT.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T      CD4 Memory T \n##  TTGTAGCTAAGATG.1  TTGTAGCTAATGCC.1  TTGTAGCTAGTCAC.1  TTGTAGCTCGCCTT.1 \n##                DC       CD4 Naive T      CD4 Memory T                 B \n##  TTGTAGCTCTCATT.1  TTGTAGCTCTCGCT.1  TTGTAGCTGCGTTA.1  TTGTAGCTGGTGAG.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T                DC \n##  TTGTCATGAGATGA.1  TTGTCATGCTAGTG.1  TTGTCATGCTGGTA.1  TTGTCATGGTCACA.1 \n##                NK       CD4 Naive T                Mk      CD4 Memory T \n##  TTTAGAGAATCAGC.1  TTTAGAGACTGGAT.1  TTTAGAGAGACGAG.1  TTTAGAGAGCATAC.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono                Mk \n##  TTTAGAGAGGACTT.1  TTTAGAGATCCAAG.1  TTTAGAGATCCTAT.1  TTTAGAGATTCATC.1 \n##      CD4 Memory T       CD4 Naive T      CD4 Memory T         CD14 Mono \n##  TTTAGCTGATTCCT.1  TTTAGCTGCAATCG.1  TTTAGCTGCATCAG.1  TTTAGCTGTTTGTC.1 \n##         CD14 Mono         CD14 Mono                 B         CD14 Mono \n##  TTTAGGCTACACGT.1  TTTAGGCTCCCTAC.1  TTTAGGCTCTCGAA.1  TTTAGGCTTAGCCA.1 \n##                 B         CD14 Mono                 B         CD14 Mono \n##  TTTAGGCTTTCGGA.1  TTTATCCTAAGTGA.1  TTTATCCTCCCTTG.1  TTTATCCTGCGAGA.1 \n##         CD14 Mono       CD4 Naive T                 B         CD16 Mono \n##  TTTATCCTGGAAAT.1  TTTATCCTGGGATG.1  TTTCACGAGAAACA.1  TTTCACGATACTTC.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono                 B \n##  TTTCACGATGCTGA.1  TTTCAGTGCCTGTC.1  TTTCAGTGGACGAG.1  TTTCAGTGTCCTGC.1 \n##             CD8 T       CD4 Naive T      CD4 Memory T      CD4 Memory T \n##  TTTCCAGACGCATA.1  TTTCGAACCAGATC.1  TTTCGAACTTGCGA.1  TTTCGAACTTGCTT.1 \n##       CD4 Naive T       CD4 Naive T      CD4 Memory T         CD14 Mono \n##  TTTCTACTATGACC.1  TTTCTACTGAGGGT.1  TTTCTACTGGTCTA.1  TTTGACTGAAGCAA.1 \n##      CD4 Memory T                 B      CD4 Memory T       CD4 Naive T \n##  TTTGACTGAGTCGT.1  TTTGACTGCCGCTT.1  TTTGACTGTTACCT.1  TTTGCATGCTTCGC.1 \n##                 B       CD4 Naive T         CD14 Mono                 B \n##  TTTGCATGGTCCTC.1  AAACATACCAAGCT.1  AAACATACCCCTAC.1  AAACATACCCGTAA.1 \n##                 B             CD8 T               pDC       CD4 Naive T \n##  AAACATACCCTCGT.1  AAACATACGAGGTG.1  AAACATACGTCGTA.1  AAACATACTCAGGT.1 \n##                 B       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  AAACATTGACCTGA.1  AAACATTGACTTTC.1  AAACATTGGTACCA.1  AAACATTGGTGTCA.1 \n##         CD14 Mono       CD4 Naive T                 B                 B \n##  AAACATTGTAGCCA.1  AAACATTGTCCAGA.1  AAACATTGTGCTAG.1  AAACATTGTGTCCC.1 \n##         CD14 Mono         CD14 Mono       T activated               pDC \n##  AAACATTGTGTGGT.1  AAACATTGTTTGTC.1  AAACCGTGCTCTCG.1  AAACCGTGCTGGAT.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono       T activated \n##  AAACGCACAAGGGC.1  AAACGCACGCAGAG.1  AAACGCACGTACAC.1  AAACGCTGAAGAAC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  AAACGCTGAGCACT.1  AAACGCTGGCCCTT.1  AAACGCTGGGTGGA.1  AAACGGCTCTTGGA.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono         CD14 Mono \n## AAACGGCTTACTCT.11  AAACGGCTTGCTCC.1 AAACTTGACGTGTA.11  AAACTTGAGACACT.1 \n##         CD14 Mono       B Activated         CD14 Mono         CD14 Mono \n##  AAACTTGAGCTATG.1  AAACTTGATCTAGG.1  AAACTTGATCTCAT.1  AAAGAGACAGCCAT.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T                NK \n##  AAAGAGACCTCTAT.1  AAAGAGACGCAGAG.1  AAAGAGACTGTGAC.1  AAAGATCTGAGAGC.1 \n##                 B       T activated         CD14 Mono         CD16 Mono \n##  AAAGATCTTGCGTA.1  AAAGATCTTTCTCA.1  AAAGCAGAAACAGA.1  AAAGCAGAACGGGA.1 \n##       CD4 Naive T                 B         CD14 Mono         CD14 Mono \n##  AAAGCAGAACGTGT.1  AAAGCAGAATTGGC.1  AAAGCAGATTGCGA.1  AAAGCCTGGGTTCA.1 \n##       B Activated       B Activated                NK       B Activated \n##  AAAGCCTGGTATCG.1  AAAGCCTGTTCTAC.1  AAAGGCCTACCATG.1  AAAGGCCTAGCTCA.1 \n##         CD14 Mono      CD4 Memory T       CD4 Naive T         CD14 Mono \n##  AAAGGCCTCAAAGA.1  AAAGGCCTCCGATA.1  AAAGGCCTGACACT.1  AAAGGCCTGTCTTT.1 \n##         CD14 Mono                DC         CD14 Mono      CD4 Memory T \n##  AAAGGCCTTCCCAC.1  AAAGGCCTTTGCAG.1  AAAGTTTGACCCTC.1  AAAGTTTGCTTTAC.1 \n##       CD4 Naive T         CD14 Mono         CD16 Mono      CD4 Memory T \n##  AAAGTTTGTCCTTA.1  AAAGTTTGTTATCC.1  AAAGTTTGTTCGCC.1  AAATACTGCAGCTA.1 \n##         CD16 Mono       CD4 Naive T                NK         CD16 Mono \n##  AAATACTGCATGAC.1  AAATACTGGACGAG.1  AAATCAACAAGAAC.1  AAATCAACGGCGAA.1 \n##       T activated               pDC             CD8 T         CD14 Mono \n##  AAATCAACTTACTC.1  AAATCATGAAGGTA.1  AAATCATGCTCATT.1  AAATCATGGATAGA.1 \n##                 B                NK      CD4 Memory T                DC \n##  AAATCATGGGACTT.1  AAATCATGTTGAGC.1  AAATCCCTAGACTC.1  AAATCCCTAGGTCT.1 \n##                Mk      CD4 Memory T      CD4 Memory T       CD4 Naive T \n##  AAATCTGAACCACA.1  AAATCTGATCGCCT.1  AAATGGGAAACGTC.1 AAATGGGAAGATCC.11 \n##                NK             CD8 T       CD4 Naive T         CD14 Mono \n##  AAATGGGACATGGT.1  AAATGGGACCTCCA.1  AAATGGGACGTTAG.1  AAATGGGAGTATGC.1 \n##             CD8 T                DC      CD4 Memory T                NK \n##  AAATGGGATAGCGT.1  AAATGGGATGAGAA.1  AAATGTTGACCTAG.1  AAATGTTGAGTAGA.1 \n##       B Activated                 B         CD14 Mono         CD16 Mono \n##  AAATGTTGCCTTCG.1  AAATGTTGCGTAGT.1  AAATGTTGCTACTT.1  AAATGTTGGATAGA.1 \n##       CD4 Naive T       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  AAATGTTGGATGAA.1  AAATGTTGTAAGGA.1  AAATTCGAATACCG.1  AAATTCGACTCTAT.1 \n##         CD16 Mono       CD4 Naive T       CD4 Naive T       CD4 Naive T \n##  AAATTCGACTGTCC.1  AAATTCGAGTACAC.1  AAATTCGATACTTC.1  AAATTCGATAGACC.1 \n##       T activated                 B                 B                Mk \n##  AAATTCGATCTCGC.1  AAATTCGATGCTAG.1 AAATTCGATGTGCA.11  AAATTGACGACAGG.1 \n##      CD4 Memory T         CD14 Mono       CD4 Naive T       B Activated \n##  AACAAACTATACCG.1  AACAAACTCAGGAG.1  AACAAACTGCGTAT.1  AACAAACTTGAAGA.1 \n##      CD4 Memory T       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  AACAATACAAGTGA.1  AACAATACCGTTAG.1  AACAATACCTGAAC.1  AACAATACGATAAG.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T                NK \n##  AACAATACGCAGAG.1  AACACGTGCAATCG.1  AACACGTGTGCTTT.1  AACACTCTTCAAGC.1 \n##       CD4 Naive T                 B      CD4 Memory T         CD14 Mono \n##  AACACTCTTGATGC.1  AACAGAGAACGGAG.1  AACAGAGAAGTTCG.1  AACAGAGACATGCA.1 \n##       T activated       CD4 Naive T      CD4 Memory T         CD16 Mono \n##  AACAGAGACTACCC.1  AACAGAGATCTGGA.1  AACAGAGATGCTAG.1  AACAGCACAATCGC.1 \n##       B Activated       CD4 Naive T         CD14 Mono         CD16 Mono \n##  AACAGCACAGAGTA.1  AACAGCACCCCAAA.1  AACAGCACCCGTAA.1  AACAGCACTATGGC.1 \n##         CD14 Mono         CD14 Mono                 B         CD16 Mono \n##  AACAGCACTCTTTG.1  AACATATGAGTACC.1  AACATATGCACTGA.1  AACATATGGCAAGG.1 \n##         CD16 Mono       CD4 Naive T             CD8 T      CD4 Memory T \n##  AACATATGGCTCCT.1  AACATTGAAGAACA.1  AACATTGAAGTTCG.1  AACATTGACAGGAG.1 \n##         CD14 Mono       CD4 Naive T      CD4 Memory T                Mk \n##  AACATTGAGTTTGG.1  AACATTGATGGTGT.1  AACCACGAAGCCAT.1  AACCACGAAGGTTC.1 \n##         CD16 Mono         CD14 Mono         CD14 Mono       CD4 Naive T \n## AACCACGAGAATCC.11  AACCACGAGCCATA.1  AACCACGAGCCCTT.1  AACCACGAGGTGTT.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono      CD4 Memory T \n##  AACCACGAGTTCGA.1  AACCACGATCGATG.1  AACCACGATCTTAC.1  AACCACGATGCCTC.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T         CD14 Mono \n##  AACCACGATTCTTG.1  AACCAGTGACGCAT.1  AACCAGTGATCTCT.1  AACCAGTGATGTCG.1 \n##         CD14 Mono         CD14 Mono               pDC         CD14 Mono \n##  AACCAGTGCTGCAA.1  AACCAGTGGGAACG.1  AACCAGTGTGCACA.1  AACCCAGAACCCAA.1 \n##         CD16 Mono       CD4 Naive T             CD8 T       CD4 Naive T \n##  AACCCAGAACGGTT.1  AACCCAGAAGCTAC.1  AACCCAGAGCCTTC.1  AACCCAGAGTGAGG.1 \n##         CD14 Mono             CD8 T         CD16 Mono         CD14 Mono \n##  AACCCAGATTGCTT.1  AACCGATGACACGT.1  AACCGATGCAGATC.1  AACCGATGCTGAAC.1 \n##       CD4 Naive T             CD8 T               pDC       CD4 Naive T \n##  AACCGATGGAGGGT.1  AACCGATGGCGGAA.1  AACCGCCTAATCGC.1  AACCGCCTATCGAC.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T       CD4 Naive T \n##  AACCGCCTCAACTG.1  AACCGCCTCACTCC.1  AACCGCCTCCCACT.1  AACCGCCTCTTCTA.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  AACCGCCTGTGTCA.1  AACCGCCTTAACCG.1  AACCTACTATTGGC.1  AACCTACTCCCGTT.1 \n##         CD16 Mono       CD4 Naive T                NK      CD4 Memory T \n##  AACCTACTCTCATT.1  AACCTACTCTCGAA.1  AACCTTACATACCG.1  AACCTTACGCTGTA.1 \n##         CD14 Mono       T activated         CD16 Mono         CD14 Mono \n##  AACCTTACGTACCA.1  AACCTTTGAAACGA.1  AACCTTTGACGTGT.1  AACCTTTGAGTAGA.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono       CD4 Naive T \n##  AACCTTTGCATTGG.1  AACCTTTGTTTCAC.1  AACCTTTGTTTGGG.1  AACGCAACAGGGTG.1 \n##         CD16 Mono                 B                NK             CD8 T \n##  AACGCAACGTTACG.1  AACGCAACTCCTAT.1  AACGCATGACTACG.1  AACGCATGTAGACC.1 \n##       T activated                DC         CD16 Mono       CD4 Naive T \n##  AACGCATGTGCTCC.1  AACGCATGTGTCCC.1 AACGCCCTCCCTCA.11  AACGCCCTCCCTTG.1 \n##         CD14 Mono                NK                 B         CD16 Mono \n##  AACGCCCTCCTCGT.1  AACGCCCTCGATAC.1  AACGCCCTGTAAAG.1  AACGGTACATGCCA.1 \n##      CD4 Memory T         CD14 Mono      CD4 Memory T         CD16 Mono \n##  AACGGTACCGTGAT.1  AACGGTACGAGGCA.1  AACGGTACGCTATG.1  AACGGTACGGACGA.1 \n##      CD4 Memory T         CD14 Mono      CD4 Memory T               pDC \n##  AACGGTACGTATGC.1  AACGGTACGTTACG.1  AACGGTACTACAGC.1  AACGGTACTCGATG.1 \n##       CD4 Naive T       CD4 Naive T                 B       T activated \n##  AACGGTACTGTCAG.1  AACGGTTGCTGACA.1  AACGGTTGGGTCTA.1  AACGGTTGGTATGC.1 \n##         CD14 Mono         CD16 Mono         CD14 Mono       CD4 Naive T \n##  AACGGTTGTCCCAC.1  AACGTCGACAAAGA.1  AACGTCGACCTGAA.1  AACGTGTGAAAAGC.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T         CD14 Mono \n##  AACGTGTGAAGGGC.1  AACGTGTGGACGGA.1  AACGTGTGTGAGGG.1  AACGTTCTAGCAAA.1 \n##       CD4 Naive T         CD14 Mono                DC         CD14 Mono \n##  AACGTTCTAGCGTT.1  AACGTTCTCCTATT.1  AACGTTCTGGGTGA.1  AACGTTCTGTTGGT.1 \n##         CD16 Mono       CD4 Naive T                 B       CD4 Naive T \n##  AACGTTCTTACTTC.1 AACGTTCTTCGCTC.11  AACGTTCTTTTGCT.1  AACTACCTAAACAG.1 \n##       CD4 Naive T       CD4 Naive T                NK       CD4 Naive T \n##  AACTACCTAAGCCT.1  AACTACCTAGATCC.1  AACTACCTCAATCG.1  AACTACCTCTAGCA.1 \n##         CD14 Mono         CD16 Mono      CD4 Memory T       B Activated \n##  AACTCACTCCCTAC.1  AACTCACTGAGGGT.1  AACTCACTTATCGG.1  AACTCACTTGAGGG.1 \n##                DC       T activated       CD4 Naive T      CD4 Memory T \n##  AACTCGGACCCAAA.1  AACTCGGACTAGCA.1  AACTCGGATAAGGA.1  AACTCTTGGGCATT.1 \n##       B Activated         CD14 Mono         CD16 Mono       CD4 Naive T \n##  AACTCTTGGTCTTT.1  AACTCTTGTTGACG.1  AACTGTCTCGGAGA.1  AACTGTCTCTATGG.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  AACTGTCTGCTTAG.1  AACTGTCTGGACTT.1  AACTGTCTGGATCT.1  AACTGTCTTAAGCC.1 \n##         CD16 Mono                 B         CD14 Mono       B Activated \n##  AACTGTCTTGGTAC.1  AACTTGCTATGCTG.1  AACTTGCTCAACTG.1  AACTTGCTCACTGA.1 \n##       CD4 Naive T         CD16 Mono         CD14 Mono                 B \n##  AACTTGCTCCCACT.1  AACTTGCTGGGACA.1  AACTTGCTGGGATG.1  AACTTGCTTCTGGA.1 \n##       CD4 Naive T         CD14 Mono         CD16 Mono         CD14 Mono \n##  AAGAACGAATTCGG.1 AAGAACGACCCAAA.11  AAGAACGACTACTT.1  AAGAACGACTTGTT.1 \n##             CD8 T         CD14 Mono                Mk      CD4 Memory T \n##  AAGAACGATGTGCA.1  AAGAAGACGGGATG.1  AAGAAGACTCTACT.1  AAGAAGACTCTTCA.1 \n##               pDC                 B       T activated       CD4 Naive T \n##  AAGAAGACTGTAGC.1  AAGAAGACTTCCAT.1  AAGAATCTACTGTG.1  AAGAATCTATCGGT.1 \n##       T activated         CD14 Mono         CD14 Mono                 B \n##  AAGAATCTCGTACA.1  AAGAATCTCTGCTC.1  AAGAATCTGACGAG.1  AAGAATCTGAGCAG.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono      CD4 Memory T \n##  AAGAATCTGGTTAC.1  AAGAATCTGTGCAT.1  AAGACAGAAAAACG.1  AAGACAGACGTACA.1 \n##             CD8 T             CD8 T                NK       CD4 Naive T \n##  AAGACAGATTCGGA.1  AAGACAGATTGGCA.1  AAGAGATGAACAGA.1  AAGAGATGCAAAGA.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono         CD14 Mono \n##  AAGAGATGCCGATA.1  AAGAGATGTACGAC.1  AAGAGATGTGCAAC.1  AAGAGATGTTGCTT.1 \n##                 B         CD14 Mono         CD14 Mono       B Activated \n##  AAGATGGAAGACTC.1  AAGATGGACGGTAT.1  AAGATGGAGTCAAC.1  AAGATTACACACCA.1 \n##       CD4 Naive T         CD14 Mono      CD4 Memory T         CD16 Mono \n##  AAGATTACGAATCC.1  AAGATTACGCTATG.1  AAGATTACGGTTTG.1  AAGCAAGACCCTCA.1 \n##         CD14 Mono       CD4 Naive T             CD8 T         CD14 Mono \n##  AAGCAAGAGGTATC.1  AAGCAAGATTCACT.1  AAGCACTGAGGGTG.1  AAGCACTGCCGCTT.1 \n##      CD4 Memory T         CD16 Mono         CD16 Mono                NK \n##  AAGCACTGGAATGA.1  AAGCACTGTTCGCC.1  AAGCCAACCCGCTT.1  AAGCCAACGCCATA.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T         CD16 Mono \n##  AAGCCAACGTGTCA.1  AAGCCAACTCTCCG.1  AAGCCAACTGACCA.1  AAGCCATGGTCACA.1 \n##       CD4 Naive T         CD14 Mono                DC       T activated \n##  AAGCCATGGTCTTT.1  AAGCCATGTCCTCG.1  AAGCCATGTCGTTT.1  AAGCCATGTGACTG.1 \n##                DC                NK       CD4 Naive T                NK \n##  AAGCCATGTTCGCC.1  AAGCCTGAAACGTC.1  AAGCCTGAAGCTCA.1  AAGCGACTAGTCAC.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono                Mk \n##  AAGCGACTCCACAA.1  AAGCGACTGCAGTT.1  AAGCGACTGTACAC.1  AAGCGACTTAAAGG.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono         CD14 Mono \n##  AAGCGTACTACAGC.1  AAGCGTACTCTGGA.1  AAGCGTACTGTCAG.1  AAGGCTACAAGGGC.1 \n##         CD14 Mono       CD4 Naive T      CD4 Memory T                 B \n##  AAGGCTACATCAGC.1  AAGGCTACCTACCC.1  AAGGCTACGAAAGT.1  AAGGCTACTGCTGA.1 \n##       T activated         CD14 Mono       CD4 Naive T                 B \n##  AAGGCTACTGTCAG.1  AAGGCTTGCAAGCT.1  AAGGCTTGCCCAAA.1  AAGGCTTGGAGAGC.1 \n##       B Activated                NK      CD4 Memory T      CD4 Memory T \n##  AAGGCTTGGCGTAT.1  AAGGCTTGGCTCCT.1  AAGGTCACAGCCTA.1  AAGGTCACCAAGCT.1 \n##       CD4 Naive T       CD4 Naive T             CD8 T      CD4 Memory T \n##  AAGGTCACCTTGTT.1  AAGGTCACGTCGAT.1  AAGGTCACTACTGG.1  AAGGTCTGCAGAGG.1 \n##       CD4 Naive T       CD4 Naive T      CD4 Memory T             CD8 T \n##  AAGGTCTGCTCAGA.1  AAGGTCTGCTCTAT.1  AAGGTCTGGACAGG.1  AAGGTCTGTTCAGG.1 \n##         CD14 Mono         CD14 Mono         CD16 Mono         CD14 Mono \n##  AAGGTGCTAAGGGC.1  AAGGTGCTAATCGC.1  AAGGTGCTCTGATG.1  AAGGTGCTGGTTCA.1 \n##                 B      CD4 Memory T         CD14 Mono                 B \n##  AAGGTGCTGTCTTT.1  AAGGTGCTTCCGAA.1  AAGGTGCTTGGATC.1  AAGGTGCTTTCACT.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T      CD4 Memory T \n##  AAGTAACTCTCTCG.1  AAGTAACTTACGAC.1  AAGTAGGACAGGAG.1  AAGTAGGACTAGCA.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono       CD4 Naive T \n##  AAGTAGGATCGCAA.1  AAGTAGGATTGAGC.1  AAGTATACCTAGAC.1  AAGTATACTACAGC.1 \n##         CD16 Mono       CD4 Naive T         CD14 Mono             CD8 T \n##  AAGTATACTCTAGG.1  AAGTATACTTCTCA.1  AAGTCCGAAATGCC.1  AAGTCCGAATCGGT.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T         CD16 Mono \n##  AAGTCCGACCTTCG.1  AAGTCCGACTCTTA.1  AAGTCCGAGGTAAA.1  AAGTCTCTCGAACT.1 \n##         CD16 Mono         CD14 Mono             CD8 T       CD4 Naive T \n##  AAGTCTCTTCATTC.1  AAGTCTCTTTGCTT.1  AAGTGCACAACGAA.1  AAGTGCACAAGCAA.1 \n##                NK                 B       CD4 Naive T       CD4 Naive T \n##  AAGTGCACGTTAGC.1  AAGTGCACTGCCAA.1  AAGTGGCTGTCTAG.1  AAGTTATGACACTG.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono         CD14 Mono \n##  AAGTTATGGAACTC.1  AAGTTATGTACGCA.1  AAGTTATGTTCACT.1  AAGTTATGTTTCGT.1 \n##         CD14 Mono             CD8 T         CD14 Mono         CD14 Mono \n##  AAGTTCCTAAACAG.1  AAGTTCCTAACGAA.1  AAGTTCCTAGCCTA.1  AAGTTCCTCCCGTT.1 \n##       CD4 Naive T                DC             CD8 T                 B \n##  AAGTTCCTGAAACA.1  AAGTTCCTGACGAG.1 AAGTTCCTGGTGGA.11  AAGTTCCTGTATCG.1 \n##         CD14 Mono       T activated       T activated                 B \n##  AAGTTCCTGTTCGA.1  AAGTTCCTTGCTCC.1  AAGTTCCTTTCCCG.1  AATAACACATACCG.1 \n##       CD4 Naive T      CD4 Memory T       CD4 Naive T       T activated \n##  AATAACACTCCGTC.1  AATAACACTGCTGA.1  AATAACACTGGTCA.1  AATAAGCTAGAGGC.1 \n##             CD8 T      CD4 Memory T       B Activated       CD4 Naive T \n##  AATAAGCTTGTAGC.1  AATAAGCTTGTGCA.1  AATAAGCTTTCCGC.1  AATACCCTACCTCC.1 \n##         CD14 Mono         CD14 Mono       B Activated       CD4 Naive T \n## AATACCCTCGTGAT.11 AATACTGACCTGTC.11  AATACTGACTGGTA.1  AATACTGAGGACTT.1 \n##         CD14 Mono      CD4 Memory T             CD8 T       CD4 Naive T \n## AATACTGATCACGA.11  AATAGGGAACCCAA.1  AATAGGGAACTACG.1  AATAGGGAGTCCTC.1 \n##         CD16 Mono         CD16 Mono       CD4 Naive T               pDC \n##  AATAGGGATCAGGT.1  AATAGGGATTAGGC.1  AATAGGGATTCTCA.1  AATAGGGATTCTGT.1 \n##       CD4 Naive T         CD16 Mono         CD14 Mono             CD8 T \n##  AATATCGAATGTCG.1  AATATCGACACCAA.1  AATATCGACTCTCG.1  AATATCGACTTTAC.1 \n##         CD14 Mono         CD14 Mono                 B                DC \n## AATATCGAGAGGCA.11  AATATCGAGCGTAT.1  AATATCGAGTCGAT.1  AATCAAACCAGGAG.1 \n##      CD4 Memory T         CD14 Mono         CD16 Mono         CD14 Mono \n##  AATCAAACTGATGC.1  AATCAAACTGGTCA.1  AATCAAACTGTCTT.1  AATCAAACTTAGGC.1 \n##      CD4 Memory T       CD4 Naive T                 B                DC \n##  AATCCGGAAGCAAA.1  AATCCGGAAGTGCT.1  AATCCGGACTCGCT.1  AATCCGGATCGTTT.1 \n##         CD14 Mono         CD14 Mono         CD16 Mono       CD4 Naive T \n##  AATCCGGATCTCTA.1  AATCCGGATGACCA.1  AATCCTACACGTGT.1  AATCCTACCGCCTT.1 \n##         CD14 Mono      CD4 Memory T       CD4 Naive T         CD14 Mono \n##  AATCCTACCTCCAC.1  AATCCTACGAATCC.1  AATCCTACGGTTTG.1  AATCCTACTCACGA.1 \n##       T activated                DC         CD14 Mono       CD4 Naive T \n##  AATCCTACTCGCCT.1  AATCCTTGATGTCG.1 AATCCTTGCATGGT.11  AATCCTTGCTGGAT.1 \n##                NK         CD14 Mono         CD14 Mono         CD14 Mono \n##  AATCCTTGGTCGTA.1  AATCCTTGTGGATC.1  AATCCTTGTGGTTG.1  AATCGGTGACCCAA.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono       CD4 Naive T \n##  AATCGGTGCGAACT.1  AATCGGTGCGTAGT.1  AATCGGTGCTAAGC.1  AATCGGTGTTGAGC.1 \n##         CD14 Mono         CD14 Mono                 B         CD14 Mono \n##  AATCTAGAACACGT.1  AATCTAGAATAAGG.1  AATCTAGACGACTA.1  AATCTAGAGCGTAT.1 \n##                Mk                NK         CD14 Mono         CD14 Mono \n##  AATCTAGATATCGG.1  AATCTAGATCTTTG.1  AATCTCACAAGAGT.1  AATCTCACGCTCCT.1 \n##         CD14 Mono                 B                 B             CD8 T \n##  AATCTCTGAGAGGC.1  AATCTCTGAGCCTA.1  AATCTCTGCAAAGA.1  AATCTCTGCCCAAA.1 \n##      CD4 Memory T                DC         CD16 Mono         CD16 Mono \n##  AATCTCTGCGACAT.1  AATCTCTGCGTCTC.1  AATCTCTGCTATTC.1  AATCTCTGGAACCT.1 \n##             CD8 T         CD14 Mono         CD14 Mono         CD14 Mono \n##  AATCTCTGGTCTGA.1  AATGAGGAAGGTCT.1  AATGAGGACTATTC.1  AATGAGGACTCAGA.1 \n##       CD4 Naive T       CD4 Naive T       CD4 Naive T             CD8 T \n##  AATGAGGAGTATCG.1  AATGAGGATGCCAA.1 AATGAGGATGTAGC.11  AATGATACGTTTCT.1 \n##         CD14 Mono         CD14 Mono         CD16 Mono                 B \n##  AATGATACTTGAGC.1  AATGCGTGCTGTGA.1  AATGCGTGTACAGC.1  AATGCGTGTCCAAG.1 \n##      CD4 Memory T             CD8 T         CD16 Mono      CD4 Memory T \n##  AATGCGTGTGTTCT.1  AATGGAGAGCAGTT.1  AATGGAGAGGCAAG.1  AATGGCTGAACTGC.1 \n##       CD4 Naive T      CD4 Memory T      CD4 Memory T         CD14 Mono \n##  AATGGCTGCTGGTA.1  AATGGCTGTCAGAC.1  AATGGCTGTGGTCA.1  AATGTAACAAACAG.1 \n##      CD4 Memory T                DC         CD14 Mono       CD4 Naive T \n##  AATGTAACCGTGTA.1  AATGTAACCTGTTT.1  AATGTAACGTCATG.1  AATGTAACTTCGTT.1 \n##       CD4 Naive T      CD4 Memory T                 B                DC \n##  AATGTAACTTGGCA.1 AATGTCCTACGTTG.11  AATGTCCTAGTACC.1  AATGTCCTATTCTC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  AATGTCCTCCGAAT.1  AATGTCCTCGAACT.1 AATGTCCTGTACGT.11  AATGTCCTTGGGAG.1 \n##      CD4 Memory T      CD4 Memory T         CD14 Mono         CD14 Mono \n##  AATGTTGAAACCGT.1  AATGTTGAAGGGTG.1  AATGTTGACGCAAT.1  AATTACGAAAGAAC.1 \n##       T activated         CD14 Mono         CD14 Mono       CD4 Naive T \n##  AATTACGACCTTTA.1  AATTACGACTGGAT.1  AATTACGAGAATGA.1  AATTCCTGAAGGTA.1 \n##       CD4 Naive T         CD14 Mono      CD4 Memory T         CD14 Mono \n##  AATTCCTGACACAC.1  AATTCCTGCATTTC.1  AATTCCTGGTACAC.1  AATTGATGCGTTAG.1 \n##      CD4 Memory T               pDC       CD4 Naive T         CD14 Mono \n##  AATTGATGCTCATT.1  AATTGATGGGTCTA.1  AATTGATGTCAGAC.1  AATTGTGACATCAG.1 \n##         CD16 Mono       CD4 Naive T                 B         CD14 Mono \n##  AATTGTGACTTCTA.1  AATTGTGATGTGAC.1  AATTGTGATTTCGT.1  ACAAAGGAAGCACT.1 \n##      CD4 Memory T         CD16 Mono      CD4 Memory T                 B \n##  ACAAAGGAGACTAC.1  ACAAAGGAGTACGT.1  ACAAAGGATCAGTG.1  ACAAAGGATGGGAG.1 \n##       T activated       T activated         CD16 Mono         CD14 Mono \n##  ACAAATTGAGACTC.1  ACAAATTGCTGAAC.1  ACAAATTGGTTGTG.1 ACAAATTGTAGAAG.11 \n##             CD8 T       T activated         CD14 Mono       CD4 Naive T \n##  ACAACCGACAAAGA.1  ACAACCGAGGTGGA.1  ACAACCGATGTCAG.1  ACAAGAGAAGAGGC.1 \n##      CD4 Memory T         CD16 Mono                 B      CD4 Memory T \n##  ACAAGAGACGCATA.1  ACAAGAGACTAGCA.1  ACAAGAGAGTTGAC.1  ACAAGAGATAGAAG.1 \n##         CD14 Mono                 B         CD14 Mono                DC \n##  ACAAGAGATCTTCA.1  ACAAGAGATTGTGG.1  ACAAGCACATTGGC.1  ACAAGCACCGCAAT.1 \n##                 B                DC       CD4 Naive T       CD4 Naive T \n##  ACAAGCACCTTCTA.1  ACAAGCACTACGCA.1  ACAATAACATTCCT.1  ACAATAACCAGCTA.1 \n##         CD16 Mono       T activated         CD16 Mono         CD14 Mono \n##  ACAATAACCCTGAA.1  ACAATAACTCGATG.1  ACAATCCTATCAGC.1  ACAATCCTATTCGG.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  ACAATCCTCCTCCA.1  ACAATCCTCTCGCT.1  ACAATCCTGACAGG.1  ACAATCCTGTGTCA.1 \n##       CD4 Naive T         CD14 Mono         CD16 Mono                Mk \n##  ACAATCCTTAAGCC.1  ACAATCCTTGGCAT.1  ACAATTGAAAAGCA.1  ACAATTGAAAGGCG.1 \n##         CD14 Mono       CD4 Naive T      CD4 Memory T      CD4 Memory T \n##  ACAATTGAACGGAG.1  ACAATTGAAGATGA.1  ACAATTGACATTCT.1  ACAATTGAGAATAG.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono             CD8 T \n##  ACAATTGAGAGGTG.1  ACAATTGATTGTCT.1  ACACAGACACGGTT.1  ACACAGACATGTGC.1 \n##       CD4 Naive T             CD8 T         CD14 Mono      CD4 Memory T \n##  ACACAGACCGTTGA.1  ACACAGACTTCTAC.1  ACACAGACTTGACG.1  ACACAGACTTGCGA.1 \n##       T activated       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  ACACATCTACACCA.1 ACACATCTCGCCTT.11  ACACCAGAAAGGCG.1  ACACCAGAAATCGC.1 \n##         CD14 Mono               pDC                 B         CD14 Mono \n##  ACACCAGAATGCTG.1  ACACCAGAGACGGA.1  ACACCAGAGATGAA.1  ACACCAGAGCGTTA.1 \n##         CD16 Mono      CD4 Memory T       CD4 Naive T             CD8 T \n##  ACACCAGAGTAAAG.1  ACACCAGATGACCA.1  ACACCAGATTCGTT.1  ACACCCTGACGTGT.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono         CD14 Mono \n##  ACACCCTGGTAAAG.1  ACACCCTGGTTGAC.1  ACACCCTGTCAGAC.1  ACACCCTGTCCAGA.1 \n##      CD4 Memory T         CD16 Mono                 B               pDC \n##  ACACCCTGTTGGCA.1  ACACGAACCCTGAA.1  ACACGAACCTCTAT.1  ACACGAACGTCTAG.1 \n##                 B       CD4 Naive T             CD8 T       CD4 Naive T \n##  ACACGAACGTTGAC.1  ACACGAACTTGTCT.1  ACACGATGAAAAGC.1  ACACGATGAAGCCT.1 \n##         CD14 Mono                NK       T activated         CD14 Mono \n##  ACACGATGACCACA.1  ACACGATGACCTTT.1  ACACGATGACTTTC.1  ACACGATGCTGGAT.1 \n##      CD4 Memory T         CD16 Mono                DC         CD14 Mono \n##  ACACGATGGGTCAT.1  ACACGATGTTCAGG.1  ACACGTGAGAATCC.1  ACACGTGAGCTTAG.1 \n##      CD4 Memory T       CD4 Naive T             CD8 T         CD14 Mono \n##  ACACGTGAGTATGC.1  ACACGTGATCCCAC.1  ACACGTGATCCCGT.1  ACACGTGATGAACC.1 \n##         CD14 Mono         CD14 Mono                NK                DC \n##  ACACGTGATGGTCA.1  ACAGACACACGGAG.1  ACAGACACCGAGAG.1 ACAGACACCTAAGC.11 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  ACAGACACGGTAAA.1  ACAGACACTCAGGT.1  ACAGACACTCTTAC.1  ACAGCAACCATGGT.1 \n##             CD8 T         CD14 Mono                 B         CD14 Mono \n##  ACAGCAACGAACTC.1  ACAGCAACGAGACG.1  ACAGCAACTATGCG.1  ACAGCAACTGAGGG.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  ACAGGTACATGACC.1  ACAGGTACCGAGTT.1  ACAGGTACCGTGTA.1 ACAGGTACGATGAA.11 \n##         CD14 Mono       CD4 Naive T         CD14 Mono                NK \n##  ACAGGTACGCCCTT.1  ACAGGTACGGACTT.1  ACAGGTACTGCTCC.1  ACAGTCGACATGGT.1 \n##         CD14 Mono         CD16 Mono         CD14 Mono         CD14 Mono \n##  ACAGTCGAGAGGAC.1  ACAGTCGATTCGGA.1  ACAGTGACATGTGC.1  ACAGTGACCACCAA.1 \n##         CD16 Mono         CD14 Mono                NK                NK \n##  ACAGTGACCCACCT.1  ACAGTGACGAGGAC.1  ACAGTGACGGTACT.1  ACAGTGACTGCGTA.1 \n##                 B                 B       B Activated       CD4 Naive T \n##  ACAGTGACTGTCCC.1  ACAGTGTGAAGATG.1  ACAGTGTGAAGTGA.1  ACAGTGTGACGGGA.1 \n##       CD4 Naive T         CD14 Mono             CD8 T       CD4 Naive T \n##  ACAGTGTGAGATGA.1  ACAGTGTGCCCAAA.1  ACAGTGTGGCCTTC.1  ACAGTGTGGTTTCT.1 \n##         CD14 Mono         CD14 Mono                Mk               pDC \n##  ACAGTGTGTGCTGA.1  ACAGTGTGTGGATC.1  ACAGTTCTCTGATG.1  ACAGTTCTCTTAGG.1 \n##                 B         CD14 Mono       CD4 Naive T      CD4 Memory T \n##  ACATACCTGTTGAC.1  ACATCACTCAGTCA.1  ACATCACTCTGTTT.1  ACATCACTGGAGGT.1 \n##       B Activated       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  ACATCACTGGTGGA.1  ACATCACTGTTTCT.1  ACATGGTGACCCTC.1  ACATGGTGACGCAT.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono             CD8 T \n##  ACATGGTGACGGAG.1  ACATGGTGCCTATT.1  ACATGGTGCGTTAG.1  ACATGGTGCTCCCA.1 \n##               pDC         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  ACATGGTGCTGGTA.1  ACATGGTGGGTATC.1  ACATGGTGTGCGTA.1  ACATTCTGCCCTAC.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T       CD4 Naive T \n##  ACATTCTGCGAATC.1  ACATTCTGCTACTT.1  ACATTCTGGTAGCT.1  ACCAACGAACTGTG.1 \n##                NK      CD4 Memory T       CD4 Naive T         CD14 Mono \n##  ACCAACGACCACAA.1  ACCAACGATTGAGC.1  ACCACAGAACGTGT.1  ACCACCTGCGATAC.1 \n##         CD14 Mono             CD8 T       B Activated             CD8 T \n##  ACCACCTGCTTCTA.1  ACCACCTGTCTATC.1  ACCACGCTGACGGA.1  ACCACGCTTCCTCG.1 \n##         CD16 Mono       CD4 Naive T         CD14 Mono         CD16 Mono \n##  ACCACGCTTGGATC.1  ACCAGCCTCTTATC.1  ACCAGCCTTCCCAC.1  ACCAGCCTTTATCC.1 \n##       CD4 Naive T                NK         CD14 Mono       T activated \n##  ACCAGCCTTTGGCA.1  ACCAGTGAAATGCC.1  ACCAGTGAGACGTT.1  ACCATTACATGGTC.1 \n##                 B         CD14 Mono                 B         CD14 Mono \n##  ACCATTACGCGGAA.1  ACCATTTGCCGCTT.1  ACCATTTGCTCCCA.1  ACCATTTGTTCCAT.1 \n##       CD4 Naive T             CD8 T       CD4 Naive T         CD16 Mono \n##  ACCATTTGTTGACG.1  ACCCAAGAAGCACT.1  ACCCAAGAGAAACA.1  ACCCAAGAGAAGGC.1 \n##       B Activated         CD16 Mono         CD14 Mono         CD14 Mono \n##  ACCCAAGAGCTAAC.1  ACCCACTGACAGTC.1  ACCCACTGACGTTG.1  ACCCACTGGGAAAT.1 \n##       CD4 Naive T       T activated       CD4 Naive T       CD4 Naive T \n##  ACCCACTGGGTTAC.1  ACCCACTGTAAGCC.1  ACCCACTGTAAGGA.1  ACCCACTGTGGAGG.1 \n##       T activated         CD14 Mono                 B       CD4 Naive T \n##  ACCCAGCTAGTCAC.1  ACCCAGCTAGTCTG.1  ACCCGTACAAAGTG.1  ACCCGTACAGCGGA.1 \n##                Mk                 B       CD4 Naive T      CD4 Memory T \n## ACCCGTACAGCGTT.11  ACCCGTACCCTGAA.1  ACCCGTACCGTGTA.1  ACCCGTACGAGCTT.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono         CD14 Mono \n##  ACCCGTACGTCTAG.1  ACCCGTACTAAAGG.1  ACCCGTTGATCTTC.1  ACCCGTTGCATTTC.1 \n##         CD14 Mono       CD4 Naive T                Mk       T activated \n##  ACCCGTTGGAGAGC.1  ACCCGTTGGCGTAT.1  ACCCGTTGTGACAC.1  ACCCTCGACGAGAG.1 \n##       CD4 Naive T       CD4 Naive T                Mk             CD8 T \n##  ACCCTCGACGATAC.1  ACCCTCGACGTAGT.1  ACCCTCGAGGTACT.1  ACCCTCGAGTATGC.1 \n##       CD4 Naive T         CD14 Mono                NK      CD4 Memory T \n##  ACCCTCGAGTCTAG.1  ACCCTCGATGTGCA.1  ACCCTCGATTCGCC.1  ACCGAAACATTGGC.1 \n##         CD16 Mono         CD14 Mono       CD4 Naive T                NK \n##  ACCGAAACTACTTC.1  ACCGCGGAAAGATG.1  ACCGCGGAAAGTGA.1  ACCGCGGACTGATG.1 \n##         CD16 Mono                NK                Mk         CD14 Mono \n##  ACCGCGGATGGTAC.1  ACCGTGCTTTGCTT.1  ACCTATTGAATGCC.1  ACCTATTGACCGAT.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T      CD4 Memory T \n##  ACCTATTGATTCTC.1  ACCTATTGGAAGGC.1  ACCTATTGGCGAGA.1  ACCTATTGGTCGAT.1 \n##         CD14 Mono         CD16 Mono       CD4 Naive T         CD14 Mono \n##  ACCTATTGTTCACT.1  ACCTCCGAACTGTG.1  ACCTCCGAAGGAGC.1  ACCTCCGAATTGGC.1 \n##         CD14 Mono       CD4 Naive T                 B       CD4 Naive T \n## ACCTCCGACACTCC.11  ACCTCCGACCTTAT.1  ACCTCCGATGGTTG.1  ACCTCCGATTCATC.1 \n##         CD14 Mono                DC         CD14 Mono             CD8 T \n##  ACCTCGTGCAAGCT.1  ACCTCGTGCATACG.1  ACCTCGTGTATCTC.1  ACCTGAGAAAAGTG.1 \n##             CD8 T         CD14 Mono      CD4 Memory T       CD4 Naive T \n##  ACCTGAGAACACGT.1  ACCTGAGAACGTTG.1  ACCTGAGAGTCGAT.1  ACCTGAGATCCGTC.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T         CD16 Mono \n##  ACCTGAGATCCTTA.1 ACCTGAGATGCTAG.11  ACCTGAGATGGTTG.1  ACCTGGCTCGTAAC.1 \n##       CD4 Naive T         CD16 Mono                NK         CD14 Mono \n##  ACCTGGCTGACGTT.1  ACCTTTGAAAGCCT.1  ACCTTTGACGTTGA.1  ACCTTTGATCGCAA.1 \n##       T activated       CD4 Naive T       B Activated         CD14 Mono \n##  ACCTTTGATGCATG.1  ACCTTTGATGGATC.1  ACCTTTGATTCTTG.1  ACGAACACTAGACC.1 \n##       CD4 Naive T                DC         CD14 Mono         CD14 Mono \n##  ACGAACTGCAACCA.1  ACGAACTGCTACGA.1  ACGAACTGGCAAGG.1  ACGAACTGGCTAAC.1 \n##      CD4 Memory T         CD14 Mono                NK       CD4 Naive T \n##  ACGAACTGGTATGC.1  ACGAACTGTATCTC.1  ACGAACTGTCCAGA.1  ACGAAGCTCTTGGA.1 \n##      CD4 Memory T         CD14 Mono         CD16 Mono                NK \n##  ACGAAGCTTCTACT.1  ACGACAACTAAGGA.1  ACGACAACTGGTCA.1  ACGACCCTAGATCC.1 \n##       CD4 Naive T       T activated       CD4 Naive T             CD8 T \n##  ACGACCCTAGCACT.1  ACGACCCTATGCTG.1  ACGACCCTCAGTCA.1  ACGACCCTCTCTCG.1 \n##             CD8 T         CD14 Mono                Mk       CD4 Naive T \n##  ACGACCCTCTGAGT.1  ACGACCCTCTGTCC.1  ACGACCCTGGTAGG.1  ACGAGGGACGTTGA.1 \n##         CD14 Mono       T activated      CD4 Memory T             CD8 T \n##  ACGAGGGAGAATCC.1  ACGAGGGAGGGAGT.1  ACGAGGGATAGTCG.1  ACGAGTACCAGCTA.1 \n##                DC       CD4 Naive T         CD14 Mono       CD4 Naive T \n##  ACGAGTACCCCGTT.1  ACGAGTACCTCAAG.1  ACGAGTACCTCGAA.1 ACGAGTACTATGGC.11 \n##                 B                 B       CD4 Naive T       B Activated \n##  ACGAGTACTCGATG.1  ACGAGTACTGAGGG.1  ACGATCGACATTTC.1  ACGATCGACGGTAT.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono                 B \n##  ACGATCGAGGAACG.1  ACGATCGAGTACAC.1  ACGATCGATCTAGG.1  ACGATGACATCTCT.1 \n##       CD4 Naive T         CD16 Mono         CD14 Mono       CD4 Naive T \n##  ACGATGACGTTACG.1  ACGATGACTGAGGG.1  ACGATTCTCTATTC.1  ACGATTCTGATACC.1 \n##         CD14 Mono                DC                 B         CD14 Mono \n##  ACGATTCTGTGTAC.1  ACGATTCTTCGACA.1  ACGATTCTTGCCAA.1  ACGCAATGACGGTT.1 \n##       B Activated         CD14 Mono         CD14 Mono         CD16 Mono \n##  ACGCAATGGCGTAT.1  ACGCACCTACCTGA.1  ACGCACCTATCGTG.1  ACGCACCTCAACTG.1 \n##       CD4 Naive T             CD8 T         CD14 Mono                DC \n##  ACGCACCTGAACTC.1  ACGCACCTGACGTT.1  ACGCACCTGAGGAC.1  ACGCACCTGCATCA.1 \n##      CD4 Memory T      CD4 Memory T                NK         CD16 Mono \n##  ACGCACCTGGATTC.1  ACGCACCTTCTGGA.1  ACGCACCTTGGGAG.1  ACGCCACTACTAGC.1 \n##      CD4 Memory T       CD4 Naive T       T activated       CD4 Naive T \n##  ACGCCACTATGCCA.1  ACGCCACTCAACCA.1 ACGCCACTCAATCG.11  ACGCCACTCCCACT.1 \n##         CD14 Mono         CD14 Mono             CD8 T             CD8 T \n##  ACGCCACTCCGAAT.1  ACGCCACTCTTACT.1  ACGCCACTCTTCTA.1  ACGCCACTGAAGGC.1 \n##       T activated         CD14 Mono       T activated         CD14 Mono \n##  ACGCCACTTCAAGC.1  ACGCCACTTGGATC.1  ACGCCACTTTTCAC.1  ACGCCGGAAACGGG.1 \n##         CD14 Mono       CD4 Naive T       T activated       CD4 Naive T \n##  ACGCCGGAAGACTC.1  ACGCCGGACCGAAT.1  ACGCCGGACCTTTA.1  ACGCCGGAGCGGAA.1 \n##                 B         CD14 Mono       CD4 Naive T       B Activated \n##  ACGCCGGATATCGG.1  ACGCCTTGCCGTTC.1  ACGCCTTGCTTCTA.1  ACGCCTTGGTTAGC.1 \n##                DC       T activated                NK         CD16 Mono \n##  ACGCCTTGTAAAGG.1  ACGCCTTGTCCCGT.1  ACGCCTTGTCGATG.1  ACGCCTTGTCTTTG.1 \n##         CD14 Mono         CD16 Mono         CD14 Mono      CD4 Memory T \n##  ACGCGGTGACAGTC.1  ACGCGGTGAGCACT.1  ACGCGGTGAGCATC.1  ACGCGGTGGGAGTG.1 \n##             CD8 T      CD4 Memory T                 B                 B \n##  ACGCGGTGGTCGAT.1  ACGCGGTGTTCAGG.1  ACGCTCACAGTCTG.1  ACGCTCACCTTCTA.1 \n##       T activated       CD4 Naive T       CD4 Naive T      CD4 Memory T \n##  ACGCTCACGGTAGG.1  ACGCTCACGTAGCT.1  ACGCTCACTTGGCA.1  ACGCTGCTGACAGG.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T             CD8 T \n##  ACGCTGCTGGTACT.1  ACGCTGCTGTTGGT.1  ACGCTGCTTGAAGA.1  ACGGAACTAGACTC.1 \n##         CD14 Mono       B Activated         CD14 Mono       CD4 Naive T \n##  ACGGAACTCATACG.1  ACGGAACTGAGGGT.1  ACGGAACTTCCCGT.1  ACGGAACTTGCTCC.1 \n##       CD4 Naive T      CD4 Memory T       CD4 Naive T         CD16 Mono \n##  ACGGAGGACTACCC.1  ACGGATTGCTCAAG.1  ACGGATTGCTGATG.1  ACGGATTGCTTCTA.1 \n##         CD14 Mono             CD8 T       CD4 Naive T         CD14 Mono \n##  ACGGATTGGAATAG.1  ACGGATTGGGCAAG.1  ACGGATTGTCGTTT.1  ACGGATTGTGTAGC.1 \n##                 B         CD16 Mono         CD14 Mono       CD4 Naive T \n##  ACGGCGTGCACACA.1  ACGGCGTGCTGACA.1  ACGGCGTGGAGCAG.1  ACGGCTCTATCGTG.1 \n##       CD4 Naive T         CD14 Mono         CD16 Mono                NK \n##  ACGGCTCTGAGGGT.1  ACGGCTCTTCTGGA.1  ACGGCTCTTGTCTT.1  ACGGGAGAAGCAAA.1 \n##       CD4 Naive T       CD4 Naive T       CD4 Naive T      CD4 Memory T \n##  ACGGGAGACCTTGC.1  ACGGGAGAGCAAGG.1  ACGGGAGAGGTCAT.1  ACGGGAGATAAGGA.1 \n##         CD14 Mono       CD4 Naive T       T activated      CD4 Memory T \n##  ACGGGAGATCCCAC.1  ACGGGAGATGAACC.1  ACGGTAACCAACTG.1  ACGGTAACCTCGCT.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono             CD8 T \n##  ACGGTAACGCGAGA.1  ACGGTAACGGGCAA.1  ACGGTATGCTGTTT.1  ACGGTATGGCTCCT.1 \n##         CD14 Mono               pDC         CD14 Mono                NK \n##  ACGGTATGGTTGGT.1  ACGGTATGTTCACT.1  ACGGTCCTAAAACG.1  ACGGTCCTAGCTCA.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono       T activated \n##  ACGGTCCTCAGATC.1  ACGGTCCTCTCCCA.1  ACGGTCCTGAACTC.1 ACGGTCCTGCATAC.11 \n##       T activated         CD14 Mono         CD14 Mono       CD4 Naive T \n##  ACGGTCCTGTCTAG.1  ACGGTCCTTTGGTG.1  ACGTAGACATCTCT.1  ACGTAGACCAGTCA.1 \n##      CD4 Memory T                 B                 B                Mk \n##  ACGTCAGAAAGGCG.1  ACGTCAGAACCTGA.1  ACGTCAGAATGACC.1  ACGTCAGAGCTTCC.1 \n##         CD16 Mono      CD4 Memory T         CD14 Mono       CD4 Naive T \n##  ACGTCAGATGAAGA.1  ACGTCCTGACTTTC.1  ACGTCCTGGGTGGA.1 ACGTCCTGTCATTC.11 \n##       B Activated       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  ACGTCGCTAGTAGA.1  ACGTCGCTGGCGAA.1  ACGTCGCTTATGCG.1  ACGTCGCTTTGACG.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono       CD4 Naive T \n##  ACGTGATGACCAAC.1  ACGTGATGTATCTC.1  ACGTGCCTAGCATC.1  ACGTGCCTCGCCTT.1 \n##       B Activated               pDC                 B       CD4 Naive T \n##  ACGTGCCTCTAGTG.1  ACGTGCCTGGAGTG.1  ACGTGCCTGTACGT.1  ACGTTACTCACTCC.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T                NK \n##  ACGTTACTGCGTTA.1  ACGTTACTGGACTT.1  ACGTTACTTATGCG.1  ACGTTACTTCTAGG.1 \n##       T activated                 B         CD14 Mono       CD4 Naive T \n##  ACGTTACTTGTCAG.1  ACGTTGGAAAGGTA.1  ACGTTGGAACTGGT.1  ACGTTGGACTTGAG.1 \n##      CD4 Memory T       T activated         CD14 Mono         CD14 Mono \n##  ACGTTGGATCGTGA.1  ACGTTGGATGAACC.1  ACGTTGGATGGTTG.1  ACGTTTACGAGCAG.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono       CD4 Naive T \n##  ACTAAAACATAAGG.1  ACTAAAACATCTTC.1  ACTAAAACCACTCC.1  ACTAAAACCACTGA.1 \n##                 B         CD14 Mono      CD4 Memory T                 B \n##  ACTAAAACTCATTC.1  ACTAAAACTTCGGA.1  ACTAAAACTTGGCA.1  ACTACGGAGAGCTT.1 \n##         CD14 Mono                 B       B Activated         CD14 Mono \n##  ACTACGGATTTACC.1  ACTACTACAGCGGA.1  ACTACTACAGTCAC.1  ACTACTACCTAAGC.1 \n##       CD4 Naive T         CD14 Mono                Mk       CD4 Naive T \n##  ACTACTACGCTCCT.1  ACTAGGTGCAGGAG.1  ACTAGGTGCCGCTT.1  ACTAGGTGCTCAGA.1 \n##                Mk         CD14 Mono      CD4 Memory T      CD4 Memory T \n##  ACTAGGTGGGCATT.1  ACTAGGTGTGCTTT.1  ACTATCACAACGTC.1  ACTATCACGCCAAT.1 \n##       CD4 Naive T       T activated       B Activated       CD4 Naive T \n##  ACTATCACTGAGAA.1  ACTCAGGAAGATCC.1  ACTCAGGAAGATGA.1  ACTCAGGACTATTC.1 \n##                 B         CD14 Mono      CD4 Memory T       B Activated \n##  ACTCAGGATCTAGG.1  ACTCCCGACTTCGC.1  ACTCCCGAGCTCCT.1  ACTCCCGATACGAC.1 \n##         CD14 Mono       CD4 Naive T             CD8 T       CD4 Naive T \n##  ACTCCTCTAGCACT.1  ACTCCTCTAGGGTG.1  ACTCCTCTCAATCG.1  ACTCCTCTCCCTTG.1 \n##         CD14 Mono             CD8 T       CD4 Naive T       CD4 Naive T \n##  ACTCCTCTCTGTAG.1  ACTCCTCTGTAAGA.1  ACTCCTCTGTGAGG.1  ACTCCTCTTGGTCA.1 \n##                Mk         CD14 Mono       CD4 Naive T         CD14 Mono \n## ACTCGAGACTTGTT.11  ACTCGAGAGCCAAT.1  ACTCGAGAGTTTGG.1  ACTCGCACACCAAC.1 \n##       CD4 Naive T             CD8 T      CD4 Memory T                 B \n##  ACTCGCACAGCCAT.1  ACTCGCACATGCCA.1  ACTCGCACCTTAGG.1  ACTCGCACGGTATC.1 \n##       CD4 Naive T       CD4 Naive T         CD16 Mono      CD4 Memory T \n##  ACTCGCACGTAGCT.1  ACTCGCACTGCACA.1  ACTCGCACTGTTCT.1 ACTCTATGAGATCC.11 \n##                NK         CD14 Mono      CD4 Memory T       CD4 Naive T \n##  ACTCTATGCCAAGT.1  ACTCTATGCCTTTA.1  ACTCTATGGGAAGC.1 ACTCTATGGTACGT.11 \n##       CD4 Naive T         CD14 Mono               pDC         CD14 Mono \n##  ACTCTATGTGGTCA.1  ACTCTCCTAGCAAA.1  ACTCTCCTGGTAGG.1  ACTCTCCTTGAAGA.1 \n##         CD14 Mono         CD14 Mono         CD16 Mono         CD14 Mono \n##  ACTCTCCTTGCTTT.1  ACTCTCCTTTGTGG.1  ACTGAGACAACGTC.1  ACTGAGACCCACCT.1 \n##      CD4 Memory T                 B         CD14 Mono       B Activated \n##  ACTGAGACGCGATT.1  ACTGAGACGGAACG.1  ACTGAGACGTGTAC.1  ACTGAGACTCAGGT.1 \n##      CD4 Memory T                 B         CD14 Mono         CD14 Mono \n##  ACTGCCACGTCATG.1  ACTGCCACTCAGAC.1  ACTGCCTGACTGTG.1  ACTGCCTGCCGTTC.1 \n##             CD8 T       CD4 Naive T         CD14 Mono                NK \n##  ACTGCCTGCTGACA.1  ACTGCCTGGGCAAG.1  ACTGCCTGGTGCTA.1  ACTGCCTGTGGAGG.1 \n##       CD4 Naive T             CD8 T       CD4 Naive T      CD4 Memory T \n##  ACTGGCCTAGAATG.1  ACTGGCCTAGCATC.1  ACTGGCCTCACTAG.1  ACTGGCCTCTACTT.1 \n##      CD4 Memory T                 B         CD14 Mono         CD14 Mono \n##  ACTGGCCTCTTAGG.1  ACTGGCCTGGACAG.1  ACTGGCCTGGGATG.1  ACTGGCCTGTCTTT.1 \n##         CD16 Mono         CD14 Mono         CD16 Mono      CD4 Memory T \n##  ACTGGCCTTCTCCG.1  ACTGGCCTTGTGGT.1  ACTGTGGAACGGAG.1  ACTGTGGAACTGGT.1 \n##       B Activated                NK         CD14 Mono         CD14 Mono \n##  ACTGTGGATGCTAG.1  ACTGTGGATGGTGT.1  ACTGTTACATGTCG.1  ACTGTTACCAAAGA.1 \n##       CD4 Naive T       B Activated      CD4 Memory T         CD14 Mono \n##  ACTGTTACCGTGTA.1  ACTGTTACGTATGC.1  ACTGTTACGTGCTA.1  ACTTAAGAAGCGTT.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono         CD14 Mono \n##  ACTTAAGAATTGGC.1  ACTTAAGATGCACA.1  ACTTAGCTTCGTGA.1  ACTTCAACACGGAG.1 \n##             CD8 T         CD14 Mono             CD8 T      CD4 Memory T \n##  ACTTCAACAGAATG.1  ACTTCAACCCACAA.1  ACTTCAACCCCTTG.1  ACTTCAACCTACTT.1 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono       CD4 Naive T \n##  ACTTCAACTTAGGC.1  ACTTCCCTCGGAGA.1 ACTTCCCTTTCTTG.11  ACTTCCCTTTTACC.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono         CD14 Mono \n##  ACTTCTGAACGTGT.1  ACTTCTGAGGTTTG.1  ACTTCTGATACGCA.1  ACTTCTGATTACCT.1 \n##                 B       CD4 Naive T         CD14 Mono         CD16 Mono \n##  ACTTCTGATTCACT.1  ACTTGACTGAGCTT.1  ACTTGACTTGTGCA.1  ACTTGGGAAAAGTG.1 \n##         CD14 Mono       CD4 Naive T      CD4 Memory T             CD8 T \n##  ACTTGGGACAAAGA.1  ACTTGGGACCTCAC.1  ACTTGGGATGTGCA.1  ACTTGTACAGGCGA.1 \n##             CD8 T       T activated                 B       T activated \n##  ACTTGTACATCGGT.1  ACTTGTACCTATGG.1  ACTTGTACGTAAGA.1  ACTTGTACTAAGGA.1 \n##         CD14 Mono                NK                 B         CD14 Mono \n##  ACTTGTACTACTTC.1  ACTTTGTGAAAAGC.1  ACTTTGTGATAAGG.1  ACTTTGTGATTTCC.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  ACTTTGTGCGTGAT.1  AGAAACGAACCTAG.1  AGAAAGTGAGTCAC.1  AGAAAGTGCAGAGG.1 \n##       T activated      CD4 Memory T      CD4 Memory T                 B \n##  AGAAAGTGGCAGTT.1  AGAAAGTGGTGTCA.1  AGAACAGAACGCAT.1  AGAACAGAGTGTAC.1 \n##         CD14 Mono         CD14 Mono       T activated                NK \n##  AGAACAGATTCTTG.1  AGAACGCTCCACAA.1  AGAACGCTGTTTCT.1  AGAACGCTTCGCAA.1 \n##             CD8 T                 B         CD14 Mono       CD4 Naive T \n##  AGAAGATGCTTGCC.1  AGAATACTACTGTG.1  AGAATACTGGTAGG.1  AGAATACTTCCTGC.1 \n##                 B                NK      CD4 Memory T         CD14 Mono \n##  AGAATACTTTCCGC.1  AGAATACTTTTCGT.1  AGAATGGAACCCTC.1  AGAATGGAACTACG.1 \n##         CD14 Mono       B Activated                 B             Eryth \n##  AGAATGGACTAAGC.1  AGAATTTGAAACAG.1  AGAATTTGCGTGAT.1  AGAATTTGCTGAGT.1 \n##      CD4 Memory T         CD14 Mono                 B             CD8 T \n##  AGAATTTGGGATCT.1  AGAATTTGGGTGAG.1  AGAATTTGGTTCTT.1  AGAATTTGTGCACA.1 \n##       T activated             CD8 T         CD14 Mono         CD14 Mono \n##  AGAATTTGTTGCAG.1  AGACACACACCTAG.1  AGACACACAGTCAC.1  AGACACACAGTGTC.1 \n##      CD4 Memory T      CD4 Memory T       T activated         CD16 Mono \n##  AGACACACCACTTT.1  AGACACACCATTGG.1  AGACACACCTGATG.1  AGACACACCTGGAT.1 \n##                 B         CD14 Mono      CD4 Memory T       CD4 Naive T \n##  AGACACACTATGCG.1  AGACACTGAAGCAA.1  AGACACTGAGTCGT.1  AGACACTGATTGGC.1 \n##       CD4 Naive T      CD4 Memory T      CD4 Memory T         CD14 Mono \n##  AGACACTGCCGAAT.1  AGACACTGTAACCG.1  AGACACTGTACAGC.1  AGACACTGTCTCTA.1 \n##       CD4 Naive T         CD16 Mono             CD8 T         CD14 Mono \n##  AGACACTGTCTTAC.1  AGACACTGTCTTTG.1  AGACACTGTTAGGC.1  AGACACTGTTCACT.1 \n##                 B       B Activated             Eryth         CD14 Mono \n##  AGACCTGAAAGCCT.1  AGACCTGACGGTAT.1  AGACCTGACTTAGG.1  AGACCTGATCGTAG.1 \n##       CD4 Naive T         CD16 Mono      CD4 Memory T                Mk \n##  AGACGTACAGGCGA.1  AGACGTACCTCTTA.1  AGACGTACGAGATA.1  AGACGTACGAGGGT.1 \n##      CD4 Memory T                NK       CD4 Naive T                DC \n##  AGACGTACGGCGAA.1  AGACGTACTAGAGA.1  AGACTCGACATTCT.1  AGACTCGACTACCC.1 \n##                NK      CD4 Memory T       CD4 Naive T                 B \n##  AGACTCGAGGTACT.1  AGACTGACCCTCGT.1  AGACTGACTCCTAT.1  AGACTGACTCTCGC.1 \n##       CD4 Naive T         CD14 Mono                Mk       CD4 Naive T \n##  AGACTGACTTCTTG.1  AGACTTCTCCAACA.1  AGACTTCTGTGCTA.1  AGAGAAACATAAGG.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono         CD16 Mono \n##  AGAGAAACCATCAG.1  AGAGAAACCTGTAG.1  AGAGAAACGGAAGC.1  AGAGAAACTCTTCA.1 \n##       CD4 Naive T      CD4 Memory T      CD4 Memory T       CD4 Naive T \n##  AGAGAAACTGATGC.1  AGAGAAACTTGAGC.1  AGAGAAACTTTCTG.1  AGAGAATGCTGTAG.1 \n##             CD8 T             CD8 T         CD16 Mono                 B \n##  AGAGAATGGAGGTG.1  AGAGAATGGCTGTA.1  AGAGAATGGGGATG.1  AGAGATGAACCAGT.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono       CD4 Naive T \n##  AGAGATGAACCTGA.1  AGAGATGAGTTGGT.1  AGAGATGATGGAAA.1  AGAGATGATGGTCA.1 \n##       CD4 Naive T             CD8 T                 B                NK \n##  AGAGATGATGTCGA.1  AGAGCGGACAACCA.1  AGAGCGGACCTCGT.1  AGAGCGGAGATAGA.1 \n##         CD14 Mono                 B       CD4 Naive T      CD4 Memory T \n##  AGAGCGGATGATGC.1  AGAGCTACCGATAC.1  AGAGCTACTCGCAA.1  AGAGCTACTCGTGA.1 \n##             CD8 T         CD14 Mono      CD4 Memory T       B Activated \n##  AGAGGTCTACACGT.1  AGAGGTCTACGACT.1  AGAGGTCTGAAACA.1  AGAGGTCTGCGAGA.1 \n##       CD4 Naive T                NK         CD14 Mono         CD16 Mono \n##  AGAGGTCTGTACCA.1  AGAGTCACAAGCAA.1  AGAGTCACACCTAG.1  AGAGTCACCGATAC.1 \n##         CD16 Mono       CD4 Naive T             CD8 T       T activated \n##  AGAGTCACTGCTCC.1  AGAGTCTGACGTAC.1  AGAGTCTGCTCAAG.1  AGAGTGCTCGTGAT.1 \n##       CD4 Naive T         CD16 Mono         CD14 Mono         CD14 Mono \n##  AGAGTGCTGCAGTT.1  AGAGTGCTGGCAAG.1  AGAGTGCTGGTAAA.1  AGAGTGCTGTTGAC.1 \n##                 B       CD4 Naive T      CD4 Memory T         CD14 Mono \n##  AGATATACACGCTA.1  AGATATACCGAATC.1  AGATATACGTTGGT.1  AGATATTGGCTCCT.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  AGATATTGGCTTAG.1  AGATATTGGGTATC.1  AGATATTGTGGAGG.1  AGATCGTGCCAAGT.1 \n##         CD14 Mono       CD4 Naive T      CD4 Memory T       CD4 Naive T \n##  AGATCGTGTTCCCG.1  AGATCTCTTGGTCA.1  AGATCTCTTTCGGA.1  AGATTAACCACCAA.1 \n##       T activated       CD4 Naive T       T activated       B Activated \n##  AGATTAACCCTGTC.1  AGATTAACCGTAAC.1  AGATTAACCGTCTC.1  AGATTAACGACAGG.1 \n##               pDC       T activated       CD4 Naive T             CD8 T \n##  AGATTAACGGAGTG.1  AGATTAACGGCAAG.1 AGATTAACGGTGTT.11  AGATTAACTATTCC.1 \n##         CD14 Mono       CD4 Naive T      CD4 Memory T         CD16 Mono \n## AGATTAACTGAAGA.11  AGATTAACTTCACT.1  AGATTCCTAGTCTG.1  AGATTCCTGAATGA.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T         CD14 Mono \n##  AGATTCCTGGTAGG.1  AGATTCCTGTCTAG.1  AGATTCCTGTTGTG.1  AGATTCCTTTCTTG.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono         CD14 Mono \n##  AGCAAAGACTTTAC.1 AGCAACACCGAGAG.11  AGCAACACGACGGA.1  AGCAACACGATACC.1 \n##                 B       T activated                NK                DC \n##  AGCAACACGGACAG.1  AGCAACACGGACGA.1  AGCAACACGGTTAC.1  AGCAACACTGCCTC.1 \n##       B Activated         CD16 Mono         CD14 Mono         CD14 Mono \n##  AGCAAGCTAAGGTA.1  AGCAAGCTAGCACT.1  AGCAAGCTCCCAAA.1  AGCAAGCTCGCAAT.1 \n##                NK               pDC      CD4 Memory T       CD4 Naive T \n##  AGCAAGCTTGGTAC.1  AGCAAGCTTGGTCA.1  AGCAAGCTTGTGGT.1  AGCACAACCCGCTT.1 \n##                 B         CD14 Mono         CD14 Mono       CD4 Naive T \n##  AGCACAACCGGAGA.1  AGCACAACGAACTC.1  AGCACTGAAGCCTA.1  AGCACTGAATAAGG.1 \n##      CD4 Memory T         CD16 Mono         CD14 Mono         CD14 Mono \n##  AGCACTGAATGACC.1  AGCACTGAATGCCA.1  AGCACTGACCTTGC.1  AGCACTGATTATCC.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T         CD16 Mono \n##  AGCATCGAACTCAG.1  AGCATCGAGGGTGA.1  AGCATCGATGAGAA.1  AGCATCGATTCGCC.1 \n##         CD14 Mono         CD16 Mono         CD16 Mono         CD14 Mono \n##  AGCATGACAGCTCA.1  AGCATGACGCTAAC.1  AGCATGACGTAAGA.1  AGCATGACTTACTC.1 \n##         CD14 Mono       CD4 Naive T                 B       CD4 Naive T \n##  AGCATTCTAAGTAG.1  AGCATTCTACGTGT.1  AGCATTCTAGTCAC.1  AGCATTCTGAGCTT.1 \n##             CD8 T       CD4 Naive T             CD8 T                NK \n##  AGCATTCTTAGAAG.1  AGCCAATGAGTGCT.1  AGCCAATGCAGTCA.1  AGCCAATGCCTATT.1 \n##         CD14 Mono         CD14 Mono       T activated         CD14 Mono \n##  AGCCAATGGTCTAG.1  AGCCAATGGTTCTT.1  AGCCAATGTCAGGT.1  AGCCAATGTGCTTT.1 \n##                NK       CD4 Naive T                 B       CD4 Naive T \n##  AGCCAATGTTTGGG.1  AGCCACCTAGAATG.1  AGCCACCTCCCTAC.1  AGCCACCTTGAAGA.1 \n##         CD16 Mono       CD4 Naive T      CD4 Memory T         CD14 Mono \n##  AGCCACCTTGTAGC.1  AGCCACCTTGTTCT.1  AGCCGGACCGAATC.1  AGCCGGACCGTCTC.1 \n##                 B             CD8 T       CD4 Naive T      CD4 Memory T \n##  AGCCGGACCTCTCG.1  AGCCGGACTCCAGA.1  AGCCGGTGACGTGT.1  AGCCGGTGAGAGAT.1 \n##                DC                 B                DC         CD14 Mono \n##  AGCCGGTGAGAGGC.1  AGCCGGTGCCTTCG.1  AGCCGGTGCTACTT.1  AGCCGGTGCTGACA.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono       B Activated \n##  AGCCGGTGGAATAG.1  AGCCGGTGTAGAAG.1  AGCCGTCTACAGTC.1  AGCCGTCTTGAGAA.1 \n##                 B                Mk       T activated         CD14 Mono \n##  AGCCTCACAAAAGC.1  AGCCTCACACGACT.1  AGCCTCACACGTAC.1  AGCCTCACCCCACT.1 \n##         CD14 Mono         CD14 Mono                NK      CD4 Memory T \n##  AGCCTCACCGCTAA.1  AGCCTCACCTCCAC.1  AGCCTCACGGTCAT.1  AGCCTCACGTCCTC.1 \n##       CD4 Naive T                NK                 B         CD14 Mono \n## AGCCTCACTAACCG.11  AGCCTCACTGAAGA.1 AGCCTCTGACTGGT.11  AGCCTCTGCCCAAA.1 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono         CD14 Mono \n##  AGCCTCTGTATCTC.1  AGCCTCTGTGTTCT.1  AGCCTCTGTTGCGA.1  AGCGAACTAAAACG.1 \n##      CD4 Memory T                Mk      CD4 Memory T                DC \n##  AGCGAACTAATGCC.1  AGCGAACTCCATGA.1  AGCGAACTGAGCAG.1  AGCGAACTGCTACA.1 \n##         CD14 Mono               pDC                NK       T activated \n##  AGCGAACTGCTGTA.1  AGCGAACTTATGCG.1  AGCGAACTTTCCAT.1  AGCGATACGGGCAA.1 \n##                 B         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  AGCGATACTTGAGC.1  AGCGATTGAGCGTT.1  AGCGATTGTTTGTC.1  AGCGCCGAAAAGCA.1 \n##      CD4 Memory T                 B                DC       CD4 Naive T \n##  AGCGCCGAGCAGAG.1  AGCGCCGATACTTC.1  AGCGCCGATGACCA.1  AGCGCTCTCATGAC.1 \n##       CD4 Naive T         CD14 Mono       T activated      CD4 Memory T \n##  AGCGCTCTCTCTTA.1  AGCGCTCTGGCATT.1 AGCGCTCTGTATGC.11  AGCGCTCTGTGTTG.1 \n##       CD4 Naive T       CD4 Naive T         CD16 Mono       CD4 Naive T \n##  AGCGCTCTTTAGGC.1  AGCGGCACCAACTG.1  AGCGGCACCTCGAA.1 AGCGGCACCTTAGG.11 \n##         CD14 Mono      CD4 Memory T      CD4 Memory T         CD14 Mono \n##  AGCGGCACCTTCTA.1  AGCGGCACCTTGGA.1  AGCGGCACGGTTCA.1  AGCGGCACGTCTAG.1 \n##         CD14 Mono      CD4 Memory T       T activated         CD16 Mono \n##  AGCGGCTGAAGATG.1  AGCGGCTGACACTG.1  AGCGGCTGAGGTCT.1  AGCGGCTGCATGGT.1 \n##         CD16 Mono       T activated                 B       CD4 Naive T \n##  AGCGGCTGCCTCGT.1  AGCGGCTGGTTGGT.1  AGCGGCTGTCATTC.1  AGCGGCTGTGTTCT.1 \n##       CD4 Naive T      CD4 Memory T       CD4 Naive T                Mk \n##  AGCGGCTGTTGTGG.1  AGCGGGCTAACCTG.1  AGCGGGCTACGGAG.1  AGCGGGCTCACCAA.1 \n##       CD4 Naive T       CD4 Naive T       B Activated       CD4 Naive T \n##  AGCGGGCTCCAAGT.1  AGCGGGCTCCTGTC.1  AGCGGGCTGTAGGG.1  AGCGGGCTTGTAGC.1 \n##       CD4 Naive T             CD8 T       CD4 Naive T       T activated \n##  AGCGGGCTTTACCT.1  AGCGTAACAGATCC.1  AGCGTAACCGTAGT.1  AGCGTAACGCATCA.1 \n##         CD14 Mono                 B         CD14 Mono         CD14 Mono \n##  AGCGTAACGGAGCA.1  AGCGTAACGTAAGA.1  AGCTCGCTCATGGT.1  AGCTCGCTGATAGA.1 \n##         CD14 Mono         CD14 Mono                NK       CD4 Naive T \n##  AGCTGAACACACCA.1  AGCTGAACCTGACA.1  AGCTGAACGCATCA.1  AGCTGAACGGAACG.1 \n##      CD4 Memory T      CD4 Memory T         CD14 Mono         CD16 Mono \n##  AGCTGAACTGTGCA.1  AGCTGCCTACACCA.1  AGCTGCCTACCGAT.1  AGCTGCCTCCTTGC.1 \n##         CD14 Mono                 B         CD14 Mono      CD4 Memory T \n##  AGCTGCCTGAATCC.1  AGCTGCCTGACAAA.1  AGCTGCCTGACAGG.1  AGCTGCCTTCGACA.1 \n##      CD4 Memory T       T activated             CD8 T       CD4 Naive T \n##  AGCTGCCTTCGATG.1  AGCTGCCTTCTGGA.1  AGCTGTGACGACTA.1  AGCTGTGAGAGGGT.1 \n##       T activated                 B       T activated      CD4 Memory T \n##  AGCTGTGAGCAGTT.1  AGCTTACTAATGCC.1  AGCTTACTAGCCAT.1  AGCTTACTCACACA.1 \n##      CD4 Memory T      CD4 Memory T         CD14 Mono         CD14 Mono \n##  AGCTTACTGTCATG.1  AGCTTACTTCAGGT.1  AGCTTACTTCCGAA.1  AGCTTTACAGTGTC.1 \n##         CD14 Mono       T activated       CD4 Naive T       CD4 Naive T \n##  AGCTTTACCTATGG.1  AGCTTTACCTCAGA.1  AGCTTTACTGCTGA.1  AGCTTTACTTTCTG.1 \n##       CD4 Naive T       CD4 Naive T                NK       CD4 Naive T \n##  AGGAAATGCAACTG.1  AGGAAATGGAAACA.1  AGGAAATGGGTCTA.1  AGGAAATGGTTACG.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono                NK \n##  AGGAAATGTGCTAG.1  AGGAACCTCCTAAG.1  AGGAACCTGAAAGT.1  AGGAATGAAAGATG.1 \n##                 B       CD4 Naive T                 B      CD4 Memory T \n##  AGGAATGATCACGA.1  AGGAATGATGCCCT.1  AGGACACTACAGCT.1  AGGACACTCATGGT.1 \n##      CD4 Memory T                DC       B Activated       CD4 Naive T \n##  AGGACACTGGAGCA.1  AGGACACTTGCATG.1  AGGACTTGAAGAAC.1  AGGACTTGACCAAC.1 \n##         CD14 Mono       CD4 Naive T             Eryth      CD4 Memory T \n##  AGGACTTGAGTACC.1  AGGACTTGAGTGCT.1  AGGACTTGCTAGAC.1  AGGACTTGGGTTTG.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono       T activated \n##  AGGACTTGGTTCAG.1  AGGACTTGGTTGGT.1  AGGACTTGTCTCCG.1  AGGAGTCTACTGTG.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T       CD4 Naive T \n##  AGGAGTCTCGTAAC.1  AGGAGTCTCGTCTC.1  AGGAGTCTGAGACG.1  AGGAGTCTGTTGTG.1 \n##       CD4 Naive T         CD14 Mono      CD4 Memory T      CD4 Memory T \n##  AGGAGTCTTGAGGG.1  AGGAGTCTTTACCT.1  AGGATAGACAACTG.1  AGGATAGACGACAT.1 \n##         CD14 Mono                 B         CD16 Mono         CD14 Mono \n##  AGGATAGAGGACTT.1  AGGATGCTCTCAAG.1  AGGATGCTTATGCG.1  AGGATGCTTCCCAC.1 \n##       B Activated       CD4 Naive T         CD16 Mono                 B \n##  AGGCAACTAGTCGT.1  AGGCAACTATTGGC.1  AGGCAACTTAAGGA.1  AGGCAACTTGCTAG.1 \n##         CD14 Mono         CD14 Mono         CD16 Mono       CD4 Naive T \n##  AGGCAGGAAAAAGC.1  AGGCAGGAACGTGT.1  AGGCAGGAGCTTCC.1  AGGCAGGATCCAGA.1 \n##       T activated         CD14 Mono       CD4 Naive T                 B \n##  AGGCCTCTACCATG.1  AGGCCTCTAGAATG.1  AGGCCTCTGACGTT.1  AGGCCTCTGTAGCT.1 \n##       T activated         CD16 Mono         CD14 Mono                 B \n##  AGGCCTCTTCACCC.1  AGGCCTCTTGTGAC.1  AGGCCTCTTTGACG.1  AGGCTAACATAAGG.1 \n##             CD8 T         CD14 Mono       CD4 Naive T      CD4 Memory T \n##  AGGCTAACGTACAC.1  AGGCTAACTGAAGA.1  AGGCTAACTGACAC.1  AGGGACGAACTAGC.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono         CD14 Mono \n##  AGGGACGACCTGTC.1  AGGGACGAGCCCTT.1  AGGGACGAGGGAGT.1  AGGGACGATCCGTC.1 \n##       CD4 Naive T                 B       CD4 Naive T       T activated \n##  AGGGACGATCTACT.1  AGGGAGTGCTTCTA.1  AGGGCCACACAGTC.1  AGGGCCACCCATGA.1 \n##                 B       CD4 Naive T                NK      CD4 Memory T \n##  AGGGCCACCGGGAA.1  AGGGCCACTCCTGC.1  AGGGCCTGAAGGCG.1  AGGGCCTGCGCTAA.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono         CD14 Mono \n##  AGGGCCTGGACAGG.1  AGGGCCTGTCGTTT.1  AGGGCGCTATTTCC.1  AGGGCGCTCATTTC.1 \n##       CD4 Naive T                 B         CD14 Mono         CD14 Mono \n##  AGGGCGCTTAGTCG.1  AGGGCGCTTATGGC.1  AGGGCGCTTGAAGA.1  AGGGCGCTTGCTTT.1 \n##      CD4 Memory T         CD14 Mono             CD8 T         CD14 Mono \n##  AGGGCGCTTTCTAC.1  AGGGTGGAATCTTC.1  AGGGTGGACACTTT.1  AGGGTGGAGGAAGC.1 \n##      CD4 Memory T       CD4 Naive T             CD8 T         CD16 Mono \n##  AGGGTGGATGAGGG.1  AGGGTGGATTGGTG.1  AGGGTTTGACGGTT.1  AGGGTTTGACGTTG.1 \n##             CD8 T         CD16 Mono         CD14 Mono         CD14 Mono \n##  AGGGTTTGATGACC.1  AGGGTTTGGTAAGA.1  AGGGTTTGGTTGCA.1  AGGTACACAGGCGA.1 \n##         CD16 Mono         CD16 Mono      CD4 Memory T                DC \n##  AGGTACACAGTCAC.1  AGGTACACCCAAGT.1 AGGTACACCGTGTA.11  AGGTACACGAGACG.1 \n##                NK       CD4 Naive T             CD8 T         CD14 Mono \n##  AGGTACTGATGCTG.1  AGGTACTGCCCACT.1  AGGTACTGGAAAGT.1  AGGTACTGTTCCAT.1 \n##         CD16 Mono       B Activated                NK         CD14 Mono \n##  AGGTCATGCTTATC.1  AGGTCATGGGAACG.1  AGGTCATGTTTCAC.1  AGGTCTGACTTCTA.1 \n##         CD14 Mono             CD8 T             CD8 T         CD14 Mono \n##  AGGTCTGATAGCGT.1  AGGTCTGATCTCCG.1  AGGTCTGATGCCTC.1  AGGTGGGAATGCCA.1 \n##                 B         CD14 Mono                 B                DC \n##  AGGTGTTGGTACGT.1  AGGTGTTGGTGTCA.1  AGGTGTTGGTTGTG.1  AGGTGTTGGTTTGG.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono                DC \n##  AGGTGTTGTCTTCA.1  AGGTTCGAGTCTTT.1  AGGTTCGATTCACT.1  AGGTTGTGACTGGT.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T       CD4 Naive T \n##  AGGTTGTGCAGTTG.1  AGGTTGTGCCTTGC.1  AGGTTGTGGTAGGG.1  AGGTTGTGTGGCAT.1 \n##      CD4 Memory T                Mk       CD4 Naive T                Mk \n##  AGTAAGGAACACCA.1  AGTAAGGATCGATG.1  AGTAAGGATGAACC.1  AGTAATACATCGGT.1 \n##             CD8 T       CD4 Naive T         CD14 Mono                Mk \n##  AGTAATACCTCTTA.1  AGTAATACCTGGTA.1  AGTAATACGCATCA.1  AGTAATACGGTCTA.1 \n##         CD14 Mono       CD4 Naive T         CD16 Mono                NK \n##  AGTAATACGTCTGA.1  AGTAATACTAGAGA.1  AGTAATACTAGCGT.1  AGTAATTGAGCGGA.1 \n##                 B                NK         CD16 Mono                DC \n##  AGTAATTGCTAAGC.1  AGTAATTGCTGACA.1  AGTAATTGCTGATG.1  AGTAATTGGCGAAG.1 \n##             CD8 T       CD4 Naive T      CD4 Memory T               pDC \n##  AGTAATTGGTTCTT.1  AGTAATTGTTGGCA.1  AGTACGTGCATCAG.1  AGTACGTGCCGTAA.1 \n##      CD4 Memory T             CD8 T         CD14 Mono         CD14 Mono \n##  AGTACGTGGATAGA.1  AGTACGTGGCTGAT.1  AGTACGTGTGTCAG.1  AGTACTCTACACAC.1 \n##       CD4 Naive T         CD16 Mono         CD14 Mono                 B \n##  AGTACTCTCCTATT.1  AGTACTCTGAGACG.1  AGTACTCTTCGCAA.1  AGTACTCTTCTTAC.1 \n##                 B       CD4 Naive T       CD4 Naive T                Mk \n##  AGTAGAGAAAAGCA.1  AGTAGAGAAACGTC.1  AGTAGAGACTGAGT.1  AGTAGAGAGAGGGT.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T         CD14 Mono \n##  AGTAGAGAGTTTCT.1  AGTAGGCTCAGATC.1  AGTAGGCTCTTGAG.1  AGTAGGCTTACTTC.1 \n##                NK         CD16 Mono         CD14 Mono       B Activated \n##  AGTATAACGGCAAG.1  AGTATAACGTCACA.1  AGTATCCTACCGAT.1  AGTATCCTCTACGA.1 \n##      CD4 Memory T      CD4 Memory T         CD14 Mono         CD14 Mono \n##  AGTATCCTCTTACT.1  AGTATCCTGCAGTT.1  AGTATCCTGCTATG.1  AGTATCCTGGGACA.1 \n##         CD14 Mono      CD4 Memory T       CD4 Naive T      CD4 Memory T \n##  AGTATCCTGGTGGA.1  AGTATCCTGGTTTG.1  AGTATCCTGTACAC.1  AGTATCCTTCGTTT.1 \n##       CD4 Naive T         CD14 Mono      CD4 Memory T      CD4 Memory T \n##  AGTATCCTTGGCAT.1  AGTCACGACTGGAT.1  AGTCACGAGCAGTT.1  AGTCAGACGGTAGG.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T                NK \n## AGTCAGACTTACCT.11  AGTCCAGACCGATA.1  AGTCCAGACCTTTA.1  AGTCGAACAGAGTA.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T                 B \n##  AGTCGAACCCATGA.1  AGTCGAACGGGTGA.1  AGTCGCCTCATGCA.1  AGTCGCCTCGGGAA.1 \n##         CD14 Mono         CD14 Mono         CD16 Mono      CD4 Memory T \n##  AGTCGCCTGTAAGA.1  AGTCGCCTTGTGCA.1  AGTCTACTACACGT.1  AGTCTACTAGCAAA.1 \n##                NK         CD14 Mono             CD8 T                 B \n##  AGTCTACTCTATGG.1  AGTCTACTTGTGCA.1  AGTCTTACACACCA.1  AGTCTTACCAACCA.1 \n##       B Activated             CD8 T             CD8 T         CD14 Mono \n##  AGTCTTACGATACC.1  AGTCTTACGTGCTA.1  AGTCTTACTGAGGG.1  AGTGAAGACACTCC.1 \n##       B Activated             CD8 T       T activated         CD14 Mono \n##  AGTGAAGACAGAGG.1  AGTGAAGACGAATC.1  AGTGAAGAGGTTCA.1  AGTGAAGAGTTACG.1 \n##       CD4 Naive T         CD16 Mono             CD8 T      CD4 Memory T \n##  AGTGACACGAACCT.1  AGTGACACGTACGT.1  AGTGACACTCGCCT.1  AGTGACACTGTCTT.1 \n##         CD14 Mono      CD4 Memory T         CD16 Mono       B Activated \n##  AGTGACTGAGTCGT.1  AGTGACTGATGTGC.1  AGTGACTGCACACA.1  AGTGACTGCACTCC.1 \n##       CD4 Naive T       B Activated         CD14 Mono      CD4 Memory T \n##  AGTGACTGTTCGTT.1  AGTGCAACAGATGA.1  AGTGCAACCACTTT.1  AGTGCAACCGGTAT.1 \n##             CD8 T       CD4 Naive T                 B         CD14 Mono \n##  AGTGTGACACACAC.1  AGTGTGACCAGAGG.1  AGTGTGACCATGCA.1  AGTGTGACCGTTAG.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  AGTGTGACCTGTAG.1  AGTGTGACGCGAAG.1  AGTGTGACGCTACA.1  AGTGTGACGGAACG.1 \n##       B Activated       CD4 Naive T       CD4 Naive T       CD4 Naive T \n##  AGTGTGACGGGCAA.1  AGTGTTCTAAGGTA.1  AGTGTTCTAGTGTC.1  AGTTAAACCCGTTC.1 \n##         CD16 Mono      CD4 Memory T      CD4 Memory T       B Activated \n##  AGTTAAACCGCAAT.1  AGTTAAACCGTACA.1  AGTTAAACCTGAGT.1  AGTTAAACCTGTCC.1 \n##                DC                NK      CD4 Memory T       CD4 Naive T \n##  AGTTAAACTGCCTC.1  AGTTATGACACTAG.1  AGTTATGACTACGA.1  AGTTATGAGCGTAT.1 \n##       T activated       B Activated       CD4 Naive T      CD4 Memory T \n##  AGTTATGATAGCGT.1  AGTTATGATGAAGA.1  AGTTATGATGAGCT.1  AGTTATGATTTACC.1 \n##                NK         CD14 Mono             CD8 T       CD4 Naive T \n##  AGTTATGATTTCTG.1  AGTTCTACAGAAGT.1  AGTTCTACAGGTTC.1  AGTTCTACCAGGAG.1 \n##             CD8 T       CD4 Naive T       T activated      CD4 Memory T \n##  AGTTCTACCTACCC.1  AGTTCTACGGGTGA.1  AGTTCTACGTACCA.1  AGTTCTACTAAGGA.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono                NK \n##  AGTTCTACTGTCAG.1  AGTTCTTGCTGAGT.1  AGTTCTTGTCCGAA.1  AGTTGTCTACACCA.1 \n##         CD14 Mono       T activated       B Activated         CD14 Mono \n##  AGTTGTCTACACGT.1  AGTTGTCTATTCCT.1  AGTTGTCTCCTTTA.1  AGTTGTCTGGGATG.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T         CD16 Mono \n##  AGTTGTCTTACTGG.1  AGTTGTCTTCAAGC.1  AGTTTAGACCACCT.1  AGTTTCACCTGACA.1 \n##         CD14 Mono       CD4 Naive T      CD4 Memory T         CD16 Mono \n##  AGTTTCACGACACT.1  AGTTTCACTGCTAG.1  AGTTTGCTCTATTC.1  AGTTTGCTGCTACA.1 \n##       CD4 Naive T         CD14 Mono                NK       CD4 Naive T \n##  AGTTTGCTGGGATG.1  AGTTTGCTGGTTCA.1  AGTTTGCTTCAAGC.1  AGTTTGCTTGAAGA.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono       CD4 Naive T \n## AGTTTGCTTGTGGT.11  AGTTTGCTTTCTGT.1  AGTTTGCTTTGTCT.1  ATAAACACCGAGTT.1 \n##                 B         CD14 Mono      CD4 Memory T         CD14 Mono \n## ATAAACACCTACGA.11  ATAAACACCTGTAG.1  ATAAACACGGAGCA.1  ATAAACACTTCGGA.1 \n##         CD16 Mono       CD4 Naive T                 B      CD4 Memory T \n##  ATAACAACAGTCGT.1  ATAACAACCGAATC.1  ATAACAACGGATCT.1  ATAACAACTGTAGC.1 \n##         CD14 Mono       CD4 Naive T                 B                 B \n##  ATAACATGACTCAG.1  ATAACATGCTGATG.1  ATAACATGTTCTGT.1  ATAACCCTACGCAT.1 \n##       CD4 Naive T       CD4 Naive T      CD4 Memory T               pDC \n##  ATAACCCTCCCGTT.1  ATAACCCTGAACCT.1  ATAACCCTTCACGA.1  ATAAGTACAAGTGA.1 \n##                 B      CD4 Memory T      CD4 Memory T         CD14 Mono \n##  ATAAGTACAGAACA.1  ATAAGTACCTCTCG.1  ATAAGTACTAGAGA.1  ATAAGTACTCAGTG.1 \n##      CD4 Memory T       CD4 Naive T         CD16 Mono       B Activated \n##  ATAAGTACTGGGAG.1  ATAAGTTGCTCATT.1  ATAAGTTGGTGCTA.1  ATAATCGAAAGTAG.1 \n##         CD14 Mono       CD4 Naive T                NK                 B \n##  ATAATCGAGTCGAT.1  ATAATCGAGTTTGG.1  ATAATCGATCGATG.1  ATAATGACCTTGAG.1 \n##       CD4 Naive T      CD4 Memory T       CD4 Naive T                NK \n##  ATAATGACGTGCAT.1  ATAATGACTATGCG.1  ATACAATGCACTTT.1  ATACAATGCTCCAC.1 \n##       CD4 Naive T                 B       CD4 Naive T      CD4 Memory T \n##  ATACAATGCTGAGT.1  ATACAATGTCATTC.1  ATACAATGTTGCAG.1  ATACAATGTTGCTT.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T         CD14 Mono \n##  ATACACCTGTAAGA.1  ATACACCTTAAAGG.1  ATACACCTTTGCGA.1  ATACCACTACCATG.1 \n##      CD4 Memory T                 B                NK                 B \n##  ATACCACTACTAGC.1  ATACCACTCCAACA.1  ATACCACTGGTACT.1  ATACCGGACTTATC.1 \n##         CD14 Mono         CD14 Mono       B Activated       CD4 Naive T \n##  ATACCGGAGAAGGC.1  ATACCGGAGAATGA.1  ATACCGGAGCCAAT.1  ATACCGGATCGCAA.1 \n##       CD4 Naive T      CD4 Memory T       T activated       CD4 Naive T \n##  ATACCGGATCTTCA.1  ATACCGGATTACTC.1  ATACCGGATTCGTT.1  ATACCTACAAGGGC.1 \n##      CD4 Memory T       CD4 Naive T                 B                 B \n##  ATACCTACAGAGGC.1  ATACCTACGTAAGA.1  ATACCTACTGGAAA.1  ATACCTTGACACAC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono      CD4 Memory T \n##  ATACCTTGACCGAT.1  ATACCTTGTCTTTG.1  ATACCTTGTGGCAT.1  ATACGGACAGATCC.1 \n##       CD4 Naive T                 B             CD8 T             CD8 T \n## ATACGGACCGTAGT.11  ATACGGACGAATCC.1  ATACGGACGAATGA.1  ATACGGACGTTGCA.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono       CD4 Naive T \n##  ATACGTCTACTCAG.1  ATACGTCTTCGTAG.1  ATAGAACTACCTGA.1  ATAGAACTACTACG.1 \n##         CD14 Mono             CD8 T       CD4 Naive T       CD4 Naive T \n##  ATAGAACTCGCCTT.1  ATAGAACTGCAAGG.1  ATAGAACTTGACTG.1  ATAGAACTTTGACG.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono         CD14 Mono \n##  ATAGATACAGAACA.1  ATAGATACATGCCA.1  ATAGATACCTGTCC.1  ATAGATACCTTCTA.1 \n##       T activated       CD4 Naive T         CD14 Mono         CD14 Mono \n##  ATAGATACGTTACG.1  ATAGATACGTTGTG.1 ATAGATACTGACTG.11 ATAGATTGAAACAG.11 \n##         CD14 Mono             CD8 T         CD14 Mono                 B \n##  ATAGATTGCCCTTG.1  ATAGATTGGGGAGT.1  ATAGATTGTACTGG.1  ATAGATTGTTCACT.1 \n##         CD14 Mono                Mk       CD4 Naive T                 B \n##  ATAGCCGACAGTTG.1  ATAGCCGACCCACT.1  ATAGCCGACTTGCC.1  ATAGCGTGAGAGAT.1 \n##         CD16 Mono      CD4 Memory T         CD14 Mono         CD14 Mono \n##  ATAGCGTGAGGTTC.1  ATAGCGTGCTCGAA.1  ATAGCTCTACTCAG.1  ATAGGAGAACACGT.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  ATAGGAGAACCTGA.1  ATAGGAGACACACA.1  ATAGGAGAGCTATG.1  ATAGGAGATGTCCC.1 \n##                NK         CD16 Mono         CD16 Mono         CD14 Mono \n##  ATAGGAGATTGCTT.1  ATAGGCTGAGCTAC.1  ATAGGCTGGGAAGC.1  ATAGGCTGGTAAAG.1 \n##       CD4 Naive T         CD14 Mono         CD16 Mono         CD14 Mono \n##  ATAGTCCTAAACGA.1  ATAGTCCTCAAAGA.1  ATAGTCCTCTGCAA.1  ATAGTCCTGCCATA.1 \n##         CD14 Mono         CD16 Mono       CD4 Naive T         CD16 Mono \n##  ATAGTCCTTCGACA.1  ATAGTTGAAACGTC.1  ATAGTTGACAGCTA.1  ATAGTTGACCTCCA.1 \n##         CD14 Mono      CD4 Memory T       CD4 Naive T      CD4 Memory T \n##  ATAGTTGATCGTAG.1  ATATACGACCTACC.1  ATATACGAGTAGGG.1  ATATACGATGTTTC.1 \n##      CD4 Memory T         CD14 Mono       T activated             CD8 T \n##  ATATAGTGAGGCGA.1  ATATAGTGCAATCG.1  ATATAGTGGATGAA.1  ATATAGTGTGCTAG.1 \n##             CD8 T       CD4 Naive T      CD4 Memory T       B Activated \n##  ATATGAACAGGGTG.1  ATATGAACGAAACA.1  ATATGAACGGTGGA.1  ATATGAACTGGATC.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono         CD16 Mono \n##  ATATGCCTAAACGA.1  ATATGCCTAACGAA.1  ATATGCCTAGGTCT.1  ATATGCCTGCATAC.1 \n##       CD4 Naive T         CD16 Mono                DC      CD4 Memory T \n##  ATATGCCTTCACCC.1  ATATGCCTTTTACC.1  ATCAAATGCAACTG.1  ATCAAATGGAATGA.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono      CD4 Memory T \n##  ATCAAATGTTCTCA.1  ATCAACCTCGTTGA.1  ATCAACCTTTCACT.1  ATCACACTATTCGG.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono                 B \n##  ATCACACTCCATAG.1  ATCACACTCGTAAC.1  ATCACACTCTGGAT.1  ATCACACTGATAGA.1 \n##         CD14 Mono                 B         CD14 Mono       CD4 Naive T \n##  ATCACACTGGCGAA.1  ATCACACTGTCGAT.1 ATCACGGAACCCTC.11  ATCACGGAAGTAGA.1 \n##         CD14 Mono                 B       T activated       T activated \n##  ATCACGGACCTTGC.1  ATCACGGACTAAGC.1  ATCACGGAGACGTT.1  ATCACGGATCACCC.1 \n##       CD4 Naive T         CD16 Mono         CD14 Mono       CD4 Naive T \n##  ATCACGGATGTCAG.1  ATCACTACAGCCTA.1  ATCACTACGAGACG.1  ATCACTACGTGAGG.1 \n##       CD4 Naive T                 B                 B         CD14 Mono \n##  ATCACTACTGCAAC.1  ATCACTACTGGAGG.1  ATCACTTGACGTGT.1  ATCACTTGGAATAG.1 \n##      CD4 Memory T         CD14 Mono       CD4 Naive T         CD14 Mono \n##  ATCACTTGTCCAGA.1  ATCAGGTGGCTACA.1  ATCAGGTGTCATTC.1  ATCAGGTGTGAGGG.1 \n##       CD4 Naive T         CD14 Mono             Eryth         CD14 Mono \n##  ATCATCTGACGACT.1  ATCATCTGCCACCT.1  ATCATCTGGCTAAC.1  ATCATCTGGCTATG.1 \n##                 B             CD8 T       CD4 Naive T       B Activated \n##  ATCATCTGTAACCG.1  ATCATCTGTACTTC.1  ATCATGCTATTGGC.1  ATCATGCTCAATCG.1 \n##         CD14 Mono       CD4 Naive T                NK       CD4 Naive T \n##  ATCATGCTCAGATC.1  ATCATGCTCTGACA.1  ATCATGCTGAGGGT.1  ATCATGCTGCTCCT.1 \n##         CD14 Mono         CD16 Mono         CD16 Mono      CD4 Memory T \n##  ATCATGCTGGAGCA.1  ATCATGCTTCAGTG.1  ATCATGCTTGAGAA.1  ATCCAGGAACAGTC.1 \n##                 B         CD16 Mono         CD14 Mono         CD14 Mono \n##  ATCCAGGAAGAACA.1  ATCCAGGAATAAGG.1  ATCCAGGACTGACA.1 ATCCAGGATAGTCG.11 \n##         CD14 Mono       CD4 Naive T                 B      CD4 Memory T \n##  ATCCAGGATCTCGC.1  ATCCATACGAGACG.1  ATCCATACGCAGTT.1  ATCCATACTTCTGT.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono       T activated \n##  ATCCCGTGAAGCCT.1  ATCCCGTGAGTCTG.1  ATCCCGTGGATGAA.1  ATCCCGTGGGTGAG.1 \n##             CD8 T         CD14 Mono         CD14 Mono         CD14 Mono \n##  ATCCCGTGTGCACA.1  ATCCGCACCCAACA.1  ATCCGCACCGTAGT.1  ATCCGCACGGACAG.1 \n##             CD8 T                 B       CD4 Naive T             CD8 T \n##  ATCCGCACGGAGGT.1  ATCCGCACGTTAGC.1  ATCCGCACTCCTTA.1  ATCCGCACTTGAGC.1 \n##         CD14 Mono       CD4 Naive T       T activated      CD4 Memory T \n##  ATCCTAACACTGTG.1  ATCCTAACCCTTCG.1  ATCCTAACCTGGAT.1  ATCCTAACGCGTAT.1 \n##       CD4 Naive T         CD16 Mono         CD14 Mono             CD8 T \n##  ATCCTAACTATGGC.1  ATCGACGAACTAGC.1  ATCGACGAAGTAGA.1  ATCGACGACTGTTT.1 \n##       CD4 Naive T       CD4 Naive T                 B             CD8 T \n##  ATCGAGTGCTGTAG.1  ATCGCAGAAAGGTA.1  ATCGCAGAACTGTG.1  ATCGCAGAAGGTCT.1 \n##         CD14 Mono       T activated       CD4 Naive T         CD14 Mono \n##  ATCGCAGATAAAGG.1  ATCGCCACAGAGAT.1  ATCGCCACTGTAGC.1 ATCGCCACTGTCCC.11 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono         CD16 Mono \n##  ATCGCCTGACCTTT.1  ATCGCCTGCAGTTG.1  ATCGCCTGCTTGAG.1  ATCGCCTGTGTTCT.1 \n##       CD4 Naive T       CD4 Naive T         CD16 Mono                 B \n##  ATCGCCTGTTTCTG.1  ATCGCGCTAGAAGT.1  ATCGCGCTAGATCC.1  ATCGCGCTCAATCG.1 \n##             CD8 T         CD14 Mono                NK       CD4 Naive T \n##  ATCGCGCTCACTTT.1  ATCGCGCTGCCAAT.1  ATCGCGCTTCTTTG.1  ATCGGAACACCTCC.1 \n##       CD4 Naive T             CD8 T         CD14 Mono                 B \n##  ATCGGTGAAACAGA.1  ATCGGTGAAACGGG.1  ATCGGTGAACCAGT.1  ATCGGTGACGAGAG.1 \n##             CD8 T       CD4 Naive T                NK      CD4 Memory T \n##  ATCGGTGACTCAAG.1  ATCGGTGACTGCTC.1  ATCGGTGAGAGGCA.1  ATCGGTGAGCGTAT.1 \n##             CD8 T         CD14 Mono       CD4 Naive T         CD14 Mono \n##  ATCGGTGAGTTGCA.1  ATCGGTGATCCCAC.1  ATCGTTTGACGTGT.1  ATCGTTTGCTGTTT.1 \n##       CD4 Naive T      CD4 Memory T                Mk         CD16 Mono \n##  ATCGTTTGTTGAGC.1  ATCTACACAACTGC.1  ATCTACACACGCAT.1  ATCTACACCTGACA.1 \n##         CD14 Mono                NK         CD14 Mono      CD4 Memory T \n##  ATCTACACCTGGAT.1  ATCTACTGGGTCAT.1  ATCTACTGTTTGCT.1  ATCTCAACAACCAC.1 \n##                 B      CD4 Memory T      CD4 Memory T                NK \n## ATCTCAACGTCAAC.11  ATCTCAACTCCTGC.1  ATCTCAACTTCGTT.1  ATCTGACTAGATGA.1 \n##         CD14 Mono         CD14 Mono             CD8 T         CD14 Mono \n##  ATCTGACTAGCTCA.1  ATCTGACTCACTGA.1  ATCTGACTCAGCTA.1  ATCTGACTCATTTC.1 \n##                NK      CD4 Memory T                DC       CD4 Naive T \n##  ATCTGACTGATAAG.1  ATCTGGGAAGCACT.1  ATCTGGGAATTTCC.1  ATCTGGGACACACA.1 \n##                NK         CD16 Mono         CD14 Mono         CD14 Mono \n##  ATCTGGGACTTCCG.1  ATCTGGGAGTCGAT.1  ATCTGGGATAAGGA.1  ATCTGGGATGCCCT.1 \n##                NK       CD4 Naive T         CD16 Mono      CD4 Memory T \n##  ATCTGTTGAGCTAC.1  ATCTGTTGTGGTGT.1  ATCTTGACAGAGAT.1  ATCTTGACCACAAC.1 \n##       B Activated                 B             CD8 T                 B \n##  ATCTTGACCTCGCT.1  ATCTTGACGCTGAT.1  ATCTTGACTCTACT.1  ATCTTTCTAAAAGC.1 \n##         CD14 Mono             CD8 T         CD16 Mono      CD4 Memory T \n##  ATCTTTCTGTTGCA.1  ATCTTTCTGTTTCT.1  ATCTTTCTTCATTC.1  ATCTTTCTTCCCGT.1 \n##      CD4 Memory T         CD14 Mono      CD4 Memory T                 B \n##  ATCTTTCTTGCCTC.1  ATCTTTCTTTCGTT.1  ATGAAACTAGAGTA.1 ATGAAACTGCTGTA.11 \n##       T activated       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  ATGAAACTGGTAAA.1  ATGAAGGATGCTGA.1  ATGAAGGATGGTAC.1  ATGACGTGCCCTCA.1 \n##         CD14 Mono       CD4 Naive T             CD8 T                NK \n##  ATGACGTGCGACAT.1  ATGACGTGTGAGAA.1  ATGAGAGAAAGGCG.1  ATGAGAGACTTCGC.1 \n##      CD4 Memory T         CD16 Mono       CD4 Naive T         CD14 Mono \n##  ATGAGAGAGTTGGT.1  ATGAGCACACGACT.1  ATGAGCACATGACC.1  ATGAGCACCCTGTC.1 \n##         CD16 Mono       CD4 Naive T       T activated         CD14 Mono \n##  ATGAGCACCCTTCG.1  ATGATAACAAACAG.1  ATGATAACCGTGAT.1  ATGATAACCTAAGC.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono         CD14 Mono \n##  ATGATAACGAGGAC.1  ATGATAACTGCCTC.1  ATGATATGAAAAGC.1  ATGATATGACCCAA.1 \n##         CD16 Mono      CD4 Memory T         CD14 Mono         CD14 Mono \n##  ATGATATGCCGCTT.1  ATGATATGGACACT.1  ATGATATGGCATAC.1  ATGATATGGTCAAC.1 \n##             Eryth      CD4 Memory T         CD16 Mono                 B \n##  ATGATATGGTCGTA.1  ATGCACGAAAAGCA.1  ATGCACGACTGGTA.1  ATGCACGAGAATAG.1 \n##             CD8 T         CD14 Mono         CD14 Mono             CD8 T \n##  ATGCACGATGGAAA.1  ATGCAGACACTCTT.1  ATGCAGACATGCTG.1  ATGCAGACCTCTAT.1 \n##      CD4 Memory T      CD4 Memory T         CD14 Mono      CD4 Memory T \n##  ATGCAGACGCGAAG.1  ATGCAGACTGCACA.1  ATGCAGTGCATGAC.1  ATGCAGTGCGATAC.1 \n##       CD4 Naive T       T activated                 B             CD8 T \n##  ATGCAGTGGAGGGT.1  ATGCAGTGGGTAGG.1  ATGCAGTGGTCACA.1  ATGCAGTGTCACGA.1 \n##      CD4 Memory T         CD14 Mono       CD4 Naive T                 B \n##  ATGCAGTGTTTGGG.1  ATGCCAGACTTATC.1  ATGCCAGATCCTGC.1  ATGCCGCTACGTTG.1 \n##         CD14 Mono         CD14 Mono                NK      CD4 Memory T \n##  ATGCCGCTATCTTC.1  ATGCCGCTCCTGTC.1  ATGCGATGGCGAGA.1  ATGCGATGTACAGC.1 \n##                NK         CD14 Mono       CD4 Naive T         CD14 Mono \n##  ATGCGATGTCACCC.1  ATGCGATGTCGCAA.1  ATGCGCCTAGCACT.1  ATGCGCCTCACTTT.1 \n##         CD14 Mono       CD4 Naive T             Eryth         CD14 Mono \n##  ATGCGCCTGTACGT.1  ATGCTTTGAAAGTG.1  ATGCTTTGCAGTTG.1  ATGCTTTGTAAGGA.1 \n##       CD4 Naive T       CD4 Naive T         CD16 Mono         CD14 Mono \n##  ATGGACACACGCTA.1  ATGGGTACAAGGCG.1  ATGGGTACCTGGAT.1  ATGGGTACCTTCGC.1 \n##       CD4 Naive T                NK         CD16 Mono         CD14 Mono \n##  ATGGGTACTCCGTC.1  ATGGTGACCCCAAA.1  ATGGTGACCCGCTT.1  ATGGTGACCTGCTC.1 \n##         CD14 Mono         CD14 Mono                NK       CD4 Naive T \n##  ATGGTGACTAGACC.1  ATGGTGACTAGTCG.1  ATGGTGACTGCACA.1  ATGTAAACCAGAAA.1 \n##       T activated                DC         CD14 Mono       CD4 Naive T \n##  ATGTAAACCTGCAA.1  ATGTAAACGTGCAT.1  ATGTAAACTTCGCC.1  ATGTACCTACAGTC.1 \n##                 B         CD14 Mono         CD16 Mono         CD14 Mono \n##  ATGTACCTCGCATA.1  ATGTACCTCTCGCT.1  ATGTACCTTCTATC.1  ATGTCACTCAACCA.1 \n##       CD4 Naive T       CD4 Naive T       CD4 Naive T       CD4 Naive T \n##  ATGTCACTGGTAGG.1  ATGTCACTTGGTCA.1  ATGTCACTTTGGCA.1  ATGTCACTTTTCAC.1 \n##       CD4 Naive T                Mk                Mk      CD4 Memory T \n##  ATGTCGGAAGCCAT.1  ATGTCGGACTATGG.1  ATGTCGGACTTACT.1  ATGTCGGAGGGACA.1 \n##      CD4 Memory T      CD4 Memory T                DC      CD4 Memory T \n##  ATGTTAGAAGAGTA.1  ATGTTAGACCTACC.1  ATGTTAGACTTGTT.1  ATGTTAGAGGAGCA.1 \n##         CD16 Mono      CD4 Memory T                DC       CD4 Naive T \n##  ATGTTAGAGGTTTG.1  ATGTTAGATATGGC.1  ATGTTCACAGCGTT.1  ATGTTCACGAGCAG.1 \n##       CD4 Naive T                NK         CD16 Mono       CD4 Naive T \n##  ATGTTCACGAGCTT.1  ATGTTCACTTACCT.1  ATGTTGCTGGTTCA.1  ATTAACGATTTCGT.1 \n##         CD16 Mono       T activated      CD4 Memory T         CD14 Mono \n##  ATTAAGACATACCG.1  ATTAAGACCCCTCA.1  ATTAAGACGAGAGC.1  ATTAAGACTCAGTG.1 \n##       T activated       B Activated             CD8 T       CD4 Naive T \n##  ATTAAGACTGTCAG.1  ATTAAGACTGTGGT.1  ATTACCACCCTCAC.1  ATTACCACGGAGGT.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono                DC \n##  ATTACCACGGTGAG.1  ATTACCTGACCTAG.1  ATTACCTGTTAGGC.1  ATTAGATGACAGCT.1 \n##                 B         CD14 Mono         CD14 Mono      CD4 Memory T \n##  ATTAGATGACGGGA.1 ATTAGATGAGCAAA.11  ATTAGATGCTTCTA.1  ATTAGATGGCTCCT.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono                NK \n##  ATTAGATGTGGTAC.1  ATTAGTGACAGATC.1  ATTAGTGACCTTTA.1  ATTAGTGACGTAAC.1 \n##             CD8 T      CD4 Memory T         CD16 Mono      CD4 Memory T \n##  ATTAGTGAGTTGTG.1  ATTAGTGATGCTGA.1  ATTATGGAACCCTC.1  ATTATGGAACGGTT.1 \n##             CD8 T         CD14 Mono      CD4 Memory T         CD14 Mono \n##  ATTATGGATCCCAC.1  ATTATGGATGCTCC.1  ATTCAAGAACACAC.1  ATTCAAGAAGTCAC.1 \n##         CD16 Mono       CD4 Naive T         CD14 Mono                 B \n## ATTCAAGAAGTGCT.11  ATTCAAGAAGTTCG.1  ATTCAAGACCTACC.1  ATTCAAGACTAGTG.1 \n##         CD14 Mono      CD4 Memory T       CD4 Naive T         CD14 Mono \n##  ATTCAAGACTTATC.1  ATTCAGCTAAACGA.1  ATTCAGCTACGTGT.1  ATTCAGCTGGTGGA.1 \n##                 B      CD4 Memory T         CD14 Mono         CD14 Mono \n##  ATTCAGCTGTCCTC.1  ATTCCAACAAGGTA.1  ATTCCAACATCGTG.1  ATTCCAACCTGCAA.1 \n##      CD4 Memory T         CD14 Mono       CD4 Naive T                NK \n##  ATTCCAACGGTCTA.1  ATTCCAACGTAAAG.1  ATTCCAACGTTGAC.1  ATTCCATGAGTGTC.1 \n##         CD14 Mono       CD4 Naive T             CD8 T      CD4 Memory T \n##  ATTCCATGATGACC.1  ATTCCATGCTCGCT.1  ATTCCATGTAAGCC.1  ATTCCATGTGAGCT.1 \n##         CD14 Mono                Mk       CD4 Naive T      CD4 Memory T \n##  ATTCGACTGCGATT.1  ATTCGACTGGTCTA.1  ATTCGACTTCCGTC.1  ATTCGACTTGGTTG.1 \n##         CD14 Mono                 B       CD4 Naive T         CD14 Mono \n##  ATTCGGGAACTCTT.1  ATTCGGGACATGAC.1  ATTCGGGACCCTCA.1  ATTCGGGACTTACT.1 \n##         CD14 Mono         CD14 Mono                 B       CD4 Naive T \n##  ATTCGGGAGAGATA.1  ATTCGGGAGATAAG.1  ATTCGGGAGCGATT.1  ATTCGGGAGGGACA.1 \n##       CD4 Naive T      CD4 Memory T       CD4 Naive T                 B \n##  ATTCGGGAGGGTGA.1  ATTCGGGATGTCCC.1  ATTCTGACACTCAG.1  ATTCTGACCATCAG.1 \n##         CD14 Mono                 B       CD4 Naive T       CD4 Naive T \n##  ATTCTGACGCCATA.1  ATTCTGACTACTTC.1  ATTCTGACTGCTGA.1  ATTCTTCTCGAGAG.1 \n##             CD8 T       CD4 Naive T             CD8 T                DC \n##  ATTCTTCTTGAACC.1  ATTCTTCTTGGTGT.1  ATTCTTCTTTGTGG.1  ATTGAAACACGTGT.1 \n##                Mk       CD4 Naive T      CD4 Memory T      CD4 Memory T \n## ATTGAAACAGTACC.11  ATTGAAACGCGAAG.1  ATTGAAACTTAGGC.1  ATTGAATGACCATG.1 \n##         CD16 Mono         CD14 Mono      CD4 Memory T       CD4 Naive T \n##  ATTGAATGCCAGTA.1  ATTGAATGTAAAGG.1  ATTGAATGTCCTGC.1  ATTGAATGTTCCCG.1 \n##         CD14 Mono         CD14 Mono                 B      CD4 Memory T \n##  ATTGATGAATGCTG.1  ATTGATGAGGTACT.1  ATTGATGAGGTGAG.1  ATTGATGAGTCCTC.1 \n##       T activated                 B         CD14 Mono         CD14 Mono \n##  ATTGATGATCCTTA.1  ATTGATGATGCAAC.1  ATTGATGATTCTTG.1  ATTGCACTGAACCT.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono         CD14 Mono \n## ATTGCACTTGTCGA.11  ATTGCGGAAAACGA.1  ATTGCGGACCGCTT.1  ATTGCGGACGAGTT.1 \n##       CD4 Naive T       T activated                NK         CD16 Mono \n##  ATTGCGGAGCTGAT.1  ATTGCGGAGTACGT.1  ATTGCGGAGTTGCA.1  ATTGCGGATACTCT.1 \n##                NK      CD4 Memory T         CD14 Mono                Mk \n##  ATTGCGGATTACCT.1  ATTGCTACCTAGTG.1  ATTGCTACCTTGGA.1  ATTGCTACGAAGGC.1 \n##                NK       CD4 Naive T         CD14 Mono         CD14 Mono \n##  ATTGCTACTACGAC.1  ATTGCTACTCGCTC.1  ATTGCTTGACACCA.1  ATTGCTTGCTGCTC.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T         CD14 Mono \n##  ATTGCTTGGAGGCA.1  ATTGCTTGGCTGTA.1  ATTGCTTGGGAGTG.1  ATTGCTTGTCGCCT.1 \n##       CD4 Naive T         CD16 Mono         CD14 Mono       T activated \n##  ATTGCTTGTTCGTT.1  ATTGGGTGACCTGA.1  ATTGGGTGCCACCT.1  ATTGGGTGGTACCA.1 \n##         CD14 Mono                 B       CD4 Naive T       CD4 Naive T \n##  ATTGGGTGTCCAAG.1 ATTGGGTGTCCTCG.11  ATTGGGTGTGAACC.1  ATTGGTCTAGGTCT.1 \n##       CD4 Naive T                NK         CD14 Mono             CD8 T \n##  ATTGGTCTCTTGGA.1  ATTGGTCTGGGATG.1  ATTGGTCTGTAAGA.1  ATTGTAGAAGCTAC.1 \n##                 B      CD4 Memory T         CD16 Mono      CD4 Memory T \n##  ATTGTAGACACTGA.1  ATTGTAGACAGCTA.1  ATTGTAGAGGTTAC.1  ATTGTAGAGGTTCA.1 \n##      CD4 Memory T         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  ATTGTAGAGTAAAG.1  ATTGTAGAGTACCA.1  ATTGTCTGCAGATC.1  ATTGTCTGGGTTCA.1 \n##       CD4 Naive T         CD14 Mono      CD4 Memory T             CD8 T \n##  ATTGTCTGGTGTTG.1  ATTGTCTGTGCTAG.1  ATTTAGGACCAGTA.1  ATTTAGGACTCATT.1 \n##         CD14 Mono                 B         CD14 Mono      CD4 Memory T \n##  ATTTAGGATCAGAC.1  ATTTAGGATGTCAG.1  ATTTAGGATTGAGC.1  ATTTCCGAAAGTGA.1 \n##      CD4 Memory T       T activated         CD14 Mono      CD4 Memory T \n##  ATTTCCGACATCAG.1  ATTTCCGAGACAGG.1  ATTTCCGAGGGAGT.1  ATTTCCGAGTAAAG.1 \n##                NK       CD4 Naive T      CD4 Memory T                 B \n##  ATTTCCGATTGAGC.1  ATTTCGTGAGTGTC.1  ATTTCGTGGACGTT.1  ATTTCGTGGGTTAC.1 \n##         CD14 Mono       T activated                NK         CD14 Mono \n##  ATTTCGTGGTCACA.1 ATTTCGTGTCATTC.11  ATTTCTCTCACAAC.1  ATTTCTCTCTTGAG.1 \n##         CD14 Mono      CD4 Memory T         CD16 Mono      CD4 Memory T \n##  ATTTCTCTGGTTTG.1  ATTTCTCTGTCTTT.1  ATTTGCACAAGGTA.1  ATTTGCACGAGAGC.1 \n##                 B         CD14 Mono      CD4 Memory T                DC \n##  ATTTGCACTCCTGC.1  CAAACTCTAATGCC.1  CAAACTCTACCCTC.1  CAAACTCTCCATAG.1 \n##         CD16 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  CAAACTCTTCGATG.1 CAAACTCTTCGTAG.11  CAAACTCTTGTGGT.1 CAAACTCTTTACCT.11 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  CAAAGCACAAACAG.1  CAAAGCACACCTCC.1  CAAAGCACCACCAA.1  CAAAGCACCCCGTT.1 \n##       T activated      CD4 Memory T      CD4 Memory T                 B \n##  CAAAGCACCGGTAT.1 CAAAGCACGGTAGG.11  CAAAGCTGCCCAAA.1  CAAAGCTGGGGAGT.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T         CD14 Mono \n##  CAAAGCTGTAGCGT.1  CAAAGCTGTTGGTG.1  CAAATATGACGCAT.1  CAAATATGCGAGTT.1 \n##       T activated      CD4 Memory T      CD4 Memory T      CD4 Memory T \n##  CAAATTGAACGGGA.1  CAAATTGACCTATT.1  CAAATTGACTGACA.1  CAACAGACATCTTC.1 \n##         CD14 Mono         CD14 Mono                NK         CD14 Mono \n##  CAACCAGACTTCGC.1  CAACCAGAGACTAC.1  CAACCAGAGAGCAG.1  CAACCAGAGCCCTT.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T      CD4 Memory T \n##  CAACCAGAGTATCG.1  CAACCAGATAGAAG.1  CAACCGCTCAGGAG.1  CAACGAACATTCGG.1 \n##                DC       CD4 Naive T         CD14 Mono                 B \n##  CAACGAACCAATCG.1  CAACGAACGCTTCC.1  CAACGATGGGTAGG.1  CAACGATGTGTGGT.1 \n##         CD14 Mono       T activated         CD14 Mono         CD14 Mono \n##  CAACGTGACACTCC.1  CAACGTGAGAGGGT.1  CAACGTGAGGAACG.1  CAACGTGATGAAGA.1 \n##      CD4 Memory T         CD14 Mono                 B         CD14 Mono \n##  CAACGTGATGTGCA.1  CAACGTGATTCTCA.1  CAACTTTGGGTCAT.1  CAACTTTGTTGCAG.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T                 B \n##  CAAGAAGAAAGAGT.1  CAAGAAGAACTAGC.1  CAAGAAGACTCTCG.1  CAAGAAGACTCTTA.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono       B Activated \n##  CAAGAAGATGCTCC.1  CAAGAAGATTTCGT.1  CAAGACACAGAGGC.1  CAAGACACGATACC.1 \n##               pDC       CD4 Naive T         CD14 Mono                Mk \n##  CAAGACACTTCACT.1  CAAGACACTTCCCG.1  CAAGACTGAGGTTC.1  CAAGACTGATACCG.1 \n##         CD14 Mono                 B             CD8 T                 B \n##  CAAGACTGCACTGA.1  CAAGACTGGAGCTT.1  CAAGACTGGCTATG.1  CAAGACTGGGACAG.1 \n##                 B             CD8 T       CD4 Naive T       T activated \n##  CAAGACTGGTTTGG.1  CAAGACTGTCGTAG.1  CAAGCATGCCTCGT.1  CAAGCATGTCTCAT.1 \n##       CD4 Naive T      CD4 Memory T                NK                 B \n##  CAAGCCCTAGCGGA.1  CAAGCCCTCTTGCC.1  CAAGCCCTGTCGTA.1  CAAGCCCTTCAAGC.1 \n##      CD4 Memory T       CD4 Naive T      CD4 Memory T         CD14 Mono \n##  CAAGCCCTTCGACA.1  CAAGCCCTTTCGGA.1  CAAGCTGAACCCAA.1  CAAGCTGAACGGGA.1 \n##         CD14 Mono                 B       B Activated         CD16 Mono \n##  CAAGCTGACTGTTT.1  CAAGCTGAGCAAGG.1  CAAGCTGATCCCGT.1  CAAGGACTCTTACT.1 \n##       T activated       T activated             CD8 T                NK \n##  CAAGGACTTGCAAC.1  CAAGGTTGAAAACG.1  CAAGGTTGCTCAGA.1  CAAGGTTGCTTTAC.1 \n##         CD16 Mono         CD14 Mono       B Activated         CD14 Mono \n##  CAAGGTTGTGGATC.1  CAAGTCGACTACGA.1  CAAGTCGACTATTC.1  CAAGTCGAGAGGCA.1 \n##         CD14 Mono         CD14 Mono                 B       CD4 Naive T \n##  CAAGTCGATACGCA.1  CAAGTTCTCACTGA.1  CAAGTTCTGTGCTA.1  CAAGTTCTTCACGA.1 \n##         CD16 Mono         CD14 Mono      CD4 Memory T       T activated \n##  CAAGTTCTTGCTAG.1  CAAGTTCTTGGTAC.1  CAATAAACACTGGT.1  CAATAAACAGTTCG.1 \n##       B Activated                 B       CD4 Naive T                Mk \n##  CAATAAACCCATAG.1  CAATAAACCCTCAC.1  CAATAAACGAATAG.1  CAATAAACGACGGA.1 \n##         CD14 Mono         CD14 Mono                NK         CD14 Mono \n##  CAATAAACGCTAAC.1  CAATAAACGGTTTG.1  CAATAAACGTACGT.1  CAATAATGACCAGT.1 \n##      CD4 Memory T       CD4 Naive T                 B      CD4 Memory T \n##  CAATAATGCCTCGT.1  CAATAATGGACAAA.1  CAATAATGTATTCC.1  CAATATGAAGACTC.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  CAATATGAAGCCTA.1  CAATATGAATGTCG.1  CAATATGAGATAGA.1  CAATATGAGTTCAG.1 \n##      CD4 Memory T      CD4 Memory T         CD14 Mono       T activated \n##  CAATATGATACAGC.1  CAATATGATCACGA.1  CAATCGGAATTGGC.1  CAATCGGACTCCCA.1 \n##      CD4 Memory T         CD14 Mono       CD4 Naive T      CD4 Memory T \n##  CAATCGGACTCGAA.1  CAATCGGACTGTAG.1  CAATCGGAGTCCTC.1  CAATCGGAGTGTTG.1 \n##         CD14 Mono         CD14 Mono       T activated       CD4 Naive T \n##  CAATCGGATTGCTT.1  CAATCTACCTACGA.1  CAATCTACGTACCA.1  CAATGGACAGAATG.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono         CD16 Mono \n##  CAATGGACCCTCCA.1  CAATGGACCGAGAG.1  CAATGGACGAATCC.1  CAATGGACGGAGCA.1 \n##         CD14 Mono             Eryth      CD4 Memory T       CD4 Naive T \n##  CAATGGACGGCGAA.1  CAATTCACAAAGCA.1  CAATTCACCAACTG.1  CAATTCACTATGGC.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T      CD4 Memory T \n## CAATTCACTGAGAA.11  CAATTCTGACGGTT.1  CAATTCTGTGCACA.1  CAATTCTGTGTTTC.1 \n##                 B         CD16 Mono         CD14 Mono         CD14 Mono \n##  CACAACGAAAGATG.1  CACAACGAGGGTGA.1  CACAATCTACTGGT.1  CACAATCTCCCGTT.1 \n##               pDC                Mk         CD14 Mono       CD4 Naive T \n##  CACACCTGGTACGT.1  CACACCTGTCAGGT.1  CACACCTGTCGCTC.1  CACAGAACACCCTC.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T       T activated \n##  CACAGAACCTGTCC.1  CACAGAACTGACAC.1  CACAGATGAGCTAC.1  CACAGATGCACCAA.1 \n##             CD8 T       CD4 Naive T      CD4 Memory T                 B \n##  CACAGATGCATACG.1  CACAGATGCTGCTC.1  CACAGATGGCAGTT.1  CACAGATGTGACTG.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  CACAGCCTACGTTG.1  CACAGCCTCCACCT.1  CACAGCCTCGGAGA.1  CACAGCCTCGTAGT.1 \n##             CD8 T       T activated         CD14 Mono       T activated \n##  CACAGCCTTCCAAG.1  CACAGTGAAAGGGC.1  CACAGTGATCGCAA.1  CACATACTAGAACA.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T       T activated \n##  CACATACTCGGTAT.1  CACATACTGTCTGA.1  CACATACTTTCGCC.1  CACATGGAATCTTC.1 \n##       CD4 Naive T         CD14 Mono             CD8 T       CD4 Naive T \n##  CACATGGACCTACC.1  CACATGGACGCATA.1  CACATGGATTCTCA.1  CACATGGATTGACG.1 \n##         CD16 Mono                NK      CD4 Memory T       CD4 Naive T \n##  CACCACTGAACGGG.1  CACCACTGGATGAA.1  CACCACTGGGTTCA.1  CACCCATGAGAATG.1 \n##       CD4 Naive T         CD14 Mono                 B      CD4 Memory T \n##  CACCGGGACTGTTT.1  CACCGTACAAAAGC.1  CACCGTACCCTATT.1  CACCGTACGCGTTA.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono         CD14 Mono \n##  CACCGTACGTCTGA.1  CACCGTACTCCGAA.1  CACCGTACTTCATC.1  CACCGTTGACGTTG.1 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono       T activated \n##  CACCGTTGAGCACT.1  CACCGTTGATGACC.1  CACCGTTGCCATAG.1  CACCGTTGGTCGTA.1 \n##         CD14 Mono         CD16 Mono         CD14 Mono             Eryth \n## CACCGTTGGTGAGG.11  CACCGTTGTAGAAG.1  CACCTGACACTGTG.1  CACCTGACCAGTTG.1 \n##         CD16 Mono         CD14 Mono                 B       T activated \n##  CACCTGACCCATAG.1  CACCTGACCCCGTT.1  CACCTGACCCTATT.1  CACCTGACGCGATT.1 \n##       B Activated      CD4 Memory T      CD4 Memory T         CD14 Mono \n## CACCTGACTGACTG.11  CACCTGACTTGCAG.1  CACGAAACCGAGAG.1  CACGAAACGAAGGC.1 \n##      CD4 Memory T                NK         CD14 Mono         CD14 Mono \n##  CACGAAACTCGACA.1  CACGACCTCCACAA.1  CACGACCTCCCAAA.1  CACGACCTCCTTGC.1 \n##         CD14 Mono       CD4 Naive T             CD8 T       B Activated \n##  CACGATGAACACGT.1  CACGATGAAGCTAC.1  CACGATGACGTGAT.1  CACGCTACAAACAG.1 \n##       CD4 Naive T         CD14 Mono      CD4 Memory T       CD4 Naive T \n##  CACGCTACAACGTC.1  CACGCTACACAGTC.1  CACGCTACAGTGTC.1  CACGCTACGAATGA.1 \n##         CD14 Mono      CD4 Memory T             CD8 T         CD14 Mono \n##  CACGCTACGGTATC.1  CACGCTACGGTTCA.1  CACGCTACTACAGC.1  CACGGGACACGCAT.1 \n##                DC      CD4 Memory T       CD4 Naive T         CD14 Mono \n##  CACGGGACAGGTTC.1  CACGGGACGGTTCA.1  CACGGGACTATCGG.1  CACGGGTGCTCGAA.1 \n##         CD16 Mono         CD14 Mono                Mk         CD14 Mono \n##  CACGGGTGTCCAAG.1  CACTAACTACTGGT.1  CACTAACTGTAGCT.1  CACTAACTTTCCCG.1 \n##                Mk                 B                NK         CD16 Mono \n##  CACTAGGAACGGTT.1  CACTAGGAGACAGG.1  CACTAGGATTGGTG.1  CACTATACAGCAAA.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono         CD14 Mono \n##  CACTATACCAATCG.1 CACTATACCAGAAA.11  CACTATACCGGAGA.1  CACTATACCTGATG.1 \n##       CD4 Naive T       CD4 Naive T      CD4 Memory T         CD14 Mono \n##  CACTATACGTCGTA.1  CACTCCGACCTTGC.1  CACTCCGAGGTGGA.1  CACTCCGATCAAGC.1 \n##         CD16 Mono         CD14 Mono       CD4 Naive T                 B \n##  CACTCCGATTCACT.1  CACTCTCTAGAATG.1  CACTCTCTCTGATG.1 CACTGAGATTGCAG.11 \n##         CD14 Mono         CD14 Mono       CD4 Naive T             CD8 T \n##  CACTGAGATTGCGA.1  CACTGCACACGACT.1  CACTGCACGCCCTT.1  CACTGCACGTGCAT.1 \n##                NK         CD14 Mono         CD14 Mono      CD4 Memory T \n##  CACTGCACTGAGAA.1  CACTGCACTTCTCA.1  CACTGCTGAGTGCT.1  CACTGCTGGAGATA.1 \n##                 B         CD14 Mono         CD14 Mono         CD14 Mono \n##  CACTGCTGGAGGTG.1  CACTGCTGGCGGAA.1  CACTGCTGTTTACC.1  CACTTAACCCGTAA.1 \n##             CD8 T             CD8 T         CD16 Mono       CD4 Naive T \n##  CACTTAACGGGATG.1  CACTTATGAACGTC.1  CACTTATGAGAGTA.1  CACTTATGAGTGCT.1 \n##      CD4 Memory T                 B      CD4 Memory T       CD4 Naive T \n##  CACTTATGCCAACA.1  CACTTATGCGAATC.1  CACTTATGGGCGAA.1  CACTTATGTACGCA.1 \n##      CD4 Memory T                DC         CD16 Mono      CD4 Memory T \n##  CACTTTGACCGTAA.1  CACTTTGAGAATAG.1  CACTTTGAGATAGA.1  CACTTTGAGTTAGC.1 \n##                NK       T activated         CD14 Mono       CD4 Naive T \n##  CACTTTGATAACCG.1  CACTTTGATCTCCG.1  CAGAAGCTCCCAAA.1  CAGAAGCTCCCACT.1 \n##         CD14 Mono                 B         CD16 Mono         CD14 Mono \n##  CAGAAGCTCTTCCG.1  CAGAAGCTGCCTTC.1  CAGACAACAGTTCG.1  CAGACAACGAAGGC.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T             CD8 T \n##  CAGACAACGCTCCT.1  CAGACAACTATCGG.1  CAGACAACTCCTTA.1  CAGACATGAACAGA.1 \n##         CD14 Mono       B Activated       T activated                NK \n##  CAGACATGACTAGC.1  CAGACATGAGAACA.1  CAGACATGCGATAC.1  CAGACATGGAAGGC.1 \n##         CD14 Mono         CD16 Mono         CD14 Mono                 B \n##  CAGACATGGCGTAT.1  CAGACCCTCCAAGT.1  CAGACCCTCTTGCC.1  CAGACCCTGAAAGT.1 \n##       T activated         CD16 Mono       CD4 Naive T      CD4 Memory T \n##  CAGACCCTTCATTC.1  CAGACTGACTGTAG.1  CAGACTGAGCGAAG.1  CAGAGGGAAACGGG.1 \n##       B Activated         CD14 Mono                 B       CD4 Naive T \n##  CAGAGGGAGCTTCC.1  CAGATCGACATCAG.1  CAGATCGACCCTTG.1  CAGATCGACTGTCC.1 \n##                NK      CD4 Memory T                 B      CD4 Memory T \n##  CAGATGACAGGAGC.1  CAGATGACAGGTTC.1  CAGATGACCTCATT.1  CAGATGACTAGAGA.1 \n##      CD4 Memory T         CD14 Mono      CD4 Memory T      CD4 Memory T \n##  CAGCAATGCTCAGA.1  CAGCAATGTCATTC.1  CAGCACCTAAACGA.1  CAGCACCTAACGTC.1 \n##         CD14 Mono      CD4 Memory T       CD4 Naive T         CD14 Mono \n##  CAGCACCTAGTCAC.1  CAGCACCTATACCG.1  CAGCACCTCCGATA.1  CAGCACCTCGGGAA.1 \n##         CD16 Mono       CD4 Naive T                 B         CD14 Mono \n##  CAGCACCTTACGAC.1  CAGCACCTTGACTG.1  CAGCACCTTGTCCC.1  CAGCACCTTTCTCA.1 \n##      CD4 Memory T         CD14 Mono      CD4 Memory T       T activated \n##  CAGCATGAACACCA.1  CAGCATGAAGAAGT.1  CAGCATGACTTGTT.1  CAGCATGAGGAACG.1 \n##       CD4 Naive T         CD14 Mono      CD4 Memory T         CD14 Mono \n##  CAGCATGAGTCCTC.1  CAGCCTACAAACGA.1  CAGCCTACATCACG.1  CAGCCTACCAACCA.1 \n##         CD16 Mono       CD4 Naive T      CD4 Memory T                 B \n##  CAGCCTACGGCAAG.1  CAGCCTACTGGTTG.1  CAGCCTACTTCATC.1  CAGCGGACAGGAGC.1 \n##      CD4 Memory T      CD4 Memory T         CD14 Mono         CD14 Mono \n##  CAGCGGACTCCGTC.1  CAGCGTCTACACGT.1  CAGCGTCTCGACAT.1  CAGCGTCTCGGAGA.1 \n##                 B                 B         CD14 Mono      CD4 Memory T \n##  CAGCGTCTCGTAAC.1  CAGCGTCTCTTGTT.1  CAGCGTCTGGTTCA.1  CAGCGTCTTTTGTC.1 \n##       CD4 Naive T       CD4 Naive T                DC             CD8 T \n##  CAGCTAGAACCACA.1  CAGCTAGAACGGTT.1  CAGCTAGAAGCCAT.1  CAGCTAGATGCTGA.1 \n##         CD14 Mono                 B       CD4 Naive T         CD14 Mono \n##  CAGCTAGATGTGAC.1  CAGCTCACGAATGA.1  CAGCTCACGTGTCA.1  CAGCTCACTCCTGC.1 \n##       CD4 Naive T       CD4 Naive T                 B         CD14 Mono \n##  CAGCTCACTCGACA.1  CAGCTCACTGGTGT.1  CAGCTCTGAGTGCT.1 CAGCTCTGCCTTGC.11 \n##                Mk       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  CAGCTCTGCTCTCG.1  CAGCTCTGGGGAGT.1  CAGCTCTGGGGATG.1  CAGGAACTCAACTG.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono       CD4 Naive T \n##  CAGGAACTGCCAAT.1  CAGGAACTGGTTCA.1  CAGGAACTGTGAGG.1  CAGGAACTTGCTAG.1 \n##       CD4 Naive T         CD14 Mono                 B       CD4 Naive T \n##  CAGGCCGAAGCCAT.1  CAGGCCGAATACCG.1  CAGGCCGACAACTG.1  CAGGCCGACTTATC.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T             CD8 T \n##  CAGGCCGAGTGAGG.1  CAGGCCGATGACAC.1  CAGGCCGATGTTCT.1  CAGGGCACAATGCC.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono             CD8 T \n##  CAGGGCACACACCA.1  CAGGGCACAGTTCG.1  CAGGGCACCGGAGA.1  CAGGGCACGACAGG.1 \n##       T activated       CD4 Naive T         CD14 Mono         CD14 Mono \n##  CAGGTAACCAGCTA.1  CAGGTAACCTCCCA.1  CAGGTAACGGTGGA.1  CAGGTAACGTTAGC.1 \n##         CD14 Mono             CD8 T         CD14 Mono         CD14 Mono \n##  CAGGTAACTAAGGA.1 CAGGTATGGAATGA.11  CAGGTATGGGAGGT.1  CAGGTATGTGCTGA.1 \n##                NK       T activated             CD8 T                NK \n##  CAGGTTGAAGGTCT.1  CAGGTTGACGACAT.1  CAGGTTGAGGTCTA.1  CAGGTTGATCTTCA.1 \n##       CD4 Naive T         CD16 Mono                 B         CD14 Mono \n##  CAGTCAGAAAACAG.1  CAGTCAGAAACGGG.1  CAGTCAGAAAGAAC.1  CAGTCAGAACACTG.1 \n##         CD14 Mono                NK         CD14 Mono         CD14 Mono \n##  CAGTCAGAACTAGC.1  CAGTCAGACGACTA.1  CAGTCAGAGACACT.1  CAGTCAGATGACTG.1 \n##                 B         CD14 Mono         CD14 Mono                 B \n##  CAGTGATGACGCAT.1  CAGTGATGCGTTAG.1  CAGTGATGTGTCTT.1  CAGTGATGTGTGGT.1 \n##                NK                Mk         CD14 Mono       CD4 Naive T \n##  CAGTGATGTTAGGC.1  CAGTGTGAGTGAGG.1  CAGTGTGATGTCTT.1  CAGTTACTGAGACG.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono               pDC \n##  CAGTTGGAAAAACG.1  CAGTTGGAAGCAAA.1  CAGTTGGAGTGCTA.1  CAGTTGGATTCCGC.1 \n##             CD8 T      CD4 Memory T       B Activated         CD14 Mono \n##  CAGTTTACCGGTAT.1  CAGTTTACTGTCTT.1  CATAAAACACTGGT.1  CATAAAACCGTGAT.1 \n##      CD4 Memory T         CD16 Mono      CD4 Memory T         CD14 Mono \n##  CATAAAACGCCAAT.1  CATAAAACTCATTC.1  CATAAATGAATGCC.1  CATAAATGATGGTC.1 \n##                NK       CD4 Naive T         CD14 Mono                 B \n##  CATAAATGGAAGGC.1  CATAAATGGAGATA.1  CATAAATGTCTCTA.1  CATAACCTAAGGTA.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono       CD4 Naive T \n##  CATAACCTGAAGGC.1  CATAACCTGCTGTA.1  CATAACCTTGAGAA.1  CATACTACCTGAAC.1 \n##             Eryth                 B      CD4 Memory T         CD16 Mono \n##  CATACTACGCTGTA.1  CATACTTGAGAGAT.1  CATACTTGAGCATC.1  CATACTTGATTTCC.1 \n##             Eryth             CD8 T             CD8 T             CD8 T \n##  CATACTTGGCTCCT.1  CATACTTGGTCGTA.1  CATACTTGTATCGG.1  CATACTTGTCCTCG.1 \n##       CD4 Naive T      CD4 Memory T      CD4 Memory T       CD4 Naive T \n##  CATAGTCTCTTCTA.1  CATATAGACAGGAG.1  CATATAGAGGTTTG.1  CATCAACTCCGTAA.1 \n##       CD4 Naive T       CD4 Naive T       T activated       CD4 Naive T \n##  CATCAACTGCTTAG.1  CATCAACTGTCCTC.1  CATCAGGAAAGATG.1  CATCAGGACACCAA.1 \n##      CD4 Memory T         CD16 Mono       T activated       B Activated \n##  CATCAGGAGACAAA.1 CATCAGGAGTATCG.11  CATCAGGAGTTGTG.1  CATCAGGATGTGCA.1 \n##                 B                 B                Mk         CD14 Mono \n##  CATCATACACCTTT.1  CATCATACAGCGGA.1  CATCATACCTTCGC.1  CATCCCGACGTACA.1 \n##       CD4 Naive T         CD14 Mono                NK         CD14 Mono \n##  CATCCCGAGGTTCA.1  CATCCCGAGTGCTA.1  CATCCCGATTATCC.1  CATCGCTGAACAGA.1 \n##             CD8 T         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  CATCGCTGAAGTAG.1  CATCGCTGACGGGA.1 CATCGCTGCAGAAA.11  CATCGCTGCCTTTA.1 \n##                 B       CD4 Naive T         CD16 Mono                 B \n##  CATCGCTGTGGTCA.1  CATCGGCTAGGCGA.1  CATCGGCTCCTTAT.1  CATCGGCTCTCGCT.1 \n##         CD14 Mono             CD8 T                DC         CD14 Mono \n##  CATCGGCTGAAGGC.1  CATCTCCTAGGGTG.1  CATCTCCTCATTGG.1  CATCTCCTCTGCTC.1 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono         CD14 Mono \n##  CATCTCCTGTTCGA.1  CATCTCCTTCTATC.1  CATCTTGACTCCAC.1  CATGAGACACACGT.1 \n##                 B         CD14 Mono         CD14 Mono       B Activated \n##  CATGAGACCACTTT.1  CATGAGACTAGTCG.1  CATGCCACAGCTAC.1  CATGCCACCAGAAA.1 \n##                DC               pDC      CD4 Memory T                DC \n##  CATGCCACCATGGT.1  CATGCCACCGAACT.1  CATGCCACGAGGAC.1  CATGCCACGCCATA.1 \n##       CD4 Naive T         CD16 Mono      CD4 Memory T      CD4 Memory T \n##  CATGCCACGTTCAG.1  CATGCGCTAAAACG.1  CATGCGCTAAAGTG.1 CATGCGCTACCTCC.11 \n##         CD14 Mono                Mk                NK       T activated \n##  CATGCGCTCAGAGG.1  CATGCGCTCGTGAT.1  CATGCGCTCTTAGG.1  CATGCGCTGAGCTT.1 \n##         CD14 Mono                 B         CD14 Mono         CD14 Mono \n##  CATGCGCTTGGTGT.1  CATGGATGAGAGAT.1  CATGGATGTAAGCC.1  CATGGCCTAAGAGT.1 \n##      CD4 Memory T       T activated         CD14 Mono                NK \n##  CATGGCCTCAGTCA.1  CATGGCCTCTGTAG.1  CATGGCCTGTAGGG.1  CATGGCCTTTTCTG.1 \n##       CD4 Naive T      CD4 Memory T       B Activated         CD14 Mono \n##  CATGTACTACACAC.1  CATGTACTAGGTTC.1  CATGTACTCCTATT.1  CATGTACTGAGAGC.1 \n##         CD16 Mono       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  CATGTACTGTTACG.1  CATGTTACAATCGC.1  CATGTTACTAGCGT.1  CATGTTACTCCAAG.1 \n##       CD4 Naive T                 B         CD14 Mono         CD14 Mono \n##  CATGTTACTGACAC.1  CATGTTACTGATGC.1  CATGTTACTGCAGT.1  CATGTTTGACGCTA.1 \n##       T activated         CD14 Mono       CD4 Naive T         CD14 Mono \n##  CATGTTTGCACTCC.1  CATGTTTGCATGCA.1  CATGTTTGCTGTAG.1  CATGTTTGCTTGGA.1 \n##         CD14 Mono         CD14 Mono                NK                 B \n##  CATGTTTGGCGAGA.1  CATGTTTGGGTTCA.1  CATGTTTGTTCTGT.1  CATTACACCCTCGT.1 \n##         CD14 Mono         CD14 Mono                 B       CD4 Naive T \n##  CATTACACCGATAC.1  CATTACACTCGTTT.1  CATTAGCTCGACAT.1  CATTAGCTGTGTAC.1 \n##         CD14 Mono         CD16 Mono             CD8 T       CD4 Naive T \n##  CATTAGCTTGAGGG.1  CATTAGCTTGGTTG.1  CATTAGCTTTGACG.1  CATTCCCTACACAC.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T                Mk \n##  CATTCCCTACGGTT.1  CATTCCCTCTGCTC.1  CATTCCCTGCGAAG.1  CATTCCCTGTCACA.1 \n##       CD4 Naive T                NK       CD4 Naive T      CD4 Memory T \n##  CATTCCCTTCGTGA.1  CATTGACTCGAACT.1  CATTGACTGCAAGG.1  CATTGACTGCGAGA.1 \n##      CD4 Memory T       CD4 Naive T                NK         CD14 Mono \n##  CATTGACTGGTGAG.1  CATTGACTGTTTCT.1  CATTGACTTTCCAT.1  CATTGACTTTTGGG.1 \n##       CD4 Naive T       CD4 Naive T                 B      CD4 Memory T \n##  CATTGGGAAAAAGC.1  CATTGGGACAAAGA.1  CATTGGGACCCTAC.1  CATTGGGAGATGAA.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD16 Mono \n##  CATTGGGAGTTGAC.1  CATTGGGATACGAC.1  CATTGTACAGGAGC.1  CATTGTACGCAGAG.1 \n##       B Activated       CD4 Naive T                DC         CD14 Mono \n##  CATTGTACGGTTTG.1  CATTGTACTCTCTA.1  CATTGTACTGAAGA.1  CATTGTACTTGGCA.1 \n##         CD14 Mono         CD16 Mono       CD4 Naive T         CD16 Mono \n##  CATTGTACTTGGTG.1  CATTGTTGGGAGCA.1  CATTGTTGGGTCAT.1  CATTTCGATAACGC.1 \n##                 B         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  CATTTGACTGCCCT.1  CATTTGACTTTACC.1 CATTTGTGAACAGA.11  CATTTGTGATCACG.1 \n##         CD14 Mono             CD8 T         CD14 Mono         CD16 Mono \n##  CATTTGTGCATGGT.1  CATTTGTGCCAACA.1  CATTTGTGTTCGCC.1  CCAAAGTGACCGAT.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono         CD14 Mono \n##  CCAAAGTGATCTTC.1  CCAAAGTGCGCTAA.1  CCAAAGTGGCTTAG.1  CCAAAGTGGGACTT.1 \n##             CD8 T                 B         CD14 Mono         CD14 Mono \n##  CCAAAGTGTAGAGA.1  CCAAAGTGTCACCC.1  CCAAAGTGTGTCCC.1  CCAACCTGAGAAGT.1 \n##         CD14 Mono         CD16 Mono       CD4 Naive T      CD4 Memory T \n##  CCAACCTGTAACGC.1  CCAACCTGTGGGAG.1  CCAACCTGTTCTCA.1  CCAAGAACAACGAA.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono                Mk \n##  CCAAGAACACGGAG.1  CCAAGAACAGCAAA.1  CCAAGAACTCCTAT.1  CCAAGAACTCTAGG.1 \n##         CD14 Mono         CD16 Mono                 B      CD4 Memory T \n##  CCAAGAACTGCTCC.1  CCAAGATGACCAGT.1  CCAAGATGCCTTGC.1  CCAAGATGCGTAGT.1 \n##       T activated         CD16 Mono       T activated             CD8 T \n##  CCAAGATGGAGGAC.1  CCAAGATGTGAGGG.1  CCAAGTGACAGAGG.1  CCAAGTGACCCAAA.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono                 B \n##  CCAAGTGACTCTTA.1  CCAAGTGACTGTTT.1  CCAAGTGACTTATC.1  CCAATGGAAGTGTC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono      CD4 Memory T \n##  CCAATGGAATGGTC.1  CCAATGGACCGATA.1  CCAATGGACCTGTC.1  CCAATGGAGACTAC.1 \n##      CD4 Memory T      CD4 Memory T         CD14 Mono         CD14 Mono \n##  CCAATGGAGATAGA.1  CCAATGGAGTATCG.1  CCAATGGATAGACC.1  CCAATTTGAGGCGA.1 \n##      CD4 Memory T       T activated       CD4 Naive T         CD14 Mono \n##  CCAATTTGCACTTT.1  CCACCATGATTCGG.1 CCACCATGCAGTCA.11  CCACCATGCATTTC.1 \n##      CD4 Memory T         CD14 Mono      CD4 Memory T             CD8 T \n##  CCACCATGTGCTAG.1  CCACCTGAAAGAAC.1  CCACCTGAGCGAGA.1  CCACCTGAGCGGAA.1 \n##                NK         CD14 Mono      CD4 Memory T         CD14 Mono \n##  CCACCTGATGTTCT.1  CCACGGGAAACGAA.1  CCACGGGAAGGCGA.1  CCACGGGAATCTTC.1 \n##         CD14 Mono                DC         CD14 Mono       CD4 Naive T \n##  CCACGGGACCATAG.1  CCACGGGACTCGCT.1  CCACGGGAGCATCA.1  CCACGGGATAGTCG.1 \n##         CD14 Mono                NK                 B       B Activated \n##  CCACGGGATGCAAC.1  CCACTGACAGCCAT.1  CCACTGACCGCATA.1  CCACTGACCGTACA.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono                 B \n##  CCACTGTGAGTTCG.1  CCACTGTGGCGAAG.1  CCACTGTGGTCACA.1  CCACTGTGGTTGTG.1 \n##       CD4 Naive T         CD16 Mono         CD14 Mono         CD16 Mono \n##  CCACTTCTAGCTCA.1  CCACTTCTCCTATT.1  CCACTTCTCTTATC.1  CCACTTCTTACTCT.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono         CD14 Mono \n##  CCACTTCTTGCAAC.1  CCAGAAACACCTCC.1  CCAGAAACCTACCC.1  CCAGAAACCTCCCA.1 \n##       CD4 Naive T         CD14 Mono      CD4 Memory T         CD14 Mono \n##  CCAGAAACGTTGAC.1  CCAGAAACGTTGCA.1  CCAGAAACTGGAAA.1 CCAGACCTGAGACG.11 \n##                 B                DC               pDC      CD4 Memory T \n##  CCAGACCTGGGTGA.1  CCAGATGAACCAAC.1  CCAGATGACAATCG.1  CCAGATGACCTATT.1 \n##       CD4 Naive T         CD14 Mono                NK         CD14 Mono \n##  CCAGATGACTGTAG.1  CCAGATGAGAATGA.1  CCAGATGAGTAAAG.1  CCAGATGATCGTTT.1 \n##         CD14 Mono             CD8 T         CD14 Mono       CD4 Naive T \n##  CCAGATGATGAGAA.1  CCAGCACTACACGT.1  CCAGCACTCGTCTC.1  CCAGCACTCTTAGG.1 \n##         CD14 Mono      CD4 Memory T       CD4 Naive T         CD14 Mono \n##  CCAGCACTGTAGGG.1  CCAGCACTGTGAGG.1  CCAGCACTTAGACC.1  CCAGCACTTGTCTT.1 \n##       CD4 Naive T       CD4 Naive T             CD8 T       CD4 Naive T \n##  CCAGCACTTGTTCT.1  CCAGCACTTTGTGG.1  CCAGCGGAGCGGAA.1  CCAGCGGAGGACAG.1 \n##         CD14 Mono      CD4 Memory T         CD16 Mono         CD14 Mono \n##  CCAGCGGAGGTAAA.1  CCAGCGGAGTTAGC.1  CCAGCGGATGAGAA.1  CCAGCTACAAGTAG.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T      CD4 Memory T \n##  CCAGCTACACGGGA.1 CCAGCTACCAGTCA.11  CCAGCTACTCAGAC.1  CCAGGTCTCACAAC.1 \n##         CD14 Mono         CD16 Mono                 B         CD14 Mono \n##  CCAGGTCTCTGTCC.1  CCAGGTCTGCTGTA.1 CCAGGTCTGGAGGT.11  CCAGGTCTTACGCA.1 \n##         CD16 Mono       CD4 Naive T                Mk       T activated \n##  CCAGGTCTTGTGCA.1  CCAGTCACCGGAGA.1  CCAGTCTGCTCAGA.1  CCAGTCTGGAGACG.1 \n##       B Activated       B Activated         CD14 Mono         CD14 Mono \n##  CCAGTCTGGCGGAA.1  CCAGTCTGGTAGGG.1  CCAGTCTGTTACTC.1  CCAGTGCTAAGGGC.1 \n##      CD4 Memory T         CD14 Mono       CD4 Naive T       T activated \n##  CCAGTGCTAGAATG.1  CCAGTGCTAGATCC.1  CCAGTGCTATTCTC.1  CCAGTGCTCTTGGA.1 \n##                DC      CD4 Memory T         CD16 Mono               pDC \n##  CCAGTGCTTGTTCT.1  CCATAGGAACACGT.1  CCATAGGAATTTCC.1  CCATAGGACAGATC.1 \n##       CD4 Naive T      CD4 Memory T       CD4 Naive T         CD14 Mono \n##  CCATAGGACGTAAC.1  CCATAGGACTGAGT.1  CCATAGGATCATTC.1  CCATAGGATTTACC.1 \n##                 B         CD14 Mono                 B      CD4 Memory T \n##  CCATATACAAACGA.1  CCATATACCAACTG.1  CCATATACCAGTTG.1  CCATATACCGAGAG.1 \n##             CD8 T         CD16 Mono       CD4 Naive T       CD4 Naive T \n##  CCATATACGCCATA.1  CCATATACGCTGAT.1  CCATATACGGAACG.1  CCATCCGACACTAG.1 \n##         CD16 Mono             CD8 T      CD4 Memory T                DC \n##  CCATCCGACCACAA.1  CCATCCGACCGCTT.1  CCATCCGACTGTCC.1  CCATCCGATCAGGT.1 \n##       CD4 Naive T                 B       T activated       CD4 Naive T \n##  CCATCCGATGTTTC.1  CCATCGTGCGAACT.1  CCATCGTGTATGGC.1  CCATCGTGTCCCGT.1 \n##         CD14 Mono       B Activated         CD14 Mono         CD16 Mono \n##  CCATCGTGTCGACA.1  CCATGCTGACCCTC.1 CCATGCTGCTAAGC.11  CCATGCTGCTGTGA.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n## CCATGCTGGAGATA.11  CCATGCTGGATACC.1  CCATGCTGGCCAAT.1  CCATGCTGGCCTTC.1 \n##                NK                NK       CD4 Naive T         CD14 Mono \n##  CCATGCTGGGTGAG.1  CCATGCTGTCAGAC.1  CCATGCTGTCCCAC.1  CCATTAACAAAACG.1 \n##         CD14 Mono             CD8 T       CD4 Naive T         CD14 Mono \n##  CCATTAACAAGAGT.1  CCATTAACACGGTT.1  CCATTAACCGAGTT.1  CCATTAACGGACAG.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T         CD14 Mono \n##  CCATTAACGTACCA.1  CCATTAACTGAAGA.1  CCATTAACTGTTTC.1  CCATTAACTTACCT.1 \n##                 B       CD4 Naive T                 B                DC \n##  CCATTAACTTCGGA.1  CCCAAAGAATGCTG.1  CCCAAAGACCCGTT.1  CCCAAAGACGTAGT.1 \n##       CD4 Naive T         CD14 Mono                 B      CD4 Memory T \n## CCCAAAGAGCCCTT.11  CCCAAAGATCCTCG.1  CCCAACACTAAGCC.1  CCCAACTGAGCGTT.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono         CD14 Mono \n##  CCCAACTGGCCTTC.1  CCCACATGAACCGT.1  CCCACATGAGCAAA.1  CCCACATGCGCTAA.1 \n##      CD4 Memory T       CD4 Naive T             CD8 T             CD8 T \n##  CCCACATGCTTGAG.1  CCCACATGTCTTCA.1  CCCAGACTCCCACT.1  CCCAGACTCCTTTA.1 \n##       CD4 Naive T       CD4 Naive T                NK         CD14 Mono \n##  CCCAGACTGTTCGA.1  CCCAGTTGAGGTCT.1  CCCAGTTGCAGGAG.1  CCCAGTTGTTCTAC.1 \n##                 B             CD8 T       B Activated         CD14 Mono \n##  CCCATCGAAAGTAG.1  CCCATCGACCCTAC.1  CCCATCGACTGGAT.1  CCCATCGATAGTCG.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono       CD4 Naive T \n##  CCCATCGATCTAGG.1  CCCATGTGAGTTCG.1  CCCATGTGCTCTTA.1 CCCATGTGCTTGGA.11 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  CCCATGTGTGGGAG.1  CCCGAACTACCTGA.1  CCCGAACTGAGGAC.1  CCCGAACTGCTGTA.1 \n##         CD14 Mono         CD16 Mono         CD14 Mono                 B \n##  CCCGATTGAGATGA.1  CCCGATTGCGAGTT.1  CCCGATTGCTCGCT.1  CCCGATTGGACAGG.1 \n##       B Activated       CD4 Naive T      CD4 Memory T       CD4 Naive T \n##  CCCGATTGGGAAAT.1  CCCGATTGTATTCC.1  CCCGGAGAACTGTG.1  CCCGGAGATTACCT.1 \n##         CD14 Mono             CD8 T       CD4 Naive T         CD14 Mono \n##  CCCTACGAAAGAAC.1  CCCTACGACCCGTT.1  CCCTACGACTCTCG.1  CCCTACGAGTACCA.1 \n##       CD4 Naive T             Eryth         CD14 Mono       CD4 Naive T \n##  CCCTACGATATGCG.1  CCCTACGATGACCA.1  CCCTACGATTCTCA.1  CCCTAGTGCGCAAT.1 \n##         CD14 Mono                Mk         CD14 Mono             CD8 T \n##  CCCTAGTGCGTCTC.1  CCCTAGTGGTGTTG.1  CCCTAGTGTGCAAC.1  CCCTCAGAATCGGT.1 \n##       CD4 Naive T             CD8 T         CD14 Mono       T activated \n##  CCCTCAGATACTTC.1  CCCTCAGATTCTGT.1  CCCTGAACAACGGG.1  CCCTGAACTCTGGA.1 \n##       CD4 Naive T                 B         CD14 Mono       CD4 Naive T \n##  CCCTTACTAAGAAC.1  CCCTTACTACACGT.1  CCCTTACTCCAATG.1 CCCTTACTCTGGAT.11 \n##         CD16 Mono       B Activated       CD4 Naive T         CD16 Mono \n##  CCCTTACTGGTTCA.1  CCCTTACTTGAACC.1  CCGAAAACACTGTG.1  CCGAAAACCTGGAT.1 \n##                DC         CD14 Mono         CD16 Mono       CD4 Naive T \n##  CCGAAAACGAGCAG.1  CCGAAAACGAGGCA.1  CCGAAAACGGAACG.1  CCGAAAACTTCGTT.1 \n##                Mk       CD4 Naive T                 B               pDC \n##  CCGACACTAAGGCG.1  CCGACACTAGCGTT.1  CCGACACTCTACTT.1  CCGACACTGCCAAT.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono       CD4 Naive T \n##  CCGACACTTATCGG.1  CCGACTACCTTGGA.1  CCGACTACGTTGCA.1  CCGATAGACTGTCC.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  CCGATAGAGATAGA.1  CCGATAGAGATGAA.1  CCGATAGAGTATCG.1  CCGCGAGAACTGTG.1 \n##         CD14 Mono                 B                Mk      CD4 Memory T \n##  CCGCGAGACATTGG.1  CCGCGAGACTGCAA.1  CCGCGAGAGGTGTT.1  CCGCGAGAGTTCAG.1 \n##      CD4 Memory T       CD4 Naive T       CD4 Naive T      CD4 Memory T \n##  CCGCGAGATCGCTC.1  CCGCTATGATTCGG.1  CCGCTATGGGTGTT.1  CCGCTATGGTCCTC.1 \n##                NK         CD14 Mono         CD14 Mono                 B \n##  CCGCTATGTTACTC.1  CCGGAGACACCTAG.1  CCGGAGACAGAACA.1  CCGGAGACGAAAGT.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono       CD4 Naive T \n##  CCGGAGACTGGTAC.1  CCGGAGTGAGCCAT.1  CCGGAGTGAGGGTG.1  CCGGAGTGGGACGA.1 \n##         CD16 Mono                Mk                Mk       CD4 Naive T \n##  CCGGAGTGGTCGAT.1  CCGGAGTGGTTCTT.1 CCGGAGTGTATGGC.11  CCGGAGTGTCTGGA.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono         CD14 Mono \n##  CCGGTACTAAGAGT.1  CCGGTACTCCTTTA.1  CCGGTACTCGCATA.1  CCGGTACTGTCCTC.1 \n##             CD8 T               pDC       CD4 Naive T         CD16 Mono \n##  CCGGTACTTATCTC.1  CCGGTACTTTCTGT.1  CCGTAAGAACGTAC.1  CCGTAAGACCGCTT.1 \n##         CD14 Mono                 B       CD4 Naive T                 B \n##  CCGTAAGATTCAGG.1  CCGTACACAAAACG.1  CCGTACACAAGATG.1  CCGTACACCAGATC.1 \n##         CD14 Mono                 B         CD14 Mono      CD4 Memory T \n##  CCGTACACGAGGGT.1  CCGTACACGGAGGT.1  CCGTACACTACTGG.1  CCGTACACTGCCTC.1 \n##       B Activated         CD14 Mono         CD14 Mono             CD8 T \n##  CCTAAACTACTCAG.1  CCTAAACTAGCATC.1  CCTAAACTCAGCTA.1  CCTAAACTTCGTAG.1 \n##       CD4 Naive T         CD14 Mono                 B       CD4 Naive T \n##  CCTAAGGAAAAACG.1  CCTAAGGAACGTGT.1  CCTAAGGATCCTGC.1  CCTACCGACGCCTT.1 \n##       CD4 Naive T                NK       CD4 Naive T         CD16 Mono \n##  CCTAGAGAACCCTC.1  CCTAGAGACCTAAG.1  CCTAGAGACGGAGA.1  CCTAGAGAGGATTC.1 \n##         CD14 Mono                DC         CD14 Mono         CD14 Mono \n##  CCTAGAGATCAGGT.1  CCTATAACGCCATA.1  CCTATAACGTTCGA.1  CCTATAACTGGTGT.1 \n##       CD4 Naive T         CD16 Mono       CD4 Naive T       CD4 Naive T \n##  CCTATTGACATGAC.1  CCTATTGAGATACC.1  CCTATTGAGGTATC.1  CCTATTGATTTCAC.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T       CD4 Naive T \n##  CCTATTGATTTGCT.1  CCTCATCTAGTCAC.1  CCTCATCTATGCTG.1  CCTCATCTGTCTGA.1 \n##             CD8 T       CD4 Naive T      CD4 Memory T         CD14 Mono \n##  CCTCGAACACCTCC.1  CCTCGAACCATACG.1  CCTCTACTACGGGA.1  CCTCTACTGAGAGC.1 \n##         CD14 Mono         CD14 Mono             CD8 T      CD4 Memory T \n## CCTCTACTGCATAC.11  CCTCTACTGGGACA.1  CCTCTACTGGTTTG.1  CCTCTACTTGCTTT.1 \n##         CD14 Mono             CD8 T         CD14 Mono         CD16 Mono \n##  CCTGACTGCGCATA.1  CCTGACTGCGGTAT.1  CCTGACTGTGCAGT.1  CCTGAGCTCACACA.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  CCTGAGCTGGTGAG.1  CCTGAGCTGTTTCT.1  CCTGCAACAACCTG.1  CCTGCAACCAGGAG.1 \n##         CD14 Mono       CD4 Naive T             CD8 T         CD14 Mono \n##  CCTGCAACTGAGCT.1  CCTGGACTACCTCC.1  CCTGGACTAGTGCT.1  CCTGGACTGTATCG.1 \n##         CD16 Mono                DC       CD4 Naive T         CD14 Mono \n##  CCTTAATGCATGAC.1  CCTTAATGCGGAGA.1  CCTTAATGGAATAG.1  CCTTAATGGAATGA.1 \n##      CD4 Memory T      CD4 Memory T       T activated                 B \n##  CCTTAATGGAGATA.1  CCTTAATGGATAGA.1  CCTTAATGGTGAGG.1  CCTTAATGTCCTAT.1 \n##                 B         CD14 Mono             CD8 T         CD14 Mono \n##  CCTTAATGTTCATC.1  CCTTCACTGGACGA.1  CCTTCACTGGAGGT.1  CCTTCACTTCCAGA.1 \n##         CD16 Mono               pDC         CD16 Mono         CD14 Mono \n##  CCTTCACTTGCTAG.1  CCTTCACTTTCTTG.1  CCTTTAGAAGCGTT.1  CCTTTAGACAGTCA.1 \n##      CD4 Memory T         CD14 Mono       CD4 Naive T      CD4 Memory T \n##  CCTTTAGACTTGGA.1  CCTTTAGATCGTGA.1  CGAACATGAGCAAA.1  CGAACATGCTGGAT.1 \n##                NK       CD4 Naive T         CD16 Mono                 B \n##  CGAACATGGTCACA.1  CGAACATGTGACTG.1  CGAACATGTTGCGA.1  CGAACATGTTTCGT.1 \n##                 B      CD4 Memory T                Mk             CD8 T \n##  CGAAGACTAGTCAC.1  CGAAGACTCCCTTG.1  CGAAGACTCGTTAG.1  CGAAGACTCTGTGA.1 \n##                NK       CD4 Naive T       T activated                NK \n##  CGAAGACTGGATTC.1  CGAAGACTGTCAAC.1  CGAAGGGAAAGTAG.1  CGAAGGGACACCAA.1 \n##         CD16 Mono      CD4 Memory T      CD4 Memory T             CD8 T \n##  CGAAGGGAGACACT.1  CGAAGGGAGCTGTA.1  CGAAGGGATCAGGT.1  CGAAGGGATCGTTT.1 \n##       B Activated       CD4 Naive T      CD4 Memory T         CD14 Mono \n##  CGAAGGGATGCTAG.1  CGAAGGGATGGTGT.1  CGAAGTACCCACAA.1  CGAAGTACCCTTGC.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  CGAAGTACTCCTAT.1  CGAATCGACATACG.1  CGAATCGACTGATG.1  CGACAAACAGTAGA.1 \n##         CD16 Mono         CD16 Mono       CD4 Naive T      CD4 Memory T \n##  CGACAAACCCAAGT.1  CGACCACTCGAGTT.1  CGACCGGAGCGGAA.1  CGACCGGAGGTAAA.1 \n##         CD16 Mono       B Activated         CD14 Mono       CD4 Naive T \n##  CGACCGGAGTTCGA.1  CGACCTACCGGTAT.1 CGACCTACCTTCCG.11  CGACCTACTGCAGT.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T         CD14 Mono \n##  CGACCTACTGTAGC.1  CGACCTTGAACCGT.1  CGACCTTGCTAGAC.1  CGACCTTGGCTTCC.1 \n##       CD4 Naive T         CD14 Mono      CD4 Memory T         CD14 Mono \n##  CGACCTTGGGACTT.1  CGACCTTGGGAGCA.1  CGACCTTGTGCACA.1  CGACCTTGTGCTAG.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  CGACCTTGTTATCC.1  CGACGTCTACCGAT.1  CGACGTCTAGGAGC.1  CGACGTCTCGAATC.1 \n##       CD4 Naive T         CD16 Mono       CD4 Naive T                NK \n##  CGACGTCTGGAGCA.1  CGACTCACATTTCC.1  CGACTCACCACTTT.1  CGACTCTGATACCG.1 \n##       CD4 Naive T             CD8 T       T activated         CD14 Mono \n##  CGACTCTGCCTTAT.1  CGACTCTGGTATGC.1 CGACTCTGGTTTCT.11  CGACTCTGTCCGAA.1 \n##       CD4 Naive T       CD4 Naive T      CD4 Memory T         CD14 Mono \n##  CGACTCTGTGAGGG.1  CGACTGCTCGCCTT.1  CGACTGCTGGACGA.1  CGAGAACTATTCGG.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T       CD4 Naive T \n##  CGAGAACTCCCTTG.1  CGAGATTGACACGT.1  CGAGATTGACCCTC.1  CGAGATTGATAAGG.1 \n##         CD14 Mono                DC      CD4 Memory T                NK \n##  CGAGATTGATTTCC.1  CGAGATTGCAGATC.1  CGAGATTGCTCGAA.1  CGAGATTGTCTCCG.1 \n##       B Activated       T activated             CD8 T       CD4 Naive T \n##  CGAGCCGAAAGGGC.1  CGAGCCGAATTTCC.1  CGAGCCGACCTTCG.1  CGAGCCGAGGGAGT.1 \n##                 B         CD16 Mono       CD4 Naive T      CD4 Memory T \n##  CGAGCCGATGAAGA.1  CGAGCGTGATCGTG.1  CGAGGAGACCGTTC.1  CGAGGAGACTTTAC.1 \n##                NK             CD8 T             CD8 T         CD16 Mono \n##  CGAGGAGAGAGAGC.1  CGAGGAGAGCTCCT.1  CGAGGAGATTATCC.1  CGAGGAGATTCATC.1 \n##         CD14 Mono         CD16 Mono       CD4 Naive T      CD4 Memory T \n##  CGAGGCACATCGGT.1  CGAGGCACATTGGC.1  CGAGGCACCATGGT.1  CGAGGCACGCGTTA.1 \n##         CD14 Mono             CD8 T         CD16 Mono             CD8 T \n##  CGAGGCACGGGTGA.1  CGAGGCACTGTTCT.1  CGAGGCTGCAGCTA.1  CGAGGCTGCGCCTT.1 \n##         CD14 Mono         CD14 Mono       T activated       CD4 Naive T \n##  CGAGGGCTAGTACC.1  CGAGGGCTCTGACA.1  CGAGGGCTCTGATG.1  CGAGGGCTTAAAGG.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono             Eryth \n##  CGAGTATGTTCTGT.1  CGATACGAATTCGG.1  CGATACGAGAATCC.1  CGATAGACATGGTC.1 \n##         CD16 Mono       CD4 Naive T         CD14 Mono         CD14 Mono \n##  CGATAGACATTCTC.1  CGATAGACCCCAAA.1  CGATAGACGCCCTT.1  CGATAGACGTTGGT.1 \n##      CD4 Memory T                 B       B Activated         CD14 Mono \n##  CGATAGACTCATTC.1  CGATAGACTGCCTC.1  CGATCAGAGAACTC.1  CGATCAGAGTTAGC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  CGATCAGATCGTGA.1  CGATCCACAGAGGC.1  CGATCCACCCATAG.1  CGATCCACCCTCGT.1 \n##                NK                DC       B Activated         CD14 Mono \n##  CGATCCACCTTGGA.1  CGATCCACGGAGGT.1  CGATCCACTACTTC.1  CGATCCACTGGCAT.1 \n##                NK                 B       B Activated         CD14 Mono \n##  CGATCCACTGTCGA.1  CGCAAATGACTCTT.1  CGCAAATGAGTCTG.1  CGCAAATGATAAGG.1 \n##         CD14 Mono                NK         CD14 Mono                Mk \n##  CGCAAATGCACTGA.1  CGCAAATGGTTCTT.1  CGCAAATGTTGTGG.1  CGCAACCTAGTTCG.1 \n##       CD4 Naive T      CD4 Memory T       T activated       T activated \n##  CGCAACCTATCAGC.1  CGCAACCTCACCAA.1  CGCAACCTCTTTAC.1  CGCAACCTGCTTCC.1 \n##               pDC         CD14 Mono       CD4 Naive T         CD16 Mono \n##  CGCAACCTGGAGTG.1  CGCAACCTTCCGTC.1  CGCACGGAAATCGC.1  CGCACGGAAGCGGA.1 \n##         CD14 Mono                 B      CD4 Memory T         CD16 Mono \n##  CGCACGGACAACCA.1 CGCACGGACGAATC.11  CGCACGGACGTAAC.1  CGCACGGACTTATC.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono       CD4 Naive T \n##  CGCACGGATCGTTT.1  CGCACTACCAGCTA.1  CGCACTACTTCTTG.1  CGCACTTGAAAGCA.1 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono             CD8 T \n##  CGCACTTGACGACT.1  CGCACTTGACTAGC.1  CGCACTTGCAGTTG.1  CGCACTTGCCTGTC.1 \n##       T activated                NK       T activated       CD4 Naive T \n##  CGCACTTGGCGAAG.1  CGCACTTGTCAGTG.1  CGCACTTGTGGTAC.1  CGCAGGACCTTGGA.1 \n##      CD4 Memory T                DC         CD16 Mono                NK \n##  CGCAGGACGAAAGT.1  CGCAGGACTCTCCG.1 CGCAGGTGACGCTA.11  CGCAGGTGAGAAGT.1 \n##             CD8 T       CD4 Naive T         CD14 Mono         CD14 Mono \n##  CGCAGGTGCATGGT.1  CGCAGGTGCCTCAC.1  CGCAGGTGTGTGCA.1  CGCAGGTGTTTCAC.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono      CD4 Memory T \n##  CGCATAGACTCCAC.1  CGCATAGACTGAAC.1  CGCATAGACTGTTT.1  CGCATAGATCCCAC.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono         CD14 Mono \n##  CGCATAGATGCAAC.1  CGCATAGATTTGTC.1  CGCCATACAATGCC.1  CGCCATACTGACCA.1 \n##       CD4 Naive T         CD14 Mono                DC         CD14 Mono \n##  CGCCATTGTGTCAG.1  CGCCGAGAACTACG.1  CGCCGAGACCTCGT.1  CGCCGAGACGATAC.1 \n##         CD14 Mono       CD4 Naive T         CD16 Mono      CD4 Memory T \n##  CGCCGAGAGAATCC.1  CGCCGAGAGAGATA.1  CGCCGAGATCTAGG.1  CGCCGAGATGGCAT.1 \n##                NK                NK             CD8 T       CD4 Naive T \n##  CGCCTAACAAGCCT.1  CGCCTAACCAGATC.1  CGCCTAACCAGCTA.1  CGCCTAACCCTACC.1 \n##       CD4 Naive T      CD4 Memory T       CD4 Naive T       B Activated \n##  CGCCTAACCGGTAT.1  CGCGAGACTAAGGA.1  CGCGATCTACGACT.1  CGCGATCTCTGCTC.1 \n##      CD4 Memory T       CD4 Naive T         CD16 Mono         CD14 Mono \n##  CGCGATCTGTGTCA.1  CGCGATCTTCCAAG.1  CGCGGATGCCACAA.1  CGCGGATGGCATCA.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono       CD4 Naive T \n##  CGCGGATGGGACTT.1  CGCTAAGAAAGGCG.1 CGCTAAGAATTCCT.11  CGCTAAGAGGTATC.1 \n##         CD16 Mono         CD16 Mono       T activated                 B \n##  CGCTAAGAGTCATG.1  CGCTAAGAGTTGAC.1  CGCTAAGATGGTAC.1  CGCTACACACTACG.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono             CD8 T \n##  CGCTACACAGTACC.1  CGCTACACCCACCT.1  CGCTACACCTCAAG.1  CGCTACACGCGATT.1 \n##         CD16 Mono       B Activated       B Activated       CD4 Naive T \n##  CGCTACACTTCTTG.1  CGCTACACTTTGCT.1  CGCTACTGACTGTG.1  CGCTACTGAGAGAT.1 \n##       T activated         CD14 Mono         CD14 Mono         CD14 Mono \n##  CGCTACTGCCATGA.1  CGCTACTGCGCAAT.1  CGCTACTGCGTTGA.1  CGCTACTGCTAGAC.1 \n##                 B         CD16 Mono       CD4 Naive T               pDC \n##  CGCTACTGCTATGG.1  CGCTACTGGAACTC.1  CGCTACTGGCAAGG.1  CGCTCATGCTTCCG.1 \n##                DC             CD8 T         CD14 Mono                Mk \n##  CGCTCATGTATCGG.1  CGCTCATGTGACTG.1  CGCTCATGTTCGGA.1  CGGAATTGAGTGCT.1 \n##      CD4 Memory T      CD4 Memory T       CD4 Naive T       T activated \n##  CGGAATTGCTGTCC.1  CGGAATTGCTGTTT.1  CGGAATTGTTATCC.1  CGGACCGAAGCAAA.1 \n##       CD4 Naive T       CD4 Naive T                NK       CD4 Naive T \n##  CGGACCGAAGGTCT.1  CGGACCGAATGGTC.1  CGGACCGACCTCAC.1  CGGACCGACGAGTT.1 \n##       CD4 Naive T                NK         CD14 Mono       B Activated \n##  CGGACTCTACCTTT.1  CGGACTCTCCAAGT.1  CGGAGGCTACCCAA.1  CGGAGGCTAGCGTT.1 \n##      CD4 Memory T                 B       T activated             CD8 T \n##  CGGAGGCTAGGGTG.1  CGGAGGCTCGCATA.1  CGGAGGCTGGCAAG.1  CGGAGGCTGGGCAA.1 \n##         CD16 Mono         CD16 Mono                DC             CD8 T \n##  CGGATAACACACCA.1  CGGATAACCGTTAG.1 CGGATAACCTTCCG.11  CGGATAACCTTGTT.1 \n##       B Activated         CD14 Mono      CD4 Memory T             CD8 T \n##  CGGATAACGACAGG.1  CGGATAACGACGGA.1  CGGATAACTTTACC.1  CGGATATGAAGCCT.1 \n##         CD14 Mono       CD4 Naive T      CD4 Memory T                 B \n##  CGGATATGACTACG.1  CGGATATGAGTCAC.1  CGGATATGCGAACT.1  CGGATATGCTGGAT.1 \n##                 B         CD14 Mono         CD14 Mono                 B \n##  CGGATATGGGCAAG.1  CGGCACGAAGGAGC.1  CGGCACGACTACCC.1  CGGCACGAGGACAG.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono             CD8 T \n##  CGGCACGATTCGCC.1  CGGCACGATTTGCT.1  CGGCATCTAAAACG.1  CGGCATCTAAGTGA.1 \n##                 B                 B       CD4 Naive T                 B \n##  CGGCATCTCCTCGT.1  CGGCATCTCTATTC.1  CGGCATCTGCATAC.1  CGGCATCTTAACCG.1 \n##                 B       CD4 Naive T      CD4 Memory T         CD14 Mono \n##  CGGCCAGAAACCTG.1  CGGCCAGACCTAAG.1  CGGCCAGATATGGC.1  CGGCCAGATCTTAC.1 \n##         CD16 Mono                NK       CD4 Naive T       CD4 Naive T \n##  CGGCGAACATCTCT.1  CGGCGAACGAATAG.1  CGGCGAACTCTCTA.1  CGGCGATGAAACGA.1 \n##         CD16 Mono       CD4 Naive T       B Activated      CD4 Memory T \n##  CGGCGATGCATGGT.1  CGGCGATGCTACCC.1  CGGCGATGTCCAGA.1  CGGCGATGTTCTCA.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono             CD8 T \n##  CGGGACTGAGTCAC.1  CGGGCATGACACGT.1  CGGGCATGAGACTC.1  CGGGCATGCATACG.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T         CD16 Mono \n##  CGGGCATGCGTACA.1  CGGGCATGCGTAGT.1  CGGGCATGCTACTT.1  CGGGCATGCTCAGA.1 \n##                 B       T activated                NK                 B \n##  CGGGCATGGGAGTG.1  CGGGCATGTGCCCT.1  CGGGCATGTGTTCT.1  CGGTAAACACGTTG.1 \n##       CD4 Naive T                 B             CD8 T             CD8 T \n##  CGGTAAACAGTACC.1  CGGTAAACCCACCT.1  CGGTAAACGAAAGT.1  CGGTAAACGACGGA.1 \n##      CD4 Memory T       CD4 Naive T       CD4 Naive T      CD4 Memory T \n##  CGGTAAACGTTAGC.1  CGGTACCTAATGCC.1  CGGTACCTCAGATC.1  CGGTACCTTGGAAA.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T      CD4 Memory T \n##  CGGTACCTTTACTC.1  CGGTACCTTTGAGC.1  CGGTCACTAGCACT.1  CGGTCACTATCGAC.1 \n##                DC         CD14 Mono         CD14 Mono                Mk \n##  CGGTCACTGGGATG.1  CGGTCACTTCGCAA.1  CGTAACGACCCTCA.1  CGTAACGAGCATCA.1 \n##                DC      CD4 Memory T             CD8 T                Mk \n##  CGTAACGAGGACTT.1  CGTAACGAGGCATT.1  CGTAACGATACAGC.1  CGTAACGATCGCAA.1 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono         CD14 Mono \n##  CGTACAGAACGCTA.1  CGTACAGAATGGTC.1  CGTACAGATACGCA.1  CGTACCACAGATGA.1 \n##             CD8 T       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  CGTACCACATAAGG.1  CGTACCACCCATAG.1  CGTACCACCGGTAT.1  CGTACCACTAAAGG.1 \n##         CD14 Mono             CD8 T       CD4 Naive T         CD14 Mono \n##  CGTACCACTCCGTC.1  CGTACCACTTGCTT.1  CGTACCACTTTCGT.1  CGTACCTGACAGTC.1 \n##       CD4 Naive T         CD14 Mono             CD8 T      CD4 Memory T \n##  CGTACCTGCGTGTA.1  CGTACCTGCTGGTA.1  CGTACCTGCTTGGA.1  CGTACCTGGAAACA.1 \n##                 B         CD14 Mono         CD16 Mono         CD14 Mono \n##  CGTACCTGGTGCAT.1  CGTACCTGTCCTTA.1  CGTACCTGTGGAAA.1  CGTAGCCTAAACGA.1 \n##      CD4 Memory T                 B         CD16 Mono                NK \n##  CGTAGCCTCCGTTC.1 CGTAGCCTCGTTGA.11  CGTAGCCTCTGAAC.1  CGTAGCCTGGGTGA.1 \n##       CD4 Naive T                 B       T activated         CD14 Mono \n##  CGTAGCCTGTAGCT.1  CGTAGCCTTCAGAC.1  CGTAGCCTTCTTCA.1  CGTAGCCTTTGGTG.1 \n##         CD14 Mono                 B      CD4 Memory T       CD4 Naive T \n##  CGTCAAGAAGCCAT.1  CGTCAAGACCCTCA.1  CGTCAAGATGGGAG.1  CGTCAAGATGGTCA.1 \n##         CD14 Mono         CD16 Mono       T activated             CD8 T \n##  CGTCCAACATCGAC.1  CGTCCAACCTTCCG.1  CGTCCATGACTCAG.1  CGTCCATGCAGATC.1 \n##       CD4 Naive T       CD4 Naive T       T activated       T activated \n##  CGTCCATGCCGTAA.1  CGTCCATGCCTCCA.1  CGTCCATGCTGTGA.1 CGTCCATGGCGATT.11 \n##      CD4 Memory T         CD14 Mono         CD14 Mono                 B \n##  CGTCCATGGGTAAA.1  CGTCCATGTGCCCT.1  CGTCGACTAGCGTT.1  CGTCGACTCTACCC.1 \n##                NK         CD16 Mono         CD14 Mono         CD14 Mono \n##  CGTCGACTCTCAGA.1  CGTCGACTTAAAGG.1  CGTCGACTTTCTTG.1  CGTGAAACAGTTCG.1 \n##         CD14 Mono                 B         CD16 Mono       CD4 Naive T \n##  CGTGAAACCGTTAG.1  CGTGAAACGAGACG.1  CGTGAAACTGAGCT.1  CGTGAATGAAGGGC.1 \n##         CD16 Mono       CD4 Naive T                 B         CD14 Mono \n##  CGTGAATGACCTGA.1  CGTGAATGAGCCTA.1  CGTGAATGAGTCGT.1  CGTGAATGCATGCA.1 \n##                 B         CD14 Mono         CD14 Mono                NK \n##  CGTGAATGGGTATC.1  CGTGAATGGTATCG.1  CGTGAATGTCTTTG.1  CGTGATGAAGTCTG.1 \n##                 B         CD14 Mono         CD16 Mono      CD4 Memory T \n##  CGTGATGACGTCTC.1  CGTGATGACTTCTA.1  CGTGATGATGGTGT.1  CGTGCACTCTATGG.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T                 B \n##  CGTGCACTGCTAAC.1  CGTGCACTTTCGCC.1  CGTGTAGACCAACA.1  CGTGTAGACGTGAT.1 \n##         CD14 Mono       CD4 Naive T                NK       B Activated \n##  CGTTAACTTAGCGT.1  CGTTAGGAAACCTG.1  CGTTAGGAGCCAAT.1  CGTTAGGAGTATCG.1 \n##      CD4 Memory T      CD4 Memory T         CD14 Mono       T activated \n##  CGTTATACACAGTC.1  CGTTATACGAGCAG.1  CGTTATACGCGATT.1  CGTTATACGTCTAG.1 \n##         CD14 Mono      CD4 Memory T                 B       CD4 Naive T \n##  CGTTATACTGAAGA.1  CGTTATACTTCTCA.1  CGTTTAACAGCGTT.1  CGTTTAACCTCATT.1 \n##      CD4 Memory T                 B             CD8 T         CD16 Mono \n##  CGTTTAACGTGAGG.1  CTAAACCTAAGAAC.1  CTAAACCTCAGTCA.1  CTAAACCTCGCATA.1 \n##       T activated         CD16 Mono       B Activated                NK \n##  CTAAACCTCTGAAC.1  CTAAACCTGTACGT.1  CTAACACTACACCA.1  CTAACACTACCACA.1 \n##                NK         CD14 Mono         CD14 Mono       CD4 Naive T \n##  CTAACACTAGATGA.1  CTAACACTGCTAAC.1  CTAACACTGGAGGT.1  CTAACACTTACAGC.1 \n##             CD8 T       CD4 Naive T                Mk         CD16 Mono \n## CTAACACTTGTGAC.11  CTAACGGACAACCA.1  CTAACGGACCGCTT.1  CTAACGGAGAAAGT.1 \n##      CD4 Memory T                 B                DC                 B \n##  CTAACGGATTTGTC.1  CTAACTACAACCAC.1  CTAACTACCCTGTC.1  CTAACTACTCACGA.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T       T activated \n##  CTAAGGACACCTGA.1  CTAAGGACAGTCGT.1  CTAAGGACCACCAA.1  CTAAGGACCCATAG.1 \n##       CD4 Naive T             CD8 T                Mk       CD4 Naive T \n##  CTAAGGACTCATTC.1  CTAAGGACTCGTGA.1  CTAAGGACTGGTGT.1  CTAAGGTGGAAAGT.1 \n##                NK       T activated                 B         CD14 Mono \n##  CTAAGGTGGTGTAC.1  CTAAGGTGGTTGTG.1  CTAATAGAAGGTTC.1  CTAATAGACGAATC.1 \n##       T activated       CD4 Naive T                Mk                 B \n##  CTAATAGACTCCCA.1  CTAATAGAGGGACA.1  CTAATAGAGTACCA.1  CTAATAGATGGTTG.1 \n##       CD4 Naive T       CD4 Naive T         CD16 Mono         CD16 Mono \n##  CTAATGCTAAGGGC.1 CTAATGCTAGCGGA.11  CTAATGCTCAGAAA.1  CTAATGCTCCTAAG.1 \n##         CD16 Mono         CD14 Mono         CD14 Mono      CD4 Memory T \n##  CTAATGCTGAACTC.1  CTAATGCTGGATTC.1  CTAATGCTTCCGAA.1  CTAATGCTTCTCTA.1 \n##                DC         CD14 Mono      CD4 Memory T      CD4 Memory T \n##  CTAATGCTTGTCCC.1  CTACAACTACACTG.1  CTACAACTGAGACG.1  CTACAACTGGCAAG.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T             CD8 T \n##  CTACAACTGTATCG.1  CTACAACTTCCCGT.1  CTACCTCTATCACG.1  CTACCTCTCCTTGC.1 \n##         CD14 Mono         CD16 Mono             CD8 T       CD4 Naive T \n##  CTACCTCTCTTTAC.1  CTACCTCTGTTGTG.1  CTACCTCTTATCGG.1  CTACGCACCGTAGT.1 \n##                NK         CD14 Mono         CD14 Mono                NK \n##  CTACGCACGAGGCA.1  CTACGCACGTCATG.1  CTACGCACGTGTAC.1  CTACGGCTTATGCG.1 \n##         CD14 Mono                NK         CD14 Mono      CD4 Memory T \n##  CTACGGCTTCCCAC.1  CTACGGCTTTTCGT.1  CTACTATGCCCACT.1  CTACTATGCGACAT.1 \n##         CD14 Mono         CD14 Mono                 B         CD14 Mono \n##  CTACTATGCTTGGA.1  CTACTATGTGCTCC.1  CTACTATGTGTCCC.1  CTACTCCTACTCAG.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T       CD4 Naive T \n##  CTACTCCTATCGGT.1  CTACTCCTGCTTCC.1  CTACTCCTGGTAGG.1  CTACTCCTGGTGGA.1 \n##             CD8 T       CD4 Naive T       CD4 Naive T       CD4 Naive T \n##  CTAGAGACGCTAAC.1  CTAGAGACGTCTGA.1  CTAGAGACGTTCGA.1  CTAGAGACTCCTAT.1 \n##       B Activated                DC         CD14 Mono                 B \n##  CTAGGATGACGGTT.1  CTAGGATGAGTAGA.1  CTAGGATGATGCTG.1  CTAGGATGCCCTAC.1 \n##       T activated                DC         CD16 Mono             CD8 T \n##  CTAGGATGCTAGCA.1  CTAGGATGGAGATA.1  CTAGGATGGCCATA.1  CTAGGATGTGCCCT.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono       CD4 Naive T \n##  CTAGGATGTGCGTA.1  CTAGGCCTAAACAG.1  CTAGGCCTCACTCC.1  CTAGGCCTCCGAAT.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono       CD4 Naive T \n##  CTAGGCCTCCTATT.1  CTAGGCCTGGTATC.1  CTAGGTGATAAGCC.1  CTAGGTGATGGAAA.1 \n##         CD14 Mono       CD4 Naive T             CD8 T         CD14 Mono \n##  CTAGTTACACCCAA.1  CTAGTTACAGAGAT.1  CTAGTTACCAGAAA.1  CTAGTTACCTATTC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono       CD4 Naive T \n##  CTAGTTACGGGACA.1  CTAGTTACGTCTGA.1 CTAGTTACTGGTAC.11  CTAGTTTGAATGCC.1 \n##         CD14 Mono       CD4 Naive T             CD8 T         CD14 Mono \n##  CTAGTTTGCTAGAC.1  CTAGTTTGGAGATA.1  CTAGTTTGGCCAAT.1  CTAGTTTGGGTGTT.1 \n##             CD8 T      CD4 Memory T      CD4 Memory T      CD4 Memory T \n##  CTAGTTTGTACTGG.1  CTAGTTTGTAGCGT.1  CTATAAGATAAAGG.1  CTATACTGCCCGTT.1 \n##      CD4 Memory T       CD4 Naive T                NK         CD14 Mono \n##  CTATACTGCTACCC.1  CTATACTGGAGAGC.1  CTATACTGTATCTC.1  CTATAGCTACACGT.1 \n##                 B         CD14 Mono         CD14 Mono       CD4 Naive T \n##  CTATAGCTAGAAGT.1  CTATAGCTCATGGT.1  CTATAGCTGGCATT.1  CTATCAACCAACTG.1 \n##       CD4 Naive T       CD4 Naive T      CD4 Memory T                Mk \n##  CTATCAACCTACGA.1  CTATCAACCTGTTT.1  CTATCAACCTTAGG.1  CTATCAACGAATCC.1 \n##                 B         CD16 Mono                Mk       CD4 Naive T \n##  CTATCATGGAATAG.1  CTATCATGGGACAG.1  CTATCATGTCCGAA.1  CTATCATGTCTAGG.1 \n##         CD14 Mono      CD4 Memory T                NK       CD4 Naive T \n## CTATCATGTTGGTG.11  CTATCATGTTTCTG.1  CTATCCCTAAGTGA.1  CTATCCCTAGATCC.1 \n##                 B       T activated         CD14 Mono                 B \n##  CTATCCCTATGACC.1  CTATCCCTATGCCA.1  CTATCCCTATTCTC.1  CTATCCCTCATTTC.1 \n##       CD4 Naive T       CD4 Naive T         CD16 Mono         CD14 Mono \n##  CTATGACTCGTAAC.1  CTATGACTCTAGAC.1  CTATGACTGAGCTT.1 CTATGACTGCTACA.11 \n##             CD8 T       T activated       CD4 Naive T         CD14 Mono \n##  CTATGACTGGCGAA.1  CTATGACTGTACAC.1  CTATGACTTTCTCA.1  CTATGTACAAAGCA.1 \n##      CD4 Memory T                 B         CD14 Mono         CD14 Mono \n##  CTATGTACCGTGTA.1  CTATGTACTACTTC.1  CTATGTACTGTGAC.1  CTATGTACTTTCGT.1 \n##         CD16 Mono       CD4 Naive T         CD14 Mono                NK \n## CTATGTTGGGAGCA.11  CTATGTTGTGCCCT.1  CTATGTTGTGGTTG.1  CTATTGACCTAGCA.1 \n##             CD8 T       CD4 Naive T             CD8 T       CD4 Naive T \n##  CTATTGACCTGATG.1  CTATTGTGAAAGCA.1  CTATTGTGATCACG.1  CTATTGTGATCGTG.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono             CD8 T \n##  CTATTGTGCGTTGA.1  CTCAATTGCCTGTC.1  CTCAATTGGACTAC.1  CTCAATTGGTAGCT.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono      CD4 Memory T \n##  CTCAATTGTTGCGA.1  CTCAGAGAAGAAGT.1  CTCAGAGACTGAAC.1  CTCAGAGACTTATC.1 \n##                NK       CD4 Naive T                 B                NK \n##  CTCAGAGAGGATTC.1  CTCAGAGATCGACA.1  CTCAGCACCAGCTA.1  CTCAGCACCCAACA.1 \n##         CD16 Mono         CD14 Mono       T activated         CD14 Mono \n##  CTCAGCACCCTATT.1  CTCAGCACCTGTTT.1  CTCAGCACGCGGAA.1  CTCAGCACTCCGAA.1 \n##       CD4 Naive T         CD14 Mono             CD8 T         CD14 Mono \n##  CTCAGCACTCGCCT.1  CTCAGCTGACAGCT.1  CTCAGCTGCGTCTC.1  CTCAGCTGTTTCTG.1 \n##                 B       CD4 Naive T      CD4 Memory T       CD4 Naive T \n##  CTCAGGCTACGACT.1  CTCAGGCTAGCCTA.1  CTCAGGCTCTGAAC.1  CTCAGGCTTAACGC.1 \n##       CD4 Naive T       CD4 Naive T                 B         CD14 Mono \n##  CTCAGGCTTTCGGA.1  CTCAGGCTTTGACG.1  CTCATTGAGCTATG.1  CTCATTGAGGGATG.1 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono       T activated \n##  CTCATTGATCGACA.1  CTCATTGATGGGAG.1 CTCCACGAACGGGA.11  CTCCACGATTGACG.1 \n##                Mk         CD14 Mono      CD4 Memory T      CD4 Memory T \n##  CTCCATCTGATACC.1  CTCCATCTTAGAGA.1  CTCCATCTTTCTGT.1  CTCCGAACAGCAAA.1 \n##       CD4 Naive T       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  CTCCGAACTAAAGG.1  CTCCGAACTAGAAG.1  CTCCGAACTCCCGT.1  CTCCTACTGTCTAG.1 \n##       CD4 Naive T                NK         CD16 Mono       CD4 Naive T \n##  CTCCTACTTCCGTC.1  CTCGAAGAACACAC.1  CTCGAAGAAGGCGA.1  CTCGAAGACTAAGC.1 \n##       CD4 Naive T       CD4 Naive T       T activated       CD4 Naive T \n##  CTCGAAGAGAGATA.1  CTCGACACCGCAAT.1  CTCGACACGTGTAC.1  CTCGACACTACGCA.1 \n##      CD4 Memory T         CD14 Mono       T activated      CD4 Memory T \n##  CTCGACACTCCAAG.1  CTCGACTGTCGATG.1 CTCGACTGTTCACT.11  CTCGAGCTCAGGAG.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono                 B \n##  CTCGAGCTCCTGAA.1  CTCGAGCTCTCTTA.1  CTCGAGCTGATGAA.1  CTCGAGCTGGAGGT.1 \n##                 B       CD4 Naive T                NK         CD14 Mono \n##  CTCGAGCTGGTAGG.1  CTCGAGCTTCCGAA.1  CTCGAGCTTTGTCT.1  CTCGCATGTCGACA.1 \n##       CD4 Naive T                Mk                DC         CD16 Mono \n##  CTCGCATGTTCGTT.1  CTCGCATGTTGACG.1  CTCTAAACACTGTG.1  CTCTAAACATCTCT.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono       CD4 Naive T \n##  CTCTAAACGAGCAG.1  CTCTAAACGTGCAT.1  CTCTAATGCCTCGT.1  CTCTAATGGAATCC.1 \n##         CD14 Mono             CD8 T         CD16 Mono         CD14 Mono \n##  CTCTAATGGACAGG.1  CTCTAATGGCCCTT.1  CTGAACGACCAAGT.1  CTGAACGACGCCTT.1 \n##             CD8 T       CD4 Naive T         CD14 Mono         CD14 Mono \n##  CTGAACGACTGGAT.1  CTGAACGATTCATC.1  CTGAACGATTCCCG.1  CTGAAGACCACACA.1 \n##       B Activated         CD14 Mono       B Activated       CD4 Naive T \n##  CTGAAGACCATGGT.1  CTGAAGACCCTCAC.1  CTGAAGACGAGCTT.1  CTGAAGTGACGTGT.1 \n##             CD8 T       CD4 Naive T       B Activated         CD14 Mono \n##  CTGAAGTGGCTTCC.1  CTGAAGTGTGCACA.1  CTGAAGTGTTTCAC.1  CTGAATCTAAACAG.1 \n##         CD14 Mono       B Activated       CD4 Naive T       CD4 Naive T \n##  CTGAATCTAGAGAT.1  CTGAATCTAGATGA.1  CTGAATCTGGAACG.1  CTGAATCTTAAGCC.1 \n##       CD4 Naive T         CD14 Mono                NK      CD4 Memory T \n##  CTGAATCTTCGCAA.1  CTGAATCTTGGCAT.1  CTGACAGACAACCA.1  CTGACAGACAACTG.1 \n##         CD14 Mono         CD14 Mono             CD8 T             CD8 T \n##  CTGACAGACCAGTA.1  CTGACCACACAGCT.1  CTGACCACGGTATC.1  CTGACCACGTAGGG.1 \n##         CD16 Mono             CD8 T                DC       B Activated \n## CTGACCACTGAGCT.11  CTGACCACTGGCAT.1  CTGACCACTGGTGT.1  CTGAGAACCATCAG.1 \n##       CD4 Naive T      CD4 Memory T       T activated                 B \n##  CTGAGAACCCTGTC.1  CTGAGAACCTTGTT.1  CTGAGCCTCTGTTT.1  CTGAGCCTGAGGTG.1 \n##         CD16 Mono       CD4 Naive T             Eryth      CD4 Memory T \n##  CTGAGCCTTACGCA.1  CTGAGCCTTCTCAT.1  CTGAGCCTTGACAC.1  CTGATACTCACTTT.1 \n##      CD4 Memory T       CD4 Naive T             CD8 T       CD4 Naive T \n##  CTGATACTCCTTGC.1  CTGATACTCTGTTT.1  CTGATACTTAGAGA.1  CTGATACTTGCAAC.1 \n##      CD4 Memory T         CD14 Mono                 B         CD14 Mono \n##  CTGATACTTTCATC.1  CTGATACTTTGACG.1  CTGATGGAAATGCC.1  CTGATGGACTATGG.1 \n##             CD8 T       CD4 Naive T       CD4 Naive T             CD8 T \n##  CTGATTTGAACGGG.1  CTGATTTGCAGGAG.1  CTGATTTGCTTATC.1  CTGATTTGGACAGG.1 \n##       B Activated                 B         CD16 Mono       T activated \n##  CTGATTTGGTGAGG.1  CTGATTTGTCACCC.1  CTGATTTGTCTCCG.1  CTGCAGCTTAGACC.1 \n##         CD14 Mono                 B      CD4 Memory T             CD8 T \n##  CTGCAGCTTGAAGA.1  CTGCAGCTTTGGCA.1  CTGCCAACCCATAG.1  CTGCCAACCCATGA.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono       T activated \n##  CTGCCAACCCCTAC.1  CTGCCAACCTAAGC.1  CTGCCAACTTGTCT.1  CTGCGACTTGAAGA.1 \n##                 B         CD16 Mono      CD4 Memory T       CD4 Naive T \n##  CTGGAAACACACGT.1  CTGGAAACACCACA.1  CTGGAAACATGTCG.1  CTGGAAACCACTTT.1 \n##         CD16 Mono       B Activated       CD4 Naive T       CD4 Naive T \n##  CTGGAAACGGAGGT.1  CTGGATGAAGTAGA.1  CTGGATGAGACAAA.1  CTGGATGAGAGGTG.1 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono       T activated \n##  CTGGATGAGCTACA.1  CTGGATGATAAGGA.1  CTGGATGATACTCT.1  CTGGATGATGACCA.1 \n##       T activated         CD14 Mono       CD4 Naive T      CD4 Memory T \n##  CTGGATGATGTTCT.1  CTGGATGATTATCC.1  CTGGCACTCCGTAA.1  CTGGCACTCCTCCA.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono         CD14 Mono \n##  CTGGCACTCTTGCC.1  CTGGCACTGAGAGC.1  CTGGCACTGTCGTA.1  CTGTAACTATGTGC.1 \n##      CD4 Memory T       T activated             CD8 T         CD16 Mono \n##  CTGTAACTTCACCC.1  CTGTAACTTGGTAC.1  CTGTATACAGACTC.1  CTGTATACCCTGTC.1 \n##             CD8 T      CD4 Memory T       CD4 Naive T                NK \n##  CTGTATACGTATGC.1  CTGTATACTGCTCC.1  CTGTGAGAATGCCA.1  CTGTGAGAGGCATT.1 \n##       CD4 Naive T             CD8 T         CD14 Mono       CD4 Naive T \n##  CTGTGAGATCTCTA.1  CTGTGAGATGTCTT.1  CTTAAAGAAAAGCA.1  CTTAAAGAACGTGT.1 \n##                 B                 B         CD14 Mono       CD4 Naive T \n##  CTTAAAGACTATTC.1  CTTAAAGAGTAGCT.1  CTTAAAGATATGCG.1  CTTAAAGATGTCTT.1 \n##       CD4 Naive T       CD4 Naive T         CD16 Mono       T activated \n##  CTTAAAGATTTCTG.1  CTTAACACAGCCAT.1  CTTAACACAGTTCG.1  CTTAAGCTACGTTG.1 \n##         CD16 Mono                DC       CD4 Naive T         CD16 Mono \n##  CTTAAGCTGGTACT.1  CTTAAGCTTATGGC.1  CTTACAACACGTGT.1  CTTACAACACGTTG.1 \n##             CD8 T                 B      CD4 Memory T      CD4 Memory T \n##  CTTACAACCTTAGG.1  CTTACAACGCGAGA.1  CTTACAACGCTATG.1  CTTACAACTGGTCA.1 \n##         CD16 Mono         CD14 Mono         CD14 Mono             CD8 T \n##  CTTACAACTTGGCA.1  CTTACAACTTTCTG.1  CTTACATGCCATGA.1  CTTACATGCGAATC.1 \n##         CD14 Mono      CD4 Memory T             CD8 T       B Activated \n##  CTTACATGCGCAAT.1  CTTACATGCGTTAG.1  CTTACATGGTTAGC.1  CTTACATGGTTCAG.1 \n##       CD4 Naive T         CD14 Mono                DC             CD8 T \n##  CTTACATGTTTCTG.1  CTTACTGAAAGGGC.1  CTTACTGAACCACA.1  CTTACTGAACGCAT.1 \n##         CD14 Mono                NK         CD14 Mono             CD8 T \n##  CTTACTGACTCTTA.1  CTTACTGAGGAGGT.1  CTTACTGAGGTTAC.1 CTTACTGATTGTCT.11 \n##         CD14 Mono                 B                Mk      CD4 Memory T \n##  CTTAGACTAACCAC.1  CTTAGACTACCAGT.1  CTTAGACTACTACG.1  CTTAGACTCACCAA.1 \n##       CD4 Naive T         CD14 Mono                DC         CD14 Mono \n##  CTTAGGGAAAAAGC.1  CTTAGGGACTGCAA.1  CTTAGGGATCGATG.1  CTTAGGGATGGTCA.1 \n##         CD16 Mono         CD16 Mono         CD16 Mono         CD14 Mono \n##  CTTATCGACAGCTA.1  CTTATCGAGATAAG.1  CTTATCGATTTCGT.1  CTTCACCTAGAAGT.1 \n##      CD4 Memory T      CD4 Memory T                DC         CD14 Mono \n##  CTTCACCTAGTGCT.1  CTTCACCTATGTGC.1  CTTCACCTCCCTTG.1  CTTCACCTCGACAT.1 \n##             CD8 T       CD4 Naive T       T activated       CD4 Naive T \n##  CTTCACCTGTCGTA.1  CTTCACCTTAAGCC.1  CTTCACCTTCGACA.1  CTTCACCTTCTTTG.1 \n##      CD4 Memory T      CD4 Memory T         CD14 Mono       T activated \n##  CTTCACCTTGACTG.1  CTTCACCTTGGTCA.1  CTTCATGAAACCTG.1  CTTCATGACTAGCA.1 \n##       T activated      CD4 Memory T       B Activated         CD14 Mono \n##  CTTCATGAGGGTGA.1  CTTCATGATCTCAT.1  CTTCTAGAATGACC.1  CTTCTAGACTTGAG.1 \n##       B Activated       T activated       CD4 Naive T       CD4 Naive T \n##  CTTCTAGACTTGTT.1  CTTGAACTAACGGG.1  CTTGAACTATGACC.1  CTTGAACTCCTGAA.1 \n##                 B             CD8 T                 B         CD14 Mono \n##  CTTGAACTCTGTAG.1  CTTGAACTGCCATA.1  CTTGAACTGCCCTT.1  CTTGAGGAAACCGT.1 \n##                 B       B Activated         CD14 Mono             CD8 T \n##  CTTGAGGAAAGCAA.1  CTTGAGGAAGCTAC.1  CTTGAGGAATGGTC.1  CTTGAGGACTCAAG.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  CTTGAGGACTCATT.1  CTTGAGGATTGCAG.1  CTTGAGGATTGGTG.1  CTTGATTGAATGCC.1 \n##      CD4 Memory T         CD14 Mono             CD8 T       CD4 Naive T \n##  CTTGATTGCTACCC.1  CTTGATTGGGTACT.1  CTTGATTGTAAGGA.1  CTTGATTGTACAGC.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  CTTGTATGACGACT.1  CTTGTATGATCGTG.1  CTTGTATGTCTATC.1  CTTTACGAAGCCAT.1 \n##       CD4 Naive T         CD16 Mono         CD14 Mono             CD8 T \n##  CTTTACGACGAATC.1  CTTTACGACTTCCG.1  CTTTACGAGTTAGC.1  CTTTACGATTCATC.1 \n##             CD8 T      CD4 Memory T      CD4 Memory T       T activated \n##  CTTTAGACGACTAC.1  CTTTAGACGTCACA.1  CTTTAGACTCGCAA.1 CTTTAGACTGGGAG.11 \n##                 B             CD8 T                 B       T activated \n##  CTTTAGTGCTACCC.1  CTTTAGTGCTTTAC.1  CTTTAGTGGGTGTT.1  CTTTCAGACAACCA.1 \n##                NK       CD4 Naive T                 B       B Activated \n##  CTTTCAGAGACGAG.1  CTTTCAGAGTGTCA.1  CTTTCAGATAGCCA.1  CTTTCAGATCTCCG.1 \n##                 B      CD4 Memory T       CD4 Naive T         CD14 Mono \n##  CTTTCAGATTTCTG.1  CTTTGATGCCGAAT.1  CTTTGATGGGGTGA.1  CTTTGATGGGTGGA.1 \n##                 B             CD8 T         CD16 Mono         CD16 Mono \n##  CTTTGATGGTAGGG.1  CTTTGATGGTCACA.1  CTTTGATGGTGTTG.1 GAAACAGAAGTTCG.11 \n##       CD4 Naive T         CD14 Mono             CD8 T                NK \n##  GAAACAGATACTTC.1  GAAACAGATGGGAG.1  GAAACAGATGGTAC.1  GAAACCTGCTATTC.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono                DC \n##  GAAACCTGGCAAGG.1  GAAACCTGGTAAGA.1  GAAACCTGTCTTTG.1  GAAAGATGAGTACC.1 \n##       T activated             CD8 T       T activated       T activated \n##  GAAAGATGCACTTT.1  GAAAGATGGGATCT.1  GAAAGATGGGCAAG.1  GAAAGATGTAAAGG.1 \n##         CD14 Mono      CD4 Memory T       T activated       CD4 Naive T \n##  GAAAGTGAAGAAGT.1  GAAAGTGACGTCTC.1  GAAAGTGACTTCGC.1  GAAAGTGAGAATCC.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono                 B \n##  GAAAGTGAGGTGTT.1  GAAAGTGATTCAGG.1  GAAATACTACCTCC.1  GAAATACTAGTCAC.1 \n##                Mk             CD8 T       CD4 Naive T         CD14 Mono \n##  GAAATACTCGACTA.1  GAAATACTCTGAAC.1  GAAATACTGGTTTG.1  GAAATACTTGGGAG.1 \n##       B Activated       CD4 Naive T      CD4 Memory T         CD16 Mono \n##  GAAATACTTGGTAC.1  GAAATACTTTGCAG.1  GAACACACAGCCAT.1  GAACACACTGGTGT.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T         CD14 Mono \n##  GAACACACTTCAGG.1  GAACAGCTCACTGA.1  GAACAGCTGCCTTC.1  GAACAGCTGGACGA.1 \n##                NK         CD16 Mono       B Activated      CD4 Memory T \n##  GAACAGCTGTACAC.1  GAACCAACCGGAGA.1  GAACCAACCTCCCA.1  GAACCTGAACACCA.1 \n##             CD8 T         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  GAACCTGATCAAGC.1  GAACGGGAACCACA.1  GAACGGGAATGCTG.1  GAACGGGACTCGAA.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono                 B \n##  GAACGGGACTGATG.1  GAACGGGATACGAC.1  GAACGGGATGGTCA.1  GAACGTTGAAAGCA.1 \n##       CD4 Naive T                 B       CD4 Naive T         CD16 Mono \n##  GAACGTTGCTACTT.1  GAACGTTGTGAGAA.1  GAACGTTGTTCATC.1  GAACTGTGCGTTAG.1 \n##                 B                 B         CD14 Mono      CD4 Memory T \n##  GAACTGTGGTTGAC.1  GAACTGTGTAGAGA.1  GAACTGTGTATCGG.1  GAAGAATGATGTGC.1 \n##                DC                 B             CD8 T         CD14 Mono \n##  GAAGAATGCTAGCA.1  GAAGAATGGCAGTT.1  GAAGAATGTACGCA.1  GAAGAATGTGAGCT.1 \n##                 B         CD14 Mono                 B         CD14 Mono \n##  GAAGATGACTGAGT.1  GAAGATGACTTCCG.1  GAAGATGAGTATCG.1  GAAGATGATCAGTG.1 \n##         CD14 Mono         CD16 Mono       CD4 Naive T       CD4 Naive T \n##  GAAGATGATGGTTG.1  GAAGCGGAAAGATG.1  GAAGCGGAAAGGCG.1  GAAGCGGAAAGGTA.1 \n##       CD4 Naive T      CD4 Memory T      CD4 Memory T       CD4 Naive T \n##  GAAGCGGAAGACTC.1  GAAGCGGACTTGCC.1  GAAGCGGAGCGGAA.1  GAAGCTACCAGAGG.1 \n##             CD8 T      CD4 Memory T                 B             CD8 T \n##  GAAGCTACCAGGAG.1  GAAGCTACCCCTCA.1  GAAGCTACCCGCTT.1  GAAGCTACGTAGGG.1 \n##         CD16 Mono         CD14 Mono         CD16 Mono         CD16 Mono \n##  GAAGCTTGACTACG.1  GAAGCTTGCCTTTA.1  GAAGCTTGTAACCG.1  GAAGCTTGTCCGTC.1 \n##             Eryth             CD8 T         CD14 Mono      CD4 Memory T \n##  GAAGGGTGAGAAGT.1  GAAGGGTGAGCACT.1  GAAGGGTGATACCG.1  GAAGGGTGCATCAG.1 \n##                 B         CD14 Mono         CD14 Mono         CD14 Mono \n##  GAAGGGTGGAACCT.1  GAAGGGTGGACGGA.1  GAAGGTCTAGAAGT.1  GAAGGTCTAGTTCG.1 \n##         CD14 Mono       CD4 Naive T         CD16 Mono         CD14 Mono \n##  GAAGGTCTATCGTG.1  GAAGGTCTGCAAGG.1  GAAGTAGAACGGGA.1  GAAGTAGACGTAAC.1 \n##                DC       CD4 Naive T       CD4 Naive T       CD4 Naive T \n##  GAAGTAGACTGTAG.1  GAAGTAGAGTTGCA.1  GAAGTCACATCTTC.1  GAAGTCACCCAGTA.1 \n##         CD14 Mono         CD14 Mono       T activated      CD4 Memory T \n##  GAAGTCACGGACGA.1  GAAGTCACTCGTAG.1  GAAGTCTGAAACGA.1  GAAGTCTGACTCAG.1 \n##         CD14 Mono                 B         CD14 Mono         CD14 Mono \n##  GAAGTCTGCACTGA.1  GAAGTCTGCCTAAG.1  GAAGTCTGGTCATG.1  GAAGTCTGTTCACT.1 \n##             CD8 T      CD4 Memory T                NK               pDC \n##  GAAGTGCTAGCGTT.1  GAAGTGCTGTCTTT.1  GAATGCACCAGAAA.1  GAATGCACCATACG.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T         CD14 Mono \n##  GAATGCACGCTATG.1  GAATGCACGTTCGA.1  GAATGCACTTACCT.1  GAATGCTGCCACCT.1 \n##                 B      CD4 Memory T         CD14 Mono       CD4 Naive T \n##  GAATGCTGCCCACT.1  GAATGCTGGCTCCT.1  GAATGCTGTTCATC.1  GAATGGCTAGATCC.1 \n##         CD14 Mono         CD14 Mono                 B                DC \n##  GAATGGCTATTCTC.1  GAATGGCTCCCTAC.1  GAATGGCTCTAAGC.1 GAATGGCTCTCAAG.11 \n##         CD14 Mono         CD16 Mono         CD16 Mono      CD4 Memory T \n##  GAATGGCTCTCATT.1  GAATGGCTGGTATC.1  GAATGGCTGTTCAG.1  GAATGGCTTCTCCG.1 \n##         CD16 Mono                Mk                NK                DC \n##  GAATGGCTTGTCGA.1  GAATTAACACTTTC.1  GAATTAACTTCAGG.1  GACAACACACGTAC.1 \n##         CD16 Mono         CD14 Mono       CD4 Naive T         CD14 Mono \n##  GACAACACCGTCTC.1  GACAACACGGAGTG.1  GACAACACGTTAGC.1  GACAACACTTGAGC.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T         CD14 Mono \n##  GACAACTGCCAATG.1  GACAACTGCCATAG.1  GACAACTGCGCTAA.1  GACAACTGCTAGTG.1 \n##                Mk                DC                NK      CD4 Memory T \n##  GACAACTGTGCGTA.1  GACACTGAACTACG.1  GACACTGACTGTAG.1  GACACTGAGGTCAT.1 \n##         CD14 Mono                DC         CD14 Mono       T activated \n##  GACACTGATTCTAC.1  GACACTGATTTACC.1  GACAGGGATCGCCT.1  GACAGTACCAGTTG.1 \n##         CD14 Mono      CD4 Memory T      CD4 Memory T                Mk \n##  GACAGTACCATTTC.1  GACAGTACGCAAGG.1  GACAGTACGCTGTA.1  GACAGTACGTCAAC.1 \n##         CD14 Mono       T activated      CD4 Memory T                 B \n##  GACAGTACTTCCGC.1  GACAGTTGCCTTAT.1  GACAGTTGGAAGGC.1  GACAGTTGTCAGAC.1 \n##       B Activated             CD8 T      CD4 Memory T                 B \n##  GACAGTTGTCCGAA.1  GACATTCTACAGTC.1  GACATTCTACCGAT.1  GACATTCTGACGAG.1 \n##      CD4 Memory T       T activated       CD4 Naive T             CD8 T \n##  GACATTCTGAGCTT.1  GACATTCTGGAACG.1  GACATTCTGTTTGG.1  GACCAAACACGGGA.1 \n##                 B         CD14 Mono             CD8 T         CD16 Mono \n##  GACCAAACAGTGTC.1  GACCAAACATTGGC.1  GACCAAACCTACCC.1  GACCAAACGATAGA.1 \n##         CD14 Mono         CD16 Mono         CD14 Mono         CD14 Mono \n##  GACCAAACGTTCAG.1  GACCAAACTAGCGT.1  GACCATGAAAGGTA.1  GACCCTACATTCTC.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  GACCTAGAAAGCAA.1  GACCTAGACGCCTT.1  GACCTAGACGCTAA.1  GACCTCACAAGATG.1 \n##         CD16 Mono       CD4 Naive T         CD14 Mono         CD16 Mono \n##  GACCTCACACCCAA.1  GACCTCACAGGGTG.1  GACCTCACGTATCG.1  GACCTCACTGCTAG.1 \n##       CD4 Naive T             CD8 T         CD14 Mono             CD8 T \n##  GACCTCACTGGTCA.1  GACCTCTGAGGGTG.1  GACCTCTGCTGAAC.1  GACCTCTGGTGCTA.1 \n##         CD14 Mono         CD14 Mono                 B         CD16 Mono \n##  GACCTCTGTCTTCA.1  GACCTCTGTGCTTT.1  GACCTCTGTTGCGA.1  GACGAACTCATCAG.1 \n##       CD4 Naive T             CD8 T         CD14 Mono      CD4 Memory T \n##  GACGAACTTATCTC.1  GACGAACTTTTGTC.1  GACGAGGACATGAC.1  GACGAGGACCCGTT.1 \n##       CD4 Naive T       CD4 Naive T      CD4 Memory T         CD14 Mono \n##  GACGAGGACCGATA.1  GACGAGGACGTGAT.1  GACGAGGAGGACAG.1  GACGAGGAGGGACA.1 \n##                NK      CD4 Memory T                 B         CD16 Mono \n##  GACGAGGAGTCTAG.1  GACGAGGATGTGAC.1  GACGAGGATTGAGC.1  GACGATTGACGGGA.1 \n##         CD16 Mono       CD4 Naive T         CD16 Mono             CD8 T \n##  GACGATTGAGAGGC.1  GACGATTGCTTATC.1  GACGCCGAGCTGAT.1  GACGCCGAGGAGGT.1 \n##      CD4 Memory T         CD14 Mono         CD16 Mono                NK \n##  GACGCCGAGTGTAC.1  GACGCCGAGTTAGC.1  GACGCCGAGTTGAC.1  GACGCCGATTTCTG.1 \n##      CD4 Memory T             CD8 T         CD14 Mono         CD16 Mono \n##  GACGCTCTCGATAC.1  GACGCTCTCTGTGA.1  GACGCTCTGTGCTA.1  GACGCTCTTCCGAA.1 \n##         CD16 Mono       CD4 Naive T         CD14 Mono         CD14 Mono \n##  GACGCTCTTGCTAG.1  GACGCTCTTGTGAC.1  GACGGCACACAGCT.1  GACGGCACGTTCAG.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T         CD14 Mono \n##  GACGGCACTTTACC.1  GACGTAACAAAAGC.1  GACGTAACACGTGT.1  GACGTAACCACACA.1 \n##                NK       B Activated         CD14 Mono       B Activated \n## GACGTAACCGCTAA.11  GACGTAACCGTTAG.1  GACGTAACGAATCC.1  GACGTAACGAGAGC.1 \n##         CD14 Mono                Mk         CD14 Mono       CD4 Naive T \n##  GACGTAACGTAGGG.1  GACGTAACGTTTGG.1  GACGTAACTGCTAG.1  GACGTAACTGCTCC.1 \n##         CD14 Mono             CD8 T       CD4 Naive T         CD14 Mono \n##  GACGTATGACTAGC.1  GACGTATGCCGTTC.1  GACGTATGGAAACA.1  GACGTCCTAAGTAG.1 \n##      CD4 Memory T             CD8 T      CD4 Memory T      CD4 Memory T \n##  GACGTCCTATCTTC.1 GACGTCCTGAGGCA.11  GACGTCCTGCGATT.1  GACGTCCTGGTAGG.1 \n##       CD4 Naive T                 B       CD4 Naive T         CD16 Mono \n##  GACGTCCTTCTTCA.1  GACGTCCTTGAACC.1  GACGTCCTTGTTCT.1 GACGTCCTTTTCTG.11 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono                DC \n##  GACTACGACCTTTA.1 GACTACGAGAGGGT.11  GACTACGAGTCTGA.1 GACTACGAGTGAGG.11 \n##         CD14 Mono                NK       CD4 Naive T       CD4 Naive T \n##  GACTACGATGTGAC.1  GACTACGATGTTTC.1  GACTACGATTCACT.1  GACTCCTGAACTGC.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono         CD14 Mono \n##  GACTCCTGCTTCTA.1  GACTCCTGGAGCAG.1  GACTCCTGGGTTTG.1  GACTCCTGTATCTC.1 \n##       CD4 Naive T                DC         CD14 Mono         CD14 Mono \n##  GACTCCTGTGTAGC.1  GACTGAACAAGTGA.1  GACTGAACATCTCT.1  GACTGAACCCAGTA.1 \n##       CD4 Naive T         CD14 Mono                NK         CD14 Mono \n##  GACTGATGAAGGGC.1  GACTGATGACACAC.1  GACTGATGGAATCC.1  GACTGATGGTCCTC.1 \n##         CD14 Mono       B Activated      CD4 Memory T         CD14 Mono \n##  GACTGATGGTTTGG.1  GACTGATGTAGACC.1  GACTGATGTGCCAA.1  GACTGTGAAAGCAA.1 \n##      CD4 Memory T                NK             CD8 T      CD4 Memory T \n##  GACTGTGAAGATCC.1  GACTGTGAAGGCGA.1  GACTGTGACAGATC.1  GACTGTGAGGAAGC.1 \n##         CD14 Mono         CD16 Mono         CD14 Mono         CD14 Mono \n##  GACTGTGAGGTGGA.1  GACTGTGATCTTCA.1  GACTGTGATGCCAA.1  GACTGTGATTCGGA.1 \n##       CD4 Naive T                NK                NK         CD14 Mono \n##  GACTTTACATTCGG.1  GACTTTACCAGATC.1  GACTTTACTAAAGG.1  GACTTTACTTGCGA.1 \n##                 B       CD4 Naive T       CD4 Naive T       CD4 Naive T \n##  GAGAAATGTCCAAG.1  GAGAAATGTTTCTG.1  GAGAAATGTTTGTC.1  GAGAGGTGAGCACT.1 \n##             CD8 T      CD4 Memory T                 B         CD16 Mono \n##  GAGAGGTGCCTGAA.1  GAGAGGTGCTGGAT.1  GAGAGGTGTCGCCT.1  GAGAGGTGTTTCGT.1 \n##               pDC       CD4 Naive T      CD4 Memory T         CD14 Mono \n##  GAGATAGAAACGGG.1  GAGATAGACCGTAA.1  GAGATAGATGAGGG.1  GAGATAGATGCTAG.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono       CD4 Naive T \n##  GAGATAGATGGTAC.1  GAGATCACACACTG.1  GAGATCACAGACTC.1  GAGATCACCCAAGT.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono                NK \n##  GAGATCACCTTGGA.1  GAGATCACTCCCGT.1  GAGATCACTGATGC.1  GAGATCACTGCATG.1 \n##         CD14 Mono      CD4 Memory T      CD4 Memory T         CD14 Mono \n##  GAGATGCTAAGGGC.1  GAGATGCTACCTAG.1  GAGATGCTATCGAC.1  GAGATGCTCGGTAT.1 \n##       CD4 Naive T                NK         CD14 Mono         CD14 Mono \n##  GAGATGCTGTCATG.1  GAGATGCTTACAGC.1  GAGATGCTTGACTG.1  GAGATGCTTTAGGC.1 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono         CD16 Mono \n##  GAGATGCTTTCTAC.1  GAGCAACTACGTGT.1  GAGCAACTCTAAGC.1  GAGCAACTGCTGAT.1 \n##               pDC       CD4 Naive T         CD14 Mono         CD14 Mono \n##  GAGCAACTGTAAAG.1  GAGCAGGAACAGCT.1  GAGCAGGAAGTCTG.1  GAGCAGGACACTAG.1 \n##                NK         CD14 Mono       T activated         CD16 Mono \n##  GAGCAGGACGTAAC.1  GAGCAGGAGGCAAG.1  GAGCAGGATCGACA.1  GAGCATACACCAGT.1 \n##                 B                DC         CD14 Mono       CD4 Naive T \n##  GAGCATACATCGAC.1  GAGCATACCCAAGT.1  GAGCATACGGAAGC.1  GAGCATACGGAGTG.1 \n##                 B         CD14 Mono       CD4 Naive T         CD16 Mono \n##  GAGCATACGGATCT.1  GAGCATACGGGATG.1  GAGCGAGAACTCTT.1  GAGCGAGACACAAC.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  GAGCGAGACGAGTT.1  GAGCGAGAGAATAG.1  GAGCGAGAGCGTAT.1  GAGCGAGATGGTCA.1 \n##         CD14 Mono       T activated      CD4 Memory T         CD14 Mono \n##  GAGCGAGATGTCGA.1  GAGCGAGATTCTAC.1  GAGCGCACAGAGAT.1  GAGCGCACCAGAGG.1 \n##       CD4 Naive T       B Activated         CD14 Mono      CD4 Memory T \n##  GAGCGCACCCAATG.1  GAGCGCTGACCTCC.1  GAGCGCTGCAAAGA.1  GAGCGCTGCTGGAT.1 \n##                 B         CD14 Mono         CD14 Mono                NK \n##  GAGCGCTGGGATTC.1  GAGCGCTGGGCGAA.1  GAGCGCTGTTGTGG.1  GAGCGCTGTTTCTG.1 \n##                Mk      CD4 Memory T                 B             CD8 T \n##  GAGCGGCTAACGGG.1  GAGCGGCTATGGTC.1  GAGCGGCTTGTCTT.1  GAGCTCCTGTTGTG.1 \n##                DC      CD4 Memory T       B Activated         CD14 Mono \n##  GAGCTCCTTACAGC.1  GAGGACGAACTCTT.1  GAGGACGACGGGAA.1  GAGGACGAGCAGTT.1 \n##         CD14 Mono                 B       CD4 Naive T                 B \n##  GAGGACGAGGCAAG.1  GAGGACGAGGTTTG.1  GAGGACGATGACCA.1  GAGGATCTGGCATT.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono                 B \n##  GAGGATCTTAGCGT.1  GAGGATCTTCACGA.1  GAGGATCTTCTAGG.1  GAGGCAGATCATTC.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono                 B \n##  GAGGCAGATGGTGT.1  GAGGCCACACAGTC.1  GAGGCCACAGTGCT.1  GAGGCCACCTACCC.1 \n##       CD4 Naive T                 B      CD4 Memory T         CD16 Mono \n##  GAGGCCACTGTTTC.1  GAGGGAACGATAAG.1  GAGGGAACGTTGTG.1  GAGGGAACTTATCC.1 \n##                NK                NK      CD4 Memory T         CD14 Mono \n##  GAGGGAACTTTGCT.1  GAGGGATGAGGGTG.1  GAGGGATGATCTCT.1  GAGGGATGGGGATG.1 \n##      CD4 Memory T                 B             CD8 T       CD4 Naive T \n##  GAGGGATGGTCACA.1  GAGGGATGTAGCCA.1  GAGGGATGTGCCAA.1  GAGGGATGTGTGAC.1 \n##         CD14 Mono         CD14 Mono                DC       CD4 Naive T \n##  GAGGGATGTTCACT.1  GAGGGATGTTGAGC.1  GAGGGCCTAACGGG.1  GAGGGCCTACCTCC.1 \n##      CD4 Memory T      CD4 Memory T         CD14 Mono         CD14 Mono \n##  GAGGGCCTACTAGC.1  GAGGGCCTAGAGGC.1  GAGGGCCTCAGAAA.1  GAGGGCCTCCTGTC.1 \n##       CD4 Naive T                 B         CD14 Mono       CD4 Naive T \n##  GAGGGTGAAGTAGA.1  GAGGGTGATAGTCG.1  GAGGGTGATGTCTT.1  GAGGGTGATTGCGA.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono       CD4 Naive T \n##  GAGGGTGATTGCTT.1  GAGGGTGATTGGCA.1  GAGGTACTAAAACG.1  GAGGTACTAACGGG.1 \n##         CD14 Mono      CD4 Memory T                 B       CD4 Naive T \n##  GAGGTACTACGCAT.1  GAGGTACTACTACG.1  GAGGTACTCATGAC.1  GAGGTACTCTCTAT.1 \n##       CD4 Naive T                 B         CD14 Mono         CD16 Mono \n##  GAGGTACTTGGTCA.1  GAGGTGGAATTCTC.1  GAGGTGGACTCATT.1  GAGGTGGAGCGAAG.1 \n##       CD4 Naive T                 B         CD16 Mono         CD14 Mono \n##  GAGGTGGAGGTTCA.1  GAGGTGGATTGGTG.1  GAGGTTACCACTTT.1  GAGGTTACGAGAGC.1 \n##         CD14 Mono      CD4 Memory T                 B         CD14 Mono \n##  GAGGTTACGCGGAA.1  GAGGTTTGAAGATG.1  GAGGTTTGAATCGC.1  GAGGTTTGATGCTG.1 \n##                 B                DC      CD4 Memory T             CD8 T \n##  GAGGTTTGCCTTAT.1  GAGGTTTGCGAGAG.1  GAGGTTTGGTCTAG.1  GAGGTTTGTGGAAA.1 \n##       CD4 Naive T       T activated                Mk       B Activated \n##  GAGTAAGACTTGCC.1  GAGTAAGATCAGTG.1  GAGTAAGATGTGGT.1  GAGTACACACACAC.1 \n##         CD14 Mono       T activated       CD4 Naive T         CD16 Mono \n##  GAGTACACCATTGG.1 GAGTACACCATTTC.11 GAGTACACCTGACA.11 GAGTACACGCGTTA.11 \n##       B Activated       CD4 Naive T         CD14 Mono       B Activated \n##  GAGTACTGCGTAGT.1  GAGTACTGTCACGA.1  GAGTACTGTGATGC.1  GAGTCAACGAGACG.1 \n##         CD14 Mono       CD4 Naive T                 B             CD8 T \n##  GAGTCAACGCAGAG.1  GAGTCAACGTGCAT.1  GAGTCAACTCGTGA.1  GAGTCTGAACCCTC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  GAGTCTGAAGAAGT.1  GAGTCTGACCTTGC.1  GAGTGACTAAGCAA.1  GAGTGACTGCTGTA.1 \n##                DC                NK         CD14 Mono       CD4 Naive T \n##  GAGTGACTGGACGA.1  GAGTGACTTCGATG.1  GAGTGACTTCTCCG.1  GAGTGACTTGTCAG.1 \n##         CD16 Mono      CD4 Memory T       CD4 Naive T       B Activated \n##  GAGTGGGAAGCACT.1  GAGTGGGACATGAC.1  GAGTGGGATCTCGC.1  GAGTGGGATTGTGG.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  GAGTGTTGCTCAAG.1  GAGTGTTGGACAAA.1  GAGTGTTGGTCGAT.1  GAGTGTTGTTCCAT.1 \n##                NK         CD14 Mono                 B         CD14 Mono \n##  GAGTTGTGACTTTC.1  GAGTTGTGCTTCTA.1  GAGTTGTGGAAAGT.1  GAGTTGTGGTCTAG.1 \n##                 B       CD4 Naive T       CD4 Naive T       CD4 Naive T \n##  GAGTTGTGTGGAAA.1  GAGTTGTGTGGCAT.1  GATAAGGACCTCCA.1  GATAAGGACTGACA.1 \n##       CD4 Naive T      CD4 Memory T         CD16 Mono         CD14 Mono \n##  GATAAGGAGTGTAC.1  GATAAGGATTTGGG.1  GATAATACGGTTTG.1  GATAATACTGAAGA.1 \n##       CD4 Naive T       CD4 Naive T      CD4 Memory T       CD4 Naive T \n##  GATAATACTGTAGC.1  GATACTCTAACCTG.1  GATACTCTAATCGC.1  GATACTCTCCACCT.1 \n##             CD8 T         CD14 Mono         CD16 Mono         CD14 Mono \n##  GATACTCTCGGTAT.1  GATACTCTGCAAGG.1  GATAGAGAAAACGA.1  GATAGAGAAACCGT.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono       T activated \n##  GATAGAGACCTTAT.1  GATAGAGACTGTTT.1  GATAGAGATGAGCT.1  GATAGAGATTTCAC.1 \n##         CD14 Mono       CD4 Naive T               pDC                 B \n##  GATAGCACAAGCAA.1  GATAGCACACACTG.1  GATAGCACGAGATA.1  GATAGCACGGAGTG.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T         CD14 Mono \n##  GATAGCACTTGGTG.1  GATATAACAAAGCA.1  GATATAACATTTCC.1  GATATAACCTTAGG.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono       CD4 Naive T \n##  GATATAACGAACTC.1  GATATAACGGTGGA.1  GATATAACGTTCGA.1  GATATATGAACTGC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono       B Activated \n##  GATATATGAATGCC.1  GATATATGATGCTG.1  GATATATGCTGGAT.1  GATATATGGTGTTG.1 \n##      CD4 Memory T      CD4 Memory T         CD14 Mono       T activated \n##  GATATCCTACCAAC.1  GATATCCTAGGAGC.1  GATATCCTGTAAAG.1  GATATCCTGTGTTG.1 \n##       T activated                NK                DC         CD14 Mono \n##  GATATCCTTGGGAG.1  GATATTGAAGCGTT.1  GATATTGAAGTGTC.1  GATATTGATTGGTG.1 \n##                NK                NK         CD14 Mono                 B \n##  GATCATCTCTGATG.1  GATCCCTGACTCTT.1  GATCCCTGCTACGA.1  GATCCCTGGTAGGG.1 \n##                Mk         CD14 Mono      CD4 Memory T         CD16 Mono \n##  GATCCGCTAGGTTC.1  GATCCGCTTCTCGC.1  GATCGAACACTTTC.1  GATCGAACATGCCA.1 \n##      CD4 Memory T             CD8 T         CD16 Mono       CD4 Naive T \n##  GATCGAACATGTGC.1 GATCGAACCATACG.11  GATCGAACCGGGAA.1  GATCGAACGGTGTT.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono      CD4 Memory T \n##  GATCGAACTTTGTC.1  GATCGATGAAAGTG.1  GATCGATGAGATCC.1  GATCGATGCGTTAG.1 \n##         CD16 Mono       T activated         CD14 Mono         CD14 Mono \n##  GATCGATGGAAAGT.1  GATCGTGAATGTGC.1  GATCGTGACAGGAG.1  GATCGTGACCACAA.1 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono         CD16 Mono \n##  GATCGTGACGGAGA.1  GATCGTGACTACCC.1  GATCGTGAGAACCT.1  GATCGTGATCCGTC.1 \n##       CD4 Naive T                Mk       CD4 Naive T             CD8 T \n##  GATCGTGATGAGCT.1  GATCTACTCGCTAA.1  GATCTACTCTCGAA.1  GATCTTACACACCA.1 \n##                NK         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  GATCTTACAGAATG.1  GATCTTACCCAACA.1  GATCTTACGGTCTA.1  GATCTTACTCCCAC.1 \n##      CD4 Memory T       T activated         CD16 Mono               pDC \n##  GATCTTTGAGTCGT.1  GATCTTTGCGACAT.1  GATCTTTGGCTGAT.1  GATCTTTGTCAGTG.1 \n##       CD4 Naive T       CD4 Naive T                NK       CD4 Naive T \n##  GATGACACACGTTG.1  GATGACACCATACG.1  GATGACACTTCTCA.1  GATGCAACATCGGT.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono                NK \n##  GATGCAACGAATAG.1  GATGCAACTTGGTG.1  GATGCATGAGCAAA.1  GATGCATGCACTAG.1 \n##       B Activated         CD14 Mono      CD4 Memory T         CD14 Mono \n##  GATGCATGCCTTTA.1  GATGCATGCGCCTT.1  GATGCATGGAGGCA.1  GATGCATGGGAACG.1 \n##                 B         CD14 Mono         CD14 Mono       T activated \n##  GATGCATGTTTGGG.1  GATGCCCTACGTAC.1  GATGCCCTCGTAGT.1  GATGCCCTGACAGG.1 \n##      CD4 Memory T         CD14 Mono      CD4 Memory T         CD14 Mono \n##  GATGCCCTTCTTAC.1  GATGCCCTTGAGAA.1  GATTACCTAAAAGC.1  GATTACCTAAACAG.1 \n##       CD4 Naive T         CD16 Mono               pDC         CD14 Mono \n##  GATTACCTAACAGA.1  GATTACCTAACGAA.1  GATTACCTAGGGTG.1  GATTACCTCATGAC.1 \n##               pDC       CD4 Naive T             CD8 T             CD8 T \n##  GATTACCTCGGGAA.1  GATTACCTCTGTGA.1  GATTACCTGGATTC.1  GATTACCTGGGATG.1 \n##                 B         CD14 Mono               pDC                NK \n##  GATTACCTTACAGC.1  GATTACCTTCCTAT.1  GATTACCTTCTAGG.1  GATTACCTTCTATC.1 \n##       CD4 Naive T                DC       CD4 Naive T         CD16 Mono \n##  GATTACCTTGTCGA.1  GATTCGGAACGGGA.1  GATTCGGACGATAC.1  GATTCGGAGGCAAG.1 \n##         CD14 Mono             CD8 T                 B       CD4 Naive T \n##  GATTCGGATCACGA.1  GATTCGGATGTCCC.1  GATTCTACACTCTT.1  GATTCTACGAGGCA.1 \n##         CD14 Mono         CD16 Mono       T activated         CD14 Mono \n##  GATTCTACGTCACA.1  GATTCTACTTAGGC.1  GATTCTACTTCTAC.1  GATTCTTGAGTGTC.1 \n##       CD4 Naive T                 B         CD14 Mono       CD4 Naive T \n##  GATTCTTGCAACTG.1  GATTCTTGGTTAGC.1  GATTCTTGTCGCAA.1  GATTCTTGTCTATC.1 \n##                NK       CD4 Naive T         CD14 Mono       CD4 Naive T \n##  GATTCTTGTCTTTG.1  GATTCTTGTTGTCT.1  GATTCTTGTTTCGT.1  GATTGGACATGCTG.1 \n##       B Activated         CD14 Mono                 B         CD14 Mono \n## GATTGGACTCACGA.11  GATTGGACTGTTTC.1  GATTGGACTTACTC.1  GATTGGTGACCTTT.1 \n##       B Activated         CD14 Mono       T activated                 B \n##  GATTGGTGAGGAGC.1  GATTGGTGCTGACA.1  GATTGGTGTATCTC.1  GATTGGTGTATGCG.1 \n##       CD4 Naive T         CD16 Mono       B Activated      CD4 Memory T \n##  GATTGGTGTGGAAA.1  GATTGGTGTGGTGT.1  GATTTAGAACCAAC.1  GATTTAGAATGACC.1 \n##      CD4 Memory T                Mk       CD4 Naive T                NK \n##  GATTTAGAATTCCT.1  GATTTAGAGAATAG.1  GATTTAGAGTAGCT.1  GATTTAGATTTCAC.1 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono         CD14 Mono \n##  GATTTGCTACCCTC.1  GATTTGCTACGCTA.1  GATTTGCTACGTAC.1  GATTTGCTCTTACT.1 \n##                Mk       CD4 Naive T      CD4 Memory T       CD4 Naive T \n##  GATTTGCTGTACCA.1  GCAAACTGAAGATG.1  GCAAACTGACACCA.1  GCAAACTGAGTGCT.1 \n##         CD14 Mono       CD4 Naive T      CD4 Memory T         CD14 Mono \n##  GCAAACTGCTCAGA.1  GCAAACTGGTGCTA.1  GCAACCCTAGGAGC.1  GCAACCCTCTGTGA.1 \n##             CD8 T         CD14 Mono               pDC       T activated \n##  GCAACCCTGTCACA.1  GCAACCCTTTACTC.1  GCAACTGAAAGTAG.1  GCAACTGAACCTAG.1 \n##       T activated       CD4 Naive T       T activated         CD16 Mono \n##  GCAACTGACACACA.1  GCAACTGACGATAC.1 GCAACTGATCAGGT.11  GCAACTGATTCGGA.1 \n##             CD8 T      CD4 Memory T         CD14 Mono         CD16 Mono \n##  GCAAGACTAACCGT.1  GCAAGACTCGGAGA.1  GCAAGACTGAACCT.1  GCAAGACTGACGAG.1 \n##                 B                 B         CD14 Mono      CD4 Memory T \n##  GCAAGACTTGCCTC.1  GCAAGACTTTACTC.1  GCAAGACTTTATCC.1  GCAATCGATGCTCC.1 \n##       CD4 Naive T             CD8 T                DC       CD4 Naive T \n##  GCAATCGATGTCCC.1  GCAATTCTACCCAA.1  GCAATTCTACCCTC.1  GCAATTCTACTACG.1 \n##             CD8 T       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  GCAATTCTCTAGCA.1  GCAATTCTTGGGAG.1  GCACAAACACTGTG.1  GCACAAACCCATGA.1 \n##         CD16 Mono                 B       T activated         CD14 Mono \n##  GCACAAACGGTAGG.1  GCACAATGAATCGC.1  GCACAATGACTGTG.1  GCACAATGAGCTCA.1 \n##             CD8 T       CD4 Naive T       CD4 Naive T                DC \n##  GCACAATGATGTCG.1  GCACAATGCAGTCA.1  GCACAATGCTTCGC.1  GCACAATGGTAGCT.1 \n##      CD4 Memory T             CD8 T                NK         CD14 Mono \n##  GCACAATGTCCCAC.1  GCACACCTACGCTA.1  GCACACCTCCATAG.1  GCACCACTAAGGTA.1 \n##         CD14 Mono                Mk         CD14 Mono       T activated \n##  GCACCACTCTCTCG.1  GCACCTACTCAAGC.1  GCACCTACTGGTTG.1  GCACCTTGAGTGCT.1 \n##       CD4 Naive T         CD14 Mono                 B         CD14 Mono \n##  GCACCTTGATGCCA.1  GCACCTTGGGGAGT.1  GCACGGACATGACC.1  GCACGGACCGTGAT.1 \n##       T activated       B Activated         CD14 Mono         CD14 Mono \n##  GCACGGACCTCTCG.1  GCACGGACCTTGCC.1  GCACGGACGGTGTT.1  GCACGGTGACTGTG.1 \n##      CD4 Memory T                 B         CD14 Mono                 B \n##  GCACGGTGCCTACC.1  GCACGGTGGACTAC.1  GCACGGTGGGCAAG.1  GCACGGTGGGGATG.1 \n##       CD4 Naive T       CD4 Naive T       T activated         CD14 Mono \n##  GCACGTCTAATCGC.1  GCACGTCTACTGGT.1  GCACGTCTCCTCCA.1  GCACGTCTCTGGTA.1 \n##       CD4 Naive T       CD4 Naive T       CD4 Naive T         CD16 Mono \n##  GCACGTCTCTTACT.1  GCACGTCTGAACCT.1  GCACGTCTGGTCTA.1  GCACGTCTGTTACG.1 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono         CD14 Mono \n##  GCACGTCTTCGTTT.1  GCACGTCTTGTTCT.1  GCACTAGAAGTGCT.1  GCACTAGAATTTCC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono      CD4 Memory T \n##  GCACTAGACGAACT.1  GCACTAGAGCGTAT.1  GCACTGCTACGGTT.1  GCACTGCTATCAGC.1 \n##       CD4 Naive T      CD4 Memory T       T activated         CD16 Mono \n##  GCACTGCTGAAACA.1  GCACTGCTGCCATA.1  GCACTGCTGGTATC.1  GCACTGCTGGTGAG.1 \n##      CD4 Memory T                Mk         CD16 Mono       CD4 Naive T \n##  GCACTGCTTCCGAA.1  GCACTGCTTGCTCC.1 GCAGATACAAGCCT.11  GCAGATACAGGTCT.1 \n##      CD4 Memory T       CD4 Naive T       CD4 Naive T         CD16 Mono \n##  GCAGATACCCCAAA.1  GCAGATACGGAAAT.1  GCAGATACGGTATC.1  GCAGATACTTCTGT.1 \n##       CD4 Naive T                NK      CD4 Memory T         CD16 Mono \n##  GCAGCCGAAGCCAT.1  GCAGCCGACTCCAC.1  GCAGCCGACTCTAT.1  GCAGCCGATCGCAA.1 \n##       CD4 Naive T         CD14 Mono      CD4 Memory T                DC \n##  GCAGCGTGAACGGG.1  GCAGCGTGCTCTCG.1  GCAGCGTGTCCCGT.1  GCAGCGTGTGAGGG.1 \n##         CD14 Mono         CD16 Mono         CD14 Mono         CD14 Mono \n##  GCAGCGTGTGTCTT.1  GCAGGCACACTCTT.1  GCAGGCACCTGGAT.1  GCAGGGCTACGTTG.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono                NK \n##  GCAGGGCTCGTTGA.1 GCAGGGCTGAAAGT.11  GCAGGGCTGCCAAT.1  GCAGGGCTTGAGCT.1 \n##         CD14 Mono             CD8 T       CD4 Naive T         CD16 Mono \n##  GCAGGGCTTGCAAC.1  GCAGTCCTAACGAA.1  GCAGTCCTACTGTG.1  GCAGTCCTCAACCA.1 \n##         CD14 Mono       T activated       CD4 Naive T       CD4 Naive T \n##  GCAGTCCTCTCCAC.1  GCAGTCCTTGACAC.1  GCAGTTGAATGCTG.1  GCAGTTGAGCGAAG.1 \n##         CD14 Mono      CD4 Memory T       B Activated         CD14 Mono \n##  GCAGTTGATATCTC.1  GCAGTTGATTCTTG.1  GCATCAGAAAGTGA.1  GCATCAGACCTCGT.1 \n##         CD16 Mono                Mk       CD4 Naive T       CD4 Naive T \n##  GCATCAGAGTTCTT.1  GCATGATGAGGGTG.1  GCATGATGGTCAAC.1  GCATGATGTCAAGC.1 \n##         CD14 Mono                DC       CD4 Naive T         CD14 Mono \n##  GCATGTGACAAAGA.1  GCATGTGACTAAGC.1  GCATGTGAGAGGTG.1  GCATGTGATTCAGG.1 \n##                NK                NK       CD4 Naive T         CD14 Mono \n##  GCATTGGAAGTACC.1  GCATTGGAGATAGA.1  GCATTGGAGGTAAA.1  GCATTGGATTCTGT.1 \n##         CD14 Mono         CD16 Mono                 B       CD4 Naive T \n##  GCCAAAACAGGTTC.1  GCCAAAACATGCTG.1  GCCAAATGGAAACA.1  GCCAAATGGCTATG.1 \n##       T activated         CD16 Mono         CD14 Mono         CD14 Mono \n##  GCCAAATGGTACAC.1  GCCAACCTGAGGAC.1  GCCAACCTGCATAC.1  GCCAACCTGGACTT.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T                NK \n##  GCCAACCTGGAGCA.1  GCCAACCTGTGCAT.1  GCCAACCTGTTGTG.1 GCCACGGACGAATC.11 \n##       CD4 Naive T         CD14 Mono             CD8 T                NK \n##  GCCACGGACGCCTT.1  GCCACGGAGACGAG.1  GCCACGGATGCTTT.1  GCCACGGATTTGTC.1 \n##      CD4 Memory T         CD14 Mono      CD4 Memory T       B Activated \n##  GCCACTACAAACGA.1  GCCACTACGAATCC.1  GCCACTACGCCTTC.1  GCCACTACGGTAGG.1 \n##       B Activated         CD14 Mono         CD14 Mono       CD4 Naive T \n##  GCCACTACGTCGTA.1  GCCACTACGTTGTG.1  GCCACTACTCCAGA.1  GCCACTACTGCATG.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono                NK \n##  GCCACTACTGGTAC.1 GCCACTACTTCGCC.11  GCCATCACCATGGT.1  GCCATCACCCCGTT.1 \n##       CD4 Naive T         CD14 Mono                 B                NK \n##  GCCATCACCTCTAT.1  GCCATCACGATACC.1  GCCATCACGGATCT.1  GCCATCACGGTTTG.1 \n##       CD4 Naive T       CD4 Naive T      CD4 Memory T         CD14 Mono \n##  GCCATCACTAGCCA.1 GCCATCACTTCTCA.11  GCCATGCTAACGGG.1  GCCATGCTACTACG.1 \n##                Mk                 B         CD14 Mono                 B \n##  GCCATGCTCCCTCA.1  GCCATGCTCTCCAC.1  GCCATGCTGGGCAA.1  GCCCAACTCAACTG.1 \n##       CD4 Naive T       B Activated                DC         CD16 Mono \n##  GCCCAACTCCGCTT.1  GCCCAACTGCATAC.1  GCCCAACTTTCGGA.1  GCCCAGGAAGCCTA.1 \n##         CD14 Mono             CD8 T       CD4 Naive T         CD14 Mono \n##  GCCCAGGACATCAG.1  GCCCAGGACATTCT.1  GCCCAGGACCACAA.1  GCCCAGGAGAGATA.1 \n##                NK                Mk         CD14 Mono         CD14 Mono \n##  GCCCATACACAGCT.1  GCCCATACGAACCT.1  GCCCATACGAGGAC.1  GCCCATACGTCAAC.1 \n##       T activated                NK                 B      CD4 Memory T \n##  GCCCATACTAAGCC.1  GCCCATACTCTACT.1  GCCGACGACGAATC.1  GCCGACGATGCATG.1 \n##                NK         CD14 Mono         CD16 Mono                NK \n##  GCCGACGATTCTCA.1  GCCGAGTGATCTCT.1  GCCGAGTGTCTATC.1  GCCGAGTGTGGTTG.1 \n##         CD14 Mono       CD4 Naive T         CD16 Mono       CD4 Naive T \n##  GCCGGAACGCTTAG.1  GCCGGAACGTTTCT.1  GCCGGAACTCGCTC.1  GCCGGAACTGCGTA.1 \n##                 B         CD14 Mono         CD14 Mono             CD8 T \n##  GCCGTACTACGGTT.1  GCCGTACTAGCTAC.1  GCCGTACTGCCATA.1  GCCTACACCACCAA.1 \n##       B Activated         CD14 Mono               pDC         CD14 Mono \n## GCCTACACCTGCAA.11  GCCTACACTGCTCC.1  GCCTAGCTAGGAGC.1  GCCTAGCTGGAAGC.1 \n##                Mk         CD14 Mono       T activated       CD4 Naive T \n##  GCCTAGCTGGTAGG.1  GCCTAGCTGTTCTT.1  GCCTAGCTTTCTGT.1  GCCTCAACCTGAAC.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono         CD14 Mono \n##  GCCTCAACTAGAAG.1  GCCTCATGATGCTG.1  GCCTCATGCAGTTG.1  GCCTCATGGAAACA.1 \n##         CD14 Mono         CD16 Mono       CD4 Naive T                 B \n##  GCCTCATGGAATCC.1  GCCTCATGGATACC.1  GCCTCATGGTGAGG.1  GCCTGACTCCAATG.1 \n##       B Activated       CD4 Naive T      CD4 Memory T                NK \n##  GCCTGACTCTCTTA.1  GCCTGACTGACTAC.1  GCCTGACTGAGATA.1  GCCTGACTGCTAAC.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T         CD14 Mono \n##  GCCTGACTTATGCG.1  GCCTGACTTGATGC.1  GCCTGACTTGGATC.1  GCGAAGGAAGTGCT.1 \n##                 B                NK             CD8 T                Mk \n##  GCGAAGGAATTCCT.1  GCGACTCTCTGTAG.1  GCGACTCTCTTCTA.1  GCGACTCTGCGTTA.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono       CD4 Naive T \n##  GCGACTCTTTTCTG.1  GCGAGAGAAGATGA.1  GCGAGAGAGCAAGG.1  GCGAGAGATAAGGA.1 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono         CD16 Mono \n##  GCGAGCACACCAAC.1  GCGAGCACGAGCTT.1  GCGAGCACTCCTTA.1  GCGAGCACTGAACC.1 \n##                 B         CD16 Mono      CD4 Memory T       B Activated \n##  GCGATATGCGACTA.1  GCGATATGGAGGGT.1  GCGATATGTACTCT.1 GCGATATGTGACCA.11 \n##         CD14 Mono         CD16 Mono         CD14 Mono         CD14 Mono \n##  GCGATATGTTGCGA.1 GCGCACGAACACCA.11  GCGCACGAAGTACC.1  GCGCACGACCACAA.1 \n##         CD16 Mono         CD14 Mono       CD4 Naive T         CD14 Mono \n##  GCGCACGAGCTCCT.1  GCGCACGAGGCGAA.1  GCGCACGATATCGG.1  GCGCATCTCAGAAA.1 \n##         CD14 Mono             CD8 T         CD16 Mono         CD14 Mono \n##  GCGCATCTCCCTCA.1  GCGCATCTGGAGCA.1  GCGCGAACACCCAA.1  GCGCGAACCCTTAT.1 \n##         CD14 Mono         CD16 Mono                NK       CD4 Naive T \n##  GCGCGATGAAGAAC.1  GCGCGATGAAGATG.1  GCGCGATGACCCTC.1  GCGCGATGCCTAAG.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono         CD14 Mono \n##  GCGCGATGGCAAGG.1  GCGCGATGTCGTGA.1  GCGGACTGAAAGCA.1  GCGGACTGCTTCTA.1 \n##         CD16 Mono       CD4 Naive T         CD14 Mono         CD14 Mono \n##  GCGGACTGGACAAA.1  GCGGACTGGCAGTT.1  GCGGACTGGCTACA.1  GCGGACTGGTAGGG.1 \n##                 B                Mk         CD14 Mono                DC \n##  GCGGACTGTCTTCA.1  GCGGACTGTTCTGT.1  GCGGAGCTACCTGA.1  GCGGAGCTAGATCC.1 \n##         CD14 Mono         CD16 Mono                 B       CD4 Naive T \n##  GCGGAGCTCGCTAA.1  GCGGAGCTCTAGCA.1  GCGGAGCTGCCCTT.1  GCGGAGCTTCTTTG.1 \n##       T activated       CD4 Naive T       CD4 Naive T      CD4 Memory T \n##  GCGGAGCTTGAGAA.1  GCGGAGCTTGCAAC.1  GCGGCAACGCTGTA.1  GCGGCAACTCTTAC.1 \n##         CD14 Mono         CD14 Mono                DC         CD16 Mono \n##  GCGGGACTCAGAGG.1  GCGGGACTTTCAGG.1  GCGTAAACAAAGTG.1  GCGTAAACCACTGA.1 \n##                 B                 B       CD4 Naive T         CD16 Mono \n##  GCGTAAACCAGCTA.1  GCGTAAACGTTAGC.1  GCGTAATGCTGCTC.1  GCGTAATGGATAGA.1 \n##         CD16 Mono         CD14 Mono                Mk       CD4 Naive T \n##  GCGTAATGGGTAAA.1  GCGTAATGTGCATG.1  GCGTACCTACGCTA.1  GCGTACCTCGTAGT.1 \n##      CD4 Memory T         CD14 Mono                NK             CD8 T \n##  GCGTACCTGTTGCA.1  GCGTATGACTCTAT.1  GCGTATGACTTCCG.1  GCGTATGAGTTGGT.1 \n##                 B         CD14 Mono             CD8 T      CD4 Memory T \n##  GCGTATGATCTCGC.1  GCGTATGATTCATC.1  GCTACAGAAAGCAA.1  GCTACAGAACACAC.1 \n##      CD4 Memory T         CD14 Mono                 B       T activated \n##  GCTACAGACATTCT.1  GCTACAGACTACCC.1  GCTACAGACTAGTG.1  GCTACAGACTGAAC.1 \n##         CD14 Mono      CD4 Memory T      CD4 Memory T             CD8 T \n##  GCTACAGACTTGCC.1  GCTACAGATTCTAC.1  GCTACCTGGAATAG.1  GCTACCTGGGAGTG.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  GCTACCTGTGGTCA.1  GCTACCTGTGGTTG.1  GCTACGCTCGTTAG.1  GCTACGCTCTCCCA.1 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono       T activated \n##  GCTACGCTCTTCGC.1  GCTACGCTGAACTC.1  GCTACGCTGGTACT.1  GCTACGCTTCGACA.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono      CD4 Memory T \n##  GCTACGCTTGCACA.1  GCTAGAACCGCTAA.1  GCTAGAACTTTCAC.1  GCTAGATGAAGGTA.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T                NK \n##  GCTAGATGCGATAC.1  GCTAGATGTCCCGT.1  GCTAGATGTCTTTG.1  GCTAGATGTGTTCT.1 \n##       CD4 Naive T                Mk       CD4 Naive T             CD8 T \n##  GCTAGATGTTTCTG.1  GCTATACTCAGTCA.1  GCTATACTTGACTG.1  GCTCAAGAAGGTCT.1 \n##             CD8 T         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  GCTCAAGAATGGTC.1  GCTCAAGACGTACA.1  GCTCAAGAGGAGCA.1  GCTCAAGAGGGACA.1 \n##                NK         CD14 Mono       CD4 Naive T                 B \n##  GCTCACTGAAAAGC.1 GCTCACTGCTCATT.11  GCTCACTGCTCGCT.1  GCTCACTGGGTTCA.1 \n##         CD14 Mono                 B         CD14 Mono         CD14 Mono \n##  GCTCAGCTAACCTG.1  GCTCAGCTATGTCG.1  GCTCAGCTCGCCTT.1  GCTCAGCTTGCTTT.1 \n##                 B         CD14 Mono         CD16 Mono                NK \n##  GCTCCATGAGCAAA.1  GCTCCATGAGCATC.1  GCTCCATGAGCCTA.1  GCTCCATGCTCATT.1 \n##             CD8 T             CD8 T                NK                 B \n##  GCTCCATGCTGTAG.1  GCTCCATGCTTGTT.1  GCTCCATGGGCAAG.1  GCTCCATGGTCAAC.1 \n##             CD8 T         CD16 Mono         CD16 Mono             CD8 T \n##  GCTCCATGTCAGAC.1  GCTCCATGTCCCAC.1  GCTCGACTCCTAAG.1  GCTCGACTCCTCGT.1 \n##       CD4 Naive T         CD16 Mono             CD8 T         CD14 Mono \n##  GCTCGACTGCATCA.1  GCTCGACTGTCACA.1  GCTCGACTGTTGTG.1  GCTCGACTTTGGTG.1 \n##       CD4 Naive T       CD4 Naive T       CD4 Naive T             CD8 T \n##  GCTGATGAAGCCAT.1  GCTGATGACTCGCT.1  GCTGATGATGGTTG.1  GCTTAACTAAGTGA.1 \n##       T activated       T activated       CD4 Naive T         CD14 Mono \n##  GCTTAACTCACAAC.1  GCTTAACTCTGTAG.1  GCTTAACTGCATCA.1  GCTTAACTTCTCAT.1 \n##       CD4 Naive T         CD16 Mono         CD14 Mono             CD8 T \n##  GCTTGAGAAAGATG.1  GCTTGAGAAGACTC.1  GCTTGAGAAGTACC.1  GCTTGAGAAGTCTG.1 \n##         CD14 Mono         CD14 Mono                NK             CD8 T \n##  GCTTGAGAATGCTG.1  GCTTGAGAGAGGAC.1  GCTTGAGAGTCGTA.1  GCTTGAGATTCGGA.1 \n##      CD4 Memory T       CD4 Naive T       CD4 Naive T                NK \n##  GGAACACTCAGATC.1  GGAACACTCCAGTA.1  GGAACACTGGATCT.1  GGAACACTTCGATG.1 \n##         CD14 Mono         CD16 Mono             CD8 T         CD14 Mono \n##  GGAACACTTCGTAG.1 GGAACACTTTCGGA.11  GGAACTACCCTTAT.1  GGAACTACCTTGCC.1 \n##       CD4 Naive T       CD4 Naive T         CD16 Mono         CD14 Mono \n##  GGAACTACGTTCAG.1  GGAACTACTCCTCG.1  GGAACTTGACACAC.1  GGAACTTGACTGTG.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T       CD4 Naive T \n##  GGAACTTGCACTGA.1  GGAACTTGCGAGAG.1  GGAACTTGCGGGAA.1  GGAACTTGCTACTT.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T         CD14 Mono \n##  GGAACTTGGGGCAA.1  GGAACTTGTCTGGA.1  GGAAGGACAGTCTG.1  GGAAGGACCCATGA.1 \n##       CD4 Naive T       CD4 Naive T       B Activated                 B \n##  GGAAGGTGAGCCAT.1  GGAAGGTGAGTAGA.1  GGAAGGTGCAGGAG.1  GGAAGGTGCCCTCA.1 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono         CD14 Mono \n##  GGAATCTGAGAACA.1  GGAATCTGCTGAAC.1  GGAATCTGGGGACA.1  GGAATGCTCTTGAG.1 \n##      CD4 Memory T                 B             CD8 T             Eryth \n##  GGAATGCTGTAAAG.1  GGAATGCTTGGAGG.1  GGAATGCTTGTTTC.1  GGAATGCTTTCATC.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono       CD4 Naive T \n##  GGAATGCTTTGTGG.1  GGACAACTAGTGTC.1  GGACAACTCCGTAA.1  GGACAACTGAGAGC.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono       CD4 Naive T \n##  GGACAACTGCTCCT.1  GGACAGGAACCTTT.1  GGACAGGAATTCCT.1  GGACAGGACTTAGG.1 \n##         CD14 Mono             CD8 T      CD4 Memory T         CD14 Mono \n##  GGACAGGAGATGAA.1  GGACAGGATTGTGG.1  GGACATTGAAAGCA.1  GGACATTGATGCCA.1 \n##       B Activated         CD14 Mono               pDC         CD16 Mono \n##  GGACATTGCTTGCC.1  GGACATTGCTTGGA.1  GGACATTGTTCTCA.1  GGACCCGACTGTAG.1 \n##                 B         CD14 Mono                DC             CD8 T \n##  GGACCCGAGCGAAG.1  GGACCCGAGTACGT.1  GGACCCGATTATCC.1  GGACCGTGCATTCT.1 \n##         CD16 Mono      CD4 Memory T      CD4 Memory T               pDC \n##  GGACCGTGTCCGTC.1  GGACCTCTACCAGT.1  GGACCTCTACGCAT.1  GGACCTCTACTACG.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  GGACCTCTAGCTAC.1  GGACCTCTCGAACT.1  GGACCTCTGAGGGT.1  GGACCTCTTCCAGA.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono       CD4 Naive T \n##  GGACCTCTTGCACA.1  GGACGAGAAAGGCG.1  GGACGAGAATGGTC.1  GGACGAGACGAACT.1 \n##                NK       CD4 Naive T                 B       CD4 Naive T \n##  GGACGAGAGAGGGT.1  GGACGAGAGCCAAT.1  GGACGAGATGTTTC.1  GGACGAGATTGGTG.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T         CD14 Mono \n##  GGACGCACACGGGA.1  GGACGCACATGCTG.1  GGACGCACCGCCTT.1  GGACGCACTTAGGC.1 \n##         CD16 Mono             CD8 T         CD16 Mono                DC \n##  GGACGCTGAATCGC.1  GGACGCTGACTCTT.1  GGACGCTGCCAAGT.1  GGACGCTGGAATGA.1 \n##         CD16 Mono             CD8 T                 B      CD4 Memory T \n##  GGACGCTGTCGTTT.1  GGACTATGATCGTG.1  GGACTATGCACCAA.1  GGACTATGCTGATG.1 \n##         CD14 Mono                 B         CD14 Mono         CD14 Mono \n##  GGACTATGGACAGG.1  GGACTATGGGAACG.1 GGACTATGGGAGGT.11  GGACTATGGGTCTA.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T      CD4 Memory T \n##  GGACTATGTACTGG.1  GGACTATGTGAGGG.1  GGAGACGAAACGTC.1  GGAGACGAACGTGT.1 \n##      CD4 Memory T       CD4 Naive T      CD4 Memory T         CD14 Mono \n##  GGAGACGAAGATGA.1  GGAGACGAAGGCGA.1  GGAGACGAAGTCTG.1  GGAGACGACTAGCA.1 \n##             CD8 T       CD4 Naive T         CD14 Mono       T activated \n##  GGAGACGACTCCCA.1  GGAGACGATACTCT.1  GGAGACGATTCCGC.1  GGAGAGACATGCTG.1 \n##         CD14 Mono       T activated         CD14 Mono      CD4 Memory T \n##  GGAGAGACCTGTCC.1  GGAGAGACGCTGTA.1 GGAGAGACTAGACC.11  GGAGCAGAAAGGTA.1 \n##       CD4 Naive T       CD4 Naive T                NK               pDC \n##  GGAGCAGAACGGGA.1  GGAGCAGAGAACTC.1  GGAGCAGAGTGCAT.1  GGAGCAGATGCTAG.1 \n##                 B         CD14 Mono         CD16 Mono      CD4 Memory T \n##  GGAGCAGATGCTCC.1  GGAGCAGATTATCC.1  GGAGCCACAAAACG.1  GGAGCCACCATCAG.1 \n##                NK      CD4 Memory T         CD14 Mono       CD4 Naive T \n##  GGAGCCACGCGGAA.1  GGAGCCACGTCATG.1  GGAGGATGGGGAGT.1  GGAGGATGGTGTTG.1 \n##       CD4 Naive T         CD14 Mono      CD4 Memory T         CD14 Mono \n##  GGAGGATGTCATTC.1  GGAGGATGTGTAGC.1  GGAGGCCTACTACG.1  GGAGGCCTAGTACC.1 \n##             CD8 T      CD4 Memory T             Eryth      CD4 Memory T \n##  GGAGGCCTCATCAG.1  GGAGGCCTCCTCAC.1  GGAGGCCTGCATAC.1  GGAGGCCTTCGACA.1 \n##                 B       CD4 Naive T         CD14 Mono         CD14 Mono \n##  GGAGGCCTTTAGGC.1  GGAGGCCTTTGCGA.1  GGAGGCCTTTTACC.1  GGAGGTGAATGCCA.1 \n##         CD14 Mono         CD16 Mono       CD4 Naive T       CD4 Naive T \n##  GGAGGTGACTTCTA.1  GGAGGTGAGCGAGA.1  GGAGGTGAGTGTTG.1  GGAGGTGAGTTACG.1 \n##                Mk         CD14 Mono         CD14 Mono      CD4 Memory T \n##  GGAGTTACAAACGA.1  GGAGTTACACTTTC.1  GGAGTTACAGTGCT.1  GGAGTTACATTCTC.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T      CD4 Memory T \n##  GGAGTTACCAATCG.1  GGAGTTACCACTGA.1  GGAGTTACGGATTC.1  GGAGTTACGTTCTT.1 \n##         CD14 Mono         CD16 Mono       CD4 Naive T             CD8 T \n##  GGAGTTACGTTGCA.1  GGAGTTACTATCGG.1  GGAGTTACTCTACT.1  GGAGTTTGACTCAG.1 \n##               pDC       B Activated       B Activated      CD4 Memory T \n##  GGAGTTTGTGGAAA.1  GGAGTTTGTTCGGA.1  GGATACTGACCGAT.1  GGATACTGAGAAGT.1 \n##      CD4 Memory T       CD4 Naive T      CD4 Memory T         CD14 Mono \n##  GGATACTGAGCCAT.1  GGATACTGCCCACT.1  GGATACTGCCGATA.1  GGATACTGGTCGTA.1 \n##             CD8 T                 B                NK         CD14 Mono \n##  GGATAGCTCGAGAG.1  GGATAGCTGCAGTT.1  GGATAGCTGCCCTT.1  GGATAGCTGTCTGA.1 \n##         CD14 Mono      CD4 Memory T             CD8 T       CD4 Naive T \n##  GGATGTACCCAATG.1  GGATGTACTCGACA.1  GGATGTTGAGATGA.1  GGATGTTGAGCCAT.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T      CD4 Memory T \n##  GGATGTTGATCTCT.1  GGATGTTGGGTGAG.1  GGATGTTGGTATCG.1  GGATGTTGTCAGAC.1 \n##             CD8 T      CD4 Memory T         CD14 Mono       CD4 Naive T \n##  GGATGTTGTTTCGT.1  GGATTGTGACGGTT.1  GGATTGTGACTCAG.1  GGATTGTGACTGGT.1 \n##                 B         CD16 Mono      CD4 Memory T       B Activated \n## GGATTGTGATCGGT.11  GGATTGTGCTTAGG.1  GGATTGTGTCAAGC.1  GGATTGTGTGCAGT.1 \n##      CD4 Memory T             CD8 T         CD16 Mono       CD4 Naive T \n##  GGATTGTGTGTGGT.1  GGATTTCTTCCAAG.1  GGATTTCTTCGCCT.1  GGCAAGGAACGCAT.1 \n##         CD14 Mono       T activated             CD8 T                NK \n##  GGCAAGGATCTATC.1  GGCAATACTCCCGT.1  GGCAATACTGCTTT.1  GGCACGTGAGCGTT.1 \n##                Mk       T activated       CD4 Naive T                NK \n##  GGCACGTGCATTGG.1  GGCACGTGTATGGC.1  GGCACGTGTGGTCA.1  GGCACTCTAAGAAC.1 \n##       T activated       CD4 Naive T       CD4 Naive T                 B \n##  GGCACTCTCGTAAC.1  GGCACTCTCTAGTG.1  GGCACTCTTAGCGT.1  GGCACTCTTGCACA.1 \n##         CD14 Mono                NK      CD4 Memory T         CD14 Mono \n##  GGCACTCTTGGAGG.1  GGCATATGAACGTC.1  GGCATATGATCGTG.1  GGCATATGCCTAAG.1 \n##      CD4 Memory T       CD4 Naive T                NK                 B \n##  GGCATATGTCTATC.1  GGCATATGTCTCGC.1  GGCCACGAATCTCT.1  GGCCACGACCGATA.1 \n##       T activated       CD4 Naive T         CD14 Mono       CD4 Naive T \n##  GGCCACGAGTCCTC.1  GGCCACGAGTTGAC.1  GGCCAGACAAACAG.1  GGCCAGACATGGTC.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono         CD16 Mono \n##  GGCCAGACCATTTC.1  GGCCAGACTAGTCG.1  GGCCAGACTTCATC.1  GGCCCAGAACCCTC.1 \n##         CD16 Mono         CD14 Mono               pDC                NK \n##  GGCCCAGACGACTA.1  GGCCCAGACGTGTA.1  GGCCCAGAGGGCAA.1  GGCCCAGAGTAGGG.1 \n##         CD16 Mono                NK      CD4 Memory T      CD4 Memory T \n##  GGCCCAGATATTCC.1  GGCCGAACCCCTAC.1  GGCCGAACTGTCCC.1  GGCCGATGGCGTTA.1 \n##      CD4 Memory T         CD14 Mono       CD4 Naive T         CD14 Mono \n##  GGCCGATGGTAGGG.1  GGCGACACAAACAG.1  GGCGACACTTCCGC.1  GGCGACTGAGCACT.1 \n##                Mk         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  GGCGACTGCAGAAA.1  GGCGACTGTGACAC.1  GGCGCATGACTCTT.1  GGCGCATGCCACAA.1 \n##         CD14 Mono                 B         CD14 Mono       CD4 Naive T \n##  GGCGCATGCCCGTT.1  GGCGCATGCCTAAG.1  GGCGCATGCGCCTT.1  GGCGCATGCTCAGA.1 \n##         CD14 Mono      CD4 Memory T             CD8 T                 B \n##  GGCGCATGGAACTC.1  GGCGCATGGAGCTT.1  GGCGCATGGCGTTA.1  GGCGCATGTCAGTG.1 \n##         CD14 Mono                 B       CD4 Naive T         CD14 Mono \n##  GGCGCATGTCTATC.1  GGCGCATGTTAGGC.1  GGCGGACTACTCAG.1  GGCGGACTAGCCTA.1 \n##       CD4 Naive T       CD4 Naive T         CD16 Mono       B Activated \n##  GGCGGACTCGAATC.1  GGCGGACTGTATCG.1  GGCGGACTTCGACA.1  GGCGGACTTCGCTC.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono       CD4 Naive T \n##  GGCTAAACATCTCT.1  GGCTAAACCGAACT.1  GGCTAAACCTATGG.1  GGCTAAACTCGCCT.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  GGCTAAACTGGAAA.1  GGCTAATGAGCGTT.1  GGCTAATGCTCGAA.1  GGCTAATGGAGATA.1 \n##         CD14 Mono                DC         CD14 Mono                NK \n##  GGCTAATGGCGTTA.1  GGCTAATGTCACGA.1  GGCTACCTAACAGA.1  GGCTACCTAGAATG.1 \n##       B Activated      CD4 Memory T                 B         CD14 Mono \n##  GGCTACCTGGTTAC.1  GGCTACCTTCCGAA.1  GGCTCACTACTTTC.1  GGCTCACTTCCAAG.1 \n##             CD8 T         CD14 Mono       CD4 Naive T             CD8 T \n##  GGGAACGAGGTTTG.1  GGGAAGACATCGTG.1  GGGAAGACCCGCTT.1  GGGAAGACCCTACC.1 \n##         CD14 Mono         CD14 Mono         CD16 Mono         CD14 Mono \n##  GGGAAGACCTGAGT.1 GGGAAGACGAATCC.11  GGGAAGACGAATGA.1  GGGAAGACGGTTCA.1 \n##                NK         CD14 Mono         CD14 Mono         CD14 Mono \n##  GGGAAGACTCAGAC.1  GGGAAGTGAGAGTA.1  GGGAAGTGTATTCC.1  GGGACCACATACCG.1 \n##             CD8 T                 B       CD4 Naive T       T activated \n##  GGGACCACCCTCGT.1  GGGACCACCCTTGC.1 GGGACCACCTTCGC.11  GGGACCACTTCCAT.1 \n##         CD16 Mono             CD8 T      CD4 Memory T             CD8 T \n##  GGGACCTGGAGGCA.1  GGGACCTGGCCATA.1  GGGACCTGGGATCT.1  GGGACCTGTACGCA.1 \n##         CD14 Mono      CD4 Memory T      CD4 Memory T      CD4 Memory T \n##  GGGACCTGTCTTCA.1  GGGACCTGTTCCGC.1  GGGATGGACTGACA.1  GGGATGGATCCAGA.1 \n##      CD4 Memory T       B Activated      CD4 Memory T      CD4 Memory T \n## GGGATGGATGCCCT.11  GGGATGGATGTGCA.1  GGGATTACAAAGCA.1  GGGATTACCCCACT.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T         CD14 Mono \n##  GGGCAAGAACGCAT.1  GGGCAAGAACTGTG.1  GGGCAAGAAGCTAC.1  GGGCAAGAATCGAC.1 \n##         CD14 Mono         CD14 Mono         CD16 Mono       CD4 Naive T \n##  GGGCAAGAGCGAGA.1  GGGCAAGATCCCAC.1  GGGCACACACCGAT.1  GGGCACACACCTCC.1 \n##       CD4 Naive T       T activated      CD4 Memory T       CD4 Naive T \n##  GGGCACACCTGTCC.1  GGGCACACGAGATA.1  GGGCACACTATCGG.1  GGGCAGCTGAGAGC.1 \n##      CD4 Memory T       CD4 Naive T         CD16 Mono       CD4 Naive T \n##  GGGCAGCTTGAACC.1  GGGCCAACCAGATC.1  GGGCCAACCGCTAA.1  GGGCCAACCTAGCA.1 \n##      CD4 Memory T         CD14 Mono      CD4 Memory T         CD14 Mono \n##  GGGCCAACGAGAGC.1  GGGCCAACTGTGGT.1  GGGCCATGAACCAC.1  GGGCCATGAAGTAG.1 \n##         CD14 Mono       T activated         CD14 Mono         CD14 Mono \n##  GGGCCATGCAGAAA.1  GGGCCATGCAGTCA.1  GGGCCATGCATCAG.1  GGGCCATGCATGAC.1 \n##                 B         CD14 Mono                 B       T activated \n##  GGGCCATGCCCTTG.1  GGGCCATGCTATTC.1  GGGCCATGCTGTAG.1  GGGCCATGTAGCCA.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono                Mk \n##  GGGTAACTCTGAGT.1  GGGTAACTGTACGT.1  GGGTAACTGTCTAG.1  GGGTAACTTGAGAA.1 \n##         CD14 Mono             CD8 T         CD16 Mono       CD4 Naive T \n##  GGGTTAACCATGCA.1  GGGTTAACCGAATC.1  GGGTTAACGTAGCT.1  GGGTTATGAAGTGA.1 \n##       T activated         CD14 Mono         CD16 Mono                NK \n##  GGGTTATGGTTGGT.1 GGGTTATGTGCAAC.11  GGTAAAGAAATGCC.1  GGTAAAGAACGGGA.1 \n##       B Activated                 B               pDC         CD14 Mono \n##  GGTACAACCCCGTT.1  GGTACAACCGAACT.1  GGTACAACCGCAAT.1  GGTACAACGTCTTT.1 \n##             CD8 T         CD14 Mono         CD14 Mono       T activated \n##  GGTACATGAGCAAA.1  GGTACATGATGGTC.1  GGTACATGCAGAAA.1  GGTACATGCCCTCA.1 \n##       CD4 Naive T       CD4 Naive T       T activated             CD8 T \n##  GGTACATGCCGATA.1  GGTACATGGAATCC.1  GGTACATGGACGAG.1  GGTACTGAAGGTTC.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T             CD8 T \n##  GGTACTGAGACTAC.1  GGTAGTACAGCATC.1  GGTAGTACAGTTCG.1  GGTAGTACGAATAG.1 \n##       CD4 Naive T                NK         CD14 Mono                NK \n##  GGTAGTACGGTAGG.1  GGTAGTACGTAGGG.1  GGTAGTACGTCTTT.1  GGTAGTACTCACGA.1 \n##       CD4 Naive T         CD16 Mono       CD4 Naive T       T activated \n##  GGTATCGAAGAACA.1  GGTATCGACTTCGC.1  GGTATCGAGACACT.1  GGTATCGAGTGCTA.1 \n##                NK                NK         CD14 Mono       CD4 Naive T \n##  GGTATCGATCGCAA.1  GGTATCGATGCCAA.1  GGTATGACACACTG.1  GGTATGACACGTAC.1 \n##      CD4 Memory T               pDC                NK                 B \n##  GGTATGACAGTAGA.1  GGTATGACGAAAGT.1  GGTATGACTTGTGG.1  GGTCAAACAACCTG.1 \n##       B Activated         CD14 Mono                 B       T activated \n##  GGTCAAACACACCA.1  GGTCAAACCGTAGT.1  GGTCAAACCGTTGA.1  GGTCAAACGGGCAA.1 \n##       B Activated      CD4 Memory T       CD4 Naive T       CD4 Naive T \n##  GGTCAAACGTAAGA.1  GGTCTAGAAGTGTC.1  GGTCTAGACATACG.1  GGTCTAGACCCACT.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono         CD14 Mono \n##  GGTCTAGAGTCATG.1  GGTCTAGAGTCTGA.1  GGTCTAGATGTCCC.1  GGTCTAGATTGTGG.1 \n##                 B         CD14 Mono       CD4 Naive T         CD16 Mono \n##  GGTGATACAGTAGA.1  GGTGATACCCGCTT.1  GGTGATACCCTCGT.1  GGTGGAGAACCATG.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono         CD14 Mono \n##  GGTGGAGACGCAAT.1  GGTGGAGAGAATCC.1  GGTGGAGAGCATAC.1 GGTGGAGAGGAACG.11 \n##         CD14 Mono         CD16 Mono               pDC         CD14 Mono \n##  GGTGGAGATGCGTA.1  GGTGGAGATGTCAG.1  GGTTGAACAGTCAC.1  GGTTGAACGAACCT.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono               pDC \n##  GGTTGAACGCTTAG.1  GGTTGAACTGCAGT.1  GGTTGAACTGCGTA.1  GGTTGAACTTTCTG.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T                DC \n##  GGTTTACTGCGGAA.1  GGTTTACTGTGTCA.1  GGTTTACTTAAGCC.1  GGTTTACTTCGTGA.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono               pDC \n##  GTAACGTGCAACCA.1  GTAACGTGCACACA.1  GTAACGTGGCCAAT.1  GTAACGTGTATCTC.1 \n##                NK             CD8 T         CD14 Mono       CD4 Naive T \n##  GTAAGCACCCTTGC.1  GTAAGCACCGTGTA.1  GTAAGCACCTCCAC.1  GTAAGCACGCATAC.1 \n##       CD4 Naive T      CD4 Memory T      CD4 Memory T                 B \n##  GTAAGCACGTAAGA.1  GTAAGCACTAGAAG.1 GTAAGCACTGATGC.11  GTAAGCACTGGGAG.1 \n##         CD14 Mono       CD4 Naive T                Mk                NK \n##  GTAAGCTGCAGCTA.1  GTAAGCTGGATAAG.1  GTAAGCTGGGTGAG.1  GTAATAACACACGT.1 \n##      CD4 Memory T                 B       CD4 Naive T             CD8 T \n##  GTAATAACTGACTG.1  GTAATAACTTTACC.1  GTAATATGACGACT.1  GTAATATGAGGGTG.1 \n##      CD4 Memory T       CD4 Naive T                 B       CD4 Naive T \n##  GTAATATGCTGATG.1  GTAATATGGAATAG.1  GTAATATGGTTCAG.1  GTAATATGTTACCT.1 \n##         CD14 Mono       T activated         CD14 Mono         CD14 Mono \n##  GTACAGTGACACAC.1  GTACAGTGGACAGG.1  GTACAGTGTCCGTC.1  GTACCCTGAACCGT.1 \n##         CD14 Mono       T activated      CD4 Memory T             CD8 T \n##  GTACCCTGCTCCAC.1  GTACCCTGGCGTAT.1  GTACGAACCCTAAG.1  GTACGAACGCAGAG.1 \n##       CD4 Naive T             CD8 T             CD8 T      CD4 Memory T \n##  GTACGAACGGTAGG.1  GTACGAACTACAGC.1  GTACGAACTTGCTT.1  GTACGTGAAAGTGA.1 \n##                 B             CD8 T                 B         CD16 Mono \n##  GTACGTGATAGCGT.1  GTACGTGATGCAGT.1  GTACTACTAGATCC.1  GTACTACTCATGCA.1 \n##         CD16 Mono       CD4 Naive T                DC         CD16 Mono \n##  GTACTACTGCCTTC.1  GTACTACTGTTTGG.1  GTACTTTGAAAGTG.1  GTACTTTGAACAGA.1 \n##         CD14 Mono         CD14 Mono       T activated       B Activated \n##  GTACTTTGGCAGAG.1  GTACTTTGGGAACG.1  GTACTTTGGTGTAC.1  GTACTTTGTGAGGG.1 \n##                NK         CD16 Mono             CD8 T       B Activated \n##  GTAGACTGCTTCGC.1  GTAGACTGGCTATG.1  GTAGACTGGCTGTA.1  GTAGACTGTGGATC.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono       T activated \n##  GTAGACTGTGTCAG.1  GTAGACTGTTTACC.1 GTAGCAACAAGCCT.11  GTAGCAACAATGCC.1 \n##                NK             CD8 T         CD14 Mono                Mk \n##  GTAGCAACAGCAAA.1  GTAGCAACATTCCT.1  GTAGCAACCTGTCC.1  GTAGCAACCTTGAG.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T         CD14 Mono \n##  GTAGCAACTAGACC.1  GTAGCAACTCAGAC.1  GTAGCAACTGTGAC.1  GTAGCAACTTTCAC.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono                 B \n##  GTAGCATGAGTGTC.1  GTAGCATGCATGAC.1  GTAGCATGGAACCT.1  GTAGCATGGTGTTG.1 \n##      CD4 Memory T      CD4 Memory T                NK       CD4 Naive T \n## GTAGCCCTAAGATG.11 GTAGCCCTAGACTC.11  GTAGCCCTCTTCCG.1 GTAGCCCTCTTGAG.11 \n##             CD8 T      CD4 Memory T         CD14 Mono      CD4 Memory T \n##  GTAGCCCTTGCTCC.1  GTAGCCCTTTGTGG.1  GTAGCTGACGTAAC.1  GTAGCTGAGCAGTT.1 \n##         CD14 Mono                 B                NK         CD14 Mono \n##  GTAGCTGAGGTGTT.1  GTAGGTACCACTTT.1  GTAGGTACCAGGAG.1  GTAGGTACTCTACT.1 \n##                DC         CD14 Mono                NK         CD14 Mono \n##  GTAGGTACTCTCGC.1  GTAGTCGAAGAGTA.1  GTAGTCGACCACAA.1  GTAGTCGACCTTCG.1 \n##         CD16 Mono         CD14 Mono         CD14 Mono                 B \n##  GTAGTCGACGAACT.1  GTAGTCGACGCATA.1  GTAGTCGATCCCAC.1  GTAGTCGATGCCCT.1 \n##       CD4 Naive T      CD4 Memory T       B Activated                 B \n##  GTAGTCGATGGAGG.1  GTAGTCGATTTCTG.1  GTAGTGACATCGGT.1  GTAGTGACCAGTTG.1 \n##                Mk         CD14 Mono         CD16 Mono         CD14 Mono \n##  GTAGTGACGCCTTC.1  GTAGTGACGGTAAA.1  GTAGTGACTGTTTC.1  GTAGTGTGAACGAA.1 \n##         CD14 Mono       CD4 Naive T         CD16 Mono         CD14 Mono \n##  GTAGTGTGAAGATG.1  GTAGTGTGCCGATA.1  GTAGTGTGCTTGAG.1  GTATCACTACGTGT.1 \n##         CD14 Mono       B Activated                 B                 B \n##  GTATCACTAGAGAT.1  GTATCACTCGGTAT.1  GTATCACTCTAGCA.1 GTATCACTGCGAGA.11 \n##                 B                 B         CD14 Mono       T activated \n##  GTATCTACAGTGTC.1  GTATCTACCCGCTT.1  GTATCTACGCCATA.1  GTATCTACGGAACG.1 \n##                 B       T activated                 B         CD14 Mono \n## GTATCTACTGACTG.11  GTATCTACTTCCGC.1  GTATCTACTTCTAC.1  GTATGGTGCGACTA.1 \n##         CD14 Mono      CD4 Memory T         CD16 Mono      CD4 Memory T \n##  GTATGGTGCTGTAG.1  GTATGGTGGAATGA.1  GTATGGTGGCATCA.1  GTATGGTGTGGAGG.1 \n##       CD4 Naive T       CD4 Naive T                NK       CD4 Naive T \n##  GTATGGTGTTCTGT.1  GTATTAGACCAGTA.1  GTATTAGACGTAAC.1  GTATTAGAGTCATG.1 \n##                 B      CD4 Memory T             CD8 T                DC \n##  GTATTCACATACCG.1  GTATTCACCCTATT.1  GTATTCACTCCCAC.1  GTATTCACTGACAC.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono       CD4 Naive T \n##  GTCAACGAACCACA.1  GTCAACGAAGTGCT.1  GTCAACGACCGATA.1  GTCAACGAGATACC.1 \n##       CD4 Naive T                NK         CD14 Mono             CD8 T \n##  GTCAACGAGGATTC.1  GTCAACGATAGACC.1  GTCAATCTATGCTG.1  GTCAATCTCCCGTT.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono       CD4 Naive T \n##  GTCAATCTCTTCGC.1  GTCAATCTTCCAAG.1  GTCAATCTTCCTGC.1  GTCACAGAAAACAG.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono             CD8 T \n##  GTCACAGAACCACA.1  GTCACAGAACGCAT.1  GTCACAGAATCGAC.1  GTCACAGATCGTTT.1 \n##      CD4 Memory T                 B       CD4 Naive T      CD4 Memory T \n##  GTCACCTGCCTAAG.1  GTCACCTGCTTTAC.1  GTCACCTGTTCGTT.1  GTCATACTACCAAC.1 \n##         CD14 Mono         CD16 Mono             CD8 T                Mk \n##  GTCATACTACGCAT.1  GTCATACTAGCTAC.1  GTCATACTAGTCGT.1  GTCATACTATGGTC.1 \n##                 B       CD4 Naive T             CD8 T       T activated \n##  GTCATACTCGAGTT.1  GTCATACTGCTGAT.1  GTCATACTGGTAGG.1  GTCATACTGTGCTA.1 \n##         CD14 Mono         CD16 Mono       CD4 Naive T         CD14 Mono \n## GTCATACTTAGACC.11  GTCATACTTCCAGA.1  GTCATACTTTTCAC.1  GTCCAAGAACCTTT.1 \n##                 B      CD4 Memory T      CD4 Memory T                 B \n##  GTCCAAGACCAAGT.1  GTCCAAGACTACGA.1  GTCCAAGAGATAGA.1  GTCCAAGATCAGGT.1 \n##       T activated       CD4 Naive T      CD4 Memory T         CD14 Mono \n##  GTCCAAGATGCTAG.1  GTCCACACACTAGC.1  GTCCACACCGTAGT.1  GTCCACACGAAACA.1 \n##      CD4 Memory T         CD14 Mono       CD4 Naive T               pDC \n##  GTCCACACTTCTCA.1  GTCCACTGACTACG.1  GTCCACTGGTGCTA.1  GTCCACTGTAGTCG.1 \n##         CD14 Mono         CD16 Mono             CD8 T         CD14 Mono \n##  GTCCACTGTTACCT.1  GTCCACTGTTCGTT.1  GTCCAGCTATTTCC.1  GTCCAGCTTGACAC.1 \n##       CD4 Naive T      CD4 Memory T      CD4 Memory T             CD8 T \n##  GTCCAGCTTGCCAA.1  GTCCCATGCTCAGA.1 GTCCCATGCTTGTT.11  GTCCCATGTGTCGA.1 \n##                DC         CD14 Mono         CD14 Mono       CD4 Naive T \n##  GTCGAATGACAGTC.1  GTCGAATGAGCTAC.1  GTCGAATGCAGAAA.1  GTCGAATGCATGGT.1 \n##      CD4 Memory T       CD4 Naive T      CD4 Memory T      CD4 Memory T \n##  GTCGAATGCCCGTT.1  GTCGAATGGGATTC.1  GTCGAATGTTGACG.1  GTCGACCTAGTCAC.1 \n##       CD4 Naive T             CD8 T      CD4 Memory T       CD4 Naive T \n##  GTCGACCTTCGTGA.1  GTCGACCTTTCACT.1  GTCGACCTTTGGCA.1  GTCGCACTCTCAAG.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono                NK \n##  GTCGCACTTCGCAA.1  GTCGCACTTTGCGA.1  GTCTAACTACCATG.1  GTCTAACTACTCAG.1 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono         CD14 Mono \n##  GTCTAACTTAAGCC.1  GTCTAACTTCCTCG.1  GTCTAACTTTTCTG.1  GTCTAGGAACGGGA.1 \n##         CD14 Mono       CD4 Naive T                 B                NK \n##  GTCTAGGAAGGCGA.1  GTCTAGGACCTATT.1  GTCTAGGACGTACA.1  GTCTAGGAGCGATT.1 \n##       T activated       B Activated         CD14 Mono       CD4 Naive T \n## GTCTAGGATGCTAG.11  GTCTAGGATGTGCA.1  GTCTGAGAAGCATC.1  GTCTGAGACAACCA.1 \n##             CD8 T         CD14 Mono      CD4 Memory T      CD4 Memory T \n##  GTCTGAGAGGTATC.1  GTCTGAGATCCCAC.1  GTGAACACACTTTC.1  GTGAACACAGAGAT.1 \n##       CD4 Naive T                 B         CD14 Mono      CD4 Memory T \n##  GTGAACACAGAGTA.1  GTGAACACCTAGTG.1  GTGAACACGAATAG.1  GTGAACACGGGATG.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T      CD4 Memory T \n##  GTGACAACAAGTGA.1  GTGACAACCAGGAG.1  GTGACAACCCAACA.1  GTGACAACTTCCCG.1 \n##      CD4 Memory T      CD4 Memory T       CD4 Naive T         CD14 Mono \n##  GTGACCCTAGCCTA.1  GTGACCCTGAACTC.1  GTGACCCTGCGGAA.1 GTGACCCTTAAGCC.11 \n##      CD4 Memory T                 B         CD14 Mono       B Activated \n##  GTGACCCTTGAAGA.1  GTGAGGGAACAGCT.1  GTGAGGGAATCAGC.1  GTGAGGGACCGTAA.1 \n##       CD4 Naive T       T activated       CD4 Naive T             CD8 T \n##  GTGAGGGACGACTA.1  GTGAGGGACTCGAA.1  GTGAGGGAGCTGTA.1  GTGAGGGATAACCG.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono       T activated \n##  GTGAGGGATCCTAT.1  GTGATCGATCTCCG.1  GTGATCGATGAGGG.1  GTGATGACCAACTG.1 \n##             CD8 T       B Activated       T activated       B Activated \n##  GTGATGACCACACA.1  GTGATGACGAATCC.1  GTGATGACGCATCA.1  GTGATGACGTAAGA.1 \n##      CD4 Memory T                NK         CD14 Mono      CD4 Memory T \n##  GTGATTCTCCAAGT.1  GTGATTCTCCATGA.1  GTGATTCTCCCACT.1 GTGATTCTGTACGT.11 \n##             CD8 T       CD4 Naive T       CD4 Naive T                 B \n##  GTGATTCTGTTCTT.1  GTGATTCTTTACCT.1  GTGCAAACAGGTTC.1  GTGCAAACGGACGA.1 \n##         CD16 Mono         CD14 Mono               pDC      CD4 Memory T \n##  GTGCAAACTCGTGA.1  GTGCAAACTGTCCC.1  GTGCCACTCGCTAA.1  GTGCCACTCTACCC.1 \n##       T activated         CD14 Mono       CD4 Naive T                 B \n##  GTGCCACTGTCAAC.1  GTGCCACTTAGACC.1  GTGCTAGAAGAGTA.1  GTGCTAGACGAACT.1 \n##       CD4 Naive T                 B       CD4 Naive T         CD14 Mono \n##  GTGCTAGAGAAAGT.1  GTGCTAGAGAGGTG.1  GTGCTAGATCTTTG.1  GTGCTAGATTCGCC.1 \n##         CD14 Mono         CD16 Mono         CD14 Mono             CD8 T \n##  GTGCTAGATTTCAC.1  GTGGAGGACTCGCT.1  GTGGAGGAGGGACA.1  GTGGATTGAGTACC.1 \n##      CD4 Memory T       CD4 Naive T       CD4 Naive T      CD4 Memory T \n##  GTGGATTGAGTCTG.1  GTGGATTGCCAACA.1  GTGGATTGCGTTGA.1  GTGGATTGTAAAGG.1 \n##                NK                 B      CD4 Memory T         CD14 Mono \n##  GTGGATTGTGGCAT.1  GTGGTAACGTAAGA.1  GTGGTAACTACTGG.1  GTGGTAACTCGTAG.1 \n##         CD14 Mono         CD14 Mono             CD8 T                 B \n##  GTGTACGACCCGTT.1  GTGTACGAGAAGGC.1  GTGTACGAGCCTTC.1  GTGTACGAGGGATG.1 \n##      CD4 Memory T         CD14 Mono                DC       T activated \n##  GTGTAGTGAGCGGA.1 GTGTAGTGCCTACC.11  GTGTAGTGCTGTCC.1  GTGTAGTGTCGCTC.1 \n##       T activated      CD4 Memory T       CD4 Naive T         CD14 Mono \n##  GTGTAGTGTGGTTG.1  GTGTATCTAGCACT.1  GTGTATCTATCTCT.1  GTGTATCTCCCTCA.1 \n##       T activated       CD4 Naive T         CD14 Mono                 B \n##  GTGTATCTCCTTTA.1  GTGTATCTCTGGTA.1  GTGTATCTGGTAGG.1  GTGTGATGAAACGA.1 \n##      CD4 Memory T      CD4 Memory T       CD4 Naive T         CD14 Mono \n##  GTGTGATGAAGTAG.1  GTGTGATGCTGTAG.1  GTGTGATGGCATAC.1  GTTAAAACGAGACG.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono               pDC \n##  GTTAAAACTCCCGT.1 GTTAAAACTGCATG.11  GTTAAAACTTCTCA.1  GTTAAAACTTGGTG.1 \n##         CD14 Mono         CD16 Mono      CD4 Memory T             CD8 T \n##  GTTAAATGACCTTT.1 GTTAAATGCGCCTT.11  GTTAAATGGAAAGT.1  GTTAAATGGGTTAC.1 \n##      CD4 Memory T                Mk                NK       T activated \n##  GTTAAATGTACAGC.1  GTTAAATGTTGCTT.1  GTTAACCTCCTTGC.1  GTTAACCTCCTTTA.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono             CD8 T \n##  GTTACGGAACGTAC.1  GTTACGGACCTCGT.1  GTTACGGACTACGA.1  GTTACGGAGTCTAG.1 \n##         CD14 Mono      CD4 Memory T       CD4 Naive T                 B \n##  GTTACGGATGAGAA.1  GTTACTACGCGAAG.1  GTTACTACGCTATG.1  GTTACTACTGCAAC.1 \n##       T activated       CD4 Naive T         CD16 Mono         CD14 Mono \n##  GTTAGGTGACCTAG.1  GTTAGGTGAGGCGA.1  GTTAGGTGCAGGAG.1  GTTAGGTGGTTGGT.1 \n##      CD4 Memory T             CD8 T      CD4 Memory T         CD14 Mono \n##  GTTAGGTGTTTGCT.1  GTTAGTCTATCGGT.1  GTTAGTCTGAGGGT.1  GTTAGTCTGATAGA.1 \n##         CD14 Mono         CD14 Mono                Mk                 B \n##  GTTATAGAATTTCC.1  GTTATAGACCAAGT.1  GTTATAGACTCGAA.1  GTTATAGAGAGGAC.1 \n##         CD14 Mono                Mk       CD4 Naive T      CD4 Memory T \n##  GTTATAGAGCCAAT.1  GTTATAGATTTCTG.1  GTTATCTGACACGT.1  GTTATCTGCCAAGT.1 \n##                Mk       T activated       CD4 Naive T       CD4 Naive T \n##  GTTATCTGGCGAAG.1  GTTATCTGGGCGAA.1  GTTATGCTCATCAG.1  GTTATGCTCCTCCA.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono       CD4 Naive T \n##  GTTATGCTCTACGA.1  GTTATGCTGAGGTG.1  GTTATGCTTCTCTA.1  GTTATGCTTTCCCG.1 \n##         CD14 Mono                 B                 B         CD14 Mono \n##  GTTCAACTCCACCT.1  GTTCAACTGAATGA.1  GTTCAACTGCGGAA.1 GTTCAACTGCTAAC.11 \n##      CD4 Memory T       CD4 Naive T                 B       CD4 Naive T \n##  GTTCAACTGTTGGT.1  GTTCAACTTAGACC.1  GTTCAACTTTCTAC.1  GTTCAGGAACCATG.1 \n##       CD4 Naive T       CD4 Naive T         CD16 Mono       T activated \n##  GTTCAGGAAGAGTA.1  GTTCAGGACGGGAA.1  GTTCAGGACTGATG.1  GTTCAGGAGTAGGG.1 \n##         CD14 Mono         CD14 Mono             CD8 T             CD8 T \n##  GTTCATACAAAGTG.1  GTTCATACAGGGTG.1  GTTCATACATTCGG.1  GTTCATACATTCTC.1 \n##       CD4 Naive T       CD4 Naive T       B Activated       B Activated \n##  GTTCATACTAGACC.1  GTTCATACTCGTAG.1  GTTCATACTTCGGA.1  GTTGACGAACACCA.1 \n##      CD4 Memory T         CD14 Mono                NK                Mk \n##  GTTGACGAATCGGT.1  GTTGACGACATTGG.1  GTTGACGACCCGTT.1  GTTGACGACGCAAT.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T       CD4 Naive T \n##  GTTGACGACTTGTT.1  GTTGACGAGCAGTT.1  GTTGACGATAAGCC.1  GTTGACGATGTTTC.1 \n##       CD4 Naive T                Mk         CD14 Mono                 B \n##  GTTGAGTGAAAGTG.1  GTTGATCTACACCA.1  GTTGATCTACTCTT.1  GTTGATCTAGCCAT.1 \n##       CD4 Naive T         CD14 Mono      CD4 Memory T         CD16 Mono \n##  GTTGATCTTACTTC.1  GTTGATCTTTAGGC.1  GTTGATCTTTTCTG.1  GTTGGATGAAACGA.1 \n##         CD14 Mono       CD4 Naive T                 B                 B \n##  GTTGGATGAAGGCG.1  GTTGGATGACTCAG.1  GTTGGATGAGCCTA.1  GTTGGATGAGCTCA.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T                 B \n##  GTTGGATGCTACGA.1  GTTGGATGCTCATT.1  GTTGGATGGAACCT.1  GTTGGATGGACTAC.1 \n##         CD14 Mono         CD14 Mono                NK       CD4 Naive T \n##  GTTGGATGTAGCCA.1  GTTGGATGTGGGAG.1  GTTGTACTAGCGTT.1  GTTGTACTCCTCAC.1 \n##                 B                NK         CD16 Mono             CD8 T \n##  GTTGTACTGTGTAC.1  GTTTAAGAACACGT.1  GTTTAAGACACTCC.1  GTTTAAGACGTTAG.1 \n##      CD4 Memory T         CD14 Mono         CD16 Mono                 B \n##  GTTTAAGACTCCCA.1  GTTTAAGACTCTTA.1  GTTTAAGACTTGTT.1  GTTTAAGAGACGAG.1 \n##         CD14 Mono       CD4 Naive T             CD8 T       CD4 Naive T \n##  GTTTAAGAGAGCAG.1  GTTTAAGAGTAAGA.1  TAAACAACACAGTC.1  TAAACAACAGAACA.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T             CD8 T \n##  TAAACAACCGTACA.1  TAAACAACGAGATA.1  TAAACAACGGACAG.1  TAAAGACTAGATCC.1 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono         CD14 Mono \n##  TAAAGACTAGTTCG.1  TAAAGACTCGTTGA.1  TAAAGACTTCGACA.1  TAAAGACTTCTAGG.1 \n##      CD4 Memory T                 B       CD4 Naive T       CD4 Naive T \n##  TAAAGACTTCTCGC.1  TAAAGTTGATTTCC.1  TAAAGTTGCCGATA.1  TAAAGTTGGGTGAG.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono       CD4 Naive T \n##  TAAAGTTGGTCGTA.1  TAAAGTTGTCCTTA.1  TAAAGTTGTCTATC.1  TAAAGTTGTTGTGG.1 \n##         CD14 Mono       CD4 Naive T      CD4 Memory T         CD14 Mono \n##  TAAAGTTGTTTGTC.1  TAAATCGACTCAGA.1  TAAATCGAGAGGAC.1  TAAATCGATAACGC.1 \n##         CD14 Mono      CD4 Memory T                NK      CD4 Memory T \n##  TAAATGTGACGTAC.1  TAAATGTGGAAGGC.1  TAAATGTGTCCTTA.1  TAAATGTGTTTGGG.1 \n##                NK                 B       T activated         CD14 Mono \n##  TAACAATGACTGTG.1  TAACAATGCGGGAA.1  TAACAATGGTCACA.1  TAACAATGGTCTTT.1 \n##      CD4 Memory T         CD16 Mono       CD4 Naive T         CD14 Mono \n##  TAACACCTAGAGAT.1  TAACACCTAGGTCT.1  TAACACCTTCCCAC.1  TAACATGACATTGG.1 \n##       T activated       CD4 Naive T      CD4 Memory T         CD14 Mono \n##  TAACATGACCTATT.1  TAACATGAGCGTAT.1  TAACATGAGTGCTA.1  TAACCGGACCGAAT.1 \n##       CD4 Naive T      CD4 Memory T       CD4 Naive T         CD14 Mono \n##  TAACCGGACTCGCT.1  TAACCGGACTCTTA.1  TAACCGGACTGTGA.1  TAACCGGACTTCCG.1 \n##             CD8 T       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  TAACCGGAGCTACA.1  TAACCGGATAAAGG.1  TAACCGGATCGCTC.1  TAACCGGATGAGAA.1 \n##       B Activated      CD4 Memory T       T activated         CD14 Mono \n##  TAACCGGATTGCTT.1  TAACCGGATTTACC.1  TAACGTCTATCTTC.1  TAACGTCTGAAAGT.1 \n##      CD4 Memory T         CD14 Mono       CD4 Naive T      CD4 Memory T \n##  TAACGTCTGAACCT.1  TAACGTCTGACAGG.1  TAACGTCTGGGAGT.1  TAACGTCTTCTAGG.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T         CD14 Mono \n##  TAACTAGAACGGGA.1  TAACTAGATGCAGT.1  TAACTAGATTTCTG.1  TAACTCACATTCCT.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  TAACTCACTCTCAT.1  TAACTCACTTGCAG.1  TAAGAACTCCCAAA.1  TAAGAGGAAAAAGC.1 \n##      CD4 Memory T             CD8 T                 B                NK \n##  TAAGAGGATTAGGC.1  TAAGATACGTGTCA.1  TAAGATACTCACGA.1 TAAGATACTGTCCC.11 \n##         CD16 Mono         CD14 Mono       T activated       CD4 Naive T \n##  TAAGATTGAGATGA.1  TAAGATTGATAAGG.1  TAAGATTGATGGTC.1  TAAGATTGCCACCT.1 \n##         CD16 Mono         CD14 Mono         CD14 Mono      CD4 Memory T \n##  TAAGCGTGCACTAG.1  TAAGCGTGCTGCAA.1  TAAGCGTGGACAGG.1  TAAGCGTGGACGTT.1 \n##                 B      CD4 Memory T                 B         CD14 Mono \n##  TAAGCGTGGCGTAT.1  TAAGCGTGGGGAGT.1  TAAGCGTGTGTGAC.1  TAAGCTCTACCATG.1 \n##                 B         CD14 Mono       CD4 Naive T         CD14 Mono \n##  TAAGCTCTAGTCAC.1  TAAGCTCTAGTGTC.1  TAAGCTCTGGTGAG.1  TAAGCTCTGTCTAG.1 \n##       CD4 Naive T         CD14 Mono       T activated       CD4 Naive T \n##  TAAGCTCTTAGAGA.1  TAAGCTCTTTGGCA.1  TAAGGCTGAAGCAA.1  TAAGGCTGACGGGA.1 \n##       CD4 Naive T         CD14 Mono                NK      CD4 Memory T \n##  TAAGGCTGATCGTG.1  TAAGGCTGCACAAC.1  TAAGGCTGCCCTCA.1  TAAGGCTGGAAAGT.1 \n##         CD14 Mono         CD14 Mono                DC      CD4 Memory T \n## TAAGGCTGTCAAGC.11  TAAGGCTGTCCTGC.1  TAAGGCTGTGTCGA.1  TAAGGGCTCAATCG.1 \n##      CD4 Memory T       T activated       CD4 Naive T       B Activated \n##  TAAGTAACAGAAGT.1  TAAGTAACAGAGTA.1  TAAGTAACCGCATA.1  TAAGTAACCGTTGA.1 \n##                 B             CD8 T             CD8 T         CD14 Mono \n##  TAAGTAACGAGGCA.1  TAAGTAACTGTGGT.1  TAAGTCCTACCAGT.1  TAAGTCCTCTACTT.1 \n##      CD4 Memory T                NK       CD4 Naive T       CD4 Naive T \n##  TAAGTCCTGGTCTA.1  TAAGTCCTGTACAC.1  TAATCCACACGTAC.1  TAATCCACATGTCG.1 \n##       CD4 Naive T             CD8 T       CD4 Naive T       CD4 Naive T \n## TAATCCACCTCTAT.11  TAATCCACTTCGCC.1  TAATCGCTTTCCAT.1  TAATGAACAGACTC.1 \n##         CD14 Mono       CD4 Naive T             Eryth       CD4 Naive T \n##  TAATGAACGAAGGC.1  TAATGAACGCATAC.1  TAATGAACGTTCAG.1  TAATGAACGTTGAC.1 \n##      CD4 Memory T       CD4 Naive T      CD4 Memory T                 B \n##  TAATGAACTGGCAT.1  TAATGATGACCTGA.1  TAATGATGAGGGTG.1  TAATGATGCGACAT.1 \n##         CD14 Mono      CD4 Memory T       CD4 Naive T         CD16 Mono \n##  TAATGATGGCGAGA.1  TAATGATGGGCGAA.1  TAATGCCTACGTAC.1  TAATGCCTCCACCT.1 \n##         CD16 Mono         CD14 Mono         CD14 Mono         CD16 Mono \n##  TAATGCCTCCATAG.1  TAATGCCTTACTTC.1  TAATGCCTTGTGAC.1  TAATGTGAAGATGA.1 \n##       CD4 Naive T             CD8 T         CD16 Mono         CD16 Mono \n##  TAATGTGACACAAC.1  TAATGTGAGCGGAA.1 TAATGTGAGGTCAT.11  TAATGTGATAACGC.1 \n##      CD4 Memory T      CD4 Memory T                NK       CD4 Naive T \n##  TAATGTGATTCATC.1  TAATGTGATTCGTT.1  TACAAATGACGCAT.1  TACAAATGACGTTG.1 \n##         CD16 Mono                 B         CD14 Mono                NK \n##  TACAAATGCGAATC.1  TACAAATGGCGAAG.1  TACAAATGTACGCA.1  TACAAATGTTGCTT.1 \n##      CD4 Memory T       CD4 Naive T                Mk         CD16 Mono \n##  TACAATGACATTCT.1  TACAATGAGCGGAA.1  TACAATGAGTACGT.1  TACAATGATGAGCT.1 \n##         CD14 Mono             CD8 T         CD14 Mono         CD14 Mono \n##  TACAATGATGGAGG.1  TACAATGATTCAGG.1  TACACACTCCACCT.1  TACACACTTAACCG.1 \n##         CD14 Mono       T activated       T activated             CD8 T \n##  TACACACTTTGGTG.1  TACATAGAATCACG.1  TACATAGACTGAAC.1  TACATAGATGGCAT.1 \n##             CD8 T         CD14 Mono         CD14 Mono       T activated \n##  TACATCACGAATGA.1  TACATCACGCAGAG.1  TACATCACTAGCCA.1  TACATCACTGATGC.1 \n##         CD16 Mono       T activated         CD14 Mono         CD14 Mono \n##  TACATCACTTCTTG.1  TACCATTGACGTAC.1  TACCATTGGGCGAA.1  TACCGAGAAACCAC.1 \n##      CD4 Memory T         CD14 Mono      CD4 Memory T       CD4 Naive T \n##  TACCGAGAAACTGC.1  TACCGAGAACACAC.1  TACCGAGAACTGTG.1  TACCGAGACGAGTT.1 \n##      CD4 Memory T       B Activated         CD14 Mono         CD16 Mono \n##  TACCGAGACGGGAA.1  TACCGAGACTTACT.1  TACCGAGAGTCGTA.1  TACCGAGATCCTAT.1 \n##      CD4 Memory T       CD4 Naive T             Eryth       CD4 Naive T \n##  TACCGCTGCCGTAA.1  TACCGCTGCCGTTC.1  TACCGCTGCTAGAC.1  TACCGCTGGCTTAG.1 \n##       CD4 Naive T      CD4 Memory T       T activated       CD4 Naive T \n##  TACCGCTGTTCTCA.1  TACCGCTGTTGCTT.1  TACCGGCTATTCGG.1  TACCGGCTTCGCTC.1 \n##             CD8 T         CD14 Mono       T activated       CD4 Naive T \n##  TACCGGCTTCGTAG.1  TACCGGCTTCTAGG.1  TACGACGAAAGCAA.1  TACGACGACCTAAG.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T       B Activated \n##  TACGACGACGTAGT.1  TACGACGACTCAAG.1  TACGACGACTGTGA.1  TACGACGAGCTACA.1 \n##                Mk       T activated       CD4 Naive T       T activated \n##  TACGACGAGTGTCA.1  TACGACGATTCGTT.1  TACGACGATTTGGG.1  TACGAGACATGCTG.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono       CD4 Naive T \n##  TACGAGACCTATTC.1  TACGAGTGAATCGC.1  TACGAGTGCTAGTG.1  TACGAGTGCTGGTA.1 \n##       CD4 Naive T                 B         CD14 Mono         CD14 Mono \n##  TACGAGTGGTACCA.1  TACGAGTGTACAGC.1  TACGAGTGTAGCGT.1  TACGATCTAAAGCA.1 \n##       CD4 Naive T       CD4 Naive T       T activated       CD4 Naive T \n##  TACGATCTGGAGCA.1  TACGATCTGTCGAT.1  TACGATCTTTACTC.1  TACGCAGAACACAC.1 \n##             CD8 T       CD4 Naive T         CD16 Mono                NK \n##  TACGCAGACCGTAA.1  TACGCAGACTATTC.1  TACGCAGACTTATC.1  TACGCAGACTTGGA.1 \n##                 B                 B         CD16 Mono       CD4 Naive T \n##  TACGCAGAGGTCTA.1  TACGCAGATACTCT.1  TACGCAGATTGCAG.1  TACGCCACCGAATC.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono         CD16 Mono \n##  TACGCCACCGTAAC.1  TACGCCACGGGCAA.1  TACGCCACTCAGGT.1  TACGCGCTAAAACG.1 \n##                DC         CD14 Mono         CD14 Mono         CD14 Mono \n##  TACGCGCTACCATG.1  TACGCGCTACTAGC.1  TACGCGCTAGAAGT.1  TACGCGCTCTATGG.1 \n##             CD8 T         CD14 Mono         CD14 Mono         CD14 Mono \n##  TACGCGCTGAATAG.1  TACGCGCTGGTGAG.1  TACGCGCTTGTCAG.1  TACGGAACCACTCC.1 \n##      CD4 Memory T       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  TACGGAACCCTCCA.1  TACGGAACTGGAAA.1  TACGGCCTACCAAC.1  TACGGCCTAGAAGT.1 \n##      CD4 Memory T      CD4 Memory T         CD14 Mono                 B \n##  TACGGCCTCATGGT.1  TACGGCCTCTCGAA.1  TACGGCCTGCTCCT.1  TACGTACTTAAGCC.1 \n##      CD4 Memory T       CD4 Naive T                NK         CD14 Mono \n##  TACGTTACAGATGA.1  TACGTTACGAATAG.1  TACGTTACGTTGGT.1  TACGTTACTTTCGT.1 \n##      CD4 Memory T                 B       CD4 Naive T         CD14 Mono \n##  TACTAAGACTAGAC.1  TACTAAGATCTCTA.1  TACTAAGATTCAGG.1  TACTACACAAGGTA.1 \n##         CD14 Mono       T activated       T activated       CD4 Naive T \n##  TACTACACACGGAG.1  TACTACACAGGCGA.1  TACTACACCAATCG.1  TACTACACTCTACT.1 \n##         CD14 Mono                NK       CD4 Naive T         CD14 Mono \n##  TACTACTGCCTCGT.1  TACTACTGGAATCC.1  TACTACTGGCATAC.1  TACTACTGGCTTAG.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  TACTACTGGTCGTA.1  TACTCAACACACGT.1  TACTCAACAGTGTC.1  TACTCAACATCGGT.1 \n##       CD4 Naive T       T activated      CD4 Memory T       CD4 Naive T \n##  TACTCAACCATTGG.1  TACTCAACCTACCC.1  TACTCCCTACTGGT.1  TACTCCCTGACAAA.1 \n##             CD8 T       CD4 Naive T       CD4 Naive T       T activated \n## TACTCCCTGCATCA.11  TACTCCCTTCATTC.1  TACTCCCTTGCCTC.1  TACTCCCTTGCTTT.1 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono             CD8 T \n##  TACTCTGAAGAGTA.1  TACTCTGAAGTGTC.1  TACTCTGACAGCTA.1  TACTCTGACGTACA.1 \n##                NK       CD4 Naive T       CD4 Naive T                DC \n##  TACTCTGACTGGTA.1  TACTCTGAGCTCCT.1  TACTCTGAGTTGAC.1  TACTCTGATTCACT.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  TACTGGGACTGAGT.1  TACTGTTGAGAAGT.1  TACTGTTGATAAGG.1  TACTGTTGATTCGG.1 \n##       CD4 Naive T             CD8 T       CD4 Naive T       CD4 Naive T \n##  TACTGTTGCGCATA.1  TACTGTTGTACAGC.1  TACTGTTGTCAGTG.1  TACTGTTGTCGTGA.1 \n##       CD4 Naive T       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  TACTGTTGTCGTTT.1  TACTTGACGCATCA.1  TACTTGACGGCAAG.1  TACTTGACTCTGGA.1 \n##                 B         CD14 Mono                 B       CD4 Naive T \n##  TACTTGACTTTGGG.1  TACTTTCTAATGCC.1  TACTTTCTAGGGTG.1  TACTTTCTATCGAC.1 \n##       CD4 Naive T       T activated       CD4 Naive T       CD4 Naive T \n##  TACTTTCTCCCGTT.1  TACTTTCTCCCTCA.1  TACTTTCTGAATCC.1  TACTTTCTTCAGAC.1 \n##      CD4 Memory T             CD8 T         CD14 Mono      CD4 Memory T \n##  TACTTTCTTTCGGA.1  TACTTTCTTTGTCT.1  TAGAAACTGCAAGG.1  TAGAAACTTCAGGT.1 \n##       T activated         CD14 Mono         CD16 Mono                 B \n##  TAGAAACTTCCTAT.1  TAGAATACTGCACA.1  TAGAATACTGGTCA.1  TAGAATTGGACAGG.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono      CD4 Memory T \n##  TAGAATTGGGGATG.1  TAGAATTGGGTATC.1  TAGAATTGTCGATG.1  TAGAATTGTCTACT.1 \n##       T activated       CD4 Naive T         CD14 Mono      CD4 Memory T \n## TAGAATTGTTTGTC.11  TAGACGTGAGGAGC.1  TAGACGTGCAAAGA.1  TAGACGTGCGAACT.1 \n##         CD14 Mono       CD4 Naive T                NK         CD14 Mono \n##  TAGACGTGCTAGAC.1  TAGACGTGTGAAGA.1  TAGACGTGTGAGAA.1  TAGACGTGTGAGGG.1 \n##                 B       CD4 Naive T             CD8 T         CD16 Mono \n##  TAGACGTGTTCCGC.1  TAGAGAGAACGGAG.1  TAGAGAGAGTTCTT.1  TAGAGAGATGCTGA.1 \n##       T activated      CD4 Memory T         CD14 Mono             CD8 T \n##  TAGAGCACACGGGA.1  TAGAGCACCAGGAG.1  TAGAGCACCCTTGC.1  TAGAGCACGCTACA.1 \n##       T activated       CD4 Naive T       CD4 Naive T      CD4 Memory T \n## TAGAGCACGCTTAG.11  TAGAGCACGGCAAG.1  TAGAGCACGGGATG.1  TAGAGCACTCCTGC.1 \n##             CD8 T         CD14 Mono         CD16 Mono      CD4 Memory T \n##  TAGATCCTACTCAG.1  TAGATCCTAGTGTC.1  TAGATCCTCCGTTC.1  TAGATCCTTATCTC.1 \n##       CD4 Naive T       CD4 Naive T       CD4 Naive T       CD4 Naive T \n##  TAGATCCTTGAGAA.1  TAGATCCTTTCACT.1  TAGATTGAACCTAG.1  TAGATTGAACGTAC.1 \n##       CD4 Naive T      CD4 Memory T             CD8 T             Eryth \n##  TAGATTGAAGTCAC.1  TAGATTGACTTGTT.1  TAGCATCTCTGTAG.1  TAGCATCTTGCCAA.1 \n##                NK                NK       T activated       CD4 Naive T \n##  TAGCCCACAAACAG.1  TAGCCCACAATGCC.1  TAGCCCACATGCTG.1  TAGCCCACTTCGGA.1 \n##                NK         CD14 Mono         CD14 Mono                NK \n##  TAGCCCTGACCTCC.1  TAGCCCTGCGAGAG.1  TAGCCCTGGATGAA.1  TAGCCCTGTATCGG.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T      CD4 Memory T \n##  TAGCCCTGTGTCGA.1  TAGCCCTGTTCCGC.1  TAGCCGCTAACGAA.1  TAGCCGCTCCTTAT.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T         CD14 Mono \n##  TAGCCGCTGTACCA.1  TAGCGATGAACGGG.1  TAGCGATGGGGACA.1  TAGCGATGGTCTGA.1 \n##       CD4 Naive T       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  TAGCGATGTCGACA.1  TAGCTACTCTGTGA.1  TAGCTACTGCTATG.1  TAGCTACTGTCAAC.1 \n##         CD16 Mono      CD4 Memory T         CD16 Mono         CD14 Mono \n##  TAGCTACTTTTGTC.1  TAGGACTGACGCAT.1  TAGGACTGCAGAAA.1  TAGGACTGCTCTTA.1 \n##       CD4 Naive T                 B                DC       CD4 Naive T \n##  TAGGACTGTTCGGA.1  TAGGAGCTCATTCT.1  TAGGCAACAGATCC.1  TAGGCAACTAACGC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono      CD4 Memory T \n##  TAGGCATGAGGTTC.1  TAGGCATGATGCTG.1  TAGGCATGCTATTC.1  TAGGCTGAAATCGC.1 \n##                 B         CD16 Mono                NK             CD8 T \n##  TAGGCTGAAGAGTA.1  TAGGCTGACTCAGA.1 TAGGCTGAGCATAC.11  TAGGCTGAGCTGAT.1 \n##       CD4 Naive T             CD8 T         CD16 Mono         CD14 Mono \n##  TAGGCTGAGTAAGA.1  TAGGCTGAGTGCAT.1  TAGGCTGATCTCCG.1  TAGGCTGATTGAGC.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono         CD14 Mono \n##  TAGGGACTATCAGC.1 TAGGGACTTGCATG.11  TAGGGACTTTACTC.1  TAGGTCGACTTCGC.1 \n##         CD14 Mono                DC                 B       CD4 Naive T \n##  TAGGTCGAGTCTGA.1  TAGGTCGATGCATG.1  TAGGTGACACGCTA.1  TAGGTGACATAAGG.1 \n##         CD14 Mono      CD4 Memory T      CD4 Memory T      CD4 Memory T \n##  TAGGTGACCCAATG.1  TAGGTGACTGTCAG.1  TAGGTGACTTGCAG.1  TAGGTGTGATCGTG.1 \n##                Mk       B Activated         CD14 Mono                 B \n##  TAGGTGTGCTATTC.1  TAGGTGTGGAGAGC.1  TAGGTGTGGTCTGA.1  TAGGTGTGTCAAGC.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T             CD8 T \n##  TAGGTGTGTGCCCT.1  TAGGTTCTCGACAT.1  TAGGTTCTCTGGTA.1  TAGGTTCTGACACT.1 \n##               pDC         CD14 Mono                 B         CD14 Mono \n##  TAGGTTCTGGACGA.1  TAGGTTCTGTTCTT.1 TAGGTTCTTCTACT.11  TAGGTTCTTTATCC.1 \n##      CD4 Memory T         CD14 Mono       T activated       CD4 Naive T \n## TAGTAAACACACGT.11  TAGTAAACTTGCAG.1  TAGTAATGAGCACT.1  TAGTAATGGAGCAG.1 \n##      CD4 Memory T       T activated             CD8 T         CD14 Mono \n##  TAGTAATGGATGAA.1  TAGTAATGTTGAGC.1  TAGTACCTCTAGTG.1  TAGTACCTGCTACA.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T         CD14 Mono \n##  TAGTACCTTAACCG.1  TAGTACCTTCTGGA.1  TAGTACCTTGCGTA.1  TAGTATGAACTGTG.1 \n##      CD4 Memory T       CD4 Naive T       B Activated      CD4 Memory T \n##  TAGTATGACTTCTA.1 TAGTATGAGTACCA.11  TAGTATGAGTTTCT.1  TAGTCACTCTACGA.1 \n##      CD4 Memory T       CD4 Naive T       T activated       CD4 Naive T \n##  TAGTCACTGAGATA.1  TAGTCACTTGCATG.1  TAGTCACTTGGCAT.1  TAGTCGGAAAAGTG.1 \n##       CD4 Naive T       B Activated         CD16 Mono       CD4 Naive T \n##  TAGTCGGAGATAAG.1  TAGTCGGAGGTCAT.1  TAGTCGGATGACCA.1  TAGTCTTGAGCACT.1 \n##         CD14 Mono       CD4 Naive T               pDC       CD4 Naive T \n##  TAGTCTTGCGGTAT.1  TAGTCTTGGAATCC.1  TAGTCTTGGCAAGG.1  TAGTCTTGGTAGCT.1 \n##      CD4 Memory T      CD4 Memory T         CD14 Mono       CD4 Naive T \n##  TAGTCTTGTCCTAT.1  TAGTCTTGTGTGAC.1  TAGTCTTGTTCATC.1  TAGTGGTGAACCAC.1 \n##         CD16 Mono         CD14 Mono       CD4 Naive T      CD4 Memory T \n##  TAGTGGTGACGACT.1  TAGTTCACAGTCAC.1  TAGTTCACCGACAT.1  TAGTTCACTCGTTT.1 \n##         CD14 Mono                Mk         CD14 Mono       CD4 Naive T \n##  TAGTTCACTGTGCA.1  TAGTTGCTCCAACA.1  TAGTTGCTCCAAGT.1  TAGTTGCTTCGCAA.1 \n##               pDC         CD14 Mono       T activated             CD8 T \n##  TATAAGACACAGTC.1  TATAAGACCACACA.1  TATAAGACCCACCT.1  TATAAGACCCTGTC.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono      CD4 Memory T \n##  TATAAGACCGTACA.1  TATAAGACGAATAG.1  TATAAGACTGTAGC.1  TATAAGACTTCGTT.1 \n##             Eryth      CD4 Memory T       CD4 Naive T             CD8 T \n##  TATAAGTGACCTCC.1  TATAAGTGGATAAG.1  TATAAGTGGCTGTA.1  TATAAGTGGGTCTA.1 \n##       CD4 Naive T       CD4 Naive T      CD4 Memory T         CD14 Mono \n##  TATACAGACCTTCG.1  TATACAGACGAGAG.1  TATACAGACTACTT.1  TATACAGATGTTCT.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T         CD16 Mono \n##  TATACCACACACCA.1  TATACCACTGCAGT.1  TATACCACTGCGTA.1  TATACGCTAGAATG.1 \n##         CD16 Mono       T activated                 B                 B \n##  TATACGCTAGATCC.1  TATACGCTCTAAGC.1  TATACGCTGATACC.1  TATAGATGAGAGGC.1 \n##                NK                 B      CD4 Memory T             CD8 T \n##  TATAGATGGGGAGT.1  TATAGATGTTGTCT.1  TATAGCCTAGACTC.1  TATAGCCTAGAGTA.1 \n##         CD14 Mono      CD4 Memory T      CD4 Memory T       CD4 Naive T \n##  TATAGCCTCAATCG.1  TATAGCCTCACACA.1  TATAGCCTCCATAG.1  TATAGCCTCTGAGT.1 \n##         CD14 Mono         CD16 Mono         CD14 Mono      CD4 Memory T \n##  TATAGCCTGACGTT.1  TATAGCCTTGGCAT.1  TATCAAGAACTTTC.1  TATCAAGAGTAAAG.1 \n##                DC         CD16 Mono         CD14 Mono       CD4 Naive T \n##  TATCACTGATGCCA.1  TATCACTGCATGCA.1  TATCACTGCGTGAT.1  TATCACTGGAAGGC.1 \n##       CD4 Naive T                DC         CD14 Mono      CD4 Memory T \n##  TATCACTGGTACGT.1  TATCACTGGTCTGA.1  TATCACTGGTTACG.1  TATCACTGTCAGTG.1 \n##         CD14 Mono      CD4 Memory T       CD4 Naive T                DC \n##  TATCACTGTCTCCG.1  TATCACTGTGGGAG.1  TATCACTGTTGTCT.1  TATCAGCTAGTACC.1 \n##       CD4 Naive T                 B         CD14 Mono             CD8 T \n##  TATCAGCTGGACTT.1  TATCAGCTTGCACA.1  TATCCAACAACGAA.1  TATCCAACCAACTG.1 \n##       CD4 Naive T         CD14 Mono      CD4 Memory T       CD4 Naive T \n##  TATCCAACCAGTTG.1  TATCCAACCCAGTA.1  TATCCAACCTCGAA.1  TATCCAACCTTAGG.1 \n##         CD16 Mono       CD4 Naive T      CD4 Memory T       CD4 Naive T \n##  TATCCAACCTTGCC.1  TATCCAACGAACCT.1  TATCCAACGAATAG.1  TATCCAACGAGGCA.1 \n##       CD4 Naive T                 B         CD14 Mono         CD14 Mono \n##  TATCCAACTAGCCA.1  TATCCAACTATCTC.1  TATCCAACTCAGTG.1  TATCCAACTCCGTC.1 \n##               pDC      CD4 Memory T         CD14 Mono       B Activated \n##  TATCCAACTTTGGG.1  TATCCTGAAAGCCT.1  TATCCTGAACCTGA.1  TATCCTGAAGGTTC.1 \n##       T activated         CD14 Mono       CD4 Naive T             CD8 T \n##  TATCCTGAATCGTG.1  TATCCTGAATGTGC.1  TATCCTGAGGTAAA.1  TATCCTGATACTGG.1 \n##       CD4 Naive T      CD4 Memory T                Mk       CD4 Naive T \n##  TATCCTGATCTCCG.1  TATCCTGATCTCTA.1  TATCCTGATGACCA.1  TATCCTGATGGCAT.1 \n##                 B                NK         CD14 Mono         CD14 Mono \n##  TATCCTGATTCGGA.1  TATCCTGATTGAGC.1  TATCGACTAAAAGC.1  TATCGACTCAACTG.1 \n##         CD16 Mono                Mk                 B       CD4 Naive T \n##  TATCGACTCAATCG.1  TATCGACTCTTGCC.1  TATCGACTGGAGTG.1  TATCGACTGTAGCT.1 \n##                 B         CD14 Mono      CD4 Memory T                 B \n##  TATCGTACACCTAG.1  TATCGTACACGCAT.1  TATCGTACACTAGC.1  TATCGTACCACTCC.1 \n##         CD14 Mono                 B       T activated         CD14 Mono \n##  TATCGTACTTATCC.1  TATCTCGACGTAAC.1  TATCTCGATACTGG.1  TATCTGACGAGATA.1 \n##         CD14 Mono      CD4 Memory T                 B       CD4 Naive T \n##  TATCTGACTCCCAC.1  TATCTTCTCAGAGG.1  TATCTTCTTAGCCA.1  TATCTTCTTTGGTG.1 \n##                NK       CD4 Naive T       CD4 Naive T      CD4 Memory T \n##  TATGAATGGTACGT.1  TATGAATGGTCGTA.1  TATGAATGGTTTGG.1  TATGAATGTACTCT.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono      CD4 Memory T \n##  TATGAATGTATGCG.1  TATGAATGTCACGA.1  TATGCGGACTGAGT.1  TATGCGGATCTATC.1 \n##                 B      CD4 Memory T               pDC      CD4 Memory T \n##  TATGGGACACCACA.1  TATGGGACGGATCT.1  TATGGGACGGTAAA.1  TATGGGACGTTAGC.1 \n##                 B         CD14 Mono      CD4 Memory T                NK \n##  TATGGGACTCCCGT.1  TATGGGACTTGCAG.1  TATGGGACTTGGTG.1  TATGGGTGCCCGTT.1 \n##         CD14 Mono      CD4 Memory T       B Activated         CD14 Mono \n##  TATGGGTGTCGACA.1  TATGGGTGTCGATG.1  TATGGGTGTTCCCG.1  TATGGTCTCACTTT.1 \n##       CD4 Naive T             Eryth       CD4 Naive T       T activated \n##  TATGGTCTGCTATG.1  TATGGTCTGTATGC.1  TATGGTCTTCCCAC.1  TATGTCACAGTAGA.1 \n##      CD4 Memory T                NK      CD4 Memory T      CD4 Memory T \n##  TATGTCACATCGAC.1  TATGTCACCATTGG.1  TATGTCACCCGTTC.1  TATGTCACGCGTTA.1 \n##       T activated                 B      CD4 Memory T             CD8 T \n##  TATGTCTGCACAAC.1  TATGTCTGCACACA.1  TATGTCTGGTTGTG.1  TATGTCTGTCGACA.1 \n##         CD14 Mono         CD16 Mono         CD16 Mono         CD16 Mono \n##  TATGTCTGTCTCGC.1  TATGTGCTAGTGTC.1  TATGTGCTGATAAG.1  TATGTGCTTCCTAT.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono         CD14 Mono \n##  TATGTGCTTGCAGT.1  TATTGCTGACACAC.1  TATTGCTGATTGGC.1  TATTGCTGCCAATG.1 \n##         CD14 Mono       B Activated             CD8 T      CD4 Memory T \n##  TATTGCTGCTAGAC.1  TATTGCTGCTCCCA.1  TATTGCTGTGACAC.1  TATTTCCTCGTACA.1 \n##       B Activated       CD4 Naive T         CD14 Mono         CD14 Mono \n##  TATTTCCTGCATAC.1  TATTTCCTTGCTTT.1  TCAACACTAAGGGC.1  TCAACACTCGAATC.1 \n##         CD14 Mono       T activated         CD14 Mono                 B \n##  TCAACACTGACACT.1  TCAACACTGTTACG.1  TCAACACTTTACTC.1  TCAAGGACCCACAA.1 \n##             CD8 T                NK         CD14 Mono      CD4 Memory T \n##  TCAAGGACGGGTGA.1  TCAAGGACGTTGTG.1  TCAAGGTGAAGAGT.1  TCAAGGTGAGGTTC.1 \n##         CD14 Mono       T activated      CD4 Memory T       CD4 Naive T \n##  TCAAGGTGGAATGA.1  TCAAGGTGTAGTCG.1  TCAAGGTGTGGTGT.1  TCAAGGTGTTGACG.1 \n##         CD16 Mono         CD16 Mono             CD8 T       CD4 Naive T \n## TCAAGTCTGAAAGT.11  TCAAGTCTTCAGAC.1  TCAATAGAACTAGC.1  TCAATAGAATTCCT.1 \n##                NK       CD4 Naive T       CD4 Naive T       CD4 Naive T \n##  TCAATAGACCTTAT.1  TCAATAGAGGCAAG.1  TCAATAGAGGGAGT.1  TCAATCACCATCAG.1 \n##         CD14 Mono       T activated       CD4 Naive T         CD14 Mono \n## TCAATCACGGGATG.11  TCAATCACGTCTTT.1  TCAATCACGTTCGA.1  TCAATCACTTAGGC.1 \n##                NK             Eryth       CD4 Naive T       T activated \n##  TCACATACAGAATG.1  TCACATACAGCTCA.1  TCACATACAGGAGC.1  TCACATACCAGAAA.1 \n##      CD4 Memory T       CD4 Naive T       CD4 Naive T      CD4 Memory T \n##  TCACATACCATTGG.1  TCACATACTTGTCT.1  TCACCCGAAGATGA.1  TCACCCGACGTGTA.1 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono         CD14 Mono \n##  TCACCCGACTATTC.1  TCACCCGAGTAGCT.1  TCACCGTGAAGCAA.1  TCACCGTGACCCAA.1 \n##       CD4 Naive T         CD14 Mono       T activated      CD4 Memory T \n##  TCACCGTGCAAAGA.1  TCACCGTGCCATAG.1  TCACCGTGCCTAAG.1  TCACCGTGCGTTAG.1 \n##       CD4 Naive T       CD4 Naive T      CD4 Memory T       CD4 Naive T \n##  TCACCGTGGGGACA.1 TCACCGTGTTGCTT.11  TCACCTCTAGGTCT.1  TCACCTCTATGTCG.1 \n##         CD16 Mono                 B         CD14 Mono         CD14 Mono \n##  TCACCTCTGGTGAG.1  TCACGAGAAGCGGA.1  TCACGAGACGAACT.1  TCACGAGACGGTAT.1 \n##       B Activated       CD4 Naive T         CD14 Mono         CD14 Mono \n##  TCACGAGAGGGTGA.1  TCACGAGAGTCGTA.1  TCACGAGAGTTGGT.1  TCACGAGATACTGG.1 \n##                DC       B Activated             CD8 T         CD14 Mono \n##  TCACGAGATCGTAG.1  TCACTATGCAGAGG.1  TCACTATGGAATCC.1  TCACTATGGTCTTT.1 \n##       CD4 Naive T       CD4 Naive T       CD4 Naive T             CD8 T \n##  TCACTATGTATGCG.1  TCACTATGTCTCGC.1  TCAGACGAAAAGTG.1  TCAGACGAAAGCAA.1 \n##      CD4 Memory T         CD14 Mono             CD8 T         CD14 Mono \n##  TCAGACGAGATACC.1  TCAGACGATGCTTT.1  TCAGAGACCCTATT.1  TCAGAGACCTCATT.1 \n##      CD4 Memory T         CD14 Mono       CD4 Naive T         CD14 Mono \n## TCAGAGACCTCTAT.11  TCAGAGACCTCTTA.1  TCAGCAGATACAGC.1  TCAGCGCTCTACGA.1 \n##       CD4 Naive T             CD8 T      CD4 Memory T         CD14 Mono \n##  TCAGCGCTCTGATG.1  TCAGCGCTGTAGGG.1  TCAGCGCTTTCGCC.1  TCAGGATGACCATG.1 \n##             CD8 T         CD14 Mono                NK               pDC \n##  TCAGGATGACGCAT.1  TCAGGATGAGAGTA.1  TCAGGATGAGTACC.1  TCAGGATGCGGGAA.1 \n##       B Activated         CD16 Mono         CD14 Mono         CD14 Mono \n##  TCAGGATGCGTGAT.1  TCAGTGGACATCAG.1  TCAGTGGACCTTGC.1  TCAGTGGAGCTGAT.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  TCAGTGGAGTTAGC.1  TCAGTGGATACAGC.1  TCAGTTACAATCGC.1  TCAGTTACACTTTC.1 \n##             CD8 T             CD8 T         CD14 Mono       CD4 Naive T \n## TCAGTTACAGCAAA.11  TCAGTTACATCGGT.1  TCAGTTACCCAACA.1  TCAGTTACCTACTT.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono      CD4 Memory T \n##  TCAGTTACTCCTAT.1  TCAGTTACTGCACA.1  TCAGTTACTGGAGG.1  TCAGTTACTTTCGT.1 \n##         CD16 Mono         CD14 Mono      CD4 Memory T      CD4 Memory T \n##  TCATCAACACCAGT.1 TCATCAACGTTCTT.11  TCATCAACGTTGGT.1  TCATCATGACGGGA.1 \n##       CD4 Naive T             CD8 T         CD14 Mono      CD4 Memory T \n##  TCATCATGCTAAGC.1  TCATCATGGTAAGA.1  TCATCATGTACTTC.1  TCATCATGTTCGTT.1 \n##                NK         CD14 Mono         CD16 Mono       CD4 Naive T \n##  TCATCATGTTCTCA.1  TCATCCCTACGGAG.1  TCATCCCTAGTACC.1  TCATCCCTCAGAGG.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n## TCATCCCTTAAAGG.11  TCATGTACACTACG.1  TCATGTACATCTCT.1  TCATGTACATGGTC.1 \n##                NK         CD16 Mono       CD4 Naive T       CD4 Naive T \n##  TCATGTACCCTAAG.1  TCATGTACGCAAGG.1  TCATGTACGTAAAG.1  TCATTCGAAAGCCT.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T             CD8 T \n##  TCATTCGATACTCT.1  TCATTCGATATTCC.1  TCATTCGATCGCTC.1  TCATTGACACTAGC.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  TCATTGACCGGTAT.1  TCCACGTGAACGTC.1  TCCACGTGACACAC.1  TCCACGTGATGCTG.1 \n##                 B                NK         CD16 Mono         CD14 Mono \n##  TCCACGTGCGCTAA.1  TCCACGTGCTACCC.1  TCCACGTGGACGGA.1  TCCACGTGGTAGCT.1 \n##             CD8 T         CD14 Mono         CD14 Mono      CD4 Memory T \n##  TCCACGTGTGACTG.1  TCCACGTGTTCCAT.1 TCCACTCTAAAGCA.11  TCCAGAGACAAGCT.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono       CD4 Naive T \n##  TCCAGAGACCCGTT.1  TCCAGAGAGCCCTT.1  TCCATAACACCACA.1  TCCATAACTCACCC.1 \n##                Mk       CD4 Naive T      CD4 Memory T         CD14 Mono \n##  TCCATAACTCAGGT.1  TCCATCCTCGAACT.1  TCCATCCTCTCCCA.1  TCCATCCTGCAGTT.1 \n##         CD16 Mono       T activated      CD4 Memory T         CD14 Mono \n##  TCCATCCTGGTTCA.1  TCCATCCTGTGTTG.1  TCCATCCTTTGGCA.1  TCCCACGACATGAC.1 \n##         CD16 Mono       CD4 Naive T       CD4 Naive T         CD16 Mono \n## TCCCACGACTGGTA.11  TCCCACGAGTCATG.1  TCCCACGAGTTCGA.1  TCCCACGATCGTAG.1 \n##                Mk         CD14 Mono                 B       CD4 Naive T \n##  TCCCAGACCATACG.1  TCCCAGACCCCAAA.1  TCCCAGACCCTACC.1  TCCCAGACTAGAGA.1 \n##                 B      CD4 Memory T         CD14 Mono                NK \n##  TCCCAGACTAGTCG.1  TCCCAGACTCGATG.1  TCCCATCTAAGTAG.1  TCCCATCTAGAAGT.1 \n##       CD4 Naive T                Mk      CD4 Memory T      CD4 Memory T \n##  TCCCATCTCGAATC.1  TCCCATCTGATAAG.1  TCCCATCTTCGATG.1  TCCCGAACAACAGA.1 \n##         CD14 Mono         CD14 Mono             CD8 T       CD4 Naive T \n##  TCCCGAACAGGTTC.1  TCCCGAACCATCAG.1  TCCCGAACCGTTGA.1  TCCCGAACGTATGC.1 \n##       CD4 Naive T             CD8 T       B Activated         CD14 Mono \n##  TCCCGAACGTTGGT.1  TCCCGAACTTCGTT.1  TCCCGATGACCGAT.1  TCCCGATGCCCAAA.1 \n##       B Activated             Eryth         CD14 Mono      CD4 Memory T \n##  TCCCGATGCCGATA.1  TCCCGATGGAGGGT.1  TCCCGATGGTTCTT.1  TCCCGATGTACTGG.1 \n##         CD14 Mono      CD4 Memory T       CD4 Naive T      CD4 Memory T \n##  TCCCGATGTTGTCT.1  TCCCTACTATCTTC.1  TCCCTACTTAACCG.1  TCCGAAGACTTACT.1 \n##         CD14 Mono                DC         CD14 Mono      CD4 Memory T \n##  TCCGAAGATGCTCC.1  TCCGAAGATGTCGA.1  TCCGAGCTACCCAA.1  TCCGAGCTAGGTCT.1 \n##             CD8 T      CD4 Memory T                 B       CD4 Naive T \n##  TCCGAGCTCTCCAC.1  TCCGAGCTTAGAGA.1  TCCGGACTCTCTAT.1  TCCGGACTGACGAG.1 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono         CD14 Mono \n##  TCCGGACTGAGGCA.1  TCCGGACTTGTCAG.1  TCCGGACTTTCTAC.1  TCCTAAACTCCTTA.1 \n##      CD4 Memory T         CD14 Mono                 B         CD16 Mono \n##  TCCTAAACTGGAAA.1  TCCTAAACTTTCTG.1 TCCTAATGAAGCCT.11  TCCTAATGCAACTG.1 \n##         CD14 Mono       CD4 Naive T         CD16 Mono         CD14 Mono \n##  TCCTAATGCGGGAA.1 TCCTAATGTTGACG.11  TCCTACCTAAGTGA.1  TCCTACCTGGGACA.1 \n##                NK         CD14 Mono         CD14 Mono                NK \n##  TCCTACCTTCAGTG.1  TCCTACCTTGTGAC.1  TCCTACCTTTCCAT.1  TCCTATGACACTTT.1 \n##         CD16 Mono       CD4 Naive T         CD14 Mono         CD16 Mono \n##  TCCTATGACTCTCG.1  TCCTATGAGTCCTC.1  TCCTATGAGTGTAC.1  TCCTATGATGCCAA.1 \n##         CD16 Mono                NK       CD4 Naive T      CD4 Memory T \n##  TCGAATCTCCGTTC.1  TCGAATCTGAACCT.1  TCGAATCTGTTGTG.1  TCGAATCTTAAAGG.1 \n##         CD14 Mono       CD4 Naive T       T activated             CD8 T \n##  TCGAATCTTAAGCC.1  TCGAATCTTTCGGA.1  TCGACCTGACGACT.1  TCGACCTGAGTAGA.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono       CD4 Naive T \n##  TCGACCTGCTCAGA.1  TCGACCTGGTTAGC.1  TCGACCTGTGCACA.1  TCGACGCTCCATAG.1 \n##       B Activated       CD4 Naive T                 B         CD14 Mono \n##  TCGACGCTGGCATT.1  TCGACGCTTCTTCA.1  TCGACGCTTGACAC.1  TCGAGAACATGTCG.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  TCGAGAACCGTGAT.1  TCGAGAACTTCATC.1  TCGAGCCTAAACAG.1  TCGAGCCTCGGAGA.1 \n##             CD8 T             CD8 T       CD4 Naive T             CD8 T \n##  TCGATACTCCATGA.1  TCGATACTCCCACT.1  TCGATACTGAGCTT.1 TCGATACTGGGACA.11 \n##         CD14 Mono       B Activated         CD14 Mono       T activated \n##  TCGATACTTCACGA.1  TCGATACTTGGTCA.1  TCGATACTTGTGCA.1  TCGATTTGAATCGC.1 \n##                Mk       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  TCGATTTGAGATGA.1  TCGATTTGCTCTAT.1  TCGATTTGTGGTCA.1  TCGCAAGAGAGGCA.1 \n##       T activated       B Activated                 B         CD14 Mono \n##  TCGCAAGATGAGAA.1  TCGCAAGATTTCTG.1  TCGCACACAGTAGA.1  TCGCACACCACTCC.1 \n##         CD14 Mono                 B         CD14 Mono       CD4 Naive T \n##  TCGCACACCCGTAA.1  TCGCACACGGCGAA.1  TCGCACACTACTCT.1 TCGCACACTGGAAA.11 \n##      CD4 Memory T         CD14 Mono         CD16 Mono         CD14 Mono \n##  TCGCACTGTCTCCG.1  TCGCACTGTGTTCT.1  TCGCAGCTCACTTT.1  TCGCAGCTCAGATC.1 \n##                DC       CD4 Naive T       T activated       CD4 Naive T \n##  TCGCAGCTCCCTAC.1  TCGCAGCTGGTTCA.1  TCGCAGCTTAACGC.1  TCGCCATGACGACT.1 \n##       CD4 Naive T                DC       CD4 Naive T                 B \n##  TCGCCATGACTGTG.1  TCGCCATGAGACTC.1  TCGCCATGCAGAAA.1  TCGCCATGCTCATT.1 \n##      CD4 Memory T                NK         CD16 Mono                NK \n##  TCGCCATGGTTTGG.1  TCGCCATGTAGAAG.1  TCGCCATGTGACTG.1  TCGCCATGTTGCAG.1 \n##         CD14 Mono         CD14 Mono         CD16 Mono      CD4 Memory T \n##  TCGGACCTATCAGC.1  TCGGACCTATGACC.1  TCGGACCTCTAGTG.1  TCGGACCTGAAAGT.1 \n##             Eryth       CD4 Naive T      CD4 Memory T         CD14 Mono \n##  TCGGACCTGGACAG.1  TCGGACCTGTTAGC.1  TCGGACCTTCGATG.1  TCGGACCTTTGAGC.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T                NK \n##  TCGGCACTCTCGAA.1  TCGGCACTCTGGTA.1  TCGGCACTTATCGG.1  TCGGCACTTCGACA.1 \n##                Mk             CD8 T       CD4 Naive T         CD14 Mono \n##  TCGGCACTTCGTGA.1  TCGGCACTTTCCGC.1  TCGGCACTTTGAGC.1  TCGGCACTTTTACC.1 \n##       CD4 Naive T       T activated                 B         CD14 Mono \n##  TCGGTAGAAACAGA.1  TCGGTAGAGCGTAT.1  TCGGTAGATACGAC.1  TCGGTAGATTTGGG.1 \n##             CD8 T                 B         CD14 Mono         CD14 Mono \n##  TCGTAGGAACACCA.1  TCGTAGGACACTGA.1  TCGTAGGACCTTAT.1  TCGTAGGAGAATAG.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  TCGTAGGAGTCGTA.1  TCGTGAGAACCTGA.1  TCGTGAGAAGTCTG.1  TCGTGAGAAGTTCG.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T         CD14 Mono \n##  TCGTGAGACATACG.1  TCGTGAGACCGATA.1  TCGTGAGACGCCTT.1  TCGTGAGACTTCCG.1 \n##         CD14 Mono                 B             CD8 T         CD14 Mono \n##  TCGTGAGAGGAACG.1  TCGTGAGATTTGGG.1  TCGTTATGACTGTG.1  TCGTTATGCAGGAG.1 \n##       B Activated      CD4 Memory T      CD4 Memory T       CD4 Naive T \n##  TCGTTATGGGAGCA.1  TCGTTATGTCGCCT.1  TCTAACACTCGCTC.1  TCTAACACTGTGGT.1 \n##       CD4 Naive T                 B               pDC         CD14 Mono \n##  TCTAACTGAACCGT.1  TCTAACTGATTTCC.1  TCTAACTGCACTCC.1  TCTAACTGCGACTA.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono         CD14 Mono \n##  TCTAACTGCGGAGA.1  TCTAACTGCTCAAG.1  TCTAACTGGTACAC.1  TCTAACTGTCCTAT.1 \n##       CD4 Naive T         CD16 Mono                 B         CD16 Mono \n##  TCTAACTGTGTTTC.1  TCTAAGCTCTGCAA.1  TCTAAGCTGTAGGG.1  TCTACAACGTCATG.1 \n##                 B         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  TCTACAACGTCTGA.1  TCTACAACGTGCTA.1  TCTACAACGTTAGC.1  TCTACAACTCTATC.1 \n##       B Activated                Mk      CD4 Memory T         CD14 Mono \n##  TCTAGACTAGGTCT.1  TCTAGACTATGTCG.1  TCTAGACTCATGAC.1  TCTAGACTCCTAAG.1 \n##       CD4 Naive T                 B       CD4 Naive T         CD16 Mono \n##  TCTAGACTTCGCTC.1  TCTAGACTTTCTCA.1  TCTAGTTGCACACA.1  TCTAGTTGCATGAC.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono             CD8 T \n##  TCTAGTTGCGAGTT.1  TCTAGTTGCTCCAC.1  TCTAGTTGGATAGA.1  TCTAGTTGGCTACA.1 \n##       T activated         CD14 Mono         CD16 Mono         CD16 Mono \n##  TCTAGTTGGGGTGA.1  TCTAGTTGTCGTAG.1  TCTAGTTGTCTCCG.1  TCTAGTTGTCTCGC.1 \n##         CD14 Mono       B Activated       CD4 Naive T             CD8 T \n##  TCTATGTGACCTAG.1  TCTATGTGATTCGG.1  TCTATGTGCGAACT.1  TCTATGTGCGTAGT.1 \n##       CD4 Naive T         CD14 Mono      CD4 Memory T         CD14 Mono \n##  TCTATGTGGCTACA.1  TCTATGTGTCAGAC.1  TCTATGTGTGCATG.1  TCTATGTGTTGCTT.1 \n##         CD14 Mono      CD4 Memory T       CD4 Naive T                 B \n##  TCTCAAACCGCTAA.1  TCTCAAACTCGTAG.1  TCTCCACTCACACA.1  TCTCCACTCTAGCA.1 \n##       CD4 Naive T      CD4 Memory T       CD4 Naive T                 B \n##  TCTCCACTTTTACC.1  TCTCTAGAAACTGC.1  TCTCTAGAAGTTCG.1  TCTCTAGACCTACC.1 \n##       T activated         CD14 Mono         CD14 Mono       T activated \n##  TCTCTAGACCTTAT.1  TCTCTAGAGAGAGC.1  TCTCTAGAGGTTAC.1  TCTCTAGATGTCAG.1 \n##             CD8 T       CD4 Naive T       CD4 Naive T                NK \n##  TCTGATACACACAC.1  TCTGATACACGGGA.1  TCTGATACAGTCAC.1  TCTGATACATCGTG.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono                 B \n##  TCTGATACCCGAAT.1  TCTTACGATCACGA.1  TCTTACGATGAGAA.1  TCTTCAGAAACCAC.1 \n##               pDC       T activated       B Activated                Mk \n##  TCTTCAGACTACGA.1  TCTTCAGATCTTCA.1  TCTTCAGATGTTCT.1  TCTTCAGATTCATC.1 \n##             CD8 T       T activated         CD14 Mono         CD14 Mono \n## TCTTCAGATTGAGC.11  TCTTGATGCCGATA.1  TCTTGATGCCTAAG.1  TCTTGATGCTGCAA.1 \n##                Mk       CD4 Naive T         CD16 Mono         CD14 Mono \n##  TCTTGATGGCGTTA.1  TCTTGATGGGGTGA.1  TCTTGATGTCCTGC.1  TCTTGATGTTCCGC.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono       CD4 Naive T \n##  TGAAATTGCATCAG.1  TGAAATTGCCGTAA.1  TGAAATTGCTGAAC.1  TGAAATTGGACGGA.1 \n##      CD4 Memory T         CD14 Mono                Mk                 B \n##  TGAAATTGGAGATA.1  TGAAATTGGCATAC.1  TGAAATTGGTCGAT.1  TGAAATTGGTTTGG.1 \n##       CD4 Naive T      CD4 Memory T      CD4 Memory T       CD4 Naive T \n##  TGAAATTGTTTCTG.1  TGAACCGACGATAC.1  TGAACCGATCCAAG.1  TGAACCGATTTACC.1 \n##             CD8 T             CD8 T                 B         CD14 Mono \n##  TGAAGCACCCATAG.1 TGAAGCACTCTCTA.11  TGAAGCACTTGAGC.1  TGAAGCTGCATACG.1 \n##      CD4 Memory T         CD14 Mono                NK         CD14 Mono \n##  TGAAGCTGCCGTTC.1  TGAAGCTGCGACAT.1  TGAATAACACACAC.1  TGAATAACTCTTAC.1 \n##      CD4 Memory T         CD14 Mono         CD14 Mono         CD16 Mono \n##  TGACACGACATTTC.1  TGACACGACGAACT.1  TGACACGACGTACA.1  TGACACGAGCTCCT.1 \n##         CD16 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  TGACACGAGGTAGG.1  TGACACGAGTTCGA.1  TGACCAGATGCTGA.1  TGACCGCTTTCGGA.1 \n##                NK         CD14 Mono         CD14 Mono       T activated \n##  TGACCGCTTTCTGT.1  TGACCGCTTTTACC.1  TGACGAACAGGAGC.1  TGACGAACATCAGC.1 \n##       T activated      CD4 Memory T         CD14 Mono         CD14 Mono \n##  TGACGAACCAGTCA.1  TGACGAACCCTTTA.1  TGACGAACCTATGG.1  TGACGAACGCGATT.1 \n##             CD8 T                NK             CD8 T      CD4 Memory T \n##  TGACGAACTACGCA.1  TGACGATGACTAGC.1  TGACGATGAGTGCT.1  TGACGATGCACTAG.1 \n##       B Activated         CD16 Mono         CD16 Mono      CD4 Memory T \n##  TGACGATGCATGAC.1  TGACGATGCCAAGT.1  TGACGATGCGCCTT.1  TGACGATGGTAAGA.1 \n##       CD4 Naive T             CD8 T         CD14 Mono         CD16 Mono \n##  TGACGCCTAGGAGC.1  TGACGCCTTCATTC.1  TGACTGGAATTCGG.1  TGACTGGATACAGC.1 \n##                 B         CD14 Mono       CD4 Naive T      CD4 Memory T \n##  TGACTGGATAGCCA.1  TGACTGGATCGTGA.1  TGACTTACAGTGTC.1  TGACTTACGAACCT.1 \n##       CD4 Naive T                NK       CD4 Naive T         CD14 Mono \n##  TGACTTACTACTTC.1  TGACTTACTTCTGT.1  TGACTTTGCGACAT.1  TGACTTTGCGGTAT.1 \n##         CD14 Mono             CD8 T         CD14 Mono         CD14 Mono \n##  TGACTTTGCTGTGA.1  TGACTTTGGGTATC.1  TGACTTTGGTCTAG.1  TGACTTTGGTTTGG.1 \n##       CD4 Naive T         CD16 Mono         CD14 Mono       CD4 Naive T \n##  TGACTTTGTGTTTC.1  TGACTTTGTTGGCA.1  TGAGACACCACACA.1  TGAGACACGACTAC.1 \n##                NK             CD8 T         CD16 Mono       T activated \n##  TGAGACACGGAACG.1  TGAGACACTGGTTG.1  TGAGACACTTCATC.1  TGAGACACTTCGCC.1 \n##                NK      CD4 Memory T       CD4 Naive T       CD4 Naive T \n##  TGAGCAACATGCTG.1  TGAGCAACCCATGA.1  TGAGCAACGCGTAT.1  TGAGCAACGTGTAC.1 \n##      CD4 Memory T                 B         CD14 Mono      CD4 Memory T \n##  TGAGCAACTGAAGA.1  TGAGCTGAACCATG.1  TGAGCTGAACGTTG.1  TGAGCTGACACTTT.1 \n##      CD4 Memory T         CD14 Mono         CD16 Mono         CD14 Mono \n##  TGAGCTGACCCACT.1  TGAGCTGACGCCTT.1  TGAGCTGACTATTC.1  TGAGCTGAGCCAAT.1 \n##       CD4 Naive T         CD14 Mono                 B       CD4 Naive T \n##  TGAGCTGAGCTTAG.1  TGAGCTGAGTCAAC.1 TGAGCTGAGTGCAT.11  TGAGGTACACTTTC.1 \n##         CD14 Mono       CD4 Naive T      CD4 Memory T         CD14 Mono \n##  TGAGGTACAGAACA.1  TGAGGTACCGAGTT.1  TGAGGTACCTTCCG.1  TGAGGTACGAAACA.1 \n##       CD4 Naive T      CD4 Memory T             CD8 T             CD8 T \n##  TGAGGTACGGAAGC.1  TGAGTCGAGAATCC.1  TGAGTCGATTGACG.1  TGAGTGACGTAAAG.1 \n##             CD8 T      CD4 Memory T       CD4 Naive T                NK \n## TGATAAACAAGAGT.11  TGATAAACCTAAGC.1  TGATAAACCTAGAC.1  TGATAAACCTCGCT.1 \n##       T activated         CD14 Mono                 B      CD4 Memory T \n##  TGATAAACCTGCAA.1  TGATAAACGAAAGT.1  TGATACCTGCCCTT.1  TGATACCTGCCTTC.1 \n##      CD4 Memory T         CD14 Mono             CD8 T         CD14 Mono \n##  TGATACCTGCGAAG.1  TGATACCTGCTAAC.1  TGATACCTGGAAGC.1  TGATACCTGGCGAA.1 \n##                NK         CD14 Mono                NK       CD4 Naive T \n##  TGATACCTGTAAGA.1  TGATATGACCTGAA.1  TGATATGAGTCAAC.1  TGATATGATGTGCA.1 \n##       CD4 Naive T         CD16 Mono       CD4 Naive T         CD16 Mono \n##  TGATCACTCGCCTT.1  TGATCACTGCAGAG.1  TGATCACTGTAAGA.1  TGATCACTTAAGGA.1 \n##      CD4 Memory T       CD4 Naive T      CD4 Memory T         CD14 Mono \n##  TGATCACTTGAGGG.1  TGATCGGAATGTGC.1  TGATCGGACCATGA.1  TGATCGGAGAGATA.1 \n##       T activated       CD4 Naive T      CD4 Memory T         CD16 Mono \n##  TGATCGGATCAGGT.1  TGATTAGAAAGAGT.1  TGATTAGAGAACTC.1  TGATTAGAGGACGA.1 \n##         CD16 Mono         CD14 Mono      CD4 Memory T         CD14 Mono \n##  TGATTCACGCGGAA.1  TGATTCACGCTCCT.1  TGATTCACGTACCA.1  TGATTCACGTCGTA.1 \n##             CD8 T      CD4 Memory T       CD4 Naive T       CD4 Naive T \n##  TGATTCACTCACGA.1  TGATTCACTCAGTG.1  TGATTCACTGCATG.1  TGATTCTGCAGGAG.1 \n##             CD8 T       T activated         CD16 Mono       CD4 Naive T \n##  TGATTCTGGAAAGT.1  TGATTCTGGTCATG.1  TGATTCTGTAAGGA.1  TGCAACGAAAGTAG.1 \n##                 B         CD14 Mono                 B                NK \n##  TGCAACGAAAGTGA.1  TGCAACGACCTACC.1  TGCAACGATACTGG.1  TGCAACGATATCTC.1 \n##      CD4 Memory T         CD16 Mono         CD14 Mono       CD4 Naive T \n##  TGCAACGATGAAGA.1  TGCAACGATTATCC.1  TGCAAGACAAGTGA.1  TGCAAGACGCGAGA.1 \n##                Mk       CD4 Naive T      CD4 Memory T                NK \n##  TGCAAGACGTTAGC.1  TGCAAGACTGCTGA.1  TGCAAGACTTCAGG.1  TGCAAGTGCAGAAA.1 \n##                Mk         CD16 Mono         CD14 Mono         CD14 Mono \n##  TGCAAGTGCTTCTA.1  TGCAATCTAAACGA.1  TGCAATCTATTTCC.1  TGCAATCTGAGACG.1 \n##                 B         CD14 Mono       CD4 Naive T         CD14 Mono \n##  TGCAATCTGCTTAG.1  TGCAATCTTCTATC.1  TGCAATCTTCTCGC.1  TGCAATCTTTTCAC.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono         CD14 Mono \n##  TGCACAGAAGTCGT.1  TGCACAGATAGCGT.1  TGCAGATGCTAAGC.1  TGCAGATGTCGTAG.1 \n##         CD16 Mono                DC       CD4 Naive T       CD4 Naive T \n##  TGCATGGAAATCGC.1  TGCATGGACTGTGA.1  TGCATGGAGAGGCA.1  TGCATGGAGTGTAC.1 \n##      CD4 Memory T         CD14 Mono       T activated      CD4 Memory T \n##  TGCATGGATTACTC.1  TGCCAAGACAAGCT.1  TGCCAAGACTCAAG.1  TGCCAAGAGATAAG.1 \n##         CD14 Mono             CD8 T      CD4 Memory T         CD14 Mono \n## TGCCAAGAGCTTCC.11  TGCCAAGAGGGACA.1  TGCCAAGAGTGTCA.1  TGCCAAGATAAAGG.1 \n##         CD14 Mono       CD4 Naive T                 B       CD4 Naive T \n##  TGCCAAGATCTTCA.1  TGCCAAGATGCCAA.1  TGCCAAGATGGGAG.1  TGCCACTGAGAGTA.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T      CD4 Memory T \n## TGCCACTGCATCAG.11  TGCCACTGGGAACG.1  TGCCAGCTACTACG.1  TGCCAGCTATCACG.1 \n##                 B         CD14 Mono       CD4 Naive T                DC \n##  TGCCCAACCTTGTT.1  TGCCCAACGGGAGT.1  TGCCGACTGGTAAA.1  TGCCGACTTCAGTG.1 \n##       CD4 Naive T       CD4 Naive T       T activated                Mk \n##  TGCCGACTTGCCTC.1  TGCGAAACAGCTCA.1  TGCGAAACCTTCCG.1  TGCGAAACGTAAAG.1 \n##         CD16 Mono         CD14 Mono      CD4 Memory T       B Activated \n##  TGCGATGAACCAAC.1  TGCGATGACTCTAT.1  TGCGATGAGGTGTT.1  TGCGATGAGTACCA.1 \n##       CD4 Naive T      CD4 Memory T             CD8 T       CD4 Naive T \n##  TGCGATGATCTCAT.1  TGCGCACTCAAAGA.1  TGCGCACTCAATCG.1  TGCGCACTGAACTC.1 \n##      CD4 Memory T       CD4 Naive T                 B         CD14 Mono \n##  TGCGCACTTCCTGC.1  TGCGCACTTTACTC.1  TGCGTAGACGTAAC.1  TGCGTAGACTTAGG.1 \n##       CD4 Naive T       CD4 Naive T             CD8 T      CD4 Memory T \n##  TGCGTAGAGCAGAG.1  TGCGTAGAGCATAC.1  TGCGTAGATAGACC.1  TGCTATACATTGGC.1 \n##                 B                 B         CD14 Mono                DC \n##  TGCTATACCCAGTA.1  TGCTATACGCTGAT.1  TGCTATACGGTGGA.1  TGCTATACTGACAC.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono       CD4 Naive T \n##  TGCTGAGAAAACGA.1  TGCTGAGACATGAC.1  TGCTGAGACTTGAG.1  TGCTGAGATTCTTG.1 \n##         CD14 Mono      CD4 Memory T         CD14 Mono                 B \n##  TGCTTAACAGCTCA.1  TGCTTAACCCTCCA.1  TGCTTAACGCCTTC.1  TGCTTAACTGGTGT.1 \n##       CD4 Naive T       CD4 Naive T       CD4 Naive T         CD16 Mono \n##  TGGAAAGAAACGAA.1 TGGAAAGAACTAGC.11  TGGAAAGAATGCCA.1  TGGAAAGACAGTTG.1 \n##      CD4 Memory T                Mk       T activated       CD4 Naive T \n##  TGGAAAGACTTTAC.1  TGGAAAGAGACAGG.1  TGGAAAGAGCGGAA.1  TGGAAAGAGGGATG.1 \n##         CD14 Mono                NK         CD14 Mono                 B \n##  TGGAAAGATGCCCT.1  TGGAAAGATTCGGA.1  TGGAAAGATTCTGT.1  TGGAACACAGCCAT.1 \n##         CD14 Mono                 B       CD4 Naive T       CD4 Naive T \n##  TGGAACACAGCTAC.1  TGGAACACATCGTG.1  TGGAACACCTCCAC.1  TGGAACACTTTGTC.1 \n##         CD16 Mono         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  TGGAACTGACTAGC.1  TGGAACTGCAACCA.1  TGGAACTGCATCAG.1  TGGAACTGGCTATG.1 \n##                 B         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  TGGAACTGGGTGAG.1  TGGAACTGGTCATG.1  TGGAACTGTGTCCC.1  TGGAAGCTAAGAAC.1 \n##         CD14 Mono         CD14 Mono      CD4 Memory T         CD14 Mono \n##  TGGACCCTCGCTAA.1  TGGACCCTGGAACG.1  TGGACCCTGTGCTA.1  TGGACCCTTGAGAA.1 \n##       CD4 Naive T         CD14 Mono      CD4 Memory T         CD14 Mono \n##  TGGACTGAATGTCG.1  TGGACTGACACCAA.1  TGGACTGAGCGATT.1  TGGACTGAGCGGAA.1 \n##                NK       T activated       CD4 Naive T       CD4 Naive T \n##  TGGACTGAGTATCG.1  TGGAGACTACACAC.1  TGGAGACTCGAATC.1  TGGAGACTGACGGA.1 \n##       CD4 Naive T             CD8 T         CD14 Mono         CD14 Mono \n##  TGGAGACTGAGATA.1  TGGAGACTGTCGTA.1  TGGAGACTTTCCAT.1  TGGAGGGAAATCGC.1 \n##         CD14 Mono             CD8 T         CD14 Mono                 B \n##  TGGAGGGAAATGCC.1  TGGAGGGAAGGTTC.1  TGGAGGGACGGTAT.1  TGGAGGGACTCTTA.1 \n##       CD4 Naive T                NK         CD14 Mono       CD4 Naive T \n##  TGGAGGGAGGAGGT.1  TGGATGACGTTGTG.1  TGGATGTGAAACGA.1  TGGATGTGCTTCGC.1 \n##       CD4 Naive T         CD14 Mono       CD4 Naive T         CD14 Mono \n##  TGGATGTGGATAAG.1  TGGATGTGGCAGAG.1  TGGATGTGTCCCGT.1  TGGATTCTAACGAA.1 \n##                NK         CD14 Mono         CD14 Mono                 B \n##  TGGATTCTCGATAC.1  TGGATTCTGAACCT.1 TGGATTCTGAGGAC.11  TGGATTCTTACTTC.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T      CD4 Memory T \n##  TGGCAATGAAAGTG.1  TGGCAATGCTGGTA.1  TGGCAATGTAGCGT.1  TGGCAATGTATCTC.1 \n##                 B         CD14 Mono         CD14 Mono       T activated \n## TGGCAATGTGCCTC.11  TGGCAATGTTAGGC.1  TGGCACCTGACGTT.1  TGGCACCTGGGCAA.1 \n##       CD4 Naive T       CD4 Naive T         CD16 Mono         CD14 Mono \n##  TGGCACCTGGTAGG.1  TGGCACCTGTCATG.1  TGGCACCTTCGCAA.1  TGGGTATGGACAGG.1 \n##         CD14 Mono       B Activated         CD14 Mono       CD4 Naive T \n##  TGGGTATGGGGAGT.1  TGGGTATGTGGAAA.1  TGGTACGAACACTG.1  TGGTACGAACCAGT.1 \n##       CD4 Naive T       T activated                 B         CD14 Mono \n##  TGGTACGAAGCGGA.1  TGGTACGAGACGAG.1  TGGTAGACAAACGA.1  TGGTAGACATGACC.1 \n##         CD16 Mono                 B                DC       T activated \n##  TGGTAGACCCGTTC.1  TGGTAGACCTTACT.1  TGGTAGACGCTTCC.1  TGGTAGACGTGTCA.1 \n##      CD4 Memory T             CD8 T                 B         CD14 Mono \n##  TGGTAGACTGAGCT.1  TGGTAGTGATGCTG.1  TGGTAGTGCACTCC.1  TGGTAGTGGTGAGG.1 \n##         CD14 Mono      CD4 Memory T         CD16 Mono         CD14 Mono \n##  TGGTAGTGTGGTAC.1  TGGTATCTATGTGC.1  TGGTATCTCACTAG.1  TGGTATCTCGTTAG.1 \n##         CD16 Mono             CD8 T         CD14 Mono         CD14 Mono \n##  TGGTATCTGACGAG.1  TGGTATCTGGAGTG.1  TGGTATCTTGAACC.1  TGGTATCTTGTCGA.1 \n##         CD16 Mono       CD4 Naive T                NK       T activated \n##  TGGTCAGAACGTGT.1  TGGTCAGAAGCTCA.1  TGGTCAGAAGTCTG.1  TGGTCAGAATTCGG.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  TGGTCAGACAAGCT.1  TGGTCAGACCCTTG.1  TGGTCAGACGAGAG.1  TGGTCAGACGTGTA.1 \n##             Eryth         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  TGGTCAGATCAGTG.1  TGGTTACTAACGGG.1  TGGTTACTACCTGA.1  TGGTTACTCTATGG.1 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono                DC \n## TGGTTACTGGTTCA.11  TGGTTACTGTCGAT.1  TGGTTACTTGAACC.1  TGGTTACTTGCTAG.1 \n##         CD14 Mono       CD4 Naive T         CD16 Mono       T activated \n##  TGGTTACTTTAGGC.1  TGGTTACTTTTCGT.1 TGTAAAACCCCTAC.11  TGTAAAACCCTTGC.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T         CD14 Mono \n##  TGTAAAACGTAAGA.1  TGTAAAACGTCTAG.1  TGTAAAACTAACCG.1  TGTAAAACTCACGA.1 \n##         CD16 Mono         CD14 Mono             CD8 T         CD14 Mono \n##  TGTAAAACTCCAGA.1  TGTAAAACTCCCGT.1  TGTAACCTCCGTAA.1  TGTAACCTCCTACC.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono       CD4 Naive T \n##  TGTAACCTCGTCTC.1  TGTAACCTGCGTAT.1  TGTAACCTGCTGAT.1  TGTAACCTTGTCGA.1 \n##         CD14 Mono             CD8 T         CD14 Mono      CD4 Memory T \n##  TGTAACCTTTACCT.1  TGTAATGACAGCTA.1  TGTAATGACATGGT.1  TGTAATGACTTCTA.1 \n##       CD4 Naive T       T activated      CD4 Memory T                 B \n##  TGTAATGATAACGC.1  TGTAATGATGCCAA.1  TGTAATGATTCTGT.1  TGTACTTGAGCGGA.1 \n##         CD14 Mono                 B      CD4 Memory T         CD14 Mono \n##  TGTACTTGCAAGCT.1  TGTACTTGGCGATT.1  TGTACTTGTGAACC.1  TGTAGGTGACGTAC.1 \n##                 B                 B         CD14 Mono                 B \n##  TGTAGGTGCTACTT.1  TGTAGGTGGCGGAA.1  TGTAGGTGGGAACG.1  TGTAGGTGGTTCTT.1 \n##         CD14 Mono       CD4 Naive T             CD8 T         CD14 Mono \n##  TGTAGGTGTGACAC.1  TGTAGGTGTTCCGC.1  TGTAGGTGTTCGTT.1  TGTAGTCTAACCAC.1 \n##                 B         CD16 Mono         CD14 Mono       B Activated \n##  TGTAGTCTACGACT.1  TGTAGTCTCAGTCA.1  TGTAGTCTCCCAAA.1  TGTAGTCTGTTTGG.1 \n##                 B      CD4 Memory T       B Activated      CD4 Memory T \n##  TGTATCTGACGGAG.1  TGTATCTGAGCACT.1  TGTATCTGAGGGTG.1  TGTATCTGCACAAC.1 \n##         CD14 Mono                NK      CD4 Memory T       CD4 Naive T \n##  TGTATCTGCGTCTC.1  TGTATCTGGCTATG.1  TGTATCTGTGGTTG.1  TGTATGCTAAAGCA.1 \n##         CD14 Mono             CD8 T         CD14 Mono                 B \n##  TGTATGCTATCACG.1  TGTATGCTGGAGCA.1  TGTCAGGACATTCT.1  TGTCAGGACCTATT.1 \n##         CD14 Mono         CD16 Mono         CD14 Mono       CD4 Naive T \n## TGTCAGGACGTAAC.11  TGTCAGGACTCAAG.1  TGTCAGGAGACAGG.1  TGTCAGGAGGACAG.1 \n##         CD14 Mono      CD4 Memory T             CD8 T         CD14 Mono \n##  TGTCAGGATAGCCA.1  TGTCAGGATCGTAG.1  TGTCAGGATTGGTG.1  TGTCTAACAGAACA.1 \n##       CD4 Naive T       B Activated             CD8 T         CD16 Mono \n##  TGTCTAACAGAGGC.1  TGTCTAACATCGAC.1  TGTCTAACCCTTGC.1  TGTCTAACGCAGTT.1 \n##       T activated         CD14 Mono      CD4 Memory T       CD4 Naive T \n##  TGTCTAACTCCTCG.1  TGTCTAACTCTCTA.1  TGTCTAACTTGCAG.1  TGTGACGAAAGAGT.1 \n##                DC                NK                 B         CD14 Mono \n##  TGTGACGAAAGTGA.1  TGTGACGAACAGTC.1  TGTGACGAACCTGA.1  TGTGACGAAGTAGA.1 \n##       B Activated         CD16 Mono         CD14 Mono                 B \n##  TGTGACGACCCTAC.1  TGTGACGACGGAGA.1  TGTGACGACGTTAG.1  TGTGACGAGGGTGA.1 \n##         CD14 Mono       CD4 Naive T                 B       T activated \n##  TGTGACGATATCGG.1  TGTGAGACAAACGA.1  TGTGAGACCCTCCA.1  TGTGAGTGCCGAAT.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono                NK \n##  TGTGAGTGGAGATA.1  TGTGAGTGTCTCAT.1  TGTGAGTGTCTTAC.1  TGTGATCTAGTCAC.1 \n##       CD4 Naive T         CD14 Mono             Eryth      CD4 Memory T \n##  TGTGATCTCACAAC.1  TGTGATCTGACGGA.1  TGTGATCTTGCTCC.1  TGTGATCTTTGACG.1 \n##         CD14 Mono         CD16 Mono         CD14 Mono         CD16 Mono \n##  TGTGGATGAAACAG.1  TGTGGATGCTCAAG.1  TGTGGATGCTCCAC.1  TGTGGATGGTCCTC.1 \n##       B Activated         CD14 Mono             CD8 T                 B \n##  TGTGGATGTCGCAA.1  TGTGGATGTCTTAC.1  TGTGGATGTCTTTG.1  TGTTAAGAAGTGCT.1 \n##         CD16 Mono      CD4 Memory T         CD14 Mono                Mk \n##  TGTTAAGAATGCCA.1  TGTTAAGATGTTCT.1  TGTTAAGATTTACC.1  TGTTACACCCCACT.1 \n##             CD8 T             CD8 T       CD4 Naive T         CD14 Mono \n##  TGTTACACCCTTAT.1  TGTTACACGTACGT.1  TGTTACACGTTGAC.1  TGTTACACTCTTCA.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono                DC \n##  TGTTACACTGATGC.1  TGTTACTGACCTCC.1  TGTTACTGCACACA.1  TGTTACTGCCTATT.1 \n##                 B      CD4 Memory T       B Activated       T activated \n##  TGTTACTGCGATAC.1  TTAACCACAGGCGA.1  TTAACCACAGGGTG.1  TTAACCACAGTAGA.1 \n##         CD14 Mono      CD4 Memory T                 B         CD14 Mono \n##  TTAACCACCCCTTG.1  TTAACCACCCGATA.1  TTAACCACCCGTAA.1  TTAACCACCTGCAA.1 \n##       B Activated         CD14 Mono         CD16 Mono         CD14 Mono \n##  TTAACCACGCTCCT.1  TTAACCACGGTACT.1  TTACACACCAAAGA.1  TTACACACCCAAGT.1 \n##             CD8 T                DC       CD4 Naive T                 B \n##  TTACACACGTAGCT.1  TTACACACTAAGGA.1  TTACACACTGGTAC.1  TTACACACTGGTCA.1 \n##                DC                 B         CD16 Mono       CD4 Naive T \n##  TTACAGCTAAGGGC.1  TTACAGCTACGTAC.1  TTACAGCTGCGAAG.1  TTACAGCTGGTGTT.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T         CD16 Mono \n##  TTACAGCTTCCCGT.1  TTACAGCTTGTGGT.1  TTACCATGACGTGT.1  TTACCATGATAAGG.1 \n##         CD14 Mono                 B                NK         CD14 Mono \n##  TTACCATGCAGCTA.1  TTACCATGGGTCAT.1  TTACCATGGTCCTC.1  TTACCATGTGAAGA.1 \n##       CD4 Naive T                DC             CD8 T         CD16 Mono \n##  TTACGACTGGGACA.1  TTACGTACACCATG.1  TTACGTACACGACT.1  TTACGTACACGTGT.1 \n##                NK         CD14 Mono      CD4 Memory T         CD14 Mono \n##  TTACGTACAGTGTC.1  TTACGTACATGTGC.1  TTACGTACCCATAG.1  TTACGTACCTTACT.1 \n##         CD16 Mono      CD4 Memory T       CD4 Naive T                 B \n##  TTACGTACTTCTTG.1  TTACTCGAAAAAGC.1  TTACTCGAAGCTAC.1  TTACTCGACTTATC.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD16 Mono \n##  TTACTCGAGCGTAT.1  TTACTCGAGTGTTG.1  TTACTCGATTATCC.1  TTAGAATGCCTCGT.1 \n##       CD4 Naive T      CD4 Memory T       T activated         CD14 Mono \n##  TTAGAATGCTCTTA.1  TTAGACCTAAACGA.1  TTAGACCTCATACG.1  TTAGACCTCCTGTC.1 \n##       T activated      CD4 Memory T                NK       CD4 Naive T \n##  TTAGACCTCGAATC.1  TTAGACCTGATAGA.1  TTAGACCTGGTCTA.1  TTAGACCTTGGAGG.1 \n##       CD4 Naive T       CD4 Naive T       CD4 Naive T      CD4 Memory T \n##  TTAGCTACACGGAG.1  TTAGCTACCCACAA.1  TTAGCTACCCACCT.1  TTAGCTACCGATAC.1 \n##             CD8 T         CD14 Mono         CD14 Mono                DC \n##  TTAGCTACGAATGA.1  TTAGCTACGACTAC.1  TTAGCTACGGGATG.1  TTAGCTACTGGTTG.1 \n##       T activated       CD4 Naive T             CD8 T                DC \n##  TTAGCTACTTGTCT.1  TTAGGGACACTGGT.1  TTAGGGACCAGATC.1  TTAGGGACCTTGAG.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono       CD4 Naive T \n##  TTAGGGACGGTCAT.1  TTAGGGACTGTGGT.1  TTAGGGTGAGTCAC.1  TTAGGGTGATACCG.1 \n##       B Activated         CD14 Mono         CD14 Mono       CD4 Naive T \n##  TTAGGGTGCAGAGG.1  TTAGGGTGCTACCC.1  TTAGGGTGCTCAAG.1  TTAGGGTGGCTGTA.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono       CD4 Naive T \n##  TTAGGGTGGGTAGG.1  TTAGGGTGTCCTCG.1  TTAGGGTGTGAAGA.1  TTAGGTCTTAGTCG.1 \n##      CD4 Memory T         CD16 Mono       CD4 Naive T      CD4 Memory T \n##  TTAGTCACAGTGCT.1  TTAGTCACCTTTAC.1  TTAGTCACGACAAA.1  TTAGTCACTGCAGT.1 \n##         CD14 Mono                NK         CD14 Mono      CD4 Memory T \n##  TTAGTCTGACGTAC.1  TTAGTCTGCAAAGA.1  TTAGTCTGCCTTCG.1  TTAGTCTGCTGTTT.1 \n##         CD14 Mono       CD4 Naive T             CD8 T                DC \n##  TTAGTCTGCTTCCG.1  TTAGTCTGGCATAC.1  TTAGTCTGGGAAGC.1  TTAGTCTGGTAGCT.1 \n##                NK       T activated                 B       CD4 Naive T \n##  TTATCCGAAAGTGA.1  TTATCCGACCCAAA.1  TTATCCGAGCTACA.1 TTATCCGATGTTTC.11 \n##                 B       CD4 Naive T                 B         CD14 Mono \n##  TTATGAGAAGATGA.1  TTATGAGACAACTG.1  TTATGAGACGATAC.1  TTATGAGAGCATCA.1 \n##         CD14 Mono       B Activated         CD16 Mono                 B \n##  TTATGAGAGCTGTA.1  TTATGAGATCTGGA.1  TTATGAGATTTCTG.1  TTATGCACCCTCGT.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono                DC \n##  TTATGCACTCGATG.1  TTATGGCTAAGCAA.1  TTATGGCTAGGTTC.1  TTATGGCTTATGCG.1 \n##       CD4 Naive T         CD14 Mono                 B         CD16 Mono \n##  TTATGGCTTGTCAG.1  TTATGGCTTTCCGC.1  TTATGGCTTTGTCT.1  TTATTCCTCAACTG.1 \n##       T activated         CD14 Mono       CD4 Naive T       CD4 Naive T \n##  TTATTCCTGAATGA.1  TTATTCCTGAGGAC.1  TTATTCCTTAACCG.1  TTATTCCTTGCGTA.1 \n##      CD4 Memory T       CD4 Naive T       CD4 Naive T      CD4 Memory T \n##  TTCAAAGAGTCGAT.1  TTCAAAGATTTCTG.1  TTCAACACACTACG.1  TTCAACACGTACAC.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T                 B \n##  TTCAACACTAGCCA.1  TTCAAGCTCTTACT.1  TTCAAGCTGACGGA.1  TTCAAGCTTAGCGT.1 \n##      CD4 Memory T             CD8 T                NK      CD4 Memory T \n##  TTCAAGCTTGAGAA.1  TTCAAGCTTGTAGC.1  TTCAAGCTTTTGCT.1  TTCACAACGCAAGG.1 \n##                DC         CD14 Mono         CD14 Mono       B Activated \n##  TTCACAACGCCAAT.1  TTCACCCTCCACCT.1  TTCACCCTGTATCG.1  TTCACCCTTGCTTT.1 \n##       CD4 Naive T         CD14 Mono             CD8 T       CD4 Naive T \n##  TTCAGACTAAGGCG.1  TTCAGACTAGGTTC.1  TTCAGACTATCGGT.1  TTCAGACTATGCTG.1 \n##      CD4 Memory T         CD16 Mono         CD14 Mono             CD8 T \n##  TTCAGACTCATTGG.1  TTCAGACTCGTAAC.1  TTCAGACTCTCAAG.1  TTCAGACTGACGAG.1 \n##      CD4 Memory T         CD16 Mono       CD4 Naive T                 B \n##  TTCAGACTTTCTCA.1  TTCAGTACCTCTAT.1  TTCAGTACGGAGCA.1  TTCAGTTGAACCTG.1 \n##             CD8 T       CD4 Naive T         CD14 Mono                DC \n##  TTCAGTTGACCCTC.1  TTCAGTTGCTGGAT.1  TTCAGTTGTGTGGT.1  TTCATCGAACTCAG.1 \n##                NK       CD4 Naive T      CD4 Memory T             CD8 T \n##  TTCATCGAATTCTC.1  TTCATCGACCAAGT.1  TTCATCGACCCAAA.1  TTCATCGAGACGAG.1 \n##         CD14 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  TTCATCGAGTACCA.1  TTCATCGATCTAGG.1  TTCATGACAACAGA.1  TTCATGACAACCTG.1 \n##       T activated       CD4 Naive T       CD4 Naive T       T activated \n##  TTCATGACACTAGC.1  TTCATGACCAATCG.1  TTCATGACCCGTAA.1  TTCATGACCGAATC.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono       B Activated \n##  TTCATGACGACGTT.1  TTCATGACGAGATA.1  TTCATGACGAGGTG.1  TTCATGACTTATCC.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T         CD14 Mono \n##  TTCATGACTTCAGG.1  TTCATGTGAAGATG.1  TTCATGTGGTTTGG.1  TTCATGTGTCTCCG.1 \n##       T activated      CD4 Memory T         CD14 Mono                Mk \n##  TTCATGTGTTGAGC.1  TTCATTCTTATGCG.1  TTCATTCTTCTTAC.1  TTCCAAACACAGCT.1 \n##         CD14 Mono         CD16 Mono             CD8 T       CD4 Naive T \n##  TTCCAAACAGCGTT.1  TTCCAAACCTCCAC.1  TTCCAAACGCCAAT.1  TTCCAAACTTGTCT.1 \n##         CD14 Mono         CD14 Mono       CD4 Naive T      CD4 Memory T \n##  TTCCATGAAGCTCA.1  TTCCATGACCATAG.1  TTCCATGACTTGCC.1  TTCCCACTCGTAGT.1 \n##         CD14 Mono       B Activated       CD4 Naive T         CD14 Mono \n##  TTCCCACTGGTGGA.1  TTCCCACTTGATGC.1  TTCCTAGAACAGCT.1  TTCCTAGAGGTGAG.1 \n##             CD8 T         CD14 Mono         CD14 Mono         CD14 Mono \n##  TTCGAGGAACGGTT.1  TTCGAGGACAGAGG.1  TTCGAGGACCGCTT.1  TTCGAGGAGGGCAA.1 \n##         CD14 Mono                 B         CD14 Mono             CD8 T \n##  TTCGAGGATGAAGA.1  TTCGATTGACCAAC.1  TTCGATTGTCAGAC.1  TTCGATTGTCCTGC.1 \n##       CD4 Naive T      CD4 Memory T         CD14 Mono       CD4 Naive T \n##  TTCGGAGAACACCA.1  TTCGGAGATTTCAC.1  TTCGTATGAACCTG.1  TTCGTATGGAGAGC.1 \n##               pDC         CD16 Mono         CD14 Mono         CD14 Mono \n##  TTCGTATGTGCGTA.1  TTCGTATGTTCCGC.1  TTCTACGACTGCTC.1  TTCTAGTGCTGGAT.1 \n##             CD8 T         CD14 Mono         CD14 Mono      CD4 Memory T \n##  TTCTAGTGGGTGTT.1  TTCTAGTGTAGTCG.1  TTCTCAGAAACAGA.1  TTCTCAGAACCAAC.1 \n##                DC             CD8 T         CD14 Mono         CD14 Mono \n##  TTCTGATGACACCA.1  TTCTGATGAGATCC.1  TTCTTACTAAGTAG.1  TTCTTACTCGAATC.1 \n##      CD4 Memory T       B Activated                 B         CD14 Mono \n##  TTCTTACTCTGAAC.1  TTCTTACTCTGAGT.1  TTCTTACTGACTAC.1  TTCTTACTTGCGTA.1 \n##         CD14 Mono       CD4 Naive T       B Activated       CD4 Naive T \n##  TTGAACCTAACCGT.1  TTGAACCTACGACT.1  TTGAACCTACGTAC.1  TTGAACCTCTCTTA.1 \n##                DC             CD8 T         CD16 Mono         CD14 Mono \n##  TTGAACCTCTTATC.1  TTGAACCTGTGCAT.1  TTGAACCTTTACTC.1  TTGAACCTTTCACT.1 \n##                 B       CD4 Naive T                Mk       CD4 Naive T \n##  TTGAATGAACCAGT.1  TTGAATGAGAGGAC.1  TTGAATGAGTCTTT.1  TTGACACTAGTACC.1 \n##       T activated                 B         CD14 Mono      CD4 Memory T \n##  TTGACACTCCGATA.1  TTGACACTGGTCTA.1  TTGACACTGTGCTA.1  TTGACACTTCCTGC.1 \n##         CD16 Mono       B Activated       CD4 Naive T         CD16 Mono \n##  TTGACACTTTGGTG.1  TTGAGGACAAGCCT.1  TTGAGGACACGACT.1  TTGAGGACAGGAGC.1 \n##         CD14 Mono       CD4 Naive T         CD14 Mono                 B \n##  TTGAGGACGTTCGA.1  TTGAGGACTCGCTC.1  TTGAGGTGAACCAC.1 TTGAGGTGAAGAAC.11 \n##         CD16 Mono       CD4 Naive T         CD14 Mono      CD4 Memory T \n##  TTGAGGTGAGAGGC.1  TTGAGGTGTGACAC.1  TTGAGGTGTTCGTT.1 TTGATCTGACACTG.11 \n##                 B                 B      CD4 Memory T         CD16 Mono \n##  TTGATCTGATGCTG.1  TTGATCTGTCTTTG.1  TTGCATTGACTTTC.1  TTGCATTGCAGGAG.1 \n##      CD4 Memory T       CD4 Naive T      CD4 Memory T      CD4 Memory T \n##  TTGCATTGGACGTT.1  TTGCATTGGTACGT.1  TTGCATTGTTGGTG.1  TTGCTAACGAGCAG.1 \n##                 B       T activated                 B         CD14 Mono \n##  TTGCTATGAACAGA.1  TTGCTATGTCTTTG.1  TTGGAGACACTGGT.1  TTGGAGACAGCGTT.1 \n##      CD4 Memory T             CD8 T         CD14 Mono       CD4 Naive T \n##  TTGGAGTGACGTTG.1  TTGGAGTGAGATCC.1  TTGGAGTGCATGCA.1 TTGGAGTGCTCGAA.11 \n##       CD4 Naive T       CD4 Naive T         CD14 Mono         CD14 Mono \n##  TTGGAGTGGTTGCA.1  TTGGGAACCAACCA.1  TTGGGAACCTTGTT.1  TTGGGAACGTGTTG.1 \n##                NK         CD14 Mono       CD4 Naive T                DC \n##  TTGGTACTAGTCTG.1  TTGGTACTCCACAA.1  TTGGTACTCCTTGC.1  TTGGTACTCGCAAT.1 \n##       CD4 Naive T         CD14 Mono      CD4 Memory T       CD4 Naive T \n##  TTGGTACTCTTGAG.1  TTGGTACTGTCAAC.1  TTGGTACTTTGCTT.1  TTGTACACAAAAGC.1 \n##       CD4 Naive T         CD14 Mono                 B                 B \n##  TTGTACACAAGAGT.1  TTGTACACCTGGTA.1  TTGTACACCTTACT.1  TTGTACACGACGAG.1 \n##      CD4 Memory T       CD4 Naive T         CD14 Mono       B Activated \n##  TTGTACACGGCATT.1  TTGTACACGTCATG.1  TTGTACACTACTCT.1  TTGTAGCTAGAAGT.1 \n##                 B         CD14 Mono                 B         CD14 Mono \n##  TTGTAGCTCCAGTA.1  TTGTAGCTGAAAGT.1  TTGTAGCTGAATAG.1  TTGTAGCTTAAGCC.1 \n##       CD4 Naive T         CD14 Mono      CD4 Memory T       CD4 Naive T \n##  TTGTAGCTTGGTTG.1  TTGTCATGCCGATA.1  TTGTCATGTTAGGC.1  TTGTCATGTTTGGG.1 \n##         CD16 Mono         CD14 Mono         CD14 Mono         CD14 Mono \n##  TTTAGAGAAGTGCT.1  TTTAGAGACTAGCA.1  TTTAGAGATCTCTA.1  TTTAGAGATGGTAC.1 \n##                NK       T activated       CD4 Naive T         CD14 Mono \n##  TTTAGCTGAGAGTA.1  TTTAGCTGCAGAGG.1 TTTAGCTGCGAACT.11  TTTAGCTGCTAGTG.1 \n##                 B      CD4 Memory T         CD14 Mono                NK \n##  TTTAGCTGGCCTTC.1  TTTAGCTGGGGAGT.1  TTTAGCTGGTCATG.1  TTTAGCTGTGCCAA.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono         CD14 Mono \n##  TTTAGGCTCAGTCA.1  TTTAGGCTCTTGTT.1  TTTAGGCTTAAGGA.1  TTTAGGCTTACTCT.1 \n##                NK      CD4 Memory T             CD8 T       CD4 Naive T \n##  TTTAGGCTTCTTCA.1  TTTATCCTAGGAGC.1  TTTATCCTCTCTTA.1 TTTATCCTGCGAGA.11 \n##             CD8 T         CD14 Mono                 B       B Activated \n##  TTTATCCTGGCATT.1  TTTATCCTTACGCA.1  TTTATCCTTCAGTG.1  TTTATCCTTCTAGG.1 \n##         CD16 Mono      CD4 Memory T                 B         CD14 Mono \n##  TTTCACGAAACTGC.1  TTTCACGAAAGCAA.1  TTTCACGAAAGTAG.1  TTTCACGACCAACA.1 \n##         CD14 Mono       CD4 Naive T       CD4 Naive T                 B \n##  TTTCACGAGCGAAG.1  TTTCACGAGCGATT.1  TTTCACGAGGACAG.1  TTTCACGATCTCCG.1 \n##                 B       B Activated         CD16 Mono         CD14 Mono \n##  TTTCAGTGAGCATC.1  TTTCAGTGATTCGG.1  TTTCAGTGCCACCT.1  TTTCAGTGCGAGAG.1 \n##                NK       CD4 Naive T         CD14 Mono                NK \n##  TTTCAGTGTCACGA.1  TTTCCAGACGAGTT.1  TTTCCAGAGAGCAG.1  TTTCCAGAGTCTAG.1 \n##       CD4 Naive T         CD14 Mono      CD4 Memory T       CD4 Naive T \n##  TTTCCAGAGTTGGT.1  TTTCCAGATGGTAC.1  TTTCCAGATGGTGT.1  TTTCGAACGCTGTA.1 \n##             CD8 T         CD16 Mono       CD4 Naive T         CD16 Mono \n##  TTTCGAACTGTCAG.1  TTTCGAACTGTGCA.1  TTTCTACTGGTATC.1  TTTCTACTTCAGAC.1 \n##       CD4 Naive T      CD4 Memory T      CD4 Memory T                NK \n##  TTTGACTGACGTAC.1  TTTGACTGATCACG.1  TTTGACTGCCCACT.1  TTTGACTGCCCTAC.1 \n##       CD4 Naive T         CD14 Mono         CD14 Mono         CD14 Mono \n##  TTTGACTGCTACCC.1  TTTGACTGCTTGGA.1  TTTGACTGGCGAAG.1  TTTGACTGGGTACT.1 \n##       CD4 Naive T      CD4 Memory T                 B                 B \n##  TTTGCATGACGTAC.1  TTTGCATGCCTGTC.1  TTTGCATGCTAAGC.1  TTTGCATGGGACGA.1 \n##      CD4 Memory T                 B       CD4 Naive T       CD4 Naive T \n## 13 Levels: CD14 Mono CD4 Naive T CD4 Memory T CD16 Mono B CD8 T ... Eryth\n</code></pre> <pre><code>DimPlot(ifnb.filtered, reduction = \"umap.cca\", label = T)\n</code></pre> <p>Tip</p> <p>If you want to perform cell-type identification on your own data when you don\u2019t have a ground-truth, using automatic cell type annotation methods can be a good starting point. This approach is discussed in more detail in the Intro to scRNA-seq workshop material.</p>"},{"location":"tutorials/seurat-de/seurat-de/#step-3-find-differentially-expressed-genes-degs-between-our-two-conditions-using-cd16-mono-cells-as-an-example","title":"Step 3: Find differentially expressed genes (DEGs) between our two conditions, using CD16 Mono cells as an example","text":"<p><pre><code># Make another column in metadata showing what cells belong to each treatment group (This will make more sense in a bit)\nifnb.filtered$celltype.and.stim &lt;- paste0(ifnb.filtered$seurat_annotations, '_', ifnb.filtered$stim)\nView(ifnb.filtered@meta.data)\n\nIdents(ifnb.filtered) &lt;- ifnb.filtered$celltype.and.stim\n\nDimPlot(ifnb.filtered, reduction = \"umap.cca\", label = T) # each cluster is now made up of two labels (control or stimulated)\n</code></pre> </p> <p><pre><code>DimPlot(ifnb.filtered, reduction = \"umap.cca\", \n        label = T, split.by = \"stim\") # Lets separate by condition to see what we've done a bit more clearly\n</code></pre> </p> <p>We\u2019ll now leverage these new identities to compare DEGs between our treatment groups</p> <pre><code>treatment.response.CD16 &lt;- FindMarkers(ifnb.filtered, ident.1 = 'CD16 Mono_STIM', \n                                       ident.2 = 'CD16 Mono_CTRL')\nhead(treatment.response.CD16) # These are the genes that are upregulated in the stimulated versus control group\n\n##                p_val avg_log2FC pct.1 pct.2     p_val_adj\n## IFIT1  1.379187e-176   5.834216 1.000 0.094 1.938172e-172\n## ISG15  6.273887e-166   5.333771 1.000 0.478 8.816694e-162\n## IFIT3  1.413978e-164   4.412990 0.992 0.314 1.987063e-160\n## ISG20  6.983755e-164   4.088510 1.000 0.448 9.814270e-160\n## IFITM3 1.056793e-161   3.191513 1.000 0.634 1.485111e-157\n## IFIT2  7.334976e-159   4.622453 0.974 0.162 1.030784e-154\n</code></pre>"},{"location":"tutorials/seurat-de/seurat-de/#step-4-lets-plot-conserved-features-vs-degs-between-conditions","title":"Step 4: Lets plot conserved features vs DEGs between conditions","text":"<pre><code>FeaturePlot(ifnb.filtered, reduction = 'umap.cca', \n            features = c('VMO1', 'FCGR3A', 'IFIT1', 'ISG15'),\n            split.by = 'stim', min.cutoff = 'q10')\n</code></pre>"},{"location":"tutorials/seurat-de/seurat-de/#step-5-create-a-heatmap-to-visualise-degs-between-our-two-conditions-cell-types","title":"Step 5: Create a Heatmap to visualise DEGs between our two conditions + cell types","text":"<pre><code># Find upregulated genes in each group (cell type and condition)\nifnb.treatVsCtrl.markers &lt;- FindAllMarkers(ifnb.filtered,\n                                          only.pos = TRUE)\nsaveRDS(ifnb.treatVsCtrl.markers, \"ifnb_stimVsCtrl_markers.rds\")\n</code></pre> <pre><code>Calculating cluster CD14 Mono_CTRL\n  |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=22s  \nCalculating cluster pDC_CTRL\n  |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=01m 02s\nCalculating cluster CD4 Memory T_CTRL\n  |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=47s  \nCalculating cluster T activated_CTRL\n  |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=60s  \nCalculating cluster CD4 Naive T_CTRL\n  |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=49s  \nCalculating cluster CD8 T_CTRL\n  |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=58s  \nCalculating cluster Mk_CTRL\n  |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=38s  \nCalculating cluster B Activated_CTRL\n  |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=52s  \nCalculating cluster B_CTRL\n  |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=52s  \nCalculating cluster CD16 Mono_CTRL\n  |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=24s  \nCalculating cluster NK_CTRL\n  |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=01m 02s\nCalculating cluster DC_CTRL\n  |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=33s  \nCalculating cluster Eryth_CTRL\n  |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=13s  \nCalculating cluster CD8 T_STIM\n  |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=48s  \nCalculating cluster pDC_STIM\n  |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=56s  \nCalculating cluster CD4 Naive T_STIM\n  |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=41s  \nCalculating cluster B_STIM\n  |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=45s  \nCalculating cluster CD14 Mono_STIM\n  |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=17s  \nCalculating cluster T activated_STIM\n  |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=53s  \nCalculating cluster CD4 Memory T_STIM\n  |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=35s  \nCalculating cluster B Activated_STIM\n  |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=51s  \nCalculating cluster NK_STIM\n  |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=52s  \nCalculating cluster CD16 Mono_STIM\n  |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=21s  \nCalculating cluster DC_STIM\n  |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=23s  \nCalculating cluster Mk_STIM\n  |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=38s  \nCalculating cluster Eryth_STIM\n  |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=13s\n</code></pre> <p>If the top code block takes too long to run - you can download the rds file of the output using the code below:</p> <p>Seurat\u2019s in-built heatmap function can be quite messy and hard to interpret sometimes (we\u2019ll learn how to make better and clearer custom heatmaps using the pheatmap package from our Seurat expression data later on).</p> <pre><code>ifnb.treatVsCtrl.markers &lt;- readRDS(url(\"https://github.com/manveerchauhan/Seurat_DE_Workshop/raw/refs/heads/main/ifnb_stimVsCtrl_markers.rds\"))\n\ntop5 &lt;- ifnb.treatVsCtrl.markers %&gt;%\n  group_by(cluster) %&gt;%\n  dplyr::filter(avg_log2FC &gt; 1) %&gt;%\n  slice_head(n = 5) %&gt;%\n  ungroup()\n\nDEG.heatmap &lt;- DoHeatmap(ifnb.filtered, features = top5$gene,\n          label = FALSE)\n\nDEG.heatmap\n</code></pre> <p></p>"},{"location":"tutorials/seurat-de/seurat-de/#section-3-differential-expression-using-a-pseudobulk-approach-and-deseq2","title":"Section 3 : Differential Expression using a pseudobulk approach and DESeq2","text":""},{"location":"tutorials/seurat-de/seurat-de/#step-1-we-need-to-import-sample-information-for-each-cell-from-the-original-paper","title":"Step 1: We need to import sample information for each cell from the original paper","text":"<p>Question</p> <p>have a look at the ifnb.filtered seurat metadata, can you spot what we\u2019ve done here?</p> <pre><code># defining a function here to retrieve that information (code from https://satijalab.org/seurat/articles/de_vignette)\nloadDonorMetadata &lt;- function(seu.obj){\n  # load the inferred sample IDs of each cell\n  ctrl &lt;- read.table(url(\"https://raw.githubusercontent.com/yelabucsf/demuxlet_paper_code/master/fig3/ye1.ctrl.8.10.sm.best\"), head = T, stringsAsFactors = F)\n  stim &lt;- read.table(url(\"https://raw.githubusercontent.com/yelabucsf/demuxlet_paper_code/master/fig3/ye2.stim.8.10.sm.best\"), head = T, stringsAsFactors = F)\n  info &lt;- rbind(ctrl, stim)\n\n  # rename the cell IDs by substituting the '-' into '.'\n  info$BARCODE &lt;- gsub(pattern = \"\\\\-\", replacement = \"\\\\.\", info$BARCODE)\n\n  # only keep the cells with high-confidence sample ID\n  info &lt;- info[grep(pattern = \"SNG\", x = info$BEST), ]\n\n  # remove cells with duplicated IDs in both ctrl and stim groups\n  info &lt;- info[!duplicated(info$BARCODE) &amp; !duplicated(info$BARCODE, fromLast = T), ]\n\n  # now add the sample IDs to ifnb \n  rownames(info) &lt;- info$BARCODE\n  info &lt;- info[, c(\"BEST\"), drop = F]\n  names(info) &lt;- c(\"donor_id\")\n  seu.obj &lt;- AddMetaData(seu.obj, metadata = info)\n\n  # remove cells without donor IDs\n  seu.obj$donor_id[is.na(seu.obj$donor_id)] &lt;- \"unknown\"\n  seu.obj &lt;- subset(seu.obj, subset = donor_id != \"unknown\")\n\n  return(seu.obj)\n}\n\nifnb.filtered &lt;- loadDonorMetadata(ifnb.filtered)\n</code></pre>"},{"location":"tutorials/seurat-de/seurat-de/#step-2-aggregate-our-counts-based-on-treatment-group-cell-type-and-donor-id","title":"Step 2: Aggregate our counts based on treatment group, cell-type, and donor id","text":"<p>Collapsing our single-cell matrix in this manner is referred to as creating a \u2018pseudo-bulk\u2019 count matrix.. We\u2019re making a condensed count matrix that looks more like a bulk matrix so that we can use bulk differential expression algorithms like DESeq2. We can see this clearly when we have a look at the ifnb.pseudbulk.df we make in the following code block.</p> <pre><code>ifnb.pseudobulk &lt;- AggregateExpression(ifnb.filtered, assays = \"RNA\",\n                                   group.by = c(\"stim\", \"donor_id\", \"seurat_annotations\"),\n                                   return.seurat = TRUE)\n\n## Centering and scaling data matrix\n\nView(ifnb.pseudobulk@meta.data)\n\n# If you want the pseudobulk matrix as a dataframe you can do this:\nifnb.pseudobulk.df &lt;- AggregateExpression(ifnb.filtered, assays = \"RNA\",\n                                          group.by = c(\"stim\", \"donor_id\", \"seurat_annotations\")) %&gt;% \n  as.data.frame()\n\nhead(ifnb.pseudobulk.df)\n</code></pre> Pseudobulk dataframe output <pre><code>##               RNA.CTRL_SNG.101_CD14.Mono RNA.CTRL_SNG.101_CD4.Naive.T\n## AL627309.1                             0                            0\n## RP11-206L10.2                          0                            0\n## LINC00115                              0                            0\n## NOC2L                                  7                            3\n## KLHL17                                 0                            0\n## PLEKHN1                                1                            0\n##               RNA.CTRL_SNG.101_CD4.Memory.T RNA.CTRL_SNG.101_CD16.Mono\n## AL627309.1                                0                          0\n## RP11-206L10.2                             0                          0\n## LINC00115                                 0                          0\n## NOC2L                                     5                          3\n## KLHL17                                    0                          0\n## PLEKHN1                                   0                          0\n##               RNA.CTRL_SNG.101_B RNA.CTRL_SNG.101_CD8.T\n## AL627309.1                     0                      0\n## RP11-206L10.2                  0                      0\n## LINC00115                      0                      0\n## NOC2L                          1                      3\n## KLHL17                         0                      0\n## PLEKHN1                        0                      1\n##               RNA.CTRL_SNG.101_T.activated RNA.CTRL_SNG.101_NK\n## AL627309.1                               0                   0\n## RP11-206L10.2                            0                   0\n## LINC00115                                1                   0\n## NOC2L                                    0                   2\n## KLHL17                                   0                   0\n## PLEKHN1                                  0                   0\n##               RNA.CTRL_SNG.101_DC RNA.CTRL_SNG.101_B.Activated\n## AL627309.1                      0                            0\n## RP11-206L10.2                   0                            0\n## LINC00115                       1                            0\n## NOC2L                           0                            4\n## KLHL17                          0                            0\n## PLEKHN1                         0                            0\n##               RNA.CTRL_SNG.101_Mk RNA.CTRL_SNG.101_pDC RNA.CTRL_SNG.101_Eryth\n## AL627309.1                      0                    0                      0\n## RP11-206L10.2                   0                    0                      0\n## LINC00115                       0                    0                      1\n## NOC2L                           1                    0                      0\n## KLHL17                          0                    0                      0\n## PLEKHN1                         0                    0                      0\n##               RNA.CTRL_SNG.1015_CD14.Mono RNA.CTRL_SNG.1015_CD4.Naive.T\n## AL627309.1                              0                             0\n## RP11-206L10.2                           0                             0\n## LINC00115                               3                             0\n## NOC2L                                  23                             7\n## KLHL17                                  3                             0\n## PLEKHN1                                 2                             0\n##               RNA.CTRL_SNG.1015_CD4.Memory.T RNA.CTRL_SNG.1015_CD16.Mono\n## AL627309.1                                 0                           0\n## RP11-206L10.2                              0                           0\n## LINC00115                                  0                           4\n## NOC2L                                     16                          14\n## KLHL17                                     0                           0\n## PLEKHN1                                    0                           0\n##               RNA.CTRL_SNG.1015_B RNA.CTRL_SNG.1015_CD8.T\n## AL627309.1                      0                       0\n## RP11-206L10.2                   0                       0\n## LINC00115                       0                       1\n## NOC2L                           8                       8\n## KLHL17                          0                       0\n## PLEKHN1                         0                       0\n##               RNA.CTRL_SNG.1015_T.activated RNA.CTRL_SNG.1015_NK\n## AL627309.1                                0                    0\n## RP11-206L10.2                             0                    0\n## LINC00115                                 0                    1\n## NOC2L                                     7                    5\n## KLHL17                                    0                    0\n## PLEKHN1                                   0                    0\n##               RNA.CTRL_SNG.1015_DC RNA.CTRL_SNG.1015_B.Activated\n## AL627309.1                       0                             0\n## RP11-206L10.2                    0                             0\n## LINC00115                        0                             0\n## NOC2L                            4                            22\n## KLHL17                           0                             0\n## PLEKHN1                          0                             0\n##               RNA.CTRL_SNG.1015_Mk RNA.CTRL_SNG.1015_pDC\n## AL627309.1                       0                     0\n## RP11-206L10.2                    0                     0\n## LINC00115                        1                     1\n## NOC2L                            2                     0\n## KLHL17                           0                     0\n## PLEKHN1                          0                     0\n##               RNA.CTRL_SNG.1015_Eryth RNA.CTRL_SNG.1016_CD14.Mono\n## AL627309.1                          0                           0\n## RP11-206L10.2                       0                           1\n## LINC00115                           0                           1\n## NOC2L                               1                           5\n## KLHL17                              0                           0\n## PLEKHN1                             0                           3\n##               RNA.CTRL_SNG.1016_CD4.Naive.T RNA.CTRL_SNG.1016_CD4.Memory.T\n## AL627309.1                                0                              0\n## RP11-206L10.2                             0                              0\n## LINC00115                                 1                              2\n## NOC2L                                     6                              5\n## KLHL17                                    0                              0\n## PLEKHN1                                   0                              0\n##               RNA.CTRL_SNG.1016_CD16.Mono RNA.CTRL_SNG.1016_B\n## AL627309.1                              0                   0\n## RP11-206L10.2                           0                   0\n## LINC00115                               0                   1\n## NOC2L                                   6                   3\n## KLHL17                                  0                   0\n## PLEKHN1                                 0                   0\n##               RNA.CTRL_SNG.1016_CD8.T RNA.CTRL_SNG.1016_T.activated\n## AL627309.1                          1                             0\n## RP11-206L10.2                       0                             0\n## LINC00115                           0                             1\n## NOC2L                               8                             9\n## KLHL17                              1                             0\n## PLEKHN1                             0                             0\n##               RNA.CTRL_SNG.1016_NK RNA.CTRL_SNG.1016_DC\n## AL627309.1                       0                    0\n## RP11-206L10.2                    0                    1\n## LINC00115                        0                    0\n## NOC2L                            0                    1\n## KLHL17                           0                    0\n## PLEKHN1                          0                    0\n##               RNA.CTRL_SNG.1016_B.Activated RNA.CTRL_SNG.1016_Mk\n## AL627309.1                                0                    0\n## RP11-206L10.2                             0                    0\n## LINC00115                                 0                    0\n## NOC2L                                     2                    1\n## KLHL17                                    0                    0\n## PLEKHN1                                   0                    0\n##               RNA.CTRL_SNG.1016_pDC RNA.CTRL_SNG.1016_Eryth\n## AL627309.1                        0                       0\n## RP11-206L10.2                     0                       0\n## LINC00115                         0                       0\n## NOC2L                             0                       0\n## KLHL17                            0                       0\n## PLEKHN1                           0                       0\n##               RNA.CTRL_SNG.1039_CD14.Mono RNA.CTRL_SNG.1039_CD4.Naive.T\n## AL627309.1                              0                             0\n## RP11-206L10.2                           0                             0\n## LINC00115                               0                             0\n## NOC2L                                   3                             4\n## KLHL17                                  0                             0\n## PLEKHN1                                 0                             0\n##               RNA.CTRL_SNG.1039_CD4.Memory.T RNA.CTRL_SNG.1039_CD16.Mono\n## AL627309.1                                 0                           0\n## RP11-206L10.2                              0                           0\n## LINC00115                                  0                           0\n## NOC2L                                      7                           3\n## KLHL17                                     0                           0\n## PLEKHN1                                    0                           1\n##               RNA.CTRL_SNG.1039_B RNA.CTRL_SNG.1039_CD8.T\n## AL627309.1                      0                       0\n## RP11-206L10.2                   0                       0\n## LINC00115                       0                       0\n## NOC2L                           1                       2\n## KLHL17                          0                       0\n## PLEKHN1                         0                       0\n##               RNA.CTRL_SNG.1039_T.activated RNA.CTRL_SNG.1039_NK\n## AL627309.1                                0                    0\n## RP11-206L10.2                             0                    0\n## LINC00115                                 0                    0\n## NOC2L                                     1                    0\n## KLHL17                                    0                    1\n## PLEKHN1                                   0                    0\n##               RNA.CTRL_SNG.1039_DC RNA.CTRL_SNG.1039_B.Activated\n## AL627309.1                       0                             0\n## RP11-206L10.2                    0                             0\n## LINC00115                        0                             0\n## NOC2L                            0                             0\n## KLHL17                           0                             0\n## PLEKHN1                          0                             0\n##               RNA.CTRL_SNG.1039_Mk RNA.CTRL_SNG.1039_pDC\n## AL627309.1                       0                     0\n## RP11-206L10.2                    0                     0\n## LINC00115                        0                     0\n## NOC2L                            1                     1\n## KLHL17                           0                     0\n## PLEKHN1                          0                     0\n##               RNA.CTRL_SNG.107_CD14.Mono RNA.CTRL_SNG.107_CD4.Naive.T\n## AL627309.1                             0                            0\n## RP11-206L10.2                          0                            0\n## LINC00115                              1                            0\n## NOC2L                                  8                            3\n## KLHL17                                 0                            0\n## PLEKHN1                                1                            0\n##               RNA.CTRL_SNG.107_CD4.Memory.T RNA.CTRL_SNG.107_CD16.Mono\n## AL627309.1                                0                          0\n## RP11-206L10.2                             0                          0\n## LINC00115                                 0                          0\n## NOC2L                                     4                          3\n## KLHL17                                    0                          0\n## PLEKHN1                                   0                          0\n##               RNA.CTRL_SNG.107_B RNA.CTRL_SNG.107_CD8.T\n## AL627309.1                     0                      0\n## RP11-206L10.2                  0                      0\n## LINC00115                      0                      0\n## NOC2L                          3                      0\n## KLHL17                         0                      0\n## PLEKHN1                        0                      0\n##               RNA.CTRL_SNG.107_T.activated RNA.CTRL_SNG.107_NK\n## AL627309.1                               0                   0\n## RP11-206L10.2                            0                   0\n## LINC00115                                0                   0\n## NOC2L                                    0                   1\n## KLHL17                                   0                   0\n## PLEKHN1                                  0                   0\n##               RNA.CTRL_SNG.107_DC RNA.CTRL_SNG.107_B.Activated\n## AL627309.1                      0                            0\n## RP11-206L10.2                   0                            0\n## LINC00115                       0                            0\n## NOC2L                           1                            2\n## KLHL17                          0                            0\n## PLEKHN1                         0                            0\n##               RNA.CTRL_SNG.107_Mk RNA.CTRL_SNG.107_pDC\n## AL627309.1                      0                    0\n## RP11-206L10.2                   0                    0\n## LINC00115                       0                    0\n## NOC2L                           0                    1\n## KLHL17                          0                    0\n## PLEKHN1                         0                    0\n##               RNA.CTRL_SNG.1244_CD14.Mono RNA.CTRL_SNG.1244_CD4.Naive.T\n## AL627309.1                              0                             0\n## RP11-206L10.2                           0                             0\n## LINC00115                               3                             0\n## NOC2L                                   5                            27\n## KLHL17                                  0                             1\n## PLEKHN1                                 1                             0\n##               RNA.CTRL_SNG.1244_CD4.Memory.T RNA.CTRL_SNG.1244_CD16.Mono\n## AL627309.1                                 1                           0\n## RP11-206L10.2                              0                           0\n## LINC00115                                  1                           0\n## NOC2L                                     13                           5\n## KLHL17                                     0                           2\n## PLEKHN1                                    0                           0\n##               RNA.CTRL_SNG.1244_B RNA.CTRL_SNG.1244_CD8.T\n## AL627309.1                      0                       0\n## RP11-206L10.2                   0                       0\n## LINC00115                       0                       0\n## NOC2L                           5                       8\n## KLHL17                          0                       0\n## PLEKHN1                         0                       0\n##               RNA.CTRL_SNG.1244_T.activated RNA.CTRL_SNG.1244_NK\n## AL627309.1                                0                    0\n## RP11-206L10.2                             0                    0\n## LINC00115                                 1                    0\n## NOC2L                                     2                    2\n## KLHL17                                    0                    0\n## PLEKHN1                                   0                    0\n##               RNA.CTRL_SNG.1244_DC RNA.CTRL_SNG.1244_B.Activated\n## AL627309.1                       0                             0\n## RP11-206L10.2                    0                             0\n## LINC00115                        0                             0\n## NOC2L                            7                             6\n## KLHL17                           0                             0\n## PLEKHN1                          0                             0\n##               RNA.CTRL_SNG.1244_Mk RNA.CTRL_SNG.1244_pDC\n## AL627309.1                       0                     0\n## RP11-206L10.2                    0                     0\n## LINC00115                        0                     0\n## NOC2L                            2                     0\n## KLHL17                           0                     0\n## PLEKHN1                          0                     0\n##               RNA.CTRL_SNG.1244_Eryth RNA.CTRL_SNG.1256_CD14.Mono\n## AL627309.1                          0                           0\n## RP11-206L10.2                       0                           0\n## LINC00115                           0                           1\n## NOC2L                               0                          11\n## KLHL17                              0                           2\n## PLEKHN1                             0                           2\n##               RNA.CTRL_SNG.1256_CD4.Naive.T RNA.CTRL_SNG.1256_CD4.Memory.T\n## AL627309.1                                0                              0\n## RP11-206L10.2                             0                              0\n## LINC00115                                 1                              0\n## NOC2L                                    35                              9\n## KLHL17                                    1                              0\n## PLEKHN1                                   1                              0\n##               RNA.CTRL_SNG.1256_CD16.Mono RNA.CTRL_SNG.1256_B\n## AL627309.1                              0                   0\n## RP11-206L10.2                           0                   1\n## LINC00115                               0                   0\n## NOC2L                                   3                   7\n## KLHL17                                  0                   1\n## PLEKHN1                                 0                   0\n##               RNA.CTRL_SNG.1256_CD8.T RNA.CTRL_SNG.1256_T.activated\n## AL627309.1                          0                             0\n## RP11-206L10.2                       0                             0\n## LINC00115                           0                             2\n## NOC2L                               1                            11\n## KLHL17                              0                             0\n## PLEKHN1                             0                             0\n##               RNA.CTRL_SNG.1256_NK RNA.CTRL_SNG.1256_DC\n## AL627309.1                       0                    0\n## RP11-206L10.2                    0                    0\n## LINC00115                        0                    0\n## NOC2L                            3                    3\n## KLHL17                           0                    0\n## PLEKHN1                          0                    0\n##               RNA.CTRL_SNG.1256_B.Activated RNA.CTRL_SNG.1256_Mk\n## AL627309.1                                0                    1\n## RP11-206L10.2                             0                    0\n## LINC00115                                 0                    0\n## NOC2L                                     9                    2\n## KLHL17                                    0                    0\n## PLEKHN1                                   0                    0\n##               RNA.CTRL_SNG.1256_pDC RNA.CTRL_SNG.1256_Eryth\n## AL627309.1                        0                       0\n## RP11-206L10.2                     0                       0\n## LINC00115                         0                       0\n## NOC2L                             0                       0\n## KLHL17                            0                       0\n## PLEKHN1                           0                       0\n##               RNA.CTRL_SNG.1488_CD14.Mono RNA.CTRL_SNG.1488_CD4.Naive.T\n## AL627309.1                              0                             1\n## RP11-206L10.2                           0                             1\n## LINC00115                               0                             0\n## NOC2L                                  11                            23\n## KLHL17                                  0                             0\n## PLEKHN1                                 3                             0\n##               RNA.CTRL_SNG.1488_CD4.Memory.T RNA.CTRL_SNG.1488_CD16.Mono\n## AL627309.1                                 0                           0\n## RP11-206L10.2                              0                           0\n## LINC00115                                  1                           0\n## NOC2L                                     12                           6\n## KLHL17                                     0                           0\n## PLEKHN1                                    0                           0\n##               RNA.CTRL_SNG.1488_B RNA.CTRL_SNG.1488_CD8.T\n## AL627309.1                      0                       0\n## RP11-206L10.2                   0                       0\n## LINC00115                       0                       0\n## NOC2L                           7                       0\n## KLHL17                          0                       0\n## PLEKHN1                         0                       0\n##               RNA.CTRL_SNG.1488_T.activated RNA.CTRL_SNG.1488_NK\n## AL627309.1                                0                    0\n## RP11-206L10.2                             0                    0\n## LINC00115                                 2                    4\n## NOC2L                                     3                    2\n## KLHL17                                    0                    0\n## PLEKHN1                                   0                    1\n##               RNA.CTRL_SNG.1488_DC RNA.CTRL_SNG.1488_B.Activated\n## AL627309.1                       0                             0\n## RP11-206L10.2                    0                             0\n## LINC00115                        0                             0\n## NOC2L                            2                             6\n## KLHL17                           0                             0\n## PLEKHN1                          0                             0\n##               RNA.CTRL_SNG.1488_Mk RNA.CTRL_SNG.1488_pDC\n## AL627309.1                       0                     0\n## RP11-206L10.2                    0                     0\n## LINC00115                        0                     0\n## NOC2L                            1                     0\n## KLHL17                           0                     0\n## PLEKHN1                          0                     0\n##               RNA.CTRL_SNG.1488_Eryth RNA.STIM_SNG.101_CD14.Mono\n## AL627309.1                          0                          0\n## RP11-206L10.2                       0                          0\n## LINC00115                           0                          0\n## NOC2L                               0                          1\n## KLHL17                              0                          0\n## PLEKHN1                             0                          3\n##               RNA.STIM_SNG.101_CD4.Naive.T RNA.STIM_SNG.101_CD4.Memory.T\n## AL627309.1                               0                             0\n## RP11-206L10.2                            0                             0\n## LINC00115                                0                             0\n## NOC2L                                    4                             6\n## KLHL17                                   0                             0\n## PLEKHN1                                  0                             1\n##               RNA.STIM_SNG.101_CD16.Mono RNA.STIM_SNG.101_B\n## AL627309.1                             0                  0\n## RP11-206L10.2                          0                  0\n## LINC00115                              1                  0\n## NOC2L                                  4                  6\n## KLHL17                                 1                  0\n## PLEKHN1                                2                  0\n##               RNA.STIM_SNG.101_CD8.T RNA.STIM_SNG.101_T.activated\n## AL627309.1                         0                            0\n## RP11-206L10.2                      0                            0\n## LINC00115                          0                            1\n## NOC2L                              2                            3\n## KLHL17                             0                            0\n## PLEKHN1                            1                            0\n##               RNA.STIM_SNG.101_NK RNA.STIM_SNG.101_DC\n## AL627309.1                      0                   0\n## RP11-206L10.2                   0                   0\n## LINC00115                       0                   0\n## NOC2L                           2                   1\n## KLHL17                          0                   0\n## PLEKHN1                         2                   1\n##               RNA.STIM_SNG.101_B.Activated RNA.STIM_SNG.101_Mk\n## AL627309.1                               0                   0\n## RP11-206L10.2                            0                   0\n## LINC00115                                0                   0\n## NOC2L                                    5                   1\n## KLHL17                                   0                   0\n## PLEKHN1                                  0                   0\n##               RNA.STIM_SNG.101_pDC RNA.STIM_SNG.101_Eryth\n## AL627309.1                       0                      0\n## RP11-206L10.2                    0                      0\n## LINC00115                        0                      0\n## NOC2L                            0                      0\n## KLHL17                           0                      0\n## PLEKHN1                          0                      0\n##               RNA.STIM_SNG.1015_CD14.Mono RNA.STIM_SNG.1015_CD4.Naive.T\n## AL627309.1                              0                             0\n## RP11-206L10.2                           0                             0\n## LINC00115                               4                             0\n## NOC2L                                   8                             6\n## KLHL17                                  0                             0\n## PLEKHN1                                16                             0\n##               RNA.STIM_SNG.1015_CD4.Memory.T RNA.STIM_SNG.1015_CD16.Mono\n## AL627309.1                                 0                           0\n## RP11-206L10.2                              0                           0\n## LINC00115                                  0                           0\n## NOC2L                                      8                           0\n## KLHL17                                     0                           0\n## PLEKHN1                                    4                           0\n##               RNA.STIM_SNG.1015_B RNA.STIM_SNG.1015_CD8.T\n## AL627309.1                      0                       0\n## RP11-206L10.2                   0                       0\n## LINC00115                       0                       1\n## NOC2L                          13                       7\n## KLHL17                          1                       0\n## PLEKHN1                         1                       0\n##               RNA.STIM_SNG.1015_T.activated RNA.STIM_SNG.1015_NK\n## AL627309.1                                0                    0\n## RP11-206L10.2                             0                    0\n## LINC00115                                 0                    1\n## NOC2L                                     4                    7\n## KLHL17                                    0                    0\n## PLEKHN1                                   0                    0\n##               RNA.STIM_SNG.1015_DC RNA.STIM_SNG.1015_B.Activated\n## AL627309.1                       0                             0\n## RP11-206L10.2                    0                             0\n## LINC00115                        0                             0\n## NOC2L                            1                            13\n## KLHL17                           0                             0\n## PLEKHN1                          0                             0\n##               RNA.STIM_SNG.1015_Mk RNA.STIM_SNG.1015_pDC\n## AL627309.1                       0                     0\n## RP11-206L10.2                    0                     0\n## LINC00115                        0                     0\n## NOC2L                            1                     0\n## KLHL17                           0                     0\n## PLEKHN1                          0                     0\n##               RNA.STIM_SNG.1015_Eryth RNA.STIM_SNG.1016_CD14.Mono\n## AL627309.1                          0                           0\n## RP11-206L10.2                       0                           0\n## LINC00115                           1                           2\n## NOC2L                               0                           4\n## KLHL17                              0                           0\n## PLEKHN1                             0                           4\n##               RNA.STIM_SNG.1016_CD4.Naive.T RNA.STIM_SNG.1016_CD4.Memory.T\n## AL627309.1                                0                              0\n## RP11-206L10.2                             0                              0\n## LINC00115                                 0                              0\n## NOC2L                                     8                              4\n## KLHL17                                    0                              0\n## PLEKHN1                                   0                              0\n##               RNA.STIM_SNG.1016_CD16.Mono RNA.STIM_SNG.1016_B\n## AL627309.1                              0                   0\n## RP11-206L10.2                           0                   0\n## LINC00115                               0                   0\n## NOC2L                                   4                   2\n## KLHL17                                  0                   0\n## PLEKHN1                                 0                   0\n##               RNA.STIM_SNG.1016_CD8.T RNA.STIM_SNG.1016_T.activated\n## AL627309.1                          0                             0\n## RP11-206L10.2                       0                             0\n## LINC00115                           0                             0\n## NOC2L                               8                            11\n## KLHL17                              0                             0\n## PLEKHN1                             1                             0\n##               RNA.STIM_SNG.1016_NK RNA.STIM_SNG.1016_DC\n## AL627309.1                       0                    0\n## RP11-206L10.2                    0                    0\n## LINC00115                        0                    0\n## NOC2L                            0                    0\n## KLHL17                           0                    0\n## PLEKHN1                          0                    2\n##               RNA.STIM_SNG.1016_B.Activated RNA.STIM_SNG.1016_Mk\n## AL627309.1                                0                    0\n## RP11-206L10.2                             0                    0\n## LINC00115                                 0                    0\n## NOC2L                                     2                    1\n## KLHL17                                    0                    0\n## PLEKHN1                                   0                    0\n##               RNA.STIM_SNG.1016_pDC RNA.STIM_SNG.1016_Eryth\n## AL627309.1                        0                       0\n## RP11-206L10.2                     0                       0\n## LINC00115                         0                       0\n## NOC2L                             1                       0\n## KLHL17                            0                       0\n## PLEKHN1                           0                       0\n##               RNA.STIM_SNG.1039_CD14.Mono RNA.STIM_SNG.1039_CD4.Naive.T\n## AL627309.1                              0                             0\n## RP11-206L10.2                           0                             0\n## LINC00115                               0                             0\n## NOC2L                                   2                            15\n## KLHL17                                  0                             0\n## PLEKHN1                                 2                             0\n##               RNA.STIM_SNG.1039_CD4.Memory.T RNA.STIM_SNG.1039_CD16.Mono\n## AL627309.1                                 0                           0\n## RP11-206L10.2                              0                           0\n## LINC00115                                  0                           0\n## NOC2L                                      4                           0\n## KLHL17                                     0                           0\n## PLEKHN1                                    1                           1\n##               RNA.STIM_SNG.1039_B RNA.STIM_SNG.1039_CD8.T\n## AL627309.1                      0                       0\n## RP11-206L10.2                   0                       0\n## LINC00115                       0                       0\n## NOC2L                           2                       1\n## KLHL17                          0                       0\n## PLEKHN1                         0                       0\n##               RNA.STIM_SNG.1039_T.activated RNA.STIM_SNG.1039_NK\n## AL627309.1                                0                    0\n## RP11-206L10.2                             0                    0\n## LINC00115                                 1                    0\n## NOC2L                                     4                    0\n## KLHL17                                    0                    0\n## PLEKHN1                                   0                    0\n##               RNA.STIM_SNG.1039_DC RNA.STIM_SNG.1039_B.Activated\n## AL627309.1                       0                             0\n## RP11-206L10.2                    0                             0\n## LINC00115                        0                             0\n## NOC2L                            0                             1\n## KLHL17                           0                             0\n## PLEKHN1                          0                             0\n##               RNA.STIM_SNG.1039_Mk RNA.STIM_SNG.1039_pDC\n## AL627309.1                       0                     0\n## RP11-206L10.2                    0                     0\n## LINC00115                        0                     0\n## NOC2L                            2                     1\n## KLHL17                           0                     0\n## PLEKHN1                          0                     0\n##               RNA.STIM_SNG.1039_Eryth RNA.STIM_SNG.107_CD14.Mono\n## AL627309.1                          0                          0\n## RP11-206L10.2                       0                          0\n## LINC00115                           0                          0\n## NOC2L                               0                          0\n## KLHL17                              0                          0\n## PLEKHN1                             0                          0\n##               RNA.STIM_SNG.107_CD4.Naive.T RNA.STIM_SNG.107_CD4.Memory.T\n## AL627309.1                               0                             0\n## RP11-206L10.2                            0                             0\n## LINC00115                                0                             0\n## NOC2L                                    3                             8\n## KLHL17                                   0                             0\n## PLEKHN1                                  0                             0\n##               RNA.STIM_SNG.107_CD16.Mono RNA.STIM_SNG.107_B\n## AL627309.1                             0                  0\n## RP11-206L10.2                          0                  0\n## LINC00115                              0                  0\n## NOC2L                                  0                  6\n## KLHL17                                 0                  0\n## PLEKHN1                                0                  0\n##               RNA.STIM_SNG.107_CD8.T RNA.STIM_SNG.107_T.activated\n## AL627309.1                         0                            0\n## RP11-206L10.2                      0                            0\n## LINC00115                          0                            0\n## NOC2L                              2                            2\n## KLHL17                             0                            0\n## PLEKHN1                            0                            0\n##               RNA.STIM_SNG.107_NK RNA.STIM_SNG.107_DC\n## AL627309.1                      0                   0\n## RP11-206L10.2                   0                   0\n## LINC00115                       0                   0\n## NOC2L                           1                   0\n## KLHL17                          0                   0\n## PLEKHN1                         0                   0\n##               RNA.STIM_SNG.107_B.Activated RNA.STIM_SNG.107_Mk\n## AL627309.1                               0                   0\n## RP11-206L10.2                            0                   0\n## LINC00115                                0                   0\n## NOC2L                                    2                   1\n## KLHL17                                   0                   0\n## PLEKHN1                                  0                   0\n##               RNA.STIM_SNG.107_pDC RNA.STIM_SNG.1244_CD14.Mono\n## AL627309.1                       0                           0\n## RP11-206L10.2                    0                           0\n## LINC00115                        0                           0\n## NOC2L                            0                           2\n## KLHL17                           0                           0\n## PLEKHN1                          0                           2\n##               RNA.STIM_SNG.1244_CD4.Naive.T RNA.STIM_SNG.1244_CD4.Memory.T\n## AL627309.1                                0                              0\n## RP11-206L10.2                             0                              0\n## LINC00115                                 0                              1\n## NOC2L                                    45                              6\n## KLHL17                                    0                              0\n## PLEKHN1                                   0                              0\n##               RNA.STIM_SNG.1244_CD16.Mono RNA.STIM_SNG.1244_B\n## AL627309.1                              0                   0\n## RP11-206L10.2                           0                   0\n## LINC00115                               0                   0\n## NOC2L                                   1                   7\n## KLHL17                                  0                   0\n## PLEKHN1                                 0                   0\n##               RNA.STIM_SNG.1244_CD8.T RNA.STIM_SNG.1244_T.activated\n## AL627309.1                          0                             0\n## RP11-206L10.2                       0                             0\n## LINC00115                           0                             0\n## NOC2L                               5                             5\n## KLHL17                              0                             0\n## PLEKHN1                             0                             0\n##               RNA.STIM_SNG.1244_NK RNA.STIM_SNG.1244_DC\n## AL627309.1                       0                    0\n## RP11-206L10.2                    0                    0\n## LINC00115                        0                    0\n## NOC2L                            2                    0\n## KLHL17                           0                    0\n## PLEKHN1                          0                    0\n##               RNA.STIM_SNG.1244_B.Activated RNA.STIM_SNG.1244_Mk\n## AL627309.1                                0                    0\n## RP11-206L10.2                             0                    0\n## LINC00115                                 0                    0\n## NOC2L                                     6                    2\n## KLHL17                                    0                    0\n## PLEKHN1                                   0                    0\n##               RNA.STIM_SNG.1244_pDC RNA.STIM_SNG.1244_Eryth\n## AL627309.1                        0                       0\n## RP11-206L10.2                     0                       0\n## LINC00115                         0                       0\n## NOC2L                             0                       0\n## KLHL17                            0                       0\n## PLEKHN1                           0                       0\n##               RNA.STIM_SNG.1256_CD14.Mono RNA.STIM_SNG.1256_CD4.Naive.T\n## AL627309.1                              0                             0\n## RP11-206L10.2                           0                             0\n## LINC00115                               1                             0\n## NOC2L                                   4                            46\n## KLHL17                                  0                             0\n## PLEKHN1                                 1                             0\n##               RNA.STIM_SNG.1256_CD4.Memory.T RNA.STIM_SNG.1256_CD16.Mono\n## AL627309.1                                 0                           0\n## RP11-206L10.2                              0                           0\n## LINC00115                                  0                           0\n## NOC2L                                     12                           0\n## KLHL17                                     0                           0\n## PLEKHN1                                    1                           0\n##               RNA.STIM_SNG.1256_B RNA.STIM_SNG.1256_CD8.T\n## AL627309.1                      0                       0\n## RP11-206L10.2                   0                       0\n## LINC00115                       1                       0\n## NOC2L                           7                       3\n## KLHL17                          0                       0\n## PLEKHN1                         0                       0\n##               RNA.STIM_SNG.1256_T.activated RNA.STIM_SNG.1256_NK\n## AL627309.1                                0                    0\n## RP11-206L10.2                             0                    0\n## LINC00115                                 1                    0\n## NOC2L                                     3                    7\n## KLHL17                                    0                    1\n## PLEKHN1                                   0                    0\n##               RNA.STIM_SNG.1256_DC RNA.STIM_SNG.1256_B.Activated\n## AL627309.1                       0                             0\n## RP11-206L10.2                    0                             0\n## LINC00115                        0                             0\n## NOC2L                            1                             4\n## KLHL17                           0                             0\n## PLEKHN1                          0                             0\n##               RNA.STIM_SNG.1256_Mk RNA.STIM_SNG.1256_pDC\n## AL627309.1                       0                     0\n## RP11-206L10.2                    0                     0\n## LINC00115                        0                     0\n## NOC2L                            1                     3\n## KLHL17                           0                     0\n## PLEKHN1                          0                     0\n##               RNA.STIM_SNG.1256_Eryth RNA.STIM_SNG.1488_CD14.Mono\n## AL627309.1                          0                           0\n## RP11-206L10.2                       0                           0\n## LINC00115                           0                           1\n## NOC2L                               0                           3\n## KLHL17                              0                           1\n## PLEKHN1                             0                           5\n##               RNA.STIM_SNG.1488_CD4.Naive.T RNA.STIM_SNG.1488_CD4.Memory.T\n## AL627309.1                                0                              0\n## RP11-206L10.2                             0                              0\n## LINC00115                                 0                              1\n## NOC2L                                    50                              7\n## KLHL17                                    0                              0\n## PLEKHN1                                   1                              0\n##               RNA.STIM_SNG.1488_CD16.Mono RNA.STIM_SNG.1488_B\n## AL627309.1                              0                   0\n## RP11-206L10.2                           0                   0\n## LINC00115                               1                   0\n## NOC2L                                   1                   5\n## KLHL17                                  0                   0\n## PLEKHN1                                 1                   1\n##               RNA.STIM_SNG.1488_CD8.T RNA.STIM_SNG.1488_T.activated\n## AL627309.1                          0                             0\n## RP11-206L10.2                       0                             0\n## LINC00115                           0                             2\n## NOC2L                               1                             4\n## KLHL17                              0                             0\n## PLEKHN1                             0                             0\n##               RNA.STIM_SNG.1488_NK RNA.STIM_SNG.1488_DC\n## AL627309.1                       0                    0\n## RP11-206L10.2                    0                    0\n## LINC00115                        0                    0\n## NOC2L                            0                    0\n## KLHL17                           0                    0\n## PLEKHN1                          0                    1\n##               RNA.STIM_SNG.1488_B.Activated RNA.STIM_SNG.1488_Mk\n## AL627309.1                                0                    0\n## RP11-206L10.2                             0                    0\n## LINC00115                                 0                    0\n## NOC2L                                     8                    3\n## KLHL17                                    0                    0\n## PLEKHN1                                   0                    0\n##               RNA.STIM_SNG.1488_pDC RNA.STIM_SNG.1488_Eryth\n## AL627309.1                        0                       0\n## RP11-206L10.2                     0                       0\n## LINC00115                         0                       0\n## NOC2L                             2                       0\n## KLHL17                            0                       0\n## PLEKHN1                           0                       0\n</code></pre>"},{"location":"tutorials/seurat-de/seurat-de/#step-3-perform-differential-expression-using-deseq2","title":"Step 3: Perform Differential Expression using DESeq2","text":"<p>Just like before, lets make a new column containing the cell type and treatment group before DE with DESeq2. We do this so that we can leverage the Idents() function combined with the FindMarkers function.</p> <p>To use DESeq2 in older versions of Seurat (prior to v5) we would have to perform a myriad of convoluted data wrangling steps to convert our Seurat pseudobulk matrix into a format compatible with DESeq2 (or whatever bulk DE package being used). Fortunately in Seurat v5, these different bulk DE algorithms/packages have been wrapped into the FindMarker() functions - simplifying pseudobulk DE approaches immensely.</p> <p>It is worth taking a look at the Seurat DE vignette on your own to see the other pseudobulk DE methods you can use. Do keep in mind that to use some of the DE tests, you need to install that package and load it as a library separately to Seurat, as we\u2019ve done here with DESeq2 at the start.</p> <pre><code>ifnb.pseudobulk$celltype.and.stim &lt;- paste(ifnb.pseudobulk$seurat_annotations, ifnb.pseudobulk$stim, sep = \"_\")\nIdents(ifnb.pseudobulk) &lt;- \"celltype.and.stim\"\n\nView(ifnb.pseudobulk@meta.data)\n\n# Lets run a DEG test between treated and control CD 16 monocytes using the same FindMarkers function but with DESeq2\ntreatment.response.CD16.pseudo &lt;- FindMarkers(object = ifnb.pseudobulk, \n                                      ident.1 = 'CD16 Mono_STIM', \n                                      ident.2 = 'CD16 Mono_CTRL',\n                                      test.use = \"DESeq2\")\n\n## converting counts to integer mode\n## gene-wise dispersion estimates\n## mean-dispersion relationship\n## final dispersion estimates\n\nhead(treatment.response.CD16.pseudo)\n\n##                p_val avg_log2FC pct.1 pct.2     p_val_adj\n## IFIT3  1.564083e-134   4.601427     1     1 2.198006e-130\n## IFIT2   2.122691e-84   4.613021     1     1  2.983017e-80\n## ISG20   1.401656e-81   4.038272     1     1  1.969747e-77\n## DDX58   1.366535e-73   3.448721     1     1  1.920392e-69\n## NT5C3A  5.127048e-66   3.942571     1     1  7.205040e-62\n## OASL    1.186412e-63   4.025025     1     1  1.667265e-59\n\n# How are we able to use the same findmarkers function here?\nhead(Cells(ifnb.pseudobulk)) # our 'cells' are no longer barcodes, but have been renamed according to stim-donor-annotation when we aggregated our data earlier\n\n## [1] \"CTRL_SNG-101_CD14 Mono\"    \"CTRL_SNG-101_CD4 Naive T\" \n## [3] \"CTRL_SNG-101_CD4 Memory T\" \"CTRL_SNG-101_CD16 Mono\"   \n## [5] \"CTRL_SNG-101_B\"            \"CTRL_SNG-101_CD8 T\"\n</code></pre>"},{"location":"tutorials/seurat-de/seurat-de/#step-4-assessing-differences-between-our-pseudbulk-degs-and-single-cell-degs","title":"Step 4: Assessing differences between our pseudbulk DEGs and single-cell DEGs","text":"<p>First lets take a look at the DEG dataframes we made for both.</p> <p>Question</p> <p>Having a look at them, can you identify any differences? Can you think of any underlying reasons behind those differences?</p> <p>Hint: Look at the p_val and p_val_adj columns.</p> <pre><code>head(treatment.response.CD16)\n\n##                p_val avg_log2FC pct.1 pct.2     p_val_adj\n## IFIT1  1.379187e-176   5.834216 1.000 0.094 1.938172e-172\n## ISG15  6.273887e-166   5.333771 1.000 0.478 8.816694e-162\n## IFIT3  1.413978e-164   4.412990 0.992 0.314 1.987063e-160\n## ISG20  6.983755e-164   4.088510 1.000 0.448 9.814270e-160\n## IFITM3 1.056793e-161   3.191513 1.000 0.634 1.485111e-157\n## IFIT2  7.334976e-159   4.622453 0.974 0.162 1.030784e-154\n\nhead(treatment.response.CD16.pseudo)\n\n##                p_val avg_log2FC pct.1 pct.2     p_val_adj\n## IFIT3  1.564083e-134   4.601427     1     1 2.198006e-130\n## IFIT2   2.122691e-84   4.613021     1     1  2.983017e-80\n## ISG20   1.401656e-81   4.038272     1     1  1.969747e-77\n## DDX58   1.366535e-73   3.448721     1     1  1.920392e-69\n## NT5C3A  5.127048e-66   3.942571     1     1  7.205040e-62\n## OASL    1.186412e-63   4.025025     1     1  1.667265e-59\n</code></pre> <p>Next let\u2019s take a look at the degree of overlap between the actual DEGs in both approaches.</p> <p>To help with this, I\u2019m just going to define a couple helper functions below.</p> <pre><code>Merge_DEG_dataframes &lt;- function(pseudobulk.de,\n                                 singlecell.de){\n  names(pseudobulk.de) &lt;- paste0(names(pseudobulk.de), \".bulk\")\n  pseudobulk.de$gene &lt;- rownames(pseudobulk.de)\n\n  names(singlecell.de) &lt;- paste0(names(singlecell.de), \".sc\")\n  singlecell.de$gene &lt;- rownames(singlecell.de)\n\n  merge_dat &lt;- merge(singlecell.de, pseudobulk.de, by = \"gene\")\n  merge_dat &lt;- merge_dat[order(merge_dat$p_val.bulk), ]\n\n  return(merge_dat)\n}\nVisualise_Overlapping_DEGs &lt;- function(pseudobulk.de,\n                                       singlecell.de){\n\n  merge_dat &lt;- Merge_DEG_dataframes(pseudobulk.de,\n                                    singlecell.de)\n\n  # Number of genes that are marginally significant in both; marginally significant only in bulk; and marginally     significant only in single-cell\n  common &lt;- merge_dat$gene[which(merge_dat$p_val_adj.bulk &lt; 0.05 &amp; \n                                   merge_dat$p_val_adj.sc &lt; 0.05)]\n  only_sc &lt;- merge_dat$gene[which(merge_dat$p_val_adj.bulk &gt; 0.05 &amp; \n                                    merge_dat$p_val_adj.sc &lt; 0.05)]\n  only_pseudobulk &lt;- merge_dat$gene[which(merge_dat$p_val_adj.bulk &lt; 0.05 &amp; \n                                      merge_dat$p_val_adj.sc &gt; 0.05)]\n\n  # Create a dataframe to plot overlaps\n  overlap.info &lt;- data.frame(\n    category = c(\"Common\", \n                 \"Only in single-cell\", \n                 \"Only in pseudobulk\"),\n    count = c(length(common), length(only_sc), length(only_pseudobulk))\n  )\n\n  overlap.info$category &lt;- factor(overlap.info$category, \n                                  levels = c(\"Common\", \n                                             \"Only in single-cell\", \n                                             \"Only in pseudobulk\"))\n  # Create the bar plot\n  overlap.bar.plt &lt;- ggplot(overlap.info, aes(x = category, y = count, fill = category)) +\n    geom_bar(stat = \"identity\") +\n    geom_text(aes(label = count), vjust = -0.5, size = 4) +\n    theme_minimal() +\n    labs(title = \"Number of Overlapping and Unique DEGs from Single-Cell and Pseudobulk Tests\",\n         x = \"\",\n         y = \"Number of Genes\") +\n    theme(legend.position = \"none\",\n          axis.text.x = element_text(angle = 45, hjust = 1))\n\n  return(overlap.bar.plt)\n}\n</code></pre> <p>Let\u2019s use the helper functions above to plot and view the overlap/agreement between our pseudobulk versus single-cell approaches</p> <p>Question</p> <p>Can you explain why we\u2019re seeing the discrepancies we see between the two methods here?</p> <pre><code>merged_deg_data &lt;- Merge_DEG_dataframes(pseudobulk.de = treatment.response.CD16.pseudo,\n                                        singlecell.de = treatment.response.CD16)\nmerged_deg_data %&gt;% \n  dplyr::select(gene, \n                p_val.sc, p_val.bulk,\n                p_val_adj.sc, p_val_adj.bulk) %&gt;%\n  head(10)\n\n##        gene      p_val.sc    p_val.bulk  p_val_adj.sc p_val_adj.bulk\n## 2866  IFIT3 1.413978e-164 1.564083e-134 1.987063e-160  2.198006e-130\n## 2865  IFIT2 7.334976e-159  2.122691e-84 1.030784e-154   2.983017e-80\n## 2992  ISG20 6.983755e-164  1.401656e-81 9.814270e-160   1.969747e-77\n## 1626  DDX58 2.340153e-109  1.366535e-73 3.288617e-105   1.920392e-69\n## 4129 NT5C3A 5.806396e-117  5.127048e-66 8.159728e-113   7.205040e-62\n## 4185   OASL 5.497910e-147  1.186412e-63 7.726213e-143   1.667265e-59\n## 4544 PLSCR1 6.905174e-116  3.783863e-61 9.703841e-112   5.317463e-57\n## 3859 MYL12A  2.476988e-83  7.623767e-61  3.480912e-79   1.071368e-56\n## 2859  IFI35  4.701828e-99  2.527378e-58  6.607479e-95   3.551724e-54\n## 2661  HERC5  1.578848e-92  1.829060e-56  2.218755e-88   2.570378e-52\n\n# How many DEGs overlap between our two methods? Is there anything in the merged_deg_data frame that stands out to you?\noverlap.bar.plt &lt;- Visualise_Overlapping_DEGs(pseudobulk.de = treatment.response.CD16.pseudo,\n                                              singlecell.de = treatment.response.CD16)\n\noverlap.bar.plt\n</code></pre> <p></p>"},{"location":"tutorials/seurat-de/seurat-de/#step-5-investigate-the-differences-between-pseudobulk-de-and-single-cell-de-closer","title":"Step 5: Investigate the differences between pseudobulk DE and single-cell DE closer","text":"<p>Let\u2019s create lists of genes in each of our categories first</p> <pre><code>common &lt;- merged_deg_data$gene[which(merged_deg_data$p_val.bulk &lt; 0.05 &amp; \n                                       merged_deg_data$p_val.sc &lt; 0.05)]\nonly_sc &lt;- merged_deg_data$gene[which(merged_deg_data$p_val.bulk &gt; 0.05 &amp; \n                                        merged_deg_data$p_val.sc &lt; 0.05)]\nonly_pseudobulk &lt;- merged_deg_data$gene[which(merged_deg_data$p_val.bulk &lt; 0.05 &amp; \n                                          merged_deg_data$p_val.sc &gt; 0.05)]\n</code></pre> <p>Now I want to look at the expression of genes that only appear in our sc deg test and not in our pseudobulk deg test I\u2019ve picked two genes from the \u2018only_sc\u2019 variable we just defined</p> <pre><code># create a new column to annotate sample-condition-celltype in the single-cell dataset\nifnb.filtered$donor_id.and.stim &lt;- paste0(ifnb.filtered$stim, \"-\", ifnb.filtered$donor_id)\nIdents(ifnb.filtered) &lt;- \"celltype.and.stim\"\n\n# Explore some genes that only appear in the sc deg test---\nVlnPlot(ifnb.filtered, features = c(\"PABPC1\", \"SRGN\"), \n        idents = c(\"CD16 Mono_CTRL\", \"CD16 Mono_STIM\"), \n        group.by = \"stim\") \n</code></pre> <p></p> <pre><code>VlnPlot(ifnb.filtered, features = c(\"PABPC1\", \"SRGN\"), \n        idents = c(\"CD16 Mono_CTRL\", \"CD16 Mono_STIM\"), \n        group.by = \"donor_id.and.stim\", ncol = 1)\n</code></pre> <p></p> <p>Question</p> <p>How would you interpret the plots above? What does this tell you about some of the pitfalls of single-cell DE approaches?</p> <p>Now lets take a look at some genes that show agreement across both sc and pseudobulk deg tests</p> <pre><code>VlnPlot(ifnb.filtered, features = c(\"IFIT2\", \"PSMA4\"), \n        idents = c(\"CD16 Mono_CTRL\", \"CD16 Mono_STIM\"), \n        group.by = \"stim\") \n</code></pre> <p></p> <p><pre><code>VlnPlot(ifnb.filtered, features = c(\"IFIT2\", \"PSMA4\"), \n        idents = c(\"CD16 Mono_CTRL\", \"CD16 Mono_STIM\"), \n        group.by = \"donor_id.and.stim\", ncol = 1) \n</code></pre> </p>"},{"location":"tutorials/seurat-de/seurat-de/#step-6-creating-our-own-custom-visualisations-for-deg-analysis-between-cell-types-in-two-different-experimental-groups","title":"Step 6: Creating our own custom visualisations for DEG analysis between cell-types in two different experimental groups","text":"<p>So far, we\u2019ve been using functions wrapped within Seurat to plot and visualise our data. But we\u2019re not limited to those functions. Let\u2019s use the pheatmap (\u2018pretty heatmap\u2019) package to visualise our DEGs with adjusted p values \\&lt; 0.05.</p> <p>First lets look at our significant DEGs as defined by our pseudobulk approach</p> <pre><code>CD16.sig.markers &lt;- treatment.response.CD16.pseudo %&gt;% \n  dplyr::filter(p_val_adj &lt; 0.05) %&gt;%\n  dplyr::mutate(gene = rownames(.))\n</code></pre> <p>This is how we can pull our average (scaled) pseudobulk expression values from our seurat obj:</p> <pre><code>ifnb.filtered$celltype.stim.donor_id &lt;- paste0(ifnb.filtered$seurat_annotations, \"-\",\n                                               ifnb.filtered$stim, \"-\", ifnb.filtered$donor_id)\nIdents(ifnb.filtered) &lt;- \"celltype.stim.donor_id\"\n\nall.sig.avg.Expression.mat &lt;- AverageExpression(ifnb.filtered, \n                         features = CD16.sig.markers$gene, \n                         layer = 'scale.data')\n\n## As of Seurat v5, we recommend using AggregateExpression to perform pseudo-bulk analysis.\n## This message is displayed once per session.\n\nView(all.sig.avg.Expression.mat %&gt;%\n  as.data.frame())\n</code></pre> <p>Now lets make sure we\u2019re only using data from the CD16 cell type</p> <pre><code>CD16.sig.avg.Expression.mat &lt;- all.sig.avg.Expression.mat$RNA %&gt;%\n  as.data.frame() %&gt;%\n  dplyr::select(starts_with(\"CD16 Mono\"))\n\nView(CD16.sig.avg.Expression.mat)\n</code></pre> <p>Let\u2019s finally view our heatmap with averaged pseudobulk scaled expression values for our signficant DEGs</p> <p><pre><code>pheatmap::pheatmap(CD16.sig.avg.Expression.mat,\n         cluster_rows = TRUE,\n         show_rownames = FALSE, \n         border_color = NA, \n         fontsize = 10, \n         scale = \"row\", \n         fontsize_row = 10, \n         height = 20)\n</code></pre> </p> <p>The cool thing about pheatmap is that we can customise our heatmap with added metadata</p> <pre><code>cluster_metadata &lt;- data.frame(\n  row.names = colnames(CD16.sig.avg.Expression.mat)\n) %&gt;% \n  dplyr::mutate(\n    Cell_Type = \"CD16 Mono\",\n    Treatment_Group = ifelse(str_detect(row.names(.), \"STIM|CTRL\"), \n                      str_extract(row.names(.), \"STIM|CTRL\")))\n\nsig.DEG.heatmap &lt;- pheatmap::pheatmap(CD16.sig.avg.Expression.mat,\n         cluster_rows = TRUE,\n         show_rownames = FALSE,\n         annotation = cluster_metadata[, c(\"Treatment_Group\", \"Cell_Type\")], \n         border_color = NA, \n         fontsize = 10, \n         scale = \"row\", \n         fontsize_row = 10, \n         height = 20,\n         annotation_names_col = FALSE)\n\nsig.DEG.heatmap\n</code></pre> <p></p> <p>Lets save our heatmap using the grid library (very useful package!) Code from: https://stackoverflow.com/questions/43051525/how-to-draw-pheatmap-plot-to-screen-and-also-save-to-file</p> <pre><code>save_pheatmap_pdf &lt;- function(x, filename, width=7, height=7) {\n   stopifnot(!missing(x))\n   stopifnot(!missing(filename))\n   pdf(filename, width=width, height=height)\n   grid::grid.newpage()\n   grid::grid.draw(x$gtable)\n   dev.off()\n}\n\nsave_pheatmap_pdf(sig.DEG.heatmap, \"sig_DEG_pseudo.pdf\")\n\n## quartz_off_screen \n##                 2\n</code></pre> <p>Challenge question</p> <p>Do the same thing with significant DEGs from the sc approach. Do you see any differences?</p> Solution <p>Run the same code as above but with the <code>treatment.response.CD16</code> variable instead of <code>treatment.response.CD16.pseudo</code> variable.</p> <p>You have now completed the workshop!</p> <p>Hopefully you\u2019ve found this workshop useful and you\u2019re now feeling more confident about using different integration and differential expression approaches in single-cell data analysis.</p> <p>What kind of analyses do you think we can do next after obtaining a list of differentially expressed genes (DEGs) for each cell type and treatment groups?</p>"},{"location":"tutorials/seurat-go/seurat-go/","title":"Gene ontology analysis and integration for single-cell RNA-seq data","text":"<p>Author: Xiaochen Zhang, L\u00ea Cao Lab, The University of Melbourne. Contributors: Vini Salazar, Melbourne Bioinformatics.</p>"},{"location":"tutorials/seurat-go/seurat-go/#overview","title":"Overview","text":"<p>Topic</p> <ul> <li> Genomics</li> <li> Transcriptomics</li> <li> Proteomics</li> <li> Metabolomics</li> <li> Statistics and visualisation</li> <li> Structural Modelling</li> <li> Basic skills</li> </ul> <p>Skill level</p> <ul> <li> Beginner  </li> <li> Intermediate  </li> <li> Advanced  </li> </ul> <p>Data: 10k Human PBMCs, Multiome v1.0, Chromium X.</p> <p>Tools: R &gt;= 4.4.0 and associated packages:  </p> <ul> <li>Seurat  </li> <li>SeuratData  </li> <li>clusterProfiler  </li> <li>Signac  </li> <li>ggplot2  </li> </ul> <p>Pipeline: Section 1: Setup, Introduction, and Preprocessing. Section 2: Gene Ontology analysis. Section 3: Integration of ATAC-seq data.  </p> <p>Learning objectives: </p> <ul> <li>Apply GO enrichment analysis to identify biological processes, molecular functions, and cellular components represented in single-cell RNA-seq data.  </li> <li>Interpret GO results and identify key pathways and functional modules relevant to specific biological questions.  </li> <li>Design a workflow for integrating various omics layers, considering the biological context and research goals.  </li> <li>Take advantage of the Seurat, Signac and clusterProfiler R packages to perform the analysis, generate plots and interpret the results.  </li> </ul>"},{"location":"tutorials/seurat-go/seurat-go/#setup","title":"Setup","text":"<p>Install R packages for this workshop</p> <p>You only need to run this code once.</p> <pre><code># install Packages\ninstall.packages(\"Seurat\")\nsetRepositories(ind=1:3) # needed to automatically install Bioconductor dependencies\n\nif (!require(\"BiocManager\", quietly = TRUE))\n    install.packages(\"BiocManager\")\n\nBiocManager::install(\"Rsamtools\")\n\ninstall.packages(\"Signac\")\ninstall.packages(\"ggplot2\")\ninstall.packages(\"cowplot\")\ninstall.packages(\"devtools\")\ndevtools::install_github('satijalab/seurat-data')\n\nBiocManager::install(\"EnsDb.Hsapiens.v86\")\nBiocManager::install(\"biovizBase\")\nBiocManager::install(c('BSgenome.Hsapiens.UCSC.hg38', 'EnsDb.Hsapiens.v86'))\nBiocManager::install(\"clusterProfiler\")\nBiocManager::install(\"org.Hs.eg.db\")\nBiocManager::install(\"enrichplot\")\n</code></pre> <p>Well done!</p> <p>You are ready to start the workshop.</p>"},{"location":"tutorials/seurat-go/seurat-go/#introduction","title":"Introduction","text":""},{"location":"tutorials/seurat-go/seurat-go/#load-these-packages","title":"Load these packages","text":"<pre><code># load libraries\nlibrary(Seurat)\nlibrary(Signac)\nlibrary(EnsDb.Hsapiens.v86)\nlibrary(ggplot2)\nlibrary(cowplot)\nlibrary(clusterProfiler)\nlibrary(org.Hs.eg.db)\nlibrary(enrichplot)\n</code></pre>"},{"location":"tutorials/seurat-go/seurat-go/#download-the-datasets","title":"Download the datasets","text":"<pre><code>library(SeuratData)\n# install the dataset and load requirements\nInstallData(\"pbmcMultiome\")\n</code></pre>"},{"location":"tutorials/seurat-go/seurat-go/#load-the-datasets-seurat-object","title":"Load the datasets (Seurat object)","text":"<p>We will use two datasets in this workshop. One is single-cell RNA-seq data (<code>pbmc.rna</code>), and the other is single-cell ATAC-seq data (<code>pbmc.atac</code>). We will do a gene ontology analysis for the single-cell RNA-seq dataset first. Afterwards, we will integrate the scRNA-seq dataset with the scATAC-seq dataset to explain differences observed in the scRNA-seq data.</p> <pre><code># load both modalities\npbmc.rna &lt;- LoadData(\"pbmcMultiome\", \"pbmc.rna\")\npbmc.atac &lt;- LoadData(\"pbmcMultiome\", \"pbmc.atac\")\n</code></pre>"},{"location":"tutorials/seurat-go/seurat-go/#preprocessing-for-single-cell-rna-seq-data-seurat-pipeline","title":"Preprocessing for single-cell RNA-seq data (Seurat pipeline)","text":""},{"location":"tutorials/seurat-go/seurat-go/#qc-for-rna-data-already-performed-and-saved-in-the-dataset","title":"QC for RNA data (already performed and saved in the dataset)","text":"<p>In order to focus this workshop on downstream analysis, we have performed the QC steps for the RNA data and applied the label \u2018filtered\u2019. We move forward by  selecting only cells that are not labelled \u2018filtered\u2019.</p> <pre><code># We use Seurat V5 object\npbmc.rna[[\"RNA\"]] &lt;- as(pbmc.rna[[\"RNA\"]], Class = \"Assay5\")\n# repeat QC steps performed in the WNN vignette\npbmc.rna &lt;- subset(pbmc.rna, seurat_annotations != \"filtered\")\n</code></pre>"},{"location":"tutorials/seurat-go/seurat-go/#preprocess-rna-data-from-seurat-workshop","title":"Preprocess RNA data (from Seurat workshop)","text":"<p>We will perform standard Seurat pipeline for single-cell RNA analysis. We will normalise the data, find variable features, scale the data, run PCA, and run UMAP. See also our introduction to single-cell RNA-seq workshop for more details.</p> <pre><code># Perform standard analysis of each modality independently RNA analysis\npbmc.rna &lt;- NormalizeData(pbmc.rna)\n\n## Normalising layer: counts\n\npbmc.rna &lt;- FindVariableFeatures(pbmc.rna)\n\n## Finding variable features for layer counts\n\npbmc.rna &lt;- ScaleData(pbmc.rna)\n\n## Centering and scaling data matrix\n\npbmc.rna &lt;- RunPCA(pbmc.rna)\n</code></pre> Output <pre><code>## PC_ 1 \n## Positive:  PLXDC2, SLC8A1, LRMDA, FCN1, TYMP, MCTP1, JAK2, RBM47, IRAK3, NAMPT \n##     DMXL2, TBXAS1, ZEB2, LYN, LRRK2, SAT1, GAB2, CYBB, TNFAIP2, CSF3R \n##     HCK, TLR2, CLEC7A, LYST, VCAN, DENND1A, FGD4, CD36, GRK3, FAM49A \n## Negative:  CD247, IL32, CAMK4, IL7R, LTB, LEF1, BACH2, INPP4B, BCL2, SYNE2 \n##     THEMIS, TRBC2, RORA, TXK, ANK3, CD69, TRBC1, MLLT3, APBA2, ACTG1 \n##     RASGRF2, NELL2, LINC01934, TAFA1, SAMD3, PCAT1, PFN1, NCALD, CTSW, KCNQ5 \n## PC_ 2 \n## Positive:  CD247, IL32, DPYD, IL7R, INPP4B, AOAH, CAMK4, PDE3B, THEMIS, TXK \n##     RORA, LEF1, SLCO3A1, NEAT1, FNDC3B, ARHGAP26, ANXA1, SRGN, ADGRE5, SAMD3 \n##     SYNE2, NCALD, TRBC1, CTSW, PLCB1, APBA2, CCL5, S100A4, TGFBR3, PRF1 \n## Negative:  BANK1, PAX5, MS4A1, FCRL1, NIBAN3, AFF3, IGHM, EBF1, LINC00926, OSBPL10 \n##     RALGPS2, CD79A, CD22, COBLL1, BLK, BLNK, AP002075.1, ADAM28, IGHD, COL19A1 \n##     BCL11A, CD79B, PLEKHG1, GNG7, DENND5B, WDFY4, TCF4, AC120193.1, RUBCNL, SPIB \n## PC_ 3 \n## Positive:  BACH2, LEF1, PDE3B, CAMK4, IL7R, LTB, ANK3, FHIT, INPP4B, NELL2 \n##     BCL2, RASGRF2, CSGALNACT1, SLC2A3, MLLT3, AC139720.1, PLCL1, PRKN, PAX5, FCRL1 \n##     LINC00926, TSHZ2, MS4A1, PTPRK, AL589693.1, CD79A, EBF1, ST6GALNAC3, BANK1, COL19A1 \n## Negative:  GZMB, NKG7, GNLY, PRF1, KLRD1, GZMA, CST7, CLIC3, CCL5, FGFBP2 \n##     SPON2, ADGRG1, KLRF1, GZMH, CCL4, TGFBR3, LINC00996, LINC01478, PDGFD, PTGDR \n##     C1orf21, FCRL6, CLEC4C, SLAMF7, BNC2, CTSW, IL2RB, EPHB1, LILRA4, HOPX \n## PC_ 4 \n## Positive:  NKG7, GNLY, PRF1, KLRD1, GZMA, CST7, CCL5, FGFBP2, MCTP2, ADGRG1 \n##     GZMH, CCL4, KLRF1, FCGR3A, SPON2, TGFBR3, PDGFD, PAX5, FCRL1, MS4A1 \n##     FCRL6, PTGDR, BNC2, MTSS1, CX3CR1, LINC00926, C1orf21, IL2RB, PPP2R2B, HOPX \n## Negative:  LINC01478, CUX2, EPHB1, CLEC4C, LILRA4, COL26A1, AC023590.1, PTPRS, SCN9A, LINC01374 \n##     COL24A1, LINC00996, NRP1, PHEX, FAM160A1, TNFRSF21, PLXNA4, PACSIN1, SCAMP5, SLC35F3 \n##     DNASE1L3, P3H2, LRRC26, PLD4, ITM2C, SCN1A-AS1, PLEKHD1, SERPINF1, SCT, PTCRA \n## PC_ 5 \n## Positive:  CDKN1C, IFITM3, HES4, CSF1R, SMIM25, FCGR3A, MS4A7, LST1, AIF1, LRRC25 \n##     AC104809.2, MAFB, CALHM6, CFD, AC020651.2, SERPINA1, GPBAR1, SIGLEC10, CST3, HMOX1 \n##     CTSL, TCF7L2, FMNL2, HLA-DPA1, CKB, MTSS1, COTL1, IFI30, CCDC26, SPRED1 \n## Negative:  PLCB1, VCAN, ARHGAP24, CSF3R, DYSF, LINC00937, FNDC3B, GLT1D1, VCAN-AS1, AC020916.1 \n##     PDE4D, PADI4, ARHGAP26, CREB5, TREM1, MCTP2, CD36, MEGF9, KIF13A, MICAL2 \n##     FCAR, ACSL1, CLMN, JUN, ANXA1, MIR646HG, RAB11FIP1, CRISPLD2, GNLY, ZBTB16\n</code></pre> <pre><code>pbmc.rna &lt;- RunUMAP(pbmc.rna, dims = 1:30)\n\n## Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric\n## To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'\n## This message will be shown once per session\n## 11:47:36 UMAP embedding parameters a = 0.9922 b = 1.112\n## 11:47:36 Read 10412 rows and found 30 numeric columns\n## 11:47:36 Using Annoy for neighbor search, n_neighbors = 30\n## 11:47:36 Building Annoy index with metric = cosine, n_trees = 50\n## 0%   10   20   30   40   50   60   70   80   90   100%\n## [----|----|----|----|----|----|----|----|----|----|\n## **************************************************|\n## 11:47:36 Writing NN index file to temp file /var/folders/pv/fvynh7953flggrfb49p2lqsc0000gn/T//RtmpuPPPuo/file4dc32cd5de65\n## 11:47:36 Searching Annoy index using 1 thread, search_k = 3000\n## 11:47:38 Annoy recall = 100%\n## 11:47:38 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30\n## 11:47:39 Initializing from normalized Laplacian + noise (using RSpectra)\n## 11:47:39 Commencing optimization for 200 epochs, with 450622 positive edges\n## 11:47:42 Optimization finished\n</code></pre>"},{"location":"tutorials/seurat-go/seurat-go/#cluster-and-visualise-the-rna-data","title":"Cluster and visualise the RNA data","text":"<p>Next, we obtain an overview of the RNA data by visualising clusters.</p> <p><pre><code># Clustering\npbmc.rna &lt;- FindNeighbors(pbmc.rna, dims = 1:30)\n\n## Computing nearest neighbor graph\n## Computing SNN\n\npbmc.rna &lt;- FindClusters(pbmc.rna, resolution = 0.5)\n\n## Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n## \n## Number of nodes: 10412\n## Number of edges: 412246\n## \n## Running Louvain algorithm...\n## Maximum modularity in 10 random starts: 0.9154\n## Number of communities: 17\n## Elapsed time: 0 seconds\n\n# Visualise the RNA data\nDimPlot(pbmc.rna, group.by = \"seurat_clusters\", label = TRUE)\n</code></pre> </p>"},{"location":"tutorials/seurat-go/seurat-go/#find-marker-genes-for-each-cell-sub-type","title":"Find marker genes for each cell sub-type","text":"<p>We found that clusters 2, 3, and 8 likely have different functions, forming distinct clusters. We aim to find marker genes for each cluster to further explore the differences.</p> <pre><code># Find marker genes for each cluster\nIdents(pbmc.rna) &lt;- \"seurat_clusters\"\nmarker.genes.pbmc.rna &lt;- FindAllMarkers(pbmc.rna, only.pos = TRUE, \n                                        min.pct = 0.5, logfc.threshold = 0.5)\n\n## Calculating cluster 0\n## For a (much!) faster implementation of the Wilcoxon Rank Sum Test,\n## (default method for FindMarkers) please install the presto package\n## --------------------------------------------\n## install.packages('devtools')\n## devtools::install_github('immunogenomics/presto')\n## --------------------------------------------\n## After installation of presto, Seurat will automatically use the more \n## efficient implementation (no further action necessary).\n## This message will be shown once per session\n## Calculating cluster 1\n## Calculating cluster 2\n## Calculating cluster 3\n## Calculating cluster 4\n## Calculating cluster 5\n## Calculating cluster 6\n## Calculating cluster 7\n## Calculating cluster 8\n## Calculating cluster 9\n## Calculating cluster 10\n## Calculating cluster 11\n## Calculating cluster 12\n## Calculating cluster 13\n## Calculating cluster 14\n## Calculating cluster 15\n## Calculating cluster 16\n</code></pre>"},{"location":"tutorials/seurat-go/seurat-go/#gene-ontology-analysis","title":"Gene Ontology analysis","text":"<p>We now have a marker gene list for each cluster. But it can be difficult to interpret a cluster based on gene names alone. A good method to interpret a list of genes is gene ontology analysis. We will perform gene ontology analysis to understand the biological functions of these marker genes.</p>"},{"location":"tutorials/seurat-go/seurat-go/#preview-the-marker-genes","title":"Preview the marker genes","text":"<p>Let\u2019s have a look the data structure of the marker gene list.</p> <pre><code>marker.genes.pbmc.rna[1:5, ]\n</code></pre> p_val &lt;dbl&gt; avg_log2FC &lt;dbl&gt; pct.1 &lt;dbl&gt; pct.2 &lt;dbl&gt; p_val_adj &lt;dbl&gt; cluster &lt;fct&gt; gene &lt;chr&gt; LRMDA 0 3.907970 0.976 0.142 0 0 LRMDA PLXDC2 0 3.948556 0.994 0.171 0 0 PLXDC2 SLC8A1 0 3.389460 0.977 0.158 0 0 SLC8A1 CSF3R 0 4.401877 0.903 0.092 0 0 CSF3R RBM47 0 3.747440 0.935 0.153 0 0 RBM47"},{"location":"tutorials/seurat-go/seurat-go/#find-marker-genes-for-cluster-2-cluster-3-and-cluster-8","title":"Find marker genes for Cluster 2, Cluster 3 and Cluster 8","text":"<p>Because the gene list is long, we will focus on Cluster 2, Cluster 3 and Cluster 8 marker genes with significant p-values (adjust p-value &lt; 0.05).</p> <pre><code>Cluster2.markers &lt;- marker.genes.pbmc.rna[marker.genes.pbmc.rna$cluster==2 \n                                           &amp; marker.genes.pbmc.rna$p_val_adj &lt; 0.05, ]\nCluster3.markers &lt;- marker.genes.pbmc.rna[marker.genes.pbmc.rna$cluster==3 \n                                           &amp; marker.genes.pbmc.rna$p_val_adj &lt; 0.05, ]\nCluster8.markers &lt;- marker.genes.pbmc.rna[marker.genes.pbmc.rna$cluster==8\n                                           &amp; marker.genes.pbmc.rna$p_val_adj &lt; 0.05, ]\n</code></pre>"},{"location":"tutorials/seurat-go/seurat-go/#convert-gene-symbols-to-entrez-ids","title":"Convert gene symbols to Entrez IDs","text":"<p>Gene symbols are useful, because they can be easily understand by humans. But gene symbols are not unique, so we need to convert them to Entrez IDs for gene ontology analysis.</p> <pre><code>Cluster2.gene_ids &lt;- bitr(Cluster2.markers$gene, fromType = \"SYMBOL\",\n                                   toType = \"ENTREZID\", OrgDb = org.Hs.eg.db)\n\n## 'select()' returned 1:1 mapping between keys and columns\n## Warning in bitr(Cluster2.markers$gene, fromType = \"SYMBOL\", toType =\n## \"ENTREZID\", : 0.41% of input gene IDs are fail to map...\n\nCluster3.gene_ids &lt;- bitr(Cluster3.markers$gene, fromType = \"SYMBOL\",\n                                   toType = \"ENTREZID\", OrgDb = org.Hs.eg.db)\n\n## 'select()' returned 1:1 mapping between keys and columns\n## Warning in bitr(Cluster3.markers$gene, fromType = \"SYMBOL\", toType =\n## \"ENTREZID\", : 1.01% of input gene IDs are fail to map...\n\nCluster8.gene_ids &lt;- bitr(Cluster8.markers$gene, fromType = \"SYMBOL\",\n                                   toType = \"ENTREZID\", OrgDb = org.Hs.eg.db)\n\n## 'select()' returned 1:1 mapping between keys and columns\n## Warning in bitr(Cluster8.markers$gene, fromType = \"SYMBOL\", toType =\n## \"ENTREZID\", : 2.94% of input gene IDs are fail to map...\n</code></pre>"},{"location":"tutorials/seurat-go/seurat-go/#perform-go-enrichment-analysis-for-cluster-2","title":"Perform GO enrichment analysis for Cluster 2","text":"<p>Let\u2019s begin with Cluster 2. This section demonstrates how to perform gene ontology analysis for Cluster 2. You can follow the same steps to do the analysis for Cluster 3 and Cluster 8.</p> <p>We will use the <code>enrichGO()</code> function from <code>clusterProfiler</code> package to perform gene ontology analysis.</p> <p>Firstly, we need to load the gene ontology database. We use the <code>org.Hs.eg.db</code> database for human gene ontology analysis. If you want to do gene ontology analysis for other species, you can find the corresponding database via Bioconductor.</p> <p>We will first focus on biological process (BP) ontology, so <code>ont = \"BP\"</code>. There are also another two databases (CC: Cellular Component and MF: Molecular Function), you can try them later.</p> <p>We will set the p-value cutoff and q-value cutoff to 0.05 to control the false positive rate and false negative rate respectively. We will also set the p-value adjustment method to \u201cBH\u201d (Benjamini &amp; Hochberg). If you want to know more about p-value adjustment methods (why we need them and what are they), see also: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6099145/.</p> <pre><code>Cluster2.ego &lt;- enrichGO(gene = Cluster2.gene_ids$ENTREZID, \n                OrgDb = org.Hs.eg.db, \n                ont = \"BP\", # biological process\n                pAdjustMethod = \"BH\", \n                pvalueCutoff = 0.05, \n                qvalueCutoff = 0.05, \n                readable = TRUE)\n</code></pre>"},{"location":"tutorials/seurat-go/seurat-go/#visualise-the-go-enrichment-results","title":"Visualise the GO enrichment results","text":""},{"location":"tutorials/seurat-go/seurat-go/#bar-plot","title":"Bar plot","text":"<p>A standard way to visualise GO enrichment results is to use a bar plot. It can tell you how many genes in the marker gene list overlap with each GO term, and how significant the enrichment is.</p> <pre><code>barplot(Cluster2.ego, showCategory=10, \n        title=\"GO Enrichment Analysis for Cluster 2\")\n</code></pre> <p></p>"},{"location":"tutorials/seurat-go/seurat-go/#dot-plot","title":"Dot plot","text":"<p>A dot plot is another way to visualise the GO enrichment results with more information. It can show you the proportion of the overlapping genes, the  overlapping gene counts, and the p-value for each GO term. You can also set the number of GO terms you want to show.</p> <pre><code>p1 &lt;- dotplot(Cluster2.ego, showCategory=20, \n        title=\"GO Enrichment Analysis for Cluster 2\")\np1 + theme(axis.text.y = element_text(size = 3))\n</code></pre> <p></p>"},{"location":"tutorials/seurat-go/seurat-go/#enrichment-map-plot","title":"Enrichment map plot","text":"<p>GO terms are correlated with each other. The enrichment map plot can show you the correlation between GO terms. It can help you to understand the relationship between different biological processes.</p> <pre><code>Cluster2.ego &lt;- pairwise_termsim(Cluster2.ego)\nemapplot(Cluster2.ego, showCategory=20)\n</code></pre> <p></p>"},{"location":"tutorials/seurat-go/seurat-go/#cnet-plot","title":"Cnet plot","text":"<p>A Cnet plot can show you the relationship between GO terms and genes.</p> <pre><code>cnetplot(Cluster2.ego, categorySize=\"pvalue\", \n         foldChange=Cluster2.gene_ids$ENTREZID, showCategory = 3)\n</code></pre> <p></p> <p>Challenge</p> <p>Perform GO enrichment analysis for the other 2 cluster.</p> Solution <pre><code>Cluster3.ego &lt;- enrichGO(gene = Cluster3.gene_ids$ENTREZID, \n                OrgDb = org.Hs.eg.db, \n                ont = \"BP\",\n                pAdjustMethod = \"BH\", \n                pvalueCutoff = 0.05, \n                qvalueCutoff = 0.05, \n                readable = TRUE)\n\nCluster8.ego &lt;- enrichGO(gene = Cluster8.gene_ids$ENTREZID,\n                OrgDb = org.Hs.eg.db, \n                ont = \"BP\",\n                pAdjustMethod = \"BH\", \n                pvalueCutoff = 0.05, \n                qvalueCutoff = 0.05, \n                readable = TRUE)\n</code></pre>"},{"location":"tutorials/seurat-go/seurat-go/#visualise-the-go-enrichment-results-for-the-other-2-clusters","title":"Visualise the GO enrichment results for the other 2 clusters","text":"<p><pre><code>barplot(Cluster3.ego, showCategory=10, \n        title=\"GO Enrichment Analysis for Cluster 3\")\n</code></pre> </p> <p><pre><code>p_cluster3 &lt;- dotplot(Cluster3.ego, showCategory=20, \n        title=\"GO Enrichment Analysis for Cluster 3\")\np_cluster3 + theme(axis.text.y = element_text(size = 3))\n</code></pre> </p> <p><pre><code>Cluster3.ego &lt;- pairwise_termsim(Cluster3.ego)\nemapplot(Cluster3.ego, showCategory=20)\n</code></pre> </p> <p><pre><code>cnetplot(Cluster3.ego, categorySize=\"pvalue\", \n         foldChange=Cluster3.gene_ids$ENTREZID, showCategory = 3)\n\n## Warning in cnetplot.enrichResult(x, ...): Use 'color.params = list(foldChange = your_value)' instead of 'foldChange'.\n##  The foldChange parameter will be removed in the next version.\n</code></pre> </p> <p><pre><code>barplot(Cluster8.ego, showCategory=10, \n        title=\"GO Enrichment Analysis for Cluster 8\")\n</code></pre> </p> <p><pre><code>p_cluster8 &lt;- dotplot(Cluster8.ego, showCategory=20, \n        title=\"GO Enrichment Analysis for Cluster 8\")\np_cluster8 + theme(axis.text.y = element_text(size = 3))\n</code></pre> </p> <p><pre><code>Cluster8.ego &lt;- pairwise_termsim(Cluster8.ego)\nemapplot(Cluster8.ego, showCategory=20)\n</code></pre> </p> <p><pre><code>cnetplot(Cluster8.ego, categorySize=\"pvalue\", \n         foldChange=Cluster8.gene_ids$ENTREZID, showCategory = 3)\n\n## Warning in cnetplot.enrichResult(x, ...): Use 'color.params = list(foldChange = your_value)' instead of 'foldChange'.\n##  The foldChange parameter will be removed in the next version.\n</code></pre> </p> <p>Discussion</p> <ul> <li>What are the differences between the three clusters?</li> <li>Which plots are most informative for you?</li> <li>What are the most interesting GO terms you found?</li> </ul>"},{"location":"tutorials/seurat-go/seurat-go/#perform-gene-ontology-analysis-for-all-clusters","title":"Perform gene ontology analysis for all clusters","text":"<p>We have completed gene ontology analysis for each cluster. But we can also perform gene ontology analysis for all clusters together. We can combine all marker genes from all clusters and do gene ontology analysis for them.</p> <pre><code>cluster_gene_list &lt;- split(marker.genes.pbmc.rna$gene, marker.genes.pbmc.rna$cluster)\n\ncluster_gene_list &lt;- lapply(cluster_gene_list, function(genes) {\n  gene_ids &lt;- bitr(genes, fromType = \"SYMBOL\", toType = \"ENTREZID\", OrgDb = org.Hs.eg.db)\n  return(gene_ids$ENTREZID)\n})\n\n## 'select()' returned 1:1 mapping between keys and columns\n## 'select()' returned 1:1 mapping between keys and columns\n## 'select()' returned 1:1 mapping between keys and columns\n## 'select()' returned 1:1 mapping between keys and columns\n## 'select()' returned 1:1 mapping between keys and columns\n## 'select()' returned 1:1 mapping between keys and columns\n## 'select()' returned 1:1 mapping between keys and columns\n## 'select()' returned 1:1 mapping between keys and columns\n## 'select()' returned 1:1 mapping between keys and columns\n## 'select()' returned 1:1 mapping between keys and columns\n## 'select()' returned 1:1 mapping between keys and columns\n## 'select()' returned 1:1 mapping between keys and columns\n## 'select()' returned 1:1 mapping between keys and columns\n## 'select()' returned 1:1 mapping between keys and columns\n## 'select()' returned 1:1 mapping between keys and columns\n## 'select()' returned 1:many mapping between keys and columns\n## 'select()' returned 1:1 mapping between keys and columns\n</code></pre> <p>We can use the <code>compareCluster()</code> function from <code>clusterProfiler</code> package to perform gene ontology analysis for all clusters together.</p> <pre><code># GO enrichment analysis for BP\ngo_compare_bp &lt;- compareCluster(geneCluster = cluster_gene_list, \n                             fun = \"enrichGO\", \n                             OrgDb = org.Hs.eg.db, \n                             ont = \"BP\",  # \"BP\"\u3001\"MF\" or \"CC\"\n                             pAdjustMethod = \"BH\",\n                             pvalueCutoff = 0.05,\n                             qvalueCutoff = 0.05)\n</code></pre>"},{"location":"tutorials/seurat-go/seurat-go/#visualise-the-go-enrichment-results-for-all-clusters","title":"Visualise the GO enrichment results for all clusters","text":"<p>A dot plot is a good way to visualise the GO enrichment results for all clusters. It can show you the proportion of overlap and p-value for each GO term, for all clusters in a single plot.</p> <p><pre><code>cluster.p1 &lt;- dotplot(go_compare_bp, showCategory = 1,\n              title = \"GO Enrichment (Biological Process)\")\ncluster.p1 + theme(axis.text.y = element_text(size = 5))\n</code></pre> </p> <p>But dot plots are not good for showing the relationship between GO terms. We can select and cluster GO terms first, and then use a tree plot to show the correlations between GO terms.</p> <pre><code>trim_bp &lt;- pairwise_termsim(go_compare_bp, showCategory = 50)\ntreeplot(trim_bp, showCategory = 5)\n\n## Scale for fill is already present.\n## Adding another scale for fill, which will replace the existing scale.\n## Warning in (function (..., type = getOption(\"ggplot2.continuous.fill\")) : log-10 transformation introduced infinite values.\n## log-10 transformation introduced infinite values.\n</code></pre> <p></p> <p>Challenge</p> <p>Perform GO enrichment analysis for other two ontologies.</p> Solution <pre><code># GO enrichment analysis for CC\ngo_compare_cc &lt;- compareCluster(geneCluster = cluster_gene_list, \n                            fun = \"enrichGO\", \n                            OrgDb = org.Hs.eg.db, \n                            ont = \"CC\",  # \"BP\"\u3001\"MF\" or \"CC\"\n                            pAdjustMethod = \"BH\",\n                            pvalueCutoff = 0.05,\n                            qvalueCutoff = 0.05)\n\n# GO enrichment analysis for MF\ngo_compare_mf &lt;- compareCluster(geneCluster = cluster_gene_list, \n                            fun = \"enrichGO\", \n                            OrgDb = org.Hs.eg.db, \n                            ont = \"MF\",  # \"BP\"\u3001\"MF\" or \"CC\"\n                            pAdjustMethod = \"BH\",\n                            pvalueCutoff = 0.05,\n                            qvalueCutoff = 0.05)\n</code></pre>"},{"location":"tutorials/seurat-go/seurat-go/#visualise-go-enrichment-results-for-other-two-ontology-categories","title":"Visualise GO enrichment results for other two ontology categories","text":"<p><pre><code>cluster.p2 &lt;- dotplot(go_compare_cc, showCategory = 1,\n              title = \"GO Enrichment (Cellular Component)\")\n\ncluster.p2 + theme(axis.text.y = element_text(size = 5))\n</code></pre> </p> <p><pre><code>trim_cc &lt;- pairwise_termsim(go_compare_cc, showCategory = 50)\ntreeplot(trim_cc, showCategory = 5)\n</code></pre> </p> <p><pre><code>cluster.p3 &lt;- dotplot(go_compare_mf, showCategory = 1,\n              title = \"GO Enrichment (Molecular Function)\")\ncluster.p3 + theme(axis.text.y = element_text(size = 5))\n</code></pre> </p> <p><pre><code>trim_mf &lt;- pairwise_termsim(go_compare_mf, showCategory = 50)\ntreeplot(trim_mf, showCategory = 5)\n</code></pre> </p>"},{"location":"tutorials/seurat-go/seurat-go/#integrate-atac-seq-data-with-single-cell-rna-seq-data-n-integration","title":"Integrate ATAC-seq data with single-cell RNA-seq data (N Integration)","text":"<p>From the gene ontology analysis, we found that the three clusters have different biological functions. But we still don\u2019t know why they have different functions. One possible reason is that they have different gene activity. We can use the ATAC-seq data to quantify the gene activity and integrate the ATAC-seq data with the single-cell RNA-seq data to explain the differences.</p>"},{"location":"tutorials/seurat-go/seurat-go/#qc-for-atac-seq-data-already-performed-and-saved-in-the-dataset","title":"QC for ATAC-seq data (already performed and saved in the dataset)","text":"<p>Similar to the RNA data, we have completed the QC for the ATAC-seq data and applied the label \u201cfiltered\u201d. We move forward by  selecting only cells that are not labelled \u2018filtered\u2019.</p> <pre><code>pbmc.atac &lt;- subset(pbmc.atac, seurat_annotations != \"filtered\")\n</code></pre>"},{"location":"tutorials/seurat-go/seurat-go/#preprocess-atac-seq-data","title":"Preprocess ATAC-seq data","text":"<p>We will perform the standard Seurat pipeline for single-cell ATAC analysis. We will normalise the data, find top features, run SVD, and run UMAP. See <code>Signac</code> (also provided by Satija\u2019s group) tutorial for more details.</p> <pre><code># Add gene annotation information\nannotations &lt;- GetGRangesFromEnsDb(ensdb = EnsDb.Hsapiens.v86)\nseqlevelsStyle(annotations) &lt;- \"UCSC\"\ngenome(annotations) &lt;- \"hg38\"\nAnnotation(pbmc.atac) &lt;- annotations\n\n# We exclude the first dimension as this is typically correlated with sequencing depth\npbmc.atac &lt;- RunTFIDF(pbmc.atac)\n\n## Performing TF-IDF normalisation\n\npbmc.atac &lt;- FindTopFeatures(pbmc.atac, min.cutoff = \"q0\")\npbmc.atac &lt;- RunSVD(pbmc.atac)\n\n## Running SVD\n## Scaling cell embeddings\n\npbmc.atac &lt;- RunUMAP(pbmc.atac, reduction = \"lsi\", dims = 2:30, \n                     reduction.name = \"umap.atac\", reduction.key = \"atacUMAP_\")\n\n## 11:52:35 UMAP embedding parameters a = 0.9922 b = 1.112\n## 11:52:36 Read 10412 rows and found 29 numeric columns\n## 11:52:36 Using Annoy for neighbor search, n_neighbors = 30\n## 11:52:36 Building Annoy index with metric = cosine, n_trees = 50\n## 0%   10   20   30   40   50   60   70   80   90   100%\n## [----|----|----|----|----|----|----|----|----|----|\n## **************************************************|\n## 11:52:36 Writing NN index file to temp file /var/folders/pv/fvynh7953flggrfb49p2lqsc0000gn/T//RtmpuPPPuo/file4dc37680c360\n## 11:52:36 Searching Annoy index using 1 thread, search_k = 3000\n## 11:52:38 Annoy recall = 100%\n## 11:52:39 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30\n## 11:52:40 Initializing from normalized Laplacian + noise (using RSpectra)\n## 11:52:40 Commencing optimization for 200 epochs, with 414208 positive edges\n## 11:52:43 Optimization finished\n</code></pre>"},{"location":"tutorials/seurat-go/seurat-go/#visualise-the-atac-seq-data-with-scrna-seq-data","title":"Visualise the ATAC-seq data with scRNA-seq data","text":"<p>Next, we want a side-by-side overview of the single-cell ATAC-seq  and RNA-seq datasets.</p> <p><pre><code># Visualise two datasets together\np1 &lt;- DimPlot(pbmc.rna, group.by = \"seurat_clusters\", label = TRUE) + NoLegend() + ggtitle(\"RNA\")\np2 &lt;- DimPlot(pbmc.atac, group.by = \"orig.ident\", label = FALSE) + NoLegend() + ggtitle(\"ATAC\")\np1 + p2\n</code></pre> </p> <p>From the visualisation, we have the clustering information from the RNA data, but we know nothing about the ATAC data.</p> <p>We can see that the two datasets have different clustering patterns. We will integrate the two datasets to explain the ATAC-seq clusters.</p>"},{"location":"tutorials/seurat-go/seurat-go/#quantify-gene-activity","title":"Quantify gene activity","text":"<p>Before we integrate the two datasets, we need to quantify the gene activity from the ATAC-seq data. We will use the <code>GeneActivity()</code> function from <code>Signac</code> package to quantify the gene activity.</p> <pre><code># quantify gene activity\ngene.activities &lt;- GeneActivity(pbmc.atac, features = VariableFeatures(pbmc.rna))\n\n## Extracting gene coordinates\n## Extracting reads overlapping genomic regions\n\n# add gene activities as a new assay\npbmc.atac[[\"ACTIVITY\"]] &lt;- CreateAssayObject(counts = gene.activities)\n\n# normalise gene activities\nDefaultAssay(pbmc.atac) &lt;- \"ACTIVITY\"\npbmc.atac &lt;- NormalizeData(pbmc.atac)\npbmc.atac &lt;- ScaleData(pbmc.atac, features = rownames(pbmc.atac))\n\n## Centering and scaling data matrix\n</code></pre>"},{"location":"tutorials/seurat-go/seurat-go/#integrate-rna-seq-data-with-atac-seq-data","title":"Integrate RNA-seq data with ATAC-seq data","text":"<p>Similar to integrating two RNA-seq data, we will use the <code>FindTransferAnchors()</code> function from the Seurat package to integrate the RNA-seq data with the ATAC-seq data. We will use the CCA method to integrate the two datasets. Then, we can transfer the clustering information from the RNA-seq data to the ATAC-seq data.</p> <pre><code># Identify anchors\ntransfer.anchors &lt;- FindTransferAnchors(reference = pbmc.rna, query = pbmc.atac, features = VariableFeatures(object = pbmc.rna),\n                                        reference.assay = \"RNA\", query.assay = \"ACTIVITY\", reduction = \"cca\")\n\n## Warning: 714 features of the features specified were not present in both the reference query assays. \n## Continuing with remaining 1286 features.\n## Running CCA\n## Merging objects\n## Finding neighborhoods\n## Finding anchors\n##  Found 23956 anchors\n\ncluster.predictions &lt;- TransferData(anchorset = transfer.anchors, refdata = pbmc.rna$seurat_clusters,\n                                     weight.reduction = pbmc.atac[[\"lsi\"]], dims = 2:30)\n\n## Finding integration vectors\n## Finding integration vector weights\n## Predicting cell labels\n\npbmc.atac &lt;- AddMetaData(pbmc.atac, metadata = cluster.predictions)\n</code></pre>"},{"location":"tutorials/seurat-go/seurat-go/#visualise-the-integrated-data","title":"Visualise the integrated data","text":"<p>We are now able to visualise the integrated data. We can see the predicted cluster annotation of the scATAC-seq data on the UMAP plot.</p> <p><pre><code># Visualise the integrated data\nDimPlot(pbmc.atac, group.by = \"predicted.id\", label = TRUE) + NoLegend() + ggtitle(\"Predicted clusters annotation\")\n</code></pre> </p>"},{"location":"tutorials/seurat-go/seurat-go/#visualise-the-atac-seq-regions-around-a-gene-of-interest","title":"Visualise the ATAC-seq regions around a gene of interest","text":"<p>We can also visualise the ATAC-seq regions around a gene of interest. We will use two marker genes of T cells (CD4 and CD8). We can see the ATAC-seq regions around the CD4 and CD8A genes differ for different cell types.</p> <p><pre><code>DefaultAssay(pbmc.atac) &lt;- \"ATAC\"\nIdents(pbmc.atac) &lt;- \"predicted.id\"\nCoveragePlot(\n  pbmc.atac, region = \"CD4\", group.by = \"predicted.id\",\n  idents = c(\"2\", \"3\", \"8\"),\n  extend.downstream = 5000, extend.upstream = 5000)\n\n## Warning: Removed 10 rows containing missing values or values outside the scale range\n## (`geom_segment()`).\n</code></pre> </p> <p><pre><code>DefaultAssay(pbmc.atac) &lt;- \"ATAC\"\nIdents(pbmc.atac) &lt;- \"predicted.id\"\nCoveragePlot(\n  pbmc.atac, region = \"CD8A\", group.by = \"predicted.id\",\n  idents = c(\"2\", \"3\", \"8\"),\n  extend.downstream = 5000, extend.upstream = 5000)\n</code></pre> </p>"},{"location":"tutorials/seurat-go/seurat-go/#additional-benchmark-study-evaluate-the-accuracy-of-the-integrated-data","title":"Additional benchmark study: Evaluate the accuracy of the integrated data","text":"<p>We predicted the cell-type labels for the scATAC-seq data from the scRNA-seq data. So, it is useful to know how accurate the predictions are. We can evaluate the accuracy of the integrated data by comparing the predicted labels with the ground-truth labels.</p> <pre><code>celltype.predictions &lt;- TransferData(anchorset = transfer.anchors, refdata = pbmc.rna$seurat_annotations,\n                                     weight.reduction = pbmc.atac[[\"lsi\"]], dims = 2:30)\n\n## Finding integration vectors\n## Finding integration vector weights\n## Predicting cell labels\n\npbmc.atac &lt;- AddMetaData(pbmc.atac, metadata = celltype.predictions)\n</code></pre> <p><pre><code># Visualise the integrated data\npbmc.atac$annotation_correct &lt;- pbmc.atac$predicted.id == pbmc.atac$seurat_annotations\np1 &lt;- DimPlot(pbmc.atac, group.by = \"predicted.id\", label = TRUE) + NoLegend() + ggtitle(\"Predicted annotation\")\np2 &lt;- DimPlot(pbmc.atac, group.by = \"seurat_annotations\", label = TRUE) + NoLegend() + ggtitle(\"Ground-truth annotation\")\np1 | p2\n</code></pre> </p> <p><pre><code>DefaultAssay(pbmc.atac) &lt;- \"ATAC\"\nIdents(pbmc.atac) &lt;- \"predicted.id\"\nCoveragePlot(\n  pbmc.atac, region = \"CD4\", group.by = \"predicted.id\",\n  idents = c(\"CD8 Naive\", \"CD8 TEM_1\", \"CD8 TEM_2\", \"CD4 Naive\", \"CD4 TCM\", \"CD4 TEM\"),\n  extend.downstream = 5000, extend.upstream = 5000)\n\n## Warning: Removed 10 rows containing missing values or values outside the scale range\n## (`geom_segment()`).\n</code></pre> </p> <p><pre><code>CoveragePlot(\n  pbmc.atac, region = \"CD8A\", group.by = \"predicted.id\",\n  idents = c(\"CD8 Naive\", \"CD8 TEM_1\", \"CD8 TEM_2\", \"CD4 Naive\", \"CD4 TCM\", \"CD4 TEM\"),\n  extend.downstream = 5000, extend.upstream = 5000)\n</code></pre> </p> <p>Overall, the visualisation of the integrated data shows that the predicted labels are consistent with the ground-truth labels. The coverage plots also show that the ATAC-seq regions around the CD4 and CD8A genes are different for different cell types.</p> <p>We can also use some quantitative metrics to evaluate the accuracy of the integrated data. We can calculate the accuracy of the predicted labels by comparing them with the ground-truth labels.</p> <p><pre><code># Evaluate the accuracy of the integrated data\npredictions &lt;- table(pbmc.atac$seurat_annotations, pbmc.atac$predicted.id)\npredictions &lt;- predictions/rowSums(predictions)  # normalize for number of cells in each cell type\npredictions &lt;- as.data.frame(predictions)\np1 &lt;- ggplot(predictions, aes(Var1, Var2, fill = Freq)) + geom_tile() + scale_fill_gradient(name = \"Fraction of cells\",\n                                                                                            low = \"#ffffc8\", high = \"#7d0025\") + xlab(\"Cell type annotation (RNA)\") + ylab(\"Predicted cell type label (ATAC)\") +\n  theme_cowplot() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))\n\ncorrect &lt;- length(which(pbmc.atac$seurat_annotations == pbmc.atac$predicted.id))\nincorrect &lt;- length(which(pbmc.atac$seurat_annotations != pbmc.atac$predicted.id))\ndata &lt;- FetchData(pbmc.atac, vars = c(\"prediction.score.max\", \"annotation_correct\"))\np1\n</code></pre> </p> <p><pre><code>p2 &lt;- ggplot(data, aes(prediction.score.max, fill = annotation_correct, colour = annotation_correct)) +\n  geom_density(alpha = 0.5) + theme_cowplot() + scale_fill_discrete(name = \"Annotation Correct\",\n                                                                    labels = c(paste0(\"FALSE (n = \", incorrect, \")\"), paste0(\"TRUE (n = \", correct, \")\"))) + scale_color_discrete(name =\"Annotation Correct\",\n                                                                                                                                                                                  labels = c(paste0(\"FALSE (n = \", incorrect, \")\"), paste0(\"TRUE (n = \", correct, \")\"))) + xlab(\"Prediction Score\")\n\np2\n</code></pre> </p> <p>In this example, annotations for an scATAC-seq profile are correctly predicted via scRNA-seq integration ~90% of the time. In addition, the prediction.score.max field quantifies the uncertainty associated with our predicted annotations. We can see that cells that are correctly annotated are typically associated with high prediction scores (&gt;90%), while cells that are incorrectly annotated are associated with sharply lower prediction scores (&lt;50%). Incorrect assignments also tend to reflect closely related cell types (i.e. Intermediate vs. Naive B cells).</p>"},{"location":"tutorials/singlecell/","title":"10X single-cell RNA-seq analysis in R","text":""},{"location":"tutorials/singlecell/#overview","title":"Overview","text":"<p>In this workshop, you will be learning how to analyse 10X Chromium single-cell RNA-seq profiles using R. This will include reading the count data into R, quality control, normalisation, dimensionality reduction, cell clustering and finding marker genes. The main part of the workflow uses the package. You will learn how to generate common plots for visualising single-cell data, such as t-SNE plots and heatmaps. This workshop is aimed at biologists interested in learning how to explore single-cell RNA-seq data generated by the 10X platform.</p> <p>This workshop is presented by Dr Yunshun Chen from Walter Eliza Hall Institute of Medical Research (WEHI). Dr Chen is a statistical bioinformatician and a senior post-doc at WEHI Bioinformatics Division. He is one of the authors and the main maintainer of the edgeR package. He has extensive experience in RNA-seq gene expression and single-cell RNA-seq analyses.</p>"},{"location":"tutorials/singlecell/#requirements","title":"Requirements","text":"<p>The course is aimed at advanced PhD students, postdoctoral researchers and principal investigators. Some basic R knowledge is assumed \u2013 this is not an introduction to R course. If you are not familiar with the R statistical programming language it is compulsory that you work through an introductory R course before you attend this workshop.</p> <p>This workshop will cover single-cell RNA-seq analysis and assumes you have some familiarity with the more common analysis of bulk RNA-seq data. If you have no experience in analysing bulk RNA-seq data, we strongly recommend you also attend our RNA-seq Differential Gene Expression analysis in R workshop.</p> <p>Participants must bring a laptop with a Mac, Linux, or Windows operating system (not a tablet, Chromebook, etc.) that they have administrative privileges on. Bringing your laptop charger is advised. R and a few specific software packages should be installed in advance. The 10X data to be analysed, the gene annotation file and the gene signature RData file should also be downloaded prior to the workshop to allow us time to troubleshoot any problems you may have.</p> <p>Downloads:</p> <ol> <li>Download R from https://cran.r-project.org/. The lastest version is recommended (version 3.6.0 for Windows and Mac OS X 10.11 and higher).</li> <li>Install R packages by opening R and copying the following commands into your R console</li> </ol> <pre><code>if (!requireNamespace(\u201cBiocManager\u201d, quietly = TRUE))\n\n    install.packages(\u201cBiocManager\u201d)\n\nBiocManager::install(c(\u201cscran\u201d, \u201cmonocle\u201d, \u201cvcd\u201d))\n</code></pre> <ol> <li>Download the 10X single-cell RNA-seq data from GEO (https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM2510617). The three data files required for the workshop are: GSM2510617_P7-barcodes.tsv.gz, GSM2510617_P7-genes.tsv.gz and GSM2510617_P7-matrix.mtx.gz, of which the download links are available at the bottom of the web page. Unzip the three data files and store them in the working directory (or a sub-folder under the working directory).</li> <li>Download the mouse gene annotation file from http://bioinf.wehi.edu.au/edgeR/Mus_musculus.gene_info.gz and save it under the working directory. Note there is no need to unzip the file.</li> <li>Download gene signatures from WEHI and save it under the working directory.</li> <li>Check downloads are correct by looking for any error messages when running the commands:</li> </ol> <pre><code>library(edgeR)\nlibrary(scater)\nlibrary(scran)\nlibrary(monocle)\nlibrary(vcd)\nread.delim(\u201cP7-genes.tsv\u201d, nrow=5)\nread.delim(\u201cMus_musculus.gene_info.gz\u201d, nrow=5)\nload(\u201cBulkSignatures.RData\u201d)\n</code></pre> <p>Important: If you have any trouble installing the software or packages, please contact us prior to the workshop.</p>"},{"location":"tutorials/singlecell/#workshop-syllabus","title":"Workshop syllabus","text":"<p>This workshop will follow this analysis guide.</p>"},{"location":"tutorials/singlecell/#additional-single-cell-analysis-links","title":"Additional single-cell analysis links","text":"<ul> <li> <p>An overview and comparison of protocols and analysis methods: Tian, L. et al, Biorxiv, scRNA-seq mixology: towards better benchmarking of single cell RNA-seq protocols and analysis methods</p> </li> <li> <p>Single cell RNA-seq data analysis:</p> <ul> <li>A course by CSC, Finland: Single cell data analysis</li> <li>A course by the Hemberg Lab: scRNA-seq analysis</li> </ul> </li> <li> <p>List of software packages for single-cell data analysis: Davis, S. et al: Zenodo link; Github link</p> </li> </ul>"},{"location":"tutorials/template/template/","title":"Workshop Template","text":""},{"location":"tutorials/template/template/#overview","title":"Overview","text":"<p>Topic</p> <ul> <li> Genomics</li> <li> Transcriptomics</li> <li> Proteomics</li> <li> Metabolomics</li> <li> Statistics and visualisation</li> <li> Structural Modelling</li> <li> Basic skills</li> </ul> <p>Skill level</p> <ul> <li> Beginner  </li> <li> Intermediate  </li> <li> Advanced  </li> </ul> <p>Data: Placeholder.</p> <p>Tools: Placeholder.</p> <p>Pipeline: Section 1: Placeholder. Section 2: Placeholder. Section 3: Placeholder. Section 4: Placeholder.  </p> <p>Learning objectives: Placeholder.</p> <p>Disclaimer</p> <p>This tutorial is partially based on some existing material.</p>"},{"location":"tutorials/template/template/#setup","title":"Setup","text":"<p>Install something </p> <p>Tell users what to install. Subsection headers using bold, not the hash character.</p> <p>Well done!</p> <p>Confirm that users are ready to start.</p>"},{"location":"tutorials/template/template/#introduction","title":"Introduction","text":"<p>Expected time: 40 minutes.</p>"},{"location":"tutorials/template/template/#subsection","title":"Subsection","text":"<p>Sections are marked with <code>##</code>, and subsections with <code>###</code>. Higher heading levels should be avoided.</p> <p>These divisions can also be used in other parts other than between sections.</p> <p>Add keypoints at the end of each section or subsection. Keypoints use the <code>note</code> admonition.</p> <p>Read more about admonitions on the Material for MkDocs documentation.</p> <p>Keypoints</p> <ul> <li>Version control is like an unlimited \u2018undo\u2019.</li> <li>Version control also allows many people to work in parallel.</li> </ul> <p>TO-DO</p> <ul> <li>Add more admonitions to the template.</li> </ul> <p>Question</p> <p>Questions have a nested, collapsed solution that uses the \u201cexample\u201d admonition.</p> <p>This is because it\u2019s not uncommon to have \u201cKeypoints\u201d right after a question, and keypoints use the \u201cnote\u201d admonition. So we prevent repetition.</p> Solution <p>Answer to the question above.</p>"},{"location":"tutorials/template/template/#glossary","title":"Glossary","text":"<p>A glossary at the end of the page is always helpful. This way you can refer to terms throughout the lesson.</p> <p>Terms: are written in bold in the glossary.</p>"},{"location":"tutorials/unix/","title":"Introduction to Unix","text":"<p>Click the Binder link below to launch an instance where you can complete basic Unix training.</p> <p></p> <p>PR reviewers and advice: Steven Morgan</p> <p>Current slides: media/unix_intro_slides.(pdf/pptx)</p> <p>Other slides: None</p>"},{"location":"tutorials/unix/unix/","title":"Introduction to Unix","text":""},{"location":"tutorials/unix/unix/#introduction-to-unix","title":"Introduction to Unix","text":"<p>Anticipated workshop duration when delivered to a group of participants is 3 hours.</p> <p>For queries relating to this workshop, contact Melbourne Bioinformatics (bioinformatics-training@unimelb.edu.au).</p> <p>Find out when we are next running this training as an in-person workshop, by visiting the Melbourne Bioinformaitcs Eventbrite page.</p>"},{"location":"tutorials/unix/unix/#overview","title":"Overview","text":""},{"location":"tutorials/unix/unix/#topic","title":"Topic","text":"<ul> <li> Genomics</li> <li> Transcriptomics</li> <li> Proteomics</li> <li> Metabolomics</li> <li> Statistics and visualisation</li> <li> Structural Modelling</li> <li> Basic skills</li> </ul>"},{"location":"tutorials/unix/unix/#skill-level","title":"Skill level","text":"<ul> <li> Beginner  </li> <li> Intermediate  </li> <li> Advanced  </li> </ul> <p> This workshop is designed for participants with little or no command-line knowledge.</p>"},{"location":"tutorials/unix/unix/#description","title":"Description","text":"<p>A hands-on workshop covering the basics of the Unix command line interface.</p> <p>Knowledge of the Unix operating system is fundamental to the use of many popular bioinformatics command-line tools. Whether you choose to run your analyses locally or on a high-performance computing system, knowing your way around a command-line interface is highly valuable. This workshop will introduce you to Unix concepts by way of a series of hands-on exercises.</p> <p>Completion of this workshop will provide the background knowledge required for several Melbourne Bioinformatics workshops that require command-line skills.</p> <p> Tools: Standard Unix commands, FileZilla</p> <p>Topic overview:</p> <p>Section 1: Getting started Section 2: Exploring your current directory Section 3: Making and changing directories Section 4: Viewing and manipulating files Section 5: Removing files and directories Section 6: Searching files Section 7: Putting it all together Section 8: Transferring files  </p>"},{"location":"tutorials/unix/unix/#learning-objectives","title":"Learning Objectives","text":"<p>At the end of this introductory workshop, you will:</p> <ul> <li>Access a Unix machine either locally or remotely</li> <li>Navigate the file system</li> <li>Organise your files into directories</li> <li>Change file permissions to improve security and safety</li> <li>Move and copy files between directories</li> <li>Safely remove files</li> <li>Perform searches within files</li> <li>Combine commands using pipes</li> <li>Transfer files between a local and remote machine</li> </ul>"},{"location":"tutorials/unix/unix/#tutorial-layout","title":"Tutorial layout","text":"<ul> <li>There is a <code>Table of contents</code> on the right-hand side that can be used to easily navigate through the tutorial by clicking the relevant section.</li> </ul> <pre><code>These grey coloured boxes are code blocks. The rectangular boxes in the top\nright-hand corner of this code block/grey box can be used to copy the code to\nthe clipboard.\n</code></pre> Coloured boxes like these with &gt; on the far right-hand side, can be clicked to reveal the contents. <p>REVEALED!</p> <p>Attention: Pay attention to the information in these boxes.</p> <p>Important information, hints and tips.</p>"},{"location":"tutorials/unix/unix/#requirements-and-preparation","title":"Requirements and preparation","text":"<p>Important</p> <p>Attendees are required to bring their own laptop computers. </p> <p>At least one week before the workshop, participants should install the software specified below. This should provide sufficient time for participants to liaise with their own IT support should they encounter any IT problems.  </p>"},{"location":"tutorials/unix/unix/#required-software","title":"Required Software","text":"<ul> <li>For information about required software, click here.</li> </ul>"},{"location":"tutorials/unix/unix/#required-data","title":"Required Data","text":"<ul> <li>No additional data need to be downloaded for the live delivery workshop.</li> <li>Instructions for data download for independent completion of this workshop are included in Section 1.</li> </ul>"},{"location":"tutorials/unix/unix/#mode-of-delivery","title":"Mode of Delivery","text":"<p>This workshop will be run on a Nectar Instance. An \u201cInstance\u201d is Nectar terminology for a virtual machine running on the Nectar Cloud OpenStack infrastructure. An \u201cInstance\u201d runs on a \u201ccompute node\u201d; i.e. a physical computer populated with processor chips, memory chips and so on.</p> <p>You will be given an individual IP address and password to log on to using the SSH client tool on your computer (Terminal on Mac or PuTTY on Windows).</p> <p>Should you wish to complete this workshop independently, you can do so locally (for Mac and LINUX users) or via binder (for Windows users).</p>"},{"location":"tutorials/unix/unix/#slides-and-pdf-instructions","title":"Slides and PDF instructions","text":"<p>The slides presented during this workshop are available here: PDF / PPTX.</p> <p>A printer-friendly PDF version of these workshop instructions is available here.</p>"},{"location":"tutorials/unix/unix/#author-information","title":"Author Information","text":"<p>Written by: Steven Morgan Melbourne Bioinformatics, University of Melbourne</p> <p>Created/Reviewed: November 2022</p> <p>A previous introductory Unix workshop is archived here.</p>"},{"location":"tutorials/unix/unix/#background","title":"Background","text":"<p>Before we begin the hands-on part of this workshop, we will first give a short presentation to introduce some important Unix concepts. The slides are available here: PDF / PPTX</p>"},{"location":"tutorials/unix/unix/#section-1-getting-started","title":"Section 1: Getting started","text":"<p>In this section, we will learn how to connect to a Unix computer via a program called <code>ssh</code> and run a few basic commands.</p> <p>Logging in connects your local computer (e.g. laptop) to a remote machine, and allows you to type commands into the Unix prompt. The commands are run on the remote machine, and the results are displayed on your local screen.</p> <p>You will be allocated a training account for the duration of the workshop. Your username and password will be supplied at the start of the workshop.</p> <p>We are connecting to a remote computer today so that everyone has an identical environment, regardless of the specifications of your local computer. This connection process is similar to how you would connect to a high-performance computing (HPC) system such as Spartan at The University of Melbourne.</p> I\u2019m not attending the live workshop. Can I complete the workshop independently? <p>Yes you can, although the remote machines are only provided for the live workshop participants.</p> <p>Follow the instructions for your operating system, then head down to the hands-on section.</p> Mac Users <p>Download the zipped file available at this Zenodo address. We will refer to these data later in the workshop.</p> <p>Unzip the file by double clicking it in a Finder window.</p> <p>Open the Terminal app (it comes preinstalled on every Mac). You can find it via a Spotlight Search or via the Launchpad.</p> <p>In the Terminal, you should see a blinking cursor. Type the following command and replace the word PATH_TO_DIRECTORY with the path to the location of your unzipped folder (or directory). One easy way to find the correct path is to view the directory in the Finder and enable the path bar (View &gt; Show path bar). You can then drag the correct path from the bar at the bottom of the Finder window into the Terminal.</p> <pre><code>cd PATH_TO_DIRECTORY\n</code></pre> <p>Use the following command to confirm that you have set the correct working directory.</p> <pre><code>pwd\n</code></pre> <p>If the output of this command ends in /unix_intro_data, well done! Now continue with the hands-on section.</p> Windows Users <p>We will be using a service called binder, which builds a Docker image from a specified repository. This will allow you to run Unix commands in a live environment.</p> <p>Access the binder via your web browser.</p> <p>Be patient, it can take a few minutes to set up your environment.</p> <p>Once your binder has launched, select Terminal from the bottom left-hand corner of the main page.</p> <p>In the Terminal, you should see a blinking cursor. You can now continue with the hands-on section.</p>"},{"location":"tutorials/unix/unix/#connect-to-a-unix-computer","title":"Connect to a Unix computer","text":"<p>Follow the instructions here to connect to the remote machine</p> <p>Windows users</p> <p>Windows users will need to download a terminal emulator such as PuTTY (free and open-source).</p>"},{"location":"tutorials/unix/unix/#hands-on","title":"Hands-on","text":"1.1 Run some commands <p>Once you\u2019ve logged in, run the following commands and see what they do.</p> <p>Type each command in and hit Enter/Return. Once the previous command has completed, a new prompt indicates that it\u2019s ready for the next command to be entered.</p> <p><pre><code>whoami\n</code></pre> <pre><code>date\n</code></pre> <pre><code>cal\n</code></pre></p> Answer <ul> <li><code>whoami</code>: displays your username (i.e. the person currently logged in).</li> <li><code>date</code>: displays the current date and time.</li> <li><code>cal</code>: displays a calendar.</li> </ul> 1.2 Try out some flags <p>Many Unix commands accept arguments (sometimes called flags) which enable/disable specific features. For example, you can ask the date command to produce its output in a different format.</p> <pre><code>date -I\n</code></pre> <p>It is not uncommon for a command to accept many different arguments, and, in most cases, more than one argument can be supplied at the same time. Arguments are separated by one or more space characters and they are usually case sensitive.</p> <p><pre><code>cal -m january\n</code></pre> <pre><code>cal -3\n</code></pre> <pre><code>cal -3 -m january\n</code></pre></p> 1.3 Consult the manual pages <p>If every Unix command has so many options, how you find out what they are and what they do? Thankfully, every Unix command has an associated manual that you can usually access by using the <code>man</code> command.</p> <p>Try accessing the manual pages for the commands we have used so far. Can you figure out what day of the week your 100<sup>th</sup> birthday will be?</p> binder users <p>If you are running this workshop in a binder, manual pages may not be accessible via the <code>man</code> command.</p> <p>Try an internet search for your desired command followed by manual unix instead.</p> Hint <p>The following command displays the manual page for the <code>cal</code> command. <pre><code>man cal\n</code></pre></p> <p>When you are using the <code>man</code> command, use the up and down arrows to scroll, or press q to quit. The <code>man</code> command is actually using another Unix program, a text viewer called <code>less</code>, which we\u2019ll come to later on.</p>"},{"location":"tutorials/unix/unix/#section-2-exploring-your-current-directory","title":"Section 2: Exploring your current directory","text":"<p>In this section, we will learn how to \u201clook\u201d at the file system and further expand our repertoire of Unix commands.</p> <p>The machines provided have been set up with some files for us to take a look at.</p>"},{"location":"tutorials/unix/unix/#where-am-i","title":"Where am I?","text":"<p>There may be many hundreds of directories on any Unix machine, so how do you know which one you are in? The command <code>pwd</code> will Print the Working Directory. If you ever get lost in the file system, remember the <code>pwd</code> command. Try it out.</p> <pre><code>pwd\n</code></pre> <p>Many bioinformatics tools require paths as input. Check your paths with <code>pwd</code> before you submit a job to a job scheduler.</p>"},{"location":"tutorials/unix/unix/#list-available-files-and-directories","title":"List available files and directories","text":"<p>What about looking at the contents of a directory? For that, we use the <code>ls</code> command (short for \u2018list\u2019).</p> <pre><code>ls\n</code></pre>"},{"location":"tutorials/unix/unix/#hands-on_1","title":"Hands-on","text":"2.1 Reveal more information <p>Run <code>ls</code> with the long flag to get more information about the contents of the directory. How did the output change?</p> <pre><code>ls -l\n</code></pre> Answer <p>The long flag means that each file or directory is placed on its own line. Extra information is also included.</p> <p><pre><code>drwxr-xr-x 2    alpha    alpha   4.0K  Sep  8 23:28 samples\n\\--------/ ^ \\--------/ \\-----/ \\----/ \\----------/ \\-----/\npermission |  username   group   size      date      name\n       /---^---\\\n       linkcount\n</code></pre> Where:</p> <ul> <li>permissions: 4 parts, file type, user perms, group perms and other perms<ul> <li>object type: 1 character, d = directory and - = regular file</li> <li>user permissions: 3 characters, r = read, w = write, x = execute and - no permission</li> <li>group permissions: same as user except for users within the owner group</li> <li>other permissions: same as user except for users that are not in either user or group</li> </ul> </li> <li>username: user who owns this object</li> <li>group: group who owns this object</li> <li>size: number of bytes this object takes to store on disk</li> <li>date: date and time when this object was last edited</li> <li>name: name of the object</li> <li>linkcount: number of links this object has in the file system (safe to ignore)</li> </ul> 2.2 Upgrade your <code>ls</code> <p><code>ls</code> is a command you\u2019re likely to use a lot! Why not find a combination of flags you like.</p> <p>What does this combination of flags do?</p> <pre><code>ls -lhrt\n</code></pre> Hint <p>Always remember the <code>man</code> command. <pre><code>man ls\n</code></pre></p> Answer <p>The command above returns the contents of the current directory in long form (-l), sorted in reverse (-r) order of their last edit (-t), with file sizes shown in more convenient units (-h).</p> 2.3 Compare files <p>samples is a directory; you can tell by the leading \u2018d\u2019 in the long-form <code>ls</code> output.</p> <p><code>ls</code> can be used to list the content of other directories, not just the current one. <pre><code>ls -lhrt samples\n</code></pre></p> <p>The <code>wc</code> (for Word Count) command prints the number of lines, words, and bytes in a file.</p> <pre><code>wc samples/sample_c.fastq\n</code></pre> <p>Which of the 3 FASTQ files has the most lines?</p> Hint <p><code>wc</code> can accept multiple input files with spaces between them.</p> Answer <p>sample_c.FASTQ has the most lines.</p>"},{"location":"tutorials/unix/unix/#section-3-making-and-changing-directories","title":"Section 3: Making and changing directories","text":"<p>In this section, we will learn how to change the current directory and create entirely new ones.</p>"},{"location":"tutorials/unix/unix/#create-a-new-directory","title":"Create a new directory","text":"<p>To make a new directory, we use the <code>mkdir</code> command, supplying a sensible directory name.</p> <pre><code>mkdir my_directory\n</code></pre> Did that work? <p>Some commands (including <code>mkdir</code>) do not display a message after they have been executed. You can check that your <code>mkdir</code> command worked with <code>ls</code>.</p>"},{"location":"tutorials/unix/unix/#change-working-directory","title":"Change working directory","text":"<p>Let\u2019s change our current working directory to the newly created one with the command <code>cd</code> (for Change Directory).</p> <p><pre><code>pwd\n</code></pre> <pre><code>cd my_directory\n</code></pre> <pre><code>pwd\n</code></pre></p> <p>Note that <code>cd</code> can also take the full path as input (the long version that you can see in the <code>pwd</code> output). What we supplied above is called a relative path.</p>"},{"location":"tutorials/unix/unix/#hands-on_2","title":"Hands-on","text":"3.1 Create nested directories <p>It can be very useful to organise your directories into hierarchies. Try creating a new directory inside my_directory. Then create another new directory inside that one.</p> <p>Change your working directory to the innermost directory.</p> 3.2 Change directory with .. <p>Often, it is useful to go \u2018upwards\u2019 one level in the directory structure. Two dots .. are used in Unix to refer to the parent directory of wherever you are. All directories (besides the root level) have a parent that can be accessed in this way.</p> <p>A single dot . is used to refer to the current directory (often useful when running bioinformatics tools).</p> <p>Try using .. to change your directory.</p> <p>What about ../..? What does that represent?</p> Hint <p>Set your working directory back to your innermost directory first.</p> Answer <p>../.. refers to the parent of the parent directory.</p> <p>../../.. refers to the parent of the parent of the parent directory.</p> <p>And so on\u2026</p> 3.3 Save time with tab completion <p>One great Unix you can start using right away is that you can tab complete the names of files, directories and commands.</p> <p>Just type enough characters to uniquely identify the name of a file, directory or command, press tab and Unix will do the rest.</p> <p>If pressing tab doesn\u2019t do anything, then you have not typed enough unique characters. In this case, pressing tab twice will show you all of the possible completions.</p> <p>Try using tab completion to complete directory names as you change directories with <code>cd</code>.</p> <p>Think of all the saved keystrokes!</p> How can I save more time? <p>Another great time-saver is that Unix stores a list of all of the previous commands that you have executed in each session. Access this list by using the up and down arrows.</p> <p>So, if you type a long command but make a mistake, press the up arrow and then you can use the left and right arrows to move the cursor in order to make an edit.</p> <p>You could also try the <code>history</code> command to print a list of your previous commands.</p> <pre><code>history\n</code></pre>"},{"location":"tutorials/unix/unix/#section-4-viewing-and-manipulating-files","title":"Section 4: Viewing and manipulating files","text":"<p>In this section we will focus on files; how to view them, how to copy them, how to move them, how to rename them and how to change their permissions.</p>"},{"location":"tutorials/unix/unix/#view-a-file","title":"View a file","text":"<p>We\u2019ve covered finding the locations, sizes and lengths of files, but how do we look inside them? The <code>less</code> command allows us to view (but not edit) text-based files. The <code>-S</code> flag sets the line folding to off. This is particularly useful when you have very long lines (like our FASTQ files).</p> <pre><code>less -S sample_1.fastq\n</code></pre> No such file or directory <p>If you see this error message, the most likely reason is that you are not in the correct directory.</p> <p>Use <code>pwd</code>, <code>cd</code> and <code>ls</code> to find your way to the right place.</p> What if my files are compressed? <p>If a file is in a compressed format, you will need to decompress it first before you view it with <code>less</code>.</p> <p>For example, the <code>gunzip</code> command will decompress a fastq.gz file.</p> <p>Alternatively, you can view the contents of an uncompressed file by printing it to the screen with the command <code>zcat</code>.</p> <p>When you are using <code>less</code>, you can move forward or backwards one line at a time using the arrow keys. To quit, press q.</p> <p>For long files, it can be inconvenient to view the whole thing when only a peek at a few lines or just the header information is enough.</p> <p>The command <code>head</code> prints the first 10 lines of a file to the screen.</p> <pre><code>head sample_1.fastq\n</code></pre> <p>Equivalently, we have the <code>tail</code> command, that does the same for the last lines of a file. Both <code>head</code> and <code>tail</code> have an option to change the number of lines displayed.</p> <pre><code>tail -n 4 sample_1.fastq\n</code></pre>"},{"location":"tutorials/unix/unix/#copy-move-or-rename-a-file","title":"Copy, move or rename a file","text":"<p>To make a copy of a file, all you need to do is supply the name of the file and a name for the copy to the <code>cp</code> command.</p> <pre><code>cp sample_1.fastq copy_of_sample_1.fastq\n</code></pre> <p>You can check to see the new file using <code>ls</code>.</p> <p>Moving a file from one directory to another follows the same basic command format shown below.</p> <pre><code>mv FILE DESTINATION\n</code></pre> <p>Renaming a file actually uses the <code>mv</code> command too.</p> <pre><code>mv OLD_NAME NEW_NAME\n</code></pre>"},{"location":"tutorials/unix/unix/#change-file-permissions","title":"Change file permissions","text":"<p>File and directory permissions determine what actions users can perform. We can see these permissions using the long-form <code>ls</code> output.</p> <pre><code>ls -lhrt\n</code></pre> <p>The file permission symbolic notation works as follows:</p> <p>The first character determines the type of object (d for directory, - for a regular file).</p> <p>The remaining nine characters are in three triads.</p> Three permission triads first triad: what the owner can do second triad: what the group members can do third triad: what other users can do In each triad first character: r readable second character: w writable third character: x executable Can I see an example? <p>For the permission string drwxr-xr-x</p> <p>The d means it is a directory.</p> <p>The rwx means that the owner of the directory (your user account) can read, write and execute the directory. Execute permission on a directory means that you can <code>cd</code> into the directory.</p> <p>The r-x means that anyone in the user group can read and execute the directory.</p> <p>The second r-x means that other users on the system can read and execute the directory.</p> <p>To change permissions, use the <code>chmod</code> command (for change mode). The owner of a file can change the permissions for user (u), group (g), or others (o) by adding (+) or subtracting (-) the read (r), write (w), and execute (x) permissions.</p> <p>To add write permission for others for a file, the following command would be used:</p> <pre><code>chmod o+w FILE\n</code></pre>"},{"location":"tutorials/unix/unix/#hands-on_3","title":"Hands-on","text":"4.1 Move files <p>Move sample_1.fastq and sample_2.fastq into the samples directory.</p> Hint <p>Move multiple files at once by using the wildcard character *.</p> <p>The * symbol is a Unix wildcard that can stand for any string.</p> <p>Hence sam* will refer to any file in your current directory that begins with sam.</p> 4.2 Rename a file <p>Rename sample_c.fastq to sample_3.fastq</p> <p>After 4.1 and 4.2 you should have a samples directory with 3 files that follow the same naming convention.</p> 4.3 Change file permissions <p>Remove all users write permission to the FASTQ files in the samples directory. This will prevent you from accidentally overwriting or erasing these files.</p> Hint <p>The change a permission for the user (u), group (g), and others (o) all at once, use a for all.</p>"},{"location":"tutorials/unix/unix/#section-5-removing-files-and-directories","title":"Section 5: Removing files and directories","text":"<p>In this section we\u2019ll cover how to safely remove files and directories that you no longer need.</p>"},{"location":"tutorials/unix/unix/#remove-directories","title":"Remove directories","text":"<p>The <code>mkdir</code> command that we used earlier has an analogue for removing directories called <code>rmdir</code>.</p> <pre><code>rmdir DIRECTORY\n</code></pre> <p>Helpfully, <code>rmdir</code> will only remove an empty directory (so we don\u2019t accidentally remove important files).</p>"},{"location":"tutorials/unix/unix/#remove-files","title":"Remove files","text":"<p>To remove files, we have to use the <code>rm</code> (remove) command.</p> <p>Please read this section VERY carefully!</p> <p>Accidental misuse of the <code>rm</code> command can lead to huge problems!</p> <p>If you delete something with <code>rm</code>, you will not get it back!</p> <p>It is possible to delete everything in file system (all directories and subdirectories) with <code>rm</code>.</p> <p>Let\u2019s repeat that last part again: It is possible to delete every file you have ever created with the <code>rm</code> command.</p> <p>Luckily, there is a way of making <code>rm</code> a little bit safer. We can use it with the -i flag so that you will be asked for confirmation before deleting anything.</p> <pre><code>rm -i FILE\n</code></pre> Can I use a wildcard character with these commands too? <p>You can use wildcard characters with any Unix command.</p> <p>However, using wildcards with the <code>rm</code> command is particularly dangerous (we encourage avoiding it altogether).</p>"},{"location":"tutorials/unix/unix/#hands-on_4","title":"Hands-on","text":"5.1 Change <code>rm</code> behaviour <p>Usually <code>rm</code> does not display a message once it has run.</p> <p>Instead using a flag, <code>rm</code> will use verbose mode, where it will print the name of each file that has been deleted.</p> <p>What flag enables verbose mode?</p> Answer <p>-v engages verbose mode.</p> 5.2 Remove file <p>Remove the copied file you created in section 4. You can also remove any additional copies you may have made.</p> 5.3 Remove directories <p>Remove the directories you created in section 3.</p> <p>Do not remove the samples directory.</p>"},{"location":"tutorials/unix/unix/#section-6-searching-files","title":"Section 6: Searching files","text":"<p>In this section we\u2019ll cover how to search within files for matches to a given pattern.</p>"},{"location":"tutorials/unix/unix/#grep-for-matches","title":"Grep for matches","text":"<p>We can use the command <code>grep</code> to search within files. You may also hear <code>grep</code> used as a verb; to <code>grep</code> for the right line in a file.</p> <p>The following examples show how you can use <code>grep</code>\u2019s command-line options to:</p> <ul> <li>show lines that match a specified pattern</li> <li>ignore case when matching (-i)</li> <li>only match whole words (-w)</li> <li>show lines that don\u2019t match a pattern (-v)</li> <li>use wildcard characters and other patterns to allow for alternatives</li> <li>colours the matched text for easy visualisation (- -colour)</li> </ul> <p>Regular expressions (regex) are used to define search patterns. Some useful regex characters:</p> <ul> <li>^ The beginning of a text line</li> <li>$ The end of a text line</li> <li>. Any single character</li> </ul> <p>The following command shows all of the lines in the file that contain the string CATCAT</p> <pre><code>grep CATCAT sample_1.fastq\n</code></pre>"},{"location":"tutorials/unix/unix/#hands-on_5","title":"Hands-on","text":"6.1 Extract ID lines <p>Each read in a FASTQ file has an associated sequence ID line.</p> <p>Identify which is the ID line from the following <code>head</code> output.</p> <pre><code>head -n 12 sample_1.fastq\n</code></pre> <p>Use grep to print all of the ID line from sample_1.fastq.</p> Answer <pre><code>grep ^@ sample_1.fastq\n</code></pre> 6.2 Find matching entries <p>With a regular <code>grep</code> search, the line containing the matching term is printed. It can be useful to also print lines before or after the matching lines. With -B (for before) and -A (for after), you can specify the number of lines to display.</p> <p>Display the full FASTQ entry for each sequence that contains the sequence CATCAT in sample_1.fastq.</p> Answer <pre><code>grep -B 1 -A 2 CATCAT sample_1.fastq\n</code></pre> 6.3 Search for a motif <p>Display the sequences in sample_1.fastq that contain the motif CATNNT where N is any nucleotide.</p> Answer <pre><code>grep CAT..T sample_1.fastq\n</code></pre>"},{"location":"tutorials/unix/unix/#section-7-putting-it-all-together","title":"Section 7: Putting it all together","text":"<p>In this section we will cover a few more advanced Unix concepts that allow us to bring together some of the commands we have learned so far.</p>"},{"location":"tutorials/unix/unix/#combine-commands-with-pipes","title":"Combine commands with pipes","text":"<p>One of the most powerful features of Unix is that you can send the output from one command directly into the input of any other command.</p> <p>We do this by using a pipe that is represented by the | character. Think of a pipe as a connection between two Unix commands.</p> <pre><code>grep CAT..T sample_1.fastq | wc -l\n</code></pre> <p>The first part of the command is the same <code>grep</code> search from 6.3. The <code>grep</code> output is sent through a pipe to <code>wc</code>, where the -l option counts the number of lines. So as a whole, this command counts the number of sequences that contain a match to the motif CATNNT.</p>"},{"location":"tutorials/unix/unix/#redirect-output-to-a-file","title":"Redirect output to a file","text":"<p>It can be very useful to direct output into a new file, rather than simply printing it to the screen.</p> <p>This file redirection can be done with the &gt; symbol.</p> <pre><code>whoami &gt; user.txt\n</code></pre> <p>The command above sent the output of the <code>whoami</code> command to a file called user.txt. Notice that there was no output on the screen. You can check the contents of user.txt with <code>less</code>.</p> <p>Warning</p> <p>Be careful when using file redirection (&gt;); it will overwrite any existing file of the same name.</p> <p>We can also use the &gt;&gt; operator to append output to the end of an existing file.</p> <pre><code>date &gt;&gt; user.txt\n</code></pre> <p>You should see that your user.txt file now contains the output of the <code>date</code> command under the original user line.</p>"},{"location":"tutorials/unix/unix/#hands-on_6","title":"Hands-on","text":"7.1 Use a pipe <p>Display the ID lines from the first 10 entries in sample_1.fastq using a pipe.</p> Answer <pre><code>grep ^@ sample_1.fastq | head\n</code></pre> <p>Or, alternatively:</p> <pre><code>head -n 40 sample_1.fastq | grep ^@\n</code></pre> 7.2 Direct output to a file <p>Use your command from above but redirect the output to a file. Choose a sensible name for your file.</p> 7.3 Create a new FASTQ file <p>Create a new FASTQ file containing the final 3 reads in each of the three FASTQ files.</p> Answer <pre><code>tail -n 12 sample_1.fastq &gt; new_sample.fastq\ntail -n 12 sample_2.fastq &gt;&gt; new_sample.fastq\ntail -n 12 sample_3.fastq &gt;&gt; new_sample.fastq\n</code></pre> <p>Or, alternatively: <pre><code>tail -n 12 *.fastq | grep -v \"^==&gt;\" | grep . &gt; new_sample.fastq\n</code></pre></p>"},{"location":"tutorials/unix/unix/#section-8-transferring-files","title":"Section 8: Transferring files","text":"<p>In this section we will cover how to transfer files between a local and a remote machine using FileZilla.</p> Section 8: for in-person workshop participants <p>Section 8 applies only to in-person workshop participants.</p> <p>When working on a remote machine like an HPC system, transferring data (in both directions!) is a common task. FileZilla provides a useful interface for these transfers.</p>"},{"location":"tutorials/unix/unix/#transfer-files-with-filezilla","title":"Transfer files with Filezilla","text":"<p>Open FileZilla on your local computer. At the top of the window, enter the following information in the boxes as shown in the image below.</p> Field Enter the below information <code>Host:</code> IP adress from provided spreadsheet <code>Username:</code> Username from provided spreadsheet <code>Password</code> Password from provided spreadsheet <code>Port</code> 22 <p></p> <p>Select Quickconnect to establish a connection.</p> <p>Now you can now drag and drop files or whole directories to move them between a local and a remote machine.</p> <p>The provided Nectar instances will be turned off shortly after the completion of the workshop</p> <p>If you would like to save a copy of the files you have been working on, do that now.</p>"},{"location":"tutorials/unix/unix/#finished","title":"Finished","text":"<p>Well done, you learnt a lot over the last 8 sections; it\u2019s a lot to take in!</p> <p>From here you should be comfortable around the Unix command line and be ready to complete other workshops based on the command line here at Melbourne Bioinformatics.</p> <p>You will no-doubt forget a lot of what you learnt here so we encourage you to save a link to this workshop for later reference.</p>"},{"location":"tutorials/unix/unix/#table-of-commands-used","title":"Table of commands used","text":"Command Description <code>whoami</code> print current user name <code>date</code> system date and time <code>cal</code> calendar <code>man</code> manual page <code>pwd</code> print working directory <code>ls</code> list contents <code>wc</code> word count <code>mkdir</code> make directory <code>cd</code> change directory <code>history</code> print list of previous commands <code>less</code> view file <code>head</code> show first lines of file <code>tail</code> show last lines of file <code>cp</code> copy files/directories <code>mv</code> move files/directories <code>chmod</code> change permissions <code>rmdir</code> remove empty directory <code>rm</code> remove file <code>grep</code> search for a pattern <code>gzip</code> gzip a file <code>gunzip</code> decompress a gzipped file <code>zcat</code> view contents of a compressed file"},{"location":"tutorials/unix/unix/#additional-resources","title":"Additional Resources","text":"<p>This workshop is just the tip of the Unix iceberg! There is lots more to learn out there. Below are some reseources that will help with further learning.</p> <ul> <li>The HPC workshops run by Research Computing Services (University of Melbourne researchers only) are a great intro to using a command-line interface to access a HPC system.</li> <li>This tutorial is a detailed intro to Unix programming by A/Prof Bernie Pope.</li> </ul>"},{"location":"tutorials/unix_archive_2022/","title":"Index","text":"<p>PR reviewers and advice: Andrew Robinson, Peter Georgeson, Chol-hee Jung, Ben Moran</p> <p>Current slides: TBD</p> <p>Other slides:</p> <ul> <li>None yet</li> </ul>"},{"location":"tutorials/unix_archive_2022/intro/","title":"Intro","text":""},{"location":"tutorials/unix_archive_2022/intro/#why-use-unix","title":"Why use unix","text":"<ul> <li>Powerful: Unix computers are typically very powerful in comparision to your desktop/laptop computers.   Additionally they don\u2019t typically use a Graphical User Interface which can free up much resources for actual   computing.</li> <li>Big data: Unix programs are designed to handle large data sets</li> <li>Flexible: Small programs that can be arranged in many ways to solve your problems</li> <li>Automation: Scripting allows you to do many tasks in one step and repeat steps many times</li> <li>Pipelines: Unix programs are designed to be \u2018chained\u2019 together to form long multi-step pipelines</li> <li>Science Software: Lots of Scientific software is designed to run in a Unix environment</li> </ul>"},{"location":"tutorials/unix_archive_2022/intro/#user-interface","title":"User interface","text":"<p>The Unix interface is a text-based command driven one; often known as a Command Line Interface (CLI).  This means that you control it by issuing (i.e. typing) commands at the command prompt.  Consequently, the Mouse does not perform any function in the unix environment.</p> <p></p>"},{"location":"tutorials/unix_archive_2022/intro/#command-prompt","title":"Command prompt","text":"<p>The command prompt is the first thing you see when you connect to a Unix Computer.  Its purpose is to receive the next command from you, the user.</p> <p></p> <p>There are several parts that make up the command prompt:</p> <ul> <li>Time: the time (when the last command finished)</li> <li>Username: the username that you are logged in as</li> <li>Hostname: the name of the computer that your are connected to</li> <li>Current working directory: the current position within the file system that your are working.  More to follow</li> <li>Prompt: this is simply a sign to the user that the computer is ready to accept the next command</li> </ul> <p>From this point forward in this document, the command prompt will be simply represented as a \u2018\\(' rather than the full command prompt as shown above.  When copying and pasting commands you should NOT copy the '\\)\u2019 sign.</p>"},{"location":"tutorials/unix_archive_2022/intro/#command-line","title":"Command line","text":"<p>Below is an example command with various flags and options.</p> <p></p> <p>There are a number of parts which may be included in a command; each is separated by one of more \u2018white-space\u2019 characters (i.e. space, tab):</p> <ul> <li>Command: this is the name of the program (command) that you want to run</li> <li>Flag: these turn on (or off) specific features in the program.  They consist of a dash (-) followed by   a single character.</li> <li>Long flag: same as flag except they are generally two dashes (\u2013) followed by a word (or two)</li> <li>Option: set the value of a configurable option.  They are a flag (or long flag) followed by a value</li> <li>Anonymous options: these are one or more options that are specified in the required order</li> <li>Quoted value: if you need to specify a space (or tab) in an option then you will need to use double (\u201c) or   single (\u2018) quotes on each side of the value.</li> </ul>"},{"location":"tutorials/unix_archive_2022/intro/#file-system","title":"File system","text":"<p>The file-system of a unix computer can be thought of as an up-side-down tree.  The topmost directory has a special name called \u2018root\u2019; it contains all files and directories that are on the computer system.  It is represented by a single slash (/).  The figure below shows an example file system with directories (black outline boxes) and files (grey dashed boxes).</p> <p></p> <p>At the top level we have one file (settings) and one directory (home).  Inside the home directory we have two directories (user1 and user2) and so on.</p>"},{"location":"tutorials/unix_archive_2022/intro/#absolute-file-names","title":"Absolute file names","text":"<p>Absolute file names are a single unique name for each file and directory within the computer.  They start with the slash (/) character and follow all the parent directories above the file/directory.</p> <p></p> <p>Absolute file name: /settings</p> <p></p> <p>Absolute file name: /home/user1/file01.txt</p> <p></p> <p>Absolute file name: /home/user2 </p> <p>Note: the final slash is not needed (but generally doesn\u2019t hurt if it is present).</p>"},{"location":"tutorials/unix_archive_2022/intro/#current-working-directory","title":"Current working directory","text":"<p>The current working directory is the current location within the file system that you are currently using. When you first login to a unix computer it will begin with the current working directory set to your home directory, that is, a place that is unique to you and generally nobody else will have access to it.</p> <p></p> <p>Remember from earlier that the current working directory is shown in the command prompt.</p>"},{"location":"tutorials/unix_archive_2022/intro/#relative-file-names","title":"Relative file names","text":"<p>Relative file names are a short cut to writing file names that are shorter.  The difference between an absolute file name is that relative file names do NOT begin with a slash.</p> <p></p> <p>If your current working directory is set to /home you can leave this part from the beginning of the filename.</p> <p>Relative file name: user1/muscle.fq</p> <p>(Note: the absence of the leading slash)</p> <p>Special file names:</p> <p>There are a few further short cuts for typing relative file names:</p> <ul> <li>~ (Tilde): is a short cut to your home directory</li> <li>. (dot): is a short cut for the current directory</li> <li>.. (2x dot): means the parent (or one directory up) from current directory</li> <li>\u2026 (3x dot): does not mean anything (a gotcha for new users).  If you want 2 directories up then chain two double dot\u2019s  e.g. ../..</li> </ul> <p>Note: the special file names above can be used within absolute and relative file name and used multiple times.</p> <p></p> <p>Now, if the current working directory is changed to /home/user2 the relative path to muscle.fq is different.</p> <p>Relative file name: ../user1/muscle.fq</p>"},{"location":"tutorials/unix_archive_2022/robinson-unix-link/","title":"Introduction to Unix","text":"<p>Please see the link here. </p>"},{"location":"tutorials/unix_archive_2022/unix/","title":"Introduction to Unix-Archive","text":""},{"location":"tutorials/unix_archive_2022/unix/#important","title":"Important:","text":""},{"location":"tutorials/unix_archive_2022/unix/#this-material-is-no-longer-maintained-and-may-be-out-of-date","title":"This material is no longer maintained and may be out of date.","text":""},{"location":"tutorials/unix_archive_2022/unix/#please-go-to-this-link-below-for-a-current-introduction-to-unix","title":"Please go to this link below for a current Introduction to Unix","text":""},{"location":"tutorials/unix_archive_2022/unix/#introduction-to-unix","title":"Introduction to Unix","text":"<p>A hands-on workshop covering the basics of the Unix/Linux command line interface.</p>"},{"location":"tutorials/unix_archive_2022/unix/#overview","title":"Overview","text":"<p>Knowledge of the Unix operating system is fundamental to being productive on HPC systems. This workshop will introduce you to the fundamental Unix concepts by way of a series of hands-on exercises.</p> <p>The workshop is facilitated by experienced Unix users who will be able to guide you through the exercises and offer assistance where needed.</p>"},{"location":"tutorials/unix_archive_2022/unix/#learning-objectives","title":"Learning Objectives","text":"<p>At the end of the course, you will be able to:</p> <ul> <li>Log into a Unix machine remotely</li> <li>Organise your files into directories</li> <li>Change file permissions to improve security and safety</li> <li>Create and edit files with a text editor</li> <li>Copy files between directories</li> <li>Use command line programs to manipulate files</li> <li>Automate your workflow using shell scripts</li> </ul>"},{"location":"tutorials/unix_archive_2022/unix/#requirements","title":"Requirements","text":"<ul> <li>The workshop is intended for beginners with no prior experience in Unix.</li> <li>Attendees are required to bring their own laptop computers.</li> </ul>"},{"location":"tutorials/unix_archive_2022/unix/#introduction","title":"Introduction","text":"<p>Before we commence the hands-on part of this workshop we will first give a short 30 minute talk to introduce the Unix concepts. The slides are available if you would like.  Additionally the following reference material is available for later use.</p> Reference Material"},{"location":"tutorials/unix_archive_2022/unix/#topic-1-remote-log-in","title":"Topic 1: Remote log in","text":"<p>In this topic we will learn how to connect to a Unix computer via a program called ssh and run a few basic commands.</p>"},{"location":"tutorials/unix_archive_2022/unix/#connecting-to-a-unix-computer","title":"Connecting to a Unix computer","text":"<p>To begin this workshop you will need to connect to an HPC.  Today we will use barcoo. The computer called barcoo.vlsci.org.au is the one that coordinates all the HPC\u2019s tasks.</p> <p>Server details:</p> <ul> <li>host: barcoo.vlsci.org.au</li> <li>port: 22</li> <li>username: (provided at workshop)</li> <li>password: (provided at workshop)</li> </ul> Mac OS X / Linux  Both Mac OS X and Linux come with a version of ssh (called OpenSSH) that can be used from the command line.  To use OpenSSH you must  first start a terminal program on your computer.  On OS X the standard terminal is called Terminal, and it is installed by default.  On Linux there are many popular terminal programs including: xterm, gnome-terminal, konsole (if you aren't sure, then xterm is a good  default).  When you've started the terminal you should see a command prompt.  To log into *barcoo*, for example, type this command at  the prompt and press return (where the word *username* is replaced with your *barcoo* username):  *$ ssh username@barcoo.vlsci.org.au*  The same procedure works for any other machine where you have an account except that if your Unix computer uses a port other than 22 you will need to specify the port by adding the option *-p PORT* with PORT substituted with the port number.  You may be presented with a message along the lines of:  <pre><code>The authenticity of host 'barcoo.vlsci.org.au (131.172.36.150)' can't be  established.\n...\nAre you sure you want to continue connecting (yes/no)?\n</code></pre>  Although you should never ignore a warning, this particular one is nothing to be concerned about; type **yes** and then **press enter**.  If all goes well you will be asked to enter your password.  Assuming you type the correct username and password the system should  then display a welcome message, and then present you with a Unix prompt.  If you get this far then you are ready to start entering  Unix commands and thus begin using the remote computer.   Windows  On Microsoft Windows (Vista, 7, 8) we recommend that you use the PuTTY ssh client.  PuTTY (putty.exe) can be downloaded  from this web page:  [http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html](http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html)  Documentation for using PuTTY is here:  [http://www.chiark.greenend.org.uk/~sgtatham/putty/docs.html](http://www.chiark.greenend.org.uk/~sgtatham/putty/docs.html)  When you start PuTTY you should see a window which looks something like this:    To connect to *barcoo* you should enter *barcoo.vlsci.org.au* into the box entitled \"Host Name (or IP address)\"  and *22* in the port,  then click on the Open button. All of the settings should remain the same as they were when PuTTY started (which should be the  same as they are in the picture above).  In some circumstances you will be presented with a window entitled PuTTY Security Alert. It will say something along the lines  of *\"The server's host key is not cached in the registry\"*. This is nothing to worry about, and you should agree to continue (by  clicking on Yes). You usually see this message the first time you try to connect to a particular remote computer.  If all goes well, a terminal window will open, showing a prompt with the text *\"login as:\"*. An example terminal window is shown  below. You should type your *barcoo* username and press enter. After entering your username you will be prompted for your  password. Assuming you type the correct username and password the system should then display a welcome message, and then  present you with a Unix prompt. If you get this far then you are ready to start entering Unix commands and thus begin using  the remote computer.   <p>Note: for security reasons ssh will not display any characters when you enter your password. This can be confusing because it appears as if your typing is not recognised by the computer. Don\u2019t be alarmed; type your password in and press return at the end.</p> <p>barcoo is a high performance computer for Melbourne Bioinformatics users.  Logging in connects your local computer (e.g. laptop) to barcoo, and allows you to type commands into the Unix prompt which are run on the HPC, and have the results displayed on your local screen.</p> <p>You will be allocated a training account on barcoo for the duration of the workshop. Your username and password will be supplied at the start of the workshop.</p> <p>Log out of barcoo, and log back in again (to make sure you can repeat the process).</p> <p>All the remaining parts assume that you are logged into barcoo over ssh.</p>"},{"location":"tutorials/unix_archive_2022/unix/#exercises","title":"Exercises","text":""},{"location":"tutorials/unix_archive_2022/unix/#11-when-youve-logged-into-the-unix-server-run-the-following-commands-and-see-what-they-do","title":"1.1) When you\u2019ve logged into the Unix server, run the following commands and see what they do:","text":"<ul> <li>who</li> <li>whoami</li> <li>date</li> <li>cal</li> <li>hostname</li> <li>/vlsci/TRAINING/shared/Intro_to_Unix/hi</li> </ul> Answer  * **who**: displays a list of the users who are currently using this Unix computer. * **whoami**: displays your username (i.e. they person currently logged in). * **date**: displays the current date and time. * **cal**: displays a calendar on the terminal.  It can be configured to display more than just the current month. * **hostname**: displays the name of the computer we are logged in to. * **/vlsci/TRAINING/shared/Intro_to_Unix/hi**: displays the text \"Hello World\""},{"location":"tutorials/unix_archive_2022/unix/#topic-2-exploring-your-home-directory","title":"Topic 2: Exploring your home directory","text":"<p>In this topic we will learn how to \u201clook\u201d at the filesystem and further expand our repertoire of Unix commands.</p> <p>Duration: 20 minutes. </p> <p>Relevant commands: ls, pwd, echo, man</p> <p>Your home directory contains your own private working space.  Your current working directory is automatically set to your home directory when you log into a Unix computer.</p>"},{"location":"tutorials/unix_archive_2022/unix/#21-use-the-ls-command-to-list-the-files-in-your-home-directory-how-many-files-are-there","title":"2.1) Use the ls command to list the files in your home directory.  How many files are there?","text":"Hint  Literally, type *ls* and press the *ENTER* key.   Answer <pre><code>$ ls\nexp01  file01  muscle.fq\n</code></pre>  When running the *ls* command with no options it will list files in your current working directory.  The place where you start when you first login is your *HOME* directory.  **Answer**: 3 (exp01, file01 and muscle.fq)   <p>The above answer is not quite correct.  There are a number of hidden files in your home directory as well.</p>"},{"location":"tutorials/unix_archive_2022/unix/#22-what-flag-might-you-use-to-display-all-files-with-the-ls-command-how-many-files-are-really-there","title":"2.2) What flag might you use to display all files with the ls command?  How many files are really there?","text":"Hint  Take the *all* quite literally.   Additional Hint  Type *ls --all* and press the *ENTER* key.   Answer  **Answer 1**: *--all* (or *-a*) flag  Now you should see several files in your home directory whose names all begin with a dot. All these files are created automatically for your user account. They are mostly configuration options for various programs including the shell. It is safe to ignore them for the moment.  <pre><code>$ ls --all\n.              .bash_logout    exp01    .lesshst\n..             .bash_profile   file01   muscle.fq\n.bash_history  .bashrc         .kshrc   .viminfo\n</code></pre>  There are two trick files here; namely *.* and *..* which are not real files but instead, shortcuts.  *.* is a shortcut for the current directory and *..* a shortcut for the directory above the current one.  **Answer 2**: 10 files (don't count *.* and *..*)"},{"location":"tutorials/unix_archive_2022/unix/#23-what-is-the-full-path-name-of-your-home-directory","title":"2.3) What is the full path name of your home directory?","text":"Hint  Remember your *Current Working Directory* starts in your *home* directory.   Additional Hint  Try a shortened version of *print working directory*   Answer  You can find out the full path name of the current working directory with the *pwd* command. Your home directory will look something like this:  <pre><code>$ pwd\n/home/trainingXX\n</code></pre>  **Answer**: */vlsci/TRAINING/trainXX*  where *XX* is replaced by some 2 digit sequence.  **Alternate method**: You can also find out the name of your home directory by printing the value of the *$HOME* shell variable:  <pre><code>echo $HOME\n</code></pre>"},{"location":"tutorials/unix_archive_2022/unix/#24-run-ls-using-the-long-flag-l-how-did-the-output-change","title":"2.4) Run ls using the long flag (-l), how did the output change?","text":"Hint  Run *ls -l*   Answer  **Answer**: it changed the output to place 1 file/directory per line.  It also added some extra information about each.  <pre><code>$ ls -l\ntotal 32\ndrwxr-x--- 2 training01 training 2048 Jun 14 11:28 exp01\n-rw-r----- 1 training01 training   97 Jun 14 11:28 file01\n-rw-r----- 1 training01 training 2461 Jun 14 11:28 muscle.fq\n</code></pre>  **Details**:  <pre><code>drwxr-x--- 2 training01 training 2048 Jun 14 11:28 exp01\n\\--------/ ^ \\--------/ \\------/ \\--/ \\----------/ \\---/\npermission |  username   group   size    date       name\n       /---^---\\\n       linkcount\n</code></pre>  Where:  * **permissions**: 4 parts, file type, user perms, group perms and other perms     * *filetype*: 1 character, *d* = directory and *-* regular file     * *user* permissions: 3 characters, *r* = read, *w* = write, *x* = execute and *-* no permission     * *group* permissions: same as user except for users within the owner group     * *other* permissions: same as user except for users that are not in either user *or* *group* * **username**: the user who *owns* this file/directory * **group**: the group name who *owns* this file/directory * **size**: the number of bytes this file/directory takes to store on disk * **date**: the date and time when this file/directory was *last edited* * **name**: name of the file * **linkcount**: technical detail which represents the number of links this file has in the file system (safe to ignore)"},{"location":"tutorials/unix_archive_2022/unix/#25-what-type-of-file-is-exp01-and-musclefq","title":"2.5) What type of file is exp01 and muscle.fq?","text":"Hint  Check the output from the *ls -l*.   Answer  **Answer**:  * *exp01*: Directory (given the 'd' as the first letter of its permissions) * *muscle.fq*: Regular File (given the '-')"},{"location":"tutorials/unix_archive_2022/unix/#26-who-has-permission-to-read-write-and-execute-your-home-directory","title":"2.6) Who has permission to read, write and execute your home directory?","text":"Hint  You can also give *ls* a filename as the first option.   Additional Hint  *ls -l* will show you the contents of the *CWD*; how might you see the contents of the *parent* directory? (remember the slides)   Answer  If you pass the *-l* flag to ls it will display a \"long\" listing of file information including file permissions.  There are various ways you could find out the permissions on your home directory.   **Method 1**: given we know the *CWD* is our home directory.  <pre><code>$ ls -l ..\n...\ndrwxr-x--- 4 trainingXY training  512 Feb  9 14:18 trainingXY\n...\n</code></pre> The *..* refers to the parent directory.   **Method 2**: using $HOME.  This works no matter what our *CWD* is set to.  You could list the permissions of all files and directories in the parent directory of your home:  <pre><code>$ ls -l $HOME/..\n...\ndrwxr-x--- 4 trainingXY training  512 Feb  9 14:18 trainingXY\n...\n</code></pre>  In this case we use the shell variable to refer to our home directory.   **Method 3**: using *~* (tilde) shortcut  You may also refer to your home directory using the *~* (tilde) character:  <pre><code>$ ls -l ~/..\n...\ndrwxr-x--- 4 trainingXY training  512 Feb  9 14:18 trainingXY\n...\n</code></pre>  All 3 of the methods above mean the same thing.  You will see a list of files and directories in the parent directory of your home directory. One of them will be the name of your home directory, something like *trainXX*.  Where *XX* is replaced by a two digit string.  **Altername**: using the *-a* flag and looking at the *.* (dot) special file.  <pre><code>$ ls -la\n...\ndrwxr-x--- 4 trainingXY training  512 Feb  9 14:18 .\n...\n</code></pre>   **Answer**: *drwxr-x---*  * **You**: read (see filenames), write (add, delete files), execute (change your CWD to this directory). * **Training users**: read, execute * **Everyone else**: No access  **Discussion on Permissions**:  The permission string is *\"drwxr-x---\"*. The *d* means it is a directory. The *rwx* means that the owner of the directory (your user account) can *read*, *write* and *execute* the directory. Execute permissions on a directory means that you can *cd* into the directory. The *r-x* means that anyone in the same user group as *training* can read or execute the directory. The *---* means that nobody else (other users on the system) can do anything with the directory.   <p>man is for manual: and it will be your best friend!</p> <p>Manual pages include a lot of detail about a command and its available flags/options.  It should be your first (or second) port of call when you are trying to work out what a command or option does.</p> <p>You can scroll up and down in the man page using the arrow keys.</p> <p>You can search in the man page using the forward slash followed by the search text followed by the ENTER key. e.g. type /hello and press ENTER to search for the word hello.  Press n key to find next occurance of hello etc.</p> <p>You can quit the man page by pressing q.</p>"},{"location":"tutorials/unix_archive_2022/unix/#27-use-the-man-command-to-find-out-what-the-h-flag-does-for-ls","title":"2.7) Use the man command to find out what the -h flag does for ls","text":"Hint  Give *ls* as an option to *man* command.   Additional Hint  *man ls*   Answer  Use the following command to view the *man* page for *ls*:  <pre><code>$ man ls\n</code></pre>  **Answer**: You should discover that the *-h* option prints file sizes in human readable format  <pre><code>-h, --human-readable\n              with -l, print sizes in human readable format (e.g., 1K 234M 2G)\n</code></pre>"},{"location":"tutorials/unix_archive_2022/unix/#28-use-the-h-how-did-the-output-change-of-musclefq","title":"2.8) Use the -h, how did the output change of muscle.fq?","text":"Hint  Don't forget the *-l* option too.   Additional Hint  Run *ls -lh*   Answer <pre><code>$ ls -lh\n...\n-rw-r----- 1 training01 training 2.5K Jun 14 11:28 muscle.fq\n</code></pre>  **Answer**: it changed the output so the *filesize* of *muscle.fq* is now *2.5K* instead of *2461*"},{"location":"tutorials/unix_archive_2022/unix/#topic-3-exploring-the-file-system","title":"Topic 3: Exploring the file system","text":"<p>In this topic we will learn how to move around the filesystem and see what is there.</p> <p>Duration: 30 minutes. </p> <p>Relevant commands: pwd, cd, ls, file</p>"},{"location":"tutorials/unix_archive_2022/unix/#31-print-the-value-of-your-current-working-directory","title":"3.1) Print the value of your current working directory.","text":"Answer  The *pwd* command prints the value of your current working directory.  <pre><code>$ pwd\n/home/training01\n</code></pre>"},{"location":"tutorials/unix_archive_2022/unix/#32-list-the-contents-of-the-root-directory-called-forward-slash","title":"3.2) List the contents of the root directory, called \u2018/\u2019 (forward slash).","text":"Hint  *ls* expects one or more anonymous options which are the files/directories to list.   Answer <pre><code>$ ls /\napplications-merged  etc         media    root     tmp\nbin                  home        mnt      sbin     usr\nboot                 lib         oldhome  selinux  var\ndata                 lib64       opt      srv\ndev                  lost+found  proc     sys\n</code></pre>  Here we see that *ls* can take a filepath as its argument, which allows you to list the contents of directories other than your current working directory."},{"location":"tutorials/unix_archive_2022/unix/#33-use-the-cd-command-to-change-your-working-directory-to-the-root-directory-did-your-prompt-change","title":"3.3) Use the cd command to change your working directory to the root directory.  Did your prompt change?","text":"Hint  *cd* expects a single option which is the directory to change to   Answer  The *cd* command changes the value of your current working directory. To change to the root directory use the following command:  <pre><code>$ cd /\n</code></pre>  **Answer**: Yes, it now says the CWD is */* instead of *~*.  Some people imagine that changing the working directory is akin to moving your focus within the file system. So people often say \"move to\", \"go to\" or \"charge directory to\" when they want to change the working directory.  The root directory is special in Unix. It is the topmost directory in the whole file system.   Output on ERROR only: Many Unix commands will not produce any output if everything went well; cd is one such command.  However, it will get grumpy if something went wrong by way of an error message on-screen."},{"location":"tutorials/unix_archive_2022/unix/#34-list-the-contents-of-the-cwd-and-verify-it-matches-the-list-in-32","title":"3.4) List the contents of the CWD and verify it matches the list in 3.2","text":"Hint  *ls*   Answer  Assuming you have changed to the root directory then this can be achieved with *ls*, or *ls -a* (for all files) or *ls -la* for a long listing of all files.  If you are not currently in the root directory then you can list its contents by passing it as an argument to ls:  <pre><code>$ ls\napplications-merged  etc         media    root     tmp\nbin                  home        mnt      sbin     usr\nboot                 lib         oldhome  selinux  var\ndata                 lib64       opt      srv\ndev                  lost+found  proc     sys\n</code></pre>  **Answer**: Yes, we got the same output as exercise 3.2"},{"location":"tutorials/unix_archive_2022/unix/#35-change-your-current-working-directory-back-to-your-home-directory-what-is-the-simplest-unix-command-that-will-get-you-back-to-your-home-directory-from-anywhere-else-in-the-file-system","title":"3.5) Change your current working directory back to your home directory. What is the simplest Unix command that will get you back to your home directory from anywhere else in the file system?","text":"Hint  The answer to exercise 2.6 might give some hints on how to get back to the home directory   Additional Hint  *$HOME*, *~*, */vlsci/TRAINING/trainXX* are all methods to name your home directory.  Yet there is a simpler method; the answer is buried in *man cd* however *cd* doesn't have its own manpage so you will need to search for it.   Answer  Use the *cd* command to change your working directory to your home directory. There are a number of ways to refer to your home directory:  <pre><code>cd $HOME\n</code></pre>  is equivalent to:  <pre><code>cd ~\n</code></pre>  The simplest way to change your current working directory to your home directory is to run the *cd* command with no arguments:  **Answer**: the simplest for is cd with NO options.  <pre><code>cd\n</code></pre>  This is a special-case behaviour which is built into *cd* for convenience."},{"location":"tutorials/unix_archive_2022/unix/#36-change-your-working-directory-to-the-following-directory","title":"3.6) Change your working directory to the following directory:","text":"<p>/vlsci/TRAINING/shared/Intro_to_Unix</p> Answer  **Answer**: *cd /vlsci/TRAINING/shared/Intro_to_Unix*"},{"location":"tutorials/unix_archive_2022/unix/#37-list-the-contents-of-that-directory-how-many-files-does-it-contain","title":"3.7) List the contents of that directory. How many files does it contain?","text":"Hint  *ls*   Answer  You can do this with *ls*  <pre><code>$ ls\nexpectations.txt  hello.c  hi  jude.txt  moby.txt  sample_1.fastq  sleepy\n</code></pre>  **Answer**: 7 files (expectations.txt  hello.c  hi  jude.txt  moby.txt  sample_1.fastq  sleepy)"},{"location":"tutorials/unix_archive_2022/unix/#38-what-kind-of-file-is-vlscitrainingsharedintro_to_unixsleepy","title":"3.8) What kind of file is /vlsci/TRAINING/shared/Intro_to_Unix/sleepy?","text":"Hint  Take the word *file* quite literally.   Additional Hint  *file sleepy*   Answer  Use the *file* command to get extra information about the contents of a file:  Assuming your current working directory is */vlsci/TRAINING/shared/Intro_to_Unix*  <pre><code>$ file sleepy\nBourne-Again shell script text executable\n</code></pre>  Otherwise specify the full path of sleepy:  <pre><code>$ file /vlsci/TRAINING/shared/Intro_to_Unix/sleepy\nBourne-Again shell script text executable\n</code></pre>  **Answer**: Bourne-Again shell script text executable  The \"Bourne-Again shell\" is more commonly known as BASH. The *file* command is telling us that sleepy is (probably) a shell script written in the language of BASH.  The file command uses various heuristics to guess the \"type\" of a file. If you want to know how it works then read the Unix manual page like so:  <pre><code>man file\n</code></pre> <p>3.9) What kind of file is /vlsci/TRAINING/shared/Intro_to_Unix/hi?</p> Hint  Take the word *file* quite literally.   Answer  Use the file command again. If you are in the same directory as *hi* then:  <pre><code>$ file hi\nELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux\n2.6.9, not stripped\n</code></pre>  **Answer**: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux  This rather complicated output is roughly saying that the file called *hi* contains a binary executable program (raw instructions that the computer can execute directly)."},{"location":"tutorials/unix_archive_2022/unix/#310-what-are-the-file-permissions-of-the-following-file-and-what-do-they-mean","title":"3.10) What are the file permissions of the following file and what do they mean?","text":"<p>/vlsci/TRAINING/shared/Intro_to_Unix/sleepy</p> Hint  Remember the *ls* command, and don't forget the *-l* flag   Answer  You can find the permissions of *sleepy* using the *ls* command with the *-l* flag. If you are in the same directory as *sleepy* then:  <pre><code>$ ls -l sleepy\n-rw-r--r-- 1 arobinson common 183 Feb  9 16:36 sleepy\n</code></pre>  **Answer**: The Answer is dependent on the computer you are connected too however will follow something like above. We can see that this particular instance of sleepy is owned by the user arobinson, and is part of the common user group. It is 183 bytes in size, and was last modified on the 9th of February at 4:36pm. The file is readable to everyone, and write-able only to arobinson.  The digit '1' between the file permission string and the owner indicates that there is one link to the file. The Unix file system allows files to be referred to by multiple \"links\". When you create a file it is referred to by one link, but you may add others later. For future reference: links are created with the *ln* command."},{"location":"tutorials/unix_archive_2022/unix/#311-change-your-working-directory-back-to-your-home-directory-ready-for-the-next-topic","title":"3.11) Change your working directory back to your home directory ready for the next topic.","text":"Hint  *cd*   Answer  You should know how to do this with the cd command:  <pre><code>cd\n</code></pre>"},{"location":"tutorials/unix_archive_2022/unix/#topic-4-working-with-files-and-directories","title":"Topic 4: Working with files and directories","text":"<p>In this topic we will start to read, create, edit and delete files and directories.</p> <p>Duration: 50 minutes.  </p> <p>Relevant commands: mkdir, cp, ls, diff, wc, nano, mv, rm, rmdir, head, tail, grep, gzip, gunzip</p> Hint: Look at the commands above; you will need them roughly in order for this topic.  Use the man command find out what they do, in particular the NAME, SYNOPSIS and DESCRIPTION sections."},{"location":"tutorials/unix_archive_2022/unix/#41-in-your-home-directory-make-a-sub-directory-called-test","title":"4.1) In your home directory make a sub-directory called test.","text":"Hint  You are trying to *make a directory*, which of the above commands looks like a shortened version of this?   Additional Hint  *mkdir*   Answer  Make sure you are in your home directory first. If not *cd* to your home directory.  Use the *mkdir* command to make new directories:  <pre><code>$ mkdir test\n</code></pre>  Use the *ls* command to check that the new directory was created.  <pre><code>$ ls\nexp01  file01  muscle.fq  test\n</code></pre>"},{"location":"tutorials/unix_archive_2022/unix/#42-copy-all-the-files-from-the-following-directory-into-the-newly-created-test-directory","title":"4.2) Copy all the files from the following directory into the newly created test directory:","text":"<p>/vlsci/TRAINING/shared/Intro_to_Unix</p> Hint  You are trying to *copy*, which of the above commands looks like a shortened version of this?   Additional Hint <pre><code>$ man cp\n...\nSYNOPSIS\n       cp [OPTION]... [-T] SOURCE DEST\n...\nDESCRIPTION\n       Copy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY.\n</code></pre>  which means *cp* expects zero or more flags, a SOURCE file followed by a DEST file or directory   Answer  Use the *cp* command to copy files.  Wildcards: You could copy them one-by-one, but that would be tedious, so use the * wildcard to specify that you want to copy all the files.   There are a number of ways you could do this depending on how you specify the source and destination paths to *cp*. You only need to perform one of these ways, but we show multiple ones for your reference.  **Answer 1**: From your home directory:  <pre><code>$ cp /vlsci/TRAINING/shared/Intro_to_Unix/* test\n</code></pre>  **Answer 2**: Change to the test directory and then copy (assuming you started in your home directory):  <pre><code>$ cd test\n$ cp /vlsci/TRAINING/shared/Intro_to_Unix/* .\n</code></pre>  In the example above the '*.*' (dot) character refers to the current working directory. It should be the test subdirectory of your home directory.  **Answer 3**: Change to the \\end{UNIX_TRAINING_FILES_PATH} directory and then copy:  <pre><code>cd /vlsci/TRAINING/shared/Intro_to_Unix/\ncp * ~/test\n</code></pre>  Remember that ~ is a shortcut reference to your home directory.   <p>Note: This exercise assumes that the copy command from the previous exercise was successful.</p>"},{"location":"tutorials/unix_archive_2022/unix/#43-check-that-the-file-size-of-expectationstxt-is-the-same-in-both-the-directory-that-you-copied-it-from-and-the-directory-that-you-copied-it-to","title":"4.3) Check that the file size of expectations.txt is the same in both the directory that you copied it from and the directory that you copied it to.","text":"Hint  Remember *ls* can show you the file size (with one of its flags)   Additional Hint  *ls -l*   Answer  Use *ls -l* to check the size of files.  You could do this in many ways depending on the value of your working directory. We just show one possible way for each file:  <pre><code>$ ls -l /vlsci/TRAINING/shared/Intro_to_Unix/expectations.txt\n\n$ ls -l ~/test/expectations.txt\n</code></pre>  From the output of the above commands you should be able to see the size of each file and check that they are the same.  **Answer**: They should each be *1033773* bytes  **Alternate**: Sometimes it is useful to get file sizes reported in more \"human friendly\" units than bytes. If this is true then try the *-h* option for ls:  <pre><code>$ ls -lh /vlsci/TRAINING/shared/Intro_to_Unix/expectations.txt\n-rw-r--r-- 1 arobinson common 1010K Mar 26  2012 /vlsci/TRAINING/shared/Intro_to_Unix/expectations.txt\n</code></pre>  In this case the size is reported in kilobytes as *1010K*. Larger files are reported in megabytes, gigabytes etcetera.   <p>Note: this exercise assumes your working directory is ~/test; if not run cd ~/test</p>"},{"location":"tutorials/unix_archive_2022/unix/#44-check-that-the-contents-of-expectationstxt-are-the-same-in-both-the-directory-that-you-copied-it-from-and-the-directory-that-you-copied-it-to","title":"4.4) Check that the contents of expectations.txt are the same in both the directory that you copied it from and the directory that you copied it to.","text":"Hint  What is the opposite of *same*?   Additional Hint  *diff*erence   Answer  Use the *diff* command to compare the contents of two files.  <pre><code>$ diff /vlsci/TRAINING/shared/Intro_to_Unix/expectations.txt expectations.txt\n</code></pre>  If the two files are identical the *diff* command will NOT produce any output)  **Answer**: Yes, they are the same since no output was given."},{"location":"tutorials/unix_archive_2022/unix/#45-how-many-lines-words-and-characters-are-in-expectationstxt","title":"4.5) How many lines, words and characters are in expectations.txt?","text":"Hint  Initialisms are key   Additional Hint  *w*ord *c*ount   Answer  Use the *wc* (for \"word count\") to count the number of characters, lines and words in a file:  <pre><code>$ wc expectations.txt\n  20415  187465 1033773 expectations.txt\n</code></pre>  **Answer**: There are *20415* lines, *187465* words and *1033773* characters in expectations.txt.  To get just the line, word or character count:  <pre><code>$ wc -l expectations.txt\n20415 expectations.txt\n$ wc -w expectations.txt\n187465 expectations.txt\n$ wc -c expectations.txt\n1033773 expectations.txt\n</code></pre>"},{"location":"tutorials/unix_archive_2022/unix/#46-open-testexpectationstxt-in-the-nano-text-editor-delete-the-first-line-of-text-and-save-your-changes-to-the-file-exit-nano","title":"4.6) Open ~/test/expectations.txt in the nano text editor, delete the first line of text, and save your changes to the file. Exit nano.","text":"Hint  *nano FILENAME*  Once *nano* is open it displays some command hints along the bottom of the screen.   Additional Hint  *^O* means hold the *Control* (or CTRL) key while pressing the *o*.  Despite what it displays, you need to type the lower-case letter that follows the *^* character.  WriteOut is another name for Save.   Answer  Take some time to play around with the *nano* text editor.  *Nano* is a very simple text editor which is easy to use but limited in features. More powerful editors exist such as *vim* and *emacs*, however they take a substantial amount of time to learn."},{"location":"tutorials/unix_archive_2022/unix/#47-did-the-changes-you-made-to-testexpectationstxt-have-any-effect-on-vlscitrainingsharedintro_to_unix","title":"4.7) Did the changes you made to ~/test/expectations.txt have any effect on /vlsci/TRAINING/shared/Intro_to_Unix?","text":"<p>How can you tell if two files are the same or different in their contents?</p> Hint  Remember exercise 4.4   Additional Hint  Use *diff*   Answer  Use *diff* to check that the two files are different after you have made the change to the copy of *expectations.txt* in your *~/test* directory.  <pre><code>diff ~/test/expectations.txt \\\n/vlsci/TRAINING/shared/Intro_to_Unix/expectations.txt\n</code></pre>  You could also use *ls* to check that the files have different sizes."},{"location":"tutorials/unix_archive_2022/unix/#48-in-your-test-subdirectory-rename-expectationstxt-to-footxt","title":"4.8) In your test subdirectory, rename expectations.txt to foo.txt.","text":"Hint  Another way to think of it is *moving* it from *expectations.txt* to *foo.txt*   Additional Hint  *mv*  Use *man mv* if you need to work out how to use it.   Answer  Use the *mv* command to rename the file:  <pre><code>$ mv expectations.txt foo.txt\n$ ls\nfoo.txt  hello.c  hi  jude.txt  moby.txt  sample_1.fastq  sleepy\n</code></pre>"},{"location":"tutorials/unix_archive_2022/unix/#49-rename-footxt-back-to-expectationstxt","title":"4.9) Rename foo.txt back to expectations.txt.","text":"Answer  Use the *mv* command to rename the file:  <pre><code>$ mv foo.txt expectations.txt\n$ ls\nexpectations.txt  hello.c  hi  jude.txt  moby.txt  sample_1.fastq  sleepy\n</code></pre>  Use *ls* to check that the file is in fact renamed."},{"location":"tutorials/unix_archive_2022/unix/#410-remove-the-file-expectationstxt-from-your-test-directory","title":"4.10) Remove the file expectations.txt from your test directory.","text":"Hint  We are trying to *remove* a file, check the commands at the top of this topic.   Additional Hint  *rm*   Answer  Use the *rm* command to remove files (carefully):  <pre><code>$ rm expectations.txt\n$ ls\nhello.c  hi  jude.txt  moby.txt  sample_1.fastq  sleepy\n</code></pre>"},{"location":"tutorials/unix_archive_2022/unix/#411-remove-the-entire-test-directory-and-all-the-files-within-it","title":"4.11) Remove the entire test directory and all the files within it.","text":"Hint  We are trying to *remove a directory*.   Additional Hint  You could use *rmdir* but there is an easier way using just *rm* and a flag.   Answer  You could use the *rm* command to remove each file individually, and then use the *rmdir* command to remove the directory. Note that *rmdir* will only remove directories that are empty (i.e. do not contain files or subdirectories).  A faster way is to pass the *-r* (for recursive) flag to *rm* to remove all the files and the directory in one go:  **Logical Answer**: <pre><code>cd ~\nrm test/*\nrmdir test\n</code></pre>  **Easier Answer**: <pre><code>cd ~\nrm -r test\n</code></pre> Warning: Be very careful with rm -r, it will remove all files and all subdirectories underneath the specified directory. This could be catastrophic if you do it in the wrong location! Now is a good moment to pause and think about file backup strategies."},{"location":"tutorials/unix_archive_2022/unix/#412-recreate-the-test-directory-in-your-home-directory-and-copy-all-the-files-from-vlscitrainingsharedintro_to_unix-back-into-the-test-directory","title":"4.12) Recreate the test directory in your home directory and copy all the files from /vlsci/TRAINING/shared/Intro_to_Unix back into the test directory.","text":"Hint  See exercises 4.1 and 4.2   Answer  Repeat exercises 4.1 and 4.2.  <pre><code>$ cd ~\n$ mkdir test\n$ cp /vlsci/TRAINING/shared/Intro_to_Unix/* test\n</code></pre>"},{"location":"tutorials/unix_archive_2022/unix/#413-change-directories-to-test-and-use-the-cat-command-to-display-the-entire-contents-of-the-file-helloc","title":"4.13) Change directories to ~/test and use the cat command to display the entire contents of the file hello.c","text":"Hint  Use *man* if you can't guess how it might work.   Answer <pre><code>$ cd ~/test\n$ cat hello.c\n#include &lt;stdio.h&gt;\nint main(void) {\n    printf (\"Hello World\\n\");\n    return 0;\n}\n</code></pre>  *hello.c* contains the source code of a C program. The compiled executable version of this code is in the file called *hi*, which you can run like so:  <pre><code>$ ./hi\nHello World\n</code></pre>"},{"location":"tutorials/unix_archive_2022/unix/#414-use-the-head-command-to-view-the-first-20-lines-of-the-file-sample_1fastq","title":"4.14) Use the head command to view the first 20 lines of the file sample_1.fastq","text":"Hint  Remember your *best* friend!   Additional Hint  Use *man* to find out what option you need to add to display a given number of *lines*.   Answer <pre><code>$ head -20 sample_1.fastq\n@IRIS:7:1:17:394#0/1\nGTCAGGACAAGAAAGACAANTCCAATTNACATTATG\n+IRIS:7:1:17:394#0/1\naaabaa`]baaaaa_aab]D^^`b`aYDW]abaa`^\n@IRIS:7:1:17:800#0/1\nGGAAACACTACTTAGGCTTATAAGATCNGGTTGCGG\n+IRIS:7:1:17:800#0/1\nababbaaabaaaaa`]`ba`]`aaaaYD\\\\_a``XT\n@IRIS:7:1:17:1757#0/1\nTTTTCTCGACGATTTCCACTCCTGGTCNACGAATCC\n+IRIS:7:1:17:1757#0/1\naaaaaa``aaa`aaaa_^a```]][Z[DY^XYV^_Y\n@IRIS:7:1:17:1479#0/1\nCATATTGTAGGGTGGATCTCGAAAGATATGAAAGAT\n+IRIS:7:1:17:1479#0/1\nabaaaaa`a```^aaaaa`_]aaa`aaa__a_X]``\n@IRIS:7:1:17:150#0/1\nTGATGTACTATGCATATGAACTTGTATGCAAAGTGG\n+IRIS:7:1:17:150#0/1\nabaabaa`aaaaaaa^ba_]]aaa^aaaaa_^][aa\n</code></pre>"},{"location":"tutorials/unix_archive_2022/unix/#415-use-the-tail-command-to-view-the-last-8-lines-of-the-file-sample_1fastq","title":"4.15) Use the tail command to view the last 8 lines of the file sample_1.fastq","text":"Hint  It's very much like *head*.   Answer <pre><code>tail -8 sample_1.fastq\n@IRIS:7:32:731:717#0/1\nTAATAATTGGAGCCAAATCATGAATCAAAGGACATA\n+IRIS:7:32:731:717#0/1\nababbababbab]abbaa`babaaabbb`bbbabbb\n@IRIS:7:32:731:1228#0/1\nCTGATGCCGAGGCACGCCGTTAGGCGCGTGCTGCAG\n+IRIS:7:32:731:1228#0/1\n`aaaaa``aaa`a``a`^a`a`a_[a_a`a`aa`__\n</code></pre>"},{"location":"tutorials/unix_archive_2022/unix/#416-use-the-grep-command-to-find-out-all-the-lines-in-mobytxt-that-contain-the-word-ahab","title":"4.16) Use the grep command to find out all the lines in moby.txt that contain the word \u201cAhab\u201d","text":"Hint  One might say we are 'looking for the *pattern* \"Ahab\"'   Additional Hint <pre><code>$ man grep\n...\nSYNOPSIS\n       grep [OPTIONS] PATTERN [FILE...]\n...\n</code></pre> Answer <pre><code>$ grep Ahab moby.txt\n\"Want to see what whaling is, eh? Have ye clapped eye on Captain Ahab?\"\n\"Who is Captain Ahab, sir?\"\n\"Aye, aye, I thought so. Captain Ahab is the Captain of this ship.\"\n... AND MUCH MUCH MORE ...\n</code></pre>  If you want to know how many lines are in the output of the above command you can \"pipe\" it into the *wc -l* command:  <pre><code>$ grep Ahab moby.txt | wc -l\n491\n</code></pre>  which shows that there are *491* lines in *moby.txt* that contain the word Ahab."},{"location":"tutorials/unix_archive_2022/unix/#417-use-the-grep-command-to-find-out-all-the-lines-in-expectationstxt-that-contain-the-word-the-with-a-case-insensitive-search-it-should-count-the-the-the-the-etcetera","title":"4.17) Use the grep command to find out all the lines in expectations.txt that contain the word \u201cthe\u201d with a case insensitive search (it should count \u201cthe\u201d \u201cThe\u201d \u201cTHE\u201d \u201ctHe\u201d etcetera).","text":"Hint  One might say we are *ignoring case*.   Additional Hint <pre><code>$ man grep\n...\n       -i, --ignore-case\n              Ignore case distinctions in both the PATTERN and the input files.  (-i is specified by POSIX.)\n...\n</code></pre> Answer  Use the *-i* flag to *grep* to make it perform case insensitive search:  <pre><code>$ grep -i the expectations.txt\nThe Project Gutenberg EBook of Great Expectations, by Charles Dickens\nThis eBook is for the use of anyone anywhere at no cost and with\nre-use it under the terms of the Project Gutenberg License included\n[Project Gutenberg Editor's Note: There is also another version of\n... AND MUCH MUCH MORE ...\n</code></pre>  Again, \"pipe\" the output to *wc -l* to count the number of lines:  <pre><code>$ grep -i the expectations.txt  | wc -l\n8165\n</code></pre>"},{"location":"tutorials/unix_archive_2022/unix/#418-use-the-gzip-command-to-compress-the-file-sample_1fastq-use-gunzip-to-decompress-it-back-to-the-original-contents","title":"4.18) Use the gzip command to compress the file sample_1.fastq. Use gunzip to decompress it back to the original contents.","text":"Hint  Use the above commands along with *man* and *ls* to see what happens to the file.   Answer  Check the file size of sample_1.fastq before compressing it:  <pre><code># check filesize\n$ ls -l sample_1.fastq\n-rw-r--r-- 1 training01 training 90849644 Jun 14 20:03 sample_1.fastq\n\n# compress it (takes a few seconds)\n$ gzip sample_1.fastq\n\n# check filesize (Note: its name changed)\n$ ls -l sample_1.fastq.gz\n-rw-r--r-- 1 training01 training 26997595 Jun 14 20:03 sample_1.fastq.gz\n\n# decompress it\n$ gunzip sample_1.fastq.gz\n\n$ ls -l sample_1.fastq\n-rw-r--r-- 1 training01 training 90849644 Jun 14 20:03 sample_1.fastq\n</code></pre>  You will see that when it was compressed it is *26997595* bytes in size, making it about *0.3* times the size of the original file.  **Note**: in the above section the lines starting with *#* are comments so don't need to be copied but if you do then they wont do anything."},{"location":"tutorials/unix_archive_2022/unix/#topic-5-pipes-output-redirection-and-shell-scripts","title":"Topic 5: Pipes, output redirection and shell scripts","text":"<p>In this section we will cover a lot of the more advanced Unix concepts; it is here where you will start to see the power of Unix.  I say start because this is only the \u201ctip of the iceberg\u201d.</p> <p>Duration: 50 minutes. </p> <p>Relevant commands: wc, paste, grep, sort, uniq, nano, cut</p>"},{"location":"tutorials/unix_archive_2022/unix/#51-how-many-reads-are-contained-in-the-file-sample_1fastq","title":"5.1) How many reads are contained in the file sample_1.fastq?","text":"Hint  Examine some of the file to work out how many lines each *read* takes up.   Additional Hint  Count the number of lines   Answer  We can answer this question by counting the number of lines in the file and dividing by 4:  <pre><code>$ wc -l sample_1.fastq\n3000000\n</code></pre>  **Answer**: There are *3000000* lines in the file representing *750000* reads.  If you want to do simple arithmetic at the command line then you can use the \"basic calculator\" called *bc*:  <pre><code>$ echo \"3000000 / 4\" | bc\n750000\n</code></pre> Note: that the vertical bar character \"|\" is the Unix pipe (and is often called the \"pipe symbol\"). It is used for connecting the output of one command into the input of another command. We'll see more examples soon.  *bc* is suitable for small calculations, but it becomes cumbersome for more complex examples. If you want to do more sophisticated calculations then we recommend to use a more general purpose programming language (such as Python etcetera)."},{"location":"tutorials/unix_archive_2022/unix/#52-how-many-reads-in-sample_1fastq-contain-the-sequence-gattaca","title":"5.2) How many reads in sample_1.fastq contain the sequence GATTACA?","text":"Hint  Check out exercise 4.16   Answer  Use *grep* to find all the lines that contain *GATTACA* and \"pipe\" the output to *wc -l* to count them:  <pre><code>$ grep GATTACA sample_1.fastq | wc -l\n1119\n</code></pre>  **Answer**: *1119*  If you are unsure about the possibility of upper and lower case characters then consider using the *-i* (ignore case option for grep)."},{"location":"tutorials/unix_archive_2022/unix/#53-on-what-line-numbers-do-the-sequences-containing-gattaca-occur","title":"5.3) On what line numbers do the sequences containing GATTACA occur?","text":"Hint  We are looking for the *line numbers*.   Additional Hint  Check out the manpage for *grep* and/or *nl*   Answer  You can use the *-n* flag to grep to make it prefix each line with a line number:  **Answer 1**: <pre><code>$ grep -n GATTACA sample_1.fastq\n5078:AGGAAGATTACAACTCCAAGACACCAAACAAATTCC\n7170:AACTACAAAGGTCAGGATTACAAGCTCTTGCCCTTC\n8238:ATAGTTTTTTCGATTACATGGATTATATCTGTTTGC\n... AND MUCH MUCH MORE ...\n</code></pre>  **Answer 2**: Or you can use the *nl* command to number each line of sample_1.fastq and then search for *GATTACA* in the numbered lines:  <pre><code>$ nl sample_1.fastq | grep GATTACA\n  5078  AGGAAGATTACAACTCCAAGACACCAAACAAATTCC\n  7170  AACTACAAAGGTCAGGATTACAAGCTCTTGCCCTTC\n  8238  ATAGTTTTTTCGATTACATGGATTATATCTGTTTGC\n... AND MUCH MUCH MORE ...\n</code></pre>  **Just the line numbers**:  If you just want to see the line numbers then you can \"pipe\" the output of the above command into *cut -f 1*:  <pre><code>$ nl sample_1.fastq | grep GATTACA | cut -f 1\n  5078\n  7170\n  8238\n... AND MUCH MUCH MORE ...\n</code></pre>  *cut* will remove certain columns from the input; in this case it will remove all except column 1 (a.k.a. field 1, hence the *-f 1* option)  <pre><code>$ grep -n GATTACA sample_1.fastq | cut -d: -f 1\n5078\n7170\n8238\n... AND MUCH MUCH MORE ...\n</code></pre>"},{"location":"tutorials/unix_archive_2022/unix/#54-use-the-nl-command-to-print-each-line-of-sample_1fastq-with-its-corresponding-line-number-at-the-beginning","title":"5.4) Use the nl command to print each line of sample_1.fastq with its corresponding line number at the beginning.","text":"Hint  Check answer to 5.3.   Answer <pre><code>$ nl sample_1.fastq\n     1  @IRIS:7:1:17:394#0/1\n     2  GTCAGGACAAGAAAGACAANTCCAATTNACATTATG\n     3  +IRIS:7:1:17:394#0/1\n     4  aaabaa`]baaaaa_aab]D^^`b`aYDW]abaa`^\n     5  @IRIS:7:1:17:800#0/1\n     6  GGAAACACTACTTAGGCTTATAAGATCNGGTTGCGG\n     7  +IRIS:7:1:17:800#0/1\n     8  ababbaaabaaaaa`]`ba`]`aaaaYD\\\\_a``XT\n... AND MUCH MUCH MORE ...\n</code></pre>  There are a lot of lines in that file so this command might take a while to print all its output. If you get tired of looking at the output you can kill the command with *control-c* (hold the *control* key down and simultaneously press the \"*c*\" character)."},{"location":"tutorials/unix_archive_2022/unix/#55-redirect-the-output-of-the-previous-command-to-a-file-called-sample_1fastqnl","title":"5.5) Redirect the output of the previous command to a file called sample_1.fastq.nl.","text":"<p>Check the first 20 lines of sample_1.fastq.nl with the head command. Use the less command to interactively view the contents of sample_1.fastq.nl (use the arrow keys to navigate up and down, q to quit and \u2018/\u2019 to search). Use the search facility in less to find occurrences of GATTACA.</p> Hint  Ok that one was tough, *&gt; FILENAME* is how you do it if you didn't break out an internet search for \"redirect the output in Unix\"   Answer <pre><code>$ nl sample_1.fastq &gt; sample_1.fastq.nl\n</code></pre>  The greater-than sign \"*&gt;*\" is the file redirection operator. It causes the standard output of the command on the left-hand-side to be written to the file on the right-hand-side.  You should notice that the above command is much faster than printing the output to the screen. This is because writing to disk can be performed much more quickly than rendering the output on a terminal.  To check that the first 20 lines of the file look reasonable you can use the *head* command like so:  <pre><code>$ head -20 sample_1.fastq.nl\n     1  @IRIS:7:1:17:394#0/1\n     2  GTCAGGACAAGAAAGACAANTCCAATTNACATTATG\n     3  +IRIS:7:1:17:394#0/1\n     4  aaabaa`]baaaaa_aab]D^^`b`aYDW]abaa`^\n     5  @IRIS:7:1:17:800#0/1\n     6  GGAAACACTACTTAGGCTTATAAGATCNGGTTGCGG\n     7  +IRIS:7:1:17:800#0/1\n     8  ababbaaabaaaaa`]`ba`]`aaaaYD\\\\_a``XT\n...\n</code></pre>  The *less* command allows you to interactively view a file. The arrow keys move the page up and down. You can search using the '*/*' followed by the search term. You can quit by pressing \"*q*\". Note that the *less* command is used by default to display man pages.  <pre><code>$ less sample_1.fastq.nl\n</code></pre>"},{"location":"tutorials/unix_archive_2022/unix/#56-the-four-lines-per-read-format-of-fastq-is-cumbersome-to-deal-with-often-it-would-be-preferable-if-we-could-convert-it-to-tab-separated-value-tsv-format-such-that-each-read-appears-on-a-single-line-with-each-of-its-fields-separated-by-tabs-use-the-following-command-to-convert-sample_1fastq-into-tsv-format","title":"5.6) The four-lines-per-read format of FASTQ is cumbersome to deal with. Often it would be preferable if we could convert it to tab-separated-value (TSV) format, such that each read appears on a single line with each of its fields separated by tabs. Use the following command to convert sample_1.fastq into TSV format:","text":"<pre><code>$ cat sample_1.fastq | paste - - - - &gt; sample_1.tsv\n</code></pre> Answer  The *'-'* (dash) character has a special meaning when used in place of a file; it means use the standard input instead of a real file.  Note: while it is fairly common in most Unix programs, not all will support it.  The *paste* command is useful for merging multiple files together line-by-line, such that the *Nth* line from each file is joined together into one line in the output, separated by default with a *tab* character. In the above example we give paste 4 copies of the contents of *sample_1.fastq*, which causes it to join consecutive groups of 4 lines from the file into one line of output."},{"location":"tutorials/unix_archive_2022/unix/#57-do-you-expect-the-output-of-the-following-command-to-produce-the-same-output-as-above-and-why","title":"5.7) Do you expect the output of the following command to produce the same output as above? and why?","text":"<pre><code>$ paste sample_1.fastq sample_1.fastq sample_1.fastq sample_1.fastq &gt; sample_1b.tsv\n</code></pre> <p>Try it, see what ends up in sample_1b.tsv (maybe use less)</p> Hint  Use *less* to examine it.   Answer  **Answer**: No, in the second instance we get 4 copies of each line.  **Why**: In the first command *paste* will use the input file (standard input) 4 times since the *cat* command will only give one copy of the file to *paste*, where as, in the second command *paste* will open the file 4 times.  Note: this is quite confusing and is not necessory to remember; its just an interesting side point."},{"location":"tutorials/unix_archive_2022/unix/#58-check-that-sample_1tsv-has-the-correct-number-of-lines-use-the-head-command-to-view-the-first-20-lines-of-the-file","title":"5.8) Check that sample_1.tsv has the correct number of lines. Use the head command to view the first 20 lines of the file.","text":"Hint  Remember the *wc* command.   Answer  We can count the number of lines in *sample_1.tsv* using *wc*:  <pre><code>$ wc -l sample_1.tsv\n</code></pre>  The output should be *750000* as expected (1/4 of the number of lines in sample_1.fastq).  To view the first *20* lines of *sample_1.tsv* use the *head* command:  <pre><code>$ head -20 sample_1.tsv\n</code></pre>"},{"location":"tutorials/unix_archive_2022/unix/#59-use-the-cut-command-to-print-out-the-second-column-of-sample_1tsv-redirect-the-output-to-a-file-called-sample_1dnatxt","title":"5.9) Use the cut command to print out the second column of sample_1.tsv. Redirect the output to a file called sample_1.dna.txt.","text":"Hint  See exercise 5.3 (for cut) and 5.5 (redirection)   Answer  The file sample_1.tsv is in column format. The cut command can be used to select certain columns from the file. The DNA sequences appear in column 2, we select that column using the -f 2 flag (the f stands for \"field\").  <pre><code>cut -f 2 sample_1.tsv &gt; sample_1.dna.txt\n</code></pre>  Check that the output file looks reasonable using *head* or *less*."},{"location":"tutorials/unix_archive_2022/unix/#510-use-the-sort-command-to-sort-the-lines-of-sample_1dnatxt-and-redirect-the-output-to-sample_1dnasortedtxt-use-head-to-look-at-the-first-few-lines-of-the-output-file-you-should-see-a-lot-of-repeated-sequences-of-as","title":"5.10) Use the sort command to sort the lines of sample_1.dna.txt and redirect the output to sample_1.dna.sorted.txt. Use head to look at the first few lines of the output file. You should see a lot of repeated sequences of As.","text":"Hint  Use *man* (sort) and see exercise 5.5 (redirection)   Answer <pre><code>$ sort sample_1.dna.txt &gt; sample_1.dna.sorted.txt\n</code></pre>  Running *head* on the output file reveals that there are duplicate DNA sequences in the input FASTQ file."},{"location":"tutorials/unix_archive_2022/unix/#511-use-the-uniq-command-to-remove-duplicate-consecutive-lines-from-sample_1dnasortedtxt-redirect-the-result-to-sample_1dnauniqtxt-compare-the-number-of-lines-in-sample1_dnatxt-to-the-number-of-lines-in-sample_1dnauniqtxt","title":"5.11) Use the uniq command to remove duplicate consecutive lines from sample_1.dna.sorted.txt, redirect the result to sample_1.dna.uniq.txt. Compare the number of lines in sample1_dna.txt to the number of lines in sample_1.dna.uniq.txt.","text":"Hint  I am pretty sure you have already used *man* (or just guessed how to use *uniq*).  You're also a gun at redirection now.   Answer <pre><code>$ uniq sample_1.dna.sorted.txt &gt; sample_1.dna.uniq.txt\n</code></pre>  Compare the outputs of:  <pre><code>$ wc -l sample_1.dna.sorted.txt\n750000\n$ wc -l sample_1.dna.uniq.txt\n614490\n</code></pre>  View the contents of *sample_1.dna.uniq.txt* to check that the duplicate DNA sequences have been removed."},{"location":"tutorials/unix_archive_2022/unix/#512-can-you-modify-the-command-from-above-to-produce-only-those-sequences-of-dna-which-were-duplicated-in-sample_1dnasortedtxt","title":"5.12) Can you modify the command from above to produce only those sequences of DNA which were duplicated in sample_1.dna.sorted.txt?","text":"Hint  Checkout the *uniq* manpage   Additional Hint  Look at the man page for uniq.   Answer  Use the *-d* flag to *uniq* to print out only the duplicated lines from the file:  <pre><code>$ uniq -d sample_1.dna.sorted.txt &gt; sample_1.dna.dup.txt\n</code></pre>"},{"location":"tutorials/unix_archive_2022/unix/#513-write-a-shell-pipeline-which-will-print-the-number-of-duplicated-dna-sequences-in-sample_1fastq","title":"5.13) Write a shell pipeline which will print the number of duplicated DNA sequences in sample_1.fastq.","text":"Hint  That is, *piping* most of the commands you used above instead of redirecting to file   Additional Hint  i.e. 6 commands (*cat*, *paste*, *cut*, *sort*, *uniq*, *wc*)   Answer  Finally we can 'pipe' all the pieces together into a sophisticated pipeline which starts with a FASTQ file and ends with a list of duplicated DNA sequences:  **Answer**: <pre><code>$ cat sample_1.fastq | paste - - - - | cut -f 2 | sort | uniq -d | wc -l\n56079\n</code></pre>  The output file should have *56079* lines."},{"location":"tutorials/unix_archive_2022/unix/#514-advanced-write-a-shell-script-which-will-print-the-number-of-duplicated-dna-sequences-in-sample_1fastq","title":"5.14) (Advanced) Write a shell script which will print the number of duplicated DNA sequences in sample_1.fastq.","text":"Hint  Check out the *sleepy* file (with *cat* or *nano*); there is a bit of magic on the first line that you will need.  You also need to tell bash that this file can be executed (check out *chmod* command).   Answer  Put the answer to *5.13* into a file called *sample_1_dups.sh* (or whatever you want). Use *nano* to create the file.  **Answer**: the contents of the file will look like this:  <pre><code>#!/bin/bash\n\ncat sample_1.fastq | paste - - - - | cut -f 2 | sort | uniq -d | wc -l\n</code></pre> Note: the first line has special meaning.  If it starts with '#!' (Hash then exclamation mark) then it tells bash this file is a script that can be interpreted.  The command (including full path) used to intepret the script is placed right after the magic code.  Give everyone execute permissions on the file with chmod:  <pre><code>$ chmod +x sample_1_dups.sh\n</code></pre>  You can run the script like so:  <pre><code>$ ./sample_1_dups.sh\n</code></pre>  If all goes well the script should behave in exactly the same way as the answer to 5.13."},{"location":"tutorials/unix_archive_2022/unix/#515-advanced-modify-your-shell-script-so-that-it-accepts-the-name-of-the-input-fastq-file-as-a-command-line-parameter","title":"5.15) (Advanced) Modify your shell script so that it accepts the name of the input FASTQ file as a command line parameter.","text":"Hint  Shell scripts can refer to command line arguments by their position using special variables called *$0*, *$1*, *$2* and so on.   Additional Hint  *$0* refers to the name of the script as it was called on the command line. *$1* refers to the first command line argument, and so on.   Answer  Copy the shell script from *5.14* into a new file:  <pre><code>$ cp sample_1_dups.sh fastq_dups.sh\n</code></pre>  Edit the new shell script file and change it to use the command line parameters:  <pre><code>#!/bin/bash\n\ncat $1 | paste - - - - | cut -f 2 | sort | uniq -d | wc -l\n</code></pre>  You can run the new script like so:  <pre><code>$ ./fastq_dups.sh sample_1.fastq\n</code></pre>  In the above example the script takes *sample_1.fastq* as input and prints the number of duplicated sequences as output.  **A better Answer**:  Ideally we would write our shell script to be more robust. At the moment it just assumes there will be at least one command line argument. However, it would be better to check and produce an error message if insufficient arguments were given:  <pre><code>#!/bin/bash\nif [ $# -eq 1 ]; then\n    cat $1 | paste - - - - | cut -f 2 | sort | uniq -d | wc -l\nelse\n    echo \"Usage: $0 &lt;fastq_filename&gt;\"\n    exit 1\nfi\n</code></pre>  The '*if ...; then*' line means: do the following line(s) ONLY if the *...* (called condition) bit is true.  The '*else*' line means: otherwise do the following line(s) instead.  Note: it is optional.  The '*fi*' line means: this marks the end of the current *if* or *else* section.  The '*[ $# -eq 1 ]*' part is the condition:  * *$#*: is a special shell variable that indicates how many command line arguments were given. * *-eq*: checks if the numbers on either side of it are equal. * *1*: is a number one  Spaces in conditions: Bash is VERY picky about the spaces within the conditions; if you get it wrong it will just behave strangely (without warning).  You MUST put a space near the share brackets and between each part of the condition!  So in words our script is saying \"if user provided 1 filename, then count the duplicates, otherwise print an error\".  Exit-status: It is a Unix standard that when the user provides incorrect commandline arguments we print a usage message and return a *non-zero* exit status.  The *exit status* is a standard way for other programs to know if our program ran correctly; 0 means everything went as expected, any other number is an error.  If you don't provide an *exit ..* line then it automatically returns a 0 for you."},{"location":"tutorials/unix_archive_2022/unix/#516-advanced-modify-your-shell-script-so-that-it-accepts-zero-or-more-fastq-files-on-the-command-line-argument-and-outputs-the-number-of-duplicated-dna-sequences-in-each-file","title":"5.16) (Advanced) Modify your shell script so that it accepts zero or more FASTQ files on the command line argument and outputs the number of duplicated DNA sequences in each file.","text":"Answer  We can add a loop to our script to accept multiple input FASTQ files:  <pre><code>#!/bin/bash\nfor file in $@; do\n    dups=$(cat $file | paste - - - - | cut -f 2 | sort | uniq -d | wc -l)\n    echo \"$file $dups\"\ndone\n</code></pre>  There's a lot going on in this script.  The *$@* is a sequence of all command line arguments.  The '*for ...; do*' (a.k.a. for loop) iterates over that sequence one argument at a time, assigning the current argument in the sequence to the variable called *file*.  The *$(...)* allow us to capture the output of another command (in-place of the *...*).  In this case we capture the output of the pipeline and save it to the variable called *dups*.  If you had multiple FASTQ files available you could run the script like so:  <pre><code>./fastq_dups.sh sample_1.fastq sample_2.fastq sample_3.fastq\n</code></pre>  And it would produce output like:  <pre><code>sample_1.fastq 56079\nsample_2.fastq XXXXX\nsample_3.fastq YYYYY\n</code></pre>"},{"location":"tutorials/unix_archive_2022/unix/#finished","title":"Finished","text":"<p>Well done, you learnt a lot over the last 5 topics and you should be proud of your achievement; it was a lot to take in.</p> <p>From here you should be comfortable around the Unix command line and ready to take on the HPC Workshop.</p> <p>You will no-doubt forget a lot of what you learnt here so I encourage you to save a link to this workshop for later reference.</p> <p>Thank you for your attendance, please don\u2019t forget to complete the training survey and give it back to the workshop facilitators.</p>"},{"location":"tutorials/using_git/","title":"Index","text":"<p>PR reviewers and advice: Juan Nunez-Iglesias</p> <p>Current slides: TBD</p> <p>Other slides:</p> <ul> <li>None yet</li> </ul>"},{"location":"tutorials/using_git/Using_Git/","title":"Using Git and Github for revision control","text":"<p>Warning</p> <p>This workshop is deprecated. Please refer to the new Git workshop.</p>"},{"location":"tutorials/using_git/Using_Git/#what-is-git","title":"What is Git?","text":"<p>Git is a revision control system. It is designed to help you keep track of collections of files which stem from a common source and undergo modifications over time. The files tend to be human generated text. It is very good at managing source code repositories, but it can also be used to manage other things, such as configuration files and text documents. It is not, however, a file backup system.</p> <p>Git encourages a distributed style of project development. Each contributor to a project has their own complete repository. Changes are shared between repositories by pushing changes to, or pulling changes from other repositories. Collaboration between developers is greatly enhanced by websites such as github, bitbucket and gitorious which provide convenient interfaces to managing multiple repositories.</p> <p>There are many alternatives to git which each have their pros and cons. Two of the more popular alternatives are:</p> <ul> <li> <p>Subversion is particularly suited to a centralised model of development.</p> </li> <li> <p>Mercurial is very similar to Git, but is sometimes considered more user friendly.</p> </li> </ul>"},{"location":"tutorials/using_git/Using_Git/#getting-help","title":"Getting help","text":"<p>There are lots of resources on the web for learning how to use Git. A popular reference is Pro Git, which is freely available online (http://git-scm.com/book). Another good reference is the book Version Control with Git, by Loeliger and McCullough.</p>"},{"location":"tutorials/using_git/Using_Git/#a-simple-workflow","title":"A simple workflow","text":""},{"location":"tutorials/using_git/Using_Git/#step-1-create-a-github-account","title":"Step 1, create a github account.","text":"<p>Create a github account (https://github.com/). Do this step once only (unless you need multiple accounts).</p> <p>You get unlimited numbers of (world readable) public repositories for free.</p> <p>Private repositories (that can be shared with selected users) cost money (see https://github.com/plans), but discounts are available for academics.</p>"},{"location":"tutorials/using_git/Using_Git/#step-2-sign-into-github-and-create-a-repository","title":"Step 2, sign into github and create a repository.","text":"<p>Sign in to your github account and create a new repository. Do this once for every new project you have.</p> <p></p> <p>You will need to provide some information:</p> <ul> <li> <p>the repository name</p> </li> <li> <p>a description of the repository</p> </li> <li> <p>choose whether it is public (free) or private (costs money)</p> </li> <li> <p>whether to initialise with a dummy README file (it is useful)</p> </li> <li> <p>whether to provide an initial .gitignore file (probably leave this     &gt; out in the beginning)</p> </li> </ul> <p></p>"},{"location":"tutorials/using_git/Using_Git/#step-3-clone-your-repository-to-your-local-computer","title":"Step 3, clone your repository to your local computer.","text":"<p>Clone your new repository from github to your local computer.</p> <p>Each repository on github is identified by a URL, which will look like the one below:</p> <p></p> <p>Run the command below on your development machine in the directory where you want to keep the repository (of course you should use the actual URL of your own repository, not the one in the example).</p> <pre><code>$ git clone https://github.com/bjpop/test.git\nCloning into 'test'...\nremote: Counting objects: 3, done.\nremote: Total 3 (delta 0), reused 0 (delta 0)\nUnpacking objects: 100% (3/3), done.\n</code></pre> <p>This will create a directory with the same name as your repository (in this example it is called <code>test</code>).</p> <p>If you change into that directory and list its contents you will see a <code>.git</code> subdirectory, which is where Git keeps all the data for your repository. You will also see working copies of the files in the project. In this example the only such file is <code>README.md</code> which was created automatically by github when the repository was first created. (The .md extension on the file suggests that it uses the Markdown syntax, see https://help.github.com/articles/github-flavored-markdown).</p> <pre><code>$ cd test\n$ ls -a\n. .. .git README.md\n$ ls .git\nbranches config description HEAD hooks index info logs objects packed-refs refs\n</code></pre>"},{"location":"tutorials/using_git/Using_Git/#step-4-commit-a-file-to-the-repository","title":"Step 4, commit a file to the repository.","text":"<p>Create a new file in the repository on your local computer and commit it to your local repository.</p> <p>How you create the file is immaterial. You could copy it from somewhere else, create it in a text editor. In this case we\u2019ll make a little python program:</p> <pre><code>$ echo 'print(\"hello world\")' &gt; hello.py\n</code></pre> <p>Test that your new file is satisfactory, in this case we test our code:</p> <pre><code>$ python hello.py\nhello world\n</code></pre> <p>Check the status of your repository:</p> <pre><code>$ git status\n# On branch master\n# Untracked files:\n# (use \"git add &lt;file&gt;...\" to include in what will be committed)\n#\n# hello.py\nnothing added to commit but untracked files present (use \"git add\" to track)\n</code></pre> <p>Notice that git tells you that the new file <code>hello.py</code> is not tracked (not in the repository).</p> <p>When you are happy with your file, you can stage it (this is not a commit), but it will cause the file to be tracked:</p> <pre><code>$ git add hello.py\n</code></pre> <p>Note that git uses a two-stage process for committing changes. The first stage is to \u201cstage\u201d your changes. Staged changes appear in the repository index, but are not committed. You can stage many changes together, and even amend or undo previously staged (but not committed) changes. The second stage is to commit the current staged changes to the repository. Committing causes the changes to be reflected in the state of the repository.</p> <p>Re-check the status of your repository:</p> <pre><code>$ git status\n# On branch master\n# Changes to be committed:\n# (use \"git reset HEAD &lt;file&gt;...\" to unstage)\n#\n# new file: hello.py\n#\n</code></pre> <p>Now we can see that the changes to <code>hello.py</code> have been staged and are ready to be committed. Notice that <code>hello.py</code> is no longer untracked.</p> <p>Commit your changes with a commit message:</p> <pre><code>$ git commit -m \"A little greeting program\"\n[master b1cce11] A little greeting program\n1 files changed, 1 insertions(+), 0 deletions(-)\ncreate mode 100644 hello.py\n</code></pre> <p>Re-check the status of your repository:</p> <pre><code>$ git status\n# On branch master\n# Your branch is ahead of 'origin/master' by 1 commit.\n#\nnothing to commit (working directory clean)\n</code></pre> <p>Now we see that there a no uncommitted changes in the repository, however git tells us that our local repository is one commit ahead of the github version (which it calls <code>origin/master</code>).</p>"},{"location":"tutorials/using_git/Using_Git/#step-5-push-your-changes-to-github","title":"Step 5, push your changes to github.","text":"<p>Push the commit in your local repository to github (thus synchronising them).</p> <pre><code>$ git push origin\nUsername for 'https://github.com': &lt;type your github username&gt;\nPassword for 'https://&lt;your github username&gt;@github.com': \nCounting objects: 4, done.\nDelta compression using up to 16 threads.\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (3/3), 305 bytes, done.\nTotal 3 (delta 0), reused 0 (delta 0)\nTo https://github.com/bjpop/test.git\n71a771a..b1cce11 master -&gt; master\n</code></pre> <p>Now if you look at your repository on github you should see the file <code>hello.py</code> has been uploaded, along with its commit time and commit message.</p> <p></p> <p>You can inspect the contents of the file on github by clicking on its name:</p> <p></p>"},{"location":"tutorials/using_git/Using_Git/#step-6-create-a-branch-in-your-local-repository","title":"Step 6, create a branch in your local repository.","text":"<p>You can ask git to tell you about the names of the current branches:</p> <pre><code>$ git branch\n* master\n</code></pre> <p>By default your repository starts with a branch called master. The asterisk next to the branch name tells you which is the current branch (at the moment there is only one branch).</p> <pre><code>$ git branch documentation\n$ git branch\ndocumentation\n* master\n</code></pre> <p>The first command above creates a new branch called <code>documentation</code>. The second command shows us that the new branch has been created, but the current branch is still <code>master</code>.</p> <p>To switch to another branch you must check it out:</p> <pre><code>$ git checkout documentation\nSwitched to branch 'documentation'\n$ git branch\n* documentation\nmaster\n</code></pre> <p>Let\u2019s add a change to our existing <code>hello.py</code> file:</p> <pre><code>$ echo '#this is a comment' &gt;&gt; hello.py\n</code></pre> <p>Check the status of the repository (now in the documentation branch):</p> <pre><code>$ git status\n# On branch documentation\n# Changes not staged for commit:\n# (use \"git add &lt;file&gt;...\" to update what will be committed)\n# (use \"git checkout -- &lt;file&gt;...\" to discard changes in working\n directory)\n#\n# modified: hello.py\n#\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n</code></pre> <p>Stage the new changes and commit them, and check the status again:</p> <pre><code>$ git add hello.py \n$ git commit -m \"Added a comment\"\n[documentation 9bbe430] Added a comment\n1 files changed, 1 insertions(+), 0 deletions(-)\n$ git status\n# On branch documentation\nnothing to commit (working directory clean)\n</code></pre> <p>Now we can push the new \u201cdocumentation\u201d branch to github:</p> <pre><code>$ git push origin documentation\nUsername for 'https://github.com': &lt;your github username&gt;\nPassword for 'https://&lt;your github username&gt;@github.com': \nCounting objects: 5, done.\nDelta compression using up to 16 threads.\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (3/3), 314 bytes, done.\nTotal 3 (delta 0), reused 0 (delta 0)\nTo https://github.com/bjpop/test.git\n* [new branch] documentation -&gt; documentation\n</code></pre> <p>On github you should be able to see the new branch:</p> <p></p>"},{"location":"tutorials/using_git/Using_Git/#step-7-merge-the-changes-back-into-the-master","title":"Step 7, merge the changes back into the master","text":"<p>branch.</p> <p>To go back to the master branch you must check it out:</p> <pre><code>$ git checkout master\nSwitched to branch 'master'\n</code></pre> <p>You can confirm that the master branch does not yet have the changes made in the documentation branch:</p> <pre><code>$ cat hello.py \nprint(\"hello world\")\n</code></pre> <p>Notice that the comment is missing.</p> <p>You can pull the changes in the documentation branch back into the master branch with the merge command:</p> <pre><code>$ git merge documentation\nUpdating b1cce11..9bbe430\nFast-forward\nhello.py | 1 +\n1 files changed, 1 insertions(+), 0 deletions(-)\n</code></pre> <p>In this case the merge was easy because there were no conflicts between master and documentation. In this case git automatically updates the tracked files in the current branch.</p> <p>We can test that the changes have taken place by looking at the contents of hello.py:</p> <pre><code>$ cat hello.py \nprint(\"hello world\")\n#this is a comment\n</code></pre> <p>Check the status of the master branch:</p> <pre><code>$ git status\n# On branch master\n# Your branch is ahead of 'origin/master' by 1 commit.\n#\nnothing to commit (working directory clean)\n</code></pre> <p>Push the changes in the master branch back to github:</p> <pre><code>$ git push origin master\nUsername for 'https://github.com': bjpop\nPassword for 'https://bjpop@github.com': \nTotal 0 (delta 0), reused 0 (delta 0)\nTo https://github.com/bjpop/test.git\nb1cce11..9bbe430 master -&gt; master\n</code></pre> <p>Again you can verify on github that the changes have taken place.</p> <p>To get an idea of the history of a project you can ask for a log of the commit messages:</p> <pre><code>$ git log\ncommit 9bbe430f6e8b70187927b4a70a8402f71b17b426\nAuthor: Bernie &lt;florbitous@gmail.com&gt;\nDate: Fri Mar 15 12:30:39 2013 +1100\nAdded a comment\ncommit b1cce115fb40a9b11917db7eb73c8295e276bb09\nAuthor: Bernie &lt;florbitous@gmail.com&gt;\nDate: Fri Mar 15 12:08:01 2013 +1100\nA little greeting program\ncommit 71a771a86b8116c3f93c99db5416bfa371a6f772\nAuthor: Bernie Pope &lt;florbitous@gmail.com&gt;\nDate: Thu Mar 14 17:29:02 2013 -0700\n</code></pre>"},{"location":"tutorials/var_detect_advanced/","title":"Index","text":"<p>PR reviewers and advice: Clare Sloggett, Khalid Mahmood, Simon Gladman, Jessica Chung</p> <p>Current slides: TBD</p> <p>Other slides:</p> <ul> <li>None yet</li> </ul>"},{"location":"tutorials/var_detect_advanced/var_detect_advanced/","title":"Variant Calling part 2 (Galaxy)","text":""},{"location":"tutorials/var_detect_advanced/var_detect_advanced/#variant-detection-advanced-workshop","title":"Variant Detection - Advanced Workshop","text":""},{"location":"tutorials/var_detect_advanced/var_detect_advanced/#tutorial-overview","title":"Tutorial Overview","text":"<p>In this tutorial, we will look further at variant calling from sequence data. We will:</p> <ul> <li>Align NGS read data to a reference genome and perform variant calling, using somewhat different tools to those in the Basic workshop</li> <li>Carry out local realignment on our aligned reads</li> <li>Compare the performance of different variant calling tools</li> <li>Annotate our called variants with reference information</li> </ul>"},{"location":"tutorials/var_detect_advanced/var_detect_advanced/#background","title":"Background","text":"<p>Some background reading and reference material can be found here.</p> <p>The slides used in this workshop can be found here.</p> <p>Where is the data in this tutorial from?</p> <p>The data has been produced from human whole genomic DNA. Only reads that have mapped to a part of chromosome 20 have been used, to make the data suitable for an interactive tutorial. There are about one million 100bp reads in the dataset, produced on an Illumina HiSeq2000. This data was generated as part of the 1000 Genomes project: http://www.1000genomes.org/</p>"},{"location":"tutorials/var_detect_advanced/var_detect_advanced/#preparation","title":"Preparation","text":"<ol> <li> <p>Make sure you have an instance of Galaxy ready to go.</p> <ul> <li>If you don\u2019t have your own - go to our Galaxy-Tut or Galaxy Australia server.</li> <li>Log in so that your work will be saved. If you don\u2019t already have an account on this server, select from the menu User -&gt; Register and create one.</li> </ul> </li> <li> <p>Import data for the tutorial.</p> <ul> <li> <p>We will import a pair of FASTQ files containing paired-end reads, and a   VCF file of known human variants to use for variant evaluation.</p> </li> <li> <p>Method 1: Paste/Fetch data from a URL to Galaxy.</p> </li> <li>In the Galaxy tools panel (left), under BASIC TOOLS, click on Get Data and choose Upload File.</li> <li>Get the FASTQ files: click Paste/Fetch data and enter these URLs into the text box. If you put them in the same upload box, make sure there is a newline between the URLs so that they are really on separate lines.</li> </ul> </li> </ol>  https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/variantCalling_ADVNCD/NA12878.hiseq.wgs_chr20_2mb.30xPE.fastq_1  https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/variantCalling_ADVNCD/NA12878.hiseq.wgs_chr20_2mb.30xPE.fastq_2  <pre><code>* Select *Type* as **fastqsanger** and click *Start*. Note that you cannot use Auto-detect for the type here as there are different subtypes of FASTQ and Galaxy can't be sure which is which.\n* Get the VCF file: click *Paste/Fetch data* again to open a new text box, and paste the following URL into the box\n</code></pre>  https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/variantCalling_ADVNCD/dbSNP135_excludingsitesafter129_chr20.vcf  <pre><code>* This time, you can leave the *Type* on Auto-detect. Click *Start*.\n* Once the upload status for both sets of files turns *green*, you can click *Close*. You should now be able to see all three files in the Galaxy history panel (right).\n\n* **Method 2: Upload local data to Galaxy.** (In most cases, you won't need this for the tutorial)\n* *Use this method if you have your own files to upload, or if for any reason you find you need to manually download files for the tutorial.*\n* In the Galaxy tools panel (left), under *BASIC TOOLS*, click on *Get Data* and choose *Upload File*.\n* Click *Choose local file* and select the downloaded  FASTQ files. Select *Type* as **fastqsanger** and click *Start*.\n* Click *Choose local file* again and select the downloaded VCF file. Click *Start*.\n* Once the upload status for all files turns *green*, you can click *Close*. You should now be able to see all three files in the Galaxy history panel (right).\n</code></pre> <ol> <li>Rename the datasets<ul> <li>You should now have three files in your History, shown in the right-hand panel. If you used Method 1, the name of each dataset will be the full URL we got the file from. For convenience, we will give the datasets shorter names.</li> <li>Click on the pencil icon to the top right of the dataset name (inside the green box) for the first dataset in your History. Note that the first dataset will be at the bottom! Shorten the name (you can just delete the first part) so that it is NA12878.hiseq.wgs_chr20_2mb.30xPE.fastq_1. Click Save.</li> <li>Similarly, rename the second dataset to NA12878.hiseq.wgs_chr20_2mb.30xPE.fastq_2.</li> <li>Similarly, rename the third dataset to dbSNP135_excludingsitesafter129.chr20.vcf.</li> </ul> </li> </ol>"},{"location":"tutorials/var_detect_advanced/var_detect_advanced/#section-1-quality-control","title":"Section 1: Quality Control","text":"<p>The aim here is to evaluate the quality of the short data. If the quality is poor, then adjustments can be made - eg trimming the short reads, or adjusting your expectations of the final outcome!</p> <ol> <li>Analyse the quality of the reads in the FASTQ file.<ul> <li>From the left hand tool panel in Galaxy, under NGS ANALYSIS, select NGS: QC and manipulation -&gt; FastQC</li> <li>Select one of the FASTQ files as input and Execute the tool.</li> <li>When the tool finishes running, you should have an HTML file in your History. Click on the eye icon to view the various quality metrics.</li> </ul> </li> </ol> <p>Look at the generated FastQC metrics. This data looks pretty good - high per-base quality scores (most above 30).</p>"},{"location":"tutorials/var_detect_advanced/var_detect_advanced/#section-2-alignment-and-depth-of-coverage","title":"Section 2: Alignment and depth of coverage","text":"<p>In this step we map each of the individual reads in the sample FASTQ readsets to a reference genome, so that we will be able to identify the sequence changes with respect to the reference genome.</p> <p>Some of the variant callers need extra information regarding the source of reads in order to identify the correct error profiles to use in their statistical variant detection model, so we add more information into the alignment step so that that generated BAM file contains the metadata the variant caller expects.</p> <p>We will also examine the depth of coverage of the aligned reads across the genome, as a quality check on both the sequencing experiment and the alignment.</p> <ol> <li> <p>Map/align the reads with Bowtie2 to the human reference genome. We will use Bowtie2, which is one of several good alignment tools for DNA-seq data. Under NGS ANALYSIS in the tools panel, select the tool NGS: Mapping -&gt; Bowtie2.</p> <ul> <li>We have paired-end reads in two FASTQ files, so select paired-end.</li> <li>Select the two FASTQ files as inputs.</li> <li>Under Select reference genome select the human genome hg19.</li> <li>Next we will add read group information. Read groups are usually used when we have reads from multiple experiments, libraries or samples, and want to put them into one aligned BAM file while remembering which read came from which group. In our case we only have one group, but the GATK tools need us to specify a read group in order to work correctly. Under Set read groups information? select Set read groups (SAM/BAM specification). (Picard-style should also work.)<ul> <li>Set the read group identifier to \u201cTutorial_readgroup\u201d. This identifier needs to be a unique identifier for this read group. Since we only have one read group, it doesn\u2019t matter much what it is, but a common practice is to construct it out of information guaranteed to be unique, such as the library identifier plus Platform Unit (e.g. flowcell) identifier.</li> <li>Set the sample name to \u201cNA12878\u201d</li> <li>Set the platform to ILLUMINA</li> <li>Set the library name to \u201cTutorial_library\u201d. Normally we would set this to identify the DNA library from our DNA extraction.</li> </ul> </li> <li>You can leave other read group information blank, and use default Bowtie2 settings. Execute the tool.</li> <li>When the alignment has finished, you should rename the BAM file to something more convenient, such as NA12878.chr20_2mb.30xPE.bam.</li> <li>Note: we assume that you have seen BAM and SAM files before. If you have not you may want to try out the Basic Variant Calling workshop, or take the time now to convert your BAM file to a SAM file and examine the contents.</li> </ul> </li> <li> <p>Visualise the aligned BAM file with IGV. The Integrated Genome Viewer, IGV, is a very popular tool for visualising aligned NGS data. It will run on your computer (not on the server).</p> <ul> <li>Note: if you are already familiar with IGV, you may want to go through this section quickly, but it\u2019s still a good idea to launch IGV for use in later steps.</li> <li>In the green dataset box for your BAM file in the history panel, you will see some display with IGV links. Launch IGV by clicking the web current link. If IGV is already running on your computer, instead click the local link. If you have problems you can instead launch IGV by visiting https://www.broadinstitute.org/software/igv/download.</li> <li>If your BAM file was not automatically loaded, download and open it:<ul> <li>Download the BAM file AND the BAM index (BAI file) by clicking the floppy-disk icon in the green dataset window and selecting each file in turn. Make sure these two files are in the same directory.</li> <li>In IGV, select the correct reference genome, hg19, in the top-left drop-down menu.</li> <li>In IGV, open the BAM file using File -&gt; Load from File.</li> </ul> </li> <li>Select chr20 in the IGV chromosomal region drop down box (top of IGV, on the left next to the organism drop down box).</li> <li>Zoom in to the left hand end of chromosome 20 to see the read alignments - remember our reads only cover the first 2mb of the chromosome.</li> <li>Scroll around and zoom in and out in the IGV genome viewer to get a feel for genomic data. Note that coverage is variable, with some regions getting almost no coverage (e.g. try chr20:1,870,686-1,880,895 - if you zoom right in to base resolution you\u2019ll see that this region is very GC rich, meaning it\u2019s hard to sequence. Unfortunately it also contains the first few exons of a gene\u2026)</li> </ul> </li> <li> <p>Restrict the genomic region considered. Later steps can be computationally intensive if performed on the entire genome. We will generate a genomic interval (BED) file that we will use to restrict further analyses to the first 2mb of chromosome 20, as we know our data comes from this region.</p> <ul> <li>Under BASIC TOOLS, select the tool Text manipulation -&gt; Create single interval. Enter these values:<ul> <li>Chromosome: chr20</li> <li>Start position: 0</li> <li>End position: 2000000</li> <li>Name: chr20_2mb</li> <li>Strand: plus</li> </ul> </li> <li>Execute this tool. This will create a small BED file specifying just one genomic region.</li> <li>When the file is created, rename it to chr20_2mb.bed. Have a look at the contents of this BED file.</li> </ul> </li> <li> <p>Evaluate the depth of coverage of the aligned region. Under NGS COMMON TOOLSETS, select the tool NGS: GATK Tools 2.8 -&gt; Depth of Coverage.</p> <ul> <li>Select the BAM file you just generated as the input BAM file.</li> <li>Make sure the reference genome we aligned to is selected under Using reference genome.</li> <li>Set Output format to table.</li> <li>Restrict the analysis to only the region of interest: Set Basic or Advanced GATK options to Advanced. Click Insert Operate on Genomic intervals to add a new region and select the chr20_2mb.bed file from your history.</li> <li>Execute.</li> <li>This tool will produce a lot of files. We are most interested in the summaries. Examine the contents of:<ul> <li>\u2018Depth of Coverage on data.... (output summary sample)\u2019: this file  will tell you the total depth of coverage for your sample across the genome (or in our case, across the first 2mb region we specified). It gives the total and mean coverage, plus some quantiles. This will give you an idea if there is something seriously wrong with your coverage distribution.</li> <li>Your mean depth here should be ~24x. Note that ~89% of reference bases are covered by at least 15x coverage, which is a sort of informal agreed minimum for reasonable variant calling.</li> <li>Also have a quick look at the (per locus coverage) file. It\u2019s not practical to go through this by hand, but you\u2019ll see that it gives coverage statistics for every site in the genome.</li> </ul> </li> <li>The other tables give you more detailed statistics on the level of coverage, broken down by regions etc. We don\u2019t really need them so to keep our Galaxy history clean you can delete all the outputs of this step except for the \u2018Depth of Coverage on data.... (output summary sample)\u2019 file. Use the \u2018X\u2019 next to a history file to delete it.</li> </ul> </li> </ol>"},{"location":"tutorials/var_detect_advanced/var_detect_advanced/#section-3-local-realignment","title":"Section 3. Local realignment","text":"<p>Alignment to large genomes is a compromise between speed and accuracy. Since we usually have (at least) millions of reads, it becomes computationally too expensive to compare reads to one another - instead, high-throughput aligners such as Bowtie align each read individually to the reference genome.</p> <p>This is often a problem where indels are present, as the aligner will be reluctant to align a read over an indel without sufficient evidence. This can lead to misalignment and to false positive SNVs. We can improve the performance of variant callers by carrying out a further step of \u2018realignment\u2019 after the initial alignment, considering all the reads in a particular genomic region collectively. In particular, this can provide enough collective evidence to realign reads correctly over suspected indels.</p> <p>Both GATK and FreeBayes will benefit from local realignment around indels. Some tools, such as SamTools Mpileup, have alternative methods to deal with possible misalignment around indels.</p> <p>If you skip this section, you can still carry out the variant calling steps in later sections by simply using the BAM file from Section 2. However performing local realignment will improve the accuracy of our variant calls.</p> <ol> <li> <p>Generate the list of indel regions to be realigned. Under NGS COMMON TOOLSETS, select NGS: GATK Tools 2.8 -&gt; Realigner Target Creator. This tool will look for regions containing potential indels.</p> <ul> <li>Select your BAM file as input.</li> <li>Select the correct reference genome (the genome used for alignment).</li> <li>Restrict the analysis to only the region of interest: Set Basic or Advanced GATK options to Advanced. Click Insert Operate on Genomic intervals to add a new region and select the chr20_2mb.bed file from your history.</li> <li>Execute.</li> <li>If you examine the contents of the resulting intervals file, you will see a list of genomic regions to be considered in the next step.</li> </ul> </li> <li> <p>Realign the subsets of reads around the target indel areas. Under NGS COMMON TOOLSETS, select NGS: GATK Tools 2.8 -&gt; Indel Realigner. This step will realign reads and generate a new BAM file.</p> <ul> <li>Select your BAM file as input.</li> <li>Select the correct reference genome.</li> <li>Under Restrict realignment to provided intervals, select the intervals file generated in the previous step.</li> <li>Execute.</li> <li>Rename the file to something easier to recognise, e.g. NA12878.chr20_2mb.30xPE.realigned.bam</li> <li>To keep your history clean, you may want to delete the log files generated by GATK in the last two steps.</li> </ul> </li> <li> <p>Compare the realigned BAM file to original BAM around an indel.</p> <ul> <li>Open the realigned BAM file in IGV. You can use the local link to open it in your already-running IGV session and compare it to the pre-realignment BAM file.</li> <li>Generally, the new BAM should appear identical to the old BAM except in the realigned regions.</li> <li>Find some regions with indels that have been realigned (use the \u2018Realigner Target Creator on data\u2026 (GATK intervals)\u2019 file from the first step of realignment, it has a list of the realigned regions).</li> <li>If you can\u2019t find anything obvious, check region chr20:1163914-1163954; you should see that realignment has resulted in reads originally providing evidence of a \u2018G/C\u2019 variant at chr20:1163937 to be realigned with a 10bp insertion at chr20:1163835 and no evidence of the variant.</li> </ul> </li> </ol>"},{"location":"tutorials/var_detect_advanced/var_detect_advanced/#section-4-calling-variants-with-freebayes","title":"Section 4. Calling variants with FreeBayes","text":"<p>FreeBayes is a Bayesian variant caller which assesses the likelihood of each possible genotype for each position in the reference genome, given the observed reads at that position, and reports back the list of variants (positions where a genotype different to homozygous reference was called). It  can be set to aggressively call all possible variants, leaving filtering to the user. FreeBayes generates a variant quality score (as do all variant callers) which can be used for filtering. FreeBayes will also give some phasing information, indicating when nearby variants appear to be on the same chromosome.</p> <p>You can read more about FreeBayes here.</p> <ol> <li> <p>Call variants with FreeBayes. Under NGS ANALYSIS, select the tool NGS: Variant Analysis -&gt; FreeBayes.</p> <ul> <li>Select your realigned BAM file as input, and select the correct reference genome.</li> <li>Under Choose parameter selection level, select \u201cSimple diploid calling with filtering and coverage\u201d. This will consider only aligned reads with sufficient mapping quality and base quality. You can see the exact parameters this sets by scrolling down in the main Galaxy window to the Galaxy FreeBayes documentation section on Galaxy-specific options.</li> <li>Execute FreeBayes.</li> <li>When it has run, rename the resulting VCF file to something shorter, such as NA12878.FreeBayes.chr20_2mb.vcf.</li> </ul> </li> <li> <p>Check the generated list of variants.</p> <ul> <li>Click the eye icon to examine the VCF file contents.</li> <li>How many variants exactly are in your list? (Hint: you can look at the number of lines in the dataset, listed in the green box in the History, but remember the top lines are header lines.)</li> <li>What sort of quality scores do your variants have?</li> <li>Open the VCF file in IGV using the dataset\u2019s display in IGV local link (using the web current link will open IGV again, and using local should use your already-running IGV). This will give an annotation track in IGV to visualise where variants have been called. Compare it to your BAM file.</li> </ul> </li> </ol>"},{"location":"tutorials/var_detect_advanced/var_detect_advanced/#section-5-calling-variants-with-gatk-unified-genotyper","title":"Section 5. Calling variants with GATK Unified Genotyper","text":"<p>For comparison, we will call variants with a second variant caller.</p> <p>The GATK (genome analysis toolkit) is a set of tools from the Broad Institute. It includes the tools for local realignment, used in the previous step.</p> <p>The GATK UnifiedGenotyper is a Bayesian variant caller and genotyper. You can also use the GATK HaplotypeCaller, which should be available on the GVL server you are using. It takes a little longer to run but is a more recent and sophisticated variant caller that takes into account human haplotype information. Both of these tools are intended primarily for calling diploid, germline variants.</p> <p>You can read more about the GATK here.</p> <ol> <li> <p>Call variants using Unified Genotyper. Under NGS COMMON TOOLSETS, select the tool NGS: GATK Tools 2.8 -&gt; Unified Genotyper.</p> <ul> <li>Select your realigned BAM file as input, and select the correct reference genome.</li> <li>UnifiedGenotyper can automatically label called variants that correspond to known human SNPs, if we provide it with a list of these. We have a VCF file of known SNPs which you imported as input data for this workshop. Under dbSNP ROD file, select the dataset dbsnp135_excludingsitesafter129_chr20.vcf.</li> <li>Set Genotype likelihoods calculation model to employ to SNP.</li> <li>Restrict the analysis to only the region of interest: Set Basic or Advanced GATK options to Advanced. Click Insert Operate on Genomic intervals to add a new region and select the chr20_2mb.bed file from your history.</li> <li>Execute.</li> <li>Rename the file to something useful eg NA12878.GATK.chr20_2mb.vcf.</li> <li>The output file of interest is the VCF file. If you like, clean up your History by deleting the (log) and (metrics) files.</li> </ul> </li> <li> <p>Check the generated list of variants.</p> <ul> <li>Roughly how many variants are there in your VCF file (how many lines in the dataset?)</li> <li>Click the eye icon to examine the contents of the VCF file. Notice that the ID column (the third column) is populated with known SNP IDs from the VCF file we provided.</li> <li>Notice that the VCF header rows, and the corresponding information in the INFO column, is NOT the same as for the VCF file generated by FreeBayes. In general each variant caller gets to decide what information to put in the INFO column, so long as it adds header rows to describe the fields it uses.</li> <li>Open the VCF file in IGV, using the link in the history panel.</li> <li>Find a region where GATK has called a variant but FreeBayes hasn\u2019t, and vice versa. Try chr20:1,123,714-1,128,378.</li> </ul> </li> </ol>"},{"location":"tutorials/var_detect_advanced/var_detect_advanced/#section-6-evaluate-variants","title":"Section 6. Evaluate variants","text":"<p>How can we evaluate our variants?</p> <p>We\u2019ve called variants on normal human DNA, so we expect to find variants with the typical characteristics of human germline variants. We know a lot about variation in humans from many empirical studies, including the 1000Genomes project, so we have some expectations on what we should see when we call variants in a new sample:</p> <ul> <li>We expect to see true variations at the rate of about 1 per 1000bp against the reference genome</li> <li>85% of variations \u2018rediscovered\u2019 - that is, 85% already known and recorded in dbSNP (% dependent on the version of dbSNP)</li> <li>A transition/transversion (Ti/Tv) rate of &gt;2 if the variants are high quality, even higher if the variants are in coding regions.</li> </ul> <p>You can read more about SNP call set properties here.</p> <p>You may find that each of the variant callers has more variants than we would have expected - we would have expected around 2000 in our 2 megabase region but we see between 3000 and 5000. This is normal for variant calling, where most callers err on the side of sensitivity to reduce false negatives (missed SNVs), expecting the user to do further filtering to remove false positives (false SNVs).</p> <p>We will also compare the output of our variant callers to one another - how many SNVs have they called in common? How many do they disagree on?</p> <ol> <li> <p>Evaluate dbSNP concordance and Ti/Tv ratio using the GATK VariantEval tool.</p> <ul> <li>Under NGS COMMON TOOLSETS, select NGS: GATK Tools 2.8 -&gt; Eval Variants.</li> <li>Under Input variant file, select the VCF file you generated with FreeBayes.</li> <li>Click Insert Variant to add a second input file, and under Input variant file, select the VCF file you generated with UnifiedGenotyper.</li> <li>Set the reference genome to hg19.</li> <li>Provide our list of known variants: make sure Provide a dbSNP Reference-Ordered Data (ROD) file is set to Set dbSNP and under dbSNP ROD file select the input reference variant file, dbSNP135_excludingsitesafter129.chr20.vcf.</li> <li>We will avoid carrying out the full suite of comparisons for this tutorial, and look at a couple of metrics. Set Basic or Advanced Analysis options to Advanced. Then set the following:<ul> <li>Eval modules to apply on the eval track(s):<ul> <li>CompOverlap</li> <li>TiTvVariantEvaluator</li> </ul> </li> <li>Do not use the standard eval modules by default: check this option</li> </ul> </li> <li>Execute.</li> </ul> </li> <li> <p>Interpret the dbSNP concordance section of the evaluation report.</p> <ul> <li>Examine the contents of the \u2018Eval Variants on data\u2026 (report)\u2019</li> <li>The first section of the report lists the overlap in variants between the generated VCF files and known human variation sites from dbSNP.<ul> <li>The EvalRod column specifies which of the input VCFs is analysed (input_0 = first VCF, input_1 = second etc). For us, these should be FreeBayes and GATK respectively.</li> <li>The CompRod column specifies the set of variants against which the input VCFs are being compared; we have used dbsnp.</li> <li>Novelty: whether the variants in this row have been found in the supplied dbSNP file or not (known = in dbSNP, novel = not in dbSNP). The rows containing all variants are the most informative summaries.</li> <li>nEvalVariants: number of variant sites in EvalRod (i.e. all called variants).</li> <li>novelSites: number of variant sites found in EvalRod but not CompRod (i.e. called variants not in dbSNP).</li> <li>CompOverlap: number of variant sites found in both EvalRod and CompRod (i.e. called variants that ARE in dbSNP).</li> <li>compRate: percentage of variant sites from EvalRod found in CompRod (=CompOverlap/nEvalVariants).<ul> <li>This metric is important, and it\u2019s what people generally refer to as dbSNP concordance.</li> </ul> </li> <li>nConcordant and concordantRate: number and percentage of overlapping variants that have the same genotype.</li> </ul> </li> </ul> </li> <li> <p>Interpret the TiTv section of the evaluation report.</p> <ul> <li>The second section of the report lists the transition/transversion ratio for different groups of variants from the callsets.</li> <li>It generally follows the table format above. The most interesting metric is in the column labelled tiTvRatio.</li> <li>The expectation is a Ti/Tv close to the TiTvRatioStandard of 2.38. Generally, the higher the better, as a high Ti/Tv ratio indicates that most variants are likely to reflect our expectations from what we know about human variation.</li> <li>In this table, it can be useful to compare not just the rows labelled all, but also those labelled known and novel. Is the Ti/Tv ratio different for known dbSNP variants, as compared to novel variants in this individual?</li> </ul> </li> <li> <p>How much overlap is there in the call sets?</p> <ul> <li>One way to work out how many of the variants are in common between the call sets is to produce a Venn diagram to visualise the overlap. Since all our variants are on chromosome 20, we will do this by simply comparing the positions of the SNVs. So, we will first remove the VCF headers, leaving us just the variant rows, and then we will compare the variant coordinates.</li> <li>Remove the header lines from a VCF file: select the tool BASIC TOOLS -&gt; Filter and Sort -&gt;Select.<ul> <li>As an input file, in Select lines from, select the VCF file you generated using FreeBayes.</li> <li>Select NOT Matching.</li> <li>As the pattern, enter \u201c^#\u201d. ^ in regular expressions indicates the start of the line, so this is a regular expression that says we are detecting lines where there is a \u201c#\u201d character at the start of the line.</li> <li>Execute. This should give you a new dataset, containing just the variant rows. Notice that the number of lines in this dataset now tells you how many variant calls you have!</li> </ul> </li> <li>Repeat the above steps to remove the header lines from VCF file that you generated using GATK UnifiedGenotyper.</li> <li>Create a Venn diagram: select the tool STATISTICS AND VISUALISATION -&gt; Graph/Display Data -&gt; proportional venn.<ul> <li>Enter any title you like, e.g. \u201cFreeBayes vs UnifiedGenotyper\u201d.</li> <li>As Input file 1, select the first of the filtered files you just generated.</li> <li>As Column index, enter 1. This is the second column, i.e. the column containing the position coordinate.</li> <li>Under as name, enter a name for this input file, e.g. just \u201cFreeBayes\u201d.</li> <li>As Input file 2, select the second of the filtered VCF files.</li> <li>Again as Column index, enter 1.</li> <li>Under as name, enter a name for this input file, e.g. just \u201cUnifiedGenotyper\u201d.</li> <li>Execute.</li> </ul> </li> <li>You should get an HTML file containing a Venn diagram, containing the overlap of the two sets of SNV calls. The counts below show how many variants are in each part of the diagram:<ul> <li>\u201cFreeBayes  UnifiedGenotyper\u201d indicates the difference, i.e. how many variants were called by FreeBayes and not UnifiedGenotyper.</li> <li>\u201cFreeBayes \u2229 UnifiedGenotyper\u201d indicates the intersection, i.e. how many variants were called by both variant callers.</li> </ul> </li> <li>You will probably find that FreeBayes calls variants more aggressively, and that there are more variants called by FreeBayes and not UnifiedGenotyper than vice versa. We could make FreeBayes calls more specific by filtering on e.g. variant quality score. We\u2019d expect this to  remove many false positives, but also a few true positives.</li> </ul> </li> </ol>"},{"location":"tutorials/var_detect_advanced/var_detect_advanced/#section-7-annotation","title":"Section 7. Annotation","text":"<p>The variants we have detected can be annotated with information from known reference data. This can include, for instance</p> <ul> <li>whether the variant corresponds to a previously-observed variant in other samples, or across the population</li> <li>whether the variant is inside or near a known gene</li> <li>whether the variant is in a particular kind of genomic region (exon of a gene, UTR, etc)</li> <li>whether a variant is at a site predicted to cause a pathogenic effect on the gene when mutated</li> </ul> <p>\u2026 and lots of other information!</p> <p>Most human genes have multiple isoforms, i.e. multiple alternative splicings leading to alternative transcripts. The annotation information we get for a variant in the gene can depend on which transcript is used. In some cases, unless you request only one, you may see multiple alternative annotations for one variant.</p> <p>For this workshop we will annotate our variants with the SnpEff tool, which has its own prebuilt annotation databases.</p> <ol> <li> <p>Annotate the detected variants. Select the tool NGS ANALYSIS -&gt; NGS: Annotation -&gt; SnpEff.</p> <ul> <li>Choose any of your generated lists of variants as the input VCF file in the first field.</li> <li>Select VCF as the output format as well. This will add the annotated information to the INFO column of the VCF file.</li> <li>As Genome source, select Named on demand. Then as the genome, enter \u201chg19\u201d. This should work on any server, even if the SnpEff annotation database for hg19 has not been previously installed.</li> <li>Make sure Produce Summary Stats is set to Yes.</li> <li>Execute SnpEff.</li> </ul> </li> <li> <p>Examine the annotated information. Click the eye icon on the resulting VCF file to view it.</p> <ul> <li>You should see more information in the INFO column for each variant.</li> <li>You should also see a few extra VCF header rows. In particular notice the new INFO=&lt;ID=EFF\u2026 header row, listing the information added on the predicted effects of each variant.</li> <li>Have a look through a few variants. Variants not inside or near known genes will not have much annotated information, and may simply have a short EFF field listing the variant as being in an \u201cintergenic region\u201d. Variants in known functional regions of the genome will be annotated with much more information.</li> <li>Try filtering to view only missense variants (i.e. substitutions which cause an amino acid change) by using the Galaxy tool BASIC TOOLS -&gt; Filter and Sort -&gt; Select on your annotated VCF file and filtering for lines matching the string \u201cmissense_variant\u201d.</li> </ul> </li> <li> <p>Examine the annotation summary stats. The other file SnpEff produces is an HTML document with a summary of the annotations applied to the observed variants. Examine the contents of this file.</p> <ul> <li>You will see summaries of types of variants, impact of variants, functional regions etc.  Go through these tables and graphs and see if you understand what they represent.</li> <li>Where are most of the variants found (in exons, introns etc)? Does this match what you\u2019d expect?</li> </ul> </li> </ol>"},{"location":"tutorials/var_detect_advanced/var_detect_advanced_background/","title":"Introduction to Variant detection","text":""},{"location":"tutorials/var_detect_advanced/var_detect_advanced_background/#background","title":"Background","text":"<p>A variant is something that is different from a standard or type.</p> <p>The aim of variation detection is to detect how many bases out of the total are different to a reference genome.</p> <p>In Craig Venter\u2019s genome 4.1 million DNA variants were reported.</p> <p>What sort of variation could we find in the DNA sequencing?</p> <ul> <li>Single nucleotide variations (SNVs)</li> <li>Single nucleotide polymorphisms (SNPs)</li> <li>Small insertions and deletions (INDELs)</li> <li>Large Chromosome rearrangements-Structural variations (SV)</li> <li>Copy number variations (CNV)</li> </ul>"},{"location":"tutorials/var_detect_advanced/var_detect_advanced_background/#variant-calling-vs-genotyping","title":"Variant Calling vs genotyping","text":"<p>Variant calling is concerned with whether there is evidence of variant in a particular locus whereas genotyping talks about what the sets of alleles in that locus are and their frequencies. In haploid organisms variant calling and genotyping are equivalent whereas the same rule does not apply to other organisms.</p> <p>Variant callers estimate the probability of a particular genotype given the observed data.</p> <p>The question one would be asking is what possible genotypes would be possible for a sample. The remaining question is, given that our variant calling process calls a variant, does that mean that there is truly a variant in this locus and also given that the variant caller doesn\u2019t detect a variant in a position does that mean there is no variant in that position.</p> <p>The result of variant calling is a list of probable variants.</p>"},{"location":"tutorials/var_detect_advanced/var_detect_advanced_background/#process-of-variant-calling","title":"Process of variant calling","text":"<p>Sample DNA -&gt; Sequencing -&gt; Read alignment -&gt; BAM file of aligned reads against reference genome -&gt; Genotyper -&gt; Variant list</p> <p>The number of reads that stack up on each other is called read coverage. The data is converted into positional information of the reference with the read counts that have piled up under each position. Variant calling will look at how many bases out of the total number of bases is different to the reference at any position.</p>"},{"location":"tutorials/var_detect_advanced/var_detect_advanced_background/#homozygous-or-heterozygous-mutations","title":"Homozygous or Heterozygous mutations:","text":"<p>What should be noted about variants is that they are rare events and homozygous variants are even rarer than heterozygous events.</p>"},{"location":"tutorials/var_detect_advanced/var_detect_advanced_background/#variant-calling-software","title":"Variant Calling Software:","text":"<p>There a number of software available for variant calling some of which are as follows:</p> <ol> <li>SAMtools (mpileup and bcftools): Li 2009 Bioinformatics</li> <li>GATK: McKenna et al. 2010 Genome Res</li> <li>FreeBayes: MIT</li> <li>DiBayes: SOLiD software http://www.lifetechnologies.com</li> <li>InGAP: Qi J, Zhao F, Buboltz A, Schuster SC.. 2009. Bioinformatics</li> <li>MAQGene: Bigelow H, Doitsidou M, Sarin S, Hobert O. 2009. Nature Methods</li> </ol>"},{"location":"tutorials/var_detect_advanced/var_detect_advanced_background/#variant-calling-using-samtools-mpileup-bcftools","title":"Variant Calling using Samtools (Mpileup + bcftools)","text":"<p>Samtools calculates the genotype likelihoods. We then pipe the output to bcftools, which does our SNP calling based on those likelihoods.</p> <p>Mpileup: Input: BAM file Output: Pileuped up reads under the reference</p> <p>bcftools: Input: Pileup output from Mpileup Output: VCF file with sites and genotypes</p> <p>Further information</p>"},{"location":"tutorials/var_detect_advanced/var_detect_advanced_background/#variant-calling-using-gatk-unified-genotyper","title":"Variant Calling using GATK-Unified Genotyper","text":"<p>GATK is a programming framework based on the philosophy of MapReduce for developing NGS tools in a distributed or shared memory parallelized form.</p> <p>GATK unified genotyper uses a Bayesian probabilistic model to calculate genotype likelihoods.</p> <p>Inputs: BAM file</p> <p>Output: VCF file with sites and genotypes.</p> <p>The probability of a variant genotype for a given sequence of data is calculated using the Bayes Theorem as follows:</p> <pre><code>P(Genotype | Data) =  (P(Data | Genotype) * P(Genotype)) / P(Data)\n</code></pre> <p>P(Genotype) is the overall probability of that genotype being present in a sequence. This is called the prior probability of a Genotype.</p> <p>P(Data | Genotype) is the probability of the data (the reads) given the genotype</p> <p>P(Data) is the probability of seeing the reads.</p> <p>GATK unified genotyper is not very good in dealing with INDELs and thus we would only calculate SNPs throughout this tutorial. GATK is setup to work with diploid genomes but can be used on haploids as well.</p> <p>Further information</p>"},{"location":"tutorials/var_detect_advanced/var_detect_advanced_background/#variant-calling-using-freebayes","title":"Variant Calling using FreeBayes","text":"<p>FreeBayes is a high performance, flexible variant caller which uses the open source Freebayes tool to detect genetic variations based high throughput sequencing data (BAM files).</p> <p>Further information</p>"},{"location":"tutorials/var_detect_advanced/var_detect_advanced_background/#evaluation-of-detected-variants-using-variant-eval","title":"Evaluation of detected variants using Variant Eval","text":"<p>The identified variation can further be evaluated against known variations such as common dbSNPs. The result can be checked for high concordance to the common SNPs or a known set of SNPs, the truth set.</p> <p>The results will have:</p> <ul> <li>True Positives (TP): The variants called by the software which are also a known variant in the known variants file.</li> <li>False Positives (FP): The Variants called by the software which are not known to be variants in the known variants file.</li> <li>True Negatives (TN): The variants not called by the software which are not known to be variants in the known variants file.</li> <li>False Negatives (FN): The variants not called by the software which are known as variants in the known variants file.</li> </ul>"},{"location":"tutorials/var_detect_advanced/var_detect_advanced_background/#quality-matrix","title":"Quality Matrix:","text":"<pre><code>TP | FP\n---|----\nTN | FN\n</code></pre> <p>Sensitivity: TP/(TP+FN)</p> <p>Specificity: TN/(TN+FP)</p> <p>Note:</p> <p>Although software methods available can find variants in unique regions reliably, the short NGS read length prevent them from detecting variations in repetitive regions with comparable sensitivity.</p> <p>DNA substitution mutations are of two types: Transitions and Transversions. The Ti/Tv ratio (Transitions/Transversions) is also an indicator of how well the model has performed for genotyping.</p> <ul> <li> <p>Transition: a point mutation in which a purine nucleotide is changed to another purine nucleotide. (A\\&lt;-&gt;G) or a pyrimidine nucleotide to another pyrimidine. Approximately 2 out of 3 SNPs are Transitions.</p> </li> <li> <p>Transversion: a substitute of a purine for a pyrimidine.</p> </li> </ul> <p>Although there are twice as many Transversions as there are Transitions because of the molecular mechanisms by which they are generated, Transition mutations occur at the higher rate than the Transversion mutations.</p> <p>For more details on variant eval visit: http://www.broadinstitute.org/gatk/gatkdocs/org_broadinstitute_sting_gatk_walkers_varianteval_VariantEval.html</p> <p>Notes:</p> <p>An important thing worth noting is the more data the better the variant calling. In addition multisampling improves performance.</p>"},{"location":"tutorials/var_detect_advanced/var_detect_advanced_background/#local-realignment","title":"Local realignment","text":"<p>In order to call SNPs close by INDELs correctly, local realignment is strongly recommended before variant calling when using both UnifiedGenotyper and FreeBayes. Samtools mpileup output would not however be affected since it works around this by introducing Base Alignment Quality (BAC). For more information on BAC refer to: http://samtools.sourceforge.net/mpileup.shtml</p>"},{"location":"tutorials/var_detect_advanced/var_detect_advanced_background/#the-galaxy-workflow-platform","title":"The Galaxy workflow platform","text":"<p>Galaxy is an online bioinformatics workflow management system. Essentially, you upload your files, create various analysis pipelines and run them, then visualise your results.</p> <p>Galaxy is really an interface to the various tools that do the data processing; each of these tools could be run from the command line, outside of Galaxy. Galaxy makes it easier to link up the tools together and visualise the entire analysis pipeline.</p> <p>Galaxy uses the concept of \u2018histories\u2019. Histories are sets of data and workflows that act on that data. The data for this workshop is available in a shared history, which you can import into your own Galaxy account</p> <p>Learn more about Galaxy here</p> <p>The Galaxy interface. Tools on the left, data in the middle, analysis workflow on the right.</p> <p></p>"},{"location":"tutorials/var_detect_advanced/var_detect_advanced_background/#data-format-used-in-the-tutorial","title":"Data Format used in the tutorial","text":""},{"location":"tutorials/var_detect_advanced/var_detect_advanced_background/#sequence-alignment-map-format","title":"Sequence Alignment Map format","text":"<p>SAM format</p> <p>Sequence Alignment/Map format records all information relevant to how a set of reads aligns to a reference genome. A SAM file has an optional set of header lines describing the context of the alignment, then one line per read, with the following format:</p> <ul> <li>11 mandatory fields (+ variable number of optional fields)</li> <li>1 QNAME: Query name of the read</li> <li>2 FLAG</li> <li>3 RNAME: Reference sequence name</li> <li>4 POS: Position of alignment in reference sequence</li> <li>5 MAPQ: Mapping quality (Phred-scaled)</li> <li>6 CIGAR: String that describes the specifics of the alignment against the reference</li> <li>7 MRNM</li> <li>8 MPOS</li> <li>9 ISIZE</li> <li>10 SEQQuery: Sequence on the same strand as the reference</li> <li>11 QUAL: Query quality (ASCII-33=Phred base quality)</li> </ul> <p>SAM example</p> <pre><code>    SRR017937.312 16 chr20 43108717 37 76M * 0 0\n    TGAGCCTCCGGGCTATGTGTGCTCACTGACAGAAGACCTGGTCACCAAAGCCCGGGAAGAGCTGCAGGAAAAGCCG\n    ?,@A=A\\&lt;5=,@==A:BB@=B9(.;A@B;\\&gt;@ABBB@@9BB@:@5\\&lt;BBBB9)\\&gt;BBB2\\&lt;BBB@BBB?;;BABBBBBBB@\n</code></pre> <p>For this example:</p> <ul> <li>QNAME = SRR017937.312 - this is the name of this read</li> <li>FLAG = 16 - see the format description below</li> <li>RNAME = chr20 - this read aligns to chromosome 20</li> <li>POS = 43108717 - this read aligns the sequence on chr20 at position 43108717</li> <li>MAPQ = 37 - this is quite a high quality score for the alignment (b/w 0 and 90)</li> <li>CIGAR = 76M - this read aligns to the reference segment across all bases (76 Matches means no deletions or insertions. Note that \u2018aligns\u2019 can mean \u2018aligns with mismatches\u2019 - mismatches that don\u2019t affect the alignment are not recorded in this field)</li> <li>MRNM = * - see the format description below</li> <li>MPOS = 0 as there is no mate for this read - the sequenced DNA library was single ended, not mate paired*.</li> <li>ISIZE = 0 as there is no mate for this read</li> <li>SEQQuery = the 76bp sequence of the reference segment</li> <li>QUAL = per-base quality scores for each position on the alignment. This is just a copy of what is in the FASTQ file</li> </ul> <p>SAM format is described more fully here</p> <p>NOTE: reads are shown mapped to the \u201csense\u201d strand of the reference, and bases are listed in 5\u2019 -&gt; 3\u2019 order. This is important because an actual read might be from the other strand of DNA. The alignment tool will try to map the read as it is, and also the reverse compliment. If it was on the other strand then the reverse compliment is shown in the SAM file, rather than the original read itself</p> <p>Seehttp://www.illumina.com/technology/paired_end_sequencing_assay.ilmn for an overview of paired-end sequencing.</p> <p>SAM file in Galaxy</p> <p></p>"},{"location":"tutorials/var_detect_advanced/var_detect_advanced_background/#binary-sequence-alignment-map-format","title":"Binary Sequence Alignment Map format","text":"<p>BAM format</p> <p>SAM is a text format which is not space efficient. Binary Sequence Alignment is a compressed version of SAM.</p> <p>Data in a BAM file is binary and therefore can\u2019t be visualised as text. If you try and visualise in Galaxy, it will default to downloading the file</p> <p>BAM file in IGV</p> <p></p>"},{"location":"tutorials/var_detect_advanced/var_detect_advanced_background/#vcf-file-format","title":"VCF file format","text":"<p>What is VCF file:</p> <p>The Variant Call Format (VCF) is the emerging standard for storing variant data. Originally designed for SNPs and short INDELs, it also works for structural variations.</p> <p>VCF consists of a header section and a data section. The header must contain a line starting with one \u2018#\u2018, showing the name of each field, and then the sample names starting at the 10<sup>th</sup> column. The data section is TAB delimited with each line consisting of at least 8 mandatory fields (the first 8 fields in the table below). The FORMAT field and sample information are allowed to be absent. We refer to the official VCF spec for a more rigorous description of the format.</p> Col Field Description 1 CHROM Chromosome name 2 POS 1-based position. For an indel, this is the position preceding the indel. 3 ID Variant identifier. Usually the dbSNP rsID. 4 REF Reference sequence at POS involved in the variant. For a SNP, it is a single base. 5 ALT Comma delimited list of alternative sequence(s). 6 QUAL Phred-scaled probability of all samples being homozygous reference. 7 FILTER Semicolon delimited list of filters that the variant fails to pass. 8 INFO Semicolon delimited list of variant information. 9 FORMAT Colon delimited list of the format of individual genotypes in the following fields. 10+ Sample(s) Individual genotype information defined by FORMAT."},{"location":"tutorials/var_detect_advanced/var_detect_advanced_background/#vcf-format-in-galaxy","title":"VCF format in Galaxy:","text":""},{"location":"tutorials/var_detect_advanced/var_detect_advanced_background/#bcf-file-format","title":"Bcf file format:","text":""},{"location":"tutorials/var_detect_advanced/var_detect_advanced_background/#_1","title":"Introduction to Variant detection","text":"<p>BCF format:</p> <p>BCF, or the binary variant call format, is the binary version of VCF. It keeps the same information in VCF, while much more efficient to process especially for many samples. The relationship between BCF and VCF is similar to that between BAM and SAM.</p>"},{"location":"tutorials/variant_calling_galaxy_1/","title":"Index","text":"<p>PR reviewers and advice: Clare Sloggett, Khalid Mahmood, Jessica Chung, Simon Gladman</p> <p>Current slides: https://docs.google.com/presentation/d/18rjOlb3Q_i_IY65_4cA2UWp76uzAyrrcS6YJS2AzquE (these are Clare\u2019s from May 2017 workshop round - fairly cut-down)</p> <p>Other slides:</p> <ul> <li>Original main folder: https://drive.google.com/drive/u/0/folders/0B-gCKa6V4E0lelJGVDFGaHBLSlk</li> </ul>"},{"location":"tutorials/variant_calling_galaxy_1/variant_calling_galaxy_1/","title":"Variant Calling part 1 (Galaxy)","text":""},{"location":"tutorials/variant_calling_galaxy_1/variant_calling_galaxy_1/#introduction-to-variant-calling-using-galaxy","title":"Introduction to Variant Calling using Galaxy","text":""},{"location":"tutorials/variant_calling_galaxy_1/variant_calling_galaxy_1/#overview","title":"Overview","text":"<p>This tutorial is designed to introduce the tools, data types and workflow of variant detection. We will align reads to the genome, look for differences between reads and reference genome sequence, and filter the detected genomic variation manually to understand the computational basis of variant calling.</p> <p>We cover the concepts of detecting small variants (SNVs and indels) in human genomic DNA using a small set of reads from chromosome 22.</p>"},{"location":"tutorials/variant_calling_galaxy_1/variant_calling_galaxy_1/#learning-objectives","title":"Learning Objectives","text":"<p>At the end of the course, you will be able to:</p> <ul> <li>Work with the FASTQ format and base quality scores</li> <li>Align reads to generate a BAM file and subsequently generate a pileup file</li> <li>Run the FreeBayes variant caller to find SNVs and indels</li> <li>Visualise BAM files using the Integrative Genomics Viewer (IGV) and identify likely SNVs and indels by eye</li> </ul>"},{"location":"tutorials/variant_calling_galaxy_1/variant_calling_galaxy_1/#requirements","title":"Requirements","text":"<p>This workshop uses Galaxy as a platform. It is recommended that participants who have not used Galaxy before either sign up for our Intro to GVL workshop, or work through this tutorial themselves beforehand.</p> <p>This is a hands-on workshop and attendees are required to bring their own laptops.</p>"},{"location":"tutorials/variant_calling_galaxy_1/variant_calling_galaxy_1/#background","title":"Background","text":"<p>Some background reading material - background</p> <p>Where is the data in this tutorial from?</p> <p>The workshop is based on analysis of short read data from the exome of chromosome 22 of a single human individual. There are one million 76bp reads in the dataset, produced on an Illumina GAIIx from exome-enriched DNA. This data was generated as part of the 1000 genomes Genomes project.</p>"},{"location":"tutorials/variant_calling_galaxy_1/variant_calling_galaxy_1/#1-preparation","title":"1. Preparation","text":"<ol> <li>Make sure you have an instance of Galaxy ready to go.<ul> <li>For example, you can use the Galaxy Australia server.</li> </ul> </li> <li>Create a new history for this tutorial.<ul> <li>In the history pane, click on the cog icon at the top right.</li> <li>Click Create New.</li> <li>Click on Unnamed history and re-name it.</li> </ul> </li> <li>Import data for the tutorial.<ul> <li>In this case, we are uploading a FASTQ file.</li> <li>Method 1 Paste/Fetch data from a URL to Galaxy.<ol> <li>In the Galaxy tools panel (left), click on <code>Get Data</code> and choose <code>Upload File</code>.</li> <li>Click Paste/Fetch data and paste the following URL into the box</li> </ol> </li> </ul> </li> </ol>  https://swift.rc.nectar.org.au:8888/v1/AUTH_a3929895f9e94089ad042c9900e1ee82/VariantDet_BASIC/NA12878.GAIIx.exome_chr22.1E6reads.76bp.fastq  <pre><code>    3. Select *Type* as **fastqsanger** and click *Start*.\n    4. Once the upload status turns *green*, it means the upload is complete. You should now be able to see the file in the Galaxy history panel (right).\n    5. The dataset will have a very long name, as it's named after the full URL we got it from. Optionally, once the file is in your History, click the pencil icon in the upper-right corner of the green dataset box, then select the *Name* box and give the file a shorter name by removing the URL. Then click *Save*.\n\nAlternatively, if you have a local file to upload (*For the purpose of this tutorial we can stick with the option above*):\n\n* **Method 2**  \n    *Upload data to Galaxy.*\n    1. In the Galaxy tools panel (left), click on `Get Data` and choose `Upload File`.\n    2. From *Choose local file* select the downloaded FASTQ file. Select *Type* as **fastqsanger** and click *Start*.\n    3. Once the upload status turns *green*, it means the upload is complete. You should now be able to see the file in the Galaxy history panel (right).\n</code></pre> <p>Summary: So far, we have started a Galaxy instance, got hold of our data and uploaded it to the Galaxy instance. Now we are ready to perform our analysis.</p>"},{"location":"tutorials/variant_calling_galaxy_1/variant_calling_galaxy_1/#2-quality-control","title":"2. Quality Control","text":"<p>The first step is to evaluate the quality of the raw sequence data. If the quality is poor, then adjustments can be made - e.g. trimming the short reads, or adjusting your expectations of the final outcome!</p>"},{"location":"tutorials/variant_calling_galaxy_1/variant_calling_galaxy_1/#1-take-a-look-at-the-fastq-file","title":"1. Take a look at the FASTQ file","text":"<p>Click on the eye icon to the top right of the FASTQ file to view the a snippet of the file.</p> <p>Note that each read is represented by 4 lines:     * read identifier     * short read sequence     * separator     * short read sequence quality scores</p> <pre><code>e.g.\nidentifier:    @61CC3AAXX100125:7:72:14903:20386/1\nread sequence: TTCCTCCTGAGGCCCCACCCACTATACATCATCCCTTCATGGTGAGGGAGACTTCAGCCCTCAATGCCACCTTCAT\nseparator:     +\nquality score: ?ACDDEFFHBCHHHHHFHGGCHHDFDIFFIFFIIIIHIGFIIFIEEIIEFEIIHIGFIIIIIGHCIIIFIID?@&lt;6\n</code></pre> <p>For more details see FASTQ.</p>"},{"location":"tutorials/variant_calling_galaxy_1/variant_calling_galaxy_1/#2-assessing-read-quality-from-the-fastq-files","title":"2. Assessing read quality from the FASTQ files","text":"<ol> <li>From the Galaxy tools panel, in the search box at the top, type in \u201cFastQC\u201d.</li> <li>Click on FastQC</li> </ol> <p>The input FASTQ file will be selected by default. Keep the other defaults and click execute.</p> <p>    Tip:    Note the batch processing interface of Galaxy: <ul> <li> grey = waiting in queue      <li> yellow = running      <li> green = finished      <li> red = tried to run and failed     <p>When the job has finished, click on the eye icon to view the newly generated data (in this case a set of quality metrics for the FASTQ data). This will be a file called FastQC on data 1: Web page. Look at the various quality scores. The data looks pretty good - high Per base sequence quality (avg. above 30).</p>"},{"location":"tutorials/variant_calling_galaxy_1/variant_calling_galaxy_1/#3-alignment-to-the-reference-fastq-to-bam","title":"3. Alignment to the reference - (FASTQ to BAM)","text":"<p>The basic process here to map individual reads - from the input sample FASTQ file - to a matching region on the reference genome.</p>"},{"location":"tutorials/variant_calling_galaxy_1/variant_calling_galaxy_1/#1-align-the-reads-with-bwa","title":"1. Align the reads with BWA","text":"<p>We will map (align) the reads with the BWA tool to the human reference genome. For this tutorial, use Human reference genome 19 (hg19) - this is hg19 from UCSC.</p> <ol> <li> <p>Align the reads [3-5mins]: from the Galaxy tools panel, search for Map with BWA-MEM    From the options:</p> <ul> <li>Will you selection a reference genome\u2026: Use a built-in genome index</li> <li>Using reference genome: set to hg19</li> <li>Single or Paired-end reads: set to Single</li> <li>Make sure your fastq file is the input file.</li> <li>Keep other options as default and click execute.</li> </ul> <p>Note: This is the longest step in the workshop and will take a few minutes, possibly more depending on how many people are also scheduling mappings</p> </li> <li> <p>Sort the BAM file: from the Galaxy tools panel, search for SortSam From the options:</p> <ul> <li>Set the input file to be the output BAM file from the previous step.</li> <li>Sort by: set to Coordinate</li> <li>Keep other options as default and click execute</li> </ul> </li> </ol>"},{"location":"tutorials/variant_calling_galaxy_1/variant_calling_galaxy_1/#2-examine-the-alignment","title":"2. Examine the alignment","text":"<ol> <li> <p>To examine the output sorted BAM file, we need to first convert it into readable SAM format.    From the Galaxy tools panel, search for BAM-to-SAM From the options:</p> <ul> <li>BAM File to Convert: select your sorted BAM file</li> <li>Keep all options as default and click execute</li> </ul> </li> <li> <p>Examine the generated Sequence Alignment Map (SAM) file.</p> <ul> <li>Click the eye icon in the History pane next to the newly generated file</li> <li>Familiarise yourself with the SAM format</li> <li>Note that some reads have mapped to non-chr22 chromosomes (see column 3).</li> </ul> </li> </ol> <p>This is the essence of alignment algorithms - the aligner does the best it can, but because of compromises in accuracy vs performance and repetitive sequences in the genome, not all the reads will necessarily align to the \u2018correct\u2019 sequence or could this be suggesting the presence of a structural variant?</p> <p> Tip: Galaxy auto-generates a name for all outputs. Therefore, it is advisable to choose a more meaningful name to these outputs.</p> <p>This can be done as follows:</p> <p>Click on the pencil icon (edit attributes) and change Name e.g. Sample.bam or Sample.sam or Sample.sorted.bam etc.</p>"},{"location":"tutorials/variant_calling_galaxy_1/variant_calling_galaxy_1/#3-assess-the-alignment-data","title":"3. Assess the alignment data","text":"<p>We can generate some mapping statistics from the BAM file to assess the quality of our alignment.</p> <ol> <li> <p>Run IdxStats. From the Galaxy tools panel, search for the tool IdxStats</p> <ul> <li>Select the sorted BAM file as input.</li> <li>Keep other options as default and click execute.</li> </ul> <p>IdxStats generates a tab-delimited output with four columns. Each line consists of a reference sequence name (e.g. a chromosome), reference sequence length, number of mapped reads and number of placed but unmapped reads.</p> <p>We can see that most of the reads are aligning to chromosome 22 as expected.</p> </li> <li> <p>Run Flagstat. From the Galaxy tools panel, search for Flagstat</p> <ul> <li>Select the sorted BAM file as input.</li> <li>Keep other options as default and click execute.</li> </ul> <p>Note that in this case the statistics are not very informative. This is because the dataset has been generated for this workshop and much of the noise has been removed (and in fact we just removed a lot more noise in the previous step); also we are using single ended read data rather than paired-end so some of the metrics are not relevant.</p> </li> </ol>"},{"location":"tutorials/variant_calling_galaxy_1/variant_calling_galaxy_1/#4-visualise-the-bam-file-with-igv","title":"4. Visualise the BAM file with IGV","text":"<p>To visualise the alignment data:</p> <ol> <li>Click on the sorted BAM file dataset in the History panel.</li> <li>Click on \u201cDisplay with IGV web current\u201d. This should download a .jnlp     Java Web Start file to your computer. Open this file to run IGV.     (You will need Java installed on your computer to run IGV). NOTE: If IGV is already open on your computer, you can click \u201clocal\u201d instead of \u201cweb current\u201d, and this will open the BAM file in your current IGV session.</li> <li>Once IGV opens, it will show you the BAM file. This may take a bit of time as the data is downloaded.</li> <li>Our reads for this tutorial are from chromosome 22, so select chr22 from the second     drop box under the toolbar. Zoom in to view alignments of reads to the reference genome.</li> </ol> <p></p> <p>Try looking at region <code>chr22:36,006,744-36,007,406</code></p> <p>Can you see a few variants?  </p> <p></p> <p>Don\u2019t close IGV yet as we\u2019ll be using it later.</p>"},{"location":"tutorials/variant_calling_galaxy_1/variant_calling_galaxy_1/#5-generate-a-pileup-file","title":"5. Generate a pileup file","text":"<p>A pileup is essentially a column-wise representation of the aligned reads - at the base level - to the reference. The pileup file summarises all data from the reads at each genomic region that is covered by at least one read. Each row of the pileup file gives similar information to a single vertical column of reads in the IGV view.</p> <p>The current generation of variant calling tools do not output pileup files, and you don\u2019t need to do this section in order to use FreeBayes in the next section. However, a pileup file is a good illustration of the evidence the variant caller is looking at internally, and we will produce one to see this evidence.</p>"},{"location":"tutorials/variant_calling_galaxy_1/variant_calling_galaxy_1/#1-generate-a-pileup-file","title":"1. Generate a pileup file","text":"<p>From the Galaxy tools panel, search for Generate pileup From the options:</p> <ul> <li>Call consensus according to MAQ model: set to Yes   This generates a called \u2018consensus base\u2019 for each chromosomal position.   This would allow us to use this pileup directly for variant detection, if we wanted.</li> <li>Keep other options as default and click execute</li> </ul> <p>Galaxy tries to assign a datatype attribute to every output file. In this case, you\u2019ll need to manually set the datatype to pileup.</p> <ol> <li>First, rename the output to something more meaningful by clicking on the pencil icon</li> <li>To change the datatype, click on the Datatype link from the top tab while you\u2019re editing attributes.</li> <li>For downstream processing we want to tell Galaxy that this is a pileup file. From the drop-down, select Pileup and click save.</li> </ol> <p>  Tip: The pileup file we generated has 10 columns: * 1. chromosome * 2. position * 3. current reference base * 4. consensus base from the mapped reads * 5. consensus quality * 6. SNV quality * 7. maximum mapping quality * 8. coverage * 9. bases within reads * 10. quality values</p> <p>Further information on (9): Each character represents one of the following (the longer this string, higher the coverage):   <ul> <li> . = match on forward strand for that base   <li> , = match on reverse strand   <li> ACGTN = mismatch on forward   <li> acgtn = mismatch on reverse   <li> +[0-9]+[ACGTNacgtn]+\u2019 = insertion between this reference position and the next   <li> -[0-9]+[ACGTNacgtn]+\u2019 = deletion between this reference position and the next   <li> ^ = start of read   <li> $ = end of read   <li> BaseQualities = one character per base in ReadBases, ASCII encoded Phred scores"},{"location":"tutorials/variant_calling_galaxy_1/variant_calling_galaxy_1/#2-filter-the-pileup-file","title":"2. Filter the pileup file","text":"<p>If you click the eye icon to view the contents of your pileup file, you\u2019ll see that the visible rows of the file aren\u2019t very interesting as they are outside chromosome 22 and have very low coverage. Let\u2019s filter to regions with coverage of at least 10 reads.</p> <p>From the Galaxy tools panel, search for Filter Pileup From the options:</p> <ul> <li>which contains: set to Pileup with ten columns (with consensus).   This is to match the Call consensus according to MAQ model option we selected earlier -   the filter tool needs to know to expect the 10-column rather than 6-column format.</li> <li>Do not report positions with coverage lower than: set to 10</li> </ul> <p>Try this filtering step two ways:</p> <ul> <li>First, set the parameter Only report variants? to No. This will give you all locations with a coverage of at least 10 and sufficient read quality. This is similar to the information you see when you look at IVG: each pilup row corresponds to a column of aligned bases at one genomic location.</li> <li>Then, repeat the step but set Only report variants? to Yes. This will effectively do variant calling: it will give you only locations that have some evidence that there might be a variant present. This variant calling is not very stringent, so you will still get lots of rows. We could filter further to, for instance, variants with high quality scores.</li> </ul> <p>Examine your two pileup files and understand the difference between them. Which coordinates are present in each? What do the bases look like in one compared to the other? Compare the variant quality score (in column 6) to the bases listed on each row.</p>"},{"location":"tutorials/variant_calling_galaxy_1/variant_calling_galaxy_1/#6-call-variants-with-freebayes","title":"6. Call variants with FreeBayes","text":"<p>FreeBayes is a Bayesian variant caller which assesses the likelihood of each possible genotype for each position in the reference genome, given the observed reads at that position, and reports back the list of possible variants. We look at it in more detail in the Advanced Variant Calling tutorial.</p>"},{"location":"tutorials/variant_calling_galaxy_1/variant_calling_galaxy_1/#1-call-variants-with-freebayes","title":"1. Call variants with FreeBayes.","text":"<p>In the tool panel search for FreeBayes.</p> <ul> <li>Select your sorted BAM file as input, and select the correct reference genome.</li> <li>Under Choose parameter selection level, select \u201cSimple diploid calling with filtering and coverage\u201d. This will consider only aligned reads with sufficient mapping quality and base quality. You can see the exact parameters this sets by scrolling down in the main Galaxy window to the Galaxy FreeBayes documentation section on Galaxy-specific options.</li> <li>Execute FreeBayes. (This may take a while.)</li> </ul>"},{"location":"tutorials/variant_calling_galaxy_1/variant_calling_galaxy_1/#2-check-the-generated-list-of-variants","title":"2. Check the generated list of variants","text":"<ul> <li>Click the eye icon to examine the VCF file contents. The VCF format is described below - make sure you can identify the header rows and the data, and understand the important columns.</li> <li>How many variants exactly are in your list? (Hint: you can look at the number of lines in the dataset, listed in the green box in the History, but remember the top lines are header lines.)</li> <li>What sort of quality scores do your variants have?</li> </ul> <p> FreeBayes, like most variant callers, produces a Variant Call Format (VCF) file.</p> <p>VCF consists of a header section and a data section. The header section has some information about the file and the parameters used to produce it. The header also specifies what information is stored in the INFO, FILTER and FORMAT columns, as this is different for different variant callers.</p> <p>The data section has several columns. For this tutorial, you should concentrate on CHROM, POS, REF, ALT and QUAL. CHROM and POS describe the variant\u2019s genomic location, REF and ALT describe the variant\u2019s nucleotides relative to the reference, and QUAL is a quality score giving FreeBayes\u2019 confidence in the correctness of this variant call.</p> <p>The columns in more detail are:</p> Col Field Description 1 CHROM Chromosome name 2 POS 1-based position. For an indel, this is the position preceding the indel. 3 ID Variant identifier (optional). Usually the dbSNP rsID. 4 REF Reference sequence at POS involved in the variant. For a SNP, it is a single base. 5 ALT Comma delimited list of alternative sequence(s) seen in our reads. 6 QUAL Phred-scaled probability of all samples being homozygous reference. 7 FILTER Semicolon delimited list of filters that the variant fails to pass. 8 INFO Semicolon delimited list of variant information. 9 FORMAT Colon delimited list of the format of individual genotypes in the following fields. 10+ Sample(s) Individual genotype information defined by FORMAT. <p>For even more detail on VCF files, you can look at the VCF format specification.</p>"},{"location":"tutorials/variant_calling_galaxy_1/variant_calling_galaxy_1/#3-visualise-the-variants-and-compare-files","title":"3. Visualise the variants and compare files","text":"<ul> <li>Open the VCF file in IGV using the dataset\u2019s display in IGV local link (using the web current link will open IGV again, and using local should use your already-running IGV). This will give an annotation track in IGV to visualise where variants have been called. Compare it to your BAM file.</li> <li>Take a look again at the same region as earlier: <code>chr22:36,006,744-36,007,406</code></li> <li>Try comparing to the corresponding location in the pileup file. You can filter to the same window as we just opened in IGV with the tool <code>Filter and Sort &gt; Filter</code>. Choose your previously-filtered pileup file as input, and set the filter condition to <code>c1==\"chr22\" and c2 &gt; 36006744 and c2 &lt; 36007406</code>.</li> </ul>"},{"location":"tutorials/variant_calling_galaxy_1/variant_calling_galaxy_1/#4-optional-filter-variants","title":"4. Optional: filter variants","text":"<p>See if you can work out how to filter your VCF file to variants with quality scores greater than 50. You can use the <code>Filter and Sort: Filter</code> tool we used above.</p>"},{"location":"tutorials/variant_calling_galaxy_1/variant_calling_galaxy_1/#7-further-steps","title":"7. Further steps","text":"<p>We\u2019ve seen how to:</p> <ul> <li>Align the raw data (sequence reads) to a reference genome</li> <li>Generate variant calls from aligned reads</li> <li>Interpret the various file formats used in storing reads, alignments and variant calls</li> <li>Visualise the data using IGV</li> </ul> <p>For real variant calling, you will probably want to carry out clean-up steps on your BAM file to improve the quality of the calls, and do further filtering and selection on the resulting variants.</p> <p>We look at some further steps in the Advanced Variant Calling tutorial.</p>"},{"location":"tutorials/variant_calling_gatk1/","title":"Index","text":"<p>[Under development] This is an introductory GATK4 based variant calling tutorial on the command-line.</p> <p>PR reviewers and advice: Khalid Mahmood</p> <p>Current slides: TBD</p> <p>Print friendly version of the tutorial in pdf.</p> <p>Note: the pdf is created as below</p> <pre><code>pandoc --from markdown -o files/variant_calling_gatk1.pdf variant_calling_gatk1_print.md\n</code></pre>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1/","title":"Variant calling using command-line tools","text":""},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1/#variant-calling-using-gatk4","title":"Variant calling using GATK4","text":"<p>Anticipated workshop duration when delivered to a group of participants is 4 hours.</p> <p>For queries relating to this workshop, contact Melbourne Bioinformatics (bioinformatics-training@unimelb.edu.au).</p>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1/#author-information","title":"Author Information","text":"<p>Khalid Mahmood Melbourne Bioinformatics, University of Melbourne Developed: July 2021 Reviewed: August 2024</p>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1/#overview","title":"Overview","text":"<p>Topic</p> <ul> <li> Genomics</li> <li> Transcriptomics</li> <li> Proteomics</li> <li> Metabolomics</li> <li> Statistics and visualisation</li> <li> Structural Modelling</li> <li> Basic skills</li> </ul> <p>Skill level</p> <ul> <li> Beginner  </li> <li> Intermediate  </li> <li> Advanced  </li> </ul> <p> This workshop is designed for participants with some command-line knowledge. You will need to be able to <code>ssh</code> into a remote machine, navigate the directory structure and <code>scp</code> files from a remote computer to your local computer.</p>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1/#learning-objectives","title":"Learning Objectives","text":"<p>At the end of this workshop, you will be able to:</p> <ul> <li>Take raw DNA sequencing reads and perform variant calling to produce a variant list using GATK4.</li> <li>Perform basic exploration of variants.</li> </ul>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1/#description","title":"Description","text":"<p>This tutorial runs through the GATK4 best practices workflow for variant calling. The workflow starts with pairs of sequencing reads and performs a series of steps to determine a set of genetic variants.</p> <p>Data: Illumina HiSeq paired-end (2\u00d7100 bp) reads in FASTQ format. Tools: GATK4, Picard, Bcftools and jigv Reference data: GATK4 hg38 reference bundle and hg38 refGene annotation (hg38.refGene.gtf.gz)</p> <p>Slides and workshop instructions Click here for the slides. Click here for a printer friendly PDF version of this workshop.</p>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1/#requirements-and-preparation","title":"Requirements and preparation","text":"<p>Important</p> <p>Attendees are required to use their own laptop computers. </p> <p>At least one week before the workshop, if required, participants should install the software below.  This should provide sufficient time for participants to liaise with their own IT support should they encounter any IT problems.  </p> <p>Software </p> <p>Mac Users: No additional software needs to be installed for this workshop.</p> <p>Windows Users: 1. A terminal emulator such as PuTTY(free and open-source) will need to be downloaded. 2. Software for file transfers between a local computer and remote server such as WinSCP or FileZilla.</p> <p>Data</p> <ul> <li>All required data will be made available on the workshop virtual machines (hosted at the Melbourne Research Cloud). Login details will be provided closer to the tutorial data.</li> </ul>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1/#mode-of-delivery","title":"Mode of Delivery","text":"<p>This workshop will be run on a Nectar Instance. An \u201cInstance\u201d is Nectar terminology for a virtual machine running on the Nectar Cloud OpenStack infrastructure. An \u201cInstance\u201d runs on a \u201ccompute node\u201d; i.e. a physical computer populated with processor chips, memory chips and so on.</p> <p>You will be given an individual username, IP address and password to log on to using the SSH client tool on your computer (Terminal on Mac or PuTTY on Windows).</p> <pre><code>ssh username@ip-address\n</code></pre>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1/#byobu-screen","title":"Byobu-screen","text":"<p>Some of the commands in this tutorial take a while to run. Should your ssh connection drop and the SSH session on Nectar terminates, any commands that are running will terminate too. To mitigate this, once logged on to the Nectar Instance, we\u2019ll run <code>byobu-screen</code> (an enhancement for the <code>screen</code> terminal multiplexer) which allows us to resume a session. In other words, processes running in <code>byobu-screen</code> will continue to run when their window is not visible, even if you get disconnected.</p> <p>On Nectar, to start a <code>byobu-screen</code> session called <code>workshop</code>, type  </p> <pre><code>byobu-screen -S workshop\n</code></pre> <p>You can then proceed to run the commands in the workshop as normal.</p> Help: Byobu basics <p>The screen should look like   Should your SSH session on Nectar terminate, once you log back in to your Nectar instance, list running sessions/screens:</p> <pre><code>byobu-screen -ls\n</code></pre> <p>If it says (Detached) next to the <code>workshop</code> session in the list, reattach to <code>workshop</code> by:</p> <pre><code>byobu-screen -r workshop\n</code></pre> <p>If it says (Attached) next to the <code>workshop</code> session in the list, you can access the <code>workshop</code> session which is already attached by:</p> <pre><code>byobu-screen -r -d workshop\n</code></pre> <p> Some other useful <code>byobu-screen</code> commands:</p> <ul> <li> <p>To detach from <code>workshop</code>, type <code>ctrl-a ctrl-d</code> while inside the <code>workshop</code> session. (You will need to configure Byobu\u2019s ctrl-a behaviour if it hasn\u2019t already been configured (text will appear on the screen telling you this). Follow the information on the screen and select <code>1</code> for Screen mode).</p> </li> <li> <p>To terminate <code>workshop</code>, type <code>ctrl-d</code> while inside the <code>workshop</code> session.</p> </li> </ul>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1/#tutorial-setting","title":"Tutorial setting","text":"<p>The setting for this tutorial is as follows: you receive some germline sequencing data from an individual NA12878 (chr20 from sample NA12878 is sourced from the International Genome Sample Resource). Your aim is to identify small genetic variants from this data.</p>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1/#the-genome-analysis-toolkit-gatk","title":"The Genome Analysis Toolkit (GATK)","text":"<p>GATK is the industry standard toolkit for analysis of germline DNA to identify SNVs and indels. The GATK tool is mainly designed fo the human whole genome and exome analysis. The current version (GATK4) has expanded scope now and includes more complex analysis such copy number (CNV), structural variant (SV) and somatic variants. The current version of GATK also includes several utility functions for processing alignment files, VCF files and other complex processing workflows. The Picard toolkit is also now incorporated with GATK4. Van der Auwera GA &amp; O\u2019Connor BD. (2020). Genomics in the Cloud: Using Docker, GATK, and WDL in Terra (1<sup>st</sup> Edition). O\u2019Reilly Media.</p>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1/#how-this-tutorial-works","title":"How this tutorial works","text":"<pre><code>These grey coloured boxes are code blocks. The rectangular boxes in the top\nright hand corner of this code block/grey box can be used to copy the code to\nthe clipboard.\n</code></pre> Click here <p>REVEALED! Coloured boxes like these when clicked will reveal their content.</p> <p>To copy data from the remote workshop computer to your local computer.</p> <p>Command line/Mac Users</p> <p>The syntax to do this depends on whether you are running the copying command on your local computer, or on the remote computer (Nectar cloud).</p> <ol> <li> <p>When running the command from your local computer, the syntax for copying a file from Nectar is:</p> <pre><code>scp username@nectar_IP_address:FILENAME /PATH/TO/TARGET/FOLDER/\n</code></pre> </li> <li> <p>Running the command on the remote computer, the syntax for copying a file to your local computer is:     <pre><code>scp FILENAME username@your_IP_address:/PATH/TO/TARGET/FOLDER/\n</code></pre></p> </li> </ol> <p>SFTP clients</p> <p>Using WinSCP or FileZilla or CyberDuck you will need the following details to connect and browse.</p> <ol> <li>Host: The IP address of the Nectar instance</li> <li>Username:</li> <li>Port:</li> </ol>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1/#tutorial-contents-table","title":"Tutorial contents table","text":"<ul> <li>Section 1: Map raw mapped reads to reference genome</li> <li>Section 2: Prepare analysis ready reads</li> <li>Section 3: Variant calling</li> <li>Section 4: Filter and prepare analysis ready variants</li> <li>Section 5: Exporting variant data and visualisation</li> </ul>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1/#section-1-map-raw-mapped-reads-to-reference-genome","title":"Section 1: Map raw mapped reads to reference genome","text":""},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1/#1-preparation-and-data-import","title":"1. Preparation and data import","text":"<p>Let\u2019s start by setting up the directory structure for this analysis. The <code>data</code> directory is where the raw sequencing reads will be. All output files will be directed to the <code>output</code> directory. All reference files will be pointed to the <code>reference</code> directory. The command-line scripts are stored in simple bash script format in the <code>scripts</code> directory. For those interested, equivalent slurm scripts to run on Spartan are available in the <code>slurm_scripts</code> directory. Although all tools are installed on the server, we will create a <code>tools</code> directory.    </p> <p>Let\u2019s begin by creating a byobu-screen session (see above sections for more help): <pre><code>cd\nbyobu-screen -S workshop\n</code></pre></p> <p>Create workshop directories: <pre><code>mkdir data\nmkdir output\nmkdir reference\nmkdir reference/hg38\nmkdir scripts\nmkdir slurm_scripts\nmkdir temp\nmkdir tools\n</code></pre></p> <p>Note</p> <p>All analysis is being carried out in the home directory (the directory you log in to).</p> <p>The data for this tutorial is sourced from the International Genome Sample Resources. Raw sequencing reads from chromosome 20 are used in this tutorial. We have prepared the files which can be copied as follows:</p> <pre><code>cp -p /mnt/shared_data/NA12878.chr20.region_1.fastq.gz data/.\ncp -p /mnt/shared_data/NA12878.chr20.region_2.fastq.gz data/.\n</code></pre> <p>Note</p> <p>To perform quality control checks on the raw fastq data, use the tool FastQC. Another useful QC tool output aggregator is the MultiQC tool. MultiQC aggregates the output from several tools and outputs a single QC report for all samples. We will have a look at some of the QC data later in this section.</p> <p>Next, we need to prepare the reference data. Luckily, we have downloaded the data and all we need to do is to create a symbolic link to the data folder as follows:</p> <pre><code>ln -s /mnt/shared_data/* reference/hg38/.\n</code></pre> <p>There are several files in the reference directory. These included the GATK bundle of reference files downloaded from (ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/hg38/). Additional files include in the directory are the BWA index files generated for the reference genome.</p>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1/#2-align-genome","title":"2. Align genome","text":"<p>Run the command below to map the raw sequencing data to the Homo sapiens (human) genome assembly GRCh38 (hg38). We are using the BWA-MEM algorithms for mapping DNA sequences against large reference genomes. Note that we have already run the created the BWA index files by running the command <code>bwa index reference/hg38/Homo_sapiens_assembly38.fasta</code>.</p> <p>Run BWA as follows, but first navigate to the scripts folder:</p> <pre><code>bwa mem -M -t 2 \\\n-R \"@RG\\tID:SRR622461.7\\tSM:NA12878\\tLB:ERR194147\\tPL:ILLUMINA\" \\\nreference/hg38/Homo_sapiens_assembly38.fasta \\\ndata/NA12878.chr20.region_1.fastq.gz \\\ndata/NA12878.chr20.region_2.fastq.gz | \\\nsamtools view -b -h -o output/NA12878.bam -\n</code></pre> <p>There are two parts to the command here. The first part uses BWA to perform the alignment and the second part takes the output from BWA and uses Samtools to convert the output to the BAM format.</p> <p>At the end of this step you should have a file called <code>NA12878.bam</code> in the <code>output</code> directory.</p>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1/#section-2-prepare-analysis-ready-reads","title":"Section 2: Prepare analysis ready reads","text":""},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1/#1-sort-sambam","title":"1. Sort SAM/BAM","text":"<p>The alignment file <code>NA12878.bam</code> is not sorted. Before proceeding, we should sort the BAM file using the Picard tools.</p> <pre><code>picard -Xmx7g SortSam \\\nI=output/NA12878.bam \\\nO=output/NA12878.sort.bam \\\nVALIDATION_STRINGENCY=LENIENT \\\nSORT_ORDER=coordinate \\\nMAX_RECORDS_IN_RAM=3000000 \\\nCREATE_INDEX=True    \n</code></pre> <p>The above command will create a coordinate sorted BAM file and an index (<code>.bai</code>) file.</p> <p>Alignment</p> <p>Given we now have a sorted BAM file, we can now generate some useful statistics. To do so we can use the <code>samtools flagstat</code> command. More details are available here. To decode the SAM flags visit Decoding SAM flags website.  </p> <pre><code># let's go to the home directory\ncd\n\nsamtools flagstat output/NA12878.sort.bam\n</code></pre> <pre><code># output\n\n2032568 + 0 in total (QC-passed reads + QC-failed reads)\n2030516 + 0 primary\n2052 + 0 secondary\n0 + 0 supplementary\n0 + 0 duplicates\n0 + 0 primary duplicates\n2032563 + 0 mapped (100.00% : N/A)\n2030511 + 0 primary mapped (100.00% : N/A)\n2030516 + 0 paired in sequencing\n1015258 + 0 read1\n1015258 + 0 read2\n2030284 + 0 properly paired (99.99% : N/A)\n2030510 + 0 with itself and mate mapped\n1 + 0 singletons (0.00% : N/A)\n182 + 0 with mate mapped to a different chr\n124 + 0 with mate mapped to a different chr (mapQ&gt;=5)\n</code></pre>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1/#2-mark-duplicate-reads","title":"2. Mark duplicate reads","text":"<p>The aim of this step is to locate and tag duplicate reads in the BAM file. Duplicate reads can arise due to several reasons. For more details go to MarkDuplicates.</p> <pre><code>picard -Xmx7g MarkDuplicates \\\n    I=output/NA12878.sort.bam \\\n    O=output/NA12878.sort.dup.bam \\\n    METRICS_FILE=output/marked_dup_metrics.txt\n</code></pre> <p>Question: How many duplicate reads are in the duplicate marked BAM file?</p> Answer <p><pre><code>samtools flagstat output/NA12878.sort.dup.bam\n\n2032568 + 0 in total (QC-passed reads + QC-failed reads)\n2030516 + 0 primary\n2052 + 0 secondary\n0 + 0 supplementary\n7207 + 0 duplicates\n7207 + 0 primary duplicates\n2032563 + 0 mapped (100.00% : N/A)\n2030511 + 0 primary mapped (100.00% : N/A)\n2030516 + 0 paired in sequencing\n1015258 + 0 read1\n1015258 + 0 read2\n2030298 + 0 properly paired (99.99% : N/A)\n2030510 + 0 with itself and mate mapped\n1 + 0 singletons (0.00% : N/A)\n182 + 0 with mate mapped to a different chr\n124 + 0 with mate mapped to a different chr (mapQ&gt;=5)\n</code></pre> Looks like there are 7207 duplicate reads.</p>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1/#3-base-quality-recalibration","title":"3. Base quality recalibration","text":"<p>The last step of pre-processing mapped reads is the base quality score recalibration (BQSR) stage. The GATK tools detects systematic errors made by the sequencing machine while estimating the accuracy of each base. The systematic errors can have various sources ranging from technical machine errors to the variability in the sequencing chemical reactions. The two step BQSR process applies machine learning to model the possible errors and adjust the base quality scores accordingly. More details here.</p> <pre><code># let's go to the home directory again\ncd\n\n# step 1  - Build the model\ngatk --java-options \"-Xmx7g\" BaseRecalibrator \\\n    -I output/NA12878.sort.dup.bam \\\n    -R reference/hg38/Homo_sapiens_assembly38.fasta \\\n    --known-sites reference/hg38/dbsnp_146.hg38.vcf.gz \\\n    -O output/recal_data.table\n</code></pre> <pre><code># step 2: Apply the model to adjust the base quality scores\ngatk --java-options \"-Xmx7g\" ApplyBQSR \\\n    -I output/NA12878.sort.dup.bam \\\n    -R reference/hg38/Homo_sapiens_assembly38.fasta \\\n    --bqsr-recal-file output/recal_data.table \\\n    -O output/NA12878.sort.dup.bqsr.bam\n</code></pre> <p>Note</p> <p>In a workflow such as this, it is a good practice to give the output files an appropriate name. In this case, we are appending the workflow step details to the filenames. For example, append <code>dup</code> after running the mark duplicates step.</p> <p>We now have a pre-processed BAM file (<code>NA12878.sort.dup.bqsr.bam</code>) ready for variant calling.</p> <p>But before we proceed, let\u2019s take a detour and run some summary statistics of the alignment data and QC.</p> BAM statistics and QC <p>The commands below use FastQC and Picard to generate QC metrics, followed by multiQC to aggregate the data, producing an HTML report.    </p> <p><pre><code># FastQC\nfastqc data/NA12878.chr20.region_1.fastq.gz \\\ndata/NA12878.chr20.region_2.fastq.gz \\\n-o output/\n\n# CollectInsertSizeMetrics\npicard CollectMultipleMetrics \\\nR=reference/hg38/Homo_sapiens_assembly38.fasta \\\nI=output/NA12878.sort.dup.bqsr.bam \\\nO=output/NA12878.sort.dup.bqsr.CollectMultipleMetrics\n\n# MultiQC\nmultiqc output/. -o output/.    \n</code></pre> We have precomputed this and the resulting MultiQC report is here.</p>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1/#section-3-variant-calling","title":"Section 3: Variant calling","text":"<p>The next step in the GATK best practices workflow is to proceed with the variant calling.</p> <p>There are a couple of workflows to call variants using GATK4. Here we will follow the Genomic Variant Call Format (GVCF) workflow which is more suited for scalable variant calling i.e. allows incremental addition of samples for joint genotyping.</p>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1/#1-apply-haplotypecaller","title":"1. Apply HaplotypeCaller","text":"<p>HaplotypeCaller is the focal tool within GATK4 to simultaneously call germline SNVs and small Indels using local de novo assembly of haplotype regions.</p> <p>Algorithm</p> <p>Briefly, the HaplotypeCaller works by: 1. Identify active regions or regions with evidence of variations. 2. Re-asssemble the active regions. 3. Re-align active region reads to the assembled regions to identify allele. More details about the HaplotypeCaller can be found here.</p> <pre><code>gatk --java-options \"-Xmx7g\" HaplotypeCaller \\\n    -I output/NA12878.sort.dup.bqsr.bam \\\n    -R reference/hg38/Homo_sapiens_assembly38.fasta \\\n    -ERC GVCF \\\n    -L chr20 \\\n    -O output/NA12878.g.vcf.gz\n</code></pre> <p>The output of this step is a GVCF file. The format for the GVCF file is similar to a VCF file. The key difference is that the GVCF file contains records for each sequenced genomic coordinate. The <code>--emit-ref-confidence</code> or <code>-ERC</code> parameter lets you select a method to summarise confidence in the genomic site being homozygous-reference. The option <code>-ERC GVCF</code> is more efficient and recommended for large samples and therefore more scalable.</p>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1/#2-apply-combinegvcfs","title":"2. Apply CombineGVCFs","text":"<p>The CombineGVCFs tool is applied to combine multiple single sample GVCF files, merging them into a single multi-sample GVCF file.</p> <p>We have pre-processed two additional samples (NA12891 and NA12892) up to the HaplotypeCaller step (above). Let\u2019s first copy the GVCF files to the output directory.</p> <pre><code>#let's make sure that we are in the apropriate directory\ncd\n\ncp /mnt/shared_data/NA12891.g.vcf.gz* output/.\ncp /mnt/shared_data/NA12892.g.vcf.gz* output/.\n</code></pre> <pre><code>gatk --java-options \"-Xmx7g\" CombineGVCFs \\\n    -R reference/hg38/Homo_sapiens_assembly38.fasta \\\n    -V output/NA12878.g.vcf.gz \\\n    -V output/NA12891.g.vcf.gz \\\n    -V output/NA12892.g.vcf.gz \\\n    -L chr20 \\\n    -O output/cohort.g.vcf.gz\n</code></pre> Let\u2019s look at the combined GVCF file <p><pre><code>less output/cohort.g.vcf.gz\n</code></pre> Work your way down to the variant records? How many samples do you see in the VCF file? Hint: look at the header row.</p> <p>Now that we have a merged GVCF file, we are ready to perform genotyping.</p>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1/#3-apply-genotypegvcfs","title":"3. Apply GenotypeGVCFs","text":"<p>GATK uses a modified version (to include multi-allelic variants) to calculate the posterior probability of a non-reference allele. More details here.</p> <pre><code>gatk --java-options \"-Xmx7g\" GenotypeGVCFs \\\n    -R reference/hg38/Homo_sapiens_assembly38.fasta \\\n    -V output/cohort.g.vcf.gz \\\n    -L chr20 \\\n    -O output/output.vcf.gz\n</code></pre> Information <p>An alternative to CombineGVCFs is GenomicsDBImport, which is more efficient for large sample numbers and stores the content in a GenomicsDB data store. Therefore, CombineGVCFs could be slow and inefficient for more than a few samples. A possible work around is to split up the tasks into per interval regions such as chromosomes.</p> Visualisations: VCF file <p>Screenshot from output.vcf.gz </p>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1/#section-4-filter-and-prepare-analysis-ready-variants","title":"Section 4: Filter and prepare analysis ready variants","text":""},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1/#1-variant-quality-score-recalibration","title":"1. Variant Quality Score Recalibration","text":"<p>The raw VCF file from the previous step (<code>output.vcf.gz</code>) contains 10467 variants. Not all of these are real, therefore, the aim of this step is to filter out artifacts or false positive variants. GATK has provided different workflows for variant filtering. Here we will walk through the Variant Quality Score Recalibration or the VQSR strategy. VQSR is a two step process (1) the first step builds a model that describes how variant metric or quality measures co-vary with the known variants in the training set. (2) The second step then ranks each variant according to the target sensitivity cutoff and applies a filter expression.</p> <pre><code>#Step 1 - VariantRecalibrator\ngatk --java-options \"-Xmx7g\" VariantRecalibrator \\\n    -V output/output.vcf.gz \\\n    --trust-all-polymorphic \\\n    -mode SNP \\\n    --max-gaussians 6 \\\n    --resource:hapmap,known=false,training=true,truth=true,prior=15 reference/hg38/hapmap_3.3.hg38.vcf.gz \\\n    --resource:omni,known=false,training=true,truth=true,prior=12 reference/hg38/1000G_omni2.5.hg38.vcf.gz \\\n    --resource:1000G,known=false,training=true,truth=false,prior=10 reference/hg38/1000G_phase1.snps.high_confidence.hg38.vcf.gz \\\n    --resource:dbsnp,known=true,training=false,truth=false,prior=7 reference/hg38/dbsnp_138.hg38.vcf.gz \\\n    -an QD -an MQRankSum -an ReadPosRankSum -an FS -an MQ -an SOR -an DP \\\n    -O output/cohort_snps.recal \\\n    --tranches-file output/cohort_snps.tranches\n\n#Step 2 - ApplyVQSR\ngatk --java-options \"-Xmx7g\" ApplyVQSR \\\n    -R reference/hg38/Homo_sapiens_assembly38.fasta \\\n    -V output/output.vcf.gz \\\n    -O output/output.vqsr.vcf \\\n    --truth-sensitivity-filter-level 99.0 \\\n    --tranches-file output/cohort_snps.tranches \\\n    --recal-file output/cohort_snps.recal \\\n    -mode SNP\n</code></pre> <p>Countvariants</p> <p>There are number of ways to count the variants in a VCF file. A very straight forward way using the GATK4 tools is as follows: <pre><code>gatk CountVariants -V output/output.vqsr.vcf\n</code></pre></p> <pre><code>Tool returned:\n10467\n</code></pre> <p>There are several protocols for filtering VCF files. We have walked through just one of them. For other options please visit this link.</p> Filtering strategy for a single sample VCF file <p>Consider the following method to filter a single sample VCF file. Here we will go through the Convolutional Neural Net based protocol to annotate and filter the VCF file.</p> <p>This is a two step process:</p> <p>(i) CNNScoreVariants will annotate the variant with pre-computed single-sample derived model scores in the INFO field CNN_1D (the neural network performs convolutions over the reference sequence surrounding the variant and combines those features with a multilayer perceptron on the variant annotations).</p> <pre><code>gatk --java-options \"-Xmx7g\" CNNScoreVariants  \\\n   -R reference/hg38/Homo_sapiens_assembly38.fasta \\\n   -V output/output.vcf.gz \\\n   -O output/output.cnns.vcf\n</code></pre> <p>(ii) FilterVariantTranches takes as input the percent sensitivities (0-100) to known sites to apply the filter. Variants with scores higher than for e.g. 99<sup>th</sup> percentile of variants in the resources pass through the filter and will have <code>PASS</code> in the filter. Others will have a filter values like \u2018CNN_1D_INDEL_Tranche_99.40_100.00\u2019 or \u2018CNN_1D_SNP_Tranche_99.95_100.00\u2019.</p> <pre><code>gatk --java-options \"-Xmx7g\" FilterVariantTranches \\\n    -V output/output.cnns.vcf \\\n    --resource reference/hg38/hapmap_3.3.hg38.vcf.gz \\\n    --resource reference/hg38/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz \\\n    --info-key CNN_1D \\\n    --snp-tranche 99.95 \\\n    --indel-tranche 99.4 \\\n    -O output/output.cnns.cnnfilter.vcf\n</code></pre> <p>Hint</p> <p>BCFtools is a useful tool to manipulate, filter and query VCF files. More details from BCFtools. BCFtools can be combined with linux command line tools as well to summarise data. For example, the command below can used extract and print the \u2018FILTER\u2019 column from the VCF file.</p> <pre><code>bcftools query -f'%FILTER\\n' output/output.vqsr.vcf\n</code></pre>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1/#2-additional-filtering","title":"2. Additional filtering","text":"<p>The VariantFiltration tools is designed for hard-filtering variant calls based on custom quality criteria such as sequencing depth, mapping quality etc. The two parameters are the filter-name and filter-expression. The parameter filter-name is the name of the filter to be used in the FILTER column if the expression in filter-expression is true. In the example below, if the sequencing depth at the variant site (VCF field DP) is less than 10, the FILTER field will be populated with the value \u2018Low_depth10\u2019. Users can add multiple filter expression/name combinations.</p> <pre><code>gatk --java-options \"-Xmx7g\" VariantFiltration \\\n    -R reference/hg38/Homo_sapiens_assembly38.fasta \\\n    -V output/output.vqsr.vcf \\\n    -O output/output.vqsr.varfilter.vcf \\\n    --filter-name \"Low_depth10\" \\\n    --filter-expression \"DP &lt; 10\"\n</code></pre> <p>Question: How many variants have a low sequencing depth (DP&lt;10) in the file output.vqsr.varfilter.vcf.</p> Answer <pre><code>bcftools query -f'%FILTER\\n' output/output.vqsr.varfilter.vcf | sort | uniq -c\n</code></pre> <pre><code>  6 Low_depth10\n  2 Low_depth10;VQSRTrancheSNP99.00to99.90\n  9 Low_depth10;VQSRTrancheSNP99.90to100.00\n  9064 PASS\n  1278 VQSRTrancheSNP99.00to99.90\n  108 VQSRTrancheSNP99.90to100.00\n</code></pre>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1/#3-final-analysis-ready-vcf-file","title":"3. Final analysis ready VCF file","text":"<p>Given we have a filter annotated VCF files (), we can now create an analysis ready VCF file.</p> <p>Question: Create a VCF file called <code>output/output.vqsr.varfilter.pass.vcf.gz</code> that contains only PASS variants? The input VCF file is <code>output/output.vqsr.varfilter.vcf</code>.\u201d Hint: try using the Bcftools application.</p> Answer <p>Use the bcftools to filter PASS variants. <pre><code>bcftools view -f 'PASS,.' -O vcf -o output/output.vqsr.varfilter.pass.vcf output/output.vqsr.varfilter.vcf            \n</code></pre></p> <p>We have now created an analysis ready version of the VCF file. It is also a good practice to compress and index the file.</p> <pre><code>bgzip -c output/output.vqsr.varfilter.pass.vcf &gt; output/output.vqsr.varfilter.pass.vcf.gz\ntabix -p vcf output/output.vqsr.varfilter.pass.vcf.gz\n</code></pre>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1/#section-5-exporting-variant-data-and-visualisation","title":"Section 5: Exporting variant data and visualisation","text":"<p>VCF files, although in tabular format, are not user friendly. We will go through a couple of ways to share share and visualise variant data. This is important for downstream analysis as well as sharing data. First, we will convert the VCF file in to a TSV file (ready for Excel for example) in a manner where we extract data fields of interest.</p>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1/#1-variantstotable","title":"1. VariantsToTable","text":"<p>This GATK4 tool extracts fields of interest from each record in a VCF file. VariantsToTable can extract field from both the INFO and FORMAT columns in the VCF file.</p> <p>Note</p> <p>VariantsToTable, by default, only extracts PASS or . (no filtering applied) variants. Use the <code>--show-filtered</code> parameter to show all variants.</p> <pre><code>gatk VariantsToTable \\\n    -R reference/hg38/Homo_sapiens_assembly38.fasta \\\n    -V output/output.vqsr.varfilter.pass.vcf.gz \\\n    -F CHROM -F POS -F FILTER -F TYPE -GF AD -GF DP \\\n    --show-filtered \\\n    -O output/output.vqsr.varfilter.pass.tsv\n</code></pre>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1/#2-html-report","title":"2. HTML report","text":"<p>Another useful method for sharing data is an interactive HTML file. This is suited for sharing a smaller subset of variants along with sequencing data. Here we will go through a simple example using the jigv tool. See below on how to download and setup jigv.</p> <pre><code># download jigv\nwget https://github.com/brentp/jigv/releases/download/v0.1.10/jigv\n\n# make jigv executable \nchmod +x jigv\n</code></pre> <p></p> <p>We will start with creating a subset of variants to report.</p> <pre><code>bcftools view output/output.vqsr.varfilter.pass.vcf.gz \\\nchr20:3822018-3999324 | \\\nbgzip -c &gt; output/subset.vcf.gz\n\ntabix -p vcf output/subset.vcf.gz\n</code></pre> <p>Now, we will call the jigv tool command to generate the report. <pre><code>./jigv --sample NA12878 \\\n--sites output/subset.vcf.gz \\\n--fasta reference/hg38/Homo_sapiens_assembly38.fasta \\\noutput/NA12878.sort.dup.bqsr.bam &gt; output/NA12878.jigv.html\n</code></pre></p> <p>Here is an example report we created earlier.</p>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1/#additional-introduction-to-variant-annotation-using-ensembl-vep","title":"Additional: introduction to variant annotation using Ensembl VEP","text":"<p>This is a very brief introduction to variant annotation using the Ensembl Variant Effect Predictor (VEP) tool. Follow the link to the Web Interface and upload your final output variant file and click Run.</p> <p>Here is a link to the annotation output file created earlier in Excel format.</p> <p>We can also take another look at the updated MultiQC report with annotatio summary here.</p>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1_print/","title":"Variant calling gatk1 print","text":""},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1_print/#variant-calling-using-gatk4","title":"Variant calling using GATK4","text":"<p>Anticipated workshop duration when delivered to a group of participants is 4 hours.</p> <p>For queries relating to this workshop, contact Melbourne Bioinformatics (bioinformatics-training@unimelb.edu.au).</p>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1_print/#author-information","title":"Author Information","text":"<p>Khalid Mahmood Melbourne Bioinformatics, University of Melbourne Developed: September 2021 Reviewed: June 2023</p>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1_print/#overview","title":"Overview","text":"<p>Topic</p> <ul> <li> Genomics</li> <li> Transcriptomics</li> <li> Proteomics</li> <li> Metabolomics</li> <li> Statistics and visualisation</li> <li> Structural Modelling</li> <li> Basic skills</li> </ul> <p>Skill level</p> <ul> <li> Beginner  </li> <li> Intermediate  </li> <li> Advanced  </li> </ul> <p> This workshop is designed for participants with some command-line knowledge. You will need to be able to <code>ssh</code> into a remote machine, navigate the directory structure and <code>scp</code> files from a remote computer to your local computer.</p>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1_print/#learning-objectives","title":"Learning Objectives","text":"<p>At the end of this workshop, you will be able to:</p> <ul> <li>Take raw DNA sequencing reads and perform variant calling to produce a variant list using GATK4.</li> <li>Perform basic exploration of variants.</li> </ul>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1_print/#description","title":"Description","text":"<p>This tutorial runs through the GATK4 best practices workflow for variant calling. The workflow starts and a pair of sequencing reads and performs a series of steps to determine a set to genetic variants.</p> <p>Data: Illumina HiSeq paired-end (2\u00d7100 bp) reads in FASTQ format. Tools: GATK4, Picard, Bcftools and jigv Reference data: GATK4 hg38 reference bundle and hg38 refGene annotation (hg38.refGene.gtf.gz)</p>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1_print/#requirements-and-preparation","title":"Requirements and preparation","text":"<p>Important</p> <p>Attendees are required to use their own laptop computers. </p> <p>At least one week before the workshop, if required, participants should install the software below.  This should provide sufficient time for participants to liaise with their own IT support should they encounter any IT problems.  </p> <p>Software </p> <p>Mac Users: No additional software needs to be installed for this workshop.</p> <p>Windows Users: 1. A terminal emulator such as PuTTY(free and open-source) will need to be downloaded. 2. Software for file transfers between a local computer and remote server such as WinSCP or FileZilla.</p> <p>Data</p> <ul> <li>All required data will be made available on the workshop virtual machines (hosted at the Melbourne Research Cloud). Login details will be provided closer to the tutorial data.</li> </ul>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1_print/#mode-of-delivery","title":"Mode of Delivery","text":"<p>This workshop will be run on a Nectar Instance. An \u201cInstance\u201d is Nectar terminology for a virtual machine running on the Nectar Cloud OpenStack infrastructure. An \u201cInstance\u201d runs on a \u201ccompute node\u201d; i.e. a physical computer populated with processor chips, memory chips and so on.</p> <p>You will be given an individual username, IP address and password to log on to using the SSH client tool on your computer (Terminal on Mac or PuTTY on Windows).</p> <pre><code>ssh username@ip-address\n</code></pre>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1_print/#byobu-screen","title":"Byobu-screen","text":"<p>Some of the commands in this tutorial take a while to run. Should your ssh connection drop and the SSH session on Nectar terminates, any commands that are running will terminate too. To mitigate this, once logged on to the Nectar Instance, we\u2019ll run <code>byobu-screen</code> (an enhancement for the <code>screen</code> terminal multiplexer) which allows us to resume a session. In other words, processes running in <code>byobu-screen</code> will continue to run when their window is not visible, even if you get disconnected.</p> <p>On Nectar, to start a <code>byobu-screen</code> session called <code>workshop</code>, type  </p> <pre><code>byobu-screen -S workshop\n</code></pre> <p>You can then proceed to run the commands in the workshop as normal.</p> Help: Byobu basics <p>The screen should look like   Should your SSH session on Nectar terminate, once you log back in to your Nectar instance, list running sessions/screens:</p> <pre><code>byobu-screen -ls\n</code></pre> <p>If it says (Detached) next to the <code>workshop</code> session in the list, reattach to <code>workshop</code> by:</p> <pre><code>byobu-screen -r workshop\n</code></pre> <p>If it says (Attached) next to the <code>workshop</code> session in the list, you can access the <code>workshop</code> session which is already attached by:</p> <pre><code>byobu-screen -r -d workshop\n</code></pre> <p> Some other useful <code>byobu-screen</code> commands:</p> <ul> <li> <p>To detach from <code>workshop</code>, type <code>ctrl-a ctrl-d</code> while inside the <code>workshop</code> session. (You will need to configure Byobu\u2019s ctrl-a behaviour if it hasn\u2019t already been configured (text will appear on the screen telling you this). Follow the information on the screen and select <code>1</code> for Screen mode).</p> </li> <li> <p>To terminate <code>workshop</code>, type <code>ctrl-d</code> while inside the <code>workshop</code> session.</p> </li> </ul>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1_print/#tutorial-setting","title":"Tutorial setting","text":"<p>The setting for this tutorial is as follows: you receive some germline sequencing data from an individual NA12878 (chr20 from sample NA12878 is sourced from the International Genome Sample Resource). Your aim is to identify small genetic variants from this data.</p>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1_print/#the-genome-analysis-toolkit-gatk","title":"The Genome Analysis Toolkit (GATK)","text":"<p>GATK is the industry standard toolkit for analysis of germline DNA to identify SNVs and indels. The GATK tool is mainly designed fo the human whole genome and exome analysis. The current version (GATK4) has expanded scope now and includes more complex analysis such copy number (CNV), structural variant (SV) and somatic variants. The current version of GATK also includes several utility functions for processing alignment files, VCF files and other complex processing workflows. The Picard toolkit is also now incorporated with GATK4. Van der Auwera GA &amp; O\u2019Connor BD. (2020). Genomics in the Cloud: Using Docker, GATK, and WDL in Terra (1<sup>st</sup> Edition). O\u2019Reilly Media.</p>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1_print/#how-this-tutorial-works","title":"How this tutorial works","text":"<pre><code>These grey coloured boxes are code blocks. The rectangular boxes in the top\nright hand corner of this code block/grey box can be used to copy the code to\nthe clipboard.\n</code></pre> Click here <p>REVEALED! Coloured boxes like these when clicked will reveal their content.</p> <p>To copy data from the remote workshop computer to your local computer.</p> <p>Command line/Mac Users</p> <p>The syntax to do this depends on whether you are running the copying command on your local computer, or on the remote computer (Nectar cloud).</p> <ol> <li> <p>When running the command from your local computer, the syntax for copying a file from Nectar is:</p> <pre><code>scp username@nectar_IP_address:FILENAME /PATH/TO/TARGET/FOLDER/\n</code></pre> </li> <li> <p>Running the command on the remote computer, the syntax for copying a file to your local computer is:     <pre><code>scp FILENAME username@your_IP_address:/PATH/TO/TARGET/FOLDER/\n</code></pre></p> </li> </ol> <p>SFTP clients</p> <p>Using WinSCP or FileZilla or CyberDuck you will need the following details to connect and browse.</p> <ol> <li>Host: The IP address of the Nectar instance</li> <li>Username:</li> <li>Port:</li> </ol>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1_print/#tutorial-contents-table","title":"Tutorial contents table","text":"<ul> <li>Section 1: Map raw mapped reads to reference genome</li> <li>Section 2: Prepare analysis ready reads</li> <li>Section 3: Variant calling</li> <li>Section 4: Filter and prepare analysis ready variants</li> <li>Section 5: Exporting variant data and visualisation</li> </ul>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1_print/#section-1-map-raw-mapped-reads-to-reference-genome","title":"Section 1: Map raw mapped reads to reference genome","text":""},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1_print/#1-preparation-and-data-import","title":"1. Preparation and data import","text":"<p>Lets start by setting up the directory structure for this analysis. The <code>data</code> directory is where the raw sequencing reads will be. All output files will be directed to the <code>output</code> directory. All reference files will be pointed to the <code>reference</code> directory. The command-line scripts are stored in simple bash script format in the <code>scripts</code> directory. For those interested, equivalent slurm scripts to run on Spartan are available in the <code>slurm_scripts</code> directory. Although all tools are installed on the server, we will create a <code>tools</code> directory.    </p> <p>Lets begin by creating a byobu-screen session (see above sections for more help): <pre><code>cd\nbyobu-screen -S workshop\n</code></pre></p> <p>Create workshop directories: <pre><code>mkdir data\nmkdir output\nmkdir reference\nmkdir reference/hg38\nmkdir scripts\nmkdir slurm_scripts\nmkdir temp\nmkdir tools\n</code></pre></p> <p>Note</p> <p>All analysis is being carried out in the home directory (the directory you log in to).</p> <p>The data for this tutorial is sourced from the International Genome Sample Resources. Raw sequencing reads from chromosome 20 are used in this tutorial. We have prepared the files which can be copied as follows:</p> <pre><code>cp -p /mnt/shared_data/NA12878.chr20.region_1.fastq.gz data/.\ncp -p /mnt/shared_data/NA12878.chr20.region_2.fastq.gz data/.\n</code></pre> <p>Note</p> <p>To perform quality control checks on the raw fastq data use the tool FastQC. Another useful QC tool output aggregator is the MultiQC tool. MultiQC aggregates the output from several tools and outputs a single QC report for all samples. We will have a look at some of the QC data later in this section.</p> <p>Next, we need to prepare the reference data. Luckily, we have downloaded the data and all we need to do is to create a symbolic link to the data folder as follows:</p> <pre><code>ln -s /mnt/shared_data/* reference/hg38/.\n</code></pre> <p>There are several files in the reference directory. These included the GATK bundle of reference files downloaded from (ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/hg38/). Additional files include in the directory are the BWA index files generated for the reference genome.</p>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1_print/#2-align-genome","title":"2. Align genome","text":"<p>Run the command below to map the raw sequencing data to the Homo sapiens (human) genome assembly GRCh38 (hg38). We are using the BWA-MEM algorithms for mapping DNA sequences against large reference genomes. Note that we have already run the created the BWA index files by running the command <code>bwa index reference/hg38/Homo_sapiens_assembly38.fasta</code>.</p> <p>Run BWA as follows, but first navigate to the scripts folder:</p> <pre><code>bwa mem -M -t 2 \\\n-R \"@RG\\\\tID:SRR622461.7\\\\tSM:NA12878\\\\tLB:ERR194147\\\\tPL:ILLUMINA\" \\\nreference/hg38/Homo_sapiens_assembly38.fasta \\\ndata/NA12878.chr20.region_1.fastq.gz \\\ndata/NA12878.chr20.region_2.fastq.gz | \\\nsamtools view -b -h -o output/NA12878.bam -\n</code></pre> <p>There are two parts to the command here. The first part uses BWA to perform the alignment and the second part take the output from BWA and uses Samtools to convert the output to the BAM format.</p> <p>At the end of this step you should have a file called <code>NA12878.bam</code> in the <code>output</code> directory.</p>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1_print/#section-2-prepare-analysis-ready-reads","title":"Section 2: Prepare analysis ready reads","text":""},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1_print/#1-sort-sambam","title":"1. Sort SAM/BAM","text":"<p>The alignment file <code>NA12878.bam</code> is not sorted. Before proceeding, we should sort the BAM file using the Picard tools.</p> <pre><code>picard -Xmx7g SortSam \\\nI=output/NA12878.bam \\\nO=output/NA12878.sort.bam \\\nVALIDATION_STRINGENCY=LENIENT \\\nSORT_ORDER=coordinate \\\nMAX_RECORDS_IN_RAM=3000000 \\\nCREATE_INDEX=True    \n</code></pre> <p>The above command will create a coordinate sorted BAM file and an index (<code>.bai</code>) file.</p> <p>Alignment</p> <p>Given we now have a sorted BAM file, we can now generate some useful statistics. To do so we can use the <code>samtools flagstat</code> command. More details are available here.</p> <pre><code># lets go to the home directory\ncd\n\nsamtools flagstat output/NA12878.sort.bam\n</code></pre> <pre><code># output\n\n2032568 + 0 in total (QC-passed reads + QC-failed reads)\n2030516 + 0 primary\n2052 + 0 secondary\n0 + 0 supplementary\n0 + 0 duplicates\n0 + 0 primary duplicates\n2032563 + 0 mapped (100.00% : N/A)\n2030511 + 0 primary mapped (100.00% : N/A)\n2030516 + 0 paired in sequencing\n1015258 + 0 read1\n1015258 + 0 read2\n2030298 + 0 properly paired (99.99% : N/A)\n2030510 + 0 with itself and mate mapped\n1 + 0 singletons (0.00% : N/A)\n182 + 0 with mate mapped to a different chr\n124 + 0 with mate mapped to a different chr (mapQ&gt;=5)\n</code></pre>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1_print/#2-mark-duplicate-reads","title":"2. Mark duplicate reads","text":"<p>The aim of this step is to locate and tag duplicate reads in the BAM file. Duplicate reads can arise due to several reasons, for more details go to MarkDuplicates.</p> <pre><code>picard -Xmx7g MarkDuplicates \\\n    I=output/NA12878.sort.bam \\\n    O=output/NA12878.sort.dup.bam \\\n    METRICS_FILE=output/marked_dup_metrics.txt\n</code></pre> <p>Question: How many duplicate reads are in the duplicate marked BAM file?</p> Answer <p><pre><code>samtools flagstat output/NA12878.sort.dup.bam\n\n2032568 + 0 in total (QC-passed reads + QC-failed reads)\n2030516 + 0 primary\n2052 + 0 secondary\n0 + 0 supplementary\n7207 + 0 duplicates\n7207 + 0 primary duplicates\n2032563 + 0 mapped (100.00% : N/A)\n2030511 + 0 primary mapped (100.00% : N/A)\n2030516 + 0 paired in sequencing\n1015258 + 0 read1\n1015258 + 0 read2\n2030298 + 0 properly paired (99.99% : N/A)\n2030510 + 0 with itself and mate mapped\n1 + 0 singletons (0.00% : N/A)\n182 + 0 with mate mapped to a different chr\n124 + 0 with mate mapped to a different chr (mapQ&gt;=5)\n</code></pre> Looks like there are 7207 duplicate reads.</p>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1_print/#3-base-quality-recalibration","title":"3. Base quality recalibration","text":"<p>The last step of pre-processing mapped reads is the base quality score recalibration (BQSR) stage. The GATK tools detects systematic errors made by the sequencing machine while estimating the accuracy of each base. The systematic errors can be have various sources ranging from technical machine errors to the variability in the sequencing chemical reactions. The two step BQSR process applies machine learning to model the possible errors and adjust the base quality scores accordingly. More details here.</p> <pre><code># lets go to the home directory again\ncd\n\n# step 1  - Build the model\ngatk --java-options \"-Xmx7g\" BaseRecalibrator \\\n    -I output/NA12878.sort.dup.bam \\\n    -R reference/hg38/Homo_sapiens_assembly38.fasta \\\n    --known-sites reference/hg38/dbsnp_146.hg38.vcf.gz \\\n    -O output/recal_data.table\n</code></pre> <pre><code># step 2: Apply the model to adjust the base quality scores\ngatk --java-options \"-Xmx7g\" ApplyBQSR \\\n    -I output/NA12878.sort.dup.bam \\\n    -R reference/hg38/Homo_sapiens_assembly38.fasta \\\n    --bqsr-recal-file output/recal_data.table \\\n    -O output/NA12878.sort.dup.bqsr.bam\n</code></pre> <p>Note</p> <p>In a workflow such as this it is a good practice to give the output files an appropriate name. In this case, we are appending the workflow step details to the filenames. For example, append <code>dup</code> after running the mark duplicates step.</p> <p>We now have a pre-processed BAM file (<code>NA12878.sort.dup.bqsr.bam</code>) ready for variant calling.</p> <p>But before we proceed, let\u2019s take a detour and run some summary statistics of the alignment data and QC.</p> BAM statistics and QC <p>The commands below uses FastQC and Picard to generate QC metrics followed by multiQC tools then aggregating the data to produce an HTML report.    </p> <p><pre><code># FastQC\nfastqc data/NA12878.chr20.region_1.fastq.gz \\\ndata/NA12878.chr20.region_2.fastq.gz \\\n-o output/\n\n# CollectInsertSizeMetrics\npicard CollectMultipleMetrics \\\nR=reference/hg38/Homo_sapiens_assembly38.fasta \\\nI=output/NA12878.sort.dup.bqsr.bam \\\nO=output/NA12878.sort.dup.bqsr.CollectMultipleMetrics\n\n# MultiQC\nmultiqc output/. -o output/.    \n</code></pre> We have precomputed this and the resulting MultiQC report is here.</p>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1_print/#section-3-variant-calling","title":"Section 3: Variant calling","text":"<p>The next step in the GATK best practices workflow is to proceed with the variant calling.</p> <p>There are a couple of workflows to call variants using GATK4. Here we will follow the Genomic Variant Call Format (GVCF) workflow which is more suited for scalable variant calling i.e. allows incremental addition of samples for joint genotyping.</p>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1_print/#1-apply-haplotypecaller","title":"1. Apply HaplotypeCaller","text":"<p>HaplotypeCaller is the focal tool within GATK4 to simultaneously call germline SNVs and small Indels using local de-novo assembly of haplotype regions.</p> <p>Algorithm</p> <p>Briefly, the HaplotypeCaller works by: 1. Identify active regions or regions with evidence of variations. 2. Re-asssemble the active regions. 3. Re-align active region reads to the assembled regions to identify allele. More details about the HaplotypeCaller can be found here.</p> <pre><code>gatk --java-options \"-Xmx7g\" HaplotypeCaller \\\n    -I output/NA12878.sort.dup.bqsr.bam \\\n    -R reference/hg38/Homo_sapiens_assembly38.fasta \\\n    -ERC GVCF \\\n    -L chr20 \\\n    -O output/NA12878.g.vcf.gz\n</code></pre> <p>The output of this step is a GVCF file. The format for the GVCF file is similar to a VCF file. The key difference is that the GVCF file contains records for each sequenced genomic coordinate. The <code>--emit-ref-confidence</code> or <code>-ERC</code> parameter lets you select a method to summarise confidence in the genomic site being homozygous-reference. The option <code>-ERC GVCF</code> is more efficient and recommended for large samples and therefore more scalable.</p>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1_print/#2-apply-combinegvcfs","title":"2. Apply CombineGVCFs","text":"<p>The CombineGVCFs tool is applied to combine multiple single sample GVCF files to merge these in to a single multi-sample GVCF file.</p> <p>We have pre-processed two additional samples (NA12891 and NA12892) up to the HaplotypeCaller step (above). Lets first copy the gvcf files to the output directory.</p> <pre><code>#lets make sure that we are in the apropriate directory\ncd\n\ncp /mnt/shared_data/NA12891.g.vcf.gz* output/.\ncp /mnt/shared_data/NA12892.g.vcf.gz* output/.\n</code></pre> <pre><code>gatk --java-options \"-Xmx7g\" CombineGVCFs \\\n    -R reference/hg38/Homo_sapiens_assembly38.fasta \\\n    -V output/NA12878.g.vcf.gz \\\n    -V output/NA12891.g.vcf.gz \\\n    -V output/NA12892.g.vcf.gz \\\n    -L chr20 \\\n    -O output/cohort.g.vcf.gz\n</code></pre> Lets look at the combined gvcf file <p><pre><code>less output/cohort.g.vcf.gz\n</code></pre> Work your way down to the variant records? How many samples do you see in the VCF file? Hint: look at the header row.</p> <p>Now that we have a merged GVCF file, we are ready to perform genotyping.</p>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1_print/#3-apply-genotypegvcfs","title":"3. Apply GenotypeGVCFs","text":"<p>GenotypeGVCFs</p> <pre><code>gatk --java-options \"-Xmx7g\" GenotypeGVCFs \\\n    -R reference/hg38/Homo_sapiens_assembly38.fasta \\\n    -V output/cohort.g.vcf.gz \\\n    -L chr20 \\\n    -O output/output.vcf.gz\n</code></pre> Information <p>An alternative to CombineGVCFs is GenomicsDBImport, which is more efficient for sample numbers and stores the content in a a GenomicsDB data store. Therefore, CombineGVCFs could be slow and inefficient for more than a few samples. A possible work around is to split up the tasks per interval regions such as chromosomes.</p> Visualisations: VCF file <p>Screenshot from output.vcf.gz </p>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1_print/#section-4-filter-and-prepare-analysis-ready-variants","title":"Section 4: Filter and prepare analysis ready variants","text":""},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1_print/#1-variant-quality-score-recalibration","title":"1. Variant Quality Score Recalibration","text":"<p>The raw VCF file from the previous step (<code>output.vcf.gz</code>) contains 10467 variants. Not all of these are real, therefore, the aim of this step is to filter out artifacts or false positive variants. GATK has provided different workflows for variant filtering. Here we will walk through the Variant Quality Score Recalibration or the VQSR strategy. VQSR is a two step process (1) the first step builds a model that describes how variant metric or quality measures co-vary with the known variants in the training set. (2) The second step then ranks each variant according to the target sensitivity cutoff and applies a filter expression.</p> <pre><code>#Step 1 - VariantRecalibrator\ngatk --java-options \"-Xmx7g\" VariantRecalibrator \\\n    -V output/output.vcf.gz \\\n    --trust-all-polymorphic \\\n    -mode SNP \\\n    --max-gaussians 6 \\\n    --resource:hapmap,known=false,training=true,truth=true,prior=15 reference/hg38/hapmap_3.3.hg38.vcf.gz \\\n    --resource:omni,known=false,training=true,truth=true,prior=12 reference/hg38/1000G_omni2.5.hg38.vcf.gz \\\n    --resource:1000G,known=false,training=true,truth=false,prior=10 reference/hg38/1000G_phase1.snps.high_confidence.hg38.vcf.gz \\\n    --resource:dbsnp,known=true,training=false,truth=false,prior=7 reference/hg38/dbsnp_138.hg38.vcf.gz \\\n    -an QD -an MQRankSum -an ReadPosRankSum -an FS -an MQ -an SOR -an DP \\\n    -O output/cohort_snps.recal \\\n    --tranches-file output/cohort_snps.tranches\n\n#Step 2 - ApplyVQSR\ngatk --java-options \"-Xmx7g\" ApplyVQSR \\\n    -R reference/hg38/Homo_sapiens_assembly38.fasta \\\n    -V output/output.vcf.gz \\\n    -O output/output.vqsr.vcf \\\n    --truth-sensitivity-filter-level 99.0 \\\n    --tranches-file output/cohort_snps.tranches \\\n    --recal-file output/cohort_snps.recal \\\n    -mode SNP\n</code></pre> <p>Countvariants</p> <p>There are number of ways to count the variants in a VCF file. A very straight forward way using the GATK4 tools is as follows: <pre><code>gatk CountVariants -V output/output.vqsr.vcf\n</code></pre></p> <pre><code>Tool returned:\n10467\n</code></pre> <p>There are several protocols for filtering VCF files. We have walked throught the VQSR strategy above and for other options please visit this link.</p> Filtering strategy for a single sample VCF file <p>Consider the following method to filter a single sample VCF file. Here we will go through the Convolutional Neural Net based protocol to annotate and filter the VCF file.</p> <p>This is a two step process:</p> <p>(i) CNNScoreVariants will annotate the variant with pre-computed single-sample derived model scores in the INFO field CNN_1D (the neural network performs convolutions over the reference sequence surrounding the variant and combines those features with a multilayer perceptron on the variant annotations).</p> <pre><code>gatk --java-options \"-Xmx7g\" CNNScoreVariants  \\\n   -R reference/hg38/Homo_sapiens_assembly38.fasta \\\n   -V output/output.vcf.gz \\\n   -O output/output.cnns.vcf\n</code></pre> <p>(ii) FilterVariantTranches takes as input the percent sensitivities (0-100) to known sites to apply the filter. Variants with scores higher than for e.g. 99<sup>th</sup> percentile of variants in the resources pass through the filter and will have <code>PASS</code> in the filter. Others will have a filter values like \u2018CNN_1D_INDEL_Tranche_99.40_100.00\u2019 or \u2018CNN_1D_SNP_Tranche_99.95_100.00\u2019.</p> <pre><code>gatk --java-options \"-Xmx7g\" FilterVariantTranches \\\n    -V output/output.cnns.vcf \\\n    --resource reference/hg38/hapmap_3.3.hg38.vcf.gz \\\n    --resource reference/hg38/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz \\\n    --info-key CNN_1D \\\n    --snp-tranche 99.95 \\\n    --indel-tranche 99.4 \\\n    -O output/output.cnns.cnnfilter.vcf\n</code></pre> <p>Hint</p> <p>BCFtools is a useful tool to manipulate, filter and query VCF files. More details from BCFtools. BCFtools can be combined with linux command line tools as well to summarise data. For example, the command below can used extract and print the \u2018FILTER\u2019 column from the VCF file.</p> <pre><code>    bcftools query -f'%FILTER\\n' output/output.vqsr.vcf.gz\n</code></pre>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1_print/#2-additional-filtering","title":"2. Additional filtering","text":"<p>The VariantFiltration tools is designed for hard-filtering variant calls based on custom quality criteria such as sequencing depth, mapping quality etc. The two parameters are the filter-name and filter-expression. The parameter filter-name is the name of the filter to be used in the FILTER column if the expression in filter-expression is true. In the example below, if the sequencing depth at the variant site (VCF field DP) is less than 10, the FILTER field will be populated with the value \u2018Low_depth10\u2019. Users can add multiple filter expression/name combinations.</p> <pre><code>gatk --java-options \"-Xmx7g\" VariantFiltration \\\n    -R reference/hg38/Homo_sapiens_assembly38.fasta \\\n    -V output/output.vqsr.vcf \\\n    -O output/output.vqsr.varfilter.vcf \\\n    --filter-name \"Low_depth10\" \\\n    --filter-expression \"DP &lt; 10\"\n</code></pre> <p>Question: How many variants have a low sequencing depth (DP&lt;10) in the file output.vqsr.varfilter.vcf.</p> Answer <pre><code>    bcftools query -f'%FILTER\\n' output/output.vqsr.varfilter.vcf | sort | uniq -c\n</code></pre> <pre><code>  6 Low_depth10\n  2 Low_depth10;VQSRTrancheSNP99.00to99.90\n  9 Low_depth10;VQSRTrancheSNP99.90to100.00\n  9064 PASS\n  1278 VQSRTrancheSNP99.00to99.90\n  108 VQSRTrancheSNP99.90to100.00\n</code></pre>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1_print/#3-final-analysis-ready-vcf-file","title":"3. Final analysis ready VCF file","text":"<p>Given we have a filter annotated VCF files (), we can now create an analysis ready VCF file.</p> <p>Question: Create a VCF file called <code>output/output.vqsr.varfilter.pass.vcf.gz</code> that contains only PASS variants? The input VCF file is <code>output/output.vqsr.varfilter.vcf</code>.\u201d Hint: try using the Bcftools application.</p> Answer <p>Use the bcftools to filter PASS variants. <pre><code>bcftools view -f 'PASS,.' -O vcf -o output/output.vqsr.varfilter.pass.vcf output/output.vqsr.varfilter.vcf            \n</code></pre></p> <p>We have now created an analysis ready version of the VCF file. It is also a good practice to compress and index the file.</p> <pre><code>bgzip -c output/output.vqsr.varfilter.pass.vcf &gt; output/output.vqsr.varfilter.pass.vcf.gz\ntabix -p vcf output/output.vqsr.varfilter.pass.vcf.gz\n</code></pre>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1_print/#section-5-exporting-variant-data-and-visualisation","title":"Section 5: Exporting variant data and visualisation","text":"<p>VCF files, although in tabular format, are not user friendly. We will go through a couple of ways to share share and visualise variant data. This is important for downstream analysis as well as sharing data. First, we will convert the VCF file in to a TSV file (ready for Excel for example) in a manner where we extract data fields of interest.</p>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1_print/#1-variantstotable","title":"1. VariantsToTable","text":"<p>This GATK4 tool extracts fields of interest from each record in a VCF file. VariantsToTable can extract field from both the INFO and FORMAT columns in the VCF file.</p> <p>Note</p> <p>VariantsToTable, by default, only extracts PASS or . (no filtering applied) variants. Use the <code>--show-filtered</code> parameter to show all variants.</p> <pre><code>gatk VariantsToTable \\\n    -R reference/hg38/Homo_sapiens_assembly38.fasta \\\n    -V output/output.vqsr.varfilter.pass.vcf.gz \\\n    -F CHROM -F POS -F FILTER -F TYPE -GF AD -GF DP \\\n    --show-filtered \\\n    -O output/output.vqsr.varfilter.pass.tsv\n</code></pre>"},{"location":"tutorials/variant_calling_gatk1/variant_calling_gatk1_print/#2-html-report","title":"2. HTML report","text":"<p>Another useful method for sharing data is an interactive HTML file. This is suited for sharing a smaller subset of variants along with sequencing data. Here we will go through a simple example using the jigv tool.</p> <p></p> <p>We will start with creating a subset of variants to report.</p> <pre><code>bcftools view output/output.vqsr.varfilter.pass.vcf.gz \\\nchr20:3822018-3999324 | \\\nbgzip -c &gt; output/subset.vcf.gz\n\ntabix -p vcf output/subset.vcf.gz\n</code></pre> <p>Now, we will call the jigv tool command to generate the report. <pre><code>jigv --sample NA12878 \\\n--sites output/subset.vcf.gz \\\n--fasta reference/hg38/Homo_sapiens_assembly38.fasta \\\noutput/NA12878.sort.dup.bqsr.bam &gt; output/NA12878.jigv.html\n</code></pre></p> <p>Here is an example report we created earlier.</p>"},{"location":"tutorials/variant_calling_gatk1/files/test_workshop.readme/","title":"Workshop test","text":""},{"location":"tutorials/variant_calling_gatk1/files/test_workshop.readme/#introduction","title":"Introduction","text":"<p>This document describes a simple series of steps to test a workshop. This test can be used to test for (1) expected behaviour and (2) multi-user performance on the workshop computer (e.g. Nectar virtual computer).</p> <p>There are two main components to this system.</p> <p><code>run_complete_workshop.sh</code> contains an ordered series of commands to be run by the participants directly from the workshop. It is expected that the environment and tools are setup appropriately to simulate the workshop environment.</p> <p><code>test_workshop.sh</code> script performs the test by simulating a workshop environment. Currently, this tool takes in a variable <code>N</code> as the expected number of participants to simulate on a single machine (this is the machine where this tool in run). Next, the tool run the <code>run_complete_workshop.sh</code> script to simulate the workshop <code>N</code> times in parallel, each time creating a unique workshop working directory (prefix <code>MYTEST_</code>). At the moment this tool does not have test to check for expected files and outcomes.</p> <pre><code>!/bin/bash\n\nN=5\nseq -w 1 \"$N\" | parallel --joblog test.log -j 0 --halt 2 'RUNNUMBER={} ./run_complete_workshop.sh'\n</code></pre>"},{"location":"tutorials/variant_calling_gatk1/files/test_workshop.readme/#how-to-variant-calling-gatk1","title":"How to (Variant Calling GATK1)","text":"<ul> <li>Step 1 : Log in to the virtual computer (e.g. Nectar) using the provided credentials</li> <li>Step 2: Download the required files to the home directory. Run the <code>cd</code> command to make sure you are currently in the home directory.<ul> <li><code>wget https://github.com/melbournebioinformatics/MelBioInf_docs/raw/master/docs/tutorials/variant_calling_gatk1/files/run_complete_workshop.sh</code></li> <li><code>wget https://github.com/melbournebioinformatics/MelBioInf_docs/raw/master/docs/tutorials/variant_calling_gatk1/files/test_workshop.sh</code></li> </ul> </li> <li> <p>Run the command below to test: <pre><code># change file permissions\nchmod +x run_complete_workshop.sh\nchmod +x test_workshop.sh\n# run test\n./test_workshop.sh\n</code></pre></p> </li> <li> <p>Step 3: After the successful completion of the test, you should see a log file <code>test_workshop.log</code>. This file details the time it took to run <code>run_complete_workshop</code> script in parallel <code>N</code> times.</p> <p><pre><code>Seq Host    Starttime   JobRuntime  Send    Receive Exitval Signal  Command\n3   :   1630852205.612    1047.621  0   306 0   0   RUNNUMBER=3 ./run_complete_workshop.sh\n1   :   1630852205.608    1048.805  0   306 0   0   RUNNUMBER=1 ./run_complete_workshop.sh\n4   :   1630852205.614    1048.803  0   306 0   0   RUNNUMBER=4 ./run_complete_workshop.sh\n2   :   1630852205.610    1050.313  0   306 0   0   RUNNUMBER=2 ./run_complete_workshop.sh\n5   :   1630852205.617    1050.391  0   306 0   0   RUNNUMBER=5 ./run_complete_workshop.sh\n</code></pre> The output from each parallel running of the workshop material will be in its corresponding directories (see blow).</p> <pre><code>ls -1\n\nMYTEST_1\nMYTEST_2\nMYTEST_3\nMYTEST_4\nMYTEST_5\n</code></pre> </li> </ul>"},{"location":"tutorials/variant_calling_gatk1/files/test_workshop.readme/#results-variant-calling-gatk1","title":"Results (Variant Calling GATK1)","text":"<p>The workshop performs as expected for <code>N=5</code> users on the current data sets and computer setup.</p> <pre><code>16 cpus\n32 GB memory\n</code></pre> <p>Notes: Testing with more users may raise memory issues when loading reference data.</p>"},{"location":"tutorials/workshop_delivery_mode_info/workshops_nectar/","title":"Workshops on Nectar Instances","text":""},{"location":"tutorials/workshop_delivery_mode_info/workshops_nectar/#workshops-using-nectar-instances","title":"Workshops using Nectar Instances","text":"<p>The workshop you will be doing will run on a Nectar Instance. An \u201cInstance\u201d is Nectar terminology for a virtual machine running on the Nectar Cloud OpenStack infrastructure. An \u201cInstance\u201d runs on a \u201ccompute node\u201d; i.e. a physical computer populated with processor chips, memory chips and so on.</p>"},{"location":"tutorials/workshop_delivery_mode_info/workshops_nectar/#required-software","title":"Required Software","text":"<p>Mac Users: No additional software needs to be installed for this workshop. You will use the <code>Terminal</code> app. Files can be transferred between your local computer and the remote Nectar Instance using <code>scp</code>. If you are a novice on the command line, software for transferring files such as FileZilla or Cyberduck can be used.</p> <p>Windows Users: 1. A terminal emulator such as PuTTY (free and open-source) will need to be downloaded. 2. Software for file transfers between a local computer and remote server such as FileZilla or WinSCP is required.  </p>"},{"location":"tutorials/workshop_delivery_mode_info/workshops_nectar/#logging-on-to-a-nectar-instance","title":"Logging on to a Nectar Instance","text":"<p>You will be given an individual username, IP address and password to log on to using the SSH client tool on your computer (Terminal on Mac or PuTTY on Windows).</p> <p>Host: The IP address of the Nectar instance Username: alpha | beta | gamma | delta | epsilon | zeta Port: 22 Password: Password that has been given to you.</p> <p>Attention</p> <p>Follow the instructions for your operating system carefully.</p> <p>Repeated failed login attempts might result in being locked out of the account.</p> <p> Mac Users:</p> <p>In Terminal, type:</p> <pre><code>ssh username@nectar_ip-address\n</code></pre> <p>You will be prompted to enter your password. After you have entered your password, hit <code>return</code>.</p> Mac Terminal Example <p></p> I can\u2019t see my password as I\u2019m typing it <p>You won\u2019t receive feedback when entering your password. Rest assured it is being entered as you type it (or paste it in). Hit <code>return</code> after you have typed the whole password.</p> <p>Windows Users:</p> <p>In PuTTY, enter the IP address as the host name and 22 for the port.</p> <p>After you click \u201cOpen\u201d you\u2019ll be prompted to type the username you have been assigned (i.e. alpha | beta | gamma | delta | epsilon | zeta). Press <code>enter</code>. You will then be prompted for the password that has been given to you. Press <code>enter</code>.</p> Putty Example <p></p> I can\u2019t see my password as I\u2019m typing it <p>You won\u2019t receive feedback when entering your password. Rest assured it is being entered as you type it (or paste it in). Hit <code>enter</code> after you have typed the whole password.</p> How can I use copy and paste to enter my password? <p>PuTTY has a different shortcut for paste compared to what you may be used to. Instead of <code>ctrl-v</code>, try right-clicking in the password field to paste the contents of your clipboard.</p>"},{"location":"tutorials/workshop_delivery_mode_info/workshops_nectar/#transferring-files-between-your-computer-and-nectar-instance","title":"Transferring files between your computer and Nectar Instance","text":"<p>Host: The IP address of the Nectar instance Username: alpha | beta | gamma | delta | epsilon | zeta Port: 22 Password: Password that has been given to you.</p> <p>Mac Users</p> <p><code>scp</code> can be used to transfer files. Alternatively, novice Unix users may want to use FileZilla.</p> Filezilla Example <p></p> <p> Windows Users </p> <p>Using file transfer software such as FileZilla or WinSCP:</p> Filezilla Example <p></p>"},{"location":"tutorials/workshop_delivery_mode_info/workshops_nectar/#testing-your-log-on","title":"Testing your log on","text":"<ol> <li> <p>Log on to your Nectar Instance.</p> </li> <li> <p>Get a copy of the <code>test_transfer.txt</code> file: <pre><code>cp /mnt/shared_data/test_transfer.txt ~  \n</code></pre></p> </li> <li>Transfer <code>test_transfer.txt</code> to your local computer.</li> </ol>"},{"location":"tutorials/workshop_delivery_mode_info/workshops_nectar/#byobu-screen","title":"Byobu-screen","text":"<p>Some of the commands can take a while to run. Should your connection drop and the SSH session on Nectar terminates, any commands that are running will terminate too. To mitigate this, once logged on to the Nectar Instance, we\u2019ll run <code>byobu-screen</code> (an enhancement for the <code>screen</code> terminal multiplexer) which allows us to resume a session. In other words, processes running in <code>byobu-screen</code> will continue to run when their window is not visible, even if you get disconnected.</p> <p>Attention</p> <p>We will do this step in the workshop though feel free to try out the <code>byobu-screen</code> commands below.</p>"},{"location":"tutorials/workshop_delivery_mode_info/workshops_nectar/#starting-a-byobu-screen-session","title":"Starting a byobu-screen session.","text":"<p>On Nectar, to start a <code>byobu-screen</code> session called <code>workshop</code>, type  </p> <pre><code>byobu-screen -S workshop\n</code></pre> Byobu Example <p></p> <p>You can then proceed to run the commands in the workshop as normal.</p>"},{"location":"tutorials/workshop_delivery_mode_info/workshops_nectar/#reconnecting-to-a-byobu-screen-session","title":"Reconnecting to a byobu-screen session.","text":"<p>Should your SSH session on Nectar terminate, once you log back in to your Nectar instance, list running sessions/screens:</p> <pre><code>byobu-screen -ls\n</code></pre> <p>If it says (Detached) next to the <code>workshop</code> session in the list, reattach to <code>workshop</code> by:</p> <pre><code>byobu-screen -r workshop\n</code></pre> <p>If it says (Attached) next to the <code>workshop</code> session in the list, you can access <code>workshop</code> which is already attached by:</p> <pre><code>byobu-screen -r -d workshop\n</code></pre>"},{"location":"tutorials/workshop_delivery_mode_info/workshops_nectar/#detaching-or-terminating-a-byobu-screen-session","title":"Detaching or Terminating a byobu-screen session.","text":"<ul> <li> <p>To detach from <code>workshop</code>, type <code>ctrl-a ctrl-d</code> while inside the <code>workshop</code> session. (You will need to configure Byobu\u2019s ctrl-a behaviour if it hasn\u2019t already been configured (text will appear on the screen telling you this). Follow the information on the screen and select <code>1</code> for Screen mode).</p> </li> <li> <p>To terminate <code>workshop</code>, type <code>ctrl-d</code> while inside the <code>workshop</code> session.</p> </li> </ul>"},{"location":"tutorials/workshop_delivery_mode_info/workshops_nectar/#applying-for-your-own-nectar-allocation","title":"Applying for your own Nectar Allocation","text":"<p>Should you wish to do this tutorial at a later stage independently, it is possible to apply for your own instance directly through a Nectar allocation. There are also many helpful Nectar Research Cloud tutorials. You will need to install your required software.</p>"}]}